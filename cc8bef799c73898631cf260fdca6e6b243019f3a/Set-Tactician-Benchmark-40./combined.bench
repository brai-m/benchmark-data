
Coq.micromega.OrderedRing.rplus_morph_Proper	40	16.1.0	search with cache (only 1: intros A B H; only 1: intro; only 1: firstorder  (subst; auto)).	0.712813854218	908
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	16.1	search with cache (only 1: intros A B H; only 1: firstorder  (subst; auto)).	0.572672128677	669
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	41	search with cache (only 1: firstorder).	4.20393395424	8654
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0188250541687	3
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.13	search with cache (only 1: intros; only 1: ring).	0.0429191589355	75
Coq.micromega.OrderedRing.Rplus_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0237309932709	6
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0182859897614	3
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0230259895325	6
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40	1.0.5.0.2.3.0.2.2.0.5.14.1	search with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq in H; only 1: left; only 1: now destruct H; only 1: rewrite H; only 1: rewrite Rlt_le_neq; only 1: left; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq; only 1: rewrite Rlt_le_neq in H; only 1: now right).	30.8729832172	26200
Coq.micromega.OrderedRing.Rlt_neq	40	2.0.4.1	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0765719413757	93
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.0601148605347	1
Coq.micromega.Ztac.elim_concl_eq	40	15.1.1	search with cache (only 1: intros x y z; only 1: intuition; only 1: Z.order).	0.948091030121	1139
Coq.micromega.Ztac.elim_concl_le	40	8.0	search with cache (only 1: intros x y H; only 1: Z.order).	0.0152769088745	10
Coq.micromega.Ztac.elim_concl_lt	40	6	search with cache (only 1: Z.order).	0.714854955673	295
Coq.micromega.Ztac.Zlt_le_add_1	40	0.1.1.6	search with cache (only 1: intros; only 1: Z.nzsimpl; only 1: apply Z.le_succ_l; only 1: auto).	0.759924888611	117
Coq.micromega.Ztac.add_le	40	1.1	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0267322063446	13
Coq.micromega.Ztac.mul_le	40	0.0.16.0	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	1.27837204933	1095
Coq.micromega.ZifyInst.PropAnd	40	6.13	search with cache (only 1: split; only 1: tauto).	0.291636943817	229
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0900530815125	2
Coq.micromega.ZifyInst.PropArrow	40	0.4	search with cache (only 1: constructor; only 1: tauto).	0.0787100791931	6
Coq.micromega.ZifyInst.PropIff	40	0.0.1	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0862448215485	4
Coq.micromega.ZifyInst.PropNot	40	0.0.1	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0515480041504	4
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.0.0.0.3.0.0.0.0.0.4.2	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	3.09055709839	1890
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40	6.0.11	search with cache (only 1: intro; only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: firstorder).	0.955264091492	514
Coq.micromega.ZCoeff.req_trans	40	8.1.1	search with cache (only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: firstorder).	39.8777480125	758
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0130879878998	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0133430957794	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0127780437469	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0123379230499	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0124289989471	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0533120632172	6
Coq.micromega.ZCoeff.ring_ops_wd	40	2.2.2.0	search with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.0584349632263	23
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.7.5	search with cache (only 1: intros x z H'; only 1: intros Eq0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	2.86465811729	939
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.14.0	search with cache (only 1: intros; only 1: rewrite <- Rplus_comm; only 1: auto with real).	5.03643202782	2864
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	2.0.2.0.1.1	search with cache (only 1: intros; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: apply Rge_le; only 1: auto with real).	7.43431520462	2116
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.4.7.1	search with cache (only 1: intros; only 1: replace 0 with x * 0; only 1: auto with real; only 1: ring).	2.19804191589	887
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	17	search with cache (only 1: intuition Z.order).	0.937296867371	634
Coq.micromega.ZMicromega.lt_le_iff	40	6.7	search with cache (only 1: intro n; only 1: apply Z.lt_le_pred).	0.564352035522	207
Coq.micromega.ZMicromega.le_0_iff	40	1.1.9.0	search with cache (only 1: intros n m; only 1: constructor; only 1: now apply Z.le_0_sub; only 1: now apply Z.le_0_sub).	0.623322963715	432
Coq.micromega.ZMicromega.le_neg	40	0.0.0.7.3	search with cache (only 1: intros a; only 1: rewrite ?Z.opp_pos_neg; only 1: intuition; only 1: Z.order; only 1: Z.order).	1.06248998642	661
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1	search with cache (only 1: auto with *).	0.0138108730316	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.14.4	search with cache (only 1: intros s1; only 1: elim s1; only 1: now split; only 1: now split; only 1: now split).	2.45798110962	1820
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.1.2	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: now split; only 1: now split).	0.0385439395905	8
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40	0.6.0.0.1.31.10.17	search with cache (only 1: intros x y H; only 1: destruct x; only 1: destruct z; only 1: intuition congruence; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	32.3639221191	42608
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.3.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: easy).	0.0891060829163	13
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0387330055237	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	0.6	search with cache (only 1: intros n; only 1: now destruct n).	0.0255479812622	8
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	9.5	search with cache (only 1: intros; only 1: now destruct x).	0.824654102325	520
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	9.16.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	7.69024610519	9826
Coq.micromega.Env.jump_succ	40	9.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.400442123413	223
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	1.0.2	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0652120113373	19
Coq.micromega.Env.nth_pred_double	40	1.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0392310619354	4
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0184280872345	4
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	10	search with cache (only 1: destr_bool).	0.0261480808258	25
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1.0	search with cache (only 1: simpl; only 1: solve [ auto ]).	0.0124540328979	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	2.0	search with cache (only 1: simpl; only 1: easy).	0.0128879547119	4
Coq.micromega.Tauto.is_cnf_tt_inv	40
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.3.2	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: auto; only 1: auto).	0.0243399143219	9
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	1.1.0.13.9.0.5.11.3	search with cache (only 1: unfold cnf_ff; only 1: intros l; only 1: induction l as [| ? ? H]; only 1: auto; only 1: destruct a; only 1: destruct l as [| a l']; only 1: auto; only 1: auto; only 1: auto).	32.3374671936	84961
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	2.0.0.3.20.4.2	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: destr_bool; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: easy).	5.58022809029	10771
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40	0.33.13	search with cache (only 1: intros a r; only 1: fix odd_spec 1; only 1: intuition).	26.9903371334	18407
Coq.micromega.Tauto.eval_cnf_ff	40	12.3	search with cache (only 1: intuition; only 1: firstorder).	1.77546215057	1179
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0189599990845	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	9	search with cache (only 1: firstorder).	0.768876075745	12
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.1.4	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: intros; only 1: rewrite !make_conj_cons in *; only 1: tauto).	0.507782936096	175
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.1.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0347201824188	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.2.0.7.2.4.2.17	search with cache (only 1: intros n; only 1: split; only 1: repeat red; only 1: now destruct n; only 1: destruct n; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith; only 1: auto with zarith).	8.69540500641	10374
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0100998878479	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0107591152191	1
Coq.micromega.EnvRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0112810134888	2
Coq.micromega.EnvRing.rsub_ext_Proper	40	0.6	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0380461215973	8
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40	0.0.3.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal).	0.0325899124146	17
Coq.micromega.EnvRing.Pjump_pred_double	40	0.1.2.4.0.6.1.3.13.0.0	search with cache (only 1: apply env_morph; only 1: intros; only 1: unfold tail; only 1: rewrite <- jump_add; only 1: f_equal; only 1: destruct p; only 1: apply Pos.add_comm; only 1: simpl; only 1: f_equal; only 1: apply Pos.succ_pred_double; only 1: apply Pos.add_comm).	36.180685997	22477
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.1.0.0.1.1.2.1.1.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: rsimpl; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	37.7840328217	9961
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	1.2.0.0.0.0.0.5.2.1.1.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	5.67383003235	2702
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0196928977966	6
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.4	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0267300605774	9
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.0.23	search with cache (only 1: induction M; only 1: rsimpl; only 1: rsimpl; only 1: rsimpl).	1.62313199043	1010
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0946028232574	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0587708950043	1
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.140412807465	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.153020143509	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.120533943176	1
Coq.micromega.RingMicromega.rminus_morph_Proper	40	2.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.113324165344	7
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.3.0.1.10	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.241285085678	343
Coq.micromega.Refl.make_impl_map	40	1.4.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: firstorder  (subst; auto)).	0.0340740680695	20
Coq.micromega.Refl.make_conj_cons	40	2.2.0.0.1.4.4	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: auto; only 1: split; only 1: auto; only 1: auto).	3.5226020813	5509
Coq.micromega.Refl.make_conj_impl	40	2.2.3.0.1.0.0.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: tauto; only 1: tauto).	13.6862909794	8330
Coq.micromega.Refl.make_conj_in	40	1.2.1.3.9.0.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: destruct l; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: subst; only 1: firstorder).	23.6369798183	33031
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	14.4	search with cache (only 1: intros; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.404031038284	285
Coq.micromega.QMicromega.QNpower	40	0.0.0.0	search with cache (only 1: intros r [| n]; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.0861029624939	4
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	13	search with cache (only 1: exact RTheory).	1.84742617607	437
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	6.1	search with cache (only 1: intro; only 1: field).	0.0470230579376	9
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	3.26	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: auto with real).	6.64513516426	3859
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	8.0.3.3.0.11.6.1.3	search with cache (only 1: destruct z; only 1: simpl; only 1: intros; only 1: intros n; only 1: destruct z; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: congruence; only 1: now destruct n).	27.97874403	26924
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0351679325104	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	1.0.10.0.2.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: now destruct p; only 1: trivial).	10.321171999	11236
Coq.rtauto.Bintree.map_app	40	1.2.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.37122297287	232
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.026328086853	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.1.3.0.0.1.4.1	search with cache (only 1: induction l; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: induction i; only 1: auto; only 1: simpl; only 1: auto).	5.02521109581	4882
Coq.rtauto.Bintree.Lget_app_Some	40	0.1.5.0.2.1	search with cache (only 1: induction l; only 1: now discriminate; only 1: simpl Lget; only 1: induction i; only 1: auto; only 1: auto).	1.42063999176	1238
Coq.rtauto.Bintree.Tget_Tempty	40	5.0.1.0	search with cache (only 1: intros; only 1: revert p; only 1: intros; only 1: now induction p).	0.0430510044098	18
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.0.15.3	search with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.262915849686	391
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.1.9.3.3	search with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intros H; only 1: destr_eq H; only 1: congruence).	0.606476068497	486
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40	0.14	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.381764173508	662
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	2.1.19	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros x y z; only 1: auto).	3.10214805603	4942
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	0.1.3.0.1.0.1.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intro z; only 1: apply IHF; only 1: auto).	4.13093614578	3524
Coq.rtauto.Rtauto.compose3	40	0.3.5.0.2.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: intros S F; only 1: auto; only 1: intros A H; only 1: simpl; only 1: intros y H0 H1; only 1: apply IHF; only 1: auto).	23.8053860664	23184
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40	3.19	search with cache (only 1: fix even_spec 1; only 1: solve [ auto ]).	4.00824689865	4812
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	3.1.2.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with x - y + y; only 1: setoid_rewrite H; only 1: cring; only 1: cring).	0.867110967636	57
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	3.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0438771247864	12
Coq.nsatz.Nsatz.Rext	40	0.0.0.7	search with cache (only 1: apply mk_reqe; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.191461086273	25
Coq.nsatz.Nsatz.Rset	40	2.0	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0372738838196	13
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.08864402771	1
Coq.omega.OmegaLemmas.Zred_factor1	40	0.1	search with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0358259677887	3
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.737097978592	26
Coq.omega.OmegaLemmas.Zred_factor4	40	12.13	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	4.60810899734	1021
Coq.omega.OmegaLemmas.Zred_factor5	40	15	search with cache (only 1: now Z.nzsimpl).	0.148910999298	91
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0318682193756	1
Coq.omega.OmegaLemmas.new_var	40	0.45.4	search with cache (only 1: intros; only 1: exists x; only 1: reflexivity).	3.35773205757	6623
Coq.omega.OmegaLemmas.OMEGA1	40	1	search with cache (only 1: Z.order).	0.0330798625946	2
Coq.omega.OmegaLemmas.OMEGA2	40	0.14.0.18	search with cache (only 1: destruct x; only 1: trivial; only 1: easy || now destruct y; only 1: easy).	6.37404704094	1804
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	10.21	search with cache (only 1: intros Hx Hxy; only 1: now subst).	1.20975279808	599
Coq.omega.OmegaLemmas.OMEGA6	40	4.4.5.5.9	search with cache (only 1: intros LT -> EQ; only 1: destruct x; only 1: easy || now destruct 1; only 1: easy || now destruct y; only 1: easy || now destruct y).	3.93133497238	1140
Coq.omega.OmegaLemmas.OMEGA7	40	2.8.7	search with cache (only 1: Z.swap_greater; only 1: intros a b Ha Hb; only 1: Z.order_pos).	2.11896681786	244
Coq.omega.OmegaLemmas.OMEGA8	40	2.16.0.25	search with cache (only 1: destruct x; only 1: reflexivity; only 1: easy || now destruct y; only 1: now destruct 1 || trivial).	19.5159749985	2727
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.251481056213	4
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0408260822296	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.193084955215	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0795161724091	20
Coq.omega.OmegaLemmas.OMEGA16	40	4.1	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.0816869735718	7
Coq.omega.OmegaLemmas.OMEGA17	40	1.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0852408409119	3
Coq.omega.OmegaLemmas.OMEGA18	40	3.7.9	search with cache (only 1: intros H1 H2 H3; only 1: subst; only 1: auto with arith).	1.40123486519	347
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.1.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0926389694214	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	3.10.17	search with cache (only 1: intros H; only 1: subst; only 1: now destruct x).	2.48923206329	1746
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.2.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0624048709869	8
Coq.omega.PreOmega.Z.rem_0_r_ext	40	1.5.2	search with cache (only 1: intro; only 1: subst; only 1: now destruct x).	0.0783240795135	32
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0608131885529	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.2.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0735311508179	5
Coq.btauto.Algebra.Decidable_complete	40	0.2.10.0	search with cache (only 1: intros P H Hp; only 1: simpl; only 1: apply <- Decidable_spec; only 1: assumption).	2.31032705307	208
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0808188915253	5
Coq.btauto.Algebra.Decidable_complete_alt	40	3.3.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl in *; only 1: intuition congruence).	0.0968239307404	17
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	0.0.0.2	search with cache (only 1: rewrite Pos.eqb_eq; only 1: split; only 1: auto; only 1: auto).	0.188577890396	63
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.0.10.6.1.1	search with cache (only 1: intros x y H; only 1: apply eq_true_iff_eq; only 1: compute; only 1: destruct H as [H1 H2]; only 1: first [ discriminate | constructor ]; only 1: first [ discriminate | constructor ]; only 1: first [ discriminate | constructor ]).	3.48149514198	2324
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2.0.0	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0871548652649	5
Coq.btauto.Reflect.list_nth_succ	40	26.1.2	search with cache (only 1: intros A def l; only 1: unfold list_nth; only 1: now rewrite Pos.peano_rect_succ).	14.5430288315	10952
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.0.0.3.0.1.0.3	search with cache (only 1: intros; only 1: induction n using Pos.peano_rect; only 1: reflexivity; only 1: rewrite list_nth_succ; only 1: unfold make_last; only 1: unfold list_nth; only 1: rewrite Pos.peano_rect_succ; only 1: auto).	13.0630321503	5617
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	12	search with cache (only 1: auto with arith).	0.0393481254578	53
Coq.funind.Recdef.Splus_lt	40	6	search with cache (only 1: auto with arith).	0.0402679443359	19
Coq.funind.Recdef.SSplus_lt	40	6	search with cache (only 1: auto with arith).	0.121240139008	113
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0507431030273	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	3.0.0.0.0.0.0	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: symmetry in EQ; only 1: symmetry in EQ; only 1: symmetry in EQ; only 1: symmetry in EQ; only 1: discriminate).	0.0959770679474	17
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	6	search with cache (only 1: assumption).	0.0369160175323	7
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0364961624146	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	2.1.0.0.1.2.3.1.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	12.1748008728	1471
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	10.0	search with cache (only 1: intros; only 1: Esimpl2).	1.77594685555	179
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	3.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.728475093842	35
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.1.1.1.0.0.0.0.23	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.85271596909	1645
Coq.setoid_ring.Ring.bool_eq_ok	40	16	search with cache (only 1: destr_bool).	0.0905270576477	193
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	2	search with cache (only 1: exact (Radd_ext Reqe)).	0.0297770500183	3
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0279040336609	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	3	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0295879840851	4
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	4	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0325281620026	5
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	0.6	search with cache (only 1: elim ARth; only 1: trivial).	0.0459549427032	8
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40	0	search with cache (only 1: now intros l l' <- P Q H).	0.0306098461151	1
Coq.setoid_ring.Field_theory.rsub_0_l	40
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40	1.24.22	search with cache (only 1: rewrite rdiv_def, rmul_comm; only 1: rewrite rdiv_def, rmul_comm; only 1: trivial).	1.51682686806	1282
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.0681009292603	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40
Coq.setoid_ring.Field_theory.PEpow_0_r	40
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.1.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.0546939373016	4
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40	2.32	search with cache (only 1: Bool.destr_bool; only 1: auto).	3.19081902504	1349
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.4.0.0.3	search with cache (only 1: simpl; only 1: destruct l1; only 1: trivial; only 1: destruct 1; only 1: trivial).	1.08285999298	327
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.2	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.0570330619812	4
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0404629707336	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0401048660278	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0397391319275	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	10	search with cache (only 1: exact eq_equivalence).	0.0751268863678	33
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	0.0.0.14	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.279104948044	229
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	2.11.2	search with cache (only 1: intros x y z; only 1: subst; only 1: reflexivity).	1.91325998306	1224
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0197050571442	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	8.21	search with cache (only 1: split; only 1: Bool.destr_bool).	0.202491044998	527
Coq.setoid_ring.Ring_theory.IDmorph	40	35	search with cache (only 1: firstorder).	1.13651394844	2063
Coq.setoid_ring.Ring_theory.Eqsth	40	2	search with cache (only 1: auto with *).	0.0188250541687	3
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	3.3.10	search with cache (only 1: constructor; only 1: auto with *; only 1: auto with *).	0.273540973663	223
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.158257007599	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	25	search with cache (only 1: firstorder).	1.21605014801	1318
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	3.8	search with cache (only 1: intros; only 1: auto).	0.177118062973	55
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.4.3.4	search with cache (only 1: constructor; only 1: exact (SRadd_ext SReqe); only 1: exact (SRmul_ext SReqe); only 1: intros x y H; only 1: exact H).	0.403294086456	240
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	6	search with cache (only 1: reflexivity).	0.022255897522	7
Coq.setoid_ring.Ring_theory.SRopp_add	40	2	search with cache (only 1: reflexivity).	0.0218379497528	3
Coq.setoid_ring.Ring_theory.SRsub_def	40	1	search with cache (only 1: reflexivity).	0.0217938423157	2
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	45.5.11	search with cache (only 1: intros n; only 1: intros x y H; only 1: firstorder).	39.9042460918	69805
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	7	search with cache (only 1: trivial).	0.0558729171753	8
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	4	search with cache (only 1: mrewrite).	0.0722451210022	5
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0679829120636	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0364689826965	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0353398323059	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0356340408325	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	6	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0578880310059	11
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0385808944702	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	2.1.4.6	search with cache (only 1: intros a; only 1: intros; only 1: subst; only 1: rrefl).	0.732800960541	569
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.4.0.2.0.2.0.1.0.0	search with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now try N.order'; only 1: simpl; only 1: now try N.order'; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	4.12380290031	2922
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0383760929108	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0373668670654	1
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0379710197449	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0370781421661	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.037889957428	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0394330024719	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.167077064514	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	1.1.1.2	search with cache (only 1: induction x; only 1: simpl; only 1: norm; only 1: norm).	0.0691919326782	9
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0361931324005	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0359132289886	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0363740921021	1
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0371098518372	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	5.7.6.7	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	4.70632314682	1273
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40	5.0.0.0.2.0.2.1	search with cache (only 1: constructor; only 1: intros; only 1: generalize (Z.quotrem_eq a b); only 1: case Z.quotrem; only 1: intros; only 1: subst; only 1: rewrite Z.mul_comm; only 1: reflexivity).	1.94185709953	966
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0266509056091	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0267610549927	1
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0281510353088	2
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	0.11	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.21735906601	88
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	2.2	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.335341930389	21
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	3.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.122889995575	15
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40	0.56	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	20.0006752014	42734
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40	2.29	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	9.21314001083	13064
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0349850654602	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.1.0.6	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.303377866745	58
Coq.setoid_ring.Ncring.ring_add_assoc1	40	0.4.1.1	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.162545919418	25
Coq.setoid_ring.Ncring.ring_add_assoc2	40
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	3.0.0.0.1	search with cache (only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool; only 1: trivial).	0.0946159362793	22
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.1.3.6.10	search with cache (only 1: intro; only 1: intros; only 1: apply Q_Setoid; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	2.19012594223	901
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0141739845276	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00752592086792	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	3	search with cache (only 1: by case : {}k {}).	0.00922703742981	4
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.13	search with cache (only 1: destruct 1; only 1: tauto).	0.030702829361	92
Coq.ssr.ssreflect.iffLR	40	4	search with cache (only 1: intuition).	0.0333490371704	5
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.0088849067688	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: intuition).	0.0202040672302	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.00981783866882	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	2	search with cache (only 1: Bool.destr_bool).	0.0117120742798	3
Coq.ssr.ssrbool.is_true_true	40	9	search with cache (only 1: by [  ]).	0.0310399532318	10
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: by [  ]).	0.0512139797211	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.9	search with cache (only 1: unlock; only 1: by [  ]).	0.0149419307709	21
Coq.ssr.ssrbool.negbT	40	4	search with cache (only 1: Bool.destr_bool).	0.0101819038391	5
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.0092990398407	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00969505310059	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00940895080566	1
Coq.ssr.ssrbool.negbK	40	1	search with cache (only 1: by case).	0.0324549674988	2
Coq.ssr.ssrbool.negbNE	40	6	search with cache (only 1: by case : {}b {}).	0.0157310962677	7
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40	7	search with cache (only 1: Bool.destr_bool).	0.0196869373322	8
Coq.ssr.ssrbool.negbRL	40	8	search with cache (only 1: Bool.destr_bool).	0.0189790725708	9
Coq.ssr.ssrbool.contra	40	2.10	search with cache (only 1: Bool.destr_bool; only 1: tauto).	0.130707025528	63
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0143179893494	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0140070915222	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.014111995697	1
Coq.ssr.ssrbool.contraT	40	6.12	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.386944055557	165
Coq.ssr.ssrbool.wlog_neg	40	1	search with cache (only 1: by case : {}b {} =>// {+}->).	0.014219045639	2
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40
Coq.ssr.ssrbool.contraTF	40	6.10	search with cache (only 1: Bool.destr_bool; only 1: intuition).	3.83600497246	126
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	5	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0144519805908	6
Coq.ssr.ssrbool.ifT	40	15	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0917608737946	109
Coq.ssr.ssrbool.ifF	40	2	search with cache (only 1: by move {+}->).	0.0764110088348	3
Coq.ssr.ssrbool.ifN	40	11	search with cache (only 1: by case : {}b {} =>// {+}->).	0.0399260520935	60
Coq.ssr.ssrbool.if_same	40	11	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.216017007828	33
Coq.ssr.ssrbool.if_neg	40	2	search with cache (only 1: by case b).	0.335323095322	3
Coq.ssr.ssrbool.fun_if	40	2	search with cache (only 1: by case b).	0.0083589553833	3
Coq.ssr.ssrbool.if_arg	40	1	search with cache (only 1: by case b).	0.00824189186096	2
Coq.ssr.ssrbool.ifE	40	4	search with cache (only 1: trivial).	0.0341029167175	5
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.337234973907	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0131301879883	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.272248029709	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.4	search with cache (only 1: intuition; only 1: by case : {}Pb {}; constructor; auto).	0.0186989307404	6
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	1.0.9	search with cache (only 1: split; only 1: exact : {}introTF {}true {}_ {}; only 1: exact : {}elimTF {}true {}_ {}).	0.143505811691	63
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	8	search with cache (only 1: by case).	0.228229045868	9
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.11522102356	2
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0152192115784	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0194141864777	1
Coq.ssr.ssrbool.pair_andP	40	4	search with cache (only 1: intuition).	0.106604099274	5
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00795388221741	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00805497169495	1
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.0216429233551	2
Coq.ssr.ssrbool.negPn	40	1	search with cache (only 1: by case b1; constructor).	0.00831007957458	2
Coq.ssr.ssrbool.negPf	40	16	search with cache (only 1: by case b1; constructor; auto).	0.549529075623	108
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	6	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0240797996521	7
Coq.ssr.ssrbool.norP	40	1	search with cache (only 1: by case b1; case b2; <ssreflect_plugin::ssrtclintros@0> constructor =>//; case).	0.0219619274139	2
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0102150440216	1
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.00750708580017	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by constructor; case).	0.0316779613495	1
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40	2	search with cache (only 1: by case).	0.0225281715393	3
Coq.ssr.ssrbool.andbb	40	1	search with cache (only 1: by case).	0.010272026062	2
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00882911682129	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0109570026398	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0145881175995	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0347909927368	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00714802742004	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0320229530334	1
Coq.ssr.ssrbool.orbT	40	3	search with cache (only 1: by case).	0.0127770900726	4
Coq.ssr.ssrbool.orbF	40	1	search with cache (only 1: by case).	0.0104880332947	2
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00839185714722	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0104591846466	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0146160125732	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0146420001984	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0145440101624	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0219728946686	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.203070878983	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00942087173462	1
Coq.ssr.ssrbool.orbN	40	4	search with cache (only 1: Bool.destr_bool).	0.00872611999512	5
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.00858116149902	1
Coq.ssr.ssrbool.andb_orl	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0173871517181	2
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0150210857391	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.014955997467	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0149381160736	1
Coq.ssr.ssrbool.andb_idl	40	8.0	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.277382135391	10
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0143358707428	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0166170597076	1
Coq.ssr.ssrbool.andb_id2r	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0799310207367	2
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0150339603424	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0146231651306	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0826110839844	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0441679954529	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0105249881744	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: Bool.destr_bool).	0.0105009078979	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0110671520233	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0109338760376	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0110149383545	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0110421180725	1
Coq.ssr.ssrbool.implybT	40	3	search with cache (only 1: by case : {}b {} =>// {+}->).	0.012843132019	4
Coq.ssr.ssrbool.implybF	40	1	search with cache (only 1: trivial).	0.00813484191895	2
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : {}b {}).	0.00856304168701	1
Coq.ssr.ssrbool.implyTb	40	2	search with cache (only 1: trivial).	0.00828194618225	3
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : {}b {}).	0.0084490776062	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0113708972931	1
Coq.ssr.ssrbool.implybE	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.014328956604	2
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0112500190735	1
Coq.ssr.ssrbool.implybN	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0145599842072	2
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0112679004669	1
Coq.ssr.ssrbool.implyb_idl	40	3	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0679490566254	4
Coq.ssr.ssrbool.implyb_idr	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0174927711487	2
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.151214838028	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00774717330933	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00849390029907	1
Coq.ssr.ssrbool.addbb	40	0	search with cache (only 1: by case).	0.00857400894165	1
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0106210708618	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0146510601044	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0147469043732	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0147910118103	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0218939781189	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0148961544037	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0149550437927	1
Coq.ssr.ssrbool.addKb	40	8	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.018345117569	9
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0106110572815	1
Coq.ssr.ssrbool.addIb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0162777900696	1
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01629114151	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.00887179374695	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : {}b {}).	0.0108349323273	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0161430835724	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0113728046417	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	3	search with cache (only 1: by [  ]).	0.0087571144104	4
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	3	search with cache (only 1: by case : {}pT {}pp {}).	0.0110149383545	4
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : {}msp {} =>_ /= {+}->).	0.0100679397583	1
Coq.ssr.ssrbool.unfold_in	40	3	search with cache (only 1: Bool.destr_bool).	0.00845813751221	4
Coq.ssr.ssrbool.simpl_predE	40	0	search with cache (only 1: by [  ]).	0.00783085823059	1
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.00813603401184	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	3	search with cache (only 1: by rewrite -mem_topred).	0.00968408584595	4
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	2	search with cache (only 1: auto).	0.113612174988	3
Coq.ssr.ssrbool.in1W	40
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00986003875732	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.0104229450226	1
Coq.ssr.ssrbool.in1T	40
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.015084028244	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0160238742828	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.0145020484924	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.112941026688	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.329673051834	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.514807939529	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.465850830078	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00998282432556	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.111423969269	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.231726169586	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.088879108429	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  {}=>? ?; auto).	0.423166036606	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.76159620285	2
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  {}=>? ?; auto).	0.650522947311	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	1.08011889458	1
Coq.ssr.ssrbool.canLR_on	40	0	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	0.158064126968	1
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	0.468605041504	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0631811618805	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0666058063507	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.187345027924	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40	4	search with cache (only 1: by move  {}=>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD {}; [ apply : {}fK {} | apply : {}g'K {} ]).	0.0525398254395	5
Coq.ssr.ssrbool.sub_in2	40
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  {}=>/= sub1 sub; apply : {}sub_in111 {}).	0.0128951072693	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00965094566345	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.519460916519	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.232225894928	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	1.09098696709	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.00781798362732	1
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40
Coq.ssr.ssrfun.fsym	40	0.6	search with cache (only 1: intros; only 1: by [  ]).	0.0128769874573	8
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0.3	search with cache (only 1: intros H ?; only 1: trivial).	0.00783491134644	5
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	2.0.0.5.7	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: Bool.destr_bool).	10.2208721638	439
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.190328836441	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : {}u {}).	0.00870704650879	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : {}u {}).	0.00883102416992	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.301216840744	1
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.644530057907	2
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.327110052109	1
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40	0.8	search with cache (only 1: subst; only 1: trivial).	0.0353920459747	10
Coq.ssr.ssrfun.inj_id	40	4	search with cache (only 1: by [  ]).	0.0108950138092	5
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.1	search with cache (only 1: intros A P; only 1: auto).	0.00424289703369	3
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00315284729004	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	1	search with cache (only 1: now trivial).	0.00342297554016	2
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	1	search with cache (only 1: now trivial).	0.00520396232605	12
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00363707542419	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.9.8	search with cache (only 1: intros m n v1; only 1: intros * ->; only 1: trivial).	0.43686413765	674
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	1.0.1	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0189111232758	5
Coq.Vectors.VectorSpec.const_nth	40	0.0.14.7	search with cache (only 1: generalize dependent n; only 1: induction p; only 1: now simpl; only 1: now simpl).	0.564214944839	542
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.0140039920807	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0284559726715	9
Coq.Vectors.VectorSpec.uncons_cons	40	0	search with cache (only 1: trivial).	0.0128090381622	1
Coq.Vectors.VectorSpec.append_comm_cons	40	2.0	search with cache (only 1: intros; only 1: now simpl).	0.015105009079	4
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	17.0.2.5.11	search with cache (only 1: pattern n; only 1: induction n as [| n IH]; only 1: simpl; only 1: auto with arith; only 1: left).	3.15759396553	8340
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.10	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0692269802094	96
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0105710029602	1
Coq.Setoids.Setoid.Seq_sym	40	0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: firstorder).	0.0117681026459	3
Coq.Setoids.Setoid.Seq_trans	40	3.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0185730457306	16
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: simpl_relation).	0.0138471126556	3
Coq.Bool.IfProp.Iftrue_inv	40
Coq.Bool.IfProp.Iffalse_inv	40
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0219810009003	13
Coq.Bool.IfProp.IfProp_or	40	0.1.4.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto with bool; only 1: auto with bool).	0.034823179245	59
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	2.0.19	search with cache (only 1: induction n; only 1: reflexivity; only 1: easy).	0.560788154602	616
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.041002035141	3
Coq.Bool.Zerob.zerob_false_intro	40	1.1.3	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: trivial).	0.117147922516	24
Coq.Bool.Zerob.zerob_false_elim	40	6.1.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: discriminate).	0.0804731845856	31
Coq.Bool.DecBool.ifdec_left	40	10.4.1.8.2	search with cache (only 1: intros; only 1: destruct H; only 1: trivial; only 1: apply False_rec; only 1: auto).	0.759293079376	8816
Coq.Bool.DecBool.ifdec_right	40	0.8.1.2.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: apply False_rec; only 1: auto; only 1: auto).	0.315314054489	2011
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	1.2.1.2.0	search with cache (only 1: destruct b; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0181751251221	62
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00902414321899	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40
Coq.Bool.Sumbool.sumbool_not	40	3.3.6	search with cache (only 1: case H1; only 1: auto; only 1: auto).	0.0179722309113	96
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	2	search with cache (only 1: discriminate).	0.00402402877808	3
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00319886207581	1
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40	1.7.7.2.10.8	search with cache (only 1: unfold not; only 1: intro A; only 1: intro H1; only 1: destr_bool; only 1: elim H1; only 1: destr_bool).	0.227486133575	1707
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00543117523193	3
Coq.Bool.Bool.not_true_iff_false	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00701999664307	3
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00717878341675	3
Coq.Bool.Bool.leb_implb	40	1.1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.00944304466248	10
Coq.Bool.Bool.eqb_subst	40	1	search with cache (only 1: destr_bool).	0.00868606567383	18
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00402688980103	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00489401817322	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0792980194092	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0109269618988	5
Coq.Bool.Bool.negb_orb	40	1	search with cache (only 1: destr_bool).	0.00523400306702	2
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00475382804871	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.00376391410828	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00355410575867	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00536704063416	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.00469398498535	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00430297851562	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00417017936707	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00431394577026	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00624704360962	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00643396377563	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0120820999146	5
Coq.Bool.Bool.orb_false_iff	40	1.1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.011027097702	10
Coq.Bool.Bool.orb_true_elim	40	1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00881314277649	7
Coq.Bool.Bool.orb_prop	40	1.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.00823903083801	8
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: assumption).	0.0108268260956	11
Coq.Bool.Bool.orb_false_intro	40	1	search with cache (only 1: destr_bool).	0.00550889968872	2
Coq.Bool.Bool.orb_false_elim	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00662207603455	3
Coq.Bool.Bool.orb_diag	40	3.0	search with cache (only 1: intros; only 1: destr_bool).	0.00503611564636	5
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00409817695618	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00433778762817	1
Coq.Bool.Bool.orb_false_r	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.00696492195129	9
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00405693054199	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00425410270691	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00467300415039	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.00761079788208	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0616080760956	52
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0122299194336	5
Coq.Bool.Bool.andb_true_eq	40	2.3	search with cache (only 1: destr_bool; only 1: repeat split).	0.0299649238586	71
Coq.Bool.Bool.andb_false_intro1	40	3.4.0	search with cache (only 1: destruct b2; only 1: destr_bool; only 1: destr_bool).	0.00633811950684	10
Coq.Bool.Bool.andb_false_intro2	40	0.1.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00480699539185	4
Coq.Bool.Bool.andb_false_r	40	0.1.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00471997261047	4
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00412201881409	1
Coq.Bool.Bool.andb_diag	40	1.0	search with cache (only 1: intros; only 1: destr_bool).	0.00416302680969	3
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00390386581421	2
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00354504585266	2
Coq.Bool.Bool.andb_false_elim	40	5.1.1.4	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0429060459137	157
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00461888313293	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00484204292297	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00711703300476	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00774788856506	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00741004943848	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00744104385376	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00786709785461	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.005704164505	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00558590888977	1
Coq.Bool.Bool.xorb_false_r	40	1	search with cache (only 1: destr_bool).	0.00462889671326	2
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00444006919861	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00443291664124	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00308799743652	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0043580532074	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0054337978363	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00777888298035	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00621318817139	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00825500488281	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00759387016296	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00760698318481	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.00763893127441	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0052227973938	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00550198554993	5
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.00629305839539	5
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0157270431519	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00943088531494	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00599789619446	3
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00613498687744	2
Coq.Bool.Bool.absurd_eq_bool	40	3.3.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00685501098633	9
Coq.Bool.Bool.absurd_eq_true	40	3.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00486397743225	5
Coq.Bool.Bool.trans_eq_bool	40	1	search with cache (only 1: destr_bool).	0.00768899917603	2
Coq.Bool.Bool.Is_true_eq_true	40	3.3	search with cache (only 1: destr_bool; only 1: intuition).	0.00651788711548	8
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00474500656128	1
Coq.Bool.Bool.Is_true_eq_right	40	0	search with cache (only 1: destr_bool).	0.00461196899414	1
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00427508354187	1
Coq.Bool.Bool.eqb_eq	40	0.0.2	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00625896453857	5
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto with bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00785207748413	5
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00620293617249	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00819706916809	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.00956320762634	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.2	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0106010437012	5
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0086498260498	3
Coq.Bool.Bool.negb_prop_elim	40	4.0	search with cache (only 1: unfold not; only 1: destr_bool).	0.00697708129883	6
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00617098808289	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00607895851135	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00638103485107	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00650405883789	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00498414039612	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00618290901184	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00586795806885	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	0.0.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0200719833374	15
Coq.Bool.Bool.reflect_dec	40	0.0.10.5	search with cache (only 1: intro A; only 1: destruct 1; only 1: auto; only 1: auto).	0.828256130219	1198
Coq.Bool.Bool.eqb_spec	40	6.3.3.6.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.203669071198	492
Coq.Bool.BoolEq.beq_eq_true	40	0.9.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0274810791016	61
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40	17.2.0.3.13.14.20	search with cache (only 1: intros x; only 1: intros N; only 1: induction N as [| a l Hal N IH]; only 1: auto; only 1: simpl; only 1: intuition; only 1: firstorder).	17.5439009666	46785
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	1.1.1.0.3.6.0	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	2.62650203705	3539
Coq.Lists.ListSet.set_mem_correct2	40	9.0.0.0.0.2.0.2	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: intuition).	29.773059845	36378
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.2.3.2.4.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intuition; only 1: elim (Aeq_dec a a0); only 1: Bool.destr_bool; only 1: now subst; only 1: auto with datatypes).	9.41748690605	16802
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.3.1.0.2.1.0.4.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec b a0); only 1: intro eq; only 1: rewrite eq; only 1: left; only 1: auto with datatypes; only 1: simpl; only 1: auto).	4.7186589241	8651
Coq.Lists.ListSet.set_add_intro	40	0.0.3	search with cache (only 1: inversion 1; only 1: auto with datatypes; only 1: auto with datatypes).	0.0367369651794	42
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	1.0.0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	0.873528003693	743
Coq.Lists.ListSet.set_add_not_empty	40	6.7.6.3.0.1.3	search with cache (only 1: simple induction x; only 1: easy; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: discriminate).	26.2132890224	17136
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40	0.0.3.0.11.3.0.0.0.3	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: destruct (Aeq_dec b x); only 1: intuition; only 1: now subst; only 1: simpl; only 1: intuition; only 1: now subst).	33.6154580116	75489
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40	0.0.0.0.0.0.1.1.0.1.0.0	search with cache (only 1: induction l as [| x l IH]; only 1: now simpl; only 1: intro ND; only 1: simpl; only 1: inversion_clear ND; only 1: destruct (Aeq_dec b x); only 1: intuition; only 1: now subst; only 1: now subst; only 1: simpl; only 1: intuition; only 1: now subst).	12.4260540009	8629
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	6.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intuition).	0.433775901794	469
Coq.Lists.ListSet.set_union_intro	40	0.0.1	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.145318984985	125
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	1.1.1.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.111626148224	84
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	2.2.2	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.460505962372	29
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40	2.0.1.0.1.6	search with cache (only 1: induction n; only 1: intro x; only 1: trivial; only 1: intro x; only 1: case x; only 1: trivial).	0.87464594841	3041
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40	2.8.1.0.3.0.0.0.5.6	search with cache (only 1: unfold Str_nth; only 1: simple induction n; only 1: simpl; only 1: intros; only 1: case H; only 1: auto; only 1: simpl; only 1: intros; only 1: case H0; only 1: auto).	29.2624938488	165539
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	0.1.7	search with cache (only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: auto).	0.0195169448853	23
Coq.Lists.Streams.Str_nth_tl_map	40	2.0.0.0.0.2	search with cache (only 1: simple induction n; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: auto).	0.0136959552765	19
Coq.Lists.Streams.Str_nth_map	40	5.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0163769721985	15
Coq.Lists.Streams.ForAll_map	40	0.0.8.5.0.2.12.5.2.14.11.10	search with cache (only 1: intro x; only 1: red; only 1: intros [? ?]; only 1: split; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Eq_trans); only 1: destruct H; only 1: auto; only 1: trivial; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Eq_trans); only 1: destruct H; only 1: trivial; only 1: trivial).	6.11107492447	68654
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0148651599884	24
Coq.Lists.Streams.Str_nth_zipWith	40	0.1.1.2.1.7	search with cache (only 1: induction n; only 1: reflexivity; only 1: unfold Str_nth in *; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.393183946609	1057
Coq.Lists.List.nil_cons	40	8.0	search with cache (only 1: intros; only 1: discriminate).	0.016615152359	10
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	1.0.0.0.2	search with cache (only 1: induction l as [| a tail]; only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	0.03165102005	30
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0107488632202	1
Coq.Lists.List.hd_error_cons	40	2.1	search with cache (only 1: intros; only 1: reflexivity).	0.012904882431	5
Coq.Lists.List.in_eq	40	11.0	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.063887834549	184
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0123300552368	2
Coq.Lists.List.not_in_cons	40	32.3	search with cache (only 1: simpl; only 1: intuition).	2.24615097046	3161
Coq.Lists.List.in_nil	40	1.0	search with cache (only 1: simpl; only 1: tauto).	0.0129840373993	3
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0105550289154	1
Coq.Lists.List.in_dec	40	19.8.5	search with cache (only 1: induction l; only 1: auto; only 1: firstorder).	19.3769519329	8700
Coq.Lists.List.app_cons_not_nil	40	3.2.11.3.9.8	search with cache (only 1: unfold not; only 1: intro H1; only 1: intros a H; only 1: elim H1; only 1: firstorder  discriminate; only 1: now discriminate).	5.14078521729	14066
Coq.Lists.List.app_nil_l	40	0.0.0	search with cache (only 1: induction l as [| a tail]; only 1: reflexivity; only 1: reflexivity).	0.015200138092	3
Coq.Lists.List.app_nil_r	40	5.11.2.0.1	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	1.04273295403	3577
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0213260650635	7
Coq.Lists.List.app_assoc	40	0.0.0.0.16.0	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.864891052246	1146
Coq.Lists.List.app_assoc_reverse	40	1.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0352931022644	14
Coq.Lists.List.app_comm_cons	40	0.1.0	search with cache (only 1: intros l m n; only 1: simpl; only 1: f_equal).	0.0162379741669	4
Coq.Lists.List.app_eq_nil	40	7.1.3.1	search with cache (only 1: induction l; only 1: intros a r; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.525835037231	528
Coq.Lists.List.app_eq_unit	40	1.5.0.4.4.0.2.9.10	search with cache (only 1: destruct x as [| a l]; only 1: auto; only 1: simpl; only 1: destruct l as [| x l]; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: intros; only 1: discriminate H).	26.7374281883	53664
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	4.0.1.0.0.8.3	search with cache (only 1: intros n m; only 1: induction n as [| n IH]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: Nat.auto').	1.39983105659	1180
Coq.Lists.List.in_app_or	40	8.0.3.0.0.8	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition).	3.4381301403	5177
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40	0.1.0.3.7.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intros x; only 1: simpl; only 1: destruct 1; only 1: intuition).	7.41338014603	12273
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0136330127716	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40	9.0.3.1.2.1.0.0.1.0.7	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: intros [| ] ?; only 1: trivial; only 1: simpl; only 1: inversion_clear H; only 1: induction n as [| n hn]; only 1: auto; only 1: simpl; only 1: auto with arith).	8.87641501427	18357
Coq.Lists.List.nth_indep	40	3.0.2.1.0.0.5	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: unfold lt; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto with arith).	3.24731898308	4562
Coq.Lists.List.app_nth1	40	0.0.0.0.10.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	5.06583285332	5973
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.0.2.0.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0311830043793	10
Coq.Lists.List.nth_error_app2	40	6.0.1.0.2.0.0.1.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: auto; only 1: auto; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	11.6247091293	15949
Coq.Lists.List.nth_error_nth	40	0.0.3.0.7.0.2.1.0.2.2.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l as [| a l IH]; only 1: intros [| ] ?; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence; only 1: induction n; only 1: now discriminate; only 1: simpl; only 1: auto).	37.7053170204	62693
Coq.Lists.List.nth_error_nth'	40	2.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: intros [| n] d d'; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.0297439098358	10
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	13	search with cache (only 1: auto).	0.0355038642883	100
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0188720226288	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.5.0.3.0.0.30	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	9.16992306709	23110
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40	1.21	search with cache (only 1: fix le_div2 1; only 1: auto with arith).	23.1205070019	32269
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.1.3.1	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: auto).	0.0386521816254	33
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	1	search with cache (only 1: auto).	0.0128149986267	2
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: auto).	0.0135741233826	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0	search with cache (only 1: trivial).	0.0129520893097	1
Coq.Lists.List.in_map	40	0.0.0.8.1.0.0.0	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: intros; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	2.29495406151	4011
Coq.Lists.List.in_map_iff	40	2.0.1.7.2	search with cache (only 1: intros; only 1: red; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	1.29837298393	1567
Coq.Lists.List.map_length	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	0.0243711471558	6
Coq.Lists.List.map_nth	40	0.0.0.0.1.0.0.0.3.0.0.3	search with cache (only 1: intros; only 1: revert n; only 1: induction l; only 1: intros; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.37652683258	3468
Coq.Lists.List.map_nth_error	40	1.0.1.1.0.4.3.1.0.0.2	search with cache (only 1: induction n; only 1: intros [| ] ?; only 1: simpl; only 1: easy; only 1: firstorder; only 1: now injection H as [=->]; only 1: simpl; only 1: induction l; only 1: now discriminate; only 1: simpl; only 1: auto).	37.1879208088	52716
Coq.Lists.List.map_app	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: auto).	0.0303919315338	10
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	1.0.1	search with cache (only 1: destruct l as [| x l]; only 1: auto; only 1: discriminate).	0.0193679332733	5
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.4.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.204928874969	206
Coq.Lists.List.concat_map	40	1.0.10.1.0.1.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	2.30623316765	4802
Coq.Lists.List.map_id	40	1.8.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.733387947083	1058
Coq.Lists.List.map_map	40	0.2.0.0.0.2.2	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.428925991058	353
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.4.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: rewrite H by intuition; only 1: auto).	0.409917831421	309
Coq.Lists.List.fold_left_app	40	0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.024934053421	6
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.4.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.474572896957	393
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40	5.19	search with cache (only 1: fix even_spec 1; only 1: auto).	11.5302009583	11150
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	12.1.1.0.0.0.4.4	search with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: intros l2; only 1: simpl; only 1: rewrite IH; only 1: firstorder).	11.8299589157	24125
Coq.Lists.List.forallb_forall	40	2.15	search with cache (only 1: fix even_spec 1; only 1: auto).	39.1031649113	10204
Coq.Lists.List.forallb_app	40	1.1.0.0.1.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: trivial).	1.59401607513	1752
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.0.1.8.0.0.0.11	search with cache (only 1: induction l; only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	2.56726408005	4910
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.5.0.0.0.10	search with cache (only 1: induction l; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	2.26043701172	1972
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0191988945007	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	0.0.1.0.1	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.0375850200653	7
Coq.Lists.List.filter_ext	40	0.0.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.018609046936	3
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	10.0.2.0.0.1.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct a; only 1: destruct (split l); only 1: firstorder  (subst; auto)).	26.1034619808	28073
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0338978767395	8
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40	0.3.0.3.4.0.0.2.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: injection H; only 1: auto).	9.5446369648	12765
Coq.Lists.List.combine_length	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0359938144684	10
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	2.0.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	0.0322370529175	11
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40	11.1	search with cache (only 1: unfold lel; only 1: Nat.Private_Tac.order).	0.267076015472	236
Coq.Lists.List.lel_cons_cons	40	0.0.1	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0319468975067	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0175251960754	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0181632041931	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0153541564941	1
Coq.Lists.List.incl_tl	40	5.6	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	0.128820180893	114
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0167181491852	1
Coq.Lists.List.incl_appl	40	6.2	search with cache (only 1: intros l m a; only 1: auto using in_app_or, in_or_app).	0.0333368778229	17
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0167491436005	1
Coq.Lists.List.incl_cons	40	4	search with cache (only 1: firstorder  (subst; auto)).	0.0467729568481	12
Coq.Lists.List.incl_app	40	8.0.6.1.0.2	search with cache (only 1: intros l m a; only 1: elim l; only 1: auto; only 1: unfold incl; only 1: simpl; only 1: firstorder  (subst; auto)).	32.9984560013	17402
Coq.Lists.List.firstn_nil	40	0.0.0.1	search with cache (only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto).	0.022775888443	5
Coq.Lists.List.firstn_cons	40	0.0.0.0.1.0	search with cache (only 1: simpl; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0269310474396	7
Coq.Lists.List.firstn_all	40	5.0.0.7	search with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: now rewrite IH).	0.127039194107	180
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0154390335083	1
Coq.Lists.List.firstn_le_length	40	0.0.1.5.0.0.0	search with cache (only 1: induction n; only 1: intro; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.948304176331	685
Coq.Lists.List.firstn_length_le	40	1.0.1.0.3.2.1.2.2	search with cache (only 1: induction l; only 1: destruct n; only 1: auto; only 1: auto with arith; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	3.62568187714	4648
Coq.Lists.List.firstn_app	40	1.5.0.0.0.1.0.0	search with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	4.82756304741	4018
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0153648853302	1
Coq.Lists.List.skipn_nil	40	0.0.0.1	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0240190029144	5
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.0154759883881	1
Coq.Lists.List.skipn_none	40	0.0.0.6	search with cache (only 1: induction l as [| v l IHl]; only 1: simpl; only 1: auto; only 1: auto).	0.0323450565338	16
Coq.Lists.List.skipn_all2	40	2.0.0.1.1.1	search with cache (only 1: induction n; only 1: now induction l; only 1: intros [| a l] H; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.961820840836	426
Coq.Lists.List.firstn_skipn	40	3.0.0.0.0.4.0.8	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	32.6867408752	34088
Coq.Lists.List.firstn_length	40	0.0.0.2.0.17	search with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	23.3310358524	28970
Coq.Lists.List.skipn_length	40	0.0.0.3.0.0.0.0.1.1	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	1.98939681053	1764
Coq.Lists.List.skipn_all	40	4	search with cache (only 1: now induction l).	0.0181770324707	5
Coq.Lists.List.skipn_app	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.0395607948303	10
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	3	search with cache (only 1: now intros []).	0.0195441246033	4
Coq.Lists.List.combine_firstn_l	40	0.2.0.2.0.4.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	4.75010895729	5137
Coq.Lists.List.combine_firstn_r	40	1.0.0.0.0.0.0.7.1.0	search with cache (only 1: induction l as [| x l IHl]; only 1: simpl; only 1: now intros []; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	5.43576407433	5949
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40	1.36	search with cache (only 1: fix gcd_divide 1; only 1: auto).	15.994410038	33484
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40	0.0.0.0.16	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.471807956696	507
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0204949378967	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.1.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0473001003265	5
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	2.6.8.9.3.7	search with cache (only 1: intros; only 1: Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	6.71589803696	15610
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40	0.1.27.7.12	search with cache (only 1: revert n; only 1: unfold lt; only 1: fix le_div2 1; only 1: intro; only 1: auto with arith).	21.5241529942	30741
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40	3.4.0.0.2.2.5.3.0.1.4	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: inversion H; only 1: split; only 1: induction 1; only 1: exists x; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	33.1441898346	28489
Coq.Lists.List.Exists_nil	40	1.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.0392699241638	3
Coq.Lists.List.Exists_cons	40	1.1.41.7	search with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	18.6226820946	36345
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.0.0.2.0.1.0.2.1.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.96945500374	3834
Coq.Lists.List.Forall_inv	40	5	search with cache (only 1: abstract now inversion 1).	0.0258958339691	6
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.1.0	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0279719829559	4
Coq.Lists.List.Exists_impl	40	0.0.8.6.3.4	search with cache (only 1: intro Pdec; only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: auto; only 1: now apply Exists_cons_tl).	4.17383408546	8901
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	1.1.11.2.10.7.1	search with cache (only 1: intros Q H H'; only 1: intros Pdec l; only 1: induction l as [| a l' Hrec]; only 1: apply Forall_nil; only 1: right; only 1: auto; only 1: auto).	37.401515007	87797
Coq.Lists.List.Forall2_refl	40	1	search with cache (only 1: constructor).	0.0181918144226	2
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	0.0.0.0.6.8	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.449521064758	518
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.0.0.11	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto with arith).	0.146425008774	152
Coq.Lists.List.repeat_spec	40	2.0.1.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.588619947433	547
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.2	search with cache (only 1: repeat intro; only 1: auto).	0.0183680057526	5
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	0.1.0.1.0	search with cache (only 1: intro; only 1: induction l; only 1: intuition; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	0.0317230224609	7
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	1.8.1	search with cache (only 1: intuition; only 1: rewrite <- H; only 1: intuition).	1.31824803352	571
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	0.1.1.2.1.40	search with cache (only 1: induction l; only 1: repeat constructor; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	9.73682284355	16632
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0218961238861	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	6.0.7.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	1.15857195854	1253
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: eauto; only 1: auto).	0.0215759277344	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	0.0.4.1.0.1.1.1.2.0	search with cache (only 1: split; only 1: induction 1 as [| a l [| ]]; only 1: auto; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: induction l; only 1: inversion 1; only 1: inversion 1; only 1: auto; only 1: auto).	4.2858672142	4940
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.8.0	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.00718903542	933
Coq.Lists.SetoidList.InA_nil	40	0.0.0	search with cache (only 1: split; only 1: inversion 1; only 1: inversion 1).	0.0181179046631	3
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.3.0.0.2.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	1.03237700462	843
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	12	search with cache (only 1: now simpl).	0.103111982346	139
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: constructor; only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto).	0.0266740322113	7
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	3.8.1	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.872966051102	209
Coq.Lists.SetoidList.In_InA	40	0.4.1	search with cache (only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.0957598686218	8
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.4.6	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.104099035263	58
Coq.Lists.SetoidList.InA_double_head	40	2.6	search with cache (only 1: rewrite 2!InA_cons; only 1: tauto).	0.0696561336517	18
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.116384983063	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.2.6	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.0993449687958	41
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40	10.1.0.1	search with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: rewrite InA_app_iff; only 1: rewrite InA_app_iff; only 1: firstorder).	29.0539319515	1123
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite 2!InA_cons; only 1: intuition).	0.0555601119995	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0730299949646	3
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.6	search with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.153761863708	9
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40	0.0.11.19.1.1.8	search with cache (only 1: induction l; only 1: constructor; only 1: constructor; only 1: inv; only 1: transitivity y; only 1: auto; only 1: auto).	11.4123411179	25056
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40	1.11.8	search with cache (only 1: intro; only 1: rewrite <- H; only 1: eauto).	0.65251493454	549
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	4.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: firstorder).	0.0265707969666	8
Coq.Lists.SetoidList.InA_InfA	40	4.0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: auto).	0.0243499279022	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	4.4.0.1.1.1.3	search with cache (only 1: induction l1; only 1: simpl; only 1: intros; only 1: intuition; only 1: constructor; only 1: inv; only 1: auto).	3.69871711731	4131
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	0.0.0.0.11	search with cache (only 1: induction 1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.470036029816	538
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.1.1.2.1.14	search with cache (only 1: repeat red; only 1: induction 1; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	6.20599102974	8322
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	0.022794008255	4
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	0.1.3.1.0.2	search with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: congruence; only 1: auto).	0.214981079102	243
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40	1.19	search with cache (only 1: fix even_spec 1; only 1: auto).	8.3568148613	7106
Coq.NArith.BinNat.N.eq_dec	40	2.0	search with cache (only 1: decide equality; only 1: decide equality).	0.0389339923859	4
Coq.NArith.BinNat.N.discr	40	1.5.17.3.6	search with cache (only 1: induction n; only 1: auto; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.04423308372	2769
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0126090049744	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0125739574432	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0224189758301	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	1	search with cache (only 1: trivial).	0.0125999450684	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0124440193176	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: trivial).	0.0123641490936	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.0128071308136	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: auto).	0.0132689476013	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0186858177185	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.1.0.2.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	2.02098011971	2139
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	3.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0545217990875	24
Coq.NArith.BinNat.N.pred_sub	40	0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	0.0239231586456	5
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0253310203552	1
Coq.NArith.BinNat.N.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0184590816498	3
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0189731121063	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.0130209922791	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	10	search with cache (only 1: now split).	0.275651931763	239
Coq.NArith.BinNat.N.compare_le_iff	40	2	search with cache (only 1: reflexivity).	0.0960321426392	61
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.1	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.149831056595	87
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	0	search with cache (only 1: reflexivity).	0.0145998001099	1
Coq.NArith.BinNat.N.succ_double_spec	40	12.2	search with cache (only 1: rewrite two_succ; only 1: now destruct n as [| [p| p| ]]).	2.56260490417	426
Coq.NArith.BinNat.N.double_add	40	0.1.0.1.0.1.0.6	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	23.7974789143	6845
Coq.NArith.BinNat.N.succ_double_add	40	6.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now destruct n, m).	0.525938034058	46
Coq.NArith.BinNat.N.double_mul	40	1.2.0.3.1	search with cache (only 1: cases m; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: now destruct n, m).	7.80675697327	970
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.12	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0590739250183	76
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0155358314514	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2.1.1.1.1	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.304338932037	212
Coq.NArith.BinNat.N.double_le_mono	40
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.0.1.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0544641017914	22
Coq.NArith.BinNat.N.succ_double_le_mono	40	1.1.1.0.1.3	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: now apply eq_le_incl; only 1: easy; only 1: easy; only 1: easy).	0.392212152481	173
Coq.NArith.BinNat.N.compare_0_r	40	0.0.2	search with cache (only 1: rewrite compare_lt_iff; only 1: apply le_ngt; only 1: apply le_0_l).	0.0323119163513	5
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0161249637604	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	2.21	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	1.64452910423	2254
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40	3.0.0.20.4.0.2.0.14	search with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: pose proof (pred_succ n) as EQ'; only 1: destruct n; only 1: trivial; only 1: now destruct p).	13.1086261272	25038
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.3.3.0.2.0.2.0	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: now destruct n; only 1: now destruct n; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.539250850677	532
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.023402929306	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.3	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0199089050293	5
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40	0.1.1.0.3.4.8	search with cache (only 1: rewrite <- Pos.ggcd_gcd; only 1: generalize (Pos.ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: exists aa; only 1: now rewrite Pos.mul_comm).	5.93994188309	3067
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0176148414612	2
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	3	search with cache (only 1: now destruct a).	0.0210199356079	4
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0271799564362	5
Coq.NArith.BinNat.N.testbit_neg_r	40	8	search with cache (only 1: now destruct n).	0.161182880402	26
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0176010131836	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.6	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0321798324585	8
Coq.NArith.BinNat.N.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	0.0212509632111	2
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0628521442413	7
Coq.NArith.BinNat.N.le_ge	40	1	search with cache (only 1: apply ge_le_iff).	0.0222699642181	2
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.0.2.1.0.3	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: simpl; only 1: auto).	0.224632024765	129
Coq.NArith.Ndec.Peqb_complete	40	2.9	search with cache (only 1: rewrite Pos.eqb_eq; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.138381958008	49
Coq.NArith.Ndec.Peqb_Pcompare	40	0.8	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0652990341187	10
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0496997833252	1
Coq.NArith.Ndec.Neqb_Ncompare	40	1.2.1.14.7.1.13.23.28	search with cache (only 1: intros; only 1: apply N.eqb_eq in H; only 1: destruct n; only 1: simpl; only 1: now subst; only 1: subst; only 1: simpl; only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: reflexivity).	32.3066740036	40352
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0508179664612	1
Coq.NArith.Ndec.Neqb_complete	40	6	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0739450454712	16
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40	0.0.18.8.4.0.0.0.1	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: subst; only 1: apply Nbit_faithful; only 1: vm_compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end; only 1: trivial; only 1: trivial).	33.9888510704	38559
Coq.NArith.Ndec.Nbit0_neq	40	3.2.4.10	search with cache (only 1: intuition; only 1: eqb2eq; only 1: intros <-; only 1: intuition).	6.10336089134	2588
Coq.NArith.Ndec.Ndiv2_eq	40	8.9	search with cache (only 1: eqb2eq; only 1: now intros <-).	0.81760597229	333
Coq.NArith.Ndec.Ndiv2_neq	40	1.1.1.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0666909217834	7
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	1.0.1.2	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.438817977905	36
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	2	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0419030189514	3
Coq.NArith.Ndec.Nleb_antisym	40	6.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.390434980392	43
Coq.NArith.Ndec.Nleb_trans	40	1.0.0.0	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order').	0.0831129550934	5
Coq.NArith.Ndec.Nleb_ltb_trans	40	3.0.2.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.109521150589	11
Coq.NArith.Ndec.Nltb_leb_trans	40	3.0.3.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.958914041519	134
Coq.NArith.Ndec.Nltb_trans	40	3.0.3	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	0.531204938889	37
Coq.NArith.Ndec.Nltb_leb_weak	40	3.1.11	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order').	2.08662104607	1003
Coq.NArith.Ndec.Nleb_double_mono	40	0.0.0.0.0.0.0.0.0.1.19	search with cache (only 1: generalize (N.div_eucl_spec a b); only 1: rewrite !Nleb_Nle; only 1: destruct a as [| a], b as [| b]; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial; only 1: unfold N.div_eucl; only 1: trivial).	7.59059309959	6049
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40	0.0.1.1.12.9.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: vm_compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x end; only 1: trivial; only 1: trivial; only 1: trivial; only 1: congruence).	5.25132107735	5806
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	3.1.0.5.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.41237306595	1014
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0577049255371	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40	5.13.4.5.3	search with cache (only 1: unfold Nleb; only 1: intros; only 1: apply leb_correct_conv; only 1: rewrite <- Nat.compare_lt_iff, <- N2Nat.inj_compare, N.compare_lt_iff; only 1: trivial).	10.5059890747	10607
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.1.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.371011018753	41
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	3.0.6	search with cache (only 1: induction a as [| p]; only 1: reflexivity; only 1: now try rewrite H).	0.16587805748	100
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.1.0.1	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.035001039505	8
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.3.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0333409309387	9
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.0228779315948	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.0	search with cache (only 1: simple induction d; only 1: reflexivity; only 1: trivial).	0.022449016571	3
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.1.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0948321819305	41
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.2.2.0	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: intros; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.140156984329	35
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2	search with cache (only 1: now subst).	0.051295042038	3
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0903868675232	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1	search with cache (only 1: reflexivity).	0.0518898963928	2
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0507519245148	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.2.0.1.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	2.3132109642	819
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.2.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	1.54112911224	481
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.414974927902	156
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.1.0.11	search with cache (only 1: intros [| n]; only 1: simpl; only 1: reflexivity; only 1: now destruct n).	3.21573376656	1404
Coq.NArith.Ndigits.Ndouble_bit0	40	0.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial).	0.0628049373627	4
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.1.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial).	0.0816748142242	18
Coq.NArith.Ndigits.Ndiv2_double	40	1.0.9.0.6.5	search with cache (only 1: intros a n; only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: now try rewrite H; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	6.93682694435	3946
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	1.3.0.13	search with cache (only 1: intros [| n]; only 1: trivial; only 1: intros; only 1: now destruct n).	27.9983751774	11959
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40	3.9	search with cache (only 1: fix odd_spec 1; only 1: trivial).	0.41092300415	181
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.152376174927	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	7.92884492874	4520
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.1.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	9.50065517426	2452
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.1.0.0.0.0.1.1	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.10276508331	775
Coq.NArith.Ndigits.Nless_def_4	40	0.0.1.0.1.0.1.0.0.2.2	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: reflexivity).	6.05979299545	3317
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.7.30	search with cache (only 1: induction a; only 1: now try rewrite H; only 1: exists p; only 1: trivial).	1.15945482254	2433
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40	4.37	search with cache (only 1: fix le_div2 1; only 1: auto).	15.6541769505	21482
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	0.1.0.0.4.0.1.1.1.1.1.1.4	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	19.9854059219	10154
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.1.0.0.0.1.0.0.0.0.0.4	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: f_equal; only 1: simpl; only 1: rewrite IHp; only 1: auto; only 1: simpl; only 1: f_equal).	9.56838798523	3007
Coq.NArith.NArith.test	40	3	search with cache (only 1: N.order).	0.0445280075073	34
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	2.0.0.1.0.2	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.956258773804	168
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	18.0.1.0.1.2	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	14.0565431118	14037
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.5.0.12	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.389710187912	311
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	3.0.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	1.25842189789	372
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0669438838959	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0.4	search with cache (only 1: simpl; only 1: now destruct n).	0.0511679649353	6
Coq.NArith.Nnat.Nat2N.inj_pred	40	1.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: nat2N).	0.0571181774139	5
Coq.NArith.Nnat.Nat2N.inj_add	40	1	search with cache (only 1: nat2N).	0.12055683136	2
Coq.NArith.Nnat.Nat2N.inj_sub	40	1	search with cache (only 1: nat2N).	0.0487449169159	2
Coq.NArith.Nnat.Nat2N.inj_mul	40	0.2.0	search with cache (only 1: destruct n; only 1: trivial; only 1: nat2N).	0.0571441650391	5
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0513927936554	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.07319688797	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0487179756165	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40	3.3.3.3.3.3.3.3.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	10.6325631142	7515
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	48.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	9.5906920433	12671
Coq.Strings.Ascii.eqb_sym	40	6.0	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	0.0343542098999	11
Coq.Strings.Ascii.eqb_eq	40	6.6.2.10	search with cache (only 1: destruct n; only 1: split; only 1: t_eqb; only 1: t_eqb).	5.3458199501	4835
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0232889652252	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0628349781036	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40	6.13	search with cache (only 1: compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	36.6781687737	16020
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.179296016693	10
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	2.1	search with cache (only 1: apply eq_true_iff_eq; only 1: t_eqb).	0.0511219501495	5
Coq.Strings.String.eqb_eq	40	2.1.12.2	search with cache (only 1: split; only 1: t_eqb; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: t_eqb).	12.6644079685	7585
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.0648789405823	11
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinInt.Z.eqb_eq, Exx', Eyy').	0.0467901229858	3
Coq.Strings.String.get_correct	40	4.6.18	search with cache (only 1: fix odd_spec 1; only 1: intros n m; only 1: trivial).	6.95220303535	8016
Coq.Strings.String.append_correct1	40	1.6.0.1.3.10.13	search with cache (only 1: intros s1; only 1: elim s1; only 1: inversion 1; only 1: intros x y z; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: auto with arith).	15.0915880203	18235
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	3.1.0.3	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.147858142853	48
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	9.4.0.0	search with cache (only 1: destruct x; only 1: now f_equal; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.84966397285	742
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	2	search with cache (only 1: trivial).	0.0541479587555	3
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0120370388031	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	1	search with cache (only 1: trivial).	0.0118801593781	2
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	11	search with cache (only 1: constructor).	0.0681009292603	33
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.0.1.7	search with cache (only 1: intros [| a l] H; only 1: easy; only 1: simpl; only 1: auto with arith).	0.552972078323	139
Coq.Reals.RList.pos_Rl_P2	40	2.23	search with cache (only 1: fix even_odd_double 1; only 1: firstorder  (subst; auto)).	23.8149249554	14760
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	16.1	search with cache (only 1: fix odd_equiv 1; only 1: intuition Nat.order).	5.31798100471	3045
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40	0.1.0.4.1.1.3.2.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	10.134773016	2871
Coq.Reals.RList.RList_P9	40	0.6	search with cache (only 1: fix odd_equiv 1; only 1: tauto).	0.262742042542	63
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	5.1.1.0.7	search with cache (only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	5.00079607964	2278
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	3.1.0.5.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: auto).	5.56648993492	2198
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	2.1.6	search with cache (only 1: intros; only 1: f_equal; only 1: auto).	0.171861171722	43
Coq.Reals.RList.RList_P22	40	0.4.6.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: easy; only 1: reflexivity).	1.00710296631	323
Coq.Reals.RList.RList_P23	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	2.2568769455	573
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.2.0.0.0.0.0.0.0.12	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	8.63750219345	3302
Coq.Reals.RList.RList_P27	40	2.3.3.0.0.0.5	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: elim H; only 1: reflexivity).	4.48871088028	1639
Coq.Reals.RList.RList_P28	40	5.4.3.0.8.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: trivial).	2.35748410225	1196
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.1.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.487796068192	94
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0572991371155	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.1.0.0.0.3.4	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.266262054443	150
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	1.0.1.1.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.243134021759	26
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.4.1.0.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: tauto; only 1: tauto).	1.16681909561	218
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	0.2.1.1.9	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	11.5744020939	2978
Coq.Reals.Rbasic_fun.Rmin_r	40	1.4.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.116101026535	27
Coq.Reals.Rbasic_fun.Rmin_left	40	0.0.4.0.7.0	search with cache (only 1: intros r1 r2; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: tauto; only 1: tauto).	14.6152608395	2301
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.4.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.419343948364	25
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0912349224091	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.108131885529	10
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.2.4.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: split; only 1: assumption; only 1: assumption).	0.204548835754	61
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.606091976166	7
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.1.0.4.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	1.30054402351	289
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.2.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.0839538574219	7
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.1.1.8	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto with real; only 1: auto with real).	5.36505913734	1378
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: auto using Rle_antisym; only 1: auto with real).	0.102751970291	10
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.0.2.1.0.4	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: intros H1 H2; only 1: apply Rle_antisym; only 1: auto with real; only 1: auto with real; only 1: auto).	8.13894295692	1810
Coq.Reals.Rbasic_fun.Rmax_right	40	3.0.1.0.3	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto; only 1: auto with real).	2.59201002121	582
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0933241844177	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.3.1.3.1.1	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros r1 r2 H; only 1: intros x x' y y'; only 1: unfold Rle; only 1: apply Rmax_case_strong; only 1: intuition eauto  2; only 1: intuition eauto  2).	9.80590796471	1396
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.1.1.0.5	search with cache (only 1: intros p q; only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: auto with real; only 1: auto with real).	1.88892817497	525
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	1.0.1.0.0.6.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.861219882965	366
Coq.Reals.Rbasic_fun.Rcase_abs	40	0.0.0.11.5.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: edestruct Rlt_le_dec; only 1: eauto; only 1: auto with real; only 1: ring).	13.7590410709	4839
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	2.0.5.7	search with cache (only 1: intros a b; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	6.16250991821	2652
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: left; only 1: assumption; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	2.04953312874	656
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	3.4	search with cache (only 1: intros n n' Hn m m' Hm; only 1: <Coq.Strings.Ascii.t_eqb>).	0.0845000743866	41
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	1.1.2.2	search with cache (only 1: intuition eauto  2; only 1: auto with real; only 1: right; only 1: auto).	0.091500043869	29
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.2.0.2.0	search with cache (only 1: simple induction 1; only 1: simpl; only 1: ring; only 1: simpl; only 1: intros; only 1: auto with real).	0.167554855347	14
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.19.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	32.3693459034	11628
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	14.62	search with cache (only 1: fix odd_equiv 1; only 1: assumption).	32.9113349915	84242
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	6.1	search with cache (only 1: intros; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0753700733185	9
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1	search with cache (only 1: trivial).	0.0629029273987	2
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	1	search with cache (only 1: auto with real).	0.067314863205	2
Coq.Reals.Rfunctions.pow_1	40	1.2.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.101026058197	8
Coq.Reals.Rfunctions.pow_add	40	1.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.144956111908	10
Coq.Reals.Rfunctions.Rpow_mult_distr	40	0.18.0.0.2.0	search with cache (only 1: intros; only 1: elim n; only 1: ring_Rsqr; only 1: simpl; only 1: fix odd_equiv 1; only 1: auto with real).	24.3635261059	8615
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	1.4.1.1.0.0.0	search with cache (only 1: intros; only 1: case n; only 1: simpl; only 1: exact Rlt_0_1; only 1: simpl; only 1: fix odd_equiv 1; only 1: auto with real).	3.67303109169	1310
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0.1	search with cache (only 1: intro; only 1: simpl; only 1: auto with real).	0.0770819187164	5
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.2.1.5	search with cache (only 1: intros n m; only 1: intro; only 1: repeat rewrite S_INR; only 1: ring).	2.38274407387	757
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.2.0.0.1.0.1.1	search with cache (only 1: intro n; only 1: case n; only 1: intro; only 1: absurd (0%nat = 0%nat); only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto with real).	3.0108730793	1947
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.1.1.1.0.2.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	5.15732097626	1575
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: easy; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	1.97923278809	526
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0841999053955	3
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	1.0.1.22	search with cache (only 1: fix odd_equiv 1; only 1: induction n; only 1: auto using Z.lt_pred_l; only 1: auto using Z.lt_pred_l).	34.962241888	18271
Coq.Reals.Rfunctions.powerRZ_O	40	1	search with cache (only 1: reflexivity).	0.0719530582428	2
Coq.Reals.Rfunctions.powerRZ_1	40	0.4	search with cache (only 1: simpl; only 1: auto with real).	0.196192026138	21
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	2.0.0.2.0.0.3.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intro; only 1: auto with real).	3.19582796097	1315
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.124175071716	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	1.0.1.0.4	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.290776968002	68
Coq.Reals.Rfunctions.powerRZ_ind	40	6.18.9	search with cache (only 1: intros n m H1 H2; only 1: fix ind_0_1_SS 1; only 1: trivial).	3.90903615952	4412
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	5.14.1	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	4.33239293098	1950
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.122913122177	7
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	0.2	search with cache (only 1: intro; only 1: apply Nat.div2_double).	0.118136882782	4
Coq.Reals.Exp_prop.div2_S_double	40	3.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: apply Nat.div2_succ_double).	0.290969848633	37
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	1.2.3.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: auto with real).	0.87207198143	380
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	2.0.0.1.0	search with cache (only 1: unfold limit1_in; only 1: intros P x y H1 H2; only 1: unfold limit_in; only 1: simpl; only 1: firstorder).	0.798963069916	95
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	4.0.0.0.4.0.2	search with cache (only 1: unfold D_in; only 1: unfold limit1_in; only 1: intros P x y H1 H2; only 1: unfold limit_in; only 1: unfold Rdiv; only 1: intros; only 1: firstorder).	19.6555070877	5062
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.1.4.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0984671115875	9
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40	16.1.6.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: auto with *).	6.4292049408	1904
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.6.9	search with cache (only 1: intro n; only 1: red; only 1: now right).	0.490453004837	347
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.0670001506805	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0756289958954	5
Coq.Reals.RIneq.Rlt_not_eq	40	1.0.2.0.1.4.6	search with cache (only 1: red; only 1: intro x; only 1: intros; only 1: subst x; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	3.71171402931	1814
Coq.Reals.RIneq.Rgt_not_eq	40	1.0.1.0.6.4.0	search with cache (only 1: red; only 1: intro x; only 1: intros; only 1: subst x; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	3.37631607056	2505
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.1.0.0.1.11	search with cache (only 1: induction 1; only 1: apply Rlt_not_eq; only 1: auto with real; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: auto with real).	10.4791281223	6867
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.116903066635	25
Coq.Reals.RIneq.Rdichotomy	40	3.2.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.125451087952	32
Coq.Reals.RIneq.Rlt_le	40
Coq.Reals.RIneq.Rgt_ge	40	0.0.5.0.0	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.195772886276	16
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	2.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: red; only 1: auto with real).	0.116357088089	11
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0629448890686	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0519959926605	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0.1	search with cache (only 1: intros r1 r2; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0847330093384	6
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.2.0	search with cache (only 1: intros r1 r2; only 1: intro abs; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0683009624481	6
Coq.Reals.RIneq.Rnot_lt_le	40	6.0.1.0	search with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.595514059067	146
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0828349590302	8
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0887069702148	9
Coq.Reals.RIneq.Rnot_lt_ge	40	5.1	search with cache (only 1: intros; only 1: eauto using Rnot_lt_le with rorders).	0.144793987274	50
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0693600177765	11
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	3.0	search with cache (only 1: intros; only 1: auto with real).	0.0694148540497	13
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.5	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.376429796219	74
Coq.Reals.RIneq.Rge_not_lt	40	1.0.0.0.2	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.148347139359	34
Coq.Reals.RIneq.Rle_not_gt	40	0.0.9.4.4	search with cache (only 1: intro; only 1: intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	3.0440030098	1392
Coq.Reals.RIneq.Rge_not_gt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0824928283691	13
Coq.Reals.RIneq.Req_le	40	0.0.2	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0656878948212	5
Coq.Reals.RIneq.Req_ge	40	0.0.3	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0678231716156	6
Coq.Reals.RIneq.Req_le_sym	40	1.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0671029090881	5
Coq.Reals.RIneq.Req_ge_sym	40	1.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0674939155579	5
Coq.Reals.RIneq.Rgt_asym	40	0.0.1.2	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.11913394928	23
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.2.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.224440097809	6
Coq.Reals.RIneq.Rle_le_eq	40	1.2.2.0	search with cache (only 1: unfold Rle; only 1: split; only 1: intuition; only 1: auto with real).	0.120249032974	9
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.062068939209	1
Coq.Reals.RIneq.Rlt_eq_compat	40	2.8.4	search with cache (only 1: intros; only 1: subst; only 1: eauto).	0.849551916122	496
Coq.Reals.RIneq.Rgt_eq_compat	40	1.0.3.5	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: auto with rorders).	0.759620189667	344
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	6.4.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	2.57896113396	1372
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.55886387825	127
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.1	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.14352107048	32
Coq.Reals.RIneq.Rge_gt_trans	40	3.3.16.6.4	search with cache (only 1: do 2 intro; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rge; only 1: intuition eauto  3).	9.70252299309	10049
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.26500916481	5
Coq.Reals.RIneq.Rgt_dec	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.113571882248	4
Coq.Reals.RIneq.Rge_dec	40	0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.136111021042	3
Coq.Reals.RIneq.Rlt_le_dec	40	1.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.112087011337	8
Coq.Reals.RIneq.Rgt_ge_dec	40	2.2.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.204478025436	8
Coq.Reals.RIneq.Rle_lt_dec	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.137294769287	4
Coq.Reals.RIneq.Rge_gt_dec	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.42379283905	76
Coq.Reals.RIneq.Rlt_or_le	40	0.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.670273065567	62
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.1.2.1	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.567007064819	124
Coq.Reals.RIneq.Rle_or_lt	40	0.1.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.199387788773	22
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.2.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.413733005524	81
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.7.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.619640111923	60
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.4.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.26757907867	9
Coq.Reals.RIneq.Rplus_ne	40	1.1.4.0	search with cache (only 1: intro; only 1: split; only 1: ring; only 1: ring).	1.13148093224	16
Coq.Reals.RIneq.Rplus_opp_l	40	3.0	search with cache (only 1: intros; only 1: ring).	6.93484282494	42
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	7	search with cache (only 1: auto with real).	0.405861139297	109
Coq.Reals.RIneq.Rplus_eq_compat_r	40	8.4	search with cache (only 1: intro; only 1: apply f_equal).	1.85494804382	761
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	2.0.2.1.0	search with cache (only 1: intros x y H; only 1: replace y with - x + x + y by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0932490825653	10
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	1.1.1.0.0.0.1.0.2.1	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto).	10.8061821461	2119
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	1.57705283165	46
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	1.51494503021	66
Coq.Reals.RIneq.Rmult_0_r	40	3.0	search with cache (only 1: intros; only 1: ring).	0.155520915985	21
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0668659210205	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.1.2	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l; only 1: apply Rmult_1_l).	0.230407953262	89
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0631029605865	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	2.0.1.2.0	search with cache (only 1: intros; only 1: apply f_equal; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: intuition).	0.166040897369	37
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.0.4.1	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: subst; only 1: reflexivity).	0.402745008469	113
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0666959285736	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0518360137939	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	5.2.4	search with cache (only 1: intro; only 1: intros a b; only 1: intuition).	1.04926300049	431
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0725650787354	3
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with real).	0.0524568557739	1
Coq.Reals.RIneq.Ropp_0	40	4	search with cache (only 1: ring).	0.835518121719	24
Coq.Reals.RIneq.Ropp_eq_0_compat	40	1.11.4	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.876164913177	454
Coq.Reals.RIneq.Ropp_involutive	40	25.1	search with cache (only 1: intros; only 1: ring).	7.79577302933	856
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	1.1	search with cache (only 1: intros; only 1: ring).	2.23778796196	16
Coq.Reals.RIneq.Ropp_mult_distr_l	40	4.0	search with cache (only 1: intros; only 1: ring).	1.49423384666	21
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	1.0	search with cache (only 1: intros; only 1: ring).	1.12167906761	17
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0743010044098	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0751280784607	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0749871730804	2
Coq.Reals.RIneq.Rminus_0_r	40	8.1	search with cache (only 1: intros; only 1: ring).	0.126703023911	35
Coq.Reals.RIneq.Rminus_0_l	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0686070919037	3
Coq.Reals.RIneq.Ropp_minus_distr	40	5.1.1	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.252695798874	20
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0751700401306	2
Coq.Reals.RIneq.Rminus_diag_eq	40	3.0.2.0	search with cache (only 1: intro; only 1: intros; only 1: rewrite H; only 1: ring).	0.115843057632	18
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0	search with cache (only 1: intros; only 1: ring).	2.17581892014	17
Coq.Reals.RIneq.Rminus_eq_contra	40	1.3.0	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.303224802017	28
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.1.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0713169574738	5
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0713338851929	4
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros; only 1: ring).	1.26911282539	17
Coq.Reals.RIneq.Rinv_1	40	23	search with cache (only 1: field).	15.1294789314	1868
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.6.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.133820056915	18
Coq.Reals.RIneq.Rinv_mult_distr	40	0.1.6.0.1	search with cache (only 1: intros; only 1: apply Rmult_eq_reg_l with r1; only 1: field; only 1: auto with real; only 1: auto with real).	1.65957689285	306
Coq.Reals.RIneq.Ropp_inv_permute	40	0.3.2	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.33432507515	25
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0804510116577	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.105067014694	8
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.2.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.167158842087	21
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	16.2.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	9.97243189812	2111
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.3.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.365128993988	51
Coq.Reals.RIneq.Rplus_le_compat_l	40
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.4.2.2.5	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	38.2072308064	980
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.2.6.1.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: auto with zarith real; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	32.7072639465	5637
Coq.Reals.RIneq.Rplus_ge_compat_r	40
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	2.2.1.1	search with cache (only 1: do 3 intro; only 1: do 3 intro; only 1: red; only 1: auto with real).	0.106297016144	11
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.2.0.0.2.3	search with cache (only 1: intros; only 1: red; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: apply Rplus_lt_compat_r; only 1: auto with real).	1.1509270668	162
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.1.1.2	search with cache (only 1: intros; only 1: red; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.21635890007	24
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.1	search with cache (only 1: intros n m p q; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	0.379786968231	21
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.1.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0748918056488	5
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.13103890419	9
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rlt_trans with rorders).	0.0568311214447	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.0.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.128335952759	8
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	1.1.0.0.1	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.543784141541	8
Coq.Reals.RIneq.Ropp_le_contravar	40	1.2.1	search with cache (only 1: intro; only 1: intro; only 1: auto with real).	0.238658905029	11
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.3.1	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.226485013962	14
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	0.216794013977	43
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0791959762573	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0778460502625	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.1.3.3	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.885845184326	167
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.0808670520782	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.1.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0805490016937	7
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rlt_trans with rorders).	0.0921330451965	19
Coq.Reals.RIneq.Rmult_gt_compat_l	40	1.0.4	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.338370084763	34
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	3.7.0	search with cache (only 1: intros r r1 r2 H H0; only 1: apply Rle_ge; only 1: auto with real).	1.24747896194	410
Coq.Reals.RIneq.Rmult_ge_compat_r	40	3.7.2	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	3.713078022	1217
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	6	search with cache (only 1: auto with real rorders).	0.618813037872	94
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	7.0.3.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	1.78765797615	571
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.4.3	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.395098924637	87
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.1.0.1.7.0	search with cache (only 1: intros; only 1: elim H; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	8.5256319046	1252
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.4.0.0.0.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: replace r1 with r1 - r2 + r2; only 1: pattern r2 at 3; only 1: replace r2 with 0 + r2; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: unfold Rle; only 1: auto with real).	9.63346886635	2563
Coq.Reals.RIneq.Rminus_ge	40	1.0.0.0.1.2.6.1.0	search with cache (only 1: destruct 1; only 1: replace r2 with 0 + r2; only 1: apply Rle_ge; only 1: replace r1 with r1 - r2 + r2; only 1: auto with real; only 1: ring; only 1: auto with real; only 1: red; only 1: auto with real).	7.65113902092	2767
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0670218467712	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0852649211884	6
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	3.54664993286	842
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.2.5.6	search with cache (only 1: intros; only 1: replace 0 with 0 + 0; only 1: auto with real; only 1: auto with real).	13.0258619785	3532
Coq.Reals.RIneq.Rlt_plus_1	40	5.0	search with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.0698101520538	12
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	1.0.0.0.1.1	search with cache (only 1: destruct n; only 1: auto with real; only 1: simpl; only 1: destruct n; only 1: auto with real; only 1: reflexivity).	0.100713968277	9
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.0.0.0	search with cache (only 1: simpl; only 1: intro; only 1: case n; only 1: auto with real; only 1: intro; only 1: auto with real).	0.0872600078583	6
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	4.1.0.0.0.0.0.2.2.1	search with cache (only 1: induction n; only 1: simpl; only 1: unfold IZR; only 1: right; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: left; only 1: auto with real; only 1: auto with real).	18.1127159595	6117
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	4.0.12	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	36.2632930279	12526
Coq.Reals.RIneq.INR_not_0	40	0.0.17.0.1	search with cache (only 1: red; only 1: intros; only 1: subst n; only 1: apply H; only 1: auto with real).	2.52736282349	1492
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	3.0.1.1.3.0.0.2.1	search with cache (only 1: intros [| p| n]; only 1: exists 0%nat; only 1: reflexivity; only 1: exists (Pos.to_nat p); only 1: rewrite positive_nat_Z; only 1: now destruct 1 || trivial; only 1: exists (Pos.to_nat n); only 1: rewrite positive_nat_Z; only 1: now destruct n).	7.67426896095	4223
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	2.3.1.0.2.1.12	search with cache (only 1: intro z; only 1: case z; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: auto with real).	3.79359984398	1585
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	1.3.2.1.2.1	search with cache (only 1: intros z1 z2 H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	3.86640810966	722
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	2.0.0.0.0.0.1.0.0.0.0.0.0.0.0.4.3	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with r - (r + 1); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with r + 1 - r; only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	24.0307250023	12785
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	14.3	search with cache (only 1: intros; only 1: ring).	0.851897954941	271
Coq.Reals.RIneq.double_var	40	34.0	search with cache (only 1: intro; only 1: field).	2.68693208694	2243
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.364897012711	51
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	1.1.0.4	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.236137866974	57
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.563072919846	32
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	0.3.5	search with cache (only 1: fix odd_equiv 1; only 1: intros n m le; only 1: auto with real).	0.791893959045	229
Coq.Reals.ArithProp.lt_minus_O_lt	40	1.0.5	search with cache (only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: trivial).	0.483686208725	121
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	5.15	search with cache (only 1: fix ind_0_1_SS 1; only 1: assumption).	5.01213479042	4372
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	5.0.0.0	search with cache (only 1: intros; only 1: revert n; only 1: intros; only 1: auto with arith).	0.2740650177	34
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.2	search with cache (only 1: intros; only 1: auto with real).	0.0252549648285	4
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	4.0	search with cache (only 1: intros x x' y y'; only 1: reflexivity).	0.0418219566345	15
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40	0.0.13.0.0.2.6	search with cache (only 1: red; only 1: intros r b; only 1: pattern r at 2; only 1: replace r with r + 0; only 1: intuition try easy; only 1: eauto with real; only 1: ring).	28.215077877	7232
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.106671094894	3
Coq.Reals.Ranalysis2.quadruple_var	40	1.2.0.1	search with cache (only 1: intro esp; only 1: rewrite <- double; only 1: unfold Rdiv; only 1: field).	0.184459924698	26
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	2.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: assumption).	0.140885829926	12
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.1.2.0	search with cache (only 1: intro; only 1: unfold included; only 1: intros A P h x; only 1: eauto).	0.487447977066	122
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	2.6.6.5.5.8.0	search with cache (only 1: intros; only 1: intro; only 1: elim H; only 1: elim H; only 1: intros P exnot allP; only 1: elim exnot; only 1: auto).	20.6961190701	17491
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	9.2.0	search with cache (only 1: unfold included; only 1: intros A P h x; only 1: firstorder).	6.45402884483	1574
Coq.Reals.Rtopology.open_set_P2	40	8.3.0	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros A P h x; only 1: firstorder).	4.7366361618	1163
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.1.15	search with cache (only 1: unfold open_set, interior; only 1: intros; only 1: elim H).	0.244645118713	162
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	2.0.0.0.0.3.0.4	search with cache (only 1: intros x y; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: apply CReal_plus_assoc).	21.2102451324	960
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40	10.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	34.9077441692	464
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	4.10	search with cache (only 1: fix odd_equiv 1; only 1: assumption).	3.35454201698	1283
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40	3.9	search with cache (only 1: fix odd_equiv 1; only 1: eauto using Rle_trans with rorders).	2.50944280624	361
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	2.0.3.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.575670957565	39
Coq.Reals.Rseries.Un_growing_shift	40	0.3.9.6.5	search with cache (only 1: intro; only 1: intro; only 1: intros n nN; only 1: simpl; only 1: auto with arith).	3.06740784645	1644
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	5.5.0.3	search with cache (only 1: intros f X x; only 1: intros; only 1: unfold opp_fct; only 1: auto with real).	9.7583758831	1968
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.2.2	search with cache (only 1: intros f x X; only 1: unfold increasing, decreasing, opp_fct; only 1: auto with real).	0.219219207764	45
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.0.0.4.3.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	3.29792499542	914
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	4	search with cache (only 1: reflexivity).	0.12485408783	13
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.816004037857	76
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.146234035492	18
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.1	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.146570205688	15
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.20	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	1.63837885857	439
Coq.Reals.Ranalysis1.derivable_Rsqr	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.138295888901	6
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	2.40.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	8.98599004745	8263
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.15.2	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	1.74195384979	936
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.23.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	2.94664716721	1778
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.24786901474	32
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.0.0.0.0.0.0.4.0.3.4.1	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	16.9265570641	8094
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.0.0.0.0.0.0.1.0.1.1.0.0.0.0.5.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: unfold R_dist; only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with Un n - Un m; only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	15.9192090034	7577
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0173959732056	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40	5.12.2.11	search with cache (only 1: intros m; only 1: intro; only 1: fix le_div2 1; only 1: auto with arith).	18.0914139748	20169
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40	7.5.0.1.9	search with cache (only 1: intros P H0 HS; only 1: unfold Un_decreasing; only 1: intro; only 1: fix ind_0_1_SS 1; only 1: auto with arith).	35.3792648315	24443
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.1.3.0.0.7.1	search with cache (only 1: replace (3 * (PI / 2)) with PI + PI / 2; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	28.3827979565	7933
Coq.Reals.Rtrigo_calc.tan_2PI	40	1.0.4.1.4.5	search with cache (only 1: change_no_check 2 with (IZR (- -2)); only 1: unfold tan; only 1: unfold Rdiv; only 1: rewrite sin_2a; only 1: rewrite sin_PI; only 1: ring).	2.41958808899	705
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	1.0.0.3.0	search with cache (only 1: replace (PI / 6) with PI / 2 - PI / 3 by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.392752170563	21
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.149270057678	5
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.125715970993	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40	25.0.10	search with cache (only 1: assert (Hyp : 0 < 3); only 1: prove_sup0; only 1: now apply sqrt_lt_R0).	19.9148640633	10023
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.148404836655	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	6.0.0.11.4.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite sin_PI6; only 1: rewrite cos_PI6; only 1: field).	31.0325510502	12042
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.4.1.0.2.0.2	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI4; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: unfold Rdiv; only 1: ring).	10.0980789661	2546
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.4.4.0	search with cache (only 1: replace (5 * (PI / 4)) with PI / 4 + PI by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with - (PI / 4) + PI by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	6.69513201714	1184
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0.1.1	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: Lra.lra).	0.461349010468	82
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.1	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup; only 1: apply PI_RGT_0).	0.405524969101	68
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.12961602211	2
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	1.8	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.317656040192	82
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40	6.5.2	search with cache (only 1: intros P Hrec p; only 1: fix ind_0_1_SS 1; only 1: auto).	15.3365619183	5740
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.0699329376221	10
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0478489398956	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0490581989288	5
Coq.Reals.Ranalysis4.derivable_sinh	40	1.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0514600276947	6
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.16.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.747134923935	606
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.455832958221	50
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.811809062958	92
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.163726091385	22
Coq.Reals.DiscrR.IZR_eq	40	6.0	search with cache (only 1: intros z1 z2 H; only 1: congruence).	0.0968389511108	8
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.16.0	search with cache (only 1: intros; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	2.49725294113	1199
Coq.Reals.ConstructiveReals.CReq_sym	40
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	3.4.1.0.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	1.96145796776	749
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	1.2.6.1.8.3.0	search with cache (only 1: unfold Qle; only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: apply H; only 1: apply Z.lt_gt; only 1: auto with zarith).	11.3338901997	8281
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	8.0	search with cache (only 1: destruct x as [xn limx]; only 1: auto with arith).	0.0520069599152	10
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	0.0.0.2.0.1.0.0.0.0	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x * t)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply (CRealEq_trans _ (t * x)); only 1: apply CReal_mult_comm; only 1: apply (CRealEq_trans _ (t * y)); only 1: apply CReal_mult_proper_l; only 1: assumption; only 1: apply CReal_mult_comm).	8.93118810654	796
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1	search with cache (only 1: apply CReal_isRingExt).	22.595676899	205
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1	search with cache (only 1: apply CReal_isRingExt).	3.14628195763	55
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	2.0.0.3	search with cache (only 1: intros x y H x0 y0 H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	2.11673307419	29
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0537059307098	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	6.4	search with cache (only 1: intros; only 1: ring).	9.74866700172	641
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0643289089203	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	10.1.6.11	search with cache (only 1: intros p n k H H0; only 1: unfold proj1_sig; only 1: induction p; only 1: auto with arith).	28.0836029053	23585
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	3	search with cache (only 1: assumption).	0.0462210178375	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	0.0.1.0.2.16.0	search with cache (only 1: intros; only 1: apply CReal_isRingExt; only 1: ring; only 1: destruct H; only 1: split; only 1: contradiction; only 1: contradiction).	39.4367210865	8393
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0672631263733	4
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.0.9	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	2.3029229641	585
Coq.Reals.R_sqr.Rsqr_mult	40	9.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.376569986343	82
Coq.Reals.R_sqr.Rsqr_plus	40	11.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.816716909409	261
Coq.Reals.R_sqr.Rsqr_minus	40	0.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring_Rsqr).	0.122971057892	3
Coq.Reals.R_sqr.Rsqr_neg_minus	40	1.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.128180027008	3
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0869030952454	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	4.0	search with cache (only 1: intros; only 1: auto with real).	0.156457185745	18
Coq.Reals.R_sqr.Rsqr_div	40	0.0.9.2.2	search with cache (only 1: unfold Rsqr; only 1: intros r1 r2 H; only 1: field; only 1: red; only 1: apply H).	24.5206010342	3046
Coq.Reals.R_sqr.Rsqr_eq_0	40	3.0.3.1	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: unfold Rsqr; only 1: auto with real).	0.358188867569	82
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.5	search with cache (only 1: intros x n; only 1: ring_Rsqr).	0.398931980133	30
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.168534040451	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	3.2.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rsqr; only 1: auto with real).	1.40669298172	140
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.1.0.0.3.0	search with cache (only 1: intro; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: unfold Rsqr; only 1: auto).	0.228549003601	10
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	1.1.6.7.0.3	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	35.249245882	17207
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.1.1.11	search with cache (only 1: intros x; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	11.0757801533	3749
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.1.1	search with cache (only 1: intro f; only 1: intros; only 1: apply derivable_pt_id).	0.152715921402	5
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	2.6.2	search with cache (only 1: unfold Rdiv; only 1: intros y z H; only 1: lra).	0.69614315033	361
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40	0.32	search with cache (only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: apply Rlt_0_1).	0.751209020615	684
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	1.0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: intros; only 1: auto using Rle_antisym).	0.101067781448	6
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0966310501099	4
Coq.Reals.Rminmax.Rmin_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0963969230652	5
Coq.Reals.Rminmax.Rmin_r	40	0.2.1.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: auto using Rle_antisym; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.41689991951	87
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.6.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.728404998779	166
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.12170290947	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.118262052536	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1.0.0.0	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.125822067261	6
Coq.Reals.Rlimit.eps4	40	8.0	search with cache (only 1: intro; only 1: lra).	0.186949968338	25
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.094526052475	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0923819541931	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	9.3.24	search with cache (only 1: intros f w; only 1: intros a b; only 1: firstorder  (subst; auto)).	4.12930798531	3980
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	1.1.1.0.1.0	search with cache (only 1: unfold limit1_in; only 1: intros r1 r2 P H1 H2; only 1: unfold limit_in; only 1: simpl; only 1: intros; only 1: firstorder).	0.773894071579	81
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	1.0.1.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.366927146912	67
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.144394159317	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.132163047791	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.5.0.0	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.517600059509	69
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.152409076691	9
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.1.1.3.5	search with cache (only 1: intro; only 1: intros n0 H' H'0; only 1: replace 0 with x * 0; only 1: auto with real; only 1: auto with real).	3.25591301918	510
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	3.2.0.4.1	search with cache (only 1: intros; only 1: apply Rmult_le_pos; only 1: assumption; only 1: left; only 1: auto with real).	2.79311513901	588
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	1.1.0.0.0.1.1.2	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	6.38071894646	1527
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	0.2.3.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.0429089069366	9
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.071624994278	8
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.154161930084	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	0.5.1.0.0.0.1.0.7	search with cache (only 1: pose proof (Alt_PI_ineq 0) as H; only 1: prove_sup0; only 1: apply Rmult_lt_reg_l with (/ 4); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rmult_0_r; only 1: clear H; only 1: destruct pi2_int; only 1: lra).	18.5324809551	5997
Coq.Reals.Rtrigo1.PI_4	40	0.2.9.2	search with cache (only 1: assert (lo1 : 0 <= 7 / 8) by lra; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	3.48471498489	1219
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.1.0.1.0.0.0.0	search with cache (only 1: intro; only 1: symmetry in  |- *; only 1: symmetry in  |- *; only 1: symmetry in  |- *; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.483202934265	37
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.3.0.0	search with cache (only 1: intros; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	0.189240932465	8
Coq.Reals.Rtrigo1.cos_2a_cos	40	1.7.4.5.2.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: rewrite cos_plus; only 1: unfold Rsqr; only 1: ring).	25.6128258705	10966
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.2.1.0.0.1.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	10.575083971	2197
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg; only 1: apply Rsqr_neg).	0.518291950226	36
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.176260948181	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.6.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.85124707222	179
Coq.Reals.Rtrigo1.cos_shift	40	0.0.0.8.0.1.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_neg; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	7.29812312126	2019
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.7.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.921750068665	205
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.1.0.3.2.1.0	search with cache (only 1: change_no_check 2 with (INR 2); only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: apply lt_0_INR; only 1: apply Nat.lt_0_succ).	9.73466396332	3035
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.0.0.4.1.0.0.0.1.0.1	search with cache (only 1: prove_sup; only 1: pose proof (Alt_PI_ineq 0) as H; only 1: apply Rmult_lt_reg_l with (/ 4); only 1: apply Rinv_0_lt_compat; only 1: prove_sup0; only 1: rewrite Rmult_0_r; only 1: clear H; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	14.9758970737	5167
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.0.0	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.138283967972	3
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.129384994507	2
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with (p - q) / 2 - (p + q) / 2 by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.231914043427	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.1.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with (p - q) / 2 + (p + q) / 2 by field; only 1: pattern q at 3; only 1: replace q with (p + q) / 2 - (p - q) / 2; only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	20.9903070927	2910
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	0.2.3	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: auto with arith real).	0.157624006271	29
Coq.Reals.PartSum.tech5	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0911178588867	3
Coq.Reals.PartSum.tech6	40	10.2.7	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: assumption).	24.0129461288	13199
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	5.0	search with cache (only 1: intros; only 1: assumption).	0.381860017776	45
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	6.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: trivial; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.62651014328	414
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.175207138062	10
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	1.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	8.00969195366	1541
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	1.1.0.0.0.3.10.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite (H (S N)); only 1: rewrite Rplus_0_r; only 1: apply HrecN; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption; only 1: apply le_n).	26.7367880344	19101
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.0.0.0.1.3	search with cache (only 1: intros n; only 1: case_eq n; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl; only 1: intros; only 1: apply Qeq_refl).	1.55960416794	529
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	1.1.1.0.1.1.0.1.0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	26.2521100044	14259
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.5	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0643510818481	15
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	20.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: now subst).	6.67012000084	4996
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	3.3.3.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	1.85482192039	887
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	4.1.1.0.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph x y H z z); only 1: apply CRealEq_refl; only 1: assumption).	1.02589893341	277
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.1.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intro q; only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	5.92785406113	3141
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	13	search with cache (only 1: auto with arith).	0.101753950119	70
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	2.8	search with cache (only 1: intros (a, b) (c, d); only 1: auto).	0.351063966751	200
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	20	search with cache (only 1: auto).	0.171900987625	231
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.0.6	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.0657279491425	18
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	11.3.19.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	21.1411311626	12224
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	0.1.0.4.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: clear H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	1.19300580025	172
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	2	search with cache (only 1: apply CReal_plus_0_l).	0.399794816971	95
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	1	search with cache (only 1: reflexivity).	0.0437428951263	2
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	0.418709993362	80
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.198855876923	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.184887886047	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.5.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.694374084473	84
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	2.0.0.1	search with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: eauto with real).	0.172677993774	16
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40	1.1.2.0.0.2.0	search with cache (only 1: intros; only 1: unfold xr, yr; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: split; only 1: ring; only 1: ring).	2.53549194336	683
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.11.0	search with cache (only 1: intro; only 1: apply pow_nonzero; only 1: discrR).	1.28112506866	542
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40	6.0.2.25.0	search with cache (only 1: intros; only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (?, []); only 1: unfold Rsqrt; only 1: destruct (Rsqrt_exists x (cond_nonneg x)) as (?, []); only 1: auto).	23.0790808201	8847
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: auto).	0.0705540180206	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	3.0	search with cache (only 1: unfold empty; only 1: auto).	0.0812089443207	5
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.3.3.0	search with cache (only 1: intros; only 1: intuition; only 1: unfold assert_false, create; only 1: auto).	0.104022979736	10
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0.0	search with cache (only 1: unfold create; only 1: intros; only 1: intuition).	0.100136995316	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.0.1.0.0.1.0.0.1.0.0.1	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	29.5054979324	6709
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.4	search with cache (only 1: induction m; only 1: reflexivity; only 1: reflexivity).	0.137395143509	13
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.130765914917	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	0.0.3.12	search with cache (only 1: red; only 1: simpl; only 1: unfold Raw.empty, Proofs.Empty; only 1: intuition_in).	0.76328587532	182
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	0.0.17.6.3	search with cache (only 1: destruct m; only 1: intros; only 1: apply find_1; only 1: auto; only 1: auto).	6.01084494591	4099
Coq.FSets.FMapFullAVL.IntMake.find_2	40	0.36.4.7	search with cache (only 1: destruct m; only 1: intros; only 1: red; only 1: auto using Proofs.find_1, find_2).	32.2206020355	33095
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.4.0.4.13	search with cache (only 1: intros m1 m2; only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: eauto).	8.56957602501	5636
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.5.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0998079776764	8
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0745730400085	1
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.19605588913	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.106112003326	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0865201950073	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.1.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.454277038574	8
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	2.4.1	search with cache (only 1: split; only 1: intuition_in; only 1: intuition).	0.22464799881	15
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	3.6	search with cache (only 1: intuition_in; only 1: inversion 1).	0.231248140335	70
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	3.1	search with cache (only 1: intros; only 1: inversion 1).	0.0512971878052	6
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	2.2.0.6.0	search with cache (only 1: intros; only 1: compute; only 1: intros; only 1: intuition_in; only 1: L.MX.order).	0.874101877213	268
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.2	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.160619974136	13
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0542161464691	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0456848144531	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0	search with cache (only 1: intuition_in).	0.0464360713959	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0461249351501	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	6.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0876450538635	11
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	1.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.202638864517	21
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	4.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in; only 1: eauto with ordered_type).	0.0816068649292	7
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	1	search with cache (only 1: eauto with ordered_type).	0.0381760597229	2
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	22.0	search with cache (only 1: unfold empty; only 1: inversion 1).	0.694462060928	563
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	13.1	search with cache (only 1: intros m; only 1: now destruct m).	2.00476884842	1077
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.1.9.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	2.52045702934	1861
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.1.0.4.6.3	search with cache (only 1: intuition; only 1: functional induction find x m; only 1: easy; only 1: auto; only 1: auto; only 1: auto).	1.98468780518	1468
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.0.0.1	search with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.0983049869537	7
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40	0.0.3.29.17	search with cache (only 1: unfold IfEq; only 1: intros m; only 1: case m; only 1: reflexivity; only 1: reflexivity).	6.4961001873	7916
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	0.4.6	search with cache (only 1: simpl; only 1: inversion 1; only 1: reflexivity).	1.3959069252	440
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	2.0.2.1.2	search with cache (only 1: intros m x y e; only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.964154005051	289
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	3.1.3.1	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	1.81526494026	308
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.137432813644	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	1.0.1.0.11	search with cache (only 1: red; only 1: unfold Raw.empty, Raw.Proofs.Empty; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.603428840637	166
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	0.0.5.21.3	search with cache (only 1: intros m x y e; only 1: induction m; only 1: apply find_1; only 1: auto; only 1: auto).	5.94449090958	5302
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	0.0.0.14	search with cache (only 1: intros m x f; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	1.50021791458	1071
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40	1.10.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.240966796875	172
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0533771514893	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.1.0.1.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.131279945374	18
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.2.0.1.1.0	search with cache (only 1: destruct e2; only 1: red; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.129705190659	12
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	4.0	search with cache (only 1: intros; only 1: P.intuition_in).	0.187059879303	16
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.0799598693848	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	10	search with cache (only 1: intuition).	0.171514987946	92
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	2	search with cache (only 1: intuition).	0.0783598423004	12
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	1	search with cache (only 1: intuition).	0.0717768669128	11
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	3	search with cache (only 1: intuition).	0.0714821815491	13
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	3	search with cache (only 1: intuition).	0.077260017395	21
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40	0.7.12.1.16	search with cache (only 1: intro n; only 1: intuition; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: exact (add_3 E H)).	6.40920591354	9684
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	2.3.1	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0891311168671	22
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	1	search with cache (only 1: intuition).	0.180703163147	16
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.0824880599976	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	1	search with cache (only 1: intuition).	0.0979650020599	12
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	3	search with cache (only 1: intuition).	0.105041980743	12
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	1.1.0.2.1.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	13.573307991	2191
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	17.0.0.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	1.61235404015	1610
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40	29	search with cache (only 1: firstorder).	14.2314238548	12882
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	9.2.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: generalize dependent y; only 1: firstorder).	2.90976309776	1251
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.1.5	search with cache (only 1: intros; only 1: red; only 1: apply eq_refl).	0.0753090381622	11
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.0525190830231	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	10.4.5	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	6.11101198196	2324
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	8.2	search with cache (only 1: intros; only 1: firstorder).	1.46285605431	548
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.2.0.4.3	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	1.28427410126	241
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	0.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: intuition; only 1: eauto).	0.118262052536	5
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.4.1	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.509029865265	42
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	1.3.4	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.896741867065	176
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.3.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: firstorder).	0.111413002014	13
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.1.0.7	search with cache (only 1: intros y z H1 H2; only 1: destruct y as [| b y']; only 1: auto; only 1: congruence).	0.892349004745	419
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	3.3.0.9	search with cache (only 1: intros; only 1: constructor; only 1: trivial; only 1: trivial).	0.44612288475	276
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	14.0.0.8	search with cache (only 1: intros x y H; only 1: generalize dependent y; only 1: unfold eq, Equal; only 1: firstorder).	6.87089896202	5274
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.1	search with cache (only 1: intros; only 1: <Coq.Strings.String.t_eqb>).	0.0484490394592	3
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1.0	search with cache (only 1: unfold In; only 1: trivial).	0.0454678535461	3
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	1.0	search with cache (only 1: intro; only 1: reflexivity).	0.0442168712616	3
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	8.2.1.8	search with cache (only 1: red; only 1: intros; only 1: intro H; only 1: inversion H).	0.405066013336	491
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0615179538727	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	20.4	search with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).	0.467542886734	518
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.1.0.5.5.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	1.30440211296	638
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.1.0.5.4.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.844453811646	386
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.1.0.0.55.19	search with cache (only 1: intros; only 1: destruct b, b'; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	5.12851595879	12712
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.4	search with cache (only 1: intros [| ] [| ]; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.109934091568	20
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	3.3.3.2	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	0.223628997803	214
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0677399635315	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.064484834671	4
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0653538703918	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0647969245911	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0658390522003	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.1.22	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: trivial).	2.12799096107	1891
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	1.6.2	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	0.282011032104	114
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.2.0	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0689840316772	5
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	3.17.6	search with cache (only 1: intros s i Hi; only 1: rewrite remove_spec; only 1: tauto).	12.5279679298	9334
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0751168727875	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.9.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	1.11849999428	461
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.1.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0627899169922	4
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0686540603638	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.7.2	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.644764900208	235
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0666239261627	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.067085981369	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0634310245514	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0661201477051	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.4.2	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.132107019424	40
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	1.2.3.1.10.1.11	search with cache (only 1: induction i; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	1.33175587654	1742
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).	0.0759468078613	9
Coq.FSets.FMapPositive.PositiveMap.gempty	40	0.0.0.1.50	search with cache (only 1: intros n; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.51782298088	5029
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0804240703583	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0903389453888	6
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.1.0.0.0.0.1	search with cache (only 1: induction i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto).	0.434536933899	86
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	0.3.6.1	search with cache (only 1: compute; only 1: intuition; only 1: rewrite <- H; only 1: auto).	0.432178974152	199
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.0496220588684	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.054141998291	3
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	2.1	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.0622589588165	5
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.4.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.138476133347	45
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destr_bool; only 1: split; only 1: split; only 1: trivial; only 1: trivial; only 1: split; only 1: intuition; only 1: intuition; only 1: intuition).	0.149253129959	10
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.0.3.6	search with cache (only 1: intros; only 1: intuition; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.488953828812	249
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	1	search with cache (only 1: intuition).	0.0647110939026	2
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	14.3	search with cache (only 1: intros; only 1: intuition).	0.475727081299	381
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.11.5.0	search with cache (only 1: unfold In; only 1: intros; only 1: firstorder; only 1: apply (empty_1 H)).	2.09688282013	1461
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.14920091629	11
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.15.0.1	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	4.85952115059	3180
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	1.1.2.1	search with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.132477998734	43
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	0.2.2.1.0.5.0.0.0.0.0	search with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_1; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply elements_2; only 1: generalize (mem_in_iff m x); only 1: intuition).	12.5411229134	7470
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.0611598491669	2
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	2.0.5.4.1.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: auto with map).	4.2800681591	1862
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	2.1.0.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.149112939835	24
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	0.912449121475	127
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.0.0.2.0	search with cache (only 1: dintuition; only 1: rewrite Equal_mapsto_iff; only 1: split; only 1: auto; only 1: auto).	0.118735074997	7
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.167742013931	28
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	21.2.1	search with cache (only 1: unfold Equal; only 1: intros; only 1: <Coq.Strings.String.t_eqb>).	20.9621109962	10442
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	2.0	search with cache (only 1: unfold Equal; only 1: auto).	0.0652709007263	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	1.9.2.0.1.2	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: reflexivity).	10.4875669479	4855
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40	3.0.2.0.8.7.0.5.11	search with cache (only 1: intros m1 m2; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- find_mapsto_iff, elements_mapsto_iff; only 1: rewrite <- elements_mapsto_iff, of_list_1; only 1: intuition; only 1: unfold eq_key; only 1: apply elements_3w).	33.9959859848	24217
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.0.0.1.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.181218862534	47
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.0.16	search with cache (only 1: intro; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.29368519783	317
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	1.0.3.0.0.1.0.5.0.11.6.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	15.2722048759	11883
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	4.0.2.6.8	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: eapply H; only 1: eauto).	2.76328611374	1221
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.32546710968	123
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40	2.3.2.4.1.1.2.0.1	search with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: generalize (elements_3 m); only 1: destruct (elements m); only 1: discriminate; only 1: destruct p; only 1: injection H as [=-> ->]; only 1: intuition).	12.785148859	7815
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	0.21	search with cache (only 1: red; only 1: inversion_clear 1).	0.335185050964	286
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	0.3	search with cache (only 1: unfold Empty, empty; only 1: eauto).	0.0170409679413	5
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	4.0.2.4.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros p l inlist; only 1: inversion 1; only 1: intros p l inlist; only 1: intuition).	4.20648384094	2985
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0205810070038	2
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0152251720428	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0212461948395	3
Coq.FSets.FMapWeakList.Raw.fold_1	40	7.3.2.22	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	19.6763279438	21618
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	2.3.9.2.7	search with cache (only 1: intros m; only 1: unfold Raw.PX.MapsTo; only 1: intros; only 1: intro abs; only 1: inversion abs).	1.07981586456	1607
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40	2.0.11	search with cache (only 1: fix gcd_greatest 1; only 1: intros m; only 1: auto).	0.511548995972	772
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0183708667755	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0205309391022	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	0.4.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0252499580383	7
Coq.FSets.FMapWeakList.Make.cardinal_1	40	1	search with cache (only 1: auto).	0.0179741382599	2
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0795102119446	4
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0.0	search with cache (only 1: unfold Subset; only 1: compute; only 1: auto with extcore).	0.0707499980927	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	21.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	15.6985058784	4665
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.15.1.4.1	search with cache (only 1: red; only 1: intuition; only 1: red; only 1: unfold Subset, Included, In, mkEns; only 1: Dec.fsetdec).	3.81479096413	1956
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.0	search with cache (only 1: unfold Subset, Empty, impl; only 1: firstorder).	0.0683109760284	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.3.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	0.277916908264	25
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.6.0.0.0.0.2.6.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: split; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	30.9830441475	13071
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.181718826294	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	17	search with cache (only 1: intuition).	0.530867099762	404
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	4.2	search with cache (only 1: intros; only 1: auto with set).	0.148058891296	17
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0	search with cache (only 1: auto with set).	0.0415930747986	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.118486166	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0903730392456	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.258739948273	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0401010513306	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.065416097641	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite FM.mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.067314863205	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0	search with cache (only 1: auto with set).	0.0427560806274	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	0.4.0.4.2.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	4.68326401711	1131
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	0.4.6	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.261740922928	69
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	2.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0591840744019	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	1.12.6	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: trivial with bool).	0.836197853088	453
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1	search with cache (only 1: auto with set).	0.0441420078278	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	1	search with cache (only 1: auto with set).	0.0469810962677	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0456938743591	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0441408157349	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.0450661182404	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	0.0.0.0.0.2.1	search with cache (only 1: intuition; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: intuition).	0.183784008026	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	1.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.081983089447	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	1.11	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	1.03377008438	230
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.0434739589691	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	4.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	1.97176289558	292
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	1.8	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.1974401474	72
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: auto with set).	0.0475678443909	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0536968708038	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.048446893692	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0493218898773	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0470521450043	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0456330776215	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0435650348663	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0466358661652	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0467550754547	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.121577978134	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.0479888916016	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0508348941803	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0495700836182	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0465698242188	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0477330684662	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0478639602661	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0478711128235	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0429630279541	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.572938919067	35
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0441401004791	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0454540252686	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.319240093231	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0430181026459	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	1	search with cache (only 1: auto with set).	0.050360918045	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	1	search with cache (only 1: auto with set).	0.0448770523071	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0479049682617	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0460629463196	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40	0.0.0.2.2.0.0.6	search with cache (only 1: symmetry; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: rewrite mem_iff; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	15.0618231297	2159
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0522179603577	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	2.0.2.0.0.0.5.6	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	2.46930813789	1228
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.8.6	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.917515039444	602
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.045371055603	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	6.0.1.5.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.969846010208	554
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.1.1.1.5.2.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with set fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	2.22044086456	1283
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.0.0.0.1.1.2.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.340553998947	83
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	1	search with cache (only 1: auto with set fset).	0.0453770160675	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	5.0	search with cache (only 1: intros; only 1: auto with set).	0.0534520149231	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.046434879303	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.0.1.2.0.3	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	7.69186806679	1276
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	7.1.1.0.8.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros a; only 1: auto with set).	1.65528392792	1007
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.3.13.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	0.783033132553	534
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.0647599697113	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	29.7.1	search with cache (only 1: intros; only 1: simpl; only 1: eauto with set).	1.8659529686	6041
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	4.0.0.0.0.1	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intuition; only 1: easy).	0.221374988556	134
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.1.0.0.1	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.0145490169525	12
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	3.0.7.2.0.2.6	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros A B f l; only 1: now discriminate; only 1: auto).	11.5138800144	17132
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.12	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.543780088425	342
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.1.5.6	search with cache (only 1: case M.empty; only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.123673915863	269
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	search with cache (only 1: intros; only 1: auto with *).	0.0659821033478	47
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.2.0.11.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.924890995026	1218
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.5.7.8	search with cache (only 1: unfold max_elt; only 1: intro s; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	14.3666911125	12351
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.013179063797	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.1.3	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.050794839859	49
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0238370895386	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0113651752472	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0261311531067	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0112619400024	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0123999118805	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0117750167847	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.3.1	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.316406011581	27
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0118741989136	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40	1.4.42.19.3.4	search with cache (only 1: intros s; only 1: PeanoNat.Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix odd_spec 1; only 1: intuition).	16.9372320175	38652
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	1	search with cache (only 1: decide equality).	0.135397911072	14
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	4.7.10	search with cache (only 1: intros A x P H y H0; only 1: induction H0; only 1: intuition).	4.66145014763	6298
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	1.2.0.0.1.3	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	1.68517112732	777
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.275537967682	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	1.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: easy).	0.0194249153137	8
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0155119895935	6
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	8	search with cache (only 1: solve_proper).	0.340700149536	23
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	2.35	search with cache (only 1: compute; only 1: intuition).	18.7885251045	18921
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	18.1.4	search with cache (only 1: intuition; only 1: red; only 1: simpl_relation).	1.94209313393	1559
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.1.1.0	search with cache (only 1: firstorder; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.218355894089	7
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.3.0	search with cache (only 1: red; only 1: intros; only 1: intuition).	0.0716998577118	6
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	7.0	search with cache (only 1: red; only 1: apply eq_sym).	0.0644438266754	9
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	5.0	search with cache (only 1: red; only 1: apply eq_trans).	0.152470111847	25
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	1	search with cache (only 1: fsetdec).	0.0616860389709	2
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0851781368256	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0866670608521	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.078773021698	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0650980472565	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0922830104828	2
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.094822883606	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.14913892746	2
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	1	search with cache (only 1: fsetdec).	0.0835587978363	2
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: auto).	0.0491960048676	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.2.0	search with cache (only 1: split; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.184938907623	7
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.099191904068	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0869271755219	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	2	search with cache (only 1: fsetdec).	0.118214130402	3
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1	search with cache (only 1: fsetdec).	0.213523864746	2
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	4	search with cache (only 1: fsetdec).	0.686489105225	115
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.172063827515	2
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	1	search with cache (only 1: fsetdec).	0.18351483345	2
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	1	search with cache (only 1: fsetdec).	0.175907850266	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.129348993301	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.337846040726	2
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.129179000854	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.116277933121	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.16170501709	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.146200180054	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.199954986572	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.134449005127	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	1	search with cache (only 1: fsetdec).	0.233964204788	2
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.365995883942	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	2	search with cache (only 1: fsetdec).	0.316141843796	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0730049610138	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0733690261841	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.09938621521	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.102447986603	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.102509021759	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.117362976074	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.114232063293	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	8	search with cache (only 1: fsetdec).	0.568628072739	29
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.157835006714	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113570928574	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.154257059097	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.172154903412	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.187373876572	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.239588022232	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.245890855789	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	5	search with cache (only 1: fsetdec).	0.222828149796	6
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.184823989868	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0932519435883	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0900499820709	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0748970508575	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0933051109314	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0944030284882	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.104338884354	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.116050004959	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0805680751801	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.171464920044	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	1	search with cache (only 1: fsetdec).	0.182145118713	2
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.212806940079	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.193238973618	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.7	search with cache (only 1: red; only 1: fsetdec).	0.138257980347	11
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.7	search with cache (only 1: expAdd; only 1: fsetdec).	0.205528020859	9
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.270769119263	5
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	1.4	search with cache (only 1: expAdd; only 1: fsetdec).	0.434055089951	7
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.37344288826	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	2.3	search with cache (only 1: expAdd; only 1: fsetdec).	0.386996030807	7
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.0.0.0.2.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.145101070404	31
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.2.0.3.3	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: reflexivity; only 1: exact eq_equivalence; only 1: fsetdec).	0.291870117188	85
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	2.2.1.8.0	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: reflexivity; only 1: exact eq_equivalence; only 1: fsetdec).	1.25241494179	657
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.3.16	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	18.6820020676	5270
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.5.1	search with cache (only 1: intros; only 1: apply fold_equal; only 1: fsetdec).	0.58577299118	16
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.1	search with cache (only 1: apply cardinal_1; only 1: red; only 1: firstorder).	0.0985171794891	4
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	5.15.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	3.68309497833	1267
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	3	search with cache (only 1: intuition).	0.23184800148	49
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: fsetdec; only 1: auto with fset).	0.130395174026	10
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.2.10	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	3.19983005524	1313
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0	search with cache (only 1: auto with set fset).	0.0529940128326	1
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0674419403076	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0667901039124	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0528249740601	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.216445922852	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0609650611877	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.424515962601	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.111791849136	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	1	search with cache (only 1: fsetdec).	0.348033905029	15
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	10	search with cache (only 1: fsetdec).	0.0846819877625	24
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.113745927811	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	4.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.111941099167	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.13010597229	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	1	search with cache (only 1: fsetdec).	0.439924955368	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.1868019104	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	2	search with cache (only 1: fsetdec).	0.202102899551	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	1	search with cache (only 1: fsetdec).	0.695834875107	39
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.319668054581	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	5.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0741109848022	8
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	9	search with cache (only 1: fsetdec).	0.142919063568	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	7	search with cache (only 1: fsetdec).	0.14624786377	20
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.102750062943	1
Coq.FSets.FMapList.Raw.empty_1	40	10.7	search with cache (only 1: intros x; only 1: inversion_clear 1).	0.310866832733	280
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.014564037323	2
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	4.1.2.7.0.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: inversion_clear 1).	15.0835030079	11283
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.1.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: inversion_clear Hm; only 1: auto).	8.91292190552	4269
Coq.FSets.FMapList.Raw.elements_1	40	0.0	search with cache (only 1: unfold PX.eqke; only 1: intuition).	0.0196058750153	2
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0147058963776	1
Coq.FSets.FMapList.Raw.elements_3	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: auto).	0.0214610099792	3
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	3.2.2.22	search with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	8.05878901482	8325
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.0.3.0.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).	1.28129982948	651
Coq.FSets.FMapList.Raw.map_sorted	40	2.6.0.1.0.0.3	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion 1; only 1: eauto).	4.57447695732	3071
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	1.0.0.0.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.748310089111	397
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.0527510643005	11
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	3.0.1.11	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.461236953735	332
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0194301605225	1
Coq.FSets.FMapList.Make.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0218329429626	3
Coq.FSets.FMapList.Make.elements_3	40	0.2	search with cache (only 1: induction m; only 1: auto).	0.0398979187012	13
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0200679302216	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40	3.24	search with cache (only 1: fix gcd_divide 1; only 1: auto with sets).	20.1763341427	28710
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	2.5.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0618698596954	76
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	4.3.0	search with cache (only 1: red; only 1: intros y H2; only 1: auto).	0.0201280117035	10
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	2.2.1.0.0.0.0.0.0.2.2.0.8	search with cache (only 1: unfold unorm, lnorm; only 1: destruct nzhead; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	15.6986129284	12612
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	1.58718395233	2786
Coq.Numbers.DecimalFacts.unorm_invol	40	1	search with cache (only 1: now induction d).	0.0337650775909	2
Coq.Numbers.DecimalFacts.norm_invol	40	1.1.13	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.168862104416	132
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	97	search with cache (only 1: now induction d).	11.2236049175	11493
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.13	search with cache (only 1: destruct n; only 1: reflexivity; only 1: auto).	0.792866945267	429
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	0.0.0.0.0.0.0.0.0.0.0.0.4.8.18	search with cache (only 1: intuition; only 1: induction d; only 1: now f_equal; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	27.0741460323	11010
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	4	search with cache (only 1: apply of_lu_double_gen).	0.0655319690704	5
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	61	search with cache (only 1: now induction d).	2.05633807182	1918
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	search with cache (only 1: auto).	0.0612859725952	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.0640029907227	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	1.2.0.0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: unfold Pos.to_uint; only 1: rewrite of_lu_rev; only 1: generalize (of_to p); only 1: now rewrite E).	0.158725976944	26
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0	search with cache (only 1: now simpl).	0.0343761444092	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	0.0.0.0.0.0.0.0.0.0.0.4.4.17	search with cache (only 1: revert d; only 1: intros a; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	12.8080530167	4277
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.2.0.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: simpl; only 1: f_equal).	0.058886051178	7
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	5.9.1	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now destruct (nzhead d) eqn:H).	2.05519199371	677
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0709159374237	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.11.3	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.538125991821	270
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	1.0.0.0	search with cache (only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: rewrite Unsigned.to_of; only 1: reflexivity).	0.117177009583	5
Coq.Numbers.DecimalN.Signed.of_int_norm	40	2.3.15	search with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	12.4027500153	5791
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	7	search with cache (only 1: now subst).	0.0573468208313	20
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	0.0.11.5.4	search with cache (only 1: repeat red; only 1: simpl in *; only 1: intros n IH; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.29737091064	2976
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.0.15.6.3	search with cache (only 1: repeat red; only 1: simpl in *; only 1: intros n IH; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	18.4407329559	8182
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.0.6.8.1	search with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.967802047729	353
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	1.0.0.1	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.199961900711	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.0	search with cache (only 1: unfold Symmetric, Z.eq; only 1: now nzsimpl).	0.121078968048	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	1.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.27446103096	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.108985185623	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.211552143097	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	1.2.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.250262022018	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.4.8	search with cache (only 1: intros m IH; only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	5.79445290565	1403
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.289664030075	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.4.1.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: intro m; only 1: now nzsimpl).	0.48025393486	10
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.1	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.202764034271	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.0.1.0.3	search with cache (only 1: intros; only 1: apply le_ngt; only 1: apply N.lt_eq_cases; only 1: unfold Z.add, Z.eq; only 1: now right).	0.11357998848	38
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.3.0	search with cache (only 1: intros; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.0731339454651	20
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.1.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.233170032501	35
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.100402116776	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0187089443207	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.018669128418	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	2.5.9	search with cache (only 1: intro p; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	14.1677770615	7890
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	0.9.0.9.7.0	search with cache (only 1: intros; only 1: split; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	23.4775760174	13108
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.12.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	3.14276695251	2256
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0369389057159	23
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	4.7.4.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	33.7789769173	8372
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.1.4	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (mul_0_r a); only 1: now apply mul_le_mono_nonpos_l).	0.290165901184	123
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.1.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.106402873993	54
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.1.3.0.4.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: apply lt_le_pred in H2; only 1: rewrite mul_1_l in H1; only 1: setoid_replace P 0 with -1 in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	12.2181041241	11501
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0403759479523	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.1	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0202889442444	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	1.0.1.7.0.0.0.0.3.37	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_refl; only 1: order').	20.5796527863	21259
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.4.3.0.5	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	3.52279806137	836
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.0.0.0.2.1.0	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: destruct b; only 1: now simpl; only 1: now nzsimpl).	0.256603002548	43
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.1.1.0.1.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	2.53605890274	1157
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.220327138901	34
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0622148513794	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.13472700119	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0242791175842	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	1.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0255320072174	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.376741170883	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0247361660004	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	4.3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.141386985779	66
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0246529579163	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply orb_false_r).	0.0263469219208	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40	21.2.22.3	search with cache (only 1: generalize (lt_succ_diag_r 0); only 1: intros a H; only 1: bitwise; only 1: intuition).	31.3783519268	41656
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.3.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.120828151703	39
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.2.2	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.161500930786	34
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	0.20.31	search with cache (only 1: unfold lnot; only 1: apply succ_inj; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	27.3500628471	13069
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	2.4.1.6.7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite testbit_eqb by order; only 1: apply eq_true_iff_eq; only 1: rewrite <- testbit_spec' by trivial; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	7.91909003258	3025
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	1.0.1	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.159956932068	22
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	1.1.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.194885015488	32
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0309810638428	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	4.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0453159809113	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.3.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0613958835602	12
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.22.3	search with cache (only 1: intros a; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	3.59756994247	2421
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	6.6.0.27.3	search with cache (only 1: intros a; only 1: unfold lnot; only 1: split; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	5.42993116379	8125
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	0.0.2.0.0.0.0.0.1.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite <- !negb_even; only 1: apply lt_ind with (4 := Hb); only 1: solve_proper; only 1: now nzsimpl; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: rewrite even_mul; only 1: now destruct (even a); only 1: order).	3.94750785828	1247
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0982179641724	19
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	4.0.1.0.2.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: intros; only 1: rewrite H; only 1: apply gcd_divide_iff; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	10.3066170216	8236
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	5.2.1.0.8.2.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_1_l, le_0_1).	8.12273287773	12681
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0399289131165	26
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.3.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: trivial; only 1: apply gcd_divide_r).	0.0183022022247	17
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	4.3.0	search with cache (only 1: intros n; only 1: intros; only 1: apply abs_nonneg).	0.0120489597321	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	1.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0127048492432	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	4.12.0.20.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intuition; only 1: trivial using divide_1_l, le_0_1).	18.0369980335	16651
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0134630203247	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0121288299561	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.6.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.911605119705	781
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	2.3.0.1.1.0.1.0.0.1	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	10.8553919792	8417
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	3.0.3.2.1.8.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	15.9108650684	14137
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0590488910675	14
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	2.63633704185	1266
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.84530615807	1695
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.7.0.0.0.8.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply sub_le_mono_r).	7.29353404045	6054
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.3.0.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	21.4816451073	11394
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	0.463246107101	258
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	2.4.0.1.1.2.4.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	7.80097603798	6436
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.0.1.1.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	8.09541487694	5594
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.7.2	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0721659660339	70
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.3.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.032243013382	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.2.3.2	search with cache (only 1: intro; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.159449100494	76
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.17.2	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	2.25059199333	3164
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	6.1.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred m); only 1: now rewrite le_succ_l).	1.29243612289	1029
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.4.1.1	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0384390354156	41
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.0.4.1.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: order).	0.0249519348145	10
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	0.2.0.1.1.0	search with cache (only 1: intro; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: order).	0.0764420032501	28
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	0.0.4.0.4.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: rewrite pred_succ; only 1: split; only 1: now apply lt_pred_le; only 1: now apply lt_pred_le).	8.92294001579	7925
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.3.0.3.2.0	search with cache (only 1: intros n m; only 1: split; only 1: rewrite <- lt_le_pred; only 1: now apply lt_pred_le; only 1: rewrite <- lt_le_pred; only 1: now apply lt_pred_le).	1.78143692017	1452
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	1.2.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: rewrite <- le_succ_l; only 1: reflexivity).	0.0422210693359	36
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.6.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: now apply lt_le_pred).	0.18827009201	132
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	1.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply le_succ_l).	0.0476570129395	48
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.10.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.744327068329	446
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.8.7	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.281382083893	315
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.1.7	search with cache (only 1: unfold sgn; only 1: intro n; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	1.49676990509	368
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0173621177673	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0534529685974	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	3.0.9	search with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.0933828353882	91
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	2.7.1.9	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now right).	4.26647400856	2394
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.3.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.19981098175	186
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0234878063202	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.4	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.0270140171051	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.3.2.1.3	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: apply opp_neg_pos, lt_0_1).	0.696827173233	565
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	7	search with cache (only 1: apply NZQuot.div_pos).	0.246640920639	56
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0293288230896	7
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.3.0.0.0.2.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	2.54056191444	2101
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.1	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0149519443512	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.1.0.1.0.3.0.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	1.36855196953	1220
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.1	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.014396905899	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.055643081665	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0645320415497	30
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	0.0626919269562	50
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.013827085495	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0140199661255	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	4.1.0.1.3.0.1.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: now nzsimpl).	9.51212000847	5610
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0758030414581	66
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.388531923294	71
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.0994229316711	68
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: order).	0.452851057053	156
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	16.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	9.63870596886	5036
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	2.1.1.4	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.706774950027	267
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	1.1.1.2.2.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.688221931458	289
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.4.4.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	1.3696269989	610
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0302209854126	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	11.8154520988	8607
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.3.3.0.4.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.59482502937	1524
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.302606105804	149
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	1.1.4.0.8	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	10.9752161503	3517
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.2.2.2	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_succ_l, pred_succ).	0.0556700229645	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.0.0.2.4.3.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: split; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ; only 1: rewrite sub_succ_l; only 1: now rewrite pred_succ).	12.4370830059	3317
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.7.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	1.87433004379	462
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.4.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.79748678207	826
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	2.0.0.0.3.1.0.3.1.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	5.13138604164	4557
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	6.2.3.2.2.3.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	7.64763689041	8713
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0317389965057	17
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.4.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_assoc).	0.237321853638	30
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	0.1.2.2	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.16468000412	30
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0.0.1.0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now rewrite opp_involutive; only 1: intro; only 1: rewrite add_succ_l; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.507390022278	98
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	2.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	0.0638608932495	11
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	4.6.3.2	search with cache (only 1: intros n1 n2; only 1: intro m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_cancel_r).	4.89551496506	3777
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	5.15.2	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	9.88405704498	4610
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	2.7.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.417797803879	113
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.0.2.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.022745847702	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	3.7	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.416985034943	181
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	4.3.0	search with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: now rewrite add_move_r, sub_opp_r).	0.079742193222	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	5.2.0.9	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	3.70210886002	1579
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	9.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.578780174255	131
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.13.3.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.634830951691	920
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.4.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition).	0.0314788818359	43
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	3.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.0415070056915	49
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0259239673615	28
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.1.0.1.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.194236040115	143
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00686693191528	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.00694990158081	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.8.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	1.18913888931	1381
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	1.0.0.0.2.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0560340881348	52
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.179897069931	58
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.7.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.244055986404	232
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	1.0.2.3	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0775220394135	47
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	1.0.1.2.0.1	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.184020042419	84
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.0.1.3.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.23907494545	170
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0169789791107	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	12.8568379879	9251
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.2.8.0.8.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	11.0755259991	5352
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.2.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.62813782692	463
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	2	search with cache (only 1: Z.order).	0.0182528495789	20
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.0.1.1.2	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	1.12477397919	576
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	9.0	search with cache (only 1: intros x y; only 1: now intros ->).	0.191835165024	49
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	0.13.1	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.419316053391	185
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0859570503235	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0	search with cache (only 1: reflexivity).	0.0737018585205	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40	2.1.0.0.0.0.3.1	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now try rewrite H).	2.28635001183	558
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.1	search with cache (only 1: destruct x; only 1: reflexivity).	0.100306987762	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.0714180469513	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.1.0.0.1.2	search with cache (only 1: simpl; only 1: induction n; only 1: destruct x; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	2.27073597908	374
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.129137992859	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0968260765076	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0956010818481	2
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0918500423431	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	2.6.6.2	search with cache (only 1: intros; only 1: destruct x; only 1: injection H; only 1: auto).	37.3550510406	916
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	14.33.4.18	search with cache (only 1: destruct x; only 1: simpl in *; only 1: compute; only 1: now intros ->).	21.8638319969	24681
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	4.15.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	18.7056849003	1191
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	3.5.4	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	0.459896087646	182
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0917191505432	4
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40	1.0.1.0.1.1.0.0.7.4	search with cache (only 1: intros; only 1: red; only 1: replace k with (k - size + size)%nat by lia; only 1: induction (k - size)%nat; only 1: rewrite nshiftl_size; only 1: rewrite nshiftl_size; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	17.618103981	2796
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0	search with cache (only 1: auto).	0.0711629390717	1
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.0	search with cache (only 1: destruct x; only 1: reflexivity).	0.0975720882416	2
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	0.4.5	search with cache (only 1: intro; only 1: destruct x; only 1: auto).	9.2274620533	60
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0964848995209	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0731468200684	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0729930400848	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: auto with zarith).	0.0753169059753	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	1	search with cache (only 1: reflexivity).	0.0768280029297	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	1	search with cache (only 1: auto).	0.0725951194763	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0935151576996	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	1.0	search with cache (only 1: intros x y; only 1: auto).	0.0835790634155	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40	3.10.0.0	search with cache (only 1: intros; only 1: unfold add31c, add31, interp_carry; only 1: rewrite phi_phi_inv; only 1: reflexivity).	34.7621569633	5493
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	0.2.0.3.0	search with cache (only 1: unfold add31; only 1: intros n; only 1: simpl; only 1: repeat rewrite phi_phi_inv; only 1: auto).	0.437519073486	60
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0846219062805	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	1.0.0.1	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.233685970306	21
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	3.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.115602016449	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	2.3	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.855100154877	66
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	7.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: apply phi_phi_inv).	0.547242164612	85
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0822060108185	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	3.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	4.25897312164	593
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	3.2.1.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	1.89691114426	433
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40	5.7.1.10.5	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: intros; only 1: apply Zeq_is_eq_bool; only 1: auto).	6.27051305771	3952
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	73	search with cache (only 1: lia).	11.4594891071	18287
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.0.0.0.0.0.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.051577091217	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0241317749023	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0471189022064	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0736060142517	26
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0241098403931	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0263428688049	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	10.3.1.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	4.29839897156	1614
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	19.2.5.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: symmetry; only 1: rewrite Zminus_mod_idemp_r; only 1: apply Zplus_mod_idemp_l).	26.7526869774	23138
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	7.1	search with cache (only 1: intros; only 1: auto with zarith).	0.0850341320038	30
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.8.0.3.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto using Z.lt_gt with zarith; only 1: apply two_power_pos_equiv; only 1: auto using Z.lt_gt with zarith).	1.42265605927	630
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	0.5.7.2.0.41	search with cache (only 1: intros n; only 1: intros h; only 1: generalize (proj1 (is_zero_spec n)); only 1: intros ->; only 1: auto; only 1: auto).	37.1650011539	50935
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	search with cache (only 1: auto).	0.0589439868927	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with 2 ^ (n - p) * 2 ^ p by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	19.5410380363	3664
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40	0.0.0.6.2	search with cache (only 1: split; only 1: now apply Z.mod_pos_bound; only 1: apply Z.mod_le; only 1: auto; only 1: auto).	0.841830968857	154
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.19	search with cache (only 1: Z.swap_greater; only 1: Z.order_pos).	0.75941491127	369
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0500848293304	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	5.4	search with cache (only 1: intuition; only 1: now subst).	0.123719930649	26
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.3	search with cache (only 1: red; only 1: reflexivity).	0.05681681633	5
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: auto).	0.0529642105103	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: auto).	0.0490062236786	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	68	search with cache (only 1: intuition congruence).	1.59076189995	3379
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0644378662109	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.062285900116	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.1.1.0.26	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: congruence).	4.32366013527	4478
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.2.4.5	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: <Coq.Strings.String.t_eqb>; only 1: trivial).	0.675677061081	232
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0491290092468	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	3	search with cache (only 1: apply sub_spec).	0.0602221488953	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0529110431671	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.1.2	search with cache (only 1: destruct 1; only 1: unfold eqm; only 1: reflexivity).	0.0672268867493	6
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.1	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0956070423126	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.1	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.16938495636	6
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	1.0.1.3.7	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: case eqbP; only 1: reflexivity; only 1: auto).	4.37554478645	543
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.0501799583435	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.0.0.0.2.0	search with cache (only 1: destruct a, b; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	0.0922331809998	9
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0594701766968	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0580999851227	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.5.3.1.0.2	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	6.48661708832	2266
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.0.2.0.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: generalize (eqb_spec n 0); only 1: rewrite andb_false_r; only 1: auto).	0.114979028702	14
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.1.4.1.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	1.7024512291	618
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	10.7	search with cache (only 1: intros P HP p; only 1: firstorder).	0.564110994339	425
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0155200958252	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	1.3.7.3.11	search with cache (only 1: intro n; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	3.23983979225	2360
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	12.3.1	search with cache (only 1: intros; only 1: unfold eqb, eq; only 1: now apply Z.eqb_eq).	0.863773107529	480
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.0.1.0.1.0	search with cache (only 1: split; only 1: congruence; only 1: red; only 1: intros; only 1: auto with *; only 1: congruence).	0.274953126907	33
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	2.0.0.10	search with cache (only 1: apply Z.pow_gt_1; only 1: red; only 1: auto; only 1: easy).	0.33904004097	184
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.0.0.0.0.0.0.4.17	search with cache (only 1: transitivity 1; only 1: unfold Z.lt; only 1: reflexivity; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: unfold Z.lt; only 1: auto with zarith; only 1: unfold Z.lt; only 1: reflexivity).	1.69580101967	2022
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	1.0.0.0.0.0.5	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: simpl; only 1: reflexivity; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.527677059174	138
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	5.0	search with cache (only 1: zify; only 1: ring).	0.335303783417	41
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	5	search with cache (only 1: tauto).	0.0666608810425	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.0.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.116332054138	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	1.12.0.0	search with cache (only 1: intro n; only 1: zify; only 1: rewrite Z.sub_0_r in *; only 1: apply NZ_to_Z_mod).	1.98987698555	720
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: auto).	0.16633605957	5
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.0770411491394	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.139545202255	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0752599239349	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	1.12	search with cache (only 1: repeat red; only 1: parity_binop).	1.2984828949	752
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	14	search with cache (only 1: parity_binop).	1.08894991875	1314
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	10.8.10	search with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	7.41410183907	12021
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	3.2.8.1	search with cache (only 1: intro H; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	1.6028110981	2433
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.0.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0127139091492	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	1.6.14.0.11.5	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	22.4843199253	16079
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.3.0.4	search with cache (only 1: induct ltac:(n); only 1: intro H; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intros z n H; only 1: now rewrite pred_succ).	0.293433904648	144
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.0.6.2.0.3	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.73155593872	1600
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.3.2.0.1.1.2.6.0	search with cache (only 1: cases ltac:(n); only 1: intro; only 1: rewrite pred_0; only 1: order; only 1: intros n m LE; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: apply le_succ_l; only 1: order).	11.9264290333	9926
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.1.0.0.1.6.0.6	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: apply le_succ_l; only 1: rewrite pred_succ; only 1: order).	3.62003493309	2847
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.6.8	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	1.62001299858	1487
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	3.1.4.0.1.0.2.4	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: intro H; only 1: apply le_0_l; only 1: intro; only 1: intro; only 1: rewrite pred_succ; only 1: apply le_succ_l).	23.4927079678	11460
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.0.1.0.0.0.4	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	1.38496494293	1346
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	0.3.0.1.0.0.0.0.1.2.0.2.0.9	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: split; only 1: apply le_le_succ_r; only 1: intro H; only 1: apply le_succ_r in H; only 1: destruct H as [H| H]; only 1: assumption; only 1: symmetry in H; only 1: false_hyp H neq_succ_0; only 1: intros n m; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	32.6113510132	28534
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	1.3.0.13.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: auto').	4.27339506149	7358
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	8.0.1.3.1	search with cache (only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl').	0.375026941299	763
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.1.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.0318808555603	25
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.2	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0358738899231	46
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.4.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.00819802284241	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.6.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.01092004776	12
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.2.5.4.1.6	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: apply (neq_succ_0 0); only 1: now rewrite <- one_succ; only 1: now nzsimpl').	2.496281147	3222
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.0394728183746	27
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.00590491294861	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.00589680671692	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	10.0.0.4.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.348387002945	548
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.8.0	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.137988090515	107
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.13.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.360488891602	621
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.2.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.122261047363	61
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.7.3.24.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: auto').	1.97529911995	4720
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.3.3.2.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.462591171265	435
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.1.0.4	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.244468927383	141
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	5.0.11.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto').	2.93163108826	1958
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.7.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: auto').	0.0316548347473	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.9.3.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	0.0616910457611	123
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.1.6.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto').	0.498450994492	198
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	2.2.9.7.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto').	3.3059220314	1767
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.28.14.0.10.0.2	search with cache (only 1: intro H; only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	18.1202018261	48523
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.1.5.3.8.8.0.11.3	search with cache (only 1: split; only 1: exists (a / b); only 1: apply Private_NZDiv.div_exact; only 1: auto'; only 1: auto'; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	22.0546689034	59071
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0133199691772	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	18.9	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.349699020386	633
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.3.1.4	search with cache (only 1: intros; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.107644081116	68
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	2.0.0.4.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.179244041443	140
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	6.0.5	search with cache (only 1: intro H; only 1: unfold def_add; only 1: now rewrite recursion_0).	0.117557048798	113
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	8.7.10	search with cache (only 1: intro y; only 1: unfold def_mul; only 1: now rewrite recursion_0).	1.14086198807	1257
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	6.11.40.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	19.959020853	20705
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40	1.34.5	search with cache (only 1: intros x x' EQ; only 1: compute in *; only 1: f_equiv').	11.3007690907	14241
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	7.21	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.597007036209	448
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.1.1.3.11.2	search with cache (only 1: intro n; only 1: unfold even; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	0.826725006104	745
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	0.0.0.20.0.3	search with cache (only 1: rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	2.28686594963	1586
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.3.1.0.1.0.1.0.0.6	search with cache (only 1: intros; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	22.1744191647	12150
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	7	search with cache (only 1: solve_proper).	0.175082921982	92
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: now try order'; only 1: now try order').	0.635546922684	275
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.1	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0196328163147	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	1.5.0.0.6.4	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: order').	2.8977971077	2277
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.1.4.6	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.308832883835	171
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0315930843353	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0109272003174	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.1.5	search with cache (only 1: intros a; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.106255054474	30
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.2.6.2	search with cache (only 1: intros a0; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.51630115509	277
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.5.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: rewrite div_small; only 1: order'; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.808475971222	323
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0583579540253	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0589060783386	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0676581859589	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0231139659882	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	1.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0234200954437	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0229349136353	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	4.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0236909389496	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	3.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0854299068451	81
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0239171981812	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.024943113327	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	0.0.7	search with cache (only 1: unfold ones; only 1: intros; only 1: now rewrite shiftl_mul_pow2, mul_1_l).	0.162616014481	35
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.6.3.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.298343896866	108
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.1.1.0.0.0.0.1.0.0.0	search with cache (only 1: intros a n H; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	2.9570479393	1975
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.5.0.0.9.0.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	8.65502715111	8054
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	1.0.1.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.106584072113	50
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40	0.0.13.3.1.0	search with cache (only 1: intros a n H; only 1: pose proof (land_lnot_diag_low a n H) as H'; only 1: symmetry; only 1: apply add_sub_eq_l; only 1: rewrite add_nocarry_lxor, lxor_lor by trivial; only 1: now apply lor_lnot_diag_low).	8.55944895744	5955
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.0.0.2	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.167757987976	218
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.4.0	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.012932062149	8
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	7.0.0.2.0.0.0	search with cache (only 1: intros n m; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: now nzsimpl').	4.12639594078	2077
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	2.2.0.0.0.1.3	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	2.10139107704	1553
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	3.1.3.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	5.74536204338	4598
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	11.0	search with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	3.21927905083	544
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	12.0.2.1.1	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: trivial; only 1: now apply le_0_l).	19.7339668274	6143
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	10.1.0.2	search with cache (only 1: intros; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	8.11565589905	2017
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.1.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.12570309639	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	8.0.5.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl'; only 1: apply le_0_l).	1.08816194534	497
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.2.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	7.19020104408	2443
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.1.0.1.0.5.0.0.0.4.0.3	search with cache (only 1: intros; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: intuition order; only 1: now rewrite <- H).	23.8133900166	21721
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.5.1.1.5.5.4	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: apply Private_NZPow.pow_le_mono_l; only 1: order').	8.53844380379	10059
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.4.1.5.0.3.4.0.1	search with cache (only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: order'; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: eauto; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	14.539910078	17525
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	3.0.0.1.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono_r).	13.6898739338	4102
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	3.42435908318	1001
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.1.0.0.1.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?succ_le_mono).	12.5618479252	6472
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?succ_le_mono; only 1: now apply mul_le_mono_r).	0.871814012527	182
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00574493408203	3
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.3.3.0.1.1	search with cache (only 1: induct ltac:(n); only 1: unfold lcm; only 1: now nzsimpl; only 1: intros a b; only 1: unfold lcm; only 1: now nzsimpl).	0.648743867874	514
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	1.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.20320391655	99
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.12.0.2.12.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: intuition; only 1: trivial using divide_1_l, le_0_1).	4.85763382912	4408
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.0139939785004	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	3.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.427341938019	249
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.1.0.1.23.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l).	27.7931830883	37783
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	7.1.0.5.4.0.13	search with cache (only 1: induct ltac:(m); only 1: rewrite sub_succ_r; only 1: now nzsimpl'; only 1: intros m IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	27.730853796	20585
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	5.1.3.1.2	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	37.4021630287	6876
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40	2.0.0.4.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	1.14992380142	221
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	2.0.4.8	search with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	0.829501867294	332
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.5.16	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl; only 1: now nzsimpl).	1.60195922852	1339
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.1.0.3.18.23.10	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	12.3729801178	11465
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	3.0.0.1.0	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: now nzsimpl; only 1: now nzsimpl).	0.0240838527679	9
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.4.1	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	2.28592610359	1676
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0586030483246	52
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.2.4.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	0.363239049911	409
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.00875115394592	5
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	1.0.2.1.0.1.11.2.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with a; only 1: apply mul_nonneg_nonneg; only 1: trivial; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm).	10.5820589066	9920
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	9.0.0.1.2	search with cache (only 1: intros a b Ha Hb; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using mod_small).	1.80257797241	1933
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0622329711914	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.0.0.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0595660209656	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0290038585663	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.3.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.113283157349	22
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0844528675079	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.2.1	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0964968204498	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	3.3	search with cache (only 1: intro n; only 1: now nzsimpl').	0.047844171524	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	11.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.260312080383	274
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.1.1.0.0.3.1.0.2.0.13.1.11.3	search with cache (only 1: split; only 1: intros x; only 1: apply le_refl; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	22.7342679501	18218
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.5	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0346720218658	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	1.3.0.2	search with cache (only 1: intro; only 1: intros x y; only 1: apply lt_eq_cases; only 1: now right).	0.0256087779999	31
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0169160366058	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0187149047852	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	3.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0181131362915	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	4.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.021968126297	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	4	search with cache (only 1: order).	0.0972747802734	56
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	6.1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0201900005341	14
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	4.0	search with cache (only 1: intros x y z; only 1: order).	0.0103008747101	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	2.10.1	search with cache (only 1: intros n m p; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.399215936661	617
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	6.0.5	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	0.438098907471	529
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	4.1.2	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: order).	0.0557911396027	45
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	7.1.7.1.0.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: split; only 1: rewrite lt_succ_r; only 1: apply le_succ_l; only 1: rewrite lt_succ_r; only 1: apply le_succ_l).	12.3247699738	13027
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	8.1.3.1.2.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	10.4242420197	10745
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.2.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0169749259949	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.3.2	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.025130033493	15
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.2.0.5	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0459821224213	76
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.601761817932	308
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.0.0.0.5.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).	0.552880048752	250
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	4.3.9.6.0	search with cache (only 1: intros; only 1: split; only 1: generalize (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	6.36458683014	5683
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	2.2.5.5.1	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.579612016678	633
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.2.6.0	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.11541891098	73
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	2.2.0.2	search with cache (only 1: intros; only 1: split; only 1: order; only 1: order).	0.0336799621582	20
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0124590396881	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	2.0.2.4.2	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.471117973328	350
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.2.2.0.11.2	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: split; only 1: order; only 1: order; only 1: intuition order).	2.89263796806	5199
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0130321979523	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0129270553589	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.3.3.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: right; only 1: order).	0.272462129593	189
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.7.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.584501981735	319
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.0.1.0.2	search with cache (only 1: intros n H; only 1: split; only 1: rewrite lt_succ_r; only 1: order; only 1: rewrite lt_succ_r; only 1: order).	0.191924095154	90
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40	1.5.15.3	search with cache (only 1: intros H1 n H2; only 1: compute; only 1: intros; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	29.4377288818	5263
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	15	search with cache (only 1: firstorder).	0.393118143082	712
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	20	search with cache (only 1: easy).	0.0528330802917	201
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	10.12	search with cache (only 1: intros x; only 1: reflexivity).	1.21254205704	1283
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	1.2.0.1.17.1	search with cache (only 1: simpl; only 1: induction n; only 1: apply lt_succ_diag_r; only 1: simpl; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	20.3548259735	10301
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	2.25.5	search with cache (only 1: simpl; only 1: fix odd_spec 1; only 1: now unfold ofnat).	7.12089419365	25428
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	1.0.0.0.0.2.3.3.1	search with cache (only 1: induction n; only 1: simpl; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.32549786568	1169
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0503120422363	3
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.1.0.1.6.1	search with cache (only 1: intro n; only 1: nzsimpl'; only 1: now nzsimpl'; only 1: order; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.8367960453	335
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.0.0.10.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	2.83010983467	2313
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.5.4.3	search with cache (only 1: intros n; only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	5.42035698891	727
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.3.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.283164024353	31
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0195250511169	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.036819934845	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0254430770874	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.3.0.0.6.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	1.41353297234	573
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.242285966873	7
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	3.03058195114	774
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.4.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.331394910812	73
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.7.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0529680252075	28
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.1	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.359475135803	70
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	0.11.6.2	search with cache (only 1: intros; only 1: apply even_add_even; only 1: exists m; only 1: now nzsimpl).	35.9772388935	8412
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.3.0.0.3.2	search with cache (only 1: intros; only 1: nzsimpl'; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	3.0024998188	549
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.149235963821	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.100774049759	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0283939838409	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0283689498901	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.1.0.0.2.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.115005016327	11
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.1.0.0.0.3	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.659537792206	91
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	1.1.0.1.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.20803809166	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0753600597382	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.1.4.1.2.6.1	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: order_pos; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	2.8839609623	1670
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	1.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: order'; only 1: order).	0.0124039649963	8
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	2.0.0.1.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: now nzsimpl; only 1: order; only 1: rewrite <- (pow_0_r 2); only 1: now nzsimpl).	0.131091833115	51
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	2.2.0.0.1	search with cache (only 1: split; only 1: symmetry; only 1: symmetry; only 1: firstorder; only 1: firstorder).	0.0524988174438	33
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	3.0	search with cache (only 1: intros; only 1: firstorder).	0.0307779312134	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.3.2.0.7.1	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	1.73907589912	1482
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	3.1.0.0.0.4.0.0.0.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: rewrite <- H1; only 1: now nzsimpl).	3.54004502296	1199
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	1.99937987328	516
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.5.0.0	search with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.106328964233	26
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.2.0.1	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.825392007828	162
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0259540081024	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.02605509758	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.5.2.8	search with cache (only 1: intro n; only 1: intro H1; only 1: rewrite eq_mul_0; only 1: tauto).	1.90716004372	2971
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0131409168243	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	9.3	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.152542829514	174
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.2	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0167491436005	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	4.1	search with cache (only 1: Bool.destr_bool; only 1: firstorder).	0.010981798172	7
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	6.1	search with cache (only 1: intros; only 1: firstorder).	0.0154709815979	16
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0234000682831	16
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0173878669739	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.3.1.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y); only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.319351911545	316
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.0.3.0	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0361490249634	17
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	3.17.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: firstorder).	33.2516219616	11385
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	6.9.15	search with cache (only 1: unfold not; only 1: fix sqrtrem_spec 1; only 1: auto).	1.99792218208	3174
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	6.4	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	0.767339944839	228
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	1.20	search with cache (only 1: fix sqrtrem_spec 1; only 1: eauto).	17.9827120304	7749
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	4.11	search with cache (only 1: intros; only 1: now rewrite H).	0.286455869675	273
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0505850315094	4
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0409231185913	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	1.1.0.18.1	search with cache (only 1: intros; only 1: destruct x; only 1: split; only 1: auto with *; only 1: auto with *).	3.2539870739	2434
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.21.0.0.2.0	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: red; only 1: simpl; only 1: destruct H; only 1: auto with ordered_type).	3.40824508667	4454
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.0.9.0.10.0	search with cache (only 1: induction x; only 1: intro; only 1: eauto; only 1: intro; only 1: eauto; only 1: simpl; only 1: intro; only 1: eauto).	1.61230993271	1860
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0527279376984	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	1.0	search with cache (only 1: intros; only 1: firstorder).	0.0117609500885	3
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	7.10.3.0	search with cache (only 1: induction x; only 1: constructor; only 1: auto; only 1: auto).	0.569751977921	811
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	3.2.0.8.6.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: intros a H; only 1: simpl; only 1: inversion H; only 1: auto).	4.53603792191	3645
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.9	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	0.143592119217	96
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	0.3.2.0.3.2.4.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq; only 1: apply eqb_eq; only 1: symmetry; only 1: now apply eqb_eq).	11.9849619865	11519
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	9.0.0.0.1.6.4	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.865674972534	1851
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	1.1.3	search with cache (only 1: split; only 1: auto; only 1: auto).	0.357756853104	149
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2.1.1	search with cache (only 1: intro; only 1: intro; only 1: order).	0.0352079868317	15
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	7	search with cache (only 1: order).	0.0216960906982	8
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	search with cache (only 1: order).	0.0189580917358	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	1.0.0	search with cache (only 1: intro; only 1: intro; only 1: order).	0.0199890136719	4
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0166149139404	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	search with cache (only 1: order).	0.017630815506	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0180070400238	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0177059173584	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.016361951828	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.1.0.0.0	search with cache (only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: order; only 1: auto with ordered_type).	0.0268340110779	6
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	1	search with cache (only 1: order).	0.0182828903198	2
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0160529613495	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0162789821625	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0174911022186	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.1.0.1.1.0.0.3.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	1.47672605515	1804
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.2.0.0.1.0.1.2.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.63992285728	1942
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0465049743652	4
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	2.0.0.0.0.0.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	0.041699886322	10
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	2.3.6.0.0.13	search with cache (only 1: destruct l; only 1: intros; only 1: auto with ordered_type; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	6.34202599525	3935
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	15.1	search with cache (only 1: intros; only 1: now rewrite H).	0.522917985916	462
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.3.2	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: auto).	0.0364677906036	15
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	8.0.41.6	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: constructor; only 1: auto with ordered_type).	1.05164003372	3450
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40	1.2.15.11	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros a l H; only 1: auto).	10.16670084	16378
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.18.7	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.601495981216	1155
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	4.1	search with cache (only 1: intros x y z; only 1: auto).	0.0165679454803	7
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	1	search with cache (only 1: auto).	0.014121055603	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0187771320343	3
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0203001499176	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0137000083923	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0270447731018	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	12.2.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.481276035309	407
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	3	search with cache (only 1: eauto with ordered_type).	0.132227182388	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0383329391479	19
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	5.0.1.1	search with cache (only 1: unfold eqke; only 1: unfold eqk, ltk; only 1: intuition; only 1: order).	0.445080041885	182
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	8.3.6.0	search with cache (only 1: split; only 1: auto with *; only 1: auto with *; only 1: eauto with ordered_type).	0.416594028473	591
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0403909683228	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.7.12.21.2.3	search with cache (only 1: unfold eqke, ltk; only 1: split; only 1: intros H'; only 1: intros l'; only 1: order; only 1: eauto with ordered_type).	3.42056584358	8654
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40	9.8.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: unfold eqk, ltk; only 1: solve_proper).	11.9653859138	8068
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0161340236664	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0168128013611	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0166871547699	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	0.1.13.1	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: intuition; only 1: auto).	0.567919015884	654
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40	0.2.6.3.1.5.16.16	search with cache (only 1: compute; only 1: intros A B f l; only 1: intros l'; only 1: induction 1; only 1: left; only 1: CRelationClasses.simpl_crelation; only 1: eauto with ordered_type; only 1: auto).	25.9237170219	49706
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.6.5.5	search with cache (only 1: inversion 1; only 1: subst; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	6.2529900074	2714
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.4.2	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.0571789741516	29
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.5.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0431530475616	13
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.2.0.0.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: intro EQ; only 1: easy; only 1: easy).	0.021301984787	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.1.1.2.1.1.1.0.0.1.1.2.3.1.0	search with cache (only 1: case compare_spec; only 1: split; only 1: intro LT; only 1: contradict ltac:(LT); only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: discriminate; only 1: easy; only 1: split; only 1: intro LT; only 1: contradict ltac:(LT); only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: discriminate).	37.7745819092	28988
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff; only 1: easy).	0.0100588798523	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.6.0.0	search with cache (only 1: red; only 1: red; only 1: compute; only 1: iorder).	0.0890760421753	46
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: red; only 1: iorder).	0.0164442062378	18
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	2.8	search with cache (only 1: repeat red; only 1: iorder).	0.23465514183	145
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	1	search with cache (only 1: iorder).	0.0148351192474	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.1.0.1	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.12834405899	76
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	2.3.0	search with cache (only 1: intros; only 1: repeat red; only 1: iorder).	0.0192539691925	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	5.1	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0340659618378	18
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0160081386566	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	0.6.4.6.1.8.3.3.9	search with cache (only 1: unfold eqb; only 1: simpl_relation; only 1: destruct eq_dec; only 1: destruct eq_dec; only 1: auto; only 1: order; only 1: destruct eq_dec; only 1: order; only 1: auto).	14.7315061092	22647
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0197260379791	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0169479846954	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	search with cache (only 1: order).	0.011118888855	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	3	search with cache (only 1: order).	1.0093228817	4
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	5.3	search with cache (only 1: intro H; only 1: order).	2.74366879463	14
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0109009742737	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2	search with cache (only 1: order).	0.0102109909058	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0100610256195	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.010901927948	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	2	search with cache (only 1: order).	0.0107588768005	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0108029842377	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.00979685783386	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0	search with cache (only 1: order).	0.0094518661499	1
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0103509426117	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	1	search with cache (only 1: order).	0.00995206832886	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00973892211914	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	search with cache (only 1: order).	0.00966596603394	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	3.3.3.0	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.312106132507	266
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.0	search with cache (only 1: unfold lt; only 1: auto with *).	0.00947499275208	3
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00896191596985	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00954294204712	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0139448642731	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0467209815979	11
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.11	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: intuition).	2.97796201706	1798
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	6.6.4	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	5.11263513565	5152
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.0.8.0.1.5.14.10	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: intuition; only 1: apply eq_true_iff_eq; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	24.8637979031	33825
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	8	search with cache (only 1: simpl_relation).	0.0557091236115	31
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	1.0.2.0.0.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: firstorder).	0.12842798233	90
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	14.2	search with cache (only 1: firstorder; only 1: now rewrite H).	0.175224065781	282
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.4.6	search with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: auto).	0.114754915237	133
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	16.1.11	search with cache (only 1: induction l; only 1: constructor; only 1: intuition).	0.95071387291	1739
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	17.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: now f_equiv).	1.10401701927	885
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	17	search with cache (only 1: solve_proper).	1.96858310699	758
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	3	search with cache (only 1: eauto with *).	0.0182690620422	4
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	1.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0296261310577	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	3	search with cache (only 1: now intros <-).	0.03071808815	4
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	1	search with cache (only 1: firstorder).	0.0162971019745	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: auto).	0.0334720611572	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0339629650116	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0	search with cache (only 1: firstorder).	0.0442390441895	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	2	search with cache (only 1: now destruct 1).	0.0524070262909	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.0291509628296	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0302469730377	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0321938991547	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.0.2.0.2	search with cache (only 1: do 2 rewrite InA_alt; only 1: intros (y, H); only 1: exists y; only 1: intuition; only 1: firstorder).	0.105816841125	19
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.1.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0480980873108	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	0.1.0.0.0.5.0.0.26.2	search with cache (only 1: firstorder; only 1: induction H; only 1: firstorder; only 1: firstorder; only 1: unfold In, MapsTo; only 1: apply InA_eqk_eqke in H; only 1: destruct H as ((k', e'), (E, H)); only 1: compute in E; only 1: exists e'; only 1: now rewrite E).	15.4595849514	13532
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.3.5	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: invlist InA).	0.402293920517	101
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	26	search with cache (only 1: now intros <-).	3.30558896065	2779
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0259389877319	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.11496591568	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.0.1.10	search with cache (only 1: inversion 1; only 1: subst; only 1: firstorder; only 1: auto).	0.394983053207	173
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.5	search with cache (only 1: inversion 1; only 1: firstorder; only 1: auto).	0.0777318477631	23
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	11	search with cache (only 1: firstorder  (subst; auto)).	0.0356049537659	51
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00811100006104	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.00854396820068	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.0059118270874	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0138809680939	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	18.1.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition; only 1: eauto).	0.308627843857	735
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.7.3.13.7.3.0.1	search with cache (only 1: unfold eqke; only 1: intuition; only 1: simpl in *; only 1: subst; only 1: eauto; only 1: simpl in *; only 1: subst; only 1: auto).	3.43056201935	8615
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.3.0.0.2	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: eauto).	0.0641629695892	67
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0211482048035	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	0.1.11.0	search with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: intuition; only 1: auto).	0.318070888519	492
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.1.3	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.0326688289642	7
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.0.7.0	search with cache (only 1: inversion 1; only 1: destruct 1; only 1: auto; only 1: auto).	0.0545768737793	48
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.1.0.1.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: induction 1; only 1: intuition; only 1: auto).	0.0200409889221	7
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	13	search with cache (only 1: intuition).	0.133526086807	99
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	2.0.1.0.1.0.2.0.0.0.0.13.0.1	search with cache (only 1: split; only 1: red; only 1: compute; only 1: intros x; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: red; only 1: apply compare_trans).	23.0873000622	43720
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	7.5.1	search with cache (only 1: unfold eq; only 1: intros; only 1: decide equality).	0.814733982086	775
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.2.0.0.4	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.114435911179	331
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.1.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.94636297226	3262
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	0.0.3.0.2.3.4	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	1.40079903603	2112
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	3.3	search with cache (only 1: apply max_r; only 1: order).	0.013701915741	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	0.1.2.0.2.3.5	search with cache (only 1: destruct (max_spec m n) as [(H', E')| (H', E')]; only 1: rewrite E', ?E; only 1: apply max_l; only 1: order; only 1: rewrite E', ?E; only 1: apply max_r; only 1: order).	0.219619989395	343
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0161798000336	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	9.1	search with cache (only 1: repeat red; only 1: solve_max).	0.203941106796	160
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0268919467926	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max; only 1: solve_max).	1.24771595001	783
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	4.0.0.2.0.1.1.9.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	4.92818617821	5004
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0184488296509	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0186150074005	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0193498134613	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.0.1.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.0613369941711	13
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.1.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0234091281891	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0	search with cache (only 1: solve_max).	0.0355849266052	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0269629955292	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0910019874573	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.3	search with cache (only 1: apply min_l; only 1: order).	0.00901699066162	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.0162949562073	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	6	search with cache (only 1: solve_min).	0.0745589733124	21
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	search with cache (only 1: solve_min).	0.0479168891907	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.3.1.2.13	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: right; only 1: intuition; only 1: order).	7.64610791206	6075
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	0.0388219356537	11
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0171420574188	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0172619819641	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.0175530910492	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0343909263611	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.1.3	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0253889560699	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	2.3.1	search with cache (only 1: destruct (min_spec n m); only 1: solve_min; only 1: solve_min).	0.227512121201	67
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0260789394379	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0954251289368	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.0	search with cache (only 1: apply max_l; only 1: solve_min).	0.018059015274	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.4	search with cache (only 1: apply min_l; only 1: solve_max).	0.0303530693054	24
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.2.0.2.1.0.1.2.0.3.0.1.2.0.1.3.2	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	13.3342370987	41611
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00991010665894	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.6	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0224018096924	23
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0111570358276	5
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.1.5	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0148770809174	10
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.5.0.1	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.267856836319	69
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	2.0	search with cache (only 1: unfold eq, lt; only 1: decide equality).	0.117167949677	19
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	2.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0437099933624	8
Coq.ZArith.Znat.N_nat_Z	40	1.0.0.0.1.0.6.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	1.84669399261	1508
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0444040298462	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.0298240184784	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.0297789573669	1
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0496618747711	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0473759174347	5
Coq.ZArith.Znat.Z_nat_N	40	0.0.2.0.0.2.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).	0.946797847748	325
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0315399169922	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.678241968155	196
Coq.ZArith.Znat.N2Z.id	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.0410618782043	4
Coq.ZArith.Znat.N2Z.inj	40	2.3.4.3.4.0.6.9	search with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: now N.nzsimpl; only 1: destruct m; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence).	15.2155599594	11556
Coq.ZArith.Znat.N2Z.inj_iff	40
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.6.7	search with cache (only 1: destruct n; only 1: easy; only 1: easy).	0.145471096039	122
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0315480232239	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0302138328552	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0635478496552	9
Coq.ZArith.Znat.N2Z.inj_le	40	6.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0387251377106	8
Coq.ZArith.Znat.N2Z.inj_lt	40	3.0	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0384569168091	5
Coq.ZArith.Znat.N2Z.inj_ge	40	4.0	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0591218471527	6
Coq.ZArith.Znat.N2Z.inj_gt	40	3.1	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.038987159729	6
Coq.ZArith.Znat.N2Z.inj_abs_N	40	1.1.0.1.37.23.8	search with cache (only 1: Z.bitwise; only 1: unfold Z.testbit; only 1: destruct z; only 1: simpl; only 1: trivial; only 1: now destruct (Pos.pred_N p); only 1: now destruct (Pos.pred_N p)).	5.88073587418	9182
Coq.ZArith.Znat.N2Z.inj_add	40
Coq.ZArith.Znat.N2Z.inj_mul	40	2	search with cache (only 1: now destruct n, m).	2.32322502136	158
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0480670928955	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p).	0.0716519355774	15
Coq.ZArith.Znat.N2Z.inj_pred	40	1.1.4.1	search with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: now destruct p).	0.47864484787	44
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.5.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial).	0.639315128326	98
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0461959838867	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0640208721161	10
Coq.ZArith.Znat.Z2N.id	40	2.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0511598587036	6
Coq.ZArith.Znat.Z2N.inj	40	1.0.1.0.1.0.0.0.0.1.0.0.1.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now destruct 1 || trivial).	31.7726650238	15519
Coq.ZArith.Znat.Z2N.inj_iff	40	3.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0696840286255	12
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: trivial).	0.0315878391266	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0486199855804	7
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: trivial).	0.0313458442688	1
Coq.ZArith.Znat.Z2N.inj_add	40	6	search with cache (only 1: now destruct n, m).	0.677855968475	41
Coq.ZArith.Znat.Z2N.inj_mul	40	6	search with cache (only 1: now destruct n, m).	0.11399102211	22
Coq.ZArith.Znat.Z2N.inj_succ	40	0.1.1.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.129984140396	9
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.2.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.125137090683	29
Coq.ZArith.Znat.Z2N.inj_compare	40	0	search with cache (only 1: now destruct n, m).	0.0441749095917	1
Coq.ZArith.Znat.Z2N.inj_le	40	10.3.4	search with cache (only 1: unfold N.le, N.ge; only 1: intros Hn Hm; only 1: now rewrite <- N2Z.inj_compare, !id).	1.3467438221	623
Coq.ZArith.Znat.Z2N.inj_lt	40	6.5.3	search with cache (only 1: unfold N.lt, N.gt; only 1: intros Hn Hm; only 1: now rewrite N2Z.inj_compare).	0.850317955017	412
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.2.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.616054058075	191
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.199911832809	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	3.1.0.12	search with cache (only 1: destruct a; only 1: simpl; only 1: now destruct n; only 1: apply Z.testbit_Zpos).	0.364964008331	391
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0640261173248	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	1	search with cache (only 1: now destruct n).	0.0363278388977	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	5	search with cache (only 1: now destruct n).	0.0353548526764	6
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0330138206482	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0314679145813	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: trivial).	0.0308601856232	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0308930873871	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0	search with cache (only 1: now destruct n).	0.0344998836517	1
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.1.1.1.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.242629051208	38
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	3.9905807972	990
Coq.ZArith.Znat.Zabs2N.inj_mul	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0797820091248	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.2.4.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.69474601746	795
Coq.ZArith.Znat.Zabs2N.inj_compare	40	4.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.272834062576	82
Coq.ZArith.Znat.Zabs2N.inj_le	40	1.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0413429737091	5
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0409510135651	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.0.1.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.69470596313	643
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: assert (forall p q, Z.abs_N (Z.pos p ÷ Z.pos q) = (N.pos p / N.pos q)%N); only 1: intros; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_quot; only 1: now apply Z.quot_pos; only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	12.0284159184	5811
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.040225982666	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0326700210571	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	2.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0702748298645	14
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0404531955719	1
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0450661182404	5
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.1.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.0492150783539	8
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	7.1	search with cache (only 1: unfold Z.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	0.16484618187	42
Coq.ZArith.Znat.Nat2Z.inj_lt	40	7.2	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.377366065979	104
Coq.ZArith.Znat.Nat2Z.inj_ge	40	8.0	search with cache (only 1: unfold Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.137729883194	19
Coq.ZArith.Znat.Nat2Z.inj_gt	40	12.1	search with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	1.13950800896	364
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.4.0.0.2.2.0.3	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	3.01513719559	1738
Coq.ZArith.Znat.Z2Nat.inj	40
Coq.ZArith.Znat.Z2Nat.inj_iff	40	4.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.513664960861	112
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0333831310272	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.0362269878387	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	3	search with cache (only 1: trivial).	0.135581970215	4
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	1.0.15.0.0.0.8.7	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: easy).	24.2867500782	16930
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0379831790924	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0387029647827	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	3.1971039772	1766
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0486040115356	6
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0341598987579	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0347099304199	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0343019962311	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	4.5.7.2.1.0.2.0	search with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pos.add_1_r; only 1: apply Pos2Nat.inj_succ; only 1: easy).	21.4085900784	17621
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0444569587708	4
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.1.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0444660186768	4
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	6.9.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	2.80390501022	2488
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0281689167023	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	1.0.0.1.0.1.1.1.0.1.1.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	7.81037592888	7409
Coq.ZArith.Wf_Z.Z_lt_rec	40	15.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: firstorder).	2.44479584694	2333
Coq.ZArith.Wf_Z.Z_lt_induction	40	4.0.2.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: auto).	0.0682790279388	50
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.1.0.0.0.0.0.0.0.2.0.0.0.0.2	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	15.2372059822	13172
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40	0.1.0.25.18	search with cache (only 1: unfold Z.pow_pos; only 1: apply Pos.iter_invariant; only 1: intro n; only 1: now Z.nzsimpl; only 1: trivial).	18.7248311043	18661
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	1.0.3.0.0.0.3.0.0.3.7	search with cache (only 1: unfold Z.pow_pos; only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: reflexivity; only 1: simpl; only 1: auto).	4.0115749836	1793
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40	0.0.0.24.2.1	search with cache (only 1: intuition; only 1: assert (H' : b <= c) by Z.order; only 1: apply Z.pow_lt_mono_r; only 1: Z.order; only 1: Z.order; only 1: Z.order).	7.69457197189	5719
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	8.11.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order).	9.15238308907	8522
Coq.ZArith.Zcompare.Zle_compare	40	0.0.1.0.0.19.2.1	search with cache (only 1: intros; only 1: Z.le_elim H; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: Z.order; only 1: subst; only 1: now rewrite Z.compare_refl).	3.17094898224	4605
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.15.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: auto; only 1: Z.order).	1.56622004509	1810
Coq.ZArith.Zcompare.Zge_compare	40	0.0.1.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: auto).	0.0443389415741	6
Coq.ZArith.Zcompare.Zgt_compare	40	0.2	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.079530954361	31
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	12	search with cache (only 1: now destruct a).	0.118978023529	88
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: reflexivity).	0.0128331184387	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0136489868164	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	9	search with cache (only 1: apply Z.rem_bound_pos).	0.115303993225	48
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0264139175415	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.3.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0494639873505	12
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.5.1	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.799416065216	90
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	3.6.1.5.0.1.4	search with cache (only 1: intros [| p| p]; only 1: simpl; only 1: trivial; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	9.54639410973	6294
Coq.ZArith.Zquot.Zodd_rem	40	1.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0363008975983	8
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	1.11.5	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	2.09050798416	1118
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	7	search with cache (only 1: constructor).	0.0721209049225	17
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.1.0.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0991821289062	17
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.0657441616058	3
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0654602050781	2
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	4.3.0	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: reflexivity).	0.265583992004	57
Coq.ZArith.Zdigits.Z_div2_value	40	4.1.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct z; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: now destruct 1).	18.9997289181	5254
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0679869651794	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.0.8.9.0	search with cache (only 1: intros n Hn; only 1: destruct n; only 1: easy; only 1: now destruct p; only 1: now destruct p).	1.17598700523	844
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	1.0.1.0.0.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	0.495190143585	143
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.5	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0384590625763	8
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40	4.0.2.12.1	search with cache (only 1: revert q; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: easy).	39.5931699276	25747
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	1	search with cache (only 1: now destruct n).	0.0211970806122	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	1	search with cache (only 1: now destruct n).	0.0216360092163	2
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0206861495972	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.8	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.283851861954	125
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0239100456238	4
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0203919410706	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0391659736633	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0239400863647	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.1.0.0.3.0.1.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.21502304077	3339
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0256199836731	2
Coq.ZArith.BinInt.Z.sub_0_r	40	1	search with cache (only 1: now destruct n).	0.0224778652191	2
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0227618217468	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	search with cache (only 1: reflexivity).	0.0199871063232	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0198321342468	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.0.0.5.3	search with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: trivial; only 1: intuition).	0.86333489418	451
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.0.1.3	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: trivial).	0.320979833603	116
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	6	search with cache (only 1: now destruct n).	0.0278618335724	7
Coq.ZArith.BinInt.Z.abs_neq	40	1.3.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	2.52663397789	487
Coq.ZArith.BinInt.Z.sgn_null	40	1.2.0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0447301864624	9
Coq.ZArith.BinInt.Z.sgn_pos	40	16	search with cache (only 1: now destruct n).	0.795279979706	129
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0314509868622	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0242438316345	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.6.0.10	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now destruct n; only 1: now destruct 1 || intros _).	3.32832121849	1236
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.023118019104	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	search with cache (only 1: now destruct n).	0.133318901062	2
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0264799594879	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: trivial).	0.0235028266907	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	7.5	search with cache (only 1: rewrite two_succ; only 1: now destruct n).	3.41268014908	1002
Coq.ZArith.BinInt.Z.pred_double_spec	40	1	search with cache (only 1: now destruct n).	0.0248470306396	2
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.6	search with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	2.99481797218	1064
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.10	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial).	22.4129221439	8955
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	3.10837507248	2039
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.2.1	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.214668989182	113
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0263271331787	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	6	search with cache (only 1: now destruct n).	0.02947306633	7
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0365920066833	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	4	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0291049480438	5
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0463359355927	6
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0348529815674	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.6	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0899739265442	8
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0341861248016	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.0.1.10	search with cache (only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: unfold ltb, lt; only 1: now case compare).	10.2527740002	4668
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	20	search with cache (only 1: apply add_cancel_l).	0.799460887909	370
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40	1.18	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.963652133942	486
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40	0.0.0.0.0.2.0.1.14	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: auto).	1.54370093346	732
Coq.ZArith.BinInt.Z.add_diag	40	2	search with cache (only 1: now nzsimpl').	0.197551012039	3
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.5.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: now try order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	2.0387840271	796
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0422749519348	1
Coq.ZArith.BinInt.Pos2Z.inj	40	7	search with cache (only 1: congruence).	0.0625941753387	16
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	4.1.2	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0570740699768	10
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.0434920787811	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0	search with cache (only 1: easy).	0.0475699901581	1
Coq.ZArith.BinInt.Pos2Z.inj_1	40	4	search with cache (only 1: trivial).	0.0441009998322	5
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1.1	search with cache (only 1: simpl; only 1: easy).	0.148320198059	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.1	search with cache (only 1: simpl; only 1: easy).	0.175347089767	3
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	0.7	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0516991615295	9
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0449249744415	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	3.0.1.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intro EQ; only 1: easy').	0.0811960697174	10
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1.0	search with cache (only 1: simpl in *; only 1: f_equal).	0.0466070175171	3
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0432200431824	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0435559749603	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: auto).	0.0428290367126	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.41424202919	105
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.1	search with cache (only 1: unfold Pos.leb, Pos.le; only 1: reflexivity).	0.0456628799438	3
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0408887863159	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0409741401672	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: auto).	0.0425698757172	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	4	search with cache (only 1: auto).	0.0433299541473	5
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	5.1.1.30.8	search with cache (only 1: simpl; only 1: destruct a; only 1: now destruct n; only 1: now destruct n; only 1: now destruct n).	3.59441494942	5431
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	5	search with cache (only 1: now injection 1).	0.0730829238892	20
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	1.2.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: destruct 1; only 1: trivial).	0.0551600456238	7
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	4.3.0	search with cache (only 1: intros; only 1: apply inj; only 1: auto).	0.0571479797363	10
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.1.2.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.079274892807	15
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.0438280105591	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.196871995926	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0430810451508	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0490028858185	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0493381023407	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0431599617004	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	6.1.34	search with cache (only 1: repeat red; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	12.1184740067	12431
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	7.3.3.0.4	search with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	4.73116397858	3282
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	1.0	search with cache (only 1: intros; only 1: easy).	0.0452170372009	3
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.2.1	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0540289878845	7
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.042013168335	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0415749549866	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.042060136795	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0422129631042	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.04722905159	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0462951660156	3
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.041953086853	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1.0	search with cache (only 1: revert q; only 1: trivial).	0.749441146851	187
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.042160987854	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0412042140961	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	2.1.2.0.0.11.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	2.3990380764	1233
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0416920185089	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	27.45	search with cache (only 1: unfold Z.le; only 1: now destruct x).	3.14401292801	5906
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: trivial).	0.040892124176	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	5	search with cache (only 1: now destruct x).	0.0976729393005	31
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0495028495789	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.2.1.3.5.2.1	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	0.860424041748	598
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.4.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity; only 1: now destruct p; only 1: easy).	0.0739459991455	12
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.0932879447937	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.1.1.0.6	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: simpl; only 1: easy).	0.567296028137	144
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.1.3.2	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0962929725647	10
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0945498943329	5
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0916731357574	5
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.1.0.1.1.0	search with cache (only 1: destruct x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.max_1_r, <- ?Pos2Z.inj_max; only 1: reflexivity).	0.0700650215149	11
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.1.0.2.0	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.148338079453	30
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	6.2	search with cache (only 1: intros x y z; only 1: now f_equal).	0.0648150444031	19
Coq.ZArith.BinInt.ZL0	40	3	search with cache (only 1: trivial).	0.0443828105927	4
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	4.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: now Z.nzsimpl').	0.270823955536	6
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.032506942749	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	3.5	search with cache (only 1: Z.swap_greater; only 1: now induction n).	0.0592029094696	11
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	1	search with cache (only 1: trivial).	0.0302760601044	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	7.7.0	search with cache (only 1: split; only 1: now destruct n as [| [| | ]| [| | ]]; only 1: now destruct n as [| [| | ]| [| | ]]).	0.234632015228	220
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	12.0845828056	5732
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	14.8143620491	7580
Coq.ZArith.Zeven.Zeven_not_Zodd	40	4.3.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	1.0128159523	537
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0575668811798	5
Coq.ZArith.Zeven.Zeven_Sn	40	3.1.8.2.2.0.2	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: congruence; only 1: simpl Z.succ; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	39.0109438896	29039
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0358679294586	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl').	9.7143599987	1338
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.0.0.0.1.20	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: now Z.nzsimpl'; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl).	25.1986029148	6231
Coq.ZArith.Zeven.Zeven_quot2	40	0.0	search with cache (only 1: boolify_even_odd; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0577080249786	2
Coq.ZArith.Zeven.Zodd_quot2	40	4.1.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.790848016739	132
Coq.ZArith.Zeven.Zodd_quot2_neg	40	1.0.8	search with cache (only 1: boolify_even_odd; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.00419187546	212
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	1.3.0	search with cache (only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0516138076782	7
Coq.ZArith.Zeven.Zodd_ex	40	1.0.1.0.5.3	search with cache (only 1: destruct (Zeven_odd_dec n) as [Hn| Hn]; only 1: boolify_even_odd; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	7.4909620285	855
Coq.ZArith.Zeven.Zeven_2p	40	1.3.5.12	search with cache (only 1: destruct p; only 1: now Z.nzsimpl; only 1: reflexivity; only 1: reflexivity).	1.42670798302	897
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	0.0.5.12	search with cache (only 1: induction p; only 1: now Z.nzsimpl'; only 1: now destruct p; only 1: now destruct p).	2.55263495445	580
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.29631280899	76
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0753228664398	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0768029689789	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0356159210205	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0365540981293	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0368189811707	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.0.3.0.2.1.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: rewrite Hc; only 1: apply Z.mod_mul; only 1: subst; only 1: trivial).	3.61280703545	1222
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	14.3	search with cache (only 1: intros n Hn IHn; only 1: now apply Z.divide_pos_le).	1.380671978	759
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.3.0.0.2.3.8	search with cache (only 1: constructor; only 1: destruct (Z.eq_dec a 0) as [Ha| Ha]; only 1: subst; only 1: apply Z.divide_0_r; only 1: now Z.nzsimpl; only 1: apply Z.divide_0_r; only 1: trivial).	2.01360106468	1461
Coq.ZArith.Znumtheory.Zis_gcd_1	40	2.1.1.10	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.432401895523	276
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.1.0.0.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: intros n; only 1: auto with zarith).	0.206924915314	11
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0802669525146	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.113874912262	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.110183000565	17
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.2.10.2	search with cache (only 1: induction 1; only 1: red; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	11.5328309536	3145
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	3.0.0.1.2	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.43384718895	58
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	2.7	search with cache (only 1: intros a b (Hb, Hab); only 1: auto).	0.269777059555	157
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	6.12.5.35	search with cache (only 1: red; only 1: inversion 1; only 1: contradict H; only 1: discriminate).	16.2862160206	12079
Coq.ZArith.Znumtheory.not_prime_1	40	26.10	search with cache (only 1: intros [q Hq]; only 1: Z.order).	5.67856788635	3974
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	4.13	search with cache (only 1: intros a b H; only 1: apply Z.gcd_greatest).	12.9877018929	3272
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	1.0.0.0.0.0.1.2.0.0.4.3.15	search with cache (only 1: unfold Z.modulo; only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	22.904006958	16617
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0557129383087	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0452799797058	7
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.1.0	search with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.138262987137	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0462889671326	7
Coq.ZArith.Zdiv.Zmod_1_r	40	15.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	1.53513503075	1027
Coq.ZArith.Zdiv.Zdiv_1_r	40	4.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.12968993187	21
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.5.7	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	2.17957282066	997
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.2.1.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0827369689941	12
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.0.3.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.282639026642	31
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.041797876358	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.2.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.265933036804	41
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0454840660095	3
Coq.ZArith.Zdiv.eqm_refl	40	0	search with cache (only 1: constructor).	0.0317239761353	1
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.040549993515	2
Coq.ZArith.Zdiv.eqm_trans	40	3.2.4.3.1.0	search with cache (only 1: unfold eqm; only 1: intros; only 1: zero_or_not b; only 1: zero_or_not c; only 1: Z.order; only 1: Z.order).	4.03115200996	1736
Coq.ZArith.Zdiv.eqm_setoid	40	2.0.1.0	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.0440881252289	7
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.3.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0728168487549	6
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.101865053177	13
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.0.0	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.0664231777191	5
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: Z.order).	0.0543870925903	4
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.1.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0643398761749	6
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.1.2.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.329713106155	20
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0569281578064	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0490090847015	5
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0285091400146	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	0.0.4.0.0.0.1.18	search with cache (only 1: unfold modulo; only 1: destruct b as [| b| b]; only 1: easy; only 1: intros _; only 1: intros _; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: easy).	5.32137203217	2680
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	5.1	search with cache (only 1: intros; only 1: now destruct n).	0.0143051147461	8
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	6.7.7.1.10.12	search with cache (only 1: destruct x; only 1: now left; only 1: simpl; only 1: now left; only 1: right; only 1: now split).	27.0079748631	29735
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4	search with cache (only 1: auto with relations).	0.0289590358734	5
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: auto).	0.0284738540649	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0263710021973	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	12	search with cache (only 1: reflexivity).	0.0476469993591	46
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0267951488495	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0.0	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0391929149628	2
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.1	search with cache (only 1: Z.bitwise; only 1: trivial).	0.0400030612946	3
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0260319709778	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0256719589233	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0261359214783	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0257630348206	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0252330303192	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0266890525818	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: reflexivity).	0.0714049339294	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1.1.0.0.0.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: reflexivity).	0.168291807175	11
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40	3	search with cache (only 1: apply Pos2Nat.inj_iter).	0.113317966461	34
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	4.0.0.0.2.0.1.4	search with cache (only 1: case n; only 1: simpl; only 1: trivial; only 1: intros p _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: intros; only 1: easy).	28.1285219193	9406
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	0.0704898834229	5
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0745489597321	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	3	search with cache (only 1: now apply Pos.iter_swap_gen).	0.158550024033	12
Coq.ZArith.Zpower.two_p_equiv	40	1.0.1.32	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: reflexivity).	1.67684197426	835
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0355138778687	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	1	search with cache (only 1: apply Pos2Nat.inj_iter).	0.0697259902954	2
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	0.1.2.0	search with cache (only 1: destruct x; only 1: now apply Pos.iter_swap_gen; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	0.576693058014	102
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.0.3.3.4	search with cache (only 1: destruct x; only 1: simpl; only 1: auto with zarith; only 1: easy; only 1: easy).	0.382863044739	207
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0714418888092	1
Coq.ZArith.auxiliary.Zle_left	40	7	search with cache (only 1: apply Z.le_0_sub).	0.0586919784546	8
Coq.ZArith.auxiliary.Zle_left_rev	40	1	search with cache (only 1: apply Z.le_0_sub).	0.042918920517	2
Coq.ZArith.auxiliary.Zlt_left_rev	40	4	search with cache (only 1: apply Z.lt_0_sub).	0.0356669425964	5
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.031121969223	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	5.10	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.678121089935	123
Coq.ZArith.auxiliary.Zgt_left	40	0.2.1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.212603807449	15
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0504059791565	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.112421035767	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	5.8	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.190762042999	149
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.13	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.143771886826	127
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	0.0.1.4.13	search with cache (only 1: unfold Z.le, Z.min; only 1: case Z.compare_spec; only 1: auto with relations; only 1: auto; only 1: auto).	1.16751503944	974
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	4.0.0.2.1.8	search with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: case Pos.compare_spec; only 1: reflexivity; only 1: reflexivity; only 1: now destruct p).	0.588809967041	398
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40	1.0.12.2	search with cache (only 1: simpl; only 1: fix gcd_divide 1; only 1: intros n m H1 H2; only 1: intuition).	18.2858300209	7711
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.3	search with cache (only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0262091159821	7
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	1.0.0.18	search with cache (only 1: case n; only 1: now destruct a; only 1: intros; only 1: now destruct a).	0.975581884384	740
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.1.0.5	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.300154924393	54
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0242650508881	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0236160755157	1
Coq.ZArith.Zorder.Zle_not_gt	40	0	search with cache (only 1: auto).	0.0227570533752	1
Coq.ZArith.Zorder.Zgt_not_le	40	0	search with cache (only 1: auto).	0.0228869915009	1
Coq.ZArith.Zorder.Znot_ge_lt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.083799123764	18
Coq.ZArith.Zorder.Znot_lt_ge	40	0	search with cache (only 1: auto).	0.0231120586395	1
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.024395942688	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0352878570557	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	7.1	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.176207065582	25
Coq.ZArith.Zorder.Zgt_irrefl	40	6.14.2	search with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).	0.825807094574	923
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.058277130127	4
Coq.ZArith.Zorder.Zle_gt_trans	40	8.1	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.0955061912537	42
Coq.ZArith.Zorder.Zgt_le_trans	40	5.5	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0981209278107	45
Coq.ZArith.Zorder.Zge_trans	40	6.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.353729963303	8
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	2.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0813338756561	18
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0439488887787	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	1	search with cache (only 1: apply Z.succ_le_mono).	0.0363159179688	2
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0249898433685	1
Coq.ZArith.Zorder.Zgt_succ	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.030210018158	5
Coq.ZArith.Zorder.Znot_le_succ	40	2.0.9.11	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.450128078461	497
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0264129638672	1
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0262830257416	2
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0367469787598	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.025908946991	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0392529964447	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	1	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0258440971375	2
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.9	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0586149692535	21
Coq.ZArith.Zorder.Zle_neg_pos	40	3.1	search with cache (only 1: intros a; only 1: easy).	0.044851064682	11
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.3.2	search with cache (only 1: intros n; only 1: red; only 1: simpl; only 1: trivial).	0.0389349460602	9
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.0332708358765	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0262908935547	1
Coq.ZArith.Zorder.Zle_0_nat	40	1.15.0.1.1.2.1	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: Z.order || apply Z.lt_0_1; only 1: simpl; only 1: red; only 1: easy || now destruct 1).	4.4815261364	5535
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	1.9.3.9.3	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: Z.order).	2.24594283104	1740
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0258858203888	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0274369716644	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0374450683594	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	3	search with cache (only 1: apply Z.add_le_mono_r).	0.0466079711914	4
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0275521278381	2
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0	search with cache (only 1: apply Z.add_lt_mono_r).	0.0275239944458	1
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0446019172668	3
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.139503955841	2
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0575480461121	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0414969921112	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0264511108398	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	3	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0282828807831	4
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.05863904953	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0613789558411	4
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0605449676514	8
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0502550601959	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0399360656738	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.027510881424	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0383620262146	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0252909660339	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0559530258179	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0558190345764	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.1.1.1.1.1.1.1.1.0.4.11	search with cache (only 1: red; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	37.3852338791	24248
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	21.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.686837911606	555
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	3.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0416498184204	8
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0571949481964	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	1	search with cache (only 1: apply Z.le_0_sub).	0.0278089046478	2
Coq.ZArith.Zbool.Zle_cases	40	0.1.3.1.0.4	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	0.312283992767	167
Coq.ZArith.Zbool.Zlt_cases	40	3.2.0.1.7.15.4	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	11.987716198	10415
Coq.ZArith.Zbool.Zge_cases	40	3.3.0.1.7.16.6	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.swap_greater; only 1: Z.order; only 1: auto; only 1: Z.swap_greater; only 1: Z.order).	3.19316291809	2886
Coq.ZArith.Zbool.Zgt_cases	40	0.3.1.0.3	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: now Z.swap_greater).	0.151634931564	64
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.15	search with cache (only 1: case Z.leb_spec; only 1: trivial; only 1: discriminate).	0.815873861313	646
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.031063079834	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.15060710907	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: trivial).	0.0300288200378	3
Coq.ZArith.Zbool.Zone_min_pos	40	1.0.0.0.8.3.6	search with cache (only 1: destruct n; only 1: auto; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct Hn || easy).	0.812744140625	609
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.4	search with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.0546700954437	16
Coq.ZArith.Zbool.Zge_is_le_bool	40	3.8	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.320411920547	231
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	0.0.0.19.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	1.92454099655	1514
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	2.0.3.17	search with cache (only 1: rewrite Z.gtb_ltb; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.ltb_lt).	5.97253298759	5211
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0442800521851	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	4.0.0.1.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: trivial; only 1: easy'; only 1: easy').	0.16223192215	81
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0366990566254	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0379810333252	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0394508838654	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40	1.1.1.3.31	search with cache (only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	25.911837101	45986
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.4.6	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.03907489777	463
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.6.3	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	3.78368997574	1243
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.3.9	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	1.30884289742	688
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.1.0.1.1.0.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	4.58620214462	2471
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0455851554871	3
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.0598061084747	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.4.1.3.1.2.3.32	search with cache (only 1: destruct b as [| p| p]; only 1: symmetry; only 1: Z.bitwise; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: revert a; only 1: now Z.nzsimpl; only 1: trivial).	13.1579489708	8616
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.2	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.00698494911194	4
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.00634002685547	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.00522804260254	3
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	3	search with cache (only 1: apply UIP).	0.00874590873718	4
Coq.Program.Equality.UIP_refl_refl	40	0	search with cache (only 1: apply UIP).	0.00774002075195	1
Coq.Program.Equality.inj_pairT2_refl	40	4	search with cache (only 1: apply UIP).	0.00878715515137	5
Coq.Program.Equality.solution_left	40	0.1.13	search with cache (only 1: intros UIP_refl y; only 1: destruct 1; only 1: trivial).	0.108582019806	147
Coq.Program.Equality.solution_right	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00937795639038	4
Coq.Program.Equality.deletion	40	0	search with cache (only 1: trivial).	0.00739502906799	1
Coq.Program.Equality.simplification_heq	40	8.3.6	search with cache (only 1: intros; only 1: subst; only 1: auto).	0.0557191371918	228
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.13.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: trivial).	0.0433268547058	295
Coq.Program.Combinators.compose_id_left	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.00425100326538	3
Coq.Program.Combinators.compose_id_right	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00410199165344	3
Coq.Program.Combinators.compose_assoc	40	2.0	search with cache (only 1: intros; only 1: auto).	0.00503301620483	4
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00414800643921	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00421500205994	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.3.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.11342215538	8
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	2.3.2.0.2.0.3.0.7.1.0	search with cache (only 1: induction stack as [| [| ]]; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H as (_, H1); only 1: auto; only 1: auto).	4.89687395096	11182
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	1.0.1.0.4.0.12.10	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: auto; only 1: inversion H; only 1: auto; only 1: discriminate || auto; only 1: auto; only 1: auto).	1.94929504395	6648
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	3.1	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0461840629578	54
Coq.Sorting.Permutation.Permutation_cons	40	1.4.3	search with cache (only 1: reduce; only 1: subst; only 1: auto).	0.0229749679565	32
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	2.0.0.0.2.4	search with cache (only 1: induction l; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.635737895966	921
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.0	search with cache (only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.054759979248	3
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.0.0.13	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.575163841248	918
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40	0.22.2	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	27.3622119427	38192
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.0.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.03387212753	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	0.12	search with cache (only 1: red; only 1: auto with datatypes).	0.221390008926	177
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0414669513702	2
Coq.Sorting.PermutSetoid.permut_trans	40	1.5.0.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.810747146606	319
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.054484128952	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	0.0.3.0.3	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.683782815933	113
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	1.1.0.0.0.1.0.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	14.8501861095	4176
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	13.1.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: reflexivity).	1.33649682999	1283
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.8	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	2.54466700554	627
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.0677099227905	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.4.1	search with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0967848300934	21
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0858469009399	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.00941896438599	4
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.00978803634644	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0.10	search with cache (only 1: red; only 1: eauto with *).	0.0936369895935	33
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.055141210556	3
Coq.Sorting.Heap.invert_heap	40	0.5.8	search with cache (only 1: intros a l H; only 1: inversion 1; only 1: auto).	0.30330991745	183
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.0.2.6.1.5.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H3 H4; only 1: elim H4; only 1: intros H1 H2; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	7.81583309174	3709
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	0.0.5	search with cache (only 1: repeat intro; only 1: simpl; only 1: auto with arith).	0.20265007019	27
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.6	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.07785987854	28
Coq.Sorting.Heap.list_to_heap	40	2.0.1	search with cache (only 1: fix merge 1; only 1: intros; only 1: trivial).	0.0873801708221	15
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	1.2.0	search with cache (only 1: unfold permutation; only 1: fix merge 1; only 1: auto with datatypes).	0.0600571632385	6
Coq.Init.Wf.Acc_inv	40	1.9	search with cache (only 1: destruct 1; only 1: assumption).	0.0117330551147	55
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00662398338318	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00668001174927	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	6.3.9.6.9.9.3.14.10	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: intros; only 1: auto; only 1: intros; only 1: apply False_rec; only 1: auto).	5.33434200287	132538
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.00695204734802	6
Coq.Init.Peano.pred_Sn	40	3	search with cache (only 1: auto).	0.00494718551636	4
Coq.Init.Peano.not_eq_S	40	1.0.2	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: auto).	0.00567698478699	6
Coq.Init.Peano.O_S	40	1.4.0	search with cache (only 1: red; only 1: intros; only 1: inversion_clear H).	0.00632500648499	8
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	1.0.1.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00682806968689	7
Coq.Init.Peano.plus_n_Sm	40	3.0.2.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0382161140442	174
Coq.Init.Peano.plus_Sn_m	40	0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.00576591491699	3
Coq.Init.Peano.mult_n_O	40	0.0.0.4	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.00761604309082	8
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00680994987488	6
Coq.Init.Peano.le_n_S	40	1.1.1	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.011265039444	27
Coq.Init.Peano.nat_case	40	4.3.0.6	search with cache (only 1: induction n; only 1: intros n m; only 1: trivial; only 1: auto).	0.0670981407166	515
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.2.3.1.5.1.1.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	6.0214099884	22952
Coq.Init.Peano.min_r	40	0.3.4.0.0.0.0.2.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.99419689178	12598
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40	1.0.1.5.0.7	search with cache (only 1: intros; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.625200986862	2023
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.1	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00548195838928	5
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00541496276855	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00743198394775	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	1.0.0.0.1.0.0.0.1.1	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	0.0784721374512	382
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00236296653748	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.1.0.0.0.1.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	0.0128920078278	95
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.1.0.0.0.0.0.1.2.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.0734710693359	871
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	3.3.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00437116622925	10
Coq.Init.Logic.not_iff_compat	40	0.0.0.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00449800491333	5
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.1.0.0.0.1.3	search with cache (only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0211179256439	189
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.1	search with cache (only 1: intros; only 1: assumption).	0.0046648979187	3
Coq.Init.Logic.iff_to_and	40
Coq.Init.Logic.inst	40
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00543093681335	3
Coq.Init.Logic.absurd	40	0.1.4.4	search with cache (only 1: unfold not; only 1: intro H1; only 1: intros A B []; only 1: assumption).	0.0143690109253	101
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00677800178528	4
Coq.Init.Logic.eq_trans_r	40	1.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00622010231018	3
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00617599487305	2
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40	0.5.1	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: assumption).	0.00693511962891	9
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00669384002686	4
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00625896453857	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00645303726196	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.6.4	search with cache (only 1: destruct H; only 1: destruct 1; only 1: trivial).	0.042062997818	122
Coq.Init.Logic.rew_opp_r	40
Coq.Init.Logic.rew_opp_l	40	1.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00770497322083	5
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0105152130127	11
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.010370016098	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0161821842194	18
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	2.1	search with cache (only 1: destruct e; only 1: reflexivity).	0.0968708992004	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00793504714966	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00786304473877	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00795698165894	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00797486305237	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	1.6.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.010931968689	10
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: auto).	0.0084490776062	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00875306129456	2
Coq.Init.Logic.rew_swap	40	1.3.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00930213928223	7
Coq.Init.Logic.rew_compose	40
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00707697868347	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.00988698005676	9
Coq.Init.Logic.eq_trans_sym_distr	40	0.4.3	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0130817890167	20
Coq.Init.Logic.eq_trans_rew_distr	40
Coq.Init.Logic.rew_const	40	0.1	search with cache (only 1: destruct e; only 1: trivial).	0.00819993019104	3
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.3	search with cache (only 1: destruct 1; only 1: auto).	0.00901007652283	14
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	4.6	search with cache (only 1: destruct 1; only 1: auto).	0.019996881485	64
Coq.Init.Logic.iff_stepl	40
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.3.2.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: destruct H; only 1: reflexivity).	0.0139708518982	10
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.012766122818	2
Coq.Init.Logic_Type.identity_sym	40	0.7	search with cache (only 1: destruct 1; only 1: auto).	0.00647401809692	16
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00639390945435	4
Coq.Init.Logic_Type.identity_congr	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00554990768433	3
Coq.Init.Logic_Type.not_identity_sym	40	10.2	search with cache (only 1: destruct 2; only 1: auto).	0.0193490982056	152
Coq.Init.Logic_Type.identity_ind_r	40	0.5.4	search with cache (only 1: intros P b H H0; only 1: destruct 1; only 1: auto).	0.0145878791809	80
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00558495521545	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00578308105469	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00709700584412	3
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00781202316284	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00768804550171	2
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40	0.2.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00979995727539	7
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00896596908569	4
Coq.Init.Specif.eq_existT_curried_map	40
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0114328861237	2
Coq.Init.Specif.eq_exist_uncurried	40	0.3.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0132310390472	8
Coq.Init.Specif.eq_sig_uncurried	40	1.3.2.3.12	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.210778951645	394
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.0.2.3.6.0	search with cache (only 1: split; only 1: intro p; only 1: destruct u, p; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	0.302398920059	692
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0122599601746	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.0.0.2.3.1.0	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	0.642536878586	837
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.015191078186	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0135931968689	3
Coq.Init.Specif.eq_sig2_uncurried	40	0.7.6.0.5	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.495318889618	662
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.0.0.2.1.0.2	search with cache (only 1: simpl in *; only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	0.820894002914	1032
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0149919986725	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00842881202698	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.1.0.0.1.0.0.0.1	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.550000905991	460
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0225629806519	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0141630172729	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.0142500400543	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.0.7.1	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: unfold Qminus; only 1: rewrite H, H0; only 1: auto with qarith).	11.9115538597	402
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	7.0.0.0.3	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	0.974893093109	332
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	8.2.7	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: auto using Qle_Qabs).	0.668851852417	292
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.3.1.1.1.1.2.0	search with cache (only 1: induction n; only 1: red; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: compute; only 1: auto).	18.3028180599	5323
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	3.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.0868768692017	7
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	2.0.0.1	search with cache (only 1: constructor; only 1: intro; only 1: intro; only 1: now destruct n).	0.17233300209	35
Coq.QArith.Qfield.ex1	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.106794834137	5
Coq.QArith.Qfield.ex2	40	10.0	search with cache (only 1: intros; only 1: ring).	0.575987815857	76
Coq.QArith.Qfield.ex3	40	2.1.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.13983297348	12
Coq.QArith.Qfield.ex4	40	12	search with cache (only 1: now try destruct p).	0.0607800483704	46
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0405349731445	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.040002822876	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros (x1, x2); only 1: ring).	0.0470271110535	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0456011295319	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.369853019714	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0.0.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.107441902161	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0668399333954	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.1.1.6.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.343369960785	261
Coq.QArith.Qcanon.Qred_involutive	40	3.6.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.981539964676	504
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.0	search with cache (only 1: intros x y; only 1: reflexivity).	0.0128350257874	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0366778373718	12
Coq.QArith.Qcanon.Qcle_alt	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0118510723114	2
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0374159812927	11
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: auto with qarith).	0.0114059448242	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	0.0.4.7.1	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.723573923111	272
Coq.QArith.Qcanon.Qcplus_0_r	40	0.1.0.0.13.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.63715100288	982
Coq.QArith.Qcanon.Qcplus_comm	40	1.0.2.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.96170496941	794
Coq.QArith.Qcanon.Qcopp_involutive	40	2.5.1	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.232592821121	67
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.0.2.1.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.0543220043182	8
Coq.QArith.Qcanon.Qcmult_assoc	40	0.5.1.5.0.0.2	search with cache (only 1: intros x y; only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	5.69112300873	2071
Coq.QArith.Qcanon.Qcmult_0_l	40	0.3.0.0	search with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0359139442444	7
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.4.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.0508341789246	9
Coq.QArith.Qcanon.Qcmult_1_l	40	18.7.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	4.21209001541	3527
Coq.QArith.Qcanon.Qcmult_1_r	40	0.10.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.747685909271	194
Coq.QArith.Qcanon.Qcmult_comm	40	0.1.1.9.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	1.84834599495	928
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.2.0.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.781836032867	95
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	6.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0644159317017	9
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	4.3.2.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	1.38111901283	328
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.5.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0318639278412	10
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.10.0	search with cache (only 1: intros; only 1: red; only 1: unfold Qle; only 1: auto with zarith).	0.105834007263	128
Coq.QArith.Qcanon.Qcle_antisym	40	8	search with cache (only 1: auto with *).	0.215065002441	73
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	7.3.0.0	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.939585924149	404
Coq.QArith.Qcanon.Qclt_le_weak	40	2.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: auto with *).	0.0192408561707	5
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.6.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).	1.60516309738	600
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	5.0.0.0.1	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	0.646013021469	114
Coq.QArith.Qcanon.Qcnot_lt_le	40	2.0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nlt_ge; only 1: unfold Z.lt; only 1: auto with qarith).	0.0388748645782	16
Coq.QArith.Qcanon.Qcnot_le_lt	40	0.0.1.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nle_gt; only 1: unfold Z.le; only 1: easy || now destruct 1).	0.0232799053192	6
Coq.QArith.Qcanon.Qclt_not_le	40	0.4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.lt_nge; only 1: auto).	0.0232238769531	8
Coq.QArith.Qcanon.Qcle_not_lt	40	0.4.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: apply Z.nlt_ge; only 1: auto).	0.0224099159241	8
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	5.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0273971557617	11
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	0.0.0.0.0.0.2.3.2.8	search with cache (only 1: unfold Qcle, Qcopp; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qle; only 1: simpl; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.le_sub_le_add_r, Z.opp_involutive; only 1: split; only 1: auto; only 1: auto).	7.23715209961	4299
Coq.QArith.Qcanon.Qclt_minus_iff	40	0.0.2.0.2.4.0.0.1.3	search with cache (only 1: unfold Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: unfold Qlt; only 1: simpl in *; only 1: rewrite Z.mul_1_r, Z.mul_opp_l, <- Z.lt_sub_lt_add_r, Z.opp_involutive; only 1: split; only 1: auto; only 1: auto).	4.35591292381	2518
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	0.0.6.3.3.0.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	9.14024400711	3861
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	1.1.7.0.2.0.0.0	search with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: rewrite !Qred_correct in * |-; only 1: apply Qmult_lt_r; only 1: auto with qarith; only 1: auto with qarith).	29.2570128441	13717
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.4.17	search with cache (only 1: induction n; only 1: now destruct 1; only 1: destruct n; only 1: trivial; only 1: trivial).	1.93064713478	1979
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.2.1.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.0551700592041	21
Coq.QArith.Qreals.IZR_nz	40	2.1	search with cache (only 1: intros; only 1: auto with real).	0.40255188942	43
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.1.0.1.3.1.3.1	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qnum, Qden; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	13.9455759525	3255
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40	0.0.0.0.1.2.0.1.0.1	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: intros (x1, x2); only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: rewrite plus_IZR; only 1: do 3 rewrite mult_IZR; only 1: rewrite Ropp_Ropp_IZR; only 1: field; only 1: auto).	12.6221330166	2361
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	6.0.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.066654920578	31
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	7.0.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0718469619751	41
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	2.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: now constructor).	0.0305700302124	4
Coq.QArith.QArith_base.Qeq_sym	40	2.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto).	0.0314598083496	4
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.4	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0471968650818	8
Coq.QArith.QArith_base.Qeq_bool_iff	40	7.7.10	search with cache (only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	2.03050899506	1698
Coq.QArith.QArith_base.Qeq_bool_eq	40	5	search with cache (only 1: apply Zeq_is_eq_bool).	0.0998959541321	61
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0249190330505	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	4	search with cache (only 1: apply Zle_is_le_bool).	0.027498960495	5
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.0249750614166	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0291740894318	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.1.1	search with cache (only 1: rewrite Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: auto with qarith).	0.0448310375214	5
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.1.0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.183192014694	7
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.0.1.5	search with cache (only 1: red; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	0.0439641475677	10
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	5.0.0.0.5	search with cache (only 1: unfold Qeq, Qcompare; only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now f_equiv).	3.48793101311	1286
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3	search with cache (only 1: now try destruct p).	0.0318510532379	4
Coq.QArith.QArith_base.Qplus_assoc	40	0.1.2.1.1.4	search with cache (only 1: intros A B H; only 1: red; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: auto).	1.98547577858	189
Coq.QArith.QArith_base.Qplus_0_l	40	0.1.4.6.2	search with cache (only 1: intros n; only 1: unfold Qeq; only 1: simpl in *; only 1: destruct n; only 1: ring).	2.37336587906	341
Coq.QArith.QArith_base.Qplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: ring).	0.0596439838409	7
Coq.QArith.QArith_base.Qplus_comm	40	0.0.0.0.5.2.2	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	4.04254484177	545
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: ring).	0.355295181274	5
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0508360862732	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.2	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.869477987289	54
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl; only 1: trivial).	0.039009809494	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.1	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0896291732788	25
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.2.3.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: destruct n; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.74297308922	389
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.121564865112	32
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.1	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.78254699707	104
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0837361812592	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	4.0.32	search with cache (only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: now Z.nzsimpl).	6.34568595886	4560
Coq.QArith.QArith_base.inject_Z_mult	40	5.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: constructor).	0.0303161144257	7
Coq.QArith.QArith_base.inject_Z_opp	40	2.2.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: now subst).	0.0364739894867	7
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.1.1.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.061350107193	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	1.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0620110034943	6
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	1.2	search with cache (only 1: red; only 1: now reflexivity).	0.0341467857361	5
Coq.QArith.QArith_base.Qle_antisym	40	30.7	search with cache (only 1: unfold Qle; only 1: Z.order).	11.0168018341	6293
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	1.16	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: apply StrictOrder_Irreflexive).	0.329305887222	248
Coq.QArith.QArith_base.Qlt_not_eq	40	40.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	29.8179039955	25271
Coq.QArith.QArith_base.Zle_Qle	40	0.3.20	search with cache (only 1: unfold Qle; only 1: Z.nzsimpl'; only 1: auto).	2.67170810699	2253
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	9.0.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: red; only 1: now apply Z.lt_le_incl).	1.17303609848	381
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	2.0.0.10.6.6	search with cache (only 1: red; only 1: unfold Z.le; only 1: case Z.compare_spec; only 1: easy'; only 1: easy'; only 1: easy || now destruct 1).	16.3379778862	5909
Coq.QArith.QArith_base.Qnot_le_lt	40	20.9	search with cache (only 1: unfold Qle; only 1: now apply Z.lt_nge).	6.83395123482	3728
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0253839492798	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0255250930786	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.2.0.0.0.1.0.1.0.0.5	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	25.8208329678	4440
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.2.0.1.0.0.13	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	8.72635412216	3212
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	4.0.0.0.0.0.5	search with cache (only 1: intros (a1, a2) (b1, b2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: rewrite Z.mul_1_r; only 1: now apply Z.mul_nonneg_nonneg).	6.05480289459	2796
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.0.1.0.8.0.4	search with cache (only 1: intros (x1, x2); only 1: unfold Qle; only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: destruct x1; only 1: discriminate; only 1: easy; only 1: easy).	6.77676010132	3687
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.1	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0443239212036	5
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	14.7.5	search with cache (only 1: intros; only 1: simpl; only 1: now Z.nzsimpl).	2.62875413895	2864
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.0.2.0.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change_no_check (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.412638902664	116
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	0.105455875397	10
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	3.0.1.0.0.1.0.0.2.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: now destruct n).	9.05761384964	3079
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.332546949387	124
Coq.QArith.Qabs.Qabs_nonneg	40	4.3.1.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.15567612648	108
Coq.QArith.Qabs.Zabs_Qabs	40	2.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: auto).	0.0577600002289	6
Coq.QArith.Qabs.Qabs_opp	40	14.0.2.2	search with cache (only 1: red; only 1: intros (n, d); only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	12.1261689663	5394
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.5.0.0.0.3	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: simpl_mult; only 1: repeat rewrite <- Z.abs_mul; only 1: ring).	2.26274895668	688
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	1.22304606438	469
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	3.0.0.0.0.11.3.0	search with cache (only 1: unfold Qle; only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: auto with zarith; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: easy).	9.87872409821	7648
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	3	search with cache (only 1: firstorder).	0.00682282447815	4
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00672197341919	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00636100769043	1
Coq.Classes.CMorphisms.pointwise_pointwise	40
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00682401657104	1
Coq.Classes.CMorphisms.subrelation_respectful	40	6	search with cache (only 1: simpl_crelation).	0.0983328819275	7
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.0065770149231	1
Coq.Classes.CMorphisms.subrelation_proper	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00757908821106	3
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	11	search with cache (only 1: simpl_crelation).	0.199580192566	48
Coq.Classes.CMorphisms.pointwise_subrelation	40	3	search with cache (only 1: simpl_crelation).	0.0160629749298	4
Coq.Classes.CMorphisms.forall_subrelation	40	7.1	search with cache (only 1: intros x y H'; only 1: firstorder).	0.0107090473175	10
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00741910934448	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00743103027344	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00762891769409	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00773596763611	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	7	search with cache (only 1: firstorder).	0.0127549171448	8
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	2.13771605492	37
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	7.54683113098	425
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	3.3.1	search with cache (only 1: transitivity x0; only 1: assumption; only 1: assumption).	0.473541975021	618
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	1.17167305946	929
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.61637711525	25
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	1.0	search with cache (only 1: unfold relation_equivalence, iffT; only 1: firstorder).	0.00950884819031	3
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	2	search with cache (only 1: firstorder).	0.0096549987793	3
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2.4	search with cache (only 1: reduce; only 1: simpl_crelation).	0.0150520801544	8
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00745797157288	1
Coq.Classes.CMorphisms.flip_respectful	40	0.3.0	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: reduce; only 1: firstorder).	0.0123510360718	6
Coq.Classes.CMorphisms.flip1	40	1.0.0.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: red in H'; only 1: red in H'; only 1: simpl_crelation).	0.0141670703888	6
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00670480728149	1
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0106921195984	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00693511962891	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.0067880153656	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.2.0	search with cache (only 1: intros A x y z H1 H2; only 1: intros; only 1: subst; only 1: firstorder).	0.015095949173	6
Coq.Classes.CMorphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00848507881165	1
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00796604156494	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	4.0	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.0185539722443	6
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.1.4.1	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros; only 1: firstorder).	1.01529192924	174
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	1.4.12	search with cache (only 1: intros A P H; only 1: simpl_crelation; only 1: firstorder).	5.31613087654	3310
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.4	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0703599452972	26
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.1.3	search with cache (only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: firstorder).	0.0231878757477	23
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0.8	search with cache (only 1: reduce; only 1: trivial).	0.00976800918579	10
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00897002220154	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0106251239777	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.396559000015	1
Coq.Classes.CRelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00728392601013	1
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00859808921814	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.00806903839111	4
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	5.1	search with cache (only 1: hnf; only 1: firstorder).	0.0185730457306	17
Coq.Classes.CRelationClasses.flip_PreOrder	40	0	search with cache (only 1: firstorder).	0.0200347900391	1
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0207960605621	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0310480594635	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0404419898987	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	3	search with cache (only 1: firstorder).	0.00966501235962	4
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00922393798828	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.2	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.00832009315491	5
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00881886482239	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0110139846802	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	0.0.0.0.1	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.012717962265	6
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0162971019745	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0622141361237	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.1.3	search with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.0293440818787	62
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0.1	search with cache (only 1: reduce; only 1: trivial).	0.00852608680725	3
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00894403457642	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0105180740356	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.385287046432	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	0	search with cache (only 1: auto).	0.00733685493469	1
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0176050662994	1
Coq.Classes.RelationClasses.flip_Reflexive	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.0107522010803	3
Coq.Classes.RelationClasses.flip_Antisymmetric	40	3.1	search with cache (only 1: hnf; only 1: firstorder).	0.014139175415	6
Coq.Classes.RelationClasses.flip_PreOrder	40	0	search with cache (only 1: firstorder).	0.101011037827	1
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0282599925995	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0732431411743	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0608429908752	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0218679904938	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0221998691559	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.048623085022	17
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0254240036011	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.3.0.0.0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	3.74595189095	26
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0125539302826	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0216891765594	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0556612014771	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0293099880219	1
Coq.Classes.Morphisms.eq_proper_proxy	40	2	search with cache (only 1: reflexivity).	0.0062460899353	3
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00546002388	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00576186180115	1
Coq.Classes.Morphisms.pointwise_pointwise	40
Coq.Classes.Morphisms.subrelation_id_proper	40	1	search with cache (only 1: auto).	0.00494313240051	2
Coq.Classes.Morphisms.subrelation_respectful	40	1.7	search with cache (only 1: reduce; only 1: firstorder).	0.00950288772583	10
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.0050060749054	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00566601753235	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.1.9.11	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.88729596138	406
Coq.Classes.Morphisms.pointwise_subrelation	40	1.0	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.00662517547607	3
Coq.Classes.Morphisms.forall_subrelation	40	2.1	search with cache (only 1: intros; only 1: firstorder).	0.0080099105835	5
Coq.Classes.Morphisms.iff_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00567507743835	1
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00578093528748	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	15	search with cache (only 1: firstorder).	0.0224680900574	91
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	1	search with cache (only 1: firstorder).	0.0835039615631	2
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	7.73304510117	525
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.774654150009	706
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	1.1.1.0.0	search with cache (only 1: transitivity y; only 1: transitivity y; only 1: firstorder; only 1: firstorder; only 1: firstorder).	2.9831469059	159
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	0.937098026276	69
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.00748205184937	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	0.8	search with cache (only 1: apply H; only 1: auto).	0.00896501541138	10
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	1.1.0	search with cache (only 1: reduce; only 1: subst; only 1: trivial).	0.00790596008301	5
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00676298141479	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00873684883118	1
Coq.Classes.Morphisms.flip1	40	2.2.0.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: red in H0; only 1: red in H0; only 1: apply H; only 1: firstorder).	0.00788998603821	10
Coq.Classes.Morphisms.flip2	40	2.0.0	search with cache (only 1: hnf; only 1: intros; only 1: firstorder).	0.00704598426819	5
Coq.Classes.Morphisms.eq_subrelation	40	0.0.1	search with cache (only 1: unfold subrelation; only 1: destruct 1; only 1: firstorder).	0.00812196731567	4
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00588202476501	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00532698631287	1
Coq.Classes.Morphisms.proper_proper	40	0.0.3.0	search with cache (only 1: intros A x y z H1 H2; only 1: intros; only 1: subst; only 1: firstorder).	0.0129299163818	7
Coq.Classes.Morphisms.proper_normalizes_proper	40	0	search with cache (only 1: firstorder).	0.00654196739197	1
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00653910636902	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2.3	search with cache (only 1: intros; only 1: simpl_relation).	0.0722980499268	16
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.0.2.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: intros x x' Hxx'; only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: intuition).	0.0878469944	9
Coq.Classes.Morphisms.proper_sym_impl_iff	40	3.1.1.1	search with cache (only 1: simpl_relation; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: firstorder).	0.0418438911438	32
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	4	search with cache (only 1: firstorder).	0.00771903991699	5
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00671792030334	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0263228416443	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00607204437256	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	2	search with cache (only 1: firstorder).	0.00848913192749	3
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0142929553986	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.217499017715	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.00850510597229	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.00834393501282	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00695991516113	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00676703453064	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.00827383995056	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00669002532959	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0072021484375	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.2.3	search with cache (only 1: reduce; only 1: compute in *; only 1: firstorder).	0.0641851425171	8
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.1.12	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	1.07094407082	893
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	19	search with cache (only 1: apply Nat.eqb_eq).	1.30894708633	1621
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	21	search with cache (only 1: apply Nat.leb_le).	3.00437712669	2662
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	14.15	search with cache (only 1: destruct x; only 1: easy || now destruct y).	3.61083292961	6992
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	10	search with cache (only 1: intuition).	0.0166490077972	21
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0119099617004	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0117330551147	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	7.6	search with cache (only 1: intros A R sa x y z Hxy Hyz; only 1: firstorder).	1.56573605537	281
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.463047981262	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	2	search with cache (only 1: firstorder).	0.115077018738	3
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.016163110733	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0146000385284	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0	search with cache (only 1: firstorder).	0.0141401290894	1
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0155560970306	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	4.21.37.67	search with cache (only 1: revert p; only 1: assert (leS : forall n m, n <= m -> S n <= S m) by (induction 1; auto); only 1: fix le_div2 1; only 1: trivial).	32.5191190243	92973
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.00612092018127	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40	0.45	search with cache (only 1: apply eq_S; only 1: exact (inj_mul 2 p)).	15.7531430721	7567
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.10.0.5.7.11.4	search with cache (only 1: revert p; only 1: induction p using peano_ind; only 1: constructor; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: auto; only 1: apply Nat.add_assoc).	1.88611698151	5046
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0129389762878	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	4.10.5.1.2.16.4.11	search with cache (only 1: induction n as [| n H]; only 1: reflexivity; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: now apply H).	6.31142282486	18148
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.00955104827881	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	12.3.5.1.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: auto).	1.68782806396	5220
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.6.0.6.1.11	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	1.56370592117	3239
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	3.0.0.1.0.2	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: auto with relations).	0.0580320358276	89
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0.0.1	search with cache (only 1: simpl; only 1: destruct n; only 1: trivial; only 1: f_equal).	0.0119919776917	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	1.12.26.0	search with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	2.40179586411	6197
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	1	search with cache (only 1: decide equality).	0.0251491069794	2
Coq.PArith.BinPos.Pos.xI_succ_xO	40	1	search with cache (only 1: trivial).	0.012088060379	2
Coq.PArith.BinPos.Pos.succ_discr	40	13.10.10.30.14	search with cache (only 1: intuition; only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: discriminate).	3.30481290817	8691
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.011449098587	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.3.2.4	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.354439973831	153
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: reflexivity).	0.0120739936829	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	search with cache (only 1: now destruct p).	0.0298728942871	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0294849872589	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.1.1.1.0.1.1.4	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	1.30823707581	635
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.1.4.1.0.1.3	search with cache (only 1: intro n; only 1: destruct p; only 1: now destruct p; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: now f_equal).	9.90920615196	6710
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.1.0.0.0.0.0.6.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: trivial).	3.4810230732	2415
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0138130187988	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0136408805847	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0	search with cache (only 1: trivial).	0.0307619571686	1
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0137779712677	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	1.0	search with cache (only 1: apply succ_inj; only 1: now destruct p).	0.0482921600342	38
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.2.2.0.2.2.1.10	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: now destruct p, q; only 1: simpl; only 1: f_equal; only 1: now destruct p, q; only 1: simpl; only 1: f_equal).	23.7904529572	13638
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	3.0.1.0.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: rewrite 2!(mul_comm r); only 1: congruence).	0.0338249206543	12
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.2.0.18.1.10	search with cache (only 1: destruct p; only 1: simpl; only 1: now destruct p, q; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	27.298830986	38310
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0360190868378	1
Coq.PArith.BinPos.Pos.square_xO	40	10.2.1	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	1.07004594803	436
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.0.7.0.0.0.0.3.12.0	search with cache (only 1: apply succ_inj; only 1: apply add_reg_r with (r := p); only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: simpl; only 1: rewrite mul_comm; only 1: f_equal; only 1: simpl; only 1: now f_equal).	35.7632961273	32484
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.026437997818	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	3.26.8	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: Bool.destr_bool).	6.71146702766	19093
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.5.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.766855955124	262
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.0.2	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.174949884415	35
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.3.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.970352888107	293
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.3.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.470427036285	82
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.4.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.488484144211	107
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.3.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.485378026962	134
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.1.3.0	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: now destruct (p ?= q)).	0.0329411029816	24
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0137600898743	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	1.0.2.2.3	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.0874779224396	114
Coq.PArith.BinPos.Pos.compare_xO_xI	40	1.0.2.2.3	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: trivial).	0.0994668006897	115
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.0.3.1.3.4	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	1.05388498306	1575
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0237390995026	6
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.7	search with cache (only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	0.191250801086	31
Coq.PArith.BinPos.Pos.gt_lt_iff	40	7.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.292228937149	46
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.1590321064	3
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0148780345917	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	8.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.558573961258	179
Coq.PArith.BinPos.Pos.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0378620624542	3
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.014899969101	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	5.0.0.0	search with cache (only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: now induction p).	0.110849142075	33
Coq.PArith.BinPos.Pos.nlt_1_r	40	1	search with cache (only 1: now destruct p).	0.0675990581512	2
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0464379787445	23
Coq.PArith.BinPos.Pos.le_nlt	40	0.2	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.236466884613	33
Coq.PArith.BinPos.Pos.lt_nle	40	7	search with cache (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.494478940964	99
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.1.0.1.4.5	search with cache (only 1: unfold lt, le; only 1: generalize (compare_succ_r p q); only 1: destruct (p ?= q); only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	2.17244410515	1092
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.4	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	0.0800788402557	26
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	5.1.1	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0220129489899	10
Coq.PArith.BinPos.Pos.lt_compat	40	11	search with cache (only 1: solve_proper).	0.357688188553	134
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	2.1.1.1	search with cache (only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: apply ge_le_iff; only 1: now induction p).	0.0657670497894	11
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	7.8.3	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	1.00889110565	937
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.0.1.0.0.0.0.0	search with cache (only 1: unfold lt, gt; only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.032732963562	9
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.6.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0252120494843	10
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.3.1	search with cache (only 1: unfold le, ge; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.0425989627838	7
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.5.0	search with cache (only 1: unfold le; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0507829189301	17
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.4.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0254940986633	8
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.5.1	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.042720079422	9
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.7.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0314879417419	16
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0192639827728	3
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.0257790088654	7
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0166308879852	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40	8.11	search with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.158894062042	430
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.1.0.5	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0999000072479	83
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0240519046783	6
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0236229896545	6
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.1.1	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.122180938721	94
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.1.0.0.17	search with cache (only 1: unfold ltb, lt; only 1: unfold le, sub; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	16.2248680592	17223
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	2.1.0.1.0.1.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: apply le_nlt in H; only 1: intuition).	0.648092985153	232
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.2.2.10.3.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: rewrite compare_gt_iff; only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: trivial).	15.4075009823	15477
Coq.PArith.BinPos.Pos.max_1_l	40	0.2.2.16.22	search with cache (only 1: unfold max; only 1: induction n; only 1: auto with relations; only 1: auto with relations; only 1: now f_equal).	2.29887485504	2575
Coq.PArith.BinPos.Pos.max_1_r	40	1.0	search with cache (only 1: apply max_l; only 1: apply le_1_l).	0.0197710990906	3
Coq.PArith.BinPos.Pos.min_1_l	40	1.1	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.0207469463348	4
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.2.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0328838825226	10
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	8.1.14	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply add_le_mono_l).	2.65529084206	2571
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.24	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	2.59812307358	2947
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.3	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0880069732666	29
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	0.0.0.0.4.1.2.6	search with cache (only 1: apply max_monotone; only 1: unfold le; only 1: intros x y; only 1: rewrite mul_compare_mono_l; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	6.40174603462	3940
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.13	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	1.32023501396	965
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.7	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.338377952576	165
Coq.PArith.BinPos.Pos.iter_op_succ	40	0.1.4.2.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: congruence; only 1: now symmetry; only 1: now symmetry).	0.354076862335	166
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40	9.1.0	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.38133597374	313
Coq.PArith.BinPos.Pos.divide_xO_xI	40	6.4.1	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	0.32840013504	327
Coq.PArith.BinPos.Pos.divide_xO_xO	40	4.4.2.6	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	0.703915834427	658
Coq.PArith.BinPos.Pos.divide_mul_l	40	9.1.7	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.465205907822	517
Coq.PArith.BinPos.Pos.divide_mul_r	40	10.1.10	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	5.51640200615	6519
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.3	search with cache (only 1: fix sqrtrem_spec 1; only 1: easy).	0.0610210895538	42
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.0517499446869	35
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	10.1	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	0.086786031723	151
Coq.PArith.BinPos.Pos.gcd_divide_r	40	8.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	3.16112804413	3672
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40	2.2.4	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros x y z; only 1: auto).	0.722869873047	421
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0.0.1.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0306260585785	7
Coq.PArith.BinPos.Pminus_mask_Gt	40	9.0.9.10.15.8.17	search with cache (only 1: intros; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	17.2144460678	51215
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	3.9	search with cache (only 1: inversion 1; only 1: now subst).	0.0760350227356	169
Coq.Arith.Le.le_elim_rel	40	7.3.2	search with cache (only 1: intros b Hb IH; only 1: fix le_div2 1; only 1: trivial).	0.338252067566	966
Coq.Arith.Even.even_equiv	40	6.11	search with cache (only 1: fix even_spec 1; only 1: now Morphisms.f_equiv).	1.32118821144	1065
Coq.Arith.Even.odd_equiv	40	13.1	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.903234958649	1023
Coq.Arith.Even.even_or_odd	40	15.3.12.0.4	search with cache (only 1: Nat.induct n; only 1: left; only 1: left; only 1: intros x; only 1: intuition).	1.23364281654	4098
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0401909351349	44
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40	1.1.1.11.3	search with cache (only 1: revert m; only 1: fix even_equiv 1; only 1: induction n; only 1: trivial; only 1: auto with arith).	7.66879796982	11172
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.0691800117493	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0357601642609	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0358760356903	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0366430282593	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0561461448669	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.3703520298	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0491659641266	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0351641178131	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0350649356842	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.111278057098	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0361390113831	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0362799167633	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0582959651947	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0352709293365	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.0831220149994	1
Coq.Arith.Even.even_mult_l	40	2	search with cache (only 1: parity_binop).	0.023334980011	3
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.022745847702	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0606398582458	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0355460643768	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0355629920959	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0754480361938	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0232751369476	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0128638744354	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0335528850555	1
Coq.Arith.Minus.minus_diag_reverse	40	6.1.7.8.3.38.23	search with cache (only 1: Nat.bitwise; only 1: Nat.cases m; only 1: now induction n; only 1: induction n; only 1: simpl; only 1: now induction n; only 1: trivial).	4.92027401924	20498
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.2.9.1.0	search with cache (only 1: revert m; only 1: Nat.induct ltac:(p); only 1: trivial; only 1: intro m; only 1: auto).	6.233907938	4460
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	1.0.2.3.2.4	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: trivial).	0.245563983917	289
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	0.1.2.5.4.0.3.1.17.2	search with cache (only 1: intro; only 1: PeanoNat.Nat.induct k; only 1: intros a Ha; only 1: PeanoNat.Nat.auto'; only 1: intro; only 1: intro; only 1: intros m Le; only 1: elim Le; only 1: trivial; only 1: auto with arith).	4.46325087547	12490
Coq.Arith.Between.between_Sk_l	40	0.1.13	search with cache (only 1: fix le_div2 1; only 1: intros n m LE; only 1: auto with arith).	1.0138399601	1521
Coq.Arith.Between.between_restr	40	1.1.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.173637866974	5
Coq.Arith.Between.exists_le_S	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0201120376587	4
Coq.Arith.Between.exists_S_le	40	0.6.2	search with cache (only 1: fix le_div2 1; only 1: intros x y z; only 1: auto).	0.0566220283508	118
Coq.Arith.Between.in_int_intro	40	0.0.8.6	search with cache (only 1: intro n; only 1: constructor; only 1: trivial; only 1: trivial).	0.350080013275	741
Coq.Arith.Between.in_int_lt	40	4.12	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order).	0.486638069153	836
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.16	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.613533973694	1703
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0155918598175	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.0.2.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0221788883209	8
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	9.0.2.0.1.1.9	search with cache (only 1: destruct n; only 1: Nat.nzsimpl; only 1: now left; only 1: right; only 1: destruct m; only 1: now Nat.nzsimpl; only 1: now Nat.nzsimpl).	4.12456083298	3877
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	4.0.6.9.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	3.54404401779	8395
Coq.Arith.Div2.even_div2	40	12.3.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.79354095459	1760
Coq.Arith.Div2.odd_div2	40	4.5.46	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	5.11885285378	12606
Coq.Arith.Div2.div2_even	40	13.3.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	2.27629303932	3014
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	4	search with cache (only 1: intuition).	0.0631370544434	31
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40	1.16.0.3.8	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: now try Nat.order'; only 1: fix le_div2 1; only 1: trivial).	31.0051090717	25267
Coq.Arith.Div2.even_2n	40	0.10	search with cache (only 1: fix even_odd_double 1; only 1: trivial).	0.0511291027069	81
Coq.Arith.Div2.odd_S2n	40	1.0.1	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0169861316681	5
Coq.Arith.Div2.div2_double	40	4.4	search with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.392881155014	67
Coq.Arith.Div2.div2_double_plus_one	40	1.3	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: auto with arith).	0.397788047791	110
Coq.Arith.Plus.plus_assoc_reverse	40	8.1.0.0.0.0.2	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: intros; only 1: auto).	2.8045129776	1954
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0127520561218	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0128779411316	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	6	search with cache (only 1: apply Nat.add_le_mono).	0.0151579380035	7
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	2.4.1.0.3	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros a n Ha; only 1: now split).	1.51528501511	524
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	2	search with cache (only 1: trivial).	0.0117599964142	3
Coq.Arith.Lt.lt_n_Sm_le	40	4	search with cache (only 1: apply le_S_n).	0.0278251171112	13
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0118699073792	1
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.0130031108856	1
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: Nat.order).	0.0129430294037	1
Coq.Arith.Lt.neq_0_lt	40	0	search with cache (only 1: Nat.auto').	0.020406961441	1
Coq.Arith.Lt.lt_0_neq	40	1.0.3.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0186629295349	8
Coq.Arith.Lt.lt_n_S	40	8	search with cache (only 1: apply Nat.lt_succ_r).	0.013955116272	9
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0119829177856	1
Coq.Arith.Lt.S_pred	40	1.8.42	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl'; only 1: trivial).	2.70561003685	3091
Coq.Arith.Lt.S_pred_pos	40	1.2.2.57.27	search with cache (only 1: Nat.auto'; only 1: Nat.cases ltac:(n); only 1: Nat.order_nz; only 1: intros n _; only 1: reflexivity).	28.0907459259	156420
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	1.11.1.0.2	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.312116146088	808
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	8.55244016647	15502
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.1.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	5.63363599777	9094
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.101955890656	112
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0110371112823	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0122611522675	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0127210617065	1
Coq.Arith.Wf_nat.gt_wf_rec	40	1	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0122389793396	2
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.0.0.0.1.1	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.119786024094	105
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	5.1.1.12	search with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Nat.lt_0_succ).	1.4150660038	319
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.3.1.0.0.0.2.0.1	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	2.50697588921	991
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	1.0.0.1.0.3.1.2	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	0.791620016098	356
Coq.Arith.Compare_dec.le_gt_dec	40	11	search with cache (only 1: exact (le_lt_dec n m)).	0.0732729434967	52
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	4.5.8	search with cache (only 1: elim (le_lt_dec n m); only 1: auto; only 1: auto with arith).	0.329717159271	325
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	3	search with cache (only 1: apply le_dec).	0.0149471759796	4
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0124680995941	2
Coq.Arith.Compare_dec.dec_le	40	0.0.0.0.2.11	search with cache (only 1: elim (le_lt_dec n m); only 1: left; only 1: trivial; only 1: right; only 1: apply Nat.lt_nge; only 1: trivial).	1.08854293823	781
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	7	search with cache (only 1: apply Nat.lt_decidable).	0.0168340206146	8
Coq.Arith.Compare_dec.dec_ge	40	9	search with cache (only 1: apply Nat.le_decidable).	0.0677800178528	11
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0130100250244	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.012640953064	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0124130249023	1
Coq.Arith.Compare_dec.not_ge	40	4	search with cache (only 1: apply Nat.lt_nge).	0.0615019798279	33
Coq.Arith.Compare_dec.not_lt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.0492429733276	23
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	3.0.0.0.1.0.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: auto with arith).	1.24815106392	1040
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	search with cache (only 1: apply Nat.compare_lt_iff).	0.0135908126831	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	1	search with cache (only 1: apply Nat.compare_gt_iff).	0.0147728919983	2
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40	4.0.0.0.0.1.2.0.0.0.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto with arith).	1.47963905334	2140
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0134420394897	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0233001708984	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0131170749664	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	4.2.6.6	search with cache (only 1: repeat red; only 1: induction n as [| n IH]; only 1: split; only 1: congruence).	0.0760488510132	410
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.1.1	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0320820808411	67
Coq.Arith.EqNat.eq_nat_eq	40	0	search with cache (only 1: apply eq_nat_is_eq).	0.00613188743591	1
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.2.0.1.0.0.2.0.1.8	search with cache (only 1: induction n; only 1: intros n; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial).	15.2229709625	31944
Coq.Arith.EqNat.beq_nat_refl	40	3.0.6.21	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.104459047318	691
Coq.Arith.EqNat.beq_nat_true	40	1.1.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	0.634227991104	421
Coq.Arith.EqNat.beq_nat_false	40	1.2.0.1.1.1.0.4	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: now try Nat.order'; only 1: easy; only 1: destruct m; only 1: contradiction || auto; only 1: contradiction || auto).	0.697911024094	589
Coq.Arith.EqNat.beq_nat_eq	40	1.1.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: contradiction || auto).	5.26435184479	3819
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	4.2.3	search with cache (only 1: induction n; only 1: simpl_relation; only 1: firstorder).	0.976167917252	137
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: constructor).	0.00773191452026	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	2.2.0.0.0.11	search with cache (only 1: intros x y H; only 1: intros; only 1: simpl; only 1: induction n; only 1: firstorder; only 1: firstorder).	3.24296617508	5095
Coq.Arith.PeanoNat.Nat.pred_succ	40	2	search with cache (only 1: reflexivity).	0.0079939365387	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0075409412384	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00752806663513	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00745892524719	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.0075101852417	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00759601593018	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: reflexivity).	0.0113489627838	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00791621208191	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0132548809052	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	0.0.7.0.5.0.0.0.0.6.0	search with cache (only 1: revert m; only 1: simpl_relation; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: destruct (IHn m); only 1: auto).	27.7044570446	88966
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	5.0.4.0.0.0.0.0.1.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: CRelationClasses.simpl_crelation).	2.9117808342	8311
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.2.0	search with cache (only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: simpl; only 1: auto).	0.0965631008148	49
Coq.Arith.PeanoNat.Nat.max_l	40	0.1.3.0.1.0.0.2.1.0.0.2	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.23134589195	7747
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	3.4	search with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	0.0123238563538	9
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.00838398933411	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0	search with cache (only 1: now nzsimpl).	0.016138792038	1
Coq.Arith.PeanoNat.Nat.square_spec	40	1.3.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: repeat red; only 1: intuition).	0.232313156128	17
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.0	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0150520801544	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	2.0.0.1.0.0.0.0.2.3.1.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: simpl in H; only 1: rewrite H; only 1: now nzsimpl; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	10.5981538296	8338
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	3.0	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.0268259048462	26
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.0104370117188	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40
Coq.Arith.PeanoNat.Nat.gcd_divide	40	2.2.12	search with cache (only 1: fix even_spec 1; only 1: intros n m; only 1: auto).	0.883463144302	500
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	6.0	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.0360879898071	60
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0103650093079	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	6.0.3	search with cache (only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	0.606434822083	258
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	9	search with cache (only 1: apply le_0_l).	0.0365350246429	34
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0170810222626	8
Coq.Arith.PeanoNat.Nat.le_div2	40	5.12.0.3.23	search with cache (only 1: simpl; only 1: nzinduct n; only 1: now apply eq_le_incl; only 1: fix gcd_greatest 1; only 1: auto).	6.27022600174	15743
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	4.3.2	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.233839988708	203
Coq.Arith.PeanoNat.Nat.double_twice	40	0.5.0	search with cache (only 1: simpl; only 1: intro n; only 1: now rewrite add_0_r).	0.430438995361	57
Coq.Arith.PeanoNat.Nat.testbit_0_l	40
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	1.0.8.9.1.8.15.12.0	search with cache (only 1: unfold testbit; only 1: destr_bool; only 1: apply eq_true_iff_eq; only 1: nzsimpl; only 1: unfold odd; only 1: split; only 1: fix odd_spec 1; only 1: assumption; only 1: easy).	34.7108020782	54602
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.7	search with cache (only 1: fix even_spec 1; only 1: now induction n).	0.50130200386	133
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	3.1.4.1.0.2	search with cache (only 1: intros m; only 1: intros x y z; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	2.22536993027	2194
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	5.0.15.12	search with cache (only 1: intro; only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	29.3288550377	55741
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	0.5.0.3.2.1.2.3	search with cache (only 1: unfold odd; only 1: intro n; only 1: intros m; only 1: destr_bool; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	32.2925519943	35658
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	0.17.7	search with cache (only 1: intros A x P H y H0; only 1: fix even_spec 1; only 1: auto).	6.64246916771	10449
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0126299858093	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	1.0.0.0.0.0.0.0.0.0.1.8.2	search with cache (only 1: apply testbit_bitwise_1; only 1: fix even_spec 1; only 1: trivial; only 1: destruct (compare_spec a b); only 1: rewrite max_l; only 1: subst; only 1: trivial; only 1: subst; only 1: trivial; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	34.865434885	17069
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0101370811462	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0119750499725	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	3	search with cache (only 1: Nat.order).	0.0231280326843	21
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	1	search with cache (only 1: apply Nat.succ_lt_mono).	0.0145571231842	2
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0133130550385	1
Coq.Arith.Gt.gt_S	40	7.34.4	search with cache (only 1: intros EQ; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	36.5800311565	79872
Coq.Arith.Gt.gt_pred	40	1	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0156388282776	2
Coq.Arith.Gt.le_not_gt	40	0.4.2	search with cache (only 1: intro H'; only 1: apply Nat.le_ngt; only 1: trivial).	0.0187418460846	12
Coq.Arith.Gt.gt_not_le	40	0.4.3	search with cache (only 1: intro H'; only 1: apply Nat.lt_nge; only 1: trivial).	0.0197219848633	10
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0130898952484	1
Coq.Arith.Gt.gt_S_le	40	6	search with cache (only 1: apply Nat.lt_succ_r).	0.025218963623	7
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0127549171448	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0134038925171	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	0.7.1.13.25	search with cache (only 1: apply Nat.lt_eq_cases; only 1: induction n as [| n IH]; only 1: trivial; only 1: constructor; only 1: trivial).	12.2430438995	47562
Coq.Arith.Gt.plus_gt_reg_l	40	7	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0324521064758	16
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0136868953705	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40	0.0.0.0.2.1.0.0.1.7	search with cache (only 1: intros ReprFunChoice A B; only 1: apply setoid_functional_choice_first_characterization; only 1: split; only 1: exact choice; only 1: split; only 1: exact extensional_function_representative; only 1: exact classic; only 1: auto; only 1: firstorder; only 1: firstorder).	9.62863707542	600
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.8	search with cache (only 1: destruct 1; only 1: auto).	0.0107460021973	26
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0077850818634	3
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00731897354126	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00749897956848	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00828313827515	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0085768699646	4
Coq.Logic.JMeq.JMeq_congr	40
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.00928688049316	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00895881652832	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.1	search with cache (only 1: intros * []; only 1: auto).	0.0962781906128	12
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.7.9.1	search with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: trivial).	0.240500211716	817
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00570702552795	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	17.0	search with cache (only 1: intros; only 1: tauto).	0.0832281112671	268
Coq.Logic.Classical_Prop.not_imply_elim	40	2.0.1.0.0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: destruct (classic P); only 1: auto; only 1: auto; only 1: tauto).	0.0547430515289	41
Coq.Logic.Classical_Prop.not_imply_elim2	40	2.1.1.0.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: apply H; only 1: auto).	0.0512220859528	51
Coq.Logic.Classical_Prop.imply_to_or	40	2.1.1	search with cache (only 1: intros A; only 1: intros; only 1: tauto).	0.125862121582	51
Coq.Logic.Classical_Prop.imply_to_and	40	3.1.0.0.1	search with cache (only 1: unfold not; only 1: intros; only 1: destruct (classic P); only 1: auto; only 1: tauto).	0.0569798946381	32
Coq.Logic.Classical_Prop.or_to_imply	40	1	search with cache (only 1: tauto).	0.0742690563202	95
Coq.Logic.Classical_Prop.not_and_or	40	1.1.1.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: elim (classic P); only 1: auto; only 1: auto; only 1: auto).	0.091157913208	77
Coq.Logic.Classical_Prop.or_not_and	40	1	search with cache (only 1: tauto).	0.0737121105194	65
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0175981521606	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0172688961029	1
Coq.Logic.Classical_Prop.imply_and_or	40	2	search with cache (only 1: tauto).	0.0756950378418	102
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0189290046692	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	1.0.2.0.0.3.0.0.1	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.125851869583	599
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	32	search with cache (only 1: eauto using BinInt.Z.Private_Tac.eq_trans, BinInt.Z.Private_Tac.eq_sym).	1.68209385872	2614
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	23	search with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).	0.900177001953	1131
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.0.0.0.0.7.1.0	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	2.03884482384	1998
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	3.0.0.1.0.2	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: auto).	0.0413730144501	131
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.1.0.1	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.013247013092	10
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	0.31.15.0	search with cache (only 1: intros; only 1: intros a Ha; only 1: apply H; only 1: trivial).	27.0415501595	78444
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.2.7	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.371001005173	442
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0.1.3	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	18.2369000912	26961
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.1.2.7	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.776459932327	578
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	0	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.13185787201	1
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.1.0.2.1	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	0.198636054993	43
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.2.0.0.1.1.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: pose (D := A * B); only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: pose (R := fun z z' : D => let x := fst z in let x' := fst z' in let y := snd z in let y' := snd z' in x = x' /\ (T x y -> y = y' \/ T x y') /\ (T x y' -> y = y' \/ T x y)); only 1: firstorder; only 1: exists f; only 1: firstorder).	21.7301850319	5768
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40	1.0.0.4.8.0.10	search with cache (only 1: intros Ext A a; only 1: intro f; only 1: pose (R := fun P Q => forall x : A, P x <-> Q x); only 1: apply Ext; only 1: firstorder; only 1: firstorder; only 1: firstorder).	22.5891468525	2076
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.9.2	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: auto).	0.0430700778961	264
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	9.13.6.7.0	search with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	2.8979279995	17076
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40	1.0.0.6.4.6.0.0.0.0	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: intros; only 1: apply NNPP; only 1: intro H; only 1: apply abs; only 1: exists n; only 1: exact H).	12.2741141319	41976
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0175199508667	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	4.2.3.2.2.1.0.0.4.1	search with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	5.37312102318	18031
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	3.3.2	search with cache (only 1: unfold not; only 1: intros * []; only 1: auto).	0.132943153381	286
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply eq_dep_eq; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0106828212738	5
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	8.1.9.12	search with cache (only 1: intros (l, F); only 1: induction l; only 1: auto; only 1: firstorder).	6.74328804016	4545
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.035630941391	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00351595878601	2
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00338006019592	2
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00425815582275	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00387907028198	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00297999382019	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: reflexivity).	0.00215697288513	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: trivial).	0.00602006912231	6
Coq.Logic.HLevels.false_hprop	40	8.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00609302520752	35
Coq.Logic.HLevels.true_hprop	40	6.6.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.0139949321747	139
Coq.Logic.HLevels.not_hprop	40	1.1.0.4	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality; only 1: contradiction).	0.00752401351929	36
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0267570018768	8
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	1.1.3.0.2.4.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: intro x; only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	0.717855930328	620
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.5.3	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0157170295715	60
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00772309303284	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.0103650093079	8
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.3.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0117740631104	6
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	1.5.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0123209953308	9
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.2.2.2	search with cache (only 1: intros; only 1: change_no_check x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0153820514679	27
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	9.0.0	search with cache (only 1: red; only 1: intros; only 1: auto).	0.0311510562897	204
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	0.4.9.1.1.3	search with cache (only 1: red; only 1: intro; only 1: intro; only 1: intro eq_dep_eq; only 1: rewrite H; only 1: trivial).	0.173285961151	1214
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	12.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0393400192261	235
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0.7.6.8	search with cache (only 1: intros UIP_refl y; only 1: intros; only 1: rewrite (UIP_refl y); only 1: reflexivity; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.623420953751	3425
Coq.Logic.EqdepFacts.f_eq_dep	40	1.5.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0102219581604	9
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.6.1	search with cache (only 1: intro eq_rect_eq; only 1: destruct 1; only 1: trivial).	0.0181739330292	38
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	2.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00874495506287	4
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	10.0.0.0.2	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: apply False_rec).	0.193150043488	845
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40	10.21.12.1.21	search with cache (only 1: intros ReprFunChoice; only 1: intros; only 1: apply constructive_indefinite_description; only 1: apply NNPP; only 1: firstorder).	34.1277370453	98604
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40
Coq.Logic.Decidable.dec_True	40	0.2	search with cache (only 1: unfold decidable; only 1: auto).	0.00753402709961	4
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00721406936646	2
Coq.Logic.Decidable.dec_or	40	1.3	search with cache (only 1: unfold decidable, not; only 1: tauto).	0.0322580337524	71
Coq.Logic.Decidable.dec_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0247540473938	6
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0125830173492	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0825951099396	2
Coq.Logic.Decidable.dec_iff	40
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111401081085	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0134890079498	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0239360332489	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0228178501129	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0200071334839	3
Coq.Logic.Decidable.not_iff	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.159008979797	24
Coq.Logic.Decidable.not_true_iff	40	1.1.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00864505767822	7
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00890207290649	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0150330066681	2
Coq.Logic.Decidable.contrapositive	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0191600322723	3
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0423059463501	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0226948261261	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0221540927887	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0227189064026	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0243539810181	2
Coq.Logic.Decidable.not_or_iff	40	3.1	search with cache (only 1: intros; only 1: tauto).	0.0244450569153	28
Coq.Logic.Decidable.not_and_iff	40	5.2	search with cache (only 1: intros; only 1: tauto).	0.018002986908	22
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0287749767303	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0290701389313	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	1.15	search with cache (only 1: unfold singleton; only 1: auto).	0.0591928958893	127
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0682878494263	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	7.1.0.8	search with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	6.22895789146	607
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.1.0.1	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0361540317535	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.620685100555	627
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0162370204926	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0163788795471	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0424609184265	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1	search with cache (only 1: eauto with *).	0.42392206192	16
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2	search with cache (only 1: exact (rmatch _ _ _)).	0.0185699462891	3
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0181121826172	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	5	search with cache (only 1: ok).	0.114694833755	32
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	6	search with cache (only 1: now simpl).	0.0266869068146	7
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.1.0.19.11	search with cache (only 1: intros n; only 1: destruct n; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto).	1.19784283638	2119
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40	1.0.18.3	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	2.68816685677	4182
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0.1	search with cache (only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.0494201183319	3
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0221970081329	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	1.1.1.1.2.0.0.13	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	6.77531599998	2736
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	1.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0478079319	10
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	2.0.12.4.11	search with cache (only 1: inversion 1; only 1: tauto; only 1: induction n; only 1: auto; only 1: auto).	3.17756700516	4259
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.2.1.32.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: destruct t as [| [| ] l x r]; only 1: auto; only 1: invrb; only 1: invrb).	20.2457549572	24724
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0393540859222	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	0.19.15.0	search with cache (only 1: unfold singleton; only 1: red; only 1: exists 1%positive; only 1: auto).	0.763348817825	1510
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.4.0.2.0	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.911290884018	393
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	1.0.1.0.0.0.0.1.0.0.0.0.11	search with cache (only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: auto).	3.52587080002	1780
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.1.1.0.1.0	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: simpl; only 1: intuition; only 1: ok).	0.0409121513367	13
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	11	search with cache (only 1: auto).	1.07590889931	571
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0	search with cache (only 1: intro; only 1: auto).	0.0249319076538	2
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.1.1.1.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0761969089508	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	8.3	search with cache (only 1: unfold partition, filter; only 1: auto_tc).	0.0810699462891	91
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.2.1.1	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0346341133118	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0334479808807	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0521671772003	9
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.163686037064	76
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	2.2.7.2.1.0	search with cache (only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	32.3972020149	19766
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.1.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: intros; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0471220016479	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	2.0.0.8.0.2	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.23646616936	1837
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.2.1	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.279755830765	66
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	7	search with cache (only 1: firstorder).	0.133740901947	25
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	2	search with cache (only 1: intuition).	0.109553813934	17
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0763709545135	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0	search with cache (only 1: firstorder).	0.0793478488922	1
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	1.15	search with cache (only 1: fix odd_spec 1; only 1: intuition).	1.88660097122	939
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	3.2.4.4	search with cache (only 1: intros n; only 1: repeat red; only 1: unfold In; only 1: intuition).	0.546958208084	230
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.17	search with cache (only 1: fix odd_spec 1; only 1: intuition).	3.28705811501	1544
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.22	search with cache (only 1: intros [| ] [| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.81566214561	907
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	1.0.1.1.0.1.0.1.0.1.2	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: intros; only 1: intuition; only 1: intros; only 1: intuition; only 1: easy; only 1: intros; only 1: intuition; only 1: easy || now destruct 1).	5.89228701591	2525
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	6.6.2.0	search with cache (only 1: intros; only 1: split; only 1: destr_bool; only 1: destr_bool).	1.51807999611	537
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	13.20.15.9	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	9.04339504242	17044
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.109137058258	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.110699892044	4
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.111740112305	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.108512878418	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.110728025436	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.14	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	4.02585887909	1955
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	1.0.13	search with cache (only 1: intros [| l' o' r']; only 1: trivial; only 1: trivial).	0.730851888657	367
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.0.7.2	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: intros; only 1: auto).	3.72050905228	784
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.5.2	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.45392203331	92
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.2.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0649230480194	5
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.4.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0827729701996	19
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.9	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.178660154343	50
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0602860450745	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	1.1	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0611591339111	4
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0598800182343	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0596239566803	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0658748149872	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.6	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.227485895157	24
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0674240589142	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.2.1	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.257346153259	23
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0738770961761	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.1.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.0600562095642	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	0.0.2.1.0	search with cache (only 1: split; only 1: intros; only 1: apply <- mem_spec; only 1: auto; only 1: apply -> mem_spec).	0.0818150043488	8
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	0.2.0.0.1.0.0	search with cache (only 1: split; only 1: intros; only 1: apply <- equal_spec; only 1: auto; only 1: intros; only 1: apply -> equal_spec; only 1: auto).	0.0951459407806	10
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	0.2.1.0.2	search with cache (only 1: split; only 1: apply <- subset_spec; only 1: intros; only 1: apply -> subset_spec; only 1: auto).	0.0868887901306	10
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	2.0.3	search with cache (only 1: split; only 1: apply <- is_empty_spec; only 1: apply -> is_empty_spec).	0.129719018936	11
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0579040050507	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	2.9	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.656165122986	166
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	3.7.0	search with cache (only 1: rewrite add_spec; only 1: rewrite <- mem_spec; only 1: intuition).	0.953171014786	316
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.0.5.8	search with cache (only 1: split; only 1: rewrite remove_spec; only 1: intuition; only 1: intuition).	0.977816820145	323
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	0.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0687189102173	2
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0884349346161	6
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.0890228748322	7
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	4	search with cache (only 1: intuition).	0.0591690540314	5
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	1.1.0.1.0.0.0.2	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	9.23161005974	1482
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	0.0.0.1.0.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	2.51368618011	415
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	2.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0565078258514	4
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	0.13.3.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	22.494756937	2801
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	4.0.0	search with cache (only 1: unfold Equal; only 1: intros x y H s s' H0; only 1: firstorder).	0.0670771598816	7
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	2.2.1	search with cache (only 1: split; only 1: congruence; only 1: firstorder).	0.0614869594574	8
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	2.0.0.7	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	1.26999187469	201
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	1.0.0.1.1	search with cache (only 1: repeat red; only 1: unfold Empty; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	0.12838602066	8
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.102698087692	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.108507156372	4
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.126499891281	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	1.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.108145952225	5
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.151615142822	3
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40	0.0.8.5.0.1	search with cache (only 1: intros x x' Hx s s' Hs; only 1: rewrite filter_spec; only 1: rewrite filter_spec; only 1: now f_equiv; only 1: intuition; only 1: intuition).	5.52769994736	1902
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0948691368103	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.3.2	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.364154100418	41
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	1	search with cache (only 1: reflexivity).	0.0393350124359	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	2	search with cache (only 1: fsetdec).	0.066025018692	3
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	1	search with cache (only 1: firstorder).	0.0461318492889	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	1	search with cache (only 1: reflexivity).	0.0405879020691	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0672669410706	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	1	search with cache (only 1: fsetdec).	0.110785961151	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	1	search with cache (only 1: fsetdec).	0.0611650943756	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	1	search with cache (only 1: fsetdec).	0.0516879558563	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	1	search with cache (only 1: fsetdec).	0.0722470283508	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0734519958496	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	1	search with cache (only 1: fsetdec).	0.0883791446686	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0656068325043	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0621979236603	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.0	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.159804105759	4
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0752670764923	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	1	search with cache (only 1: fsetdec).	0.0692188739777	2
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	2	search with cache (only 1: fsetdec).	0.116107940674	3
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	1	search with cache (only 1: fsetdec).	0.163942098618	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	5	search with cache (only 1: fsetdec).	0.415560007095	79
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	1	search with cache (only 1: fsetdec).	0.137873888016	2
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	1	search with cache (only 1: fsetdec).	0.143446922302	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.14226102829	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0969650745392	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.256369113922	2
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	1	search with cache (only 1: fsetdec).	0.12123799324	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	1	search with cache (only 1: fsetdec).	0.087327003479	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	1	search with cache (only 1: fsetdec).	0.117045879364	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.107997179031	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.161974191666	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.12060713768	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.162740945816	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.258073806763	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.228250026703	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.0586590766907	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	1	search with cache (only 1: fsetdec).	0.0580401420593	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.0772979259491	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0847890377045	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0785310268402	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	1	search with cache (only 1: fsetdec).	0.0867741107941	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0831191539764	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0.0.0.0.1	search with cache (only 1: rewrite union_spec; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0904700756073	6
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.13501906395	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	1	search with cache (only 1: fsetdec).	0.0863008499146	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	1	search with cache (only 1: fsetdec).	0.128845930099	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.102710008621	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.129932165146	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.179407835007	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.178851127625	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.2	search with cache (only 1: intuition; only 1: fsetdec).	0.173934936523	7
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.145889997482	3
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.0730159282684	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	1	search with cache (only 1: fsetdec).	0.073322057724	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.0609700679779	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.060408115387	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	1	search with cache (only 1: fsetdec).	0.0755820274353	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.122111082077	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	1	search with cache (only 1: fsetdec).	0.0880711078644	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.102532863617	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: fsetdec).	0.1121571064	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.107735157013	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.171118974686	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.130758047104	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	0.16	search with cache (only 1: intros H; only 1: fsetdec).	0.391400098801	148
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.5	search with cache (only 1: expAdd; only 1: fsetdec).	0.220075130463	26
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.210168123245	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	1.4	search with cache (only 1: expAdd; only 1: fsetdec).	0.332672834396	7
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.278017044067	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	1.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.291424036026	5
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.0.1.1	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.148111104965	26
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	2.1.0.2.16.0	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: intros; only 1: auto; only 1: auto with *; only 1: fsetdec).	9.25323700905	4015
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	5.1.0.1.14.3	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: now symmetry; only 1: reflexivity; only 1: intros until 3; only 1: fsetdec).	6.57804203033	3837
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	2.3.4.4	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	0.601103067398	317
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	0.1.0.0.0.2.10.1	search with cache (only 1: intros i s; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: fsetdec; only 1: auto with set).	34.8237140179	5715
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.5.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.293999910355	41
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.24.23.8.3	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	13.0443170071	20173
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.0533890724182	3
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	4.14.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.11493110657	651
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	2.0	search with cache (only 1: symmetry; only 1: auto with set).	0.0562930107117	4
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: fsetdec).	0.324172019958	64
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.2.3	search with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.347874879837	61
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0	search with cache (only 1: auto with set).	0.0403430461884	1
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0528280735016	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0518410205841	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	12	search with cache (only 1: eauto with *).	0.0613830089569	46
Coq.MSets.MSetAVL.MakeRaw.create_spec	40	5.18.1	search with cache (only 1: intros; only 1: compute; only 1: intuition_in).	26.5023999214	4981
Coq.MSets.MSetAVL.MakeRaw.create_ok	40
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.251904964447	53
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	1.0.0.3	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0979449748993	18
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.1.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0774919986725	8
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.113010883331	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	1.21.2	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: apply <- mem_spec; only 1: auto with *).	3.39422607422	1571
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	4.3	search with cache (only 1: intros; only 1: auto with set).	0.0641069412231	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	0.12	search with cache (only 1: apply <- mem_spec; only 1: Dec.fsetdec).	0.376662969589	100
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.11449098587	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0895259380341	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.128755092621	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	2	search with cache (only 1: auto with set relations).	0.0418019294739	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.135990858078	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0684700012207	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	1	search with cache (only 1: auto with set).	0.0425889492035	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40	1.3.1.3.1.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	1.25631690025	364
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	0.3.4	search with cache (only 1: intro H; only 1: rewrite (equal_2 H); only 1: auto).	0.0872609615326	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	1.2.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0581188201904	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	11	search with cache (only 1: auto with set).	0.0833511352539	34
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	1	search with cache (only 1: auto with set).	0.0420849323273	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	2	search with cache (only 1: auto with set).	0.0488140583038	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	1	search with cache (only 1: auto with set).	0.0433261394501	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1	search with cache (only 1: auto with set relations).	0.0460610389709	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	1	search with cache (only 1: auto with set relations).	0.0451488494873	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	1.0.0.0.0.3	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: intuition).	0.141460895538	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.144005060196	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	1	search with cache (only 1: auto with set relations).	0.0437488555908	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.3.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: rewrite singleton_spec; only 1: auto with relations).	3.14147996902	555
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	1.8	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.282441854477	64
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1	search with cache (only 1: auto with set).	0.0459418296814	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.058357000351	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	3.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0694279670715	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	1	search with cache (only 1: auto with set).	0.0463600158691	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0443429946899	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.0425820350647	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0420379638672	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0432529449463	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	1	search with cache (only 1: auto with set).	0.0436539649963	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.105261087418	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.0426168441772	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0452589988708	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	1	search with cache (only 1: auto with set).	0.0446870326996	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0427260398865	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0412750244141	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0451200008392	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0453221797943	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set relations).	0.0444309711456	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	0.8	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.814145803452	44
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0419790744781	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0416121482849	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.103792905807	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.0447480678558	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: auto with set).	0.0502150058746	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0437359809875	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0458199977875	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0454959869385	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40	0.0.0.3.2.0.0.2	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: rewrite <- mem_spec; only 1: destruct (mem x s'); only 1: intuition; only 1: intuition; only 1: intuition).	10.2581748962	1553
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0492029190063	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.3.0.0.0.5.2	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	1.11231517792	524
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.1.0.0.0.6.4	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.82676410675	525
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.0399060249329	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.5.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto).	0.0986669063568	24
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.2.1.2.1.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto; only 1: auto).	0.743058204651	358
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.0.0.0.4.1.0.1.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	0.737954139709	507
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1.1	search with cache (only 1: intros; only 1: auto with set).	0.0563971996307	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	13	search with cache (only 1: solve_proper).	6.74764513969	174
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	1.1	search with cache (only 1: intros; only 1: auto with set).	0.0573971271515	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0493471622467	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.0.3.0.0.0.3	search with cache (only 1: unfold Add, MP.Add, Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	14.8734340668	858
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.7.1.2.1	search with cache (only 1: intros; only 1: apply <- for_all_spec; only 1: red; only 1: auto with set; only 1: auto).	0.804142951965	390
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.1.16.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	1.06533479691	474
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0558021068573	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: intros s s' E; only 1: auto).	0.0524961948395	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.215932130814	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0478618144989	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.167678117752	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.152048826218	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.330680847168	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1	search with cache (only 1: firstorder).	0.0542709827423	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0964770317078	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.102374076843	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.129413127899	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	1	search with cache (only 1: fsetdec).	0.585533857346	30
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.172435998917	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	3.0	search with cache (only 1: intros x; only 1: fsetdec).	0.184091091156	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.251554965973	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.297847032547	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	1.7.4	search with cache (only 1: intros x y H s s' H0; only 1: rewrite singleton_spec; only 1: intuition).	0.826601982117	257
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2.5	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.238617897034	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	7	search with cache (only 1: fsetdec).	0.175229072571	22
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.111822128296	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.21.16	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: intuition).	15.3005800247	18226
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	1.11	search with cache (only 1: fix even_spec 1; only 1: intuition_in).	5.11480689049	1069
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40	0.10.16.4	search with cache (only 1: repeat red; only 1: intros a b c0; only 1: fix gcd_divide 1; only 1: auto).	14.8277819157	17673
Coq.MSets.MSetGenTree.Props.In_node_iff	40	5	search with cache (only 1: intuition_in).	0.239639043808	40
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	10	search with cache (only 1: intuition_in).	0.12322306633	81
Coq.MSets.MSetGenTree.Props.lt_leaf	40	8.3	search with cache (only 1: intros x y z; only 1: intuition_in).	0.125532150269	148
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0197970867157	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	5.7.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	1.11093711853	675
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.1	search with cache (only 1: red; only 1: intuition_in; only 1: order).	0.0534651279449	4
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.3.0.1	search with cache (only 1: red; only 1: intros A C h1 h2; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.0273220539093	17
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	5.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0227928161621	7
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0203359127045	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	5.0	search with cache (only 1: intros x y z; only 1: eauto).	0.0227808952332	7
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	14.1.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	27.9363138676	20724
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0609810352325	20
Coq.MSets.MSetGenTree.Props.empty_spec	40	4	search with cache (only 1: firstorder).	0.0232648849487	5
Coq.MSets.MSetGenTree.Props.empty_ok	40	1	search with cache (only 1: auto).	0.014946937561	2
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	1.10	search with cache (only 1: fix even_spec 1; only 1: intuition_in).	0.746600151062	436
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.1.0.0.0.0.0.4	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	5.4818520546	2403
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40	4.5.17	search with cache (only 1: red; only 1: fix gcd_divide 1; only 1: eauto).	5.35969614983	10142
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40	6.7	search with cache (only 1: fix gcd_divide 1; only 1: intuition).	0.305616140366	187
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	5.7.0.1.3.4.3	search with cache (only 1: split; only 1: firstorder; only 1: assert (forall s s', s = s' -> ~ L.lt s s'); only 1: Nat.order; only 1: intros x y z; only 1: now f_equal; only 1: firstorder).	8.78856086731	15076
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	2.5.8	search with cache (only 1: intros; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	2.77361893654	1985
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	3	search with cache (only 1: firstorder).	0.0594148635864	37
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40	1.21.39.14.9	search with cache (only 1: PeanoNat.Nat.bitwise; only 1: apply eq_true_iff_eq; only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	12.7912249565	36983
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	5	search with cache (only 1: firstorder).	0.0437300205231	34
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	7.5.2	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: rewrite (Hll' x); only 1: now f_equiv).	1.70556592941	684
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	4	search with cache (only 1: firstorder).	0.0341348648071	29
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40	2.21.0	search with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	14.5907120705	15988
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.125759840012	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: compute; only 1: auto with extcore).	0.120470046997	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	8.1	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	0.830574989319	111
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.2.1.6.1.20	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: red; only 1: intuition; only 1: red; only 1: unfold In; only 1: Dec.fsetdec).	2.68879008293	1270
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.5.4.3	search with cache (only 1: intro; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	6.35423398018	2055
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.10.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	2.03296780586	441
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.7.0.0.0.0.2.0.0.0.1	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	31.669670105	6521
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	7	search with cache (only 1: solve_proper).	0.304799079895	19
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	1.10	search with cache (only 1: fix even_spec 1; only 1: intuition).	2.55804800987	187
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0	search with cache (only 1: firstorder).	0.0184559822083	1
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.0385601520538	5
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	10	search with cache (only 1: constructor).	0.0389051437378	35
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.8.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.16090297699	97
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	2.2.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.136569976807	83
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	2.1	search with cache (only 1: unfold elements; only 1: firstorder).	0.0625441074371	31
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0	search with cache (only 1: auto).	0.0312530994415	1
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	0.2.0.0.1.0.2.2	search with cache (only 1: intros; only 1: unfold Empty, empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: inversion H).	2.67123198509	1242
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0315780639648	1
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	4	search with cache (only 1: tauto).	0.0138630867004	5
Coq.MSets.MSetList.MakeRaw.mem_spec	40	1.8	search with cache (only 1: fix odd_spec 1; only 1: intuition).	0.422104120255	134
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: simpl; only 1: constructor; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	3.89440917969	1501
Coq.MSets.MSetList.MakeRaw.remove_spec	40	0.24	search with cache (only 1: fix gcd_divide 1; only 1: auto).	13.1213450432	6167
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	2	search with cache (only 1: reflexivity).	0.0298190116882	15
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.1.0.21	search with cache (only 1: unfold singleton; only 1: intros; only 1: rewrite InA_cons, InA_nil; only 1: tauto).	3.08160591125	2390
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0860729217529	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	2.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: constructor).	0.0208458900452	4
Coq.MSets.MSetList.MakeRaw.empty_spec	40
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	9.16	search with cache (only 1: fix odd_spec 1; only 1: intuition).	19.9343619347	14100
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0.0.4	search with cache (only 1: split; only 1: auto; only 1: auto).	0.102969884872	7
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.1.0.0.0.1.1.0.7	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: constructor; only 1: change_no_check (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	10.6025578976	6710
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.1.3	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0277218818665	7
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	5.0.0.0.3.2	search with cache (only 1: inversion 1; only 1: unfold Empty, empty; only 1: destruct s; only 1: intuition; only 1: inv; only 1: now discriminate).	1.95769309998	951
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	2.2.0.4.0.0.3	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: intuition).	11.3941960335	6041
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intros; only 1: auto).	0.0170538425446	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1	search with cache (only 1: auto).	0.0150020122528	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4.3	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0311319828033	14
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	2	search with cache (only 1: auto with zarith).	0.0259490013123	3
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.1.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.00587892532349	5
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.1.0.0.0.4.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.191692113876	248
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40	0.0.2.1.0.0.4.0.0.0.2.1.0.0.0.0.0.0.0.0.4.4	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: induction IHclos_trans1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IHIHclos_trans1; only 1: apply clos_t1n_trans; only 1: auto; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: left; only 1: auto; only 1: auto).	27.9072999954	151840
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.0.1.8.0.0.1	search with cache (only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.116889953613	891
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40	0.2.0.1.0.0.4.0.0.0.1.0.0.0.0.0.0.0.4.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: elim IHclos_trans2; only 1: intro y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	18.7356660366	105343
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40	4.2.4.5	search with cache (only 1: intro y0; only 1: right with y0; only 1: assumption; only 1: left).	0.0363230705261	355
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.3.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.00789785385132	14
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	1.0.2.0.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto with sets; only 1: auto with sets).	0.00757002830505	9
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.1.0.4.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: case H; only 1: auto with sets; only 1: constructor 3; only 1: auto with sets).	0.757853984833	3268
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40	0.0.3.0.1.7.0.0.3.0.0.7.0	search with cache (only 1: split; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: assumption; only 1: right with y; only 1: auto; only 1: auto).	18.0728240013	78644
Coq.Relations.Relations.inverse_image_of_equivalence	40	3.2.10.2.1.2.0.1.0	search with cache (only 1: intros x y H; only 1: induction 1; only 1: constructor 1; only 1: intro z; only 1: auto; only 1: intro z; only 1: eauto; only 1: intro z; only 1: auto).	2.52614402771	8978
Coq.Relations.Relations.inverse_image_of_eq	40	1.1.3.1.2.2.4	search with cache (only 1: intros x y H; only 1: constructor 1; only 1: constructor 1; only 1: induction 1; only 1: auto; only 1: induction 1; only 1: trivial).	0.258404970169	1339
Coq.Sets.Uniset.leb_refl	40	2	search with cache (only 1: destr_bool).	0.00501799583435	3
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00549411773682	5
Coq.Sets.Uniset.seq_refl	40	1	search with cache (only 1: auto).	0.00381207466125	2
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: auto).	0.00579190254211	5
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: auto).	0.00517201423645	3
Coq.Sets.Uniset.union_empty_right	40
Coq.Sets.Uniset.union_comm	40	2.0.6.10.0.2.1.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: destruct x; only 1: simpl; only 1: intros x a; only 1: destruct b; only 1: intuition; only 1: rewrite (orb_false_r (charac x a)); only 1: auto).	4.48809814453	28966
Coq.Sets.Uniset.union_ass	40	1.0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with bool).	0.0182240009308	23
Coq.Sets.Uniset.seq_left	40	0.0.1.0.0.0.0.1	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.152562856674	243
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.00979018211365	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0	search with cache (only 1: split).	0.0116539001465	1
Coq.Sets.Multiset.meq_trans	40	8	search with cache (only 1: congruence).	0.0618648529053	74
Coq.Sets.Multiset.meq_sym	40	1.0.1.0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: intros; only 1: rewrite H; only 1: auto).	0.0194070339203	8
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0144078731537	3
Coq.Sets.Multiset.munion_empty_right	40	2.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: trivial).	0.0185987949371	11
Coq.Sets.Multiset.munion_comm	40	9.1.3.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: destruct y; only 1: simpl; only 1: firstorder).	5.25622797012	4943
Coq.Sets.Multiset.munion_ass	40	2.0.2.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: auto with arith).	0.843611955643	39
Coq.Sets.Multiset.meq_left	40	0.1.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0243761539459	8
Coq.Sets.Multiset.meq_right	40	0.1.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0231330394745	8
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	0.0269248485565	12
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: auto with sets).	0.00642204284668	1
Coq.Sets.Integers.le_antisym	40	0.0	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.00906491279602	2
Coq.Sets.Integers.le_trans	40	2.6.0	search with cache (only 1: red; only 1: intros a b H; only 1: PeanoNat.Nat.order').	0.0445120334625	95
Coq.Sets.Integers.le_Order	40	0.0.0.0.1.1.0.0.0.6	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).	0.217667818069	502
Coq.Sets.Integers.triv_nat	40	6.0	search with cache (only 1: intro x; only 1: split).	0.0105957984924	8
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	2.0.2	search with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	0.00565814971924	24
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	4.4.1.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.310507774353	585
Coq.Sets.Relations_1_facts.contains_is_preorder	40	8.1	search with cache (only 1: intros; only 1: auto  10 with sets).	0.00655388832092	29
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.13.3.0	search with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	0.215645074844	1039
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	3.0.1.0	search with cache (only 1: unfold same_relation; only 1: unfold Symmetric, Complement; only 1: intros U R H' x y H'0; only 1: intuition).	0.0118980407715	8
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0839600563049	3
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1	search with cache (only 1: auto  10 with sets).	0.00716495513916	2
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.00712585449219	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.0.1.0.0.2.1.2	search with cache (only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	0.899966001511	4852
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	2.4.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0125050544739	18
Coq.Sets.Permut.comm_left	40	2.1.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: trivial).	0.00922513008118	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.0.22.3.6	search with cache (only 1: intros x H'; only 1: intros n H'0; only 1: exists n; only 1: auto with sets; only 1: auto with sets).	5.38758897781	11781
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.9.1.0.0.3.4.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros * []; only 1: auto with sets).	1.62090206146	2523
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	1.0.5	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0190069675446	35
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40	4.1.0.0	search with cache (only 1: red; only 1: intro X; only 1: red; only 1: auto  6 with sets).	0.0966711044312	22
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	2	search with cache (only 1: auto with sets).	0.00897598266602	3
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	1.1.0.0.0.1.0.0.0.4	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	21.5604190826	2621
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40	1.1.0.0.2.5.5	search with cache (only 1: elim Inclusion_is_an_order; only 1: intuition; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	23.8161420822	14560
Coq.Sets.Powerset.Intersection_maximal	40	3.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0114369392395	11
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00949716567993	2
Coq.Sets.Powerset.Union_increases_r	40	1	search with cache (only 1: auto with sets).	0.00873398780823	2
Coq.Sets.Powerset.Intersection_decreases_l	40	1.8.1.2.2	search with cache (only 1: intros x H'1; only 1: red; only 1: intro A; only 1: destruct 1; only 1: auto with sets).	1.46516394615	1829
Coq.Sets.Powerset.Intersection_decreases_r	40	1.0.0.0.1	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0166690349579	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	5	search with cache (only 1: firstorder).	0.594622135162	29
Coq.Sets.Classical_sets.Subtract_inv	40	1.3.19	search with cache (only 1: intros x y z H'; only 1: elim H'; only 1: auto with sets).	6.36057901382	12995
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.1.2.0.0	search with cache (only 1: intros; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.0238599777222	8
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.7.6.1.0	search with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	1.11944913864	4426
Coq.Sets.Relations_3_facts.coherent_symmetric	40	4.0.0.5.9	search with cache (only 1: intros A C h1 h2; only 1: red; only 1: intros (x, (Hx, Huni)); only 1: exists x; only 1: auto).	4.56125092506	26154
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.9.0.1.0	search with cache (only 1: intros X Y H'; only 1: red in H'; only 1: red; only 1: destruct 1; only 1: auto with sets).	1.6744761467	1096
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.1.0.0.7	search with cache (only 1: intros; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	3.09480500221	1106
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0132749080658	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	1.12	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.317735910416	233
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto  6 with sets).	0.0118579864502	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto using Empty_set_zero with sets).	0.0141150951385	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0136489868164	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  7 with sets).	0.0161879062653	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.1.1.0.0.0.1.1.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.949932098389	1810
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	1.0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	20.0250058174	28168
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.0.4.0.0.0.4.0.0.2.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets).	0.753871917725	1253
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.4653069973	2526
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.12267780304	23
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.2.1.0.2.1.2.2.6.5.7	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	12.8178291321	40918
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	4.16.7.2	search with cache (only 1: intros X x H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	4.29209113121	11072
Coq.Sets.Powerset_facts.incl_add	40	0.5.0	search with cache (only 1: intros A x; only 1: unfold Add; only 1: auto with sets).	0.0444540977478	8
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	1.1.0.0.0	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	0.0550110340118	7
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	1.0	search with cache (only 1: intro X; only 1: auto with sets).	0.00880599021912	3
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.011412858963	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0113818645477	7
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	1.2.3.0.2.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H; only 1: destruct H; only 1: auto with sets; only 1: intuition).	0.519968986511	1063
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0153379440308	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: destruct H1; only 1: intuition; only 1: intros x H1; only 1: destruct H1).	0.134686946869	126
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	6.0	search with cache (only 1: unfold not; only 1: destruct 1).	0.0101470947266	19
Coq.Sets.Constructive_sets.Included_Empty	40	0.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00857281684875	3
Coq.Sets.Constructive_sets.Add_intro1	40
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00878405570984	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	1.7.6.3.7.6.2.6	search with cache (only 1: intro; only 1: red; only 1: intro H1; only 1: elim H1; only 1: intros B C H'; only 1: elim H1; only 1: rewrite H'; only 1: destruct 1).	6.32920598984	56568
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	2.0.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0107531547546	6
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.089998960495	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.5.2.7	search with cache (only 1: intro; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.243355989456	827
Coq.Sets.Constructive_sets.Add_inv	40	3.8.3.15.0	search with cache (only 1: intros x y H'; only 1: destruct 1; only 1: auto with sets; only 1: destruct H; only 1: auto with sets).	11.5612699986	44389
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.1	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0100450515747	4
Coq.Sets.Constructive_sets.Couple_inv	40	2.0.1.0.1	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: auto; only 1: auto).	0.0174589157104	23
Coq.Sets.Constructive_sets.Setminus_intro	40	3.1.0.0	search with cache (only 1: red; only 1: red; only 1: intros B C x H'; only 1: auto with sets).	0.0102620124817	12
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros X H'; only 1: trivial).	0.00830793380737	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	4.1.2	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0114521980286	18
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	1.0.7.3.3	search with cache (only 1: intro X; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.563301086426	984
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40	0.22	search with cache (only 1: inversion 1; only 1: auto with sets).	1.47980308533	810
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	7.1.2	search with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.160196781158	328