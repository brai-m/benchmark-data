coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj1	40	0.000590	0	1
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Conjunction.proj2	40	0.002157	3	5	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.pred_Sn	40	0.007892	6	4	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_refl	40	0.001157	3	3
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.029927	7	8	1.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_trans	40	0.038678	123	51	2.2.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.not_eq_S	40	0.065775	109	29	0.9	synth with cache (only 1: intros ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.020704	3	5	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.021509	3	5	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.O_S	40	0.036144	16	8	4	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Equivalence.iff_sym	40	0.123156	371	205	0.0.1.0.0.0.1	synth with cache (only 1: intros C; only 1: intros _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.210012	120	62	0.0.0.1.0.1	synth with cache (only 1: red; only 1: intros h1; only 1: intros h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig_eta	40	0.029599	3	5	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2_eta	40	0.039639	6	6	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2_eta	40	0.029049	3	5	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_ind_r	40	0.683355	378	194	1.2.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.exists_to_inhabited_sig	40	0.525954	719	120	0.0.6.7.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (x, _tmp_tactician4); only 1: split; only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rec_r	40	0.077099	22	25	0.0.1	synth with cache (only 1: intros; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic_Type.identity_rect_r	40	0.357174	153	104	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: case identity_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.020336	3	5	0.0	synth with cache (only 1: intros; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.Under_relE	40	0.015247	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel	40	0.011232	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0.012932	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0.008706	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.unfold_Stream	40	0.849489	2453	199	0.2.31	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	0.246223	233	68	0.15	synth with cache (only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_sym	40	0.609577	399	136	2.2.2.0.0.1	synth with cache (only 1: intros A; only 1: intros y; only 1: intros z; only 1: intros B; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_trans	40	0.081515	40	16	1.0.4	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.Acc_inv	40	4.989239	6455	1821	5.8.2	synth with cache (only 1: intros ?; only 1: destruct 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement_inverse	40	0.048631	10	5	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp2	40	1.854023	13861	167
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.276275	76	30	1.4.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrsetoid.compat_Reflexive	40	0.029114	4	6	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iftrue_inv	40	1.226766	1267	183	1.0.1.16	synth with cache (only 1: intros H; only 1: destruct 1; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.inhabited_sig_to_exists	40	4.828920	22835	973	0.0.3.67.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [_tmp_tactician2 ?]; only 1: destruct _tmp_tactician2 as (x, Hx); only 1: exists x; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.Iffalse_inv	40	0.189832	38	32	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.116370	25	20	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp	40	1.648142	12403	158
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.tl_nth_tl	40	3.440135	1402	428	0.0.0.1.9.0	synth with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.unitE	40	1.995898	6040	408	0.2.11.44	synth with cache (only 1: red; only 1: intros p; only 1: destruct p; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0.008495	1	2	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.025909	3	5	0.0	synth with cache (only 1: intros _tmp_tactician2; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkapp0	40	1.943569	16290	181
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	5.230756	4341	1298	1.0.1.0.1.0.1.0.0.0.1.1.1	synth with cache (only 1: intros A; only 1: intros y; only 1: destruct 1; only 1: red; only 1: split; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial; only 1: red; only 1: intros B; only 1: intros _tmp_tactician0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_left	40	6.626971	3386	1414	3.1.0.1.4.1	synth with cache (only 1: intros ?; only 1: intros z; only 1: intros; only 1: destruct H; only 1: split; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.micromega.ZifyClasses.mkrel	40	1.570417	12720	160
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	2.914314	3573	598	10.3.8	synth with cache (only 1: intros h1; only 1: intros h2; only 1: destruct h2).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_r	40	12.427080	23926	11385	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros ?; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	0.010770	1	2	0	synth with cache (only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.Omega	40	7.208545	37421	391
coq-tactician-stdlib.8.11.dev	Coq.Bool.DecBool.ifdec_right	40	4.307084	1904	1005	1.5.0.3	synth with cache (only 1: intros until H; only 1: case H; only 1: contradiction; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_l	40	2.581121	2458	1357	0.0.1.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	13.787281	23441	1886	0.32.2.2.4	synth with cache (only 1: intros z; only 1: intros H1; only 1: intros H2; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	16.762844	18807	4501	1.16.6.2	synth with cache (only 1: intros; only 1: intros p; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_eq	40	15.682389	11632	976	0.37.1	synth with cache (only 1: intros; only 1: destruct r; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_iff_compat_l	40	20.841063	94574	27399	2.0.2.2.2.0.2.0.1.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros C; only 1: intros B; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.not_iff_compat	40	0.656073	237	203	0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: split; only 1: auto; only 1: intros _tmp_tactician2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried	40	0.075733	13	12	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f	40	0.027882	7	9	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.033438	7	9	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.041818	7	9	0.0.0	synth with cache (only 1: destruct 1; only 1: intros H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.214428	130	70	1.0.1.0.0.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros x; only 1: intros H; only 1: intros y; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.169871	17	14	0.0.1	synth with cache (only 1: destruct p; only 1: destruct q; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.030878	3	5	0.0	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.529551	446	119	2.0.3.8	synth with cache (only 1: intros x; only 1: intros H; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.imp_iff_compat_r	40	9.137110	9683	4507	1.2.0.0.0.0.0.1.2	synth with cache (only 1: intros B; only 1: intros A; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [Hl Hr]; only 1: split; only 1: intros H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0.013446	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_right	40	0.107763	53	27	3.1.0	synth with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0.011385	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0.008296	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.091496	35	27	0.0.0.0.0.0	synth with cache (only 1: split; only 1: trivial; only 1: intros until b; only 1: destruct b as (a1, a2, _tmp_tactician0); only 1: destruct _tmp_tactician0 as []; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.comm_left	40	0.055368	21	13	0.2.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.master_key	40	0.009131	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.leb_refl	40	0.016833	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	0.013753	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_True	40	0.032837	16	12	2.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0.023144	6	4	2	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0.015299	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0.031134	3	3	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_true_false	40	0.017864	6	4	2	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0.007959	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0.020468	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_False	40	0.020269	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0.021392	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_ind_r	40	0.852541	1355	370	0.1.2.7	synth with cache (only 1: intros x; only 1: intros z; only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.diff_false_true	40	0.012490	1	2	0	synth with cache (only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_comm	40	0.931900	1052	646	0.0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0.019448	6	4	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0.019109	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0.054640	10	10	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0.028489	4	6	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_is_true	40	0.027735	3	5	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0.007009	1	2	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.JMeq_eq_refl	40	0.023516	6	4	2	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0.028749	1	2	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.008960	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0.018230	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_and	40	0.047050	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_proper	40	0.014908	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0.048284	14	12	3	synth with cache (only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.060008	14	14	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.subrelation_refl	40	0.064257	15	16	1.0.0	synth with cache (only 1: hnf; only 1: intros; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.289224	36	15	0.4	synth with cache (only 1: unlock; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_false_iff_true	40	0.085577	7	10	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_left	40	0.024621	4	5	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not	40	0.032713	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rec_r	40	0.159559	63	64	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	0.027876	1	2	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.057981	14	12	1.0.0	synth with cache (only 1: unfold subrelation in *; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0.009816	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.forall_subrelation	40	0.022133	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0.050535	7	6	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0.021048	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_id_right	40	0.036122	3	5	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.UIP_refl_refl	40	0.126202	171	19	17	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_imp	40	0.045229	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_subst	40	0.104349	20	17	0.2	synth with cache (only 1: intros x; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_reflx	40	0.016619	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.024041	4	6	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	0.190788	73	35	1.3.1	synth with cache (only 1: hnf; only 1: intros x; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_prop	40	0.020040	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.iff_impl_subrelation	40	0.097116	22	23	1.1	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0.024064	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.eq_true_rect_r	40	0.138873	62	60	0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros b; only 1: intros H; only 1: intros H0; only 1: destruct H0 in H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_iff	40	0.073508	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.compose_assoc	40	0.063365	31	13	0.5	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.inj_pairT2_refl	40	0.094764	66	12	10	synth with cache (only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_impl_subrelation	40	0.099506	4	6	1	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not	40	0.027532	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	0.096136	6	4	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0.198935	23	11	1.2	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	0.178175	44	32	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_is_false	40	0.462076	330	77	0.11.0	synth with cache (only 1: destr_bool; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.flip_flip	40	0.024460	3	5	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_orb	40	0.044128	4	6	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_andb	40	0.022345	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0.010773	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or	40	0.014867	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_true_iff	40	0.169707	17	20	0.0.1	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive	40	0.021183	6	4	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.022143	3	5	0.0	synth with cache (only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0.009258	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_uncurry_curry	40	0.035270	3	5	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_false_iff	40	0.209580	30	25	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_involutive_reverse	40	0.023671	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and	40	0.091106	11	11	0.0.1	synth with cache (only 1: intros A; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_refl	40	0.035143	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0.053547	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_sym	40	0.014059	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp	40	0.042958	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.no_fixpoint_negb	40	0.016826	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0.022499	1	2	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_left	40	0.180132	42	30	1.0.0.0.0	synth with cache (only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb1	40	0.012908	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_negb2	40	0.014278	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.if_negb	40	0.018549	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_sym	40	0.028952	3	5	0.0	synth with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_simp	40	0.034670	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.584015	196	50	0.9	synth with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.not_true_iff_false	40	0.749649	304	138	0.0.0.4.4	synth with cache (only 1: intros A; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_true_iff	40	0.061630	7	10	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	0.096061	36	9	7	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_right	40	0.676902	107	87	0.0.0.0.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_false_iff	40	0.065270	7	10	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.solution_right	40	0.121449	28	21	2.0.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0.169052	5	4	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	0.229939	24	20	1.1.0	synth with cache (only 1: intros b; only 1: intros H'; only 1: auto  7 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.deletion	40	0.067189	22	14	3.0	synth with cache (only 1: intros y; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_iff	40	0.251032	6	7	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	0.236650	108	19	13	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_refl	40	0.184986	29	19	1.1.1	synth with cache (only 1: intros s2; only 1: intros E; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.953621	139	26	0.0.0.12	synth with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_iff	40	0.251064	22	24	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_true_iff	40	0.142416	107	32	9	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.175705	292	187	1.0.1.0.0.0.0	synth with cache (only 1: intros U; only 1: intros R; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros H'0; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_elim	40	0.222110	19	17	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0.098483	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_intro	40	0.018304	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_false_iff	40	0.010769	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop	40	0.263694	40	32	0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_not_iff	40	0.039921	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_diag	40	0.010182	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0.012383	1	2	0	synth with cache (only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	1.825094	1254	175	19.0	synth with cache (only 1: intros X; only 1: auto  6 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_iff	40	0.492071	97	62	0.1.1.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_r	40	0.026636	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.contrapositive	40	0.037785	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0.028236	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	1.276639	240	61	4.1.3.2	synth with cache (only 1: unfold subrelation in *; only 1: reduce; only 1: subst; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_1	40	0.058715	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_l	40	0.085879	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0.016790	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_r	40	0.080855	3	3	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_true_intro	40	0.433881	90	65	2.2	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_l	40	0.022878	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.surjective_pairing	40	1.026123	599	162	0.0.7.3.0	synth with cache (only 1: intros x''; only 1: intros Hx'; only 1: intros ?; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_l_iff_2	40	0.066535	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.prop_congr	40	0.019921	1	2	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_comm	40	0.012158	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_negb_r	40	0.024467	3	3	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.not_false_is_true	40	0.011781	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.273515	181	44	8.1	synth with cache (only 1: intros R; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_false_abs	40	1.593423	1375	341	4.2.2.4.1.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: intros z; only 1: discriminate; only 1: intros z; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_1	40	0.042731	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_assoc	40	0.031325	4	5	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_false_elim	40	0.337240	95	45	2.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_locked_true	40	0.027710	3	5	0.0	synth with cache (only 1: unlock; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.is_true_true	40	0.093645	153	18	16	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbTE	40	0.018647	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.neg_false	40	5.102553	12843	2394	3.1.1.17.0.0.1.1	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbT	40	0.089956	14	15	1.0.0	synth with cache (only 1: destruct b; only 1: Bool.destr_bool; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbF	40	0.023050	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.or_not_r_iff_2	40	0.055050	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbFE	40	0.016125	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.leb_implb	40	1.592411	718	281	0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: intros _tmp_tactician0; only 1: split; only 1: split; only 1: split; only 1: split; only 1: intuition; only 1: split; only 1: split; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	1.197110	485	189	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	0.760133	210	108	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbNE	40	0.018290	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.imp_not_l	40	0.046131	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	0.943949	441	103	16	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro1	40	0.031877	4	6	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_iff	40	0.207281	22	23	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_or_iff	40	0.022345	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_r	40	0.018104	3	3	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraL	40	0.034296	1	2	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_intro2	40	0.079552	7	10	0.0.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_and_iff	40	0.018248	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	0.036973	6	4	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.023865	3	5	0.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbK	40	0.188845	121	19	1.12	synth with cache (only 1: intros b; only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_diag	40	0.013027	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_eq	40	0.203612	45	35	0.3	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_r	40	0.018468	3	3	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_l	40	0.041101	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_iff	40	0.293737	25	26	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraR	40	0.108721	1	2	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_true_l	40	0.013139	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	0.035204	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_iff	40	0.077117	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraLR	40	0.049917	1	2	0	synth with cache (only 1: by case : b  => //; case : c ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_comm	40	0.017054	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_negb_r	40	0.030342	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.not_imp_rev_iff	40	0.050821	3	5	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_assoc	40	0.021377	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.wlog_neg	40	0.036168	1	2	0	synth with cache (only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_r	40	0.019566	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbLR	40	0.391765	91	32	8	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0.086803	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_orb_distrib_l	40	0.019503	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_false_elim	40	0.226074	28	21	0.0.0.1	synth with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_r	40	0.028236	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	1.086763	318	169	9	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_andb_distrib_l	40	0.023728	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_andb	40	0.015676	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifT	40	0.091713	6	4	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.383975	35	32	0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifF	40	0.021234	1	2	0	synth with cache (only 1: by move ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_same	40	0.016528	1	2	0	synth with cache (only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_heq	40	1.260254	745	189	0.2.6.1.1	synth with cache (only 1: intros H; only 1: intros H'; only 1: subst; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absorption_orb	40	0.029246	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifN	40	0.040158	6	4	2	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_r	40	0.009683	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_false_l	40	0.009879	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_r	40	0.013652	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_true_l	40	0.013461	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0.067803	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_neg	40	0.038990	3	3	1	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.fun_if	40	0.015870	1	2	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_nilpotent	40	0.011775	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negbRL	40	0.615684	98	29	9	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.if_arg	40	0.021162	1	2	0	synth with cache (only 1: by case b).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_comm	40	0.026178	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_assoc_reverse	40	0.020358	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_eq	40	0.016278	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_1	40	0.033752	4	5	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.Seq_trans	40	1.590272	296	217	6.0	synth with cache (only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_l_r_2	40	0.024100	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introTF	40	0.042644	1	2	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0.016638	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0.026113	1	2	0	synth with cache (only 1: by case c; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0.141237	26	29	3	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_1	40	0.021877	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.070759	14	12	2.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifE	40	0.177326	55	11	9	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_move_r_l_2	40	0.030734	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_l	40	0.015851	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.elimTF	40	0.025695	1	2	0	synth with cache (only 1: by move <-; case Hb).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0.014028	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_inj	40	0.872643	735	53	0.33	synth with cache (only 1: intros A; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.xorb_negb_negb	40	0.013204	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.sumbool_of_bool	40	4.323576	15102	740	23.26.7.11	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_xorb_r	40	0.073187	11	14	2	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Setoids.Setoid.gen_st	40	0.082538	42	17	2.4	synth with cache (only 1: intros A; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contra	40	0.967753	200	57	0.0.11	synth with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_O	40	5.172605	9357	1247	0.7.0.0.40	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_negb_classical	40	0.030522	3	5	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.052036	43	16	3.3	synth with cache (only 1: intros C; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_not_negb	40	0.029262	3	5	0.0	synth with cache (only 1: destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Symmetric	40	0.010512	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.trans_eq_bool	40	0.044519	4	6	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_left	40	0.012436	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_right	40	0.029224	4	6	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_iff_eq_true	40	0.229011	22	24	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_O_n	40	0.065320	10	13	0.1	synth with cache (only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.075455	11	11	0.0.1	synth with cache (only 1: red; only 1: compute; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.iffT_Transitive	40	0.011310	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_refl	40	0.022645	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_bool	40	0.180722	64	30	4.1	synth with cache (only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	1.696287	224	206	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_eq	40	0.056410	7	9	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT2	40	0.642399	443	91	0.0.0.5.4.1	synth with cache (only 1: intros H; only 1: intros J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	4.650414	6141	1123	0.14.1.2.0	synth with cache (only 1: unfold Add at 1; only 1: intros ?; only 1: intros x; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_rec	40	0.323105	151	65	0.0.2.2.1	synth with cache (only 1: intros H; only 1: intros P; only 1: destruct H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.Is_true_eq_true	40	0.355995	155	42	9.1	synth with cache (only 1: destr_bool; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.absurd_eq_true	40	0.416714	272	70	8.2	synth with cache (only 1: intros H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.StrictProp.Spr1_inj	40	5.246662	24347	869	0.11.28.56	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_intro	40	0.105545	7	9	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_eq_ind	40	0.065289	14	14	0.0.0.0	synth with cache (only 1: intros until b; only 1: destruct b; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_elim	40	0.196309	25	28	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_bool_prop_elim	40	0.121757	14	14	0.1.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_prop_intro	40	0.263152	14	18	0.0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_intro	40	0.365137	156	61	8.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_elim	40	0.044806	7	9	0.0.0	synth with cache (only 1: destr_bool; only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_intro	40	0.051675	7	8	1.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_classical	40	0.027036	3	5	0.0	synth with cache (only 1: destr_bool; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_if	40	0.023377	3	3	1	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraT	40	1.489045	251	42	5.12	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_prop_involutive	40	0.059017	7	10	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.negb_if	40	0.012482	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.andb_lazy_alt	40	0.015186	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFF	40	1.449497	111	22	0.2.9	synth with cache (only 1: destruct c; only 1: by case : b  => // ->; only 1: by move /contra =>notb_notc /negbT).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_lazy_alt	40	0.010300	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eq_true_iff_eq	40	0.882362	379	174	3.3.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	3.460033	1615	577	4.0.0.1.0.1.1.0.1.1.1.1.6	synth with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros x; only 1: intros y; only 1: intros x''; only 1: intros Hx'; only 1: intros H; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_n_Sm	40	0.740042	811	133	0.0.0.0.2.14.2	synth with cache (only 1: intros until n; only 1: intros H; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.iff_reflect	40	0.249213	74	38	3.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_dec	40	0.226109	91	42	0.4.1.0	synth with cache (only 1: destruct 1; only 1: intuition; only 1: unfold not; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.plus_Sn_m	40	0.133119	32	33	2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0.740803	165	91	11	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	1.415223	242	241	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.orb_prop_elim	40	1.109299	656	276	3.0.2.1.0.3	synth with cache (only 1: intros until a; only 1: destruct a; only 1: simpl; only 1: auto with bool; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_O	40	0.126846	38	29	0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_and	40	0.180542	61	56	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros C; only 1: intros _tmp_tactician0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.eqb_spec	40	0.646167	266	96	1.0.0.0.0.1.7	synth with cache (only 1: destruct b; only 1: destruct b'; only 1: intuition; only 1: intuition; only 1: destruct b'; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_comm	40	2.444563	2061	943	0.0.0.1.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraTF	40	2.253314	199	28	3.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.777588	275	143	0.0.3.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0.130131	66	48	4.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraNF	40	2.529654	219	29	3.15	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFT	40	2.592593	249	32	5.14	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.gen	40	0.027476	3	5	0.0	synth with cache (only 1: unfold all; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	0.148994	91	14	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_K	40	0.067447	7	9	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.015942	1	2	0	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag2	40	0.040972	1	2	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	0.094971	15	6	4	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.868281	106	27	3.5	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.svalP	40	0.030871	6	6	0.1	synth with cache (only 1: destruct u; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP'	40	0.017083	1	2	0	synth with cache (only 1: by case : u ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.contraFN	40	2.995769	292	33	5.16	synth with cache (only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0.022929	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.universal_quantification.inst	40	0.702527	1123	234	14.0	synth with cache (only 1: intros B; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_sym	40	0.253443	54	41	0.0.0.0.0.1	synth with cache (only 1: intros s1; only 1: intros s2; only 1: intros E; only 1: intros a; only 1: elim (E a); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Sig.s2valP	40	0.147498	28	16	1.1.1	synth with cache (only 1: destruct u; only 1: simpl in *; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig	40	0.086705	1	2	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0.091064	4	5	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.062366	39	17	1.4	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_sig2	40	0.026527	1	2	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_left	40	0.110427	15	17	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.030870	7	9	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec	40	0.485728	162	102	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	4.851632	1252	918	0.0.0.3.0.1.0	synth with cache (only 1: intros B; only 1: intros Sym2; only 1: intros R'; only 1: simpl_relation; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.022164	3	5	0.0	synth with cache (only 1: destruct 2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.085168	36	11	0.6	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock	40	5.332418	36225	395
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.024449	3	5	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.559022	1273	412	8.1.6	synth with cache (only 1: red; only 1: intros y; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.unlock_with	40	0.021766	3	3	1	synth with cache (only 1: by case : k ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.137272	19	19	0.0.0.1	synth with cache (only 1: split; only 1: intros H'; only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.111291	40	27	0.3	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0.029781	1	2	0	synth with cache (only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.027802	3	5	0.0	synth with cache (only 1: reduce; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.414264	73	53	1.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct 1; only 1: auto; only 1: auto; only 1: intros _tmp_tactician0; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.flip2	40	0.010286	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.035045	7	9	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0.009251	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.046085	11	7	3	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.036771	7	9	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0.015344	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect	40	0.518948	160	103	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.impl_hprop	40	0.455136	161	108	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality_dep; only 1: intros x; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.false_hprop	40	0.042623	14	13	1.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	1.221831	1942	290	0.6.0.0.13.2	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.495260	286	129	0.2.1.0.1.0.0	synth with cache (only 1: intros A; only 1: intros ?; only 1: intros B; only 1: intros C; only 1: intros h2; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.045187	7	10	0.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0.215153	36	13	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.037572	9	9	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	1.324701	1643	191	0.4.3.3.10.11.0	synth with cache (only 1: induction l; only 1: destruct H; only 1: split; only 1: trivial; only 1: trivial; only 1: intros H2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Normalize.flip_atom	40	0.011493	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_to_and	40	2.137694	1389	833	4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros ?; only 1: intros B; only 1: split; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: split; only 1: trivial; only 1: trivial; only 1: intros _tmp_tactician0; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	4.889489	14535	171
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_inj	40	0.020441	3	3	1	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.true_hprop	40	0.372259	334	85	0.5.3.0.0	synth with cache (only 1: intros p; only 1: intros q; only 1: destruct p; only 1: destruct q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_or	40	0.327037	57	56	0.0.0.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	6.678407	4165	1010	0.1.1.5.0.2.1.0.7	synth with cache (only 1: intros Fr; only 1: split; only 1: red; only 1: intros y; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: intros H0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.UpdateEq.eq_equiv	40	1.510880	982	196	0.0.2.1.0.0.0.28	synth with cache (only 1: constructor; only 1: simpl_relation; only 1: auto with *; only 1: intros x; only 1: intros B; only 1: intros x'; only 1: intros Hxx'; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.055283	7	9	0.0.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_revapp	40	1.768093	13041	162
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_proper	40	0.756755	146	118	4.1	synth with cache (only 1: simpl_crelation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_not	40	0.172048	43	40	1.0.0.0.0	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.514250	176	132	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	4.754105	1505	483	0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: easy; only 1: intros LT; only 1: contradict ltac:(H); only 1: intros EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intros H; only 1: split; only 1: easy; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intros H; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	1.282110	537	299	4.4.0	synth with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	1.167155	791	159	18	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.389690	157	122	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.not_hprop	40	0.470735	206	117	1.0.1.0.0.1	synth with cache (only 1: intros H; only 1: intros p; only 1: intros q; only 1: apply functional_extensionality; only 1: intros; only 1: contradiction).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.325127	48	39	0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl in *; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep.f_equal_dep	40	0.122785	155	41	0.6.2	synth with cache (only 1: intros h2; only 1: destruct h2; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.065025	26	17	1.0.2	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_r	40	0.055289	26	19	1.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_opp_l	40	0.032286	7	10	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.479675	157	122	0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip	40	0.325725	33	28	0.0.0.1	synth with cache (only 1: intros R; only 1: intros R'; only 1: intros; only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	1.966411	5646	571	0.27.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct 1; only 1: destruct _tmp_tactician0 as []; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0.271137	200	56	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	3.552480	1249	643	5.5.0	synth with cache (only 1: transitivity y; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	7.657117	2280	950	6.4.0	synth with cache (only 1: intros C; only 1: intros x; only 1: destruct 1).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0.023682	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal3	40	0.059966	20	18	0.0.0.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal2	40	0.203947	73	50	0.1.3	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canLR	40	1.211355	969	199	4.6.3.3	synth with cache (only 1: intros H1; only 1: intros H0; only 1: elim eq_sym with (1 := H0); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.139767	4	6	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal4	40	0.187522	25	21	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.060788	3	5	0.0	synth with cache (only 1: red; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal5	40	0.197348	42	30	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0.098333	17	14	2.0	synth with cache (only 1: hnf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0.271269	35	32	3.0	synth with cache (only 1: intros; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0.027601	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_r	40	0.025422	7	9	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_refl_l	40	0.035018	16	12	0.0.2	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	5.820761	1223	511	2.0.0.0.1.1.0.1.0.1.1.1.0.1	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_involutive	40	0.024298	7	9	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	5.879095	1145	547	0.0.0.1.0.0.0.0.0.0.1.0.1.1.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: split; only 1: easy; only 1: easy; only 1: intros H; only 1: split; only 1: intros LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_l	40	0.032067	7	9	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	8.507570	2287	1531	0.0.0.6.0.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_inv_r	40	0.028711	7	9	0.0.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	0.100764	45	10	8	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_map	40	0.044099	14	12	1.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.canRL	40	0.368632	173	49	8.4	synth with cache (only 1: destruct 2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction	40	0.062579	14	14	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	0.129923	14	13	2.0	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_ind	40	0.026948	4	6	1	synth with cache (only 1: exact (fun P : A -> Set => well_founded_induction_type P)).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.066346	11	8	3	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.101369	7	10	0.0.0	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	1.538648	596	341	0.0.1.1.1.0.2	synth with cache (only 1: intros ?; only 1: intros y; only 1: intros z; only 1: intros Hxy; only 1: intros H2; only 1: rewrite <- H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst	40	0.062207	14	14	0.1.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_reflexive	40	0.026369	6	4	2	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.map_subst_map	40	0.044205	7	9	0.0.0	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_symmetric	40	0.013700	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_compose	40	0.071400	24	15	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_transitive	40	0.014302	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_swap	40	0.219439	119	46	0.0.5	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.203821	31	26	0.1.0.0	synth with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_reflexive	40	0.017652	1	2	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_symmetric	40	0.012171	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_refl_map_distr	40	0.025510	3	5	0.0	synth with cache (only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_transitive	40	0.016595	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.equivP	40	0.656351	665	70	0.16.9	synth with cache (only 1: intros H0; only 1: intuition; only 1: by case : Pb ; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rec_r	40	0.590822	210	122	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP	40	0.070201	45	10	8	synth with cache (only 1: by case Pb).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	1.295076	2138	207	0.32.3	synth with cache (only 1: intros; only 1: destruct r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.of_voidK	40	0.560067	588	79	17.4	synth with cache (only 1: intros P; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	0.043501	21	7	5	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	0.021715	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip2	40	0.014072	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	0.468875	73	49	1.0.0.1.0	synth with cache (only 1: intros n; only 1: intros H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.flip1	40	0.061421	17	12	3	synth with cache (only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_assoc	40	1.692422	1162	488	0.0.2.1.1.2.0	synth with cache (only 1: intros until e; only 1: intros h2; only 1: destruct h2; only 1: intros h2; only 1: destruct h2; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0.052623	11	7	3	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0.008766	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	1.003385	363	186	1.2.2.0.0.0.0	synth with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0.013248	1	2	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_trans	40	11.807397	18485	1388	0.37.0.7.0	synth with cache (only 1: destruct p; only 1: simpl in *; only 1: destruct q; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	0.090377	51	16	5.1	synth with cache (only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_rect_r	40	0.639108	215	127	0.1.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros P; only 1: intros H; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0.022209	1	2	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.873969	297	152	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold min; only 1: unfold gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0.025134	1	2	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.pointwise_equivalence	40	1.263618	51	24	7	synth with cache (only 1: simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	0.135698	35	20	4.0	synth with cache (only 1: intros H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0.038981	1	2	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_sym_map_distr	40	0.123167	21	14	0.2.0	synth with cache (only 1: intros until e; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	0.134938	28	8	6	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0.021283	1	2	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	3.898466	4118	586	6.17.4.5	synth with cache (only 1: intros m; only 1: apply lt_eq_cases; only 1: right; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0.015970	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.Normalize.flip_atom	40	0.015896	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Some_inj	40	2.102148	2273	269	0.1.27	synth with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0.013393	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	27.442280	64765	5064	0.28.2.2.26	synth with cache (only 1: intros Hsnd; only 1: intros ?; only 1: intros ?; only 1: rewrite -> Hsnd; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.rew_sigT	40	0.247163	14	14	0.1.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_sym_distr	40	0.190994	52	32	0.1.0.1	synth with cache (only 1: intros until e'; only 1: destruct e'; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0.014369	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.331478	51	51	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0.286083	3	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0.047636	9	7	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_rew_distr	40	0.106464	11	10	0.0.1	synth with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.055972	7	6	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.etrans_id	40	0.184430	253	25	0.20	synth with cache (only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0.039331	4	5	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0.013502	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0.018841	3	3	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0.026736	1	2	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	10.751697	64847	1767	2.0.5.2.74.13	synth with cache (only 1: intros x; only 1: exists x; only 1: split; only 1: intros H'7; only 1: intros H'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.esymK	40	1.033157	1172	152	0.15.5	synth with cache (only 1: intros z; only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0.014366	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.rew_const	40	0.058594	13	12	0.1.0	synth with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0.013420	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_congr	40	0.645313	267	132	0.0.0.0.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros y; only 1: intros H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_exist_uncurried	40	0.152761	25	20	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.136506	101	32	1.0.2.5	synth with cache (only 1: intros ?; only 1: intros _tmp_tactician0; only 1: intros H2; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.029687	3	5	0.0	synth with cache (only 1: intros H; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0.018201	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.078007	13	9	3	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0.016611	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0.017284	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40	4.655968	6141	1104	0.0.6.8.1.6.4.2.1.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: dependent rewrite H; only 1: exists eq_refl; only 1: reflexivity; only 1: intros ?; only 1: apply eq_existT_uncurried; only 1: destruct H; only 1: subst; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0.013023	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.057952	14	15	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_proper	40	1.081041	256	146	3.2.0.0	synth with cache (only 1: reduce; only 1: unfold relation_equivalence in *; only 1: simpl_relation; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.021504	3	5	0.0	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	1.681675	254	186	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesP	40	1.697520	3987	312	9.19.15	synth with cache (only 1: intros H; only 1: destruct H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_JMeq	40	0.021832	3	5	0.0	synth with cache (only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map_distr	40	1.919042	1543	318	2.4.4.1.4	synth with cache (only 1: intros; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.287272	40	28	4	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.979141	147	84	0.0.0.0.0.0.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	1.316996	499	172	2.3.1.7	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.022314	1	2	0	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	4.415516	1160	729	0.0.5.0.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0.656505	206	108	6.0.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_or	40	11.608999	7196	2679	0.0.7.3.1	synth with cache (only 1: intros y; only 1: intros x''; only 1: red; only 1: unfold decidable; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	5.243655	5878	837	0.12.0.0.16.0	synth with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.130782	15	18	0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0.032515	4	6	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried	40	0.729180	147	96	0.1.0.0.0.0.0	synth with cache (only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.140943	11	12	2	synth with cache (only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.064015	4	6	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0.070827	4	6	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_0_n	40	0.068420	53	25	0.0.2.2	synth with cache (only 1: intros until n; only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip	40	0.024618	1	2	0	synth with cache (only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	12.872815	38672	2677	3.1.0.32.0.1.5.16.7	synth with cache (only 1: intros p; only 1: red; only 1: split; only 1: simpl; only 1: reflexivity; only 1: intros x; only 1: destruct x as (a1, a2, Heq); only 1: subst; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0.032608	4	6	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.718936	2281	253	0.0.0.0.0.19.1	synth with cache (only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0.031063	4	6	1	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.086779	7	9	0.0.0	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_n_S	40	0.083979	36	28	1.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.047254	10	10	2	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_fst	40	0.957215	670	234	1.1.6.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.239909	11	10	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.683280	397	209	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_case	40	0.359958	388	109	1.0.3.3.2	synth with cache (only 1: intros n; only 1: induction n; only 1: intros ?; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	5.900561	2360	903	0.0.0.0.0.0.0.0.2.2.0.2	synth with cache (only 1: intros B; only 1: intros C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessL	40	1.153813	2148	191	7.4.12.2.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros h2; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ssr_congr_arrow	40	0.094912	48	26	3.1	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLR	40	0.011023	1	2	0	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRL	40	0.009470	1	2	0	synth with cache (only 1: by case : eqPQ ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_existT_curried_congr	40	8.696715	6455	911	2.15.6	synth with cache (only 1: destruct r; only 1: destruct 1; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.045199	7	7	1.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.505267	53	43	0.0.0.0.0.0	synth with cache (only 1: intros x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.Logic_lemmas.absurd	40	8.112160	6864	2314	0.0.2.0.3.1.5	synth with cache (only 1: intros Fr; only 1: intros A; only 1: unfold not; only 1: intros H; only 1: intros H1; only 1: elim H1; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifPn	40	10.697889	2509	116	0.55	synth with cache (only 1: intuition; only 1: by case  def_b: b ; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffLRn	40	0.150800	19	11	4	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.849042	208	138	0.0.1.0.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LE; only 1: apply le_succ_l; only 1: apply lt_le_incl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0.011752	1	2	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	7.797847	2271	1612	14	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.101320	7	9	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.rew_sig	40	0.107838	7	10	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	11.502895	2791	2445	10	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_double_ind	40	1.102370	1492	288	1.1.4.3.2.3.2	synth with cache (only 1: intros until n; only 1: induction n; only 1: auto; only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessR	40	1.166986	2178	185	0.24.5.8	synth with cache (only 1: split; only 1: intros _tmp_tactician0; only 1: intros y; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	4.672853	2075	678	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.1	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n); only 1: rewrite le_lteq; only 1: intuition; only 1: split; only 1: easy; only 1: apply max_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	3.839615	1716	500	2.2.0.8.1	synth with cache (only 1: split; only 1: revert m; only 1: intros y; only 1: solve_max; only 1: apply max_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	4.801770	3524	674	1.0.14.2.0	synth with cache (only 1: intros n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	12.073894	3057	2722	12	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	2.885016	400	268	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_not_not	40	35.894424	67871	11835	4.1.0.0.0.17.1	synth with cache (only 1: intros A; only 1: destruct 1; only 1: intros h1; only 1: assumption; only 1: intros Fr; only 1: destruct Fr; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	3.621851	397	273	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_lt_mono; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_prop	40	40.194936	77329	11199
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_l	40	40.316922	123756	28063
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_iff_compat_r	40	40.188757	64686	23878
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	4.318472	4999	432	10.21.8.1	synth with cache (only 1: intros _tmp_tactician0; only 1: intros H2; only 1: intros ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.n_Sn	40	40.390386	171875	15156
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.rew_pair	40	0.100389	30	17	0.2.1	synth with cache (only 1: intros until H; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40	1.587098	551	255	0.0.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: apply neq_sym; only 1: intros EQ; only 1: pose proof (pred_succ n) as EQ'; only 1: rewrite EQ in EQ'; only 1: rewrite pred_0 in EQ'; only 1: rewrite <- EQ' in EQ; only 1: apply (neq_succ_diag_l 0); only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	4.009014	641	309	0.0.1.2.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT_eta	40	41.022464	475813	5050
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.inhabited_covariant	40	0.032267	7	10	0.0.0	synth with cache (only 1: intros H; only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicW	40	3.180765	4958	400	0.39.3	synth with cache (only 1: intros h2; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	2.581139	900	447	1.4.0.0.1	synth with cache (only 1: intros x; only 1: intros m; only 1: intros LE; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_stepl	40	0.121505	75	26	0.0.6	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	13.251673	6958	1373	0.4.16	synth with cache (only 1: unfold not; only 1: red; only 1: iorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	4.170274	1288	661	0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: apply min_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40	6.349612	3376	987	0.6.0.4.3.1.0.4.2.0.0.1.1.4	synth with cache (only 1: destruct (max_spec m n) as [_tmp_tactician0| _tmp_tactician0]; only 1: intuition; only 1: destruct (max_spec m n) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: rewrite E'; only 1: apply max_l; only 1: order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: rewrite E'; only 1: order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: apply max_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.abstract_context	40	3.582079	18102	625	1.49.27	synth with cache (only 1: intros H0; only 1: apply H0; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.216689	46	21	0.4.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.andb_true_intro	40	19.234452	34411	4530	0.1.2.12.30	synth with cache (only 1: intros H; only 1: destruct 1; only 1: destruct H; only 1: assumption; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	5.771228	2069	658	2.2.0.1.0.1.0.1.0.4.2	synth with cache (only 1: split; only 1: intros EQ; only 1: intuition; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.pointwise_equivalence	40	7.457833	744	258	2.0.1.0.10.0.0.2	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: intros x; only 1: intros y; only 1: intros C; only 1: intros Hxy; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	6.723715	2343	706	0.0.0.5.1.0.0.0.4.1.0	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	1.699118	479	275	1.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite <- lt_succ_r; only 1: rewrite <- lt_succ_r; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.022365	6	6	0.1	synth with cache (only 1: apply min_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and3	40	0.020839	1	2	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_involutive	40	0.161332	71	30	0.0.0.1.4	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and4	40	0.023537	1	2	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	4.364337	1700	805	1.5.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros LE; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and5	40	0.028549	1	2	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.pair_andP	40	0.062899	29	10	6	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.AllAnd.all_and2	40	0.493731	579	110	0.0.2.0.0.2.6.2	synth with cache (only 1: split; only 1: split; only 1: intros z; only 1: destruct (H z); only 1: auto; only 1: intros z; only 1: destruct (H z); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.of_bits_to_bits	40	40.085442	22260	10922
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0.008970	1	2	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0.013171	1	2	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.070882	7	9	0.0.0	synth with cache (only 1: intros H; only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negP	40	0.014094	1	2	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0.009458	1	2	0	synth with cache (only 1: by case b1; constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.349695	76	34	0.0.0.3.0	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	5.384262	2841	1150	1.2.3.1.1.0.0	synth with cache (only 1: intros A; only 1: intros x; only 1: red; only 1: intros H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0.013669	1	2	0	synth with cache (only 1: by case b1; constructor; auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.032244	3	5	0.0	synth with cache (only 1: apply compare_eq_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and3P	40	0.109397	16	11	0.0.2	synth with cache (only 1: destruct b3; only 1: by case b1; case b2; constructor => //; case; only 1: by case b1; case b2; constructor => //; case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.198601	72	38	0.5	synth with cache (only 1: destruct 1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.362867	50	46	0.0.0.0.0.0	synth with cache (only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and4P	40	0.244393	39	20	0.0.4	synth with cache (only 1: destruct b4; only 1: by case b1; case b2; case b3; constructor; try by case; only 1: by case b1; case b2; case b3; constructor; try by case).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	5.875343	2062	821	5.2.0.0.0.0.0.3	synth with cache (only 1: destruct u as [u1 u2]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct v as [v1 v2]; only 1: apply eq_exist_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.and5P	40	0.298544	43	18	0.0.5	synth with cache (only 1: destruct b5; only 1: by case b1; case b2; case b3; case b4; constructor; try by case; only 1: by case b1; case b2; case b3; case b4; constructor; try by case).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40	40.148269	53382	8233
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.norP	40	0.022113	1	2	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0.024016	1	2	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0.015269	1	2	0	synth with cache (only 1: by case b1; case b2; constructor; auto; case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andFb	40	0.010056	1	2	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbb	40	0.006670	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_eq_dep	40	0.339169	266	77	1.0.3.2.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.441566	180	93	1.4.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: destruct 1; only 1: auto using Add_intro2 with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andTb	40	0.130120	16	9	1.2	synth with cache (only 1: intros P; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbA	40	0.010369	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbT	40	0.115177	31	12	2.3	synth with cache (only 1: intros P; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbCA	40	0.015826	1	2	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbAC	40	0.030556	3	3	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0.098217	14	14	0.0.0.0	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbC	40	0.183784	325	28	0.23	synth with cache (only 1: intros P; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.541759	166	118	0.0.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orTb	40	0.008647	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orFb	40	0.009021	1	2	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.231573	131	42	0.0.0.6.0	synth with cache (only 1: intros; only 1: intros x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	8.606381	4451	1302	0.0.0.1.0.0.6.3.5.0.0.19	synth with cache (only 1: split; only 1: intros n; only 1: intros m; only 1: apply (lt_irrefl n); only 1: easy; only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros H1; only 1: intros H2; only 1: generalize (lt_trans n m p); only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40	7.360205	77029	681
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40	40.199771	73782	10446
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbF	40	0.010700	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40	1.821151	14706	172
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbT	40	0.023686	6	4	2	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40	40.106920	33218	9463
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbC	40	0.014497	1	2	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbb	40	0.008188	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	0.081077	17	12	1.2	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbCA	40	0.018563	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbA	40	0.022816	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbF	40	0.335359	357	32	3.21	synth with cache (only 1: intros H; only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbAC	40	0.016190	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.211685	131	44	1.0.0.2.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intros y; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbACA	40	0.215298	153	18	16	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.xorPif	40	16.180353	9257	974	0.0.20.22	synth with cache (only 1: intros; only 1: destruct H; only 1: by case Hb; auto; only 1: by case Hb; auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40	40.112149	36747	7154
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andNb	40	0.010225	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbN	40	0.010978	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbN	40	0.012430	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbACA	40	0.062611	1	2	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_ass	40	6.586681	1730	978	1.0.0.1.3.0.1	synth with cache (only 1: unfold seq; only 1: unfold charac; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orr	40	0.010519	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.forall_hprop	40	40.153745	53854	9476
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orNb	40	0.013877	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andl	40	0.018816	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_andr	40	0.016519	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_orl	40	0.079829	15	6	4	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.416277	131	74	0.0.2.1.1	synth with cache (only 1: intros X; only 1: intros H'0; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.bool_dec	40	40.283683	119464	8608
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idr	40	0.021222	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_tl_plus	40	40.086146	26814	6949
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2l	40	0.026784	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_id2r	40	0.027395	1	2	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	6.955953	13141	1601	24.1.9.6	synth with cache (only 1: intros x''; only 1: destruct 1 as (eq_qp, H); only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idr	40	0.012858	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_idl	40	0.018399	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2l	40	0.029076	1	2	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orb_id2r	40	0.020725	1	2	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	8.304696	12754	1131	1.1.15.12.8.5	synth with cache (only 1: intros Hl; only 1: intros _tmp_tactician2; only 1: intros _tmp_tactician0; only 1: intros x''; only 1: intros Hx''; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_and	40	0.016906	1	2	0	synth with cache (only 1: Bool.destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_or	40	0.013378	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40	40.160981	58564	7882
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andbK	40	0.014693	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andKb	40	0.012975	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orKb	40	0.011356	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_idl	40	0.330919	130	32	1.0.10	synth with cache (only 1: destruct a; only 1: reflexivity; only 1: by case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.378244	78	55	4.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto using (Noone_in_empty U) with sets).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.orbK	40	0.018542	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybF	40	0.013724	3	3	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyFb	40	0.008321	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyTb	40	0.013943	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0.019082	1	2	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybb	40	0.013458	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.negb_imply	40	0.010902	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybE	40	0.029075	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyNb	40	0.010762	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybN	40	0.015353	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybNN	40	0.013247	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idl	40	0.015269	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0.021002	4	5	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_idr	40	0.014849	1	2	0	synth with cache (only 1: by case : a ; case : b  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implybT	40	0.123960	45	10	8	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.implyb_id2l	40	0.023685	1	2	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addFb	40	0.007096	1	2	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbF	40	0.009296	1	2	0	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbC	40	0.009585	1	2	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	17.645155	5320	4666	4.3.2	synth with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbb	40	0.016721	3	3	1	synth with cache (only 1: by case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbA	40	0.010789	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbCA	40	0.011595	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40	40.125028	44739	7758
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbAC	40	0.012537	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbACA	40	0.020036	1	2	0	synth with cache (only 1: by do 4!case).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	0.802337	875	183	0.0.0.0.15	synth with cache (only 1: intros y; only 1: intros y0; only 1: right with y; only 1: auto; only 1: left).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addl	40	0.014057	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40	40.110993	39011	7952
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.andb_addr	40	0.012823	1	2	0	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addKb	40	0.016762	3	3	1	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbK	40	0.011753	1	2	0	synth with cache (only 1: by do 2!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addIb	40	0.022360	3	3	1	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbI	40	0.039769	6	4	2	synth with cache (only 1: by do 3!case).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbN	40	0.016081	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbT	40	0.023358	3	3	1	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addTb	40	0.014446	1	2	0	synth with cache (only 1: by case : b ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addNb	40	0.014907	1	2	0	synth with cache (only 1: by case : a ; case : b ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.iff_stepl	40	3.597171	1508	1054	0.0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros A; only 1: intros y; only 1: intros C; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H1 H2]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [H3 H4]; only 1: split; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind	40	40.181610	66339	9870
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_equivalence	40	40.109491	37304	10064
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0.014741	1	2	0	synth with cache (only 1: by case : pT pp ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0.016278	1	2	0	synth with cache (only 1: by case : msp  => _ /= ->).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	0.036951	10	5	3	synth with cache (only 1: by rewrite -mem_topred).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0.014938	1	2	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0.026547	6	4	2	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	0.013838	1	2	0	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.subset_eq	40	40.097946	31394	8047
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	0.715521	331	112	0.0.0.5.2	synth with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: apply min_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_refl	40	0.225033	282	30	3.18	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40	40.230521	92279	10366
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.qualifE	40	0.019828	3	3	1	synth with cache (only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.well_founded_induction_type	40	40.306143	129703	12022
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40	40.114404	39943	5749
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.716835	245	112	0.0.5.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40	40.131283	46469	5763
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	1.165563	217	142	3.2.0	synth with cache (only 1: intros n; only 1: intros y; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.595872	216	72	0.1.5.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	40.053192	12414	7787
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0.041175	11	7	3	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.410995	98	76	0.0.0.2.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0.015625	1	2	0	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0.098858	27	16	0.4	synth with cache (only 1: intros Hnm; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex2.rew_ex2	40	0.132595	7	10	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.strip_commut	40	40.118083	35618	7054
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40	40.111212	27420	3999
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0.014532	1	2	0	synth with cache (only 1: auto with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.157335	33	23	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_true	40	40.195403	64778	8545
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalProperties.forE	40	0.016641	6	4	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.023163	3	3	1	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	1.410125	326	223	0.0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40	0.063968	14	14	0.0.0.0	synth with cache (only 1: rewrite even_spec; only 1: exists 0; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	22.918551	29016	4878	2.31.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2W	40	0.015178	1	2	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3W	40	0.018107	1	2	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.118287	36	11	0.6	synth with cache (only 1: intros x0; only 1: by [  ]).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in2T	40	0.035896	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_false	40	0.111828	16	19	1.0.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in3T	40	0.018271	1	2	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0.017665	1	2	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.245746	32	27	4	synth with cache (only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0.031454	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.exists_inhabited	40	7.030301	5393	924	6.2.4.5.2	synth with cache (only 1: intros P; only 1: intros y; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (_tmp_tactician2, Huni); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	0.034013	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried	40	40.399717	180152	7003
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1W	40	0.019178	1	2	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0.019478	1	2	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2W	40	0.019626	1	2	0	synth with cache (only 1: by move  =>? ?).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	12.087961	6368	2364	0.0.0.0.0.0.0.0.0.5.0.1	synth with cache (only 1: intros n1; only 1: intros n2; only 1: apply imp_iff_compat_r; only 1: split; only 1: intros H; only 1: apply pred_wd in H; only 1: rewrite pred_succ in H; only 1: rewrite pred_succ in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.052723	7	9	0.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1T	40	0.035627	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_or	40	0.193168	50	47	0.1.0.0.0	synth with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_flip_2	40	9.562046	2032	1127	1.6.1.0	synth with cache (only 1: intros B; only 1: intros R2; only 1: unfold respectful; only 1: simpl_relation).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on2T	40	0.021798	1	2	0	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.in1T	40	0.368089	202	30	17	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0.134904	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.715644	904	454	6.0.2.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	0.075478	16	11	0.2	synth with cache (only 1: intros x; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1	40	0.137702	3	3	1	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0.023149	1	2	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	2.820928	1137	453	0.2.6.1	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon2	40	0.085264	10	5	3	synth with cache (only 1: by move  =>? ?; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	2.170065	838	449	0.1.0.0.3.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.013214	1	2	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.398661	87	51	0.3.0.0	synth with cache (only 1: intros Hnm; only 1: intros Hpq; only 1: apply min_glb_iff; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0.018052	1	2	0	synth with cache (only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	2.562489	1210	400	0.0.1.0.0.5.0.0	synth with cache (only 1: intros m; only 1: intros Hb; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition order; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.131702	31	14	0.5	synth with cache (only 1: apply max_l; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	0.580202	560	117	11.0.0.0	synth with cache (only 1: intros eq_dep_eq; only 1: red; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.515337	346	208	0.1.3.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.rew_sigT2	40	0.114498	7	10	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.056938	1138	460	1.0.1.0.0.0.1.1.0.0.1	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	24.126715	46498	4567	4.54	synth with cache (only 1: inversion 1; only 1: apply (eq_dep_intro U P)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.594477	90	82	0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Str_nth_plus	40	40.092367	28441	6373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.812203	218	85	2.0.0.3	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.idP	40	5.133150	6684	729	2.2.26	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0.038356	1	2	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.507663	180	63	0.9	synth with cache (only 1: apply min_l; only 1: solve_max).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.215710	41	27	0.0.0.0.0.0	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.sym_EqSt	40
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0.050088	3	3	1	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	0.063131	6	4	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0.031926	1	2	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0.039128	1	2	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0.039994	1	2	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.544880	86	75	0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.372091	53	44	0.0.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40	0.859399	495	158	3.6.0.1	synth with cache (only 1: intros a; only 1: apply sqrt_spec; only 1: rewrite <- lt_succ_r; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0.047872	1	2	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	6.459890	3828	786	0.0.0.0.0.4.2.2.0.3	synth with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2]; only 1: destruct v as [v1 v2]; only 1: simpl in *; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	2.360463	392	268	0.1.0.0.0.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros; only 1: rewrite pred_succ; only 1: rewrite even_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	3.939427	1216	431	0.0.0.0.0.1.6.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: symmetry; only 1: apply div_unique_exact; only 1: easy; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	3.373831	213	130	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite le_succ_l; only 1: easy; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.798060	611	103	2.14.0	synth with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_empty_right	40	18.448613	8579	2842	0.0.0.2.2.1.0.1.2	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold seq; only 1: intros a; only 1: simpl; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.628008	87	79	0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	4.455544	1279	546	8.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.604850	92	90	0.0.0.0.1	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40	4.205116	19306	197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.804904	352	95	0.0.0.7.4	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	3.988618	938	451	0.0.0.0.0.0.0.1.3	synth with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40	12.483019	12153	2831	0.0.0.0.0.0.7.0.0.0.0.0.0.0.0.0.0.0.7.0	synth with cache (only 1: split; only 1: induction 1; only 1: left; only 1: auto; only 1: elim IHclos_trans2; only 1: intros y0; only 1: right with y; only 1: auto; only 1: auto; only 1: intros; only 1: right with y0; only 1: auto; only 1: auto; only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_right	40	5.534778	1234	737	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.addbP	40	4.884909	3804	274	0.0.0.0.0.0.56	synth with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: constructor; only 1: easy; only 1: constructor; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	1.518673	861	57	0.36	synth with cache (only 1: intros ?; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	2.515558	583	375	0.2.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: split; only 1: intros H; only 1: apply le_succ_l; only 1: order; only 1: intros H1; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.603864	583	266	7.1.0	synth with cache (only 1: intros Ha; only 1: apply sqrt_square; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	6.499086	3183	870	2.2.1.8.9	synth with cache (only 1: rewrite le_lteq; only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: left; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in21	40	0.024792	1	2	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in12	40	0.695280	200	27	0.17	synth with cache (only 1: intros _tmp_tactician0; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried	40	2.653477	483	271	0.0.0.0.0.1.0.0.0	synth with cache (only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r; only 1: destruct q; only 1: destruct p; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0.098338	55	11	9	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	3.119399	590	367	0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUr	40	5.725027	8186	731	12.19.14.15	synth with cache (only 1: intros Hx''; only 1: Bool.destr_bool; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Program.Subset.match_eq_rewrite	40	5.344354	3637	967	0.0.0.4.0.4.1.5	synth with cache (only 1: intros x; only 1: intros P; only 1: intros y; only 1: intros f; only 1: intros H; only 1: destruct H; only 1: destruct e; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40	23.036011	8113	3158	0.0.0.0.1.0.0.0.0.0.0.1.1.0.2.0.2.0.0.1.0.0.0.0.0.1.0.0.0.1.0.0.0.0.0	synth with cache (only 1: case compare_spec; only 1: intros EQ; only 1: case compare_spec; only 1: easy; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intros LT; only 1: case compare_spec; only 1: intros EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intros EQ; only 1: contradict ltac:(LT); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intros H; only 1: case compare_spec; only 1: intros EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intros LT; only 1: split; only 1: intros LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0.023790	1	2	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.rew_sig2	40	0.177548	7	10	0.0.0	synth with cache (only 1: destruct H; only 1: destruct u; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	2.759233	824	273	0.1.0.0.0.0.0.0.0.0.0.0.0.0.4	synth with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: easy; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply lt_1_2; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	2.849607	652	455	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros Ha; only 1: destruct (lt_trichotomy a 0) as [LT| _tmp_tactician0]; only 1: rewrite pow_neg_r; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [EQ| GT]; only 1: order; only 1: apply pow_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	4.276596	631	240	0.1.0.4.0.1	synth with cache (only 1: intros Ha; only 1: nzsimpl'; only 1: easy; only 1: easy; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	4.052431	4336	691	2.4.0.2.2.9	synth with cache (only 1: intros; only 1: red; only 1: intros UIP; only 1: intros; only 1: rewrite H; only 1: apply UIP).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in2	40	3.091510	2938	414	9.6.11	synth with cache (only 1: intros; only 1: intros ?; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.602785	43	34	2.0.0.0	synth with cache (only 1: intros; only 1: nzsimpl'; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	0.287783	48	39	1.2	synth with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep	40	0.072028	22	13	1.2	synth with cache (only 1: destruct 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40	40.180310	65672	7448
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.070180	10	12	0.1	synth with cache (only 1: destruct 1; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.029170	3	5	0.0	synth with cache (only 1: intros * []; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	40.112829	33077	10363
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.288332	56	48	0.0.0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	15.539248	5178	2339	4.2.4.0.1	synth with cache (only 1: intros x; only 1: intros B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma1	40	40.130060	51298	2349
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_left	40	30.666830	38962	7782	1.4.0.0.1.3.0.11.1	synth with cache (only 1: intros z; only 1: intros H2; only 1: intros B; only 1: intros _tmp_tactician0; only 1: intros C; only 1: destruct H2; only 1: auto; only 1: induction n; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Tactics.decide_right	40	0.178921	49	35	1.1.0.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40	4.907029	4346	404	0.1.3.14.1.16	synth with cache (only 1: nzsimpl'; only 1: rewrite odd_spec; only 1: unfold Odd; only 1: exists 0; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	5.915222	1408	808	0.1.0.0.3.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: apply Odd_succ; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.subrelUl	40	10.309723	15269	1401	11.7.0.0.44	synth with cache (only 1: intros B; only 1: intros ?; only 1: red; only 1: Bool.destr_bool; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	2.314818	654	416	1.1.0.0.0.0.1	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	0.105260	15	18	0.0.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: intros x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	0.096141	16	19	1.0.0	synth with cache (only 1: intros B; only 1: intros C; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	7.369602	3725	830	1.1.2.1.3.0.0.0.5.5	synth with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: apply lt_le_incl; only 1: apply lt_1_2; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40	40.098162	7474	3269
coq-tactician-stdlib.8.11.dev	Coq.Relations.Relations.inverse_image_of_eq	40	11.081512	7120	2684	0.2.1.2.1.0.0.0.2.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: intros x; only 1: intros y; only 1: intros z; only 1: intros H1; only 1: destruct 1; only 1: assumption; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_left	40	13.828064	4295	2042	0.1.2.3.1.0.1.0	synth with cache (only 1: unfold seq; only 1: intros until y; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	1.745567	1304	368	0.0.0.7.0.0.1	synth with cache (only 1: intros ?; only 1: red; only 1: intros H'; only 1: elim H'; only 1: elim H'; only 1: intros C; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	12.057646	3909	2108	0.4.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as (q, Hq); only 1: exists q; only 1: rewrite Hq; only 1: rewrite mul_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	16.584815	2890	1186	0.0.8.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: nzsimpl'; only 1: rewrite add_simpl_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	10.143518	2898	1094	2.2.2.5.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros ?; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3]; only 1: destruct v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	19.809720	6224	2098	0.0.0.0.6.0.0.1.0.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: intros ?; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.sub_in3	40	10.343875	6197	905	12.8.11	synth with cache (only 1: intros; only 1: intros _tmp_tactician0; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.impliesPn	40	24.585363	43928	3667	0.19.5.41	synth with cache (only 1: intros _tmp_tactician0; only 1: intros HPx1; only 1: destruct _tmp_tactician0 as [x]; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	0.020785	1	2	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40	17.903591	117834	725
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	16.318535	7672	3037	12.0.2.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros A; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	14.085035	3096	1384	0.0.9.0.0.1.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite Even_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40	40.113774	45346	4648
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.Equiv_from_preorder	40	40.161007	58896	10324
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.338751	76	49	1.2.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite odd_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	17.565617	10263	2497	0.0.0.6.4.6	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (lt_eq_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_F_inv	40	40.099586	35833	3530
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	16.447984	14304	3796	0.1.4.0.1.0.0.14	synth with cache (only 1: intros C; only 1: intros y; only 1: intros H2; only 1: induction H2; only 1: intros H2; only 1: induction H2; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.086565	29	17	1.1.1	synth with cache (only 1: red; only 1: intros y; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.F_unfold	40	0.124667	6	6	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.can_comp	40	23.961212	45525	3411	2.25.38	synth with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0.044509	1	2	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_l	40	40.141929	41079	14160
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.AC_IF	40	40.131846	48419	8204
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40	40.145437	52936	8121
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.cong_congr	40	40.116642	41801	6746
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	40.164800	62060	8986
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40	40.150754	56811	8166
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_inj	40	21.248723	27617	6218	0.0.1.0.1.0.0.0.1.0.0.0.1.0.0.0.1.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until c; only 1: destruct c; only 1: intros until c'; only 1: destruct c'; only 1: intros H; only 1: reflexivity; only 1: intros H; only 1: discriminate; only 1: intros H; only 1: discriminate; only 1: intros until c'; only 1: destruct c'; only 1: intros H; only 1: discriminate; only 1: intros H; only 1: reflexivity; only 1: intros H; only 1: discriminate; only 1: intros until c'; only 1: destruct c'; only 1: intros H; only 1: discriminate; only 1: intros H; only 1: discriminate; only 1: intros H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality	40	40.582100	253636	6006
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropFacts.injection_is_involution_in_Prop	40	40.365961	165060	8675
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.172867	90	33	0.7	synth with cache (only 1: split; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40	18.676313	5000	2993	1.0.0.0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: destruct compare; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: split; only 1: easy; only 1: destruct 1; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40	22.682213	4235	1971	0.6.0.3.1	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_extensionality	40	40.701635	332435	4129
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_cancel_r	40	40.104019	23371	12116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	17.268584	7807	2489	1.0.1.0.0.0.0.0.1.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: apply lt_eq_cases; only 1: left; only 1: easy; only 1: destruct _tmp_tactician0 as [| ]; only 1: left; only 1: order; only 1: right; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.and_assoc	40	40.108358	24720	7518
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	37.685254	6364	2644	0.0.0.0.0.1.0.0.0.0.1.0.0.0.2	synth with cache (only 1: intros z; only 1: intros y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: intros x0; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_l	40	40.108934	32210	13850
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	40.108484	28845	6073
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40	40.260123	109137	7104
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40	27.119155	6078	2206	1.0.2.0.1.2.1.0.1.0.0	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	31.266673	8373	6282	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros R; only 1: intros Sym; only 1: intros f; only 1: intros Hf; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: red in Hf; only 1: red in Hf; only 1: red in Hf; only 1: split; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_right	40	40.132963	43923	4827
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40	40.154538	49291	2794
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40	40.103133	24758	4177
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.incl_left	40	40.072524	17277	3510
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40	40.103936	21888	5181
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40	40.098344	26425	3976
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40	40.130043	48248	3802
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.lock	40	40.460380	200983	6281
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_cancel_r	40	40.088926	17174	9658
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40	40.141599	44736	8214
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Composition.eq_comp	40	40.208813	83250	6082
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40	40.116333	26832	5172
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_R	40	40.139766	44413	10526
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.locked_withE	40	40.204185	70983	2679
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	40.058241	13866	3343
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40	40.071431	13085	393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.186123	17	18	0.0.1	synth with cache (only 1: intros m; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40	40.026483	6510	893
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40	40.051980	6900	479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.094091	7	10	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.lemma2	40	40.045752	12786	1188
coq-tactician-stdlib.8.11.dev	Coq.Program.Combinators.prod_curry_uncurry	40	40.199433	81625	7539
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.all_tag	40	40.620147	278084	3956
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	40.145013	13462	352
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40	40.074700	17446	1848
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40	40.060349	17018	4896
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_trans	40	40.076703	20405	5807
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.Generic.Paradox.paradox	40	40.050205	10320	846
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40	40.072908	20314	7567
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	1.372176	325	171	0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.injective_projections	40	40.096275	25284	7086
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	40.069136	14137	3823
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	6.017279	2983	1544	2.0.2.0.0.2.0	synth with cache (only 1: intros A; only 1: intros P; only 1: intros x''; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x y]; only 1: intros Hx''; only 1: auto  10 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.uint_dec	40	40.479211	206967	6186
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.070125	3	5	0.0	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.063289	10	11	0.1	synth with cache (only 1: unfold same_relation; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	40.092623	23395	4110
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	40.176712	25155	2538
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_refl	40	40.218337	89620	2746
coq-tactician-stdlib.8.11.dev	Coq.Logic.Decidable.dec_functional_relation	40	40.089909	29213	5966
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.BoolIf.ifP	40	40.170673	9914	587
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40	40.068483	13906	4915
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.introNTF	40	40.280020	5989	592
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectCore.equivPif	40	40.114186	13237	1009
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40	40.157341	10198	3434
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	40.138748	21671	1804
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	40.194047	74878	2479
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	40.271541	7880	677
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40	40.237614	9382	608
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	40.234336	33743	2722
coq-tactician-stdlib.8.11.dev	Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40	40.134897	39192	7980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40	30.280137	4472	2229	0.0.1.0.0.0.0.0.4.0.1	synth with cache (only 1: intros p; only 1: intros m; only 1: intros n; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite add_assoc; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	40.152141	56357	9981
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introT	40	40.182472	20392	706
coq-tactician-stdlib.8.11.dev	Coq.Program.Equality.simplification_existT1	40	40.307179	131940	5283
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introF	40	40.278250	10145	797
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.connectives.sumbool_and	40	40.261988	115858	9533
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0.042728	1	2	0	synth with cache (only 1: eauto using eq_trans, eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Bool.Bool.reflect_iff	40	40.102004	31620	6071
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	4.310365	6835	503	6.9.0.0.8.20	synth with cache (only 1: simpl; only 1: unfold f_equal; only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introN	40	40.249838	14459	1130
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	0.341822	126	21	3.10	synth with cache (only 1: red; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0.065555	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.eta_expansion	40	0.062383	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.or_assoc	40	40.153665	47190	10935
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.mult_n_Sm	40	40.204515	89601	11010
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	40.062104	8406	7704
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_pred	40	40.148408	48184	12788
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introTn	40	40.174871	15779	987
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introNf	40	40.365679	7831	722
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40	40.145219	46360	8397
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	40.094543	28743	9887
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	40.100968	32153	9019
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40	40.114944	4435	1044
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.Compare2EqBool.eqb_eq	40	40.131255	44780	5619
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Well_founded.Fix_eq	40	40.108905	51925	2368
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.and_hprop	40	40.147801	50967	10442
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_rev	40	40.108880	44652	2747
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	40.061966	18729	7595
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introFn	40	40.351013	8904	544
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimT	40	40.187160	34007	1072
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40	40.150210	51098	9468
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimF	40	40.143561	10704	805
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.pcan_inj	40	40.212211	87364	6584
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40	40.117251	29704	6237
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40	40.162145	57861	7382
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Injections.can_pcan	40	40.322867	143221	6686
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssreflect.nary_congruence	40	40.102353	31658	5926
coq-tactician-stdlib.8.11.dev	Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40	40.060055	8621	5588
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40	40.112371	37529	4093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40	40.192515	71518	7211
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40	40.123955	40306	3800
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_comm	40	40.075839	19921	6119
coq-tactician-stdlib.8.11.dev	Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40	40.042673	9018	6035
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimN	40	40.113688	14083	953
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40	40.153662	57686	6562
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.EqSt_reflex	40	40.237644	95414	9851
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40	40.182683	72938	6230
coq-tactician-stdlib.8.11.dev	Coq.Logic.JMeq.JMeq_ind_r	40	40.140184	50254	9948
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	1.860586	405	178	0.0.0.0.0.1.4	synth with cache (only 1: rewrite <- compare_lt_iff; only 1: rewrite <- not_true_iff_false; only 1: rewrite leb_le; only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40	40.039567	9230	3659
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimNf	40	40.260612	35464	1617
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40	40.105948	27958	4652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40	40.109603	23308	6430
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40	40.048367	11245	6139
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_n_O	40	0.060626	7	9	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40	40.096472	32486	6417
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.flip_arrow	40	40.080618	10873	3829
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40	40.039254	4284	679
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimTn	40	40.237961	51148	3038
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.introP	40	40.177407	32053	1970
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40	40.116815	37424	3478
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.elimFn	40	40.245037	47562	1970
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40	40.914132	437636	3777
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.iffP	40	40.185535	57002	2885
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	30.719973	12327	3008	4.1.0.2.0.1.0.6	synth with cache (only 1: intros AS; only 1: induct ltac:(m); only 1: nzsimpl; only 1: apply eq_le_incl; only 1: easy; only 1: intros m; only 1: nzsimpl; only 1: apply le_le_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp_0	40	40.063306	17215	5736
coq-tactician-stdlib.8.11.dev	Coq.Bool.Sumbool.bool_of_sumbool	40	40.241888	95942	9757
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	40.063134	11170	10191
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_le	40	40.126240	44173	6318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	26.540254	4384	3347	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec; only 1: rewrite <- odd_spec; only 1: destruct (odd n); only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_flip_2	40	40.084262	9903	4779
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hprop	40	40.147899	53836	9725
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40	40.331777	12226	1015
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff	40	40.054046	11389	8194
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	1.467620	1297	245	8.6.2	synth with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.f_equal_compose	40	40.124018	41236	11801
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40	40.046379	6522	3642
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.169028	22	22	0.0.0.0.0	synth with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.571430	85	52	0.0.0.0.3	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: rewrite ltb_lt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Str_nth_map	40	0.198229	39	29	0.1.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_trans_map	40	40.133648	53209	11477
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.le_S_n	40	40.212349	75096	14027
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.254805	44	20	0.0.3.0	synth with cache (only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40	40.032794	5861	1610
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT.eq_sigT_rect	40	40.161804	61046	5355
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40	40.083134	26064	2688
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	40.094469	33948	8877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	8.036455	1289	692	0.0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros n; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40	40.168430	61174	7880
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40	40.117930	47391	3771
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40	40.087243	25644	6343
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_transitive	40	40.069055	16672	10374
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40	40.055825	12857	7880
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40	40.123593	40925	8875
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40	40.084815	21729	4103
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_l	40	40.199286	76257	10847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	35.448566	14146	4849	0.5.3.9.2	synth with cache (only 1: intros n; only 1: intros n'; only 1: rewrite lt_succ_r; only 1: rewrite le_succ_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0.011013	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.072641	10	12	0.1	synth with cache (only 1: rewrite <- even_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40	40.054018	12914	5231
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.eq_id_comm_r	40	40.164945	58329	9617
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0.010677	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sigT_snd	40	40.046634	10835	4633
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_revapp	40	40.053247	12507	5058
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	40.081809	19847	2736
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_r	40	40.108949	29783	8913
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	1.077550	136	128	2.1.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros z; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40	40.035344	8231	2591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	40.065858	16399	5014
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	40.121416	32843	10912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40	40.100390	27344	8221
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40	40.245279	96909	4128
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40	40.079777	22556	5083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40	40.126207	40128	9284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40	40.118803	37012	6704
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.GenericMinMax.max_l	40	40.297825	130615	6021
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_succ_r	40	0.858505	570	137	0.11.1.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	40.070029	9438	2952
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40	40.151492	27002	3189
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40	22.714151	7633	2198	0.1.0.7.4.0.0	synth with cache (only 1: intros a; only 1: intros Hb; only 1: intros p; only 1: rewrite pow_add_r; only 1: easy; only 1: apply le_0_l; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.rwP2	40	40.121059	37858	2016
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40	40.214146	81284	6964
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sameP	40	40.215411	30915	1484
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.appP	40	40.232993	88617	3927
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decP	40	40.205477	64762	1327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	40.077927	21739	4733
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.decPcases	40	40.249524	79713	1442
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.359051	81	63	0.0.0.0.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40	40.151330	6712	1947
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.sumboolP	40	40.310177	48877	1118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40	40.106418	32153	6241
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.373940	67	56	0.0.0.0.0.1	synth with cache (only 1: intros y; only 1: intros X; only 1: intros z; only 1: intros H'1; only 1: elim H'1; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40	40.047683	13261	3851
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40	40.083082	21547	4619
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.Reflect.altP	40	40.351865	60678	767
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	40.094306	29511	4475
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40	40.066124	16633	6205
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	9.717037	1552	831	0.2.0.0.0.0.1.1	synth with cache (only 1: intros y; only 1: intros x; only 1: intros H'; only 1: induction H'; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: apply (Singleton_inv U); only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	40.043157	9805	7342
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40	40.234092	90459	6479
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40	40.050024	12865	3506
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	40.042506	8913	7106
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_refl	40	0.128725	12	11	1.1	synth with cache (only 1: intuition; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	0.121801	4	6	1	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40	40.098332	30896	5946
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40	40.119077	19188	7157
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40	40.052164	8714	2764
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40	40.044040	11068	2789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40	40.068304	19586	5736
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40	40.087004	24590	7884
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	40.067109	17301	6770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40	40.103520	31939	5301
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40	40.071278	18090	5881
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	0.495188	124	88	1.0.0.1.0	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	3.552408	402	279	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.210580	20	18	0.0.0.1	synth with cache (only 1: rewrite ltb_ge; only 1: apply lt_eq_cases; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	40.066076	16450	4538
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_refl	40	0.498114	381	35	1.0.23	synth with cache (only 1: induction n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40	6.764948	1785	791	0.1.0.2.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite <- mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: rewrite (mul_comm m); only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.940178	95	87	0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: red; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.flip_arrow	40	40.044834	4720	1117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40	40.047359	10941	4057
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_le_S	40	0.155275	22	15	3.0	synth with cache (only 1: intros IH; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_Sm_le	40	0.024394	1	2	0	synth with cache (only 1: apply le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0.628511	64	58	2.0.0.0	synth with cache (only 1: intros ?; only 1: intros A; only 1: intros a; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	40.032538	4016	2023
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_n_Sm	40	0.146813	19	12	3	synth with cache (only 1: apply Nat.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.unique_existence	40	40.238598	90636	11209
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40	40.180116	66204	6411
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	9.221600	2857	1452	2.2.3.2.1	synth with cache (only 1: intros x; only 1: intros B; only 1: intros H'0; only 1: unfold Add; only 1: auto  9 with sets).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	40.249275	103901	7551
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40	40.090786	26461	4625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40	40.052088	13150	5314
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0.021624	1	2	0	synth with cache (only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	2.115263	573	347	0.4.0.0.1.1	synth with cache (only 1: intros x; only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40	40.046742	10868	3910
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_unique_domain_coincide	40	40.104956	30992	9748
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.038509	3	5	0.0	synth with cache (only 1: intros; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	9.092527	9294	1312	1.17.7	synth with cache (only 1: intros m; only 1: destruct m; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40	5.627223	36315	270
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40	40.063938	16715	3988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_not_lt	40	0.525438	31	22	0.3	synth with cache (only 1: intros LT; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40	40.052199	13192	5513
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.nat_rect_plus	40	2.217264	1215	465	0.1.1.1.2.1.0.1	synth with cache (only 1: intros ?; only 1: induction n; only 1: reflexivity; only 1: intros until m; only 1: intros; only 1: simpl; only 1: rewrite <- IHn; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.pair_equal_spec	40	40.153970	57849	8659
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.eq_sig_snd	40	40.054211	13302	4549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40	40.151508	9580	2832
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig.eq_sig_rect	40	40.136988	51732	5107
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_not_le	40	0.077644	6	6	0.1	synth with cache (only 1: intros LT; only 1: Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.230317	51	35	4.0	synth with cache (only 1: apply eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40	1.387876	397	120	0.0.0.0.3.4.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite ltb_lt; only 1: rewrite <- compare_lt_iff; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.neq_0_lt	40	0.054658	3	5	0.0	synth with cache (only 1: intros H; only 1: Nat.auto').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40	40.122278	38839	7681
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40	40.064529	16048	5359
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	40.074577	15018	8004
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.coherent_symmetric	40	40.058710	14535	8171
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_0_neq	40	0.151853	15	18	0.0.0.0	synth with cache (only 1: intros H; only 1: intros H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	40.082648	22735	6580
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40	40.071244	6763	3610
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_n_S	40	0.024439	1	2	0	synth with cache (only 1: apply le_n_S).
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.eq_trans_cancel	40	40.088654	28519	7935
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40	40.321865	138996	6677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40	40.200741	10757	4004
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.forall_exists_coincide_unique_domain	40	40.248691	104877	8971
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_S_n	40	0.052593	4	5	1	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	7.436605	4179	1057	0.0.1.0.0.1.0.1.1.0.0.0.0.2.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	40.060077	15987	6805
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40	40.046862	10174	6525
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.zerop	40	0.614264	154	69	5.0.0.0.1	synth with cache (only 1: destruct n; only 1: left; only 1: easy; only 1: right; only 1: apply Nat.lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40	40.223317	87192	5604
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_antisym	40	40.114582	36971	8924
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	35.326143	24935	2810	0.0.3.35.8	synth with cache (only 1: intros L; only 1: unfold divide; only 1: exists 0; only 1: rewrite mul_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40	4.122036	42594	420
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_sym	40	40.296495	108159	7584
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40	17.876414	10054	3242	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.15.0.0.2.0.0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: intros FunExt; only 1: intros A; only 1: intros P; only 1: intros Q; only 1: intros Equiv; only 1: apply FunExt; only 1: intros x; only 1: apply FunExt; only 1: easy; only 1: intros Ext; only 1: split; only 1: intros A; only 1: intros B; only 1: intros Equiv; only 1: change A with ((fun _ => A) I); only 1: rewrite Ext with (P := (fun _ : True => A)) (Q := (fun _ => B)); only 1: easy; only 1: easy; only 1: intros A; only 1: intros P; only 1: intros Q; only 1: intros Eq; only 1: apply Ext; only 1: intros x; only 1: rewrite (Eq x); only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unless_contra	40	40.176421	61850	3409
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40	40.122234	32318	7519
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Measure_well_founded.measure_wf	40	40.250996	111831	7879
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.absurd_set	40	0.178098	52	44	0.0.0.0.0.0	synth with cache (only 1: unfold not; only 1: intros A; only 1: intros C; only 1: intros h1; only 1: intros h2; only 1: destruct (h2 h1)).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_bind	40	40.169403	54959	6028
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.bind_unless	40	40.313163	122978	7328
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classicP	40	40.273962	114254	6486
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.unlessP	40	40.340810	126663	8153
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_0	40	0.014643	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dec	40	0.042649	3	3	1	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40	40.064200	16575	7063
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_proper_type	40	40.060339	5369	1839
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40	40.127605	31771	6190
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.xI_succ_xO	40	0.129124	70	18	9	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_spec	40	0.019183	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_l	40	40.153021	46250	10677
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40	40.153359	22239	4153
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40	40.102494	30702	6347
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff	40	40.051043	10989	7458
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.double_succ	40	0.045223	3	5	0.0	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	3.500450	968	378	0.1.0.0.7.0.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite negb_true_iff; only 1: rewrite ltb_lt; only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite compare_nge_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_existT2_uncurried	40	40.615121	282737	3000
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_n_0_eq	40	0.236394	20	17	0.0.1	synth with cache (only 1: inversion 1; only 1: subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40	40.052462	13724	6364
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40	40.131307	6267	3537
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40	40.169491	59948	7739
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	40.060081	9637	7238
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_not_1	40	0.237843	13	15	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.022638	214	111	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_EM	40	40.217347	78322	4228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40	40.159650	36390	6478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40	40.043365	11629	4145
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nil_inv	40	2.023827	516	202	1.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	40.067206	18376	4681
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40	40.048020	12005	4799
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_pick	40	40.214206	22949	1730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	40.112812	39197	3052
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40	40.047011	11223	5548
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40	40.064071	16073	7138
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40	40.055307	14093	5808
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	2.754618	575	322	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40	40.136944	15759	5150
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40	40.871962	429356	4975
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.077918	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40	40.061016	14142	5868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.099482	7	10	0.0.0	synth with cache (only 1: intros n; only 1: nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_proper	40	40.211219	1866	708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40	40.053717	12153	5632
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	5.157788	1184	571	0.0.0.0.0.0.0.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: nzsimpl; only 1: rewrite succ_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.094201	40	18	0.0.0.4	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	8.677791	3229	893	0.17.2	synth with cache (only 1: rewrite <- not_true_iff_false; only 1: apply imp_iff_compat_r; only 1: apply ltb_lt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40	40.042878	8864	5284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	40.048736	8011	4640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	40.048007	10445	5848
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.078062	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40	40.045948	12159	4216
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40	40.075426	22701	4175
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40	40.178588	61786	5665
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.117780	25	16	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40	40.062017	16022	6590
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40	40.182764	62038	8481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40	40.087582	14313	5984
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.max_r	40	40.095548	24510	11351
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	7.049135	2657	747	1.0.1.3.0.0.0.0.0.0.11	synth with cache (only 1: case ltb_spec0; only 1: rewrite leb_nle; only 1: rewrite <- compare_lt_iff; only 1: rewrite <- compare_nle_iff; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_ngt_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.comparison_eq_stable	40	40.224690	89511	12439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	35.702239	15726	3702	1.5.0.6.4.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct (lt_trichotomy n m) as [| _tmp_tactician0]; only 1: left; only 1: easy; only 1: right; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.PartialOrder_StrictOrder	40	40.137251	5388	562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40	40.127909	19019	4268
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred	40	3.338910	1052	413	0.1.5.2.1	synth with cache (only 1: revert m; only 1: intros Hn; only 1: induction 1; only 1: Morphisms.f_equiv; only 1: Morphisms.f_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40	40.109424	10743	2496
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_n_S	40	1.190132	117	49	0.2.5	synth with cache (only 1: revert m; only 1: intros b; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40	40.077216	20637	6461
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_bij	40	0.501760	609	59	4.4.21	synth with cache (only 1: exists f; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	40.137349	11510	2592
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40	40.273142	117415	3363
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_n	40	0.051130	1	2	0	synth with cache (only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.classic_imply	40	40.180150	59234	4069
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_succ	40	0.049499	7	10	0.0.0	synth with cache (only 1: induction n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_succ	40	2.451538	732	292	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: easy; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pred_0	40	0.009127	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.058367	831	198	0.0.0.0.0.6.0.3	synth with cache (only 1: apply log2_unique; only 1: easy; only 1: nzsimpl; only 1: split; only 1: easy; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	7.532410	3594	818	0.1.2.13.1	synth with cache (only 1: split; only 1: parity_binop; only 1: intros H; only 1: rewrite <- odd_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.one_succ	40	0.010767	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.two_succ	40	0.010382	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40	40.204984	83769	4245
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_cases	40	40.071116	20512	8015
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40	40.137694	50289	7719
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_0_l	40	0.048714	9	12	0.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.eq_ex_uncurried	40	40.760899	358914	4046
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40	40.182901	66979	6321
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40	0.745513	146	79	0.0.0.0.0.0.0.1	synth with cache (only 1: nzinduct n; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: rewrite opp_succ; only 1: rewrite sub_succ_r; only 1: rewrite pred_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40	40.067421	11936	4841
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	5.493371	1896	678	0.0.1.0.1.4.1.1.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.210034	25	27	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40	40.324508	4971	1849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40	6.734932	1233	634	0.0.3.3.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite (mul_comm m); only 1: rewrite (mul_comm m); only 1: rewrite <- mul_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40	40.092244	25208	5626
coq-tactician-stdlib.8.11.dev	Coq.Init.Logic.ex.rew_ex	40	40.428330	191192	4787
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	2.304954	1227	453	0.3.0.0.6	synth with cache (only 1: intros until n; only 1: intros Hl; only 1: intros Compat; only 1: apply min_case_strong; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.169691	216	184	0.0.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_pos_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.186871	27	21	0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_total	40	40.103382	30319	3763
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.trans_EqSt	40	40.094787	25342	8410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40	40.082206	22945	6832
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40	40.060581	11313	3847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40	40.052748	12490	5807
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.andP	40	40.282937	14464	2221
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	6.677731	3848	880	0.0.2.0.0.0.4.11.0	synth with cache (only 1: apply eq_true_iff_eq; only 1: rewrite leb_le; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	3.257923	953	472	1.1.0.1.0.0.0.0.0.0.1.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: split; only 1: easy; only 1: nzsimpl; only 1: apply lt_0_2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40	40.096003	14896	6040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40	40.040063	9111	3321
coq-tactician-stdlib.8.11.dev	Coq.Init.Byte.to_bits_of_bits	40	40.083246	30306	3657
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40	40.067873	16122	5653
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	40.116189	23222	2513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40	40.059855	9870	4750
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40	40.102963	9856	2581
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.orP	40	40.099349	4498	941
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or3P	40	40.118110	7792	1344
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.ReflectConnectives.or4P	40	40.072092	6443	752
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40	40.093210	12824	5084
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.nil_cons	40	0.033423	3	5	0.0	synth with cache (only 1: intros m; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40	40.078701	11534	3707
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	2.121135	396	308	0.0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_lt_mono_neg_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40	40.069831	17634	4415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	40.047699	8455	2482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40	40.111963	34798	3642
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40	40.113186	39005	7933
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40	40.085863	15058	5751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40	40.058855	14256	6405
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PreOrder	40	40.033071	8315	3223
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40	40.145708	62607	3638
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40	40.185817	13354	7051
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40	40.048040	9776	3968
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40	40.125286	43118	7575
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	40.064296	18148	5129
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40	40.050639	10967	8185
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40	40.064806	17069	4800
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	40.167211	12148	3013
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	5.079377	6717	458	12.3.6.10.19	synth with cache (only 1: inversion 1; only 1: induction p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.eq_can	40	40.221240	79603	6103
coq-tactician-stdlib.8.11.dev	Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	40.071963	19603	7298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40	40.049298	12245	3283
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40	40.103345	13817	2591
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40	40.070832	24276	3781
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40	40.049620	11081	6845
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hset_hOneType	40	40.113871	38783	9034
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.eqst_ntheq	40	40.061543	13765	7980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	40.051371	11451	7402
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40	40.656046	311109	2510
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	10.131042	6515	1713	2.0.0.0.0.0.0.2.0.1.2.0.0.0	synth with cache (only 1: intros A; only 1: intros eq_dec; only 1: intros x; only 1: intros H; only 1: intros P; only 1: intros p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_nil	40	0.027155	10	5	3	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40	40.127568	42311	5824
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	40.071809	17199	4973
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	40.279049	115198	6390
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40	40.184791	64061	3782
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40	40.064104	17011	5470
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_cons	40	0.060248	16	10	1.2	synth with cache (only 1: intros Hfst; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40	40.103035	16020	5792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40	40.161305	23515	4989
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40	40.088576	18664	7258
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40	40.074848	21599	6514
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_cons	40	0.104712	33	21	1.2	synth with cache (only 1: intros x; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40	40.113643	15041	4903
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_eq	40	0.161332	42	26	1.0.2	synth with cache (only 1: intros B; only 1: intros until l; only 1: firstorder  discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PreOrder	40	40.078646	17096	4687
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	40.028470	6029	2238
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.le_lt_SS	40	3.834521	1888	306	1.0.12.8.3	synth with cache (only 1: destruct 1; only 1: auto; only 1: constructor; only 1: constructor; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_discr	40	6.430600	9340	648	1.4.4.1.9.30	synth with cache (only 1: destruct p; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_r	40	15.449592	7051	3647	0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_nil	40	0.054827	11	7	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	1.394896	740	242	2.1.6.0	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.app_predE	40	40.149863	45420	6090
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40	40.191144	60425	6211
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_inv	40	0.022058	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	2.659090	889	297	0.2.7.0	synth with cache (only 1: intros n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40	40.367899	162147	10297
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.S_pred_pos	40	3.965524	2886	522	0.0.0.16.0	synth with cache (only 1: intros H; only 1: induction n; only 1: exfalso; only 1: false_hyp H Nat.lt_irrefl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms.StrictOrder_PartialOrder	40	40.108093	22511	4481
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.in_collective	40	40.282831	106237	5122
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyPred.keyed_predE	40	40.194335	68512	4606
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40	40.219921	77080	2529
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40	40.058076	8786	4629
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40	40.093725	39491	1898
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sigT2.eq_sigT2_rect	40	40.070819	22444	3707
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond	40	40.202441	63655	3165
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40	40.411907	176346	2256
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40	40.076530	18366	4318
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_tag_cond_dep	40	40.295529	106441	4432
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40	40.178251	61274	4018
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40	40.158343	55071	9179
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_r	40	0.125026	34	22	0.0.0.0.2	synth with cache (only 1: induction p; only 1: auto; only 1: simpl; only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	4.317650	842	696	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros A; only 1: intros A_wd; only 1: intros A0; only 1: intros AS; only 1: intros n; only 1: apply right_induction with 0; only 1: easy; only 1: easy; only 1: intros; only 1: auto; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40	40.234331	86717	4075
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.982420	304	128	0.0.2.1.1.1.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s2; only 1: intros s; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40	40.296939	120571	5895
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond	40	40.295575	104520	3702
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.all_sig_cond_dep	40	40.337161	128693	4333
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40	40.116619	40655	7769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40	40.088449	24379	3447
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40	40.197327	57026	3715
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_1_l	40	0.089073	13	14	0.0.0.0	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40	40.073333	10248	5593
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40	40.055947	13775	5541
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40	40.153093	46759	2975
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence	40	40.044938	10858	7059
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.length_zero_iff_nil	40	1.420872	248	85	9.0.0.1.1	synth with cache (only 1: induction l as [| a tail]; only 1: split; only 1: firstorder  discriminate; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40	40.082107	26154	6443
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40	40.289497	101654	5095
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.rev_trans	40	40.158650	51738	4922
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40	40.085469	27319	6207
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.Acc_union	40	40.102286	34637	7377
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.trans	40	40.084245	20133	8328
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_l	40	0.027933	10	5	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40	40.127115	45873	3025
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.722923	94	76	2.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: apply add_pred_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40	40.067835	19706	4757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.232712	49	38	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: rewrite odd_succ; only 1: rewrite <- negb_odd; only 1: apply negb_involutive).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40	40.070083	17709	6240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.344267	82	53	0.0.0.0.0.1	synth with cache (only 1: intros EQ; only 1: rewrite eq_iff_eq_true; only 1: rewrite even_spec; only 1: rewrite even_spec; only 1: rewrite Even_succ; only 1: apply Odd_succ).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_eq_gt_dec	40	2.726829	421	200	0.0.0.1.1.1.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40	40.140138	22887	4721
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40	40.207112	20021	5220
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_rev	40	40.045247	10926	3213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40	40.110543	38959	7040
coq-tactician-stdlib.8.11.dev	Coq.Bool.IfProp.IfProp_sum	40	40.139322	46684	9240
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40	40.090900	29207	3236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40	40.042060	8925	4336
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40	40.087748	9707	3444
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40	40.079466	25645	1906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40	40.086194	25740	5564
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	40.106037	38134	2723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40	40.068686	17599	3906
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40	40.089687	32229	3752
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.canRL_in	40	40.128791	48115	2684
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	3.320080	1894	619	0.1.2.6.1	synth with cache (only 1: intros p; only 1: intros _tmp_tactician0; only 1: rewrite mul_comm; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40	40.068163	17459	5318
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40	40.069489	14968	5000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40	40.445615	6067	1920
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40	40.056512	14062	4748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40	40.054871	13761	3707
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	40.057481	11195	5370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40	40.178577	9621	1557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40	40.089360	12976	5064
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Zip.Str_nth_zipWith	40	1.631726	397	226	0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until n; only 1: induction n; only 1: reflexivity; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [x xs]; only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40	40.187914	13931	6646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40	40.293560	52477	1964
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40	40.171982	11509	4871
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40	40.180418	24085	4652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40	40.069060	20558	6002
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_N_succ	40	3.115031	894	307	0.0.0.0.3.5.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	40.061245	15359	7479
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40	40.114771	13369	3452
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40	40.079839	21384	5445
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_some_nil	40	3.622537	1118	393	0.1.3.0.0.5	synth with cache (only 1: intros p; only 1: intros r; only 1: inversion 1; only 1: destruct p; only 1: firstorder  discriminate; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.ntheq_eqst	40	40.110778	37687	8405
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40	40.104168	32002	7709
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.not_in_cons	40	3.005626	897	254	9.4	synth with cache (only 1: simpl in *; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.070602	4	6	1	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_end	40	0.575343	54	35	0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40	40.100342	22415	4195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40	40.055512	14075	4308
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.LocalGlobal.inW_bij	40	40.175614	41780	1499
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	1.174484	462	243	0.2.0.1.0.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40	40.065289	15071	5748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40	40.084969	22401	6044
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	21.776265	5892	3676	0.1.0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros b; only 1: intros C; only 1: intros x; only 1: intros H'0; only 1: red; only 1: intros x2; only 1: intros H'; only 1: induction H'; only 1: auto using (Add_intro2 U) with sets; only 1: right; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.128164	29	26	1.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: rewrite P.le_lteq; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40	40.082871	18061	7063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40	40.056636	13567	6770
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40	40.316419	55602	4863
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_comm_cons	40	0.029218	4	5	1	synth with cache (only 1: auto using app_assoc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40	40.075673	17741	5512
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40	40.086659	22825	7480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	6.328614	3962	822	4.8.4	synth with cache (only 1: intros H1; only 1: rewrite nlt_ge; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40	40.082300	10024	4817
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40	40.089590	25583	4978
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.sig2.eq_sig2_rect	40	40.072844	23941	3979
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.130010	24	17	0.2.0	synth with cache (only 1: intros n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40	40.309874	12903	4042
coq-tactician-stdlib.8.11.dev	Coq.Logic.EqdepFacts.UIP_shift_on	40	40.157500	61487	7738
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	3.129442	800	135	10.0.5.3	synth with cache (only 1: induction l as [| y l]; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_rotate	40	40.043285	10547	5416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40	40.203724	12369	4890
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_base	40	0.081528	10	10	2	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40	40.065394	12474	6661
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40	40.526593	23032	3083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40	40.146549	13911	5088
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40	40.169409	16540	4419
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc_reverse	40	1.110365	246	164	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l; only 1: intros m; only 1: intros n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40	40.073882	18089	6415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	3.869199	1225	469	0.0.0.0.5.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_lt_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40	40.102928	20468	5212
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40	40.064135	12628	4201
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40	40.120953	40405	8139
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.seq_congr	40	40.053613	13182	4979
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40	40.064789	17218	5756
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.368385	124	62	3.3.0	synth with cache (only 1: destr_bool; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40	40.066307	19057	6279
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	40.194280	18810	6447
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.equivalence_relP_in	40	40.134020	47092	1743
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	40.223800	22440	3959
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	40.192140	68138	3034
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_nil	40	1.958872	900	272	2.0.0.0.0.6.1	synth with cache (only 1: intros until l; only 1: intros a'; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: auto; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	6.150425	1742	752	0.0.0.2.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: intros H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40	40.208204	79909	2978
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.HdRel_inv	40	0.509001	36	35	0.0.1.0	synth with cache (only 1: intros P; only 1: intros; only 1: inversion H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40	40.094004	29244	5847
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40	40.168344	58024	2873
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_base	40	0.025533	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.265570	55	50	0.0.0.0.0.0	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40	40.061793	12602	4910
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_inv	40	0.299542	15	15	2.0	synth with cache (only 1: inversion 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40	40.196717	61551	1845
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rec_succ	40	0.339815	32	27	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.peano_rect_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40	40.084919	9347	3959
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice	40	40.673898	312732	4203
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	17.103985	5635	1911	2.4.3.1.3	synth with cache (only 1: intros c; only 1: intros m; only 1: intros; only 1: rewrite pow_mul_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40	40.201003	72522	1964
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_true	40	1.276300	169	78	2.0.3.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: constructor; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.247511	24	21	0.0.0.0.0	synth with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40	40.158495	57994	2443
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_0	40	0.037815	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40	40.302154	123783	4500
coq-tactician-stdlib.8.11.dev	Coq.Init.Peano.min_l	40	22.929467	10769	5802	0.0.0.0.1.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40	40.064833	15004	5486
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40	40.614382	15962	3539
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.op_rotate	40	27.827735	6968	3673	0.8.5.1.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: apply op_comm; only 1: apply op_ass).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.998308	451	111	0.0.0.0.0.0.0.9	synth with cache (only 1: nzsimpl'; only 1: rewrite sqrt_up_eqn; only 1: rewrite pred_succ; only 1: f_equiv; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: apply sqrt_square; only 1: easy; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.bet_eq	40	20.132229	12626	3270	7.6.1.4	synth with cache (only 1: intros y; only 1: intros x'; only 1: destruct 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	3.309344	1392	539	2.0.0.0.0.0.0.0.2.0	synth with cache (only 1: unfold sgn; only 1: intros n; only 1: destruct (compare_spec 0 n); only 1: intros H2; only 1: order; only 1: intros Hn; only 1: rewrite <- le_succ_l in Hn; only 1: rewrite <- one_succ in Hn; only 1: order; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_length	40	3.486225	1585	453	0.1.0.2.0.3.3.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros _tmp_tactician0; only 1: split; only 1: simpl; only 1: intros H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40	7.430394	2802	829	0.0.0.0.4.8	synth with cache (only 1: intros p; only 1: rewrite Odd_succ; only 1: rewrite <- even_spec; only 1: rewrite even_succ; only 1: rewrite odd_spec; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40	40.074269	20720	6739
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_1	40	0.044242	7	6	2	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40	40.050418	11703	4336
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_impl_map	40	1.807648	192	100	2.0.1.0.0.0	synth with cache (only 1: intros g; only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40	40.127090	34480	3602
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_assoc	40	6.382844	2910	911	0.0.3.7.3.1.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: auto; only 1: intros; only 1: simpl; only 1: apply f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40	15.697373	6392	2000	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (min_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40	40.124890	9892	4952
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	1.816537	302	170	0.0.1.5	synth with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.one_succ	40	0.051024	3	3	1	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.120991	136	17	15	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	4.594710	2766	961	0.4.1.2.1.0.0.1	synth with cache (only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: apply le_le_succ_r; only 1: apply sqrt_nonneg; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40	40.528910	9217	3437
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.two_succ	40	0.072788	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.608695	174	62	3.0.3.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros H; only 1: inversion_clear H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40	40.212878	83655	7637
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40	41.711531	5675	1864
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_0	40	0.040025	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	10.010212	3303	1788	0.0.1.0.0.2.2.0.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_spec	40	0.152454	9	12	0.1	synth with cache (only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_refl	40	1.034157	273	96	3.1.3.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred	40	10.865152	11859	748	0.3.0.47	synth with cache (only 1: destruct m; only 1: intros H; only 1: easy; only 1: apply Nat.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40	40.089606	25004	6728
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_spec	40	0.234027	56	16	0.0.7	synth with cache (only 1: destruct n as [| _tmp_tactician0]; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40	40.130401	44981	2543
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	11.528217	7579	1721	0.0.0.2.1.2.0.0.7.0	synth with cache (only 1: intros n; only 1: intros y; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: apply gcd_greatest; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.map_simpl	40	0.570834	140	73	0.0.0.1.0.1	synth with cache (only 1: destr_bool; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_S_cons	40	0.271369	53	36	2.1.1	synth with cache (only 1: intros n; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.union_perm_left	40	40.050810	12156	5452
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	8.874616	1726	1004	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: easy; only 1: simpl; only 1: order'; only 1: split; only 1: simpl; only 1: order'; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40	40.075135	15866	6153
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40	40.103062	32779	6616
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	8.170303	2261	925	0.0.0.0.6.2	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite (add_le_mono_r _ _ n); only 1: rewrite add_0_l; only 1: rewrite sub_simpl_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	0.063061	11	7	3	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	18.129271	10463	3947	2.0.1.0.5.0.5.0	synth with cache (only 1: intros Compat; only 1: intros x; only 1: intros Hl; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: subst; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0.040186	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	40.068540	9088	3367
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0.059504	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	3.782599	530	365	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros X; only 1: intros x; only 1: intros H'; only 1: unfold Subtract; only 1: red; only 1: intros x0; only 1: intros H'0; only 1: elim H'0; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred	40	16.235306	4712	2457	0.0.0.0.2.0.3.3.0.0.0.5	synth with cache (only 1: induction p; only 1: intros H1; only 1: simpl; only 1: f_equal; only 1: intros H1; only 1: destruct p; only 1: easy; only 1: apply succ_pred_double; only 1: simpl; only 1: f_equal; only 1: intros Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_pos_pred	40	1.373267	344	161	0.0.0.0.0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40	40.062587	16808	3903
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.623403	169	127	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.lt_pred_n_n	40	2.456537	551	217	2.1.1.0.3	synth with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros m; only 1: intros Ha; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40	40.162177	10176	4333
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_succ	40	0.063558	7	9	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.323994	73	43	0.0.0.0.0.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.Choice2	40	40.686981	328625	4223
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.090652	14	14	0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: unfold meq; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	1.112902	730	130	2.0.9.9	synth with cache (only 1: intros H; only 1: destruct H; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	28.914310	20744	2148	1.0.12.2.16.11.13	synth with cache (only 1: induction (Rwf x); only 1: rewrite F_unfold; only 1: apply (well_founded_induction_type Rwf); only 1: intros; only 1: rewrite F_unfold; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	0.136323	15	19	0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40	40.098153	32305	1568
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.330860	112	57	6.0	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0.011004	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	2.638979	1180	618	0.1.1.0.1.0.0.0.0	synth with cache (only 1: intros p; only 1: intros Hp; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: rewrite mul_0_l; only 1: easy; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0.012391	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.030533	7	7	1.0	synth with cache (only 1: unfold eqk; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pred_sub	40	0.671757	382	81	0.0.0.11.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_0_discr	40	0.075101	7	9	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_0_l	40	0.009428	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.bi_induction	40	40.491330	13256	3284
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40	40.390768	16143	4102
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.568683	92	53	5.2	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0.023375	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	4.998868	3596	1024	2.2.0.3.1.1.1	synth with cache (only 1: intros X; only 1: intros x; only 1: intros H'; only 1: elim H'; only 1: auto with sets; only 1: intros A; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_le	40	8.241447	3433	921	6.0.6.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.662025	159	133	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0.019369	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0.057398	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	0.254515	64	37	0.0.2.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros y'; only 1: intros Hxy; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0.018902	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40	22.020941	8801	2954	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (max_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40	40.118674	24935	1905
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40	40.162429	68600	3766
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0.075502	21	9	0.4	synth with cache (only 1: intros x'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40	40.243954	11473	5282
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0.031279	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.127960	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.850431	317	181	0.1.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40	40.044564	9582	4924
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	40.238633	100704	4319
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_assoc_reverse	40	28.987754	5677	1519	1.0.0.5.0.0.0.0.14	synth with cache (only 1: nzinduct p; only 1: Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: Nat.nzsimpl; only 1: split; only 1: intros _tmp_tactician0; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_refl	40	0.346475	3	3	1	synth with cache (only 1: apply _).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0.017186	6	4	2	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0.011239	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0.025822	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40	40.050819	12632	5558
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_sym	40	0.344970	1	2	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_inj	40	40.227436	92400	7552
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0.057186	6	6	0.1	synth with cache (only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0.026090	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0.023252	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.952931	254	213	1.1.0.1.0	synth with cache (only 1: intros ?; only 1: intros x'; only 1: intros E1; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.setoid_trans	40	0.339394	1	2	0	synth with cache (only 1: typeclasses eauto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.502790	577	57	14.12	synth with cache (only 1: intuition; only 1: apply H).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	1.307482	53	25	0.1.5	synth with cache (only 1: compute; only 1: intros Hf; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0.751295	165	69	2.5.1	synth with cache (only 1: simpl_relation; only 1: compute in H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.177568	28	19	0.1.2	synth with cache (only 1: intros x; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0.030151	3	3	1	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0.034493	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0.025184	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.064510	11	8	1.1	synth with cache (only 1: intros x; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0.031155	6	4	2	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.425222	250	49	0.7.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H3 H4]; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40	40.073560	22167	1650
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_Sn_m	40	31.715187	15562	4052	0.0.1.2.0.0.0.0.0.1.1.0.3.3	synth with cache (only 1: revert m; only 1: induction n; only 1: intros m; only 1: simpl; only 1: inversion 1; only 1: easy; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: intros; only 1: apply IHn; only 1: apply Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.L1	40	40.140167	46156	9333
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.pred_of_minus	40	0.093593	3	5	0.0	synth with cache (only 1: Nat.nzsimpl'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.perm_left	40	40.045101	10471	6229
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	10.647048	3975	1182	0.2.0.0.1.2.1.2.1.0.0	synth with cache (only 1: intros Dec; only 1: split; only 1: induction 1; only 1: constructor; only 1: trivial; only 1: apply (Exists_cons_tl (A:=A)); only 1: auto; only 1: induction 1; only 1: constructor; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40	40.153903	55759	7776
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompOpp_iff	40	40.134764	41689	12087
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_reflexive	40	0.126982	45	10	8	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.114226	15	16	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	1.771544	227	123	0.1.0.2.3	synth with cache (only 1: induction l; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40	40.074860	16077	3865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	5.316122	2271	966	0.0.0.0.3.0.1.0.2.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: apply divide_refl; only 1: exists n; only 1: nzsimpl'; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40	40.273575	115080	1844
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.579674	91	67	0.0.3	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40	40.060316	9430	2815
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40	6.537260	1714	598	1.0.2.4.1.1.0	synth with cache (only 1: intros m; only 1: rewrite <- (mul_0_l m)  at 1; only 1: symmetry; only 1: nzsimpl; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	13.774801	8089	2102	0.1.0.0.0.1.13	synth with cache (only 1: intros H1; only 1: intros Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_antisym	40	0.352814	31	20	2.0.1	synth with cache (only 1: intros H'3; only 1: intros y; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40	40.082777	30130	4818
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	1.508289	367	80	1.3.7.0.0.4	synth with cache (only 1: split; only 1: easy; only 1: auto; only 1: intros Eq; only 1: intros P; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_trans	40	0.150018	18	19	2.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sub_succ_r	40	22.279658	14291	3974	0.0.0.0.1.1.1.3.0.0.0.6.8	synth with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: destruct m; only 1: simpl; only 1: induction n; only 1: easy; only 1: simpl; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	2.101590	1806	287	1.1.0.1.0.0.1.1.0.10	synth with cache (only 1: induction 1; only 1: compute in H; only 1: induction l; only 1: left; only 1: easy; only 1: left; only 1: inversion H; only 1: inversion H; only 1: auto with arith; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.114434	13	14	0.0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_trans	40	6.846780	1642	727	0.0.1.8.1	synth with cache (only 1: intros until l; only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40	40.086126	21768	3958
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_iff	40	1.850506	241	111	0.3.1.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id a); only 1: rewrite <- (id a'); only 1: f_equal; only 1: easy; only 1: intros Ha; only 1: rewrite Ha; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40	40.072435	16676	4257
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.K_dec_type	40	40.136360	51999	7560
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40	40.053623	12772	5609
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist1	40	40.044117	7328	3184
coq-tactician-stdlib.8.11.dev	Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40	40.065016	19100	4401
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	2.889799	182	103	3.3.1	synth with cache (only 1: intros x; only 1: compute; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40	40.082590	23201	9311
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_nonzero	40	25.919790	11969	3309	0.0.0.0.0.0.0.0.0.0.1.12.2.5	synth with cache (only 1: revert d'; only 1: intros H; only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40	40.113303	27710	4457
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40	40.196338	72100	6645
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40	2.395602	16290	181
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_sym	40	40.285695	118207	5134
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40	40.176324	11062	4809
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40	1.754706	382	152	2.0.0.4.1	synth with cache (only 1: intros m; only 1: rewrite <- lt_0_sub; only 1: rewrite sub_opp_r; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_Order	40	1.530483	328	124	1.0.0.0.0.0.0.4.0.0.3	synth with cache (only 1: split; only 1: red; only 1: intros ?; only 1: apply PeanoNat.Nat.le_refl; only 1: red; only 1: intros; only 1: apply PeanoNat.Nat.le_trans with y; only 1: auto; only 1: auto; only 1: red; only 1: PeanoNat.Nat.order).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40	40.052404	12373	7296
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Bijections.bij_can_eq	40	40.232941	85009	5231
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.uniset_twist2	40	40.052121	12759	5195
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	25.421685	4581	2700	0.0.6.1.1	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40	40.048631	11813	6349
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.triv_nat	40	0.076224	3	5	0.0	synth with cache (only 1: intros; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40	40.083569	23234	5377
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	28.892302	26075	6178	0.2.2.0.0.0.0.0.0.0.0.0.0.0.0.12	synth with cache (only 1: apply min_case_strong; only 1: intros x; only 1: intros y; only 1: intros H; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: revert m; only 1: intros; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40	40.066361	16230	7538
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompareSpec2Type	40	40.166035	54154	10093
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	2.101946	829	259	0.0.1.3.2.3	synth with cache (only 1: induction 1; only 1: compute in H; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_nonnil	40	1.181753	254	110	0.8.0	synth with cache (only 1: unfold unorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; intros H [=]; trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.294283	49	29	0.0.2.1	synth with cache (only 1: intros x; only 1: intros; only 1: rewrite <- H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40	33.840957	9264	4529	0.1.1.3.0.0.2.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: intros q; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: rewrite mul_assoc; only 1: rewrite <- mul_assoc; only 1: rewrite (mul_shuffle0 n); only 1: rewrite mul_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.eq_neq	40	40.053459	4582	1594
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40	1.882448	616	188	0.0.0.2.5.1	synth with cache (only 1: intros m; only 1: symmetry; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite <- le_0_sub; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	15.110132	9993	1975	0.0.0.0.0.1.0.0.0.1.0.0.0.1.1.5.5	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| ]; only 1: rewrite div_small; only 1: easy; only 1: split; only 1: simpl; only 1: apply lt_le_incl; only 1: order'; only 1: simpl; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: simpl; only 1: apply le_refl; only 1: simpl; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4.689741	3349	109	79	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	16.719639	4194	2254	0.0.0.0.0.0.2.3.0	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40	40.073666	18010	3692
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	0.132671	95	22	1.0.9	synth with cache (only 1: intros IN; only 1: intros n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	3.889218	1281	300	4.1.1.8	synth with cache (only 1: intros H2; only 1: firstorder; only 1: rewrite <- H2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40	40.146794	22949	1277
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40	31.932369	53022	806	0.3.0.259	synth with cache (only 1: apply eq_iff_eq_true; only 1: rewrite eqb_eq; only 1: rewrite eqb_eq; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40	40.339544	89185	2447
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	40.127827	9081	4528
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40	40.274609	6966	794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40	1.088676	295	95	0.1.1.4.1	synth with cache (only 1: intros m; only 1: rewrite <- le_0_sub; only 1: rewrite sub_0_l; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.805848	2080	67	0.62	synth with cache (only 1: compute; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40	40.067200	17028	9192
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	1.402921	354	164	3.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.704579	174	56	0.1.0.0.0.6	synth with cache (only 1: rewrite succ_lt_mono; only 1: rewrite one_succ; only 1: rewrite opp_succ; only 1: rewrite opp_0; only 1: rewrite succ_pred; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40	40.089911	26607	8432
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hprop	40	40.187167	74093	9596
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	40.047032	11592	5056
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40	40.131793	43440	8167
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_comm	40	11.666628	4655	1470	7.4.0.0.1.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros until y; only 1: simpl; only 1: destruct x; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40	40.229215	82924	7164
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40	40.230283	89349	5868
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist1	40	40.046734	11467	4622
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	15.983091	5955	1836	2.0.1.1.3.1.1.0.0.4	synth with cache (only 1: intros Pdec; only 1: split; only 1: induction 1; only 1: easy; only 1: constructor; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40	40.316913	10488	2962
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	8.896221	12109	976	0.1.3.1.0.0.28.17	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: firstorder; only 1: compute in H; only 1: intros x; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_nil_r	40	25.515098	31747	3550	0.24.0.0.6.0.6.11	synth with cache (only 1: destr_bool; only 1: induction l as [| a0 l IHl]; only 1: reflexivity; only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: Morphisms.f_equiv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40	40.132030	47799	7900
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40	40.277849	119773	8238
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pred_double_succ	40	33.238866	15800	4165	0.0.5.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.4.1	synth with cache (only 1: destruct p; only 1: induction p; only 1: simpl; only 1: destruct p; only 1: f_equal; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: easy; only 1: tauto; only 1: easy; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40	40.065698	8573	4794
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	2.158665	947	220	3.0.1.0.7	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: easy; only 1: simpl in *; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40	40.129903	31642	5198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.787982	565	233	1.0.1.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40	40.146211	32520	1445
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40	40.117694	9486	4920
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_wd	40	40.492586	6993	3214
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40	40.077531	19332	3985
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.O_or_S	40	40.202147	86381	4804
coq-tactician-stdlib.8.11.dev	Coq.Logic.HLevels.hprop_hset	40	40.103165	33792	8765
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	40.197094	10344	2640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40	40.278938	7239	4024
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Choice_lemmas.bool_choice	40	40.670017	306570	4152
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	40.066926	16239	8083
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	8.704021	3129	1082	1.6.2.2.1.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intros ?; only 1: inversion 1; only 1: intros m; only 1: intros a; only 1: firstorder  (subst; auto); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40	40.130756	33908	1481
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_nztail_rev	40	40.062621	15073	2823
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.751743	93	81	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40	40.135527	27938	1480
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40	40.291383	13669	4956
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.ForAll_map	40	40.154495	59658	7670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40	40.130417	10249	5015
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_restr	40	13.271249	4541	2320	6.1.1.0.1.0	synth with cache (only 1: intros a; only 1: induction 1 as [| * _tmp_tactician0]; only 1: intros H1; only 1: intros _tmp_tactician0; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.ind_0_1_SS	40	40.204605	23500	7004
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40	40.120548	43320	2520
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	40.059332	14417	5875
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	35.368215	16665	5129	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros Lef; only 1: intros x; only 1: intros y; only 1: destruct (min_spec x y) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f x <= f y); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H, E); only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [_tmp_tactician0| _tmp_tactician0]; only 1: destruct _tmp_tactician0 as (H', E'); only 1: assert (f y <= f x); only 1: apply Lef; only 1: Private_Tac.order; only 1: Private_Tac.order; only 1: destruct _tmp_tactician0 as (H', E'); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40	40.045319	12236	2331
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40	40.243695	19113	4927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40	40.465201	18053	3758
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.895491	91	74	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	40.065243	16453	9273
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_cons	40	9.027204	2306	757	3.0.4.2.1.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros a'; only 1: inversion 1; only 1: intros Heq; only 1: intros l; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.196940	26	22	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40	40.070196	19693	7867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.193909	26	22	0.2.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40	40.045564	10361	5487
coq-tactician-stdlib.8.11.dev	Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40	40.291749	126803	5791
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40	40.203670	20794	4098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	36.577628	7769	2898	3.2.0.0.0.0.2.0.2.1	synth with cache (only 1: intros x; only 1: intros Ha; only 1: intros H; only 1: intros n'; only 1: intros Sym; only 1: intros Hf; only 1: induction n; only 1: intuition; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.revapp_nil_inv	40	40.062754	16594	4482
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40	40.057344	20320	3864
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	40.043438	9605	3935
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40	40.433180	17803	2126
coq-tactician-stdlib.8.11.dev	Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40	40.293698	125452	7367
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_ass	40	4.159345	776	404	1.1.0.0.0.0.0.1	synth with cache (only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: unfold meq; only 1: destruct y; only 1: unfold munion; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	40.072893	12700	5023
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40	40.393213	15542	2820
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40	40.101287	30536	8165
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40	40.148974	18826	3194
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_ext	40	40.176076	66154	11182
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40	40.046676	7992	3462
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_is_eq	40	40.496413	29194	4730
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40	40.103829	8290	3242
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_trans	40	41.031799	7323	2896
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pos_pred_succ	40	19.647504	3238	1480	0.0.0.0.0.0.0.0.0.0.0.2.1.0.0.1.0.4	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: easy; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40	40.047769	15838	3951
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_eq_nat	40	0.120493	16	18	1.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst <- _tmp_tactician0; only 1: apply eq_nat_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40	40.034957	9688	3790
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40	40.056755	18634	4002
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_eq	40	0.081148	11	13	2	synth with cache (only 1: apply eq_nat_is_eq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40	40.044097	13215	3451
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_invol	40	2.359281	361	223	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40	2.090598	1217	246	0.1.0.0.2.4.7	synth with cache (only 1: intros a0; only 1: destruct a0; only 1: apply Private_NZDiv.div_small; only 1: order'; only 1: nzsimpl; only 1: easy; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	0.073548	1	2	0	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40	40.053436	14841	4154
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_0_r	40	0.144010	16	11	0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40	40.069302	24620	3674
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eq_dec	40	0.628080	272	53	0.0.10	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40	40.034279	6956	2872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40	40.047604	10419	7207
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	23.978519	7295	3342	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: intros until n; only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: intros Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b; only 1: intros Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40	40.226037	85519	6289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40	40.048522	16150	3426
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40	40.039580	11905	3210
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_assoc_reverse	40	41.158109	6114	1452
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40	40.098037	27499	7458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40	40.030211	7976	3459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40	40.041267	12217	3793
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	2.052140	631	253	0.0.1.4.1.0	synth with cache (only 1: intros n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	3.007741	971	564	0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros Hm; only 1: rewrite <- negb_even; only 1: rewrite <- negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite Hm; only 1: destruct (even n); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40	40.040780	11221	2574
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40	40.051711	12718	5205
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	40.057317	15709	5631
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	40.065840	19054	5448
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40	40.083510	27048	5055
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	40.057625	16788	4557
coq-tactician-stdlib.8.11.dev	Coq.Init.Datatypes.CompSpec2Type	40	40.122155	35647	12457
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40	40.174257	68403	3163
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40	40.108290	36860	6908
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40	40.046952	13889	4981
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40	40.413210	15263	4302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40	40.482962	12175	2601
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40	40.118492	43022	4566
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	0.022933	3	3	1	synth with cache (only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Strong_confluence_direct	40	40.041609	9294	6902
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40	40.136528	15394	3579
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40	40.118340	46629	4363
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	40.086414	17398	7724
coq-tactician-stdlib.8.11.dev	Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40	40.074536	21199	6502
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_degen_em	40	40.186546	70886	11983
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40	40.113670	34712	9266
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40	40.066787	11913	6664
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40	40.087486	23072	7554
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	40.068401	17313	6697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.555835	63	64	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_lt_cases; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40	40.183488	12253	5845
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40	40.110474	27839	4742
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.216787	306	139	0.0.1.1.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ssr.ssrfun.Involutions.inv_inj	40	40.188373	71628	7970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	40.127690	15321	6686
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40	40.054745	13077	5702
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	0.389233	177	79	1.1.0.2.1	synth with cache (only 1: intros Ext; only 1: intros Q; only 1: intros Equiv; only 1: apply Ext; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_eq_lt_dec	40	40.500653	30976	5491
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.Fix_rects.Fix_sub_rect	40	40.071966	25182	3375
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	40.070351	15680	6740
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.136183	7	10	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.recursion_succ	40	40.168748	9522	5296
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	40.062781	17527	5827
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.lt_O_fact	40	41.169015	33545	2320
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.423581	62	64	0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply add_le_cases; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.128051	7	9	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40	40.066329	17504	7004
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	40.106116	29828	7251
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.provable_prop_ext	40	3.096358	3075	779	9.0.0.0.0.0.2	synth with cache (only 1: intros Ext; only 1: intros A; only 1: intros Ha; only 1: apply (Ext A True); only 1: split; only 1: exact (fun _ => I); only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.empty_1	40	1.488266	629	103	10.16	synth with cache (only 1: intros IN; only 1: abstract now inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40	40.123928	14863	4502
coq-tactician-stdlib.8.11.dev	Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40	40.905167	456147	3498
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_double	40	40.304069	21547	5405
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_equiv	40	40.950787	15214	2841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	2.653241	395	172	0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: rewrite mod_small; only 1: easy; only 1: destruct a0; only 1: order'; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.rev_lnorm_rev	40	40.072147	20431	5408
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40	40.061964	10211	6797
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40	40.053954	13146	5787
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_pred_or	40	40.288791	22999	5164
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40	40.269717	19340	4723
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40	40.094060	17742	5216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40	40.099451	6815	4009
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40	40.634867	16333	3548
coq-tactician-stdlib.8.11.dev	Coq.Arith.Le.le_elim_rel	40	41.101393	5882	2279
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40	40.066852	17233	7193
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40	40.125423	19214	4678
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40	40.223199	10897	5914
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.649369	321	53	0.0.2.0.3.12	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40	40.038186	9710	4544
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_ge_dec	40	1.656333	204	128	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40	0.637171	89	63	0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: apply eq_true_iff_eq; only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	1.891777	360	212	0.0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: easy; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eq_dec	40	0.019069	1	2	0	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	40.114066	42308	5230
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40	40.053813	13169	5536
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40	40.059125	14568	7009
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_gt_dec	40	0.155182	17	20	0.0.1	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	40.054541	12610	5741
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40	40.049359	12406	6116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40	40.050823	12556	7092
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40	40.435079	186881	5902
coq-tactician-stdlib.8.11.dev	Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40	40.211564	82827	7608
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40	40.041301	8206	3755
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40	40.035866	7585	4206
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO	40	0.297062	37	22	0.4	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.146252	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40	40.066999	15407	5028
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.eucl_dev	40	40.104664	33500	5075
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40	40.045773	10058	4852
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	40.109478	21088	3812
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40	40.034787	7243	4176
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	25.816738	14263	2605	3.0.0.1.6.15.2.8.0.0.1.2.1.1.6	synth with cache (only 1: constructor; only 1: intros ?; only 1: intros H; only 1: firstorder; only 1: intros ?; only 1: intros y; only 1: intros _tmp_tactician0; only 1: compute; only 1: intros z; only 1: firstorder; only 1: intros y; only 1: intros Hxy; only 1: intros l'; only 1: intros _tmp_tactician0; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40	40.130384	48831	6093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.369624	55	41	1.0.0.1	synth with cache (only 1: intros ?; only 1: apply add_le_cases; only 1: nzsimpl; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.star_monotone	40	40.061851	14767	9560
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40	40.141270	11923	6984
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.218968	197	135	0.0.0.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40	40.123657	20871	4816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	40.088658	11253	3273
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	1.376908	259	138	0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40	40.356952	11877	2442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	2.592045	3951	226	0.0.1.0.47	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40	40.433793	16761	3084
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40	40.056936	14217	5392
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	40.052313	11323	4874
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_inj	40	40.303493	23702	4478
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40	40.149578	10996	6294
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40	40.117990	43893	2380
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.729992	182	94	0.0.5.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Lists.Streams.Map.Exists_map	40	40.080498	22095	8000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	1.235125	309	216	0.1.0.0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.930405	355	104	2.4.3	synth with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40	40.066436	17398	7453
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2.591782	1687	93	0.0.1.36	synth with cache (only 1: induction n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40	40.044462	12552	5076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40	40.179711	13445	5900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40	40.551813	14868	2561
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40	40.113600	11739	4916
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.336102	31	36	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S	40	41.869209	13017	1955
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	5.553009	11433	597	6.39.10	synth with cache (only 1: intros Hsnd; only 1: subst; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.empty	40	16.120203	95703	438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40	40.087496	15161	5948
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	40.038146	9308	4645
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40	40.082900	26796	7549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.399150	85	46	0.0.3.0	synth with cache (only 1: intros n; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40	40.055518	12515	5093
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40	40.067947	9810	4834
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40	40.069322	17155	6548
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_left	40	8.160008	1718	884	0.0.0.0.0.2.0.0.2	synth with cache (only 1: unfold munion; only 1: unfold meq; only 1: intros until x; only 1: unfold multiplicity; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	40.035836	6690	4119
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_pred	40	0.067553	3	3	1	synth with cache (only 1: apply Nat.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.destruct_list	40	40.428107	71040	3485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40	40.053821	12988	7194
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40	40.378376	11550	3732
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.hd_error_tl_repr	40	40.374165	16614	4472
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_not_gt	40	0.038944	1	2	0	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40	40.111007	9484	3441
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40	40.168867	63303	8359
coq-tactician-stdlib.8.11.dev	Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40	40.047430	10228	7670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40	40.095407	23966	5640
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_not_le	40	0.055123	3	3	1	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	2.186831	548	382	0.0.0.0.1.2	synth with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_right	40	7.875820	1368	798	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros until x; only 1: destruct x; only 1: intros until y; only 1: destruct y; only 1: intros until z; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40	41.170125	12729	3252
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	1.335889	242	164	0.4.1	synth with cache (only 1: intros; only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	40.050044	8939	3571
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40	40.047172	11213	4899
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40	40.127661	45247	6427
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40	40.104762	11208	7444
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_S_le	40	0.019351	1	2	0	synth with cache (only 1: apply Peano.le_S_n).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0.052659	21	7	5	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_S	40	0.016505	1	2	0	synth with cache (only 1: apply Nat.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	40.035660	9533	3808
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_S_gt	40	0.692139	32	14	2.3	synth with cache (only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40	40.089379	26624	7429
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_S	40	0.012665	1	2	0	synth with cache (only 1: apply Nat.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_split	40	40.100370	30803	4424
coq-tactician-stdlib.8.11.dev	Coq.Logic.PropExtensionality.proof_irrelevance	40	40.165624	49848	7544
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40	40.053031	12982	6944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40	40.058423	14448	6649
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_odd_dec	40	0.144031	25	23	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40	40.093347	18669	8359
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.Splus_lt	40	40.479309	55028	5488
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40	40.155403	5060	1015
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40	40.273023	17551	4383
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Peirce	40	0.717128	800	134	8.11	synth with cache (only 1: intros r2; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_dec	40	40.376060	16244	3117
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40	40.055840	7980	4229
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	40.112649	40575	4599
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40	40.048576	10248	4500
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40	40.049888	8768	5086
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_cons_not_nil	40	40.249129	35118	6241
coq-tactician-stdlib.8.11.dev	Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40	40.158330	59230	6402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40	40.044524	9836	5090
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	40.041957	11288	3002
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40	40.088296	12792	5668
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40	40.060904	14291	7775
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40	40.060166	14864	7957
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40	40.063176	14561	8043
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare.discrete_nat	40	40.368535	21895	5438
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40	40.077294	22038	4913
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40	40.088809	28044	6358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.nzhead_invol	40	18.609200	7158	2526	1.0.0.0.0.2.0.0.0.0.0.10	synth with cache (only 1: induction d; only 1: trivial; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_succ	40	40.304744	33502	3373
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40	40.261659	7729	1314
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_unique	40	40.223982	18520	5228
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40	40.041165	9361	2719
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_spec	40	40.433496	11587	1136
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	7.465051	3272	766	0.0.0.2.2.5.5.1	synth with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: simpl; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: easy; only 1: order'; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorDef.BASES.trunc	40	40.074370	21073	7045
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	5.071001	1381	426	0.0.0.0.1.0.1.0.3.0.1	synth with cache (only 1: intros m; only 1: rewrite <- add_opp_r; only 1: nzinduct m; only 1: rewrite add_0_l; only 1: nzsimpl; only 1: easy; only 1: intros ?; only 1: rewrite opp_succ; only 1: rewrite add_pred_r; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40	40.061328	15031	8142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40	40.067038	10499	4743
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Union.WfUnion.wf_union	40	40.081158	24435	6766
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40	40.237249	100614	5557
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40	40.067154	9972	3562
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40	40.055276	14131	7387
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40	40.060932	16542	4614
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_dec	40	40.102069	37129	3660
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40	40.446328	102190	5121
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_equiv	40	40.432630	33270	5118
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40	40.137810	16732	7882
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.344819	36	35	0.0.1.0	synth with cache (only 1: intros n; only 1: rewrite add_opp_r; only 1: rewrite sub_diag; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	40.115497	22715	3941
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40	40.063529	14534	7176
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_comm	40	40.281877	18985	5797
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40	40.179732	67880	6423
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.unorm_0	40	40.044242	10247	4041
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40	40.417384	10134	3377
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40	40.085387	26167	5366
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40	40.055849	13076	4976
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_r	40	40.224419	6285	3103
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40	40.108663	18092	6643
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_base	40	0.032409	21	7	5	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40	40.204083	4756	1595
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40	40.107444	14941	6597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40	40.218710	12799	5405
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40	40.057379	13497	6502
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_tl	40	40.448744	33377	4971
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40	40.272462	82932	2980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40	40.175430	20950	5207
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40	40.286357	11665	4390
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.meq_congr	40	3.188919	541	296	0.3.1.2	synth with cache (only 1: intros; only 1: unfold meq; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_succ_l	40	40.101496	11229	5762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	4.485687	1102	693	0.0.4.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros H1; only 1: intros H2; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40	40.272314	13571	1999
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40	40.563735	35372	3901
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_In_dec	40	40.444965	55715	3073
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40	3.836009	461	201	0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40	40.057141	13885	6139
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mul_succ_l	40	40.188736	22563	9395
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40	40.119084	39548	7264
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40	40.055104	13122	6997
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	40.075495	23323	4289
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40	40.058900	16004	4059
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eta	40	40.643064	115028	1549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	40.527917	7253	3466
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	1.520520	202	128	0.0.1.0.3	synth with cache (only 1: intros m; only 1: intros n; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	40.064846	10802	4830
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind	40	40.425194	26141	3733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40	40.054937	13809	6175
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40	40.133753	9319	5706
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40	40.052550	11090	7343
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_add	40	40.718092	9796	2640
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40	38.746202	24974	3859	0.0.0.0.0.0.11.6.14	synth with cache (only 1: intros b; only 1: intros _tmp_tactician0; only 1: rewrite add_comm; only 1: destruct b; only 1: simpl; only 1: apply testbit_odd_0; only 1: simpl; only 1: rewrite add_0_r; only 1: apply testbit_even_0).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40	40.834708	8963	2095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40	40.069489	19613	6436
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40	40.059858	16029	7912
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	1.982517	283	185	0.0.0.0.1.0.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_no_neutral	40	40.391105	10170	4371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40	40.059499	7987	4064
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_mul	40	40.232119	16927	5925
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_eq_unit	40	40.449004	28662	4686
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40	40.059145	14934	7670
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	3.286704	1147	307	1.7.1.2	synth with cache (only 1: cases ltac:(n); only 1: intuition; only 1: right; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	40.111973	26322	5171
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40	40.961624	6956	2664
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40	40.148856	15686	4928
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eq_dec	40	40.376725	21589	4876
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40	40.380171	10962	3738
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40	41.193257	3839	1934
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40	40.232826	16753	7978
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40	40.053334	12320	6663
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	40.051974	10726	6149
coq-tactician-stdlib.8.11.dev	Coq.Sets.Uniset.defs.treesort_twist2	40	40.046559	11907	4618
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.discr	40	40.365611	46155	6079
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_add	40	40.051242	12393	4173
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inj_tail	40	40.370502	11762	3006
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40	40.050560	12566	6754
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.peano_rect_succ	40	40.306487	15623	6137
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_em_degen	40	40.264826	110094	9327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40	40.059856	14344	7332
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40	40.124846	12361	4597
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40	40.123462	14601	5837
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40	40.033299	8207	3871
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40	40.569178	24468	4011
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40	40.091050	13300	4897
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_0_l	40	0.015586	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.not_even_and_odd	40	4.531375	2806	605	5.7.2.0.4.0	synth with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.NNPP	40	40.539288	35326	3005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.063892	7	9	0.0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40	40.259541	16979	3528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40	40.338943	21270	3641
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	40.076971	21330	7499
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	40.110601	14561	5771
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_l	40	0.020344	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim2	40	0.092778	11	10	0.0.1	synth with cache (only 1: unfold not; only 1: intros A; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	1.063871	421	207	0.0.0.0.2.2	synth with cache (only 1: intros H2; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40	40.072181	14787	6514
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_ext	40	41.695057	27636	1330
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	40.297035	14354	3022
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40	40.058079	15085	7061
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.unique_choice	40	40.438761	23561	5581
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40	40.380902	17239	4531
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Finite_alt	40	40.941234	28948	3672
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.232278	29	30	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_r	40	40.888819	8582	2849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40	40.128187	24343	5218
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40	40.165825	12461	4843
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40	40.211819	12696	4940
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40	40.055468	15584	5038
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Gt_Psucc	40	40.307608	17751	5098
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	7.364653	2419	1110	0.0.5.0.0.3	synth with cache (only 1: intros AP; only 1: intros m; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: rewrite <- lt_succ_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40	40.136295	26122	5538
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_or	40	40.320889	30375	6690
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_reg_l	40	40.234838	29646	4144
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40	40.269199	13576	3040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40	40.096920	9243	4292
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	6.260019	1604	664	0.0.0.2.4.3	synth with cache (only 1: intros n; only 1: rewrite testbit_spec'; only 1: f_equiv; only 1: nzsimpl; only 1: easy; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_map_NoDup	40	40.669324	12415	3188
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_1_r	40	1.005822	405	129	1.0.0.4.0.1.0.8	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40	40.151093	24125	5821
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_rect	40	40.093006	13582	2957
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_or_app	40	40.247160	19112	7260
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40	40.099775	29606	6891
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_split	40	0.797797	15	12	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_reg_l	40	40.386235	15895	6655
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_le_S_dec	40	35.567272	23665	3389	0.3.1.0.2.0.3.8.0.20.14	synth with cache (only 1: induction n in m |- *; only 1: constructor; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: apply Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	8.759310	1210	467	1.0.1.0.0.1.4	synth with cache (only 1: intros l; only 1: intros x; only 1: intros x'; only 1: intros Hxx'; only 1: rewrite InA_alt; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_imply_elim	40	6.047264	4098	1275	8.0.0.2.1	synth with cache (only 1: unfold not; only 1: intuition; only 1: destruct (classic P); only 1: auto; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.bi_induction	40	40.215277	14808	6490
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	40.155967	20093	6158
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.in_app_iff	40	40.076358	23734	7947
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40	40.159993	13931	6110
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	0.041462	6	4	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_wd	40	40.272875	13022	6027
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth1	40	4.662380	994	497	0.0.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: inversion 1; only 1: intros d'; only 1: intros d; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.map_app	40	0.875032	108	77	0.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40	40.063971	17390	5197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40	40.064170	15303	5953
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40	40.359358	13961	5606
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.432613	80	61	1.0.0.1	synth with cache (only 1: intros H; only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.SSplus_lt	40	6.605693	3365	916	1.16.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_le_succ_r; only 1: apply Nat.le_add_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_head	40	40.094361	31425	7214
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0.393961	595	35	33	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	19.356439	11919	2999	0.4.3.6.5.4	synth with cache (only 1: intros l'; only 1: intros l1; only 1: intros l; only 1: intros H; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.pos_eq_refl	40	40.423708	32427	5199
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_or	40	1.967751	170	110	1.0.1.3	synth with cache (only 1: unfold not; only 1: intros p; only 1: intros Ext; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40	40.065253	15964	6691
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.recursion_succ	40	40.357089	20016	4058
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.length_map	40	0.552928	112	85	0.0.0.0.0.0.1	synth with cache (only 1: intros a; only 1: intros until l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	0.229784	106	17	13	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_to_imply	40	0.075955	4	5	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Permut.Axiomatisation.twist	40	40.046447	9610	4704
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40	40.344042	17838	5366
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_to_and	40	1.164441	377	177	3.1.0.4	synth with cache (only 1: intros; only 1: apply NNPP; only 1: intros ?; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40	1.327282	583	181	1.0.2.2.0.0.1	synth with cache (only 1: intros m; only 1: split; only 1: intros EQ; only 1: rewrite <- opp_nonneg_nonpos; only 1: rewrite <- EQ; only 1: apply abs_nonneg; only 1: apply abs_neq).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40	40.081197	23385	4637
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.or_not_and	40	0.036679	4	6	1	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	40.447295	13235	4198
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_or_and	40	0.024632	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.and_not_or	40	0.020798	1	2	0	synth with cache (only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	7.639408	10471	997	0.0.7.6.0.11.4.9	synth with cache (only 1: intros n; only 1: cases ltac:(n); only 1: left; only 1: easy; only 1: intros n; only 1: right; only 1: exists n; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or	40	0.031841	3	5	0.0	synth with cache (only 1: intros B; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_Sk_l	40	40.394494	16602	4470
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.imply_and_or2	40	0.061371	7	9	0.0.0	synth with cache (only 1: intros x; only 1: intros ?; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Facts.app_inv_tail	40	40.094695	31310	6900
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.not_and_or	40	0.825846	102	63	0.0.5	synth with cache (only 1: intros A; only 1: intros *; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	0.816330	560	68	2.1.0.0.0.23	synth with cache (only 1: split; only 1: easy; only 1: intros H; only 1: intros H0; only 1: congruence; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40	40.057051	11916	7072
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	38.869159	20586	5420	0.0.0.1.0.0.0.0.5.0.0.0.0.0.2.3	synth with cache (only 1: intros Sym; only 1: split; only 1: induction l; only 1: simpl; only 1: intros; only 1: inversion H; only 1: firstorder; only 1: inversion_clear H; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_lt_iff	40	0.499537	51	46	5	synth with cache (only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Psucc_Gt	40	40.799342	22068	4232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	40.266459	19896	3771
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_le_iff	40	0.042288	3	5	0.0	synth with cache (only 1: unfold le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xO	40	40.465754	22108	2438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	3.434771	454	231	0.0.0.4.0.0.0.1.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy; only 1: simpl; only 1: rewrite pos_sub_spec; only 1: rewrite Pos.compare_refl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40	40.326204	5636	3378
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40	40.051337	13097	5486
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.one_succ	40	0.055547	10	7	0.2	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_cons	40	40.528333	7804	3314
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	40.440109	19041	4214
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.two_succ	40	0.054750	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40	40.053541	11887	6825
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_0_l	40	0.061393	4	6	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_0	40	0.048291	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil	40	40.514154	16853	4917
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40	40.509599	28032	3677
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	17.028753	11016	1406	1.9.1.2.0.24	synth with cache (only 1: intros _tmp_tactician2; only 1: destruct _tmp_tactician2 as [| ]; only 1: easy; only 1: intros m; only 1: red; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.eval_f_morph	40	40.481362	18381	5908
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	1.329458	1586	98	1.0.1.1.47	synth with cache (only 1: constructor; only 1: red; only 1: easy; only 1: red; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	1.948818	617	312	12.0.0	synth with cache (only 1: rewrite abs_eq; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40	40.600591	19899	5046
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40	40.272488	41534	7272
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	40.064945	15507	5823
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40	40.485905	33816	6665
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	15.025831	5487	2511	0.1.1.1.0.2.3	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: easy; only 1: trivial using divide_refl; only 1: apply divide_mul_l; only 1: trivial using divide_refl; only 1: trivial using divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_in_or_default	40	40.244259	24996	5255
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_r	40	40.303514	11141	4436
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40	40.120350	38944	8044
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	8.015969	2899	1496	0.0.0.5.3.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm m p); only 1: rewrite (mul_comm n p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.eq_nth_iff	40
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40	40.123149	9821	5281
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_cancel_l	40	40.054987	14028	5652
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40	40.043191	10104	6168
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.735869	214	37	0.0.0.15	synth with cache (only 1: split; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40	40.116654	40575	7001
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation.Permutation_sym	40	40.282410	26334	5582
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40	40.078197	22624	7288
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40	40.281449	8376	3111
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	4.986777	670	342	0.0.0.0.0.1.0.0.0.0.0.0.2.1.0	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40	40.934571	13046	1471
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_default_eq	40	40.104876	35711	6515
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_def	40	40.095531	19239	6483
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_succ	40	0.387840	41	28	0.0.0.0.0.0	synth with cache (only 1: unfold succ; only 1: unfold pred; only 1: rewrite <- add_assoc; only 1: rewrite add_opp_diag_r; only 1: rewrite add_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	40.421685	29964	4446
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_le_S	40	24.251492	14151	2930	0.0.1.5.14	synth with cache (only 1: intros m; only 1: intros y; only 1: induction 1; only 1: auto; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge	40	40.072651	21384	5792
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40	40.179063	19849	4227
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40	40.146024	12413	3274
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	1.728779	205	57	1.0.8	synth with cache (only 1: intros x; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	40.201886	6288	3765	0.1.1.2.0.1.0.0.0	synth with cache (only 1: intros A; only 1: intros B; only 1: intros x; only 1: intros H'2; only 1: red; only 1: intros y; only 1: intros H'; only 1: elim H'; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_intro	40	0.539132	112	91	1.3.0	synth with cache (only 1: intros n; only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.231218	45	24	0.3.1	synth with cache (only 1: intros x; only 1: intros H1; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40	40.361023	49788	5783
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_r	40	40.059804	15435	6199
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.nat_N_Z	40	0.174124	66	24	0.1.3.1	synth with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0.151083	54	23	5.0	synth with cache (only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.image_empty	40	1.170909	307	113	1.0.3.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x; only 1: destruct 1; only 1: elim (Noone_in_empty U x); only 1: auto with sets; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.182499	29	14	0.0.4	synth with cache (only 1: intuition; only 1: invlist InA; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.105293	34	14	0.5	synth with cache (only 1: intros z; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.051499	3	5	0.0	synth with cache (only 1: red; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.120434	7	10	0.0.0	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	40.339620	50124	5712
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40	40.080016	21786	6336
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	40.219191	20145	7436
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	3.687944	4790	462	0.0.1.0.10.18	synth with cache (only 1: intros l; only 1: destruct l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.185007	11	11	0.0.1	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40	41.123886	16953	1474
coq-tactician-stdlib.8.11.dev	Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40	40.087717	30605	4097
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct1	40	12.430349	4137	1259	1.0.0.1.0.5.0.1.1.6.1.0.0	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros a0; only 1: easy; only 1: intros a0; only 1: intros Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intros eq; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.le_lt_or_eq	40	40.803419	20253	3893
coq-tactician-stdlib.8.11.dev	Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40	40.484111	76267	2971
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	40.498719	46151	3504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40	5.472700	1697	582	0.0.7.1.1.1	synth with cache (only 1: intros Hn; only 1: rewrite lt_nge; only 1: rewrite <- not_false_iff_true; only 1: apply imp_iff_compat_r; only 1: apply bits_iff_nonneg; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_lt	40	1.556867	468	293	0.1.2.1.2	synth with cache (only 1: intros a; only 1: intros n; only 1: intros p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.571440	333	73	14	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_diag_reverse	40	36.587579	15267	3246	3.0.0.10.8.0.0.4	synth with cache (only 1: destruct n; only 1: easy; only 1: Nat.nzsimpl'; only 1: simpl; only 1: induction n; only 1: Nat.nzsimpl'; only 1: easy; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40	40.183174	73943	5490
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40	40.252009	27402	7194
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.lt_succ_r	40	40.145977	22853	9359
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_Z	40	0.012353	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_N_nat	40	0.028883	3	3	1	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.id	40	40.060581	18180	3248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40	7.404047	6423	897	0.0.0.8.0.2.0.8.3.0.0	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_neq; only 1: rewrite opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: easy; only 1: rewrite abs_eq; only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40	40.237028	22852	3537
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_Z	40	0.248552	41	27	0.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.add_succ_l	40	40.735064	52920	4294
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40	40.281281	12160	4202
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0.024828	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj	40	40.204551	37825	2947
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40	40.620554	85419	4667
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	1.707938	171	59	1.0.6	synth with cache (only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.positive_nat_N	40	0.318398	51	32	0.0.0.0.0.1	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply SuccNat2Pos.inv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0.021536	1	2	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0.023219	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_dec	40	14.397139	7554	1611	2.0.0.2.0.0.0.0.0.2.0.5.0.0.9	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: left; only 1: auto with arith; only 1: intros until m; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: apply Peano.le_n_S; only 1: auto; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	40.052757	11931	6390
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.gt_dec	40	0.013001	1	2	0	synth with cache (only 1: apply le_dec).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40	40.128055	28036	5943
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	40.905464	94894	3060
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_opp	40	5.127105	1559	742	0.3.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Pos.compare_antisym; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.id	40	0.228893	31	15	0.3.0	synth with cache (only 1: destruct n; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40	40.226008	12605	5203
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_unit	40	40.165910	61903	9644
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_nat_N	40	0.449068	74	44	2.1.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: apply positive_nat_N).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.702135	79	71	5	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_neq_0	40	22.636925	14084	1827	0.0.0.2.0.0.18.3.12	synth with cache (only 1: apply neg_false; only 1: split; only 1: apply Nat.neq_0_lt_0; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith; only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0.026645	1	2	0	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_N_nat	40	0.911296	517	92	0.0.0.4.13	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0.018654	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	3.230792	718	298	5.2.1.2	synth with cache (only 1: intros n; only 1: intros x; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	1.377718	61	37	1.1.0.0.1	synth with cache (only 1: nzinduct p; only 1: Nat.nzsimpl; only 1: easy; only 1: intros ?; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.024858	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs_N_nat	40	0.926423	335	37	0.0.2.19	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	0.021036	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_0	40	0.016846	1	2	0	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.014205	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pos	40	0.012725	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40	40.409436	16628	5419
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.is_nonneg	40	0.211870	58	30	3.1.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40	40.455633	83338	4914
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0.023696	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_reg_l	40	40.511834	50865	3488
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	2.382556	914	347	0.9.1	synth with cache (only 1: intuition_in; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z_nat_N	40	1.417140	643	80	0.4.0.24	synth with cache (only 1: destruct n; only 1: easy; only 1: Nat2N.nat2N; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.lt_compat	40	40.529597	12173	5648
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	40.448462	13802	6545
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0.027315	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0.474194	168	70	5.0.1	synth with cache (only 1: red; only 1: intros h1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40	40.279751	71469	1642
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0.025796	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.nequiv_equiv_trans	40	40.227059	13705	6468
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	0.074482	4	6	1	synth with cache (only 1: BinInt.Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0.025144	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	40.070185	22254	5147
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40	40.297157	7434	2797
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0.024939	1	2	0	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40	40.429060	10492	4229
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	1.206161	264	148	0.0.0.0.1.1.2	synth with cache (only 1: constructor; only 1: solve_proper; only 1: exact (SRmul_ext SReqe); only 1: intros x; only 1: intros y; only 1: intros H; only 1: exact H).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_compare	40	1.216714	318	136	0.0.0.0.2.0.0.1.1.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	0.044070	4	6	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	16.390013	13635	2727	1.3.16	synth with cache (only 1: intros LS; only 1: rewrite nle_gt; only 1: apply lt_pred_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0.857122	303	92	10	synth with cache (only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.022522	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	41.007735	46503	3615
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_0_l	40	0.030012	4	6	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0.022308	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	0.065785	3	3	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_add	40	0.281539	59	32	0.0.0.0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_iff	40	2.472752	453	320	0.1.0.3.2	synth with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: intros EQ; only 1: Morphisms.f_equiv; only 1: N.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj	40	2.613225	1153	307	1.0.3.0.6.0.0.0.2	synth with cache (only 1: destruct n; only 1: destruct m; only 1: N.order'; only 1: intros Hn; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_lt	40	1.988460	565	233	0.2.8	synth with cache (only 1: unfold Z.lt; only 1: rewrite inj_compare; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	40.074224	16389	6488
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.ge_dec	40	3.092710	1103	399	0.0.2.1.3.0.2	synth with cache (only 1: elim (le_lt_dec n m); only 1: intros; only 1: elim (le_lt_dec n m); only 1: intros H; only 1: apply le_dec; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.le_lt_eq_dec	40	23.572916	8847	2210	0.0.0.1.0.8.0.0.0.2.1.2	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: intros H; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: apply Peano.le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40	40.170679	31177	2739
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40	40.563273	8383	3815
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	40.075076	20456	5980
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40	40.550866	8910	3743
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.lt_dec	40	13.032287	6091	1287	1.0.0.4.0.0.0.1.0.0.2.0.0.0.5.1	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: easy; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_lt	40	0.112007	42	17	5	synth with cache (only 1: apply Nat.le_decidable).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.809083	929	237	10.1.0.1	synth with cache (only 1: intros x; only 1: intros y; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_gt	40	0.021432	3	3	1	synth with cache (only 1: apply Nat.lt_decidable).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.116660	7	10	0.0.0	synth with cache (only 1: intros; only 1: intros ?; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_eq	40	0.021707	1	2	0	synth with cache (only 1: apply Nat.lt_gt_cases).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0.081998	1	2	0	synth with cache (only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	9.615901	19707	1530	0.4.1.5.38.0	synth with cache (only 1: intros x; only 1: apply NNPP; only 1: intros H'0; only 1: elim H'0; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_le	40	0.024448	1	2	0	synth with cache (only 1: apply Nat.lt_nge).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_bool_iff	40	1.812377	813	227	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	40.484322	34593	4975
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_gt	40	0.032122	6	4	2	synth with cache (only 1: apply Nat.le_ngt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.eqb_eq	40	40.227282	13014	5653
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mul	40	1.526820	219	71	0.0.0.0.7.0	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: reflexivity; only 1: destruct m; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_ge	40	0.037124	3	3	1	synth with cache (only 1: apply Nat.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.not_lt	40	0.024395	3	3	1	synth with cache (only 1: apply Nat.nlt_ge).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	23.537101	10739	3778	1.1.1.1.2.0.0.2.0	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H3; only 1: intros H4; only 1: apply mul_lt_mono_nonneg; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40	40.064163	16644	6932
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_S_le	40	11.970015	5292	1405	2.5.3.0.1.2.1	synth with cache (only 1: intros n; only 1: induction n; only 1: intros; only 1: auto with arith; only 1: intros; only 1: apply Peano.le_S_n; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Prop.well_founded_morphism	40	40.137538	6803	3014
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.885491	242	114	0.1.0.0.0.0.2	synth with cache (only 1: intros l; only 1: intros n; only 1: induction l; only 1: simpl; only 1: intros m; only 1: easy; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_bool	40	40.107705	34453	8610
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_double	40	40.555663	12994	2321
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_S	40	0.058544	7	10	0.0.0	synth with cache (only 1: intros p; only 1: induction 1; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40	40.053811	12533	7716
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_succ	40	0.062250	10	11	2	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ	40	5.064670	2082	464	0.11.0.1.0.2.0.0.0	synth with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pmult_nat_mult; only 1: rewrite Pos2Nat.inj_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_Sp_q	40	0.109166	15	18	0.0.0.0	synth with cache (only 1: intros *; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40	40.079901	18768	4295
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40	40.938279	35759	3095
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40	40.089589	25075	7601
coq-tactician-stdlib.8.11.dev	Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40	40.075191	17845	4233
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	2.760105	375	85	4.11	synth with cache (only 1: intros a; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	6.695801	1501	554	0.12.2	synth with cache (only 1: intros; only 1: rewrite H; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	36.846592	36288	6100	0.0.0.3.11.10	synth with cache (only 1: intros b; only 1: intros m; only 1: intros Hb; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	1.822767	454	118	1.0.0.1.4.0.0.2.6	synth with cache (only 1: induction l; only 1: apply permA_skip; only 1: reflexivity; only 1: intuition; only 1: etransitivity; only 1: auto; only 1: simpl; only 1: rewrite <- IHl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	40.947797	5763	2761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	40.066074	17630	6545
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor0	40	0.120211	3	5	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	32.988225	12348	4932	1.0.2.2.0.0.0.2.0.1.0	synth with cache (only 1: intros m; only 1: intros until l'; only 1: intros N; only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl in *; only 1: tauto; only 1: simpl; only 1: tauto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.nat_po	40	40.674542	47582	2640
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor1	40	0.184469	33	23	2.1	synth with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	0.913164	773	123	0.0.0.15	synth with cache (only 1: unfold def_add; only 1: intros n; only 1: rewrite recursion_0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	10.901986	3986	1561	2.1.2.1.0.0.2.0	synth with cache (only 1: intros l; only 1: induction l; only 1: intros l'; only 1: intros tl; only 1: intros; only 1: auto using perm_skip; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40	40.327459	31883	5654
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40	40.110430	12809	5458
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	29.108315	15729	4271	1.0.2.1.0.3.5.3	synth with cache (only 1: intros i; only 1: intros m; only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	4.157848	1445	328	8.3.10	synth with cache (only 1: intros A; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	40.401510	10290	4657
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0.034921	1	2	0	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	2.655456	1133	369	9.2.1.1.2	synth with cache (only 1: simple induction l; only 1: intros y; only 1: auto; only 1: constructor; only 1: firstorder using Sorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor3	40	0.678848	34	20	0.3	synth with cache (only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.106142	15	15	1.0.0	synth with cache (only 1: red; only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred	40	3.084367	1486	321	0.0.0.2.5.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.548168	53	41	0.0.0.1.0	synth with cache (only 1: intros R'; only 1: intros EQ; only 1: intros y; only 1: intros Ryx; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40	40.427690	11682	5088
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40	40.636858	36817	4219
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	8.395411	4034	921	13.0.5.0.1	synth with cache (only 1: intros n; only 1: destruct_max n; only 1: left; only 1: reflexivity; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	2.717499	739	258	4.1.2.4	synth with cache (only 1: intros Hxy; only 1: intros y; only 1: intros H; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40	40.481373	27540	3658
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.is_empty	40	40.419397	45505	3778
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40	40.208376	77243	3985
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	40.752650	10697	1290
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_even_bool	40	4.739718	11844	498	0.0.0.15.4.0.0.0.15.4.10.62	synth with cache (only 1: destruct n as [| p| p]; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy; only 1: simpl; only 1: induction p; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.opp_succ	40	15.230013	9091	2063	0.0.0.0.0.4.2.0.0.0.27	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor5	40	0.193757	3	5	0.0	synth with cache (only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_2_facts.Lemma1	40	40.049271	11800	7739
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	0.942320	209	81	0.5.0.1.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: rewrite opp_involutive; only 1: auto with relations).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40	40.096702	15316	5656
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_lt	40	0.059761	3	5	0.0	synth with cache (only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_not_le	40	0.081352	6	6	0.1	synth with cache (only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor6	40	0.455854	27	21	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_not_gt	40	0.169922	16	12	0.0.2	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40	40.095189	26377	8498
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	2.053997	106	43	0.0.5.0	synth with cache (only 1: intros ?; only 1: red; only 1: reduce; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0.137059	25	19	0.3	synth with cache (only 1: intros Hyz; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_not_le	40	0.459479	59	31	0.1.4	synth with cache (only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_lt_ge	40	0.316159	44	18	5.0	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_gt_le	40	0.179938	13	10	0.2	synth with cache (only 1: intros _tmp_tactician0; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40	40.285133	31846	4439
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40	41.083855	11931	2468
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_gt	40	0.158933	10	7	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40	40.042768	10706	4433
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40	40.130442	15286	7768
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_compat	40	40.473569	4780	1699
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40	40.060165	14626	7725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.728030	429	147	0.0.0.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: easy; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	40.155789	9264	5156
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40	40.071596	18065	5028
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	0.277291	33	33	2.0.0	synth with cache (only 1: intros m; only 1: intros p; only 1: apply lt_lt_add_r).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40	40.682126	12342	2360
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_carry_reg_l	40	40.196333	12765	5901
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.leb_le	40	40.141621	7941	4030
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_In	40	40.241641	19556	5904
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	38.323035	10854	5860	0.0.0.1.0.0.0.1.0.0.3.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.dec_eq_nat	40	40.537200	26310	3716
coq-tactician-stdlib.8.11.dev	Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	40.065238	15670	7079
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.mem	40	40.562408	16351	2745
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	27.420099	8847	2561	0.0.1.0.1.0.0.0.0.4.0.3.0.1	synth with cache (only 1: intros IH; only 1: intros a; only 1: rewrite testbit_eqb; only 1: apply eq_true_iff_eq; only 1: destruct (exists_div2 a) as (a', _tmp_tactician0); only 1: destruct _tmp_tactician0 as (b, H); only 1: rewrite testbit_true; only 1: rewrite eqb_eq; only 1: f_equiv; only 1: rewrite pow_succ_r'; only 1: rewrite <- div_div; only 1: f_equiv; only 1: order_nz; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_asym	40	1.132430	90	33	2.3.1	synth with cache (only 1: Z.swap_greater; only 1: intros LT; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_antisym	40	12.544835	5520	2684	4.0.1.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	40.142914	10824	3551
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_irrefl	40	0.187148	112	28	11	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	40.534135	20759	4071
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_ge_lt	40	2.598645	1512	148	1.27	synth with cache (only 1: Z.swap_greater; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.lt_div2	40	40.130584	23027	5415
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	24.965621	13291	3591	1.2.0.0.0.0.0.4.3.0.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros n; only 1: split; only 1: rewrite lt_succ_r; only 1: intros H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: easy; only 1: intros H; only 1: rewrite H; only 1: apply lt_0_succ).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40	40.164150	25145	5053
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40	40.051246	11159	5116
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40	40.043951	9958	6319
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.add	40	40.480488	26575	5492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	40.075689	16024	6327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.074967	318	237	0.4.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: apply add_le_lt_mono; only 1: apply le_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_trans	40	1.159469	64	57	0.0.0.1.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: transitivity m; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40	40.079453	17243	6060
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_trans	40	0.079064	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.071638	13	8	3	synth with cache (only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40	12.489354	6178	2144	1.2.8.1.0.1	synth with cache (only 1: intros z; only 1: intros m; only 1: intros H2; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalFacts.norm_invol	40	40.057604	14097	5563
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_trans	40	0.504208	99	45	0.0.3.2	synth with cache (only 1: intros H1; only 1: Z.swap_greater; only 1: intros H2; only 1: Z.Private_Tac.order).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_2	40	40.282075	10785	3151
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.301173	67	56	0.0.2.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_iff	40	40.604390	18111	4379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40	40.858384	9643	3320
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_spec	40	0.102995	82	23	3.0.5	synth with cache (only 1: intros m; only 1: intros ?; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.empty_ok	40	0.052790	45	10	8	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_elim	40	40.216837	18858	7092
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	40.367102	20535	3494
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40	40.208008	16385	5761
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	40.068264	17036	6941
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zne	40	4.898909	4459	399	1.0.35.6	synth with cache (only 1: intros H; only 1: destruct (Z.eq_decidable n m); only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40	40.265557	10755	3597
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_spec	40	40.497985	22066	4181
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	0.034216	4	6	1	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	30.990074	10070	4127	0.0.0.0.1.0.0.0.0.0.1.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: rewrite <- pred_le_mono; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_discr	40	40.176741	27159	6344
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0.012084	1	2	0	synth with cache (only 1: exact induction_ltof1).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40	40.052800	13966	5005
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40	40.054867	12920	6266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40	40.047573	11436	4305
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_O	40	40.685447	32441	4073
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	5.405213	9502	547	35.24	synth with cache (only 1: firstorder; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	37.483859	21064	5510	0.0.0.1.1.0.2.0.1.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: intros until n; only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: intros Ha; only 1: apply F; only 1: intros b; only 1: intros Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40	40.310178	27268	5485
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40	40.089770	20599	5356
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.sub_succ_r	40	41.097761	13174	2342
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40	40.238618	10493	3944
coq-tactician-stdlib.8.11.dev	Coq.Sets.Relations_3_facts.Newman	40	40.051500	11308	7403
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.isok_Ok	40	40.665057	74859	2662
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zegal_left	40	0.048050	6	6	0.1	synth with cache (only 1: rewrite <- Z.sub_move_0_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_lt	40	40.058833	15742	4677
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left	40	0.035650	4	5	1	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_left_rev	40	0.014288	1	2	0	synth with cache (only 1: apply Z.le_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_rev	40	0.019824	3	3	1	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left_lt	40	0.015509	1	2	0	synth with cache (only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40	40.114281	25135	3723
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_diag	40	40.661169	36602	3977
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	40.922884	17910	1490
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.singleton	40	40.380308	71585	4112
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40	40.258568	106874	10762
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40	40.102004	34416	6066
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zge_trans	40	2.971025	1072	266	9.4.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	40.051710	13836	4040
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40	40.069343	16786	6473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40	40.082038	16347	5901
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40	40.273525	117225	10970
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40	40.309693	10551	3680
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	36.108035	6139	3666	0.0.9.0.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.ltb_lt	40	40.415144	11609	4728
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40	40.617346	10115	4618
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.217642	154	29	15	synth with cache (only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_gt	40	40.676183	13252	2577
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40	40.182382	49958	5057
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_2	40	40.154343	13701	4511
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40	40.059491	15309	5739
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.mem_1	40	40.824517	4546	1226
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_sub_opp	40	40.485222	14532	5510
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_assoc	40	40.065071	15684	5683
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	40.691387	14519	2002
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_2	40	40.557768	12574	2939
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40	40.264121	13022	3714
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40	40.074167	14135	5751
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40	40.112693	16247	4662
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40	40.077202	9619	6045
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.352548	144	46	2.1.1.1.4	synth with cache (only 1: constructor; only 1: intuition; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.306097	22	24	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_or_odd	40	41.190089	39362	2073
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_eq_iff	40	40.177750	16193	8891
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40	40.061020	14379	5337
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.536413	78	47	0.0.0.0.0.0.0	synth with cache (only 1: intros H1; only 1: intros H2; only 1: intros H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40	40.074180	16672	7723
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.134311	21	21	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	40.210785	17250	5304
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40	40.170641	67409	4959
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40	40.315330	137931	5777
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xI_pred_double	40	40.276215	10494	4927
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	40.210153	13115	4609
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.quotient	40	40.235841	18529	3980
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40	40.044492	10193	3501
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.080534	8	11	1.0	synth with cache (only 1: unfold lt; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	20.910737	2564	752	10.3.0.1.0	synth with cache (only 1: rewrite InA_alt; only 1: simpl; only 1: rewrite InA_alt; only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40	40.204039	12175	4686
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_bool	40	11.840640	20748	2204	0.0.0.0.0.0.18.0.7.0.0.0.0.1.5.27	synth with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_le_iff	40	0.045426	3	5	0.0	synth with cache (only 1: unfold le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.fold	40	2.863226	845	294	1.2.1.0.7	synth with cache (only 1: intros _tmp_tactician0; only 1: intros a; only 1: simpl; only 1: intuition; only 1: eauto with set).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40	40.082467	23577	6197
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40	40.062701	15668	5986
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40	30.714854	8931	4538	0.0.0.0.0.3.0.0.0.2	synth with cache (only 1: intros r; only 1: intros b; only 1: intros _tmp_tactician0; only 1: symmetry; only 1: apply NZQuot.div_unique with r; only 1: intuition; only 1: easy; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40	40.074562	9247	3015
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	15.235148	5266	996	0.0.0.0.2.1.9.5	synth with cache (only 1: etransitivity; only 1: constructor; only 1: easy; only 1: eassumption; only 1: rewrite app_comm_cons; only 1: rewrite PermutationA_cons_append; only 1: rewrite <- app_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40	40.326291	12555	3838
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0.134824	14	15	0.0.0.0	synth with cache (only 1: rewrite app_comm_cons; only 1: rewrite (PermutationA_cons_append l₁ x); only 1: rewrite <- app_assoc; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40	40.084612	16781	5669
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	0.323510	174	50	3.4.1	synth with cache (only 1: simpl in *; only 1: intros; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	1.794942	527	71	4.9.4.4	synth with cache (only 1: induction s as [| c l IHl y r IHr]; only 1: trivial; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40	40.184131	19061	5586
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40	40.157331	13742	2319
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	19.112893	10486	1157	86	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40	40.297626	7257	2647
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40	40.155679	8715	2960
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40	40.639071	38669	3666
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40	38.571434	15657	4350	0.0.0.0.0.0.0.1.0.3.3.0.1.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros H; only 1: apply testbit_false; only 1: rewrite div_small; only 1: apply Private_NZDiv.mod_0_l; only 1: order'; only 1: destruct (lt_ge_cases b 0) as [Hb| Hb]; only 1: generalize (log2_nonneg a); only 1: order; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40	40.177978	14431	5727
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40	40.158669	13882	5732
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.375944	13	9	2.0	synth with cache (only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_0_r	40	25.802476	37848	1315	0.0.0.82	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_0_r	40	0.017947	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40	40.555277	42102	5552
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	40.350309	25068	4317
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_even_plus	40	32.056939	35223	3048	1.1.0.3.0.43	synth with cache (only 1: induction n; only 1: intros _tmp_tactician0; only 1: destruct m; only 1: constructor; only 1: trivial; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_1	40	40.382814	18483	5150
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_l	40	1.031628	38	18	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_rotate	40	40.045412	10867	4849
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40	40.289439	15752	5081
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40	40.110401	8813	4295
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40	40.134789	18396	5097
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40	40.249981	35361	5141
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_xO_pred_double	40	40.272391	14735	5666
coq-tactician-stdlib.8.11.dev	Coq.Logic.Hurkens.PropNeqType.paradox	40	40.222661	92188	7032
coq-tactician-stdlib.8.11.dev	Coq.Logic.Eqdep_dec.UIP_refl_nat	40	40.130781	46543	8357
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40	40.072597	4585	2863
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40	40.057024	13223	6575
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.remove	40	40.558436	65170	4591
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.pow_succ_r	40	0.600870	61	40	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40	40.174600	14171	4177
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	4.479051	2698	535	0.1.0.1.9.1	synth with cache (only 1: cases ltac:(n); only 1: order; only 1: intros H1; only 1: intros H; only 1: rewrite pred_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	40.688744	13409	2913
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_even_plus	40	0.100777	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	40.300794	13807	5120
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.square_spec	40	0.416889	78	13	11	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40	0.106659	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_spec; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40	40.157857	13672	6429
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app2	40	32.149842	12456	3638	6.1.0.0.0.3.1.0.0.0.0.5.0	synth with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| a l]; only 1: auto; only 1: intros H; only 1: simpl; only 1: easy; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [| a l]; only 1: auto; only 1: simpl in *; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	40.228648	13621	4545
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_r	40	1.007203	28	18	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40	40.042591	10189	4726
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	3.641190	4446	610	0.0.0.0.0.1.0.0.0.0.0.15.0.38	synth with cache (only 1: simpl_relation; only 1: unfold natural_isomorphism; only 1: intuition; only 1: rewrite N1.recursion_0; only 1: easy; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: intros; only 1: f_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_l	40	19.277513	8766	3943	0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.1	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40	40.658555	5567	2414
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.add_diag	40	40.083116	23516	5363
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40	40.328466	10879	5423
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.220707	36	33	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth	40	40.128723	48602	4020
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	40.619136	16579	3857
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40	40.057001	8854	4921
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_antisym	40	4.063347	1614	508	2.3.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: destruct m as [| m| m]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct m; only 1: trivial; only 1: easy; only 1: rewrite <- Pos.compare_antisym; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_1	40	40.066835	14684	5737
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.le_gt_trans	40	40.743812	21450	3683
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40	40.178880	18669	4602
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_overflow	40	40.230582	15126	5969
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40	40.216050	17186	4554
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40	40.476453	11509	3389
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40	40.062579	14938	7469
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_aux	40	1.640821	93	25	0.0.6	synth with cache (only 1: split; only 1: parity_binop; only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.union	40	40.111067	42245	3000
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40	40.576269	17418	5627
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40	40.062949	5651	3180
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_odd_dec	40	4.235499	4852	543	2.0.0.2.0.2.0.0.2.4.2.0.24	synth with cache (only 1: destruct n as [| n| n]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto; only 1: simpl; only 1: destruct n as [| n| n]; only 1: intuition; only 1: intuition; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40	40.074754	22326	5930
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40	40.367255	12846	4963
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_xI	40	40.367597	16879	2369
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	1.148921	163	103	0.0.4.0	synth with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40	40.109065	40265	4708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40	40.036269	7925	4776
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.Y_approx	40	40.421820	25775	5646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40	40.046822	11691	5840
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40	40.093483	25073	7581
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	40.148577	18292	5805
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	40.116525	14037	4796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40	40.074023	8986	5193
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_le_trans	40	41.895079	9315	2156
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_nil	40	0.058262	16	9	3	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40	40.043268	10071	5753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40	40.311322	34446	5881
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40	40.072457	20979	5197
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_rect_succ	40	40.323215	66445	3643
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40	40.063411	12177	6270
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40	40.053047	12943	7144
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40	40.140800	53044	7520
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	40.057551	15318	5150
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_cancel_l	40	1.784500	417	281	0.2.1.1.0	synth with cache (only 1: split; only 1: rewrite (mul_comm r); only 1: rewrite (mul_comm r); only 1: apply mul_reg_r; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_split	40	40.463734	39869	3454
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_l	40	0.288300	2	3	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	40.296365	12122	3491
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	40.192239	17667	5298
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_even_inv_r	40	0.828698	14	9	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_nth2	40	40.087989	12801	5576
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.646413	122	81	0.0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_case	40	40.138059	47640	7265
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.find_1	40	40.053526	14233	5533
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0.022173	1	2	0	synth with cache (only 1: exact (rrmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_indep	40	40.712135	13302	4373
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_r	40	0.097341	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	40.200251	11291	2232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40	40.215208	7621	4794
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40	40.189602	22858	4567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40	40.187840	15982	1838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40	40.052653	14090	5468
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_r	40	37.020744	14218	4559	0.0.0.1.2.0.0.1.1.0.0.0.0.8	synth with cache (only 1: revert q; only 1: induction p as [p IHp| p IHp| ]; only 1: intros until q; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: auto; only 1: intros until q; only 1: simpl; only 1: f_equal; only 1: auto; only 1: intros until q; only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	40.695599	31116	5890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40	40.138573	17084	5603
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	1.240422	143	96	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	0.023629	3	3	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40	40.141109	22229	4456
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	40.454025	8972	4026
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	1.661991	578	97	5.7.8	synth with cache (only 1: intros n; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40	40.058096	15189	7196
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.munion_perm_left	40	40.408332	9837	3718
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40	40.061136	15988	5405
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40	40.256922	22398	6027
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	40.212258	12685	4062
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_plus_odd_inv_l	40	0.491195	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40	40.106834	18605	5201
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_lt_iff	40	40.080902	21965	7597
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40	40.811573	7130	1632
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xO	40	0.137458	24	18	0.1.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: rewrite mul_xO_r; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_split	40	40.379123	26045	3956
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_succ	40	40.835309	36020	5119
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	1.432612	401	190	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40	40.490716	23799	5142
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_is_one	40	40.081417	33078	3867
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40	40.378072	22911	5155
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.022718	518	300	2.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id p); only 1: rewrite <- (id q); only 1: rewrite H; only 1: easy; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0.085882	35	14	6	synth with cache (only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.nth_order_last	40	40.409079	24745	4376
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40	1.245051	246	166	0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b); only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40	40.069005	14391	6082
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.PeanoViewUnique	40	40.079395	23223	7453
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_l	40	0.100279	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_r	40	1.575704	319	188	0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: destruct q; only 1: destruct q; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40	40.120494	11040	3419
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	40.528452	9816	4322
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.peano_equiv	40	40.066563	14219	2534
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_even_inv_r	40	0.112606	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_pos	40	40.257193	24568	4375
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.014837	1	2	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40	40.169166	13741	4921
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_In	40	40.292344	29729	5793
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_eq	40	2.199288	702	142	3.1.0.5.1.4	synth with cache (only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: simpl; only 1: destruct eq_dec as [_tmp_tactician0| Hneq]; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40	40.043749	9491	5667
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.In_compat	40	40.306272	10686	4607
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40	40.059614	14164	7651
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	25.846467	5857	2365	0.6.3.0.0.5	synth with cache (only 1: intros x; only 1: intros x'; only 1: intros Hx; only 1: intros y; only 1: setoid_rewrite Hx; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40	41.557477	11425	2527
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_cons_neq	40	0.670466	29	25	0.0.0.0.0	synth with cache (only 1: intros H; only 1: simpl; only 1: destruct (eq_dec x y); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_r	40	3.986767	895	444	0.0.2.0.1.1.0.0	synth with cache (only 1: unfold le; only 1: unfold min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40	40.194909	14986	3542
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40	40.055623	13491	7255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40	40.109467	12338	7955
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_r	40	0.099439	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	1.683484	240	176	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	40.246181	16618	4341
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40	40.073591	17624	4873
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.is_succ	40	41.000012	29372	2236
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40	40.109150	9377	5945
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40	40.056736	14540	6066
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40	40.231911	102620	4255
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	40.155915	9361	4501
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	40.140276	10690	4803
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.eqb_eq	40	40.069273	18619	6130
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans_S	40	2.819198	81	54	0.1.0.1.0	synth with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: easy; only 1: apply Nat.succ_le_mono; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	1.995024	926	146	7.6.14	synth with cache (only 1: intros B; only 1: elim ARth; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_1	40	40.687485	6510	2122
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40	40.148168	15662	7820
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.inter	40	40.666613	51962	3383
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40	40.133580	20712	5703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40	40.052532	12651	7266
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40	40.184483	13227	2627
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.mul_succ_l	40	40.527042	34363	5371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40	40.372057	7174	2949
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40	40.196009	10732	4591
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_l	40	0.103380	17	11	3	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.even_div2	40	40.363461	28764	5699
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40	40.672236	21860	3464
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro	40	1.034312	91	65	5	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.ltb_lt	40	40.428409	19101	4008
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.In_nth_error	40	40.320364	36314	4988
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_r	40	0.060404	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40	40.154352	15393	5310
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_mem_complete2	40	40.035623	8493	4600
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_aux	40	0.871797	25	11	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40	40.168956	11174	3874
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40	40.285385	24527	5489
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_plus_odd_inv_l	40	1.361086	71	28	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_r	40	0.100920	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40	40.036030	8564	4541
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_list_carac	40	40.275937	15955	4411
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Dcompare_inf	40	12.677502	10287	1142	0.0.0.14.18	synth with cache (only 1: intros m; only 1: destruct m; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	14.935088	6827	2536	0.1.0.9.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40	40.496412	44760	5810
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40	40.112831	21844	5396
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.of_nat_to_nat_inv	40	40.657078	5624	1899
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40	40.068404	17781	5764
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	40.098156	12170	5244
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.even_mult_inv_l	40	0.106636	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40	40.050554	9506	4085
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	1.073099	1609	220	23	synth with cache (only 1: intros ([| ], H); try discriminate).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_0_eq	40	1.030119	122	50	0.0.0.5.0	synth with cache (only 1: apply Nat.lt_eq_cases; only 1: induction n; only 1: trivial; only 1: constructor; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge	40	40.586017	37840	5279
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40	40.735830	14166	2857
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult	40	0.098642	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_r	40	40.117572	15786	5743
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_reg_l	40	0.052800	1	2	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_abs_N	40	28.816876	46454	1190	5.2.0.114.21	synth with cache (only 1: Z.bitwise; only 1: destruct z; only 1: easy; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_reg_l	40	40.550342	53526	3677
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eqb_eq	40	40.389376	17468	4628
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_l	40	0.067702	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Injective_carac	40	40.225474	18013	5370
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.plus_gt_compat_l	40	0.042138	1	2	0	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	26.832193	7394	3435	1.0.0.0.3.0.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: red; only 1: red; only 1: red; only 1: red; only 1: intros y; only 1: red; only 1: intuition_in; only 1: subst; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40	40.081351	21736	6492
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40	40.225177	18168	4608
coq-tactician-stdlib.8.11.dev	Coq.Arith.Even.odd_mult_inv_r	40	0.175000	1	2	0	synth with cache (only 1: parity_binop).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40	41.048023	2982	1711
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40	40.072477	18718	6833
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40	40.031794	6768	4018
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40	40.078967	15483	5546
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40	40.050719	12926	6928
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_r	40	1.800705	257	178	0.1.0.0.1.0.0	synth with cache (only 1: unfold max; only 1: unfold le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40	40.466899	12375	3842
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40	40.049476	10122	5243
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_l	40	40.086714	12169	4247
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_None	40	40.790156	8252	2636
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_comm	40	40.213625	16768	6370
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_neq	40	0.577769	125	70	0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct 1; only 1: easy; only 1: induction p; only 1: easy; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40	40.087936	18044	5926
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40	40.058485	14080	6127
coq-tactician-stdlib.8.11.dev	Coq.funind.Recdef.max	40	40.357901	15174	5693
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40	41.083780	19931	2900
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.leb_le	40	40.518634	15760	6290
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_map	40	40.062679	17914	6215
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40	40.178224	10603	5606
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40	40.389785	6955	2612
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_eq_iff	40	40.345554	15352	5526
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40	40.045944	8720	4400
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_split	40	40.542169	15875	3170
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_Some	40	40.487191	15272	5387
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40	40.128805	15915	6036
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40	40.274523	14060	5402
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40	40.351027	12170	3753
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_split	40	40.428750	23750	4266
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	40.483170	22669	5677
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.abs_eq	40	1.478354	449	142	0.0.0.6.2	synth with cache (only 1: intros H; only 1: destruct n; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	0.237534	37	19	0.3.0	synth with cache (only 1: intros H; only 1: apply <- isok_iff; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_null	40	0.385448	92	50	0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros H; only 1: easy; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: destr_eq H).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.form_eq_refl	40	40.590352	41056	4936
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_app1	40	40.395469	17176	5446
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	6.535665	2245	407	10.0.11	synth with cache (only 1: intros IH; only 1: intros x2; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_neg	40	0.140092	14	17	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_0_r	40	0.014867	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	7.190221	1244	601	0.0.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40	40.078662	8107	4177
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_add_distr_r	40	40.387327	9162	2563
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40	40.137161	21202	4548
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40	40.122007	24362	6875
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_of_nat	40	40.460969	64155	2161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40	40.380428	15667	3473
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40	40.088586	8076	2996
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth	40	40.456597	16195	5709
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40	40.207709	9710	3553
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.id	40	40.373237	19722	4044
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div2	40	2.037548	1467	156	0.0.0.21.3.0.6	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj	40	40.248299	17813	5810
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_add	40	40.227504	12788	5092
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_r	40	3.153842	1117	220	1.0.1.16	synth with cache (only 1: induction 1; only 1: easy; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_l	40	0.025494	6	4	2	synth with cache (only 1: apply Nat.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_antisym	40	40.874709	14436	4893
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app	40	40.822065	22514	3887
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40	40.412684	9799	2184
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.add_succ_l	40	40.311708	11122	4523
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_l	40	40.086133	25254	6033
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40	40.039897	8471	4665
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot2	40	0.389429	57	42	0.0.0.1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_trans	40	40.183857	16039	5005
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_pred	40	40.278304	11879	2856
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40	40.603552	46599	4540
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.nth_error_nth'	40	40.050184	13129	5457
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_assoc	40	40.087667	15421	5635
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_equiv	40	40.109195	39494	4571
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_eq_1_l	40	8.867712	4028	1128	0.0.0.0.0.2.0.1.0.0.2.0.3	synth with cache (only 1: destruct p; only 1: intros H; only 1: exfalso; only 1: contradict H; only 1: induction q; only 1: discriminate; only 1: rewrite mul_xO_r; only 1: discriminate; only 1: discriminate; only 1: intros H; only 1: destr_eq H; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app	40	40.476816	7420	2587
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_impl	40	40.532122	7198	3303
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40	40.409559	8805	4908
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40	40.154578	15294	6292
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_spec	40	2.368941	262	60	13	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_eq	40	40.209994	63701	3407
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	4.601816	2058	861	1.1.0.5.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros LE; only 1: apply lt_succ_r in LE; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40	40.378122	38235	4864
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_add	40	0.922769	144	80	0.0.0.2.0.0.0.1	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: unfold add; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	3.000758	1211	405	0.0.0.0.0.0.4.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40	40.065841	15865	5716
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_spec	40	1.316039	168	68	0.0.1.5	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.remove_In	40	40.140323	27798	5175
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40	40.381275	14638	5304
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.060067	13	9	2.0	synth with cache (only 1: apply <- isok_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40	40.319321	21575	4401
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	40.051302	11796	6713
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_equiv	40	40.220463	79682	2213
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.145319	84	29	0.0.5.0	synth with cache (only 1: unfold empty; only 1: intros ?; only 1: intros ?; only 1: inv).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_double	40	0.111008	21	17	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_pos_fold	40	0.011422	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.143687	14	15	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div2_succ_double	40	0.060851	7	9	0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40	40.184088	45383	4017
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_mul	40	0.835895	99	65	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_gt	40	34.078899	21291	3612	0.1.1.0.8.7.21	synth with cache (only 1: revert n m; only 1: intros p; only 1: intros b; only 1: unfold N.gt; only 1: unfold Z.gt; only 1: rewrite inj_compare; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40	40.446764	10281	3304
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_nth	40	40.649277	93445	1693
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_nil	40	0.047422	1	2	0	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40	20.765873	13095	1525	5.8.0.1.7.0.0.0.10.0.5.6.0	synth with cache (only 1: functional induction (max_elt s); only 1: intuition; only 1: simpl; only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: rename _x0 into r; only 1: inv; only 1: auto; only 1: auto; only 1: simpl; only 1: intuition_in).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_inv	40	3.662812	231	139	3.0.0.1	synth with cache (only 1: intros x0; only 1: intros l; only 1: inversion_clear 1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	9.314999	5368	1668	6.0.0.2.0.0.2	synth with cache (only 1: intros c; only 1: intros notall; only 1: intros n; only 1: intros ?; only 1: apply notall; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_def.Zpower_theory	40	40.196091	8699	1112
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	15.797998	6980	2252	1.2.0.0.0.3.1.0.4	synth with cache (only 1: intros H; only 1: intros n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intros ?; only 1: rewrite succ_inj_wd; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.435745	76	57	0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_cons	40	0.151051	7	10	0.0.0	synth with cache (only 1: intros until x; only 1: intros; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	8.057688	2636	1065	2.0.0.2.0.0.0.0.0.1.1	synth with cache (only 1: intros n1; only 1: intros n; only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: rewrite opp_involutive in H; only 1: rewrite opp_involutive in H; only 1: easy; only 1: intros; only 1: f_equiv; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sgn_pos	40	3.698933	4358	305	1.5.1.31.1	synth with cache (only 1: intros Hp; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40	40.100563	18100	6434
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40	40.388710	8289	2609
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_2	40	40.949385	4981	1553
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_l	40	40.238529	17394	5174
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.app_removelast_last	40	40.126840	30438	4307
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40	40.072310	17434	4699
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40	40.288734	4992	2211
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.213560	31	34	0.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (opp_inj_wd (- n) m); only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_succ_r	40	40.232839	15043	4212
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_mul_acc	40	40.039182	12098	3026
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_cons	40	0.092004	22	10	1.3	synth with cache (only 1: simpl; only 1: f_equal).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40	27.156646	7679	2854	0.0.0.0.0.0.0.0.0.0.2.0.1.1	synth with cache (only 1: intros; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- le_0_sub; only 1: rewrite <- add_opp_l; only 1: rewrite <- sub_opp_r; only 1: rewrite le_0_sub; only 1: easy; only 1: intros p; only 1: nzsimpl; only 1: rewrite <- succ_le_mono; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40	40.236833	24698	4164
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tempty	40	2.687827	2081	320	0.0.0.4.17.0	synth with cache (only 1: intros ?; only 1: compute; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40	4.818103	729	230	0.0.2.0.7	synth with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_lb	40	40.321502	31692	2315
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	2.283351	440	326	0.2.3.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply div_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_rev	40	40.396835	7871	2083
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40	40.161089	11096	3474
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	1.671954	717	171	0.0.1.0.6.0.4.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: destruct f; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.exists_last	40	40.103720	38838	4971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_testbit	40	1.543913	436	223	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a]; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct n; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.eqb_neq	40	40.110453	25232	2490
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	0.144360	10	7	0.2	synth with cache (only 1: red; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_bool_iff	40	40.094827	31290	3894
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.removelast_app	40	40.235940	24234	5072
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.666671	405	69	1.8.6.0	synth with cache (only 1: constructor; only 1: rewrite InA_altdef; only 1: inversion 1; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40	40.582265	32085	5700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_dec	40	3.204211	1182	507	0.0.0.0.0.0.0.0.0.0.6.2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: right; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: left; only 1: easy; only 1: simpl; only 1: right; only 1: easy; only 1: left; only 1: easy; only 1: destruct p; only 1: simpl; only 1: left; only 1: easy; only 1: simpl; only 1: right; only 1: easy; only 1: simpl; only 1: left; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N_nat_Z	40	40.087436	29850	3439
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.826372	148	109	0.2.2.0	synth with cache (only 1: intros; only 1: intuition; only 1: apply mod_small; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.finite_image	40	40.095568	33404	7059
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	40.623465	5259	3233
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0.322297	23	23	1.1	synth with cache (only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.id	40	0.388153	50	39	0.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0.081506	6	4	2	synth with cache (only 1: constructors).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_1	40	40.518043	14139	5081
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.399697	31	31	0.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40	40.635760	47450	5825
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40	40.207272	13780	6070
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_mul	40	3.881070	688	325	0.7.0.0.0.0.0.1	synth with cache (only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: rewrite <- mul_succ_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.compare_le_iff	40	40.175365	16054	7727
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40	40.232001	26528	3930
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_neg	40	0.651757	115	46	0.0.0.0.4	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_add	40	40.079059	27736	1246
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_length	40	0.311909	61	41	2.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	2.814641	533	365	0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite <- add_opp_r; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40	40.272181	23182	6371
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40	40.043515	10295	4582
coq-tactician-stdlib.8.11.dev	Coq.Arith.Lt.nat_total_order	40	40.327784	31309	2545
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_p_Sq	40	40.383601	16525	4356
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro1	40	40.199359	10758	4544
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.square_spec	40	4.094545	836	194	1.0.2.1.0.3.0.0.17	synth with cache (only 1: destruct n; only 1: nzsimpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40	40.162820	24888	3910
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.389966	48	39	0.0.2.0	synth with cache (only 1: intros l; only 1: intros; only 1: rewrite <- H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_between	40	0.159267	50	26	0.1.0.2	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40	40.086508	27207	8010
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	1.578748	380	236	0.0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: trivial; only 1: nzsimpl; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	40.070533	19008	6546
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40	40.465063	34255	2573
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40	40.287099	26587	5674
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40	40.266978	19705	4482
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_succ_double	40	40.464374	20765	2459
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40	40.103901	9537	4938
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_Gt_spec	40	40.186693	17895	1706
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_l	40	27.538603	6582	2761	0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.div_mod	40	40.109849	49078	3991
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_gt	40	6.911217	2374	814	0.0.2.1.9.1	synth with cache (only 1: unfold gt; only 1: rewrite (compare_antisym q); only 1: rewrite inj_compare; only 1: rewrite CompOpp_iff; only 1: rewrite Nat.compare_lt_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40	40.158687	15312	4951
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	5.014698	2317	885	0.0.0.0.2.0.0.4	synth with cache (only 1: intros g; only 1: intros notall; only 1: intros n; only 1: apply NNPP; only 1: intros abs; only 1: apply notall; only 1: exists n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.min_r	40	40.472783	16874	5319
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_nonpos	40	0.448384	13	15	0.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	40.878803	26160	4904
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_lt	40	40.130967	40223	2126
coq-tactician-stdlib.8.11.dev	Coq.Arith.Factorial.fact_le	40	40.633327	18195	4017
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.list_eq_dec	40	5.095096	822	159	15	synth with cache (only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_le	40	40.146532	18941	4458
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.min_r	40	22.016834	8156	3334	0.0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0.4	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.plus_minus	40	40.491688	28649	4463
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sub_succ_r	40	40.069689	16597	5628
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40	40.289980	28768	5081
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Update_OT.compare_spec	40	40.329153	48811	5534
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_ge	40	40.131890	16466	4438
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_not_Zodd	40	6.045672	3705	908	0.0.0.3.0.0.0.0.0.2.0.3.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: intros Hm; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: intros; only 1: intros Hb; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros _tmp_tactician0; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat_l	40	40.585534	15713	2799
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0.027279	1	2	0	synth with cache (only 1: exact (Radd_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_Sn	40	3.563542	1759	347	0.11.3.0	synth with cache (only 1: boolify_even_odd; only 1: intuition; only 1: unfold Z.succ; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.227707	231	22	20	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0.036313	3	3	1	synth with cache (only 1: exact (Rmul_ext Reqe)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_app	40	2.539204	1297	350	0.0.0.0.0.3.1.7.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: intros y; only 1: simpl; only 1: rewrite (IHl y); only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40	40.567957	64944	5971
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_0	40	0.037292	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.byte_dec_bl	40	43.490657	17065	528
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40	40.137266	50403	5969
coq-tactician-stdlib.8.11.dev	Coq.Classes.SetoidClass.equiv_nequiv_trans	40	40.439202	14177	6848
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_neg	40	0.043129	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pos	40	0.329735	47	39	1.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map_iff	40	4.590554	711	486	2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: split; only 1: induction l; only 1: easy; only 1: firstorder  (subst; auto); only 1: induction l; only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40	1.778580	278	135	0.0.1.1.2	synth with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mul_succ_l	40	40.300876	25148	6322
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.minus_plus	40	1.326154	870	127	0.24	synth with cache (only 1: apply Nat.add_sub_eq_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_r	40	18.895341	6265	2632	0.1.0.2.2.2.2.0.0	synth with cache (only 1: unfold le; only 1: unfold max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: intros c; only 1: intuition; only 1: intros y; only 1: intuition; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40	1.172022	230	104	0.0.2.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftl_spec_high'; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	40.409043	31194	4827
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40	40.363886	8221	4688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.371157	65	36	0.0.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: nzsimpl; only 1: easy; only 1: apply le_0_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.279592	15	18	0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_compat_r	40	9.296936	5524	817	2.1.9.22	synth with cache (only 1: induction 1; only 1: auto; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub	40	40.058354	15078	5062
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_sub_max	40	40.203526	39616	4076
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_succ	40	40.073484	27273	2827
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_lt_mono	40	6.645050	1603	403	0.0.0.2.0.0.0.0.0.8	synth with cache (only 1: destruct n; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H2; only 1: destruct m as [| q]; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.292391	30	29	0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: easy; only 1: order_nz).
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	2.613738	1188	454	2.0.0.6	synth with cache (only 1: destruct 1; only 1: intros all; only 1: apply H; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pred_max	40	40.115207	42494	2476
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.max_r	40	30.971451	11603	5794	0.0.0.0.1.0.1.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: intros until m; only 1: revert m; only 1: induction n; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intros until m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: apply IHn; only 1: apply le_S_n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_le	40	40.350946	37711	4400
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	40.670642	18776	730
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.compare_0_r	40	0.382389	50	22	0.0.0.4	synth with cache (only 1: destruct n; only 1: rewrite compare_refl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	40.064719	8745	3501
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40	40.096737	30693	8969
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_0_r	40	0.088469	22	12	0.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.dec_ge	40	40.513841	44308	4118
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_le_mono	40	1.145732	273	142	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_lt	40	40.051672	11449	6087
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add	40	8.887146	2764	925	0.3.2.0.0.0.0.0.3.1.0	synth with cache (only 1: revert p q; only 1: intros _tmp_tactician0; only 1: intros until q; only 1: case sub_mask_spec; only 1: congruence; only 1: intros _tmp_tactician2; only 1: intros H; only 1: subst; only 1: congruence; only 1: intros H; only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.261105	42	29	0.0.1.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: apply Z2Nat.id; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	28.410568	9205	3762	0.1.0.0.0.0.0.1.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r; only 1: rewrite max_r; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy; only 1: rewrite max_l; only 1: rewrite max_l; only 1: easy; only 1: easy; only 1: apply add_le_mono_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.257244	25	24	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40	40.671411	50059	4296
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_add	40	40.158457	22525	2603
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.between_in_int	40	40.092130	25750	7004
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.diff	40	40.371941	70318	5057
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.double_spec	40	0.011933	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_mul	40	40.481637	22792	3608
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.383919	1179	312	1.0.0.1.0.4.4	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros n; only 1: constructor; only 1: simpl; only 1: eauto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pred	40	1.485487	373	124	0.0.0.0.0.0.0.0.6	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_eq_nil	40	3.696537	572	274	0.0.0.0.0.0.5.0	synth with cache (only 1: intros until l; only 1: induction l as [| x l]; only 1: simpl; only 1: intros H; only 1: auto; only 1: intros; only 1: simpl in H; only 1: discriminate).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pred_double_spec	40	0.066849	13	14	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.succ_double_spec	40	0.384719	54	19	0.7	synth with cache (only 1: nzsimpl; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.024731	1	2	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40	40.930822	32996	2293
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_map	40	9.433543	2968	1047	0.0.0.0.1.0.4.0.0.0.1.0	synth with cache (only 1: intros until l; only 1: induction l as [| a l IH]; only 1: intros a; only 1: intros H; only 1: auto; only 1: intros x'; only 1: intros H; only 1: simpl; only 1: firstorder; only 1: left; only 1: destruct H; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mul	40	3.852612	1081	507	0.2.0.0.0.0.0.0.0.0.1.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: intros; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40	40.653067	33825	1682
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor2	40	40.016303	4058	963
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.028475	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_pred	40	4.605956	2871	586	1.0.0.0.0.0.0.0.0.0.0.2.2.0.1	synth with cache (only 1: rewrite Zodd_equiv; only 1: intros _tmp_tactician0; only 1: unfold Z.pred; only 1: destruct _tmp_tactician0 as (m, _tmp_tactician2); only 1: intropattern subst -> _tmp_tactician2; only 1: destruct m as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy; only 1: destruct _tmp_tactician0 as [a| a| ]; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.152069	15	18	0.0.0.0	synth with cache (only 1: destr_bool; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40	40.518826	9173	2393
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	0.022494	10	5	3	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	1.689494	435	30	28	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40	40.469524	18623	3415
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.le_total_order	40	40.430049	15742	5688
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA1	40	0.080433	14	12	2.0	synth with cache (only 1: intros; only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	40.077320	23466	5386
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.131954	16	11	0.2	synth with cache (only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	2.674646	526	254	1.2.0.3.1	synth with cache (only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40	40.342870	11567	2874
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40	40.483560	13905	5697
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy_inf	40	40.157995	56317	3055
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Ztrichotomy	40	40.079740	27004	4700
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40	40.437293	13348	5816
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40	40.065026	18663	5261
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_3	40	40.428735	5805	2636
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_ind	40	14.111587	5506	1441	0.2.9.0.2	synth with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.Zred_factor4	40	40.030867	6162	1201
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40	40.424712	32883	468
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zne	40	40.108746	38654	3065
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_min	40	40.061691	17029	5393
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.508523	52	47	1.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40	40.393978	11593	4843
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA2	40	0.840031	290	141	0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.053312	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_reg	40	0.011815	1	2	0	synth with cache (only 1: apply Z.succ_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_reg	40	0.015815	1	2	0	synth with cache (only 1: apply Z.succ_lt_mono).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	0.208812	20	16	3	synth with cache (only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zgt	40	40.104778	38074	3717
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.dec_Zge	40	40.101793	36151	3153
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_lt_compat	40	31.771217	29212	2049	0.0.0.2.58	synth with cache (only 1: unfold Z.lt; only 1: destruct 1; only 1: rewrite <- Z.add_1_l; only 1: rewrite <- Z.add_1_l; only 1: apply Z.add_compare_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	40.576071	51698	7729
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	13.107229	4673	905	7.3.3.13	synth with cache (only 1: intros y'; only 1: intros Ey; only 1: intros Hyy'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.not_Zeq	40	40.070484	23760	2482
coq-tactician-stdlib.8.11.dev	Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	4.727134	2127	810	2.0.4.1.0.1	synth with cache (only 1: unfold not; only 1: intros P; only 1: intros notall; only 1: intros exnot; only 1: elim exnot; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	14.659265	9812	1861	2.1.4.3.4.8	synth with cache (only 1: intros n; only 1: intros until l; only 1: induction l; only 1: auto; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_succ	40	0.018726	1	2	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_le_succ	40	0.015460	1	2	0	synth with cache (only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	6.943674	6156	779	25.1	synth with cache (only 1: intros _tmp_tactician0; only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_le	40	0.141166	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_le	40	0.113068	1	2	0	synth with cache (only 1: apply Z.lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40	40.480694	17861	619
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_gt	40	0.159505	8	9	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	13.241950	4784	1720	1.0.0.0.0.1.0.0.0.1.3	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: intros _tmp_tactician0; only 1: clear _tmp_tactician0; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40	40.703969	53104	3659
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40	40.289946	20009	3993
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftin_last	40	21.211309	12421	2442	0.2.2.6.17.0	synth with cache (only 1: generalize dependent n; only 1: intros b; only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_succ_pred	40	0.032792	1	2	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_succ	40	5.323633	2018	508	15.0.4	synth with cache (only 1: intros _tmp_tactician0; only 1: unfold Z.succ; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_div2	40	2.644975	631	355	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| _tmp_tactician0| _tmp_tactician0]; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: intros a0; only 1: easy; only 1: intros Ha; only 1: easy; only 1: intros Hn; only 1: easy; only 1: destruct _tmp_tactician0 as [| | ]; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_1	40	0.056043	6	6	0.1	synth with cache (only 1: intros; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_2	40	0.022621	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.eqb_eq	40	40.403119	19730	5612
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3	40	0.087415	10	10	2	synth with cache (only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_succ_r	40	18.339429	6430	2487	1.0.1.6.4.0	synth with cache (only 1: rewrite mul_comm; only 1: revert q; only 1: unfold pow; only 1: intros; only 1: rewrite iter_succ; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.elements_3w	40	0.024861	1	2	0	synth with cache (only 1: exact (SortA_NoDupA (eqk_equiv elt) (ltk_strorder elt) (ltk_compat (elt:=elt)))).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.equal	40	40.594147	28927	4133
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_div2	40	0.266034	15	18	0.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_id	40	0.483579	127	66	1.0.0.0.0.1.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40	40.321709	10616	3471
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.new_var	40	40.130266	51150	3473
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	10.954732	6207	1643	7.5.0.2.0.0.0	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: inversion H1; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_2	40	40.742492	7984	3246
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.BoolTheory	40	1.235838	267	76	0.0.0.0.0.0.0.0.0.11	synth with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring.bool_eq_ok	40	0.031049	1	2	0	synth with cache (only 1: destr_bool).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40	40.206390	13978	4813
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	4.114579	1413	297	0.2.13.0	synth with cache (only 1: intros; only 1: inversion H; only 1: intuition; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_max	40	40.201648	25470	4735
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	24.122085	8083	2431	0.7.0.1.4.4	synth with cache (only 1: intros x1; only 1: intros b; only 1: intros H; only 1: intros x3; only 1: rewrite <- H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40	40.511745	18053	2484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	8.159352	1960	1026	0.0.0.3.3.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits; only 1: rewrite shiftl_spec; only 1: easy; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.595515	77	42	1.0.1.1	synth with cache (only 1: inversion_clear 1; only 1: inversion_clear H0; only 1: intuition; only 1: auto using eqke_equiv).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Peano_dec.le_unique	40	40.065203	18721	6198
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40	40.064025	18127	4504
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40	40.056254	10415	5380
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	11.901663	1421	539	10.3.1	synth with cache (only 1: red; only 1: unfold Pequiv; only 1: CRelationClasses.simpl_crelation).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_div	40	40.440321	10382	2304
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40	40.078594	10272	4999
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	7.090670	4071	774	0.2.0.1.16.2	synth with cache (only 1: intros until l; only 1: induction l; only 1: intros; only 1: constructor; only 1: intros x'; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_lt_or_eq	40	40.078755	25363	2789
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	20.599981	9380	1319	14.3.3.13	synth with cache (only 1: intros IH; only 1: intros Ey; only 1: intros z; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt_mono	40	10.182891	3557	1047	0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: destruct n as [| n]; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: destruct m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40	40.094930	15779	1424
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	5.109046	413	206	5.0.0.4	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: firstorder; only 1: firstorder; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	40.128282	46468	3590
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_xO_discr	40	40.152624	23119	4434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	5.472842	1427	724	4.3.0.0.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: apply add_shuffle0).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA5	40	2.843058	931	332	0.1.6.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros Hx; only 1: subst; only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_compare	40	8.852792	2338	789	0.1.0.0.0.1.0.1.0.0.0.0.2.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: easy; only 1: intros; only 1: destruct m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.odd_div2	40	40.293406	35879	4735
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3	40	40.671712	12447	4472
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.subset	40	40.697564	4831	1588
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	40.173952	15311	4702
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_In	40	40.418315	30282	3700
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_mod	40	40.071598	20983	2041
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.636718	19	16	0.0.0.1	synth with cache (only 1: intros x; only 1: intros e'; only 1: intros e; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40	40.211937	11682	2730
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40	40.186615	15536	4269
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.elements	40	40.265735	23714	3228
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_quot	40	40.091802	28772	4959
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40	40.052773	14568	4369
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_add	40	20.660810	5750	1410	0.0.1.9.4.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: destruct m; only 1: nzsimpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	5.388011	3916	474	0.0.0.1.0.7.4.13.0.0	synth with cache (only 1: destruct n; only 1: intros H; only 1: Z.order; only 1: simpl; only 1: destruct p; only 1: easy; only 1: destruct 1; only 1: easy; only 1: Z.order; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_neg_pos	40	0.069695	10	7	0.2	synth with cache (only 1: intros a; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	15.816042	3953	1793	0.0.3.0.0.2.0.0.1.1	synth with cache (only 1: intros p; only 1: intros n; only 1: intros m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: rewrite opp_add_distr; only 1: rewrite add_assoc; only 1: rewrite <- add_opp_r; only 1: rewrite opp_involutive; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_pos_0	40	0.036996	3	5	0.0	synth with cache (only 1: intros n; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_le_compat	40	40.066086	21154	3503
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	40.475943	11042	6645
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_pos	40	0.029146	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	5.828394	8261	205	89.0	synth with cache (only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zlt_neg_0	40	0.021078	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.eq_nat_decide	40	40.086202	27105	5562
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.is_empty_spec	40	40.436122	14960	3576
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40	40.082643	27045	6061
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40	40.085271	24459	4087
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	25.497330	8959	4156	0.0.0.5.0.1.0.1	synth with cache (only 1: intros n; only 1: intros b; only 1: intros Ha; only 1: intros LE; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_refl	40	0.639284	452	51	2.0.5.17	synth with cache (only 1: induction n; only 1: simpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40	40.201428	8326	3994
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40	40.126614	45986	1423
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_spec	40	40.116759	43760	2917
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40	40.671004	11635	3293
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA6	40	3.392777	1006	309	0.6.1.0.3	synth with cache (only 1: intros Hb; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: Z.nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40	40.422599	12240	3043
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zne_left	40	40.083609	29684	3308
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40	41.756398	15622	2701
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.mem_spec	40	40.373337	9580	3280
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zlt_left	40	40.044719	13811	2147
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zmax_left	40	0.580588	121	74	0.0.0.0.2.1	synth with cache (only 1: unfold Z.max; only 1: intros H; only 1: case Z.compare_spec; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_dec	40	40.059250	18092	3656
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40	40.763555	7143	2370
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40	40.047921	12966	5700
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_O_le	40	41.134855	12300	3195
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0.155094	31	19	0.2.1	synth with cache (only 1: intros inlist; only 1: intros Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div2	40	1.790414	575	125	1.0.2.2.6.1.0.1.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: easy; only 1: easy; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0.011509	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf	40	40.809437	8680	2497
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	12.991566	3307	1589	0.0.0.0.0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l; only 1: rewrite min_l; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy; only 1: rewrite min_r; only 1: rewrite min_r; only 1: easy; only 1: easy; only 1: rewrite <- add_le_mono_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zsucc_gt_compat	40	40.063433	22941	2160
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.ltb_lt	40	40.172535	20248	4417
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec	40	0.016759	1	2	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.Zcompare_rect	40	40.224336	43846	4227
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_ind	40	0.016937	1	2	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40	40.321429	7199	3261
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.leb_le	40	40.136061	17643	4539
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	0.251687	47	37	1.2.0	synth with cache (only 1: intros until m; only 1: intros Hm; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40	6.249883	1817	851	0.0.0.1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite div_pow2_bits; only 1: rewrite add_opp_r; only 1: easy; only 1: apply opp_nonneg_nonpos; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.gt_wf_rec	40	0.012209	1	2	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.815278	328	240	1.0.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b); only 1: apply Private_NZPow.pow_lt_mono_l; only 1: easy; only 1: order').
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40	40.125840	45458	9869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_rem	40	40.177393	14669	2696
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40	40.131999	6226	3444
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40	40.112982	24512	5957
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left	40	1.106599	225	125	0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: apply Z.le_0_sub; only 1: apply Z.le_succ_l; only 1: apply Z.lt_0_sub; only 1: Z.swap_greater; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_0_nat	40	3.075055	3990	285	2.1.23.6	synth with cache (only 1: intros m; only 1: destruct m; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_gt	40	0.061229	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.848267	136	91	0.0.0.0.0.0.0.1	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intros H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.create_spec	40	40.046753	13758	3336
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zgt_left_rev	40	0.057744	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.max_l	40	41.006400	8117	2508
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40	40.123717	11250	4417
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	10.451375	5106	677	16.12.14	synth with cache (only 1: intros Hop; only 1: intros f; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_spec	40	40.132617	51234	4710
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40	40.275530	7292	3521
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	0.032588	3	3	1	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40	40.057329	10412	4639
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec1	40	40.115320	35220	3633
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_eq_iff	40	40.241134	20775	5350
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40	40.380989	10932	5987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40	40.084830	7900	3505
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_Inf	40	40.559064	8259	2855
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.compare_sub	40	40.202178	21605	6096
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec1	40	0.877341	427	126	0.2.0.11	synth with cache (only 1: intros x; only 1: inversion 1; only 1: apply min_elt_spec1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_spec	40	40.043092	11553	2819
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40	40.183851	14807	3290
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_map	40	9.953221	2989	1352	2.4.0.0.0.5.2	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmax.Zpos_max_1	40	2.770409	1011	135	0.7.8.6	synth with cache (only 1: induction p; only 1: easy; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.add_sorted	40	40.060956	17067	4549
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40	40.084625	8562	3492
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_eq	40	0.981390	271	108	0.0.0.0.0.5	synth with cache (only 1: destruct m; only 1: destruct b; only 1: destruct b4; only 1: t_eqb; only 1: t_eqb; only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40	40.143922	12024	4825
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	40.462316	57850	2789
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40	40.228604	13754	5607
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40	40.265059	8330	2022
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_neq	40	0.069534	4	6	1	synth with cache (only 1: t_eqb).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_r	40	40.243473	14858	5680
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_compat	40	0.090183	4	6	1	synth with cache (only 1: Morphisms.solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rmatch	40	40.635314	57404	5034
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_1	40	40.443702	13878	4897
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	2.027949	419	215	0.1.0.0.0.0.0.3	synth with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Euclid.modulo	40	40.223547	12158	3758
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_2	40	40.109575	7067	3453
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_true	40	4.589697	1411	401	1.0.0.0.0.0.2.1.0.6	synth with cache (only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40	40.214368	10621	3894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40	40.065917	11326	5024
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_intro	40	13.556145	7393	1546	0.3.1.0.10.0.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct m; only 1: intros; only 1: trivial; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.234120	30	33	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40	40.234540	22588	4991
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40	40.136302	17028	4675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.lt_succ_r	40	40.570903	11561	4365
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.192832	29	29	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40	40.484250	21388	3112
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.bal_ok	40	40.116547	46283	1158
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.mul_reg_l	40	40.074260	15440	5937
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	11.898173	5370	550	32.13	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth	40	22.959836	13106	3555	0.0.2.1.5.1.0.4.0.0.1.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: destruct n; only 1: auto; only 1: simpl; only 1: reflexivity; only 1: intros ?; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as [H| H]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	3.857207	2835	563	4.0.4.14	synth with cache (only 1: intros H; only 1: intros y1; only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40	40.115015	19746	6625
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.233119	51	41	0.1.1.0	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40	40.765910	7246	2049
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40	40.738166	21384	3147
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch	40	40.647136	69305	3520
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec'	40	40.059217	10482	2142
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40	40.047743	10292	4880
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	40.795992	117571	1559
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40	40.112250	14133	5282
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	23.506996	14757	3592	2.1.0.0.0.4.0.13	synth with cache (only 1: intros until y; only 1: intros H1; only 1: induction l; only 1: auto with ordered_type; only 1: firstorder using StronglySorted_inv; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40	40.295242	56804	883
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	21.856983	10767	3440	0.7.0.13	synth with cache (only 1: intros y0; only 1: intros; only 1: rewrite H; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist1	40	40.053421	13895	4466
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.max_l	40	40.090672	26676	5916
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.226930	19	16	0.0.0.1	synth with cache (only 1: intros E; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_match	40	40.721990	128615	1776
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40	40.146643	7308	4059
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_spec	40	40.176516	36984	1807
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40	40.152864	14747	5628
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.011204	1	2	0	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.080419	19	12	2.1	synth with cache (only 1: induction 1; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0.011001	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	0.029098	6	6	0.1	synth with cache (only 1: intros l'; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40	40.199607	15535	3331
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0.009972	1	2	0	synth with cache (only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40	40.254056	14367	4432
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	0.035678	3	5	0.0	synth with cache (only 1: unfold eqk; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40	40.146583	22408	5838
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40	40.199321	21650	5232
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40	40.103907	9417	4393
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.693327	76	44	0.0.0.0.0.3	synth with cache (only 1: intros l'; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: rewrite InA_cons; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40	40.320873	55171	5499
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.filter	40	40.544853	41782	3858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40	40.113252	12756	6197
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	40.056940	14629	4640
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.min_l	40	40.044265	8329	2795
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40	40.094615	7353	3603
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.253953	27	27	0.0.2	synth with cache (only 1: intros l'; only 1: rewrite InA_app_iff; only 1: tauto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40	40.048016	11545	5085
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40	40.297795	8372	2681
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot2	40	6.447007	1683	600	0.0.0.13.2.0.0.0.1.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct p as [p| p| ]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	0.979333	352	81	11.4	synth with cache (only 1: induction 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_neg_r	40	20.162578	10087	2077	12.16.0	synth with cache (only 1: intros ?; only 1: rewrite <- (mul_0_r n)  at 1; only 1: false_hyp H nlt_0_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_not_In	40	40.040204	11512	2566
coq-tactician-stdlib.8.11.dev	Coq.Arith.Gt.gt_trans	40	40.180583	15387	3468
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec2	40	40.057662	18023	2784
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.peano_ind	40	40.112252	37085	6986
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	6.902553	2619	827	2.3.0.2.1.0.3.0.0	synth with cache (only 1: intros m; only 1: induction m; only 1: simpl; only 1: intros p; only 1: intros; only 1: auto; only 1: simpl in *; only 1: intros e'; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40	40.180087	56302	5004
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	1.884133	496	32	30	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_cases	40	40.143528	54079	4172
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40	41.045473	4320	1479
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_dec	40	40.169400	65944	5866
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40	40.281081	12862	3671
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	2.193652	671	278	0.0.3.0.4	synth with cache (only 1: intros n; only 1: unfold eqk; only 1: intros x; only 1: intros z; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	40.479208	35358	5921
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40	40.381503	17037	5728
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0.025978	3	3	1	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Logic.WeakFan.WeakFanTheorem	40	40.470749	84088	6718
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40	40.261424	9556	4871
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40	40.264232	18254	4405
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Elts.count_occ_inv_nil	40	40.558806	23408	4095
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40	40.188658	13707	4358
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	2.470548	550	305	0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: intros H; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: easy; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.Im_inv	40	32.713295	13770	4572	1.0.0.0.10.1	synth with cache (only 1: intros H'5; only 1: intros Y; only 1: intros x0; only 1: destruct 1; only 1: exists x; only 1: auto with sets).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40	40.415561	7918	2663
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.180790	7	10	0.0.0	synth with cache (only 1: unfold add; only 1: autorew; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	40.285776	9305	4904
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.for_all	40	40.783153	12840	2749
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40	40.224636	15622	2379
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40	40.230739	4370	2169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40	40.739591	50931	5386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40	40.291010	10063	1994
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	40.186248	10258	4257
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	40.363573	13389	3796
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40	40.482920	56358	2280
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0.292214	19	15	3	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_quot2	40	0.780404	83	67	2.0.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: rewrite Bool.negb_true_iff; only 1: intros Hn; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	40.084021	23676	6953
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem	40	1.134488	192	138	0.0.0.0.1.0.0	synth with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot; only 1: unfold rem; only 1: destruct quotrem; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	1.048590	351	92	0.3.9	synth with cache (only 1: intros n; only 1: induction n; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40	40.060489	19710	2822
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	3.914281	920	474	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: rewrite abs_pos; only 1: easy; only 1: nzsimpl; only 1: apply mul_comm).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	2.235801	1472	395	1.1.0.1.0.0.0.0.3.2	synth with cache (only 1: intros n; only 1: intros m; only 1: destruct n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap_gen	40	40.103429	16781	6168
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.multiset_twist2	40	40.052257	11457	3481
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	0.166772	20	18	0.0.0.1	synth with cache (only 1: unfold ltk; only 1: unfold eqke; only 1: intuition; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_xI	40	40.210196	18210	4299
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2	40	0.371351	31	34	1.0.0.0	synth with cache (only 1: intros Ha; only 1: boolify_even_odd; only 1: intros Hn; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	40.151510	17861	6901
coq-tactician-stdlib.8.11.dev	Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40	40.075994	22726	6191
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	12.346219	3792	1261	0.3.0.1.0.1.1.0.2.0	synth with cache (only 1: intros n; only 1: intros n'; only 1: intros p; only 1: nzinduct p; only 1: nzsimpl; only 1: easy; only 1: intros m; only 1: nzsimpl; only 1: rewrite pred_inj_wd; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_l	40	40.072936	29523	4543
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_intro2	40	40.204879	10880	4618
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40	40.584900	35904	1213
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	40.189258	13642	5820
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	40.190209	28058	4448
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_swap	40	40.322432	24770	6065
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_compare	40	40.207145	14825	5302
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	40.056814	13763	5748
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.386833	37	38	0.0.1.0	synth with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	40.446479	43425	4867
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	6.026968	3726	542	7.0.15.5	synth with cache (only 1: intros x1; only 1: intros Ha; only 1: intros; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.bi_induction	40	40.659134	20819	4913
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_quot2_neg	40	0.529396	53	47	2.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40	40.299904	19165	4948
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.BinList.MakeBinList.jump_add	40	40.520281	23306	4370
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	40.809732	8114	1952
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_succ	40	40.195237	33320	5944
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40	40.260352	13740	3298
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	40.197945	19222	5799
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	19.368079	9317	594	78	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40	40.310546	27126	3010
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40	40.332816	15931	5643
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_add	40	40.165302	15073	5513
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40	40.057118	14003	6166
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40	40.365681	44718	4295
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_lt	40	40.235458	14987	5410
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.097946	13	14	0.0.0.0	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.693563	115	100	0.2.0.0.0	synth with cache (only 1: intros a; only 1: intros b; only 1: intros _tmp_tactician0; only 1: apply div_str_pos; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	40.117940	13193	5548
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_3	40	40.429311	6544	3303
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40	40.034659	9167	868
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40	40.141009	13348	5238
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40	40.140106	50166	9731
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.579090	102	66	2.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	40.121867	10892	4252
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_app_distr	40	40.077457	18624	3965
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	1.232818	437	185	1.0.0.0.0.0.2.0	synth with cache (only 1: intros n; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: false_hyp H lt_irrefl; only 1: intros; only 1: rewrite pred_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40	40.182945	17270	4697
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_unit	40	40.112282	24903	4416
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	40.352934	33493	5403
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40	40.382682	11876	3534
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_complete	40	40.122994	47242	1968
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40	40.176810	13337	7142
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.iter_invariant	40	40.315963	28825	5705
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40	40.248255	12760	4384
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40	40.330953	8512	2987
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_involutive	40	40.219722	23003	4900
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40	40.386807	14002	4462
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.in_rev	40	40.299970	21970	5424
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim	40	40.214610	14557	4572
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	40.345233	4722	1724
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40	40.290441	6786	3895
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_even	40	40.644658	36386	4403
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext	40	3.181120	939	378	0.1.0.1.2.1.2	synth with cache (only 1: intros IH; only 1: intros _tmp_tactician0; only 1: intros n; only 1: intros m; only 1: intros until l; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListDec.Dec_in_Type.incl_dec	40	40.533002	42248	3894
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40	0.826452	182	95	0.0.1.2.0	synth with cache (only 1: intros n; only 1: rewrite shiftl_mul_pow2; only 1: nzsimpl'; only 1: easy; only 1: apply le_refl).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40	40.100241	14271	5040
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40	40.226629	49869	2757
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	40.115362	11800	5160
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_length	40	40.142556	36277	4636
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	40.150948	14543	4136
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_le	40	40.987961	6297	2491
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.exists_	40	40.250312	8633	2688
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40	40.067933	17412	8078
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.lt_succ_r	40	40.595514	10896	4079
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	40.400325	23565	6719
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_elim2	40	40.086994	8714	4450
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40	1.018059	147	89	0.0.0.0.0.2	synth with cache (only 1: intros n; only 1: bitwise; only 1: rewrite shiftr_spec; only 1: nzsimpl; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.647053	59	53	0.0.0.0.0.0	synth with cache (only 1: unfold gt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40	40.212789	8978	3752
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.min_elt_spec3	40	40.093760	28683	4434
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	0.327848	53	42	3.0.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	1.806670	276	156	0.0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm c); only 1: rewrite (mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40	40.273034	24637	4967
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	40.310399	35407	5965
coq-tactician-stdlib.8.11.dev	Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40	40.077086	19135	3556
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_Inf	40	40.358869	8170	3246
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.193688	24	20	3	synth with cache (only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_list_carac	40	40.479004	83314	5700
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40	40.239090	9687	4836
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40	40.165424	9754	5327
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	40.303840	8476	4960
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.pow_1_r	40	41.017075	19508	2556
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	36.631959	16771	5644	0.5.0.3.0.0.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: apply H; only 1: easy; only 1: rewrite testbit_neg_r; only 1: rewrite testbit_neg_r; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: intros Hn; only 1: intros m; only 1: rewrite <- H; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40	40.195729	10899	5703
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.188105	22	22	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.eq_incl	40	0.161016	26	25	0.0.0.0.0	synth with cache (only 1: intros x; only 1: intros m'; only 1: intros EQ; only 1: rewrite EQ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.flat_map_concat_map	40	25.090232	5517	2042	0.4.0.0.0.1.0.0.1.2	synth with cache (only 1: intros c; only 1: intros a; only 1: intros b; only 1: intros until l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	16.682502	2991	334	25.14	synth with cache (only 1: intros; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.to_nat_inj	40	41.103697	27350	1481
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Surjective_carac	40	40.314509	20154	4421
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_nth	40	40.218210	15841	5158
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40	40.079670	21519	5865
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	33.947709	14889	4451	0.0.0.0.1.0.0.2.4.4.0.0.0	synth with cache (only 1: intros m; only 1: induction m; only 1: intros sorted; only 1: intros belong1; only 1: auto; only 1: intuition; only 1: destruct a as (x', e'); only 1: simpl; only 1: inversion_clear Hm; only 1: case (X.compare x x'); only 1: intuition; only 1: auto; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	7.794963	1561	833	1.0.0.0.0.0.1.3	synth with cache (only 1: intros a; only 1: intros n; only 1: intros m; only 1: intros H; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec2	40	12.531879	5125	1285	0.0.0.0.0.2.1.16	synth with cache (only 1: intros ?; only 1: functional induction (min_elt s); only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intros H0; only 1: destruct (IHo H0 _x3); only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40	40.044884	10511	5254
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Lget_app_Some	40	40.342896	15012	6099
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	3.323120	403	229	4.0.0.0.1.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.square_spec	40	40.304954	25632	4998
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec1	40	40.087630	30697	3488
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmisc.iter_nat_of_Z	40	40.159418	6734	2737
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	40.339310	36315	5233
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_succ_r	40	40.257573	13329	4873
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40	40.643194	5000	2946
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_eq	40	0.996049	346	149	6.0.2	synth with cache (only 1: intros a; only 1: intros b; only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	3.564306	2244	309	0.1.3.8.10.0	synth with cache (only 1: constructor; only 1: intros _tmp_tactician0; only 1: destruct _tmp_tactician0 as []; only 1: compute; only 1: order; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose0	40	40.122758	41709	7323
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_le	40	0.050393	10	10	2	synth with cache (only 1: Z.order).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_succ_r	40	40.063007	9713	2189
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.elim_concl_lt	40	0.066836	11	12	2	synth with cache (only 1: intuition Z.order).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40	40.158859	17829	1708
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.059228	165	132	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	19.225957	12381	1715	1.0.0.0.1.11.1.1.1.2.8	synth with cache (only 1: destruct n as [| n| n]; only 1: intros H; only 1: apply Z.lt_le_pred; only 1: easy; only 1: destruct 1; only 1: intros H; only 1: destruct n; only 1: easy; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.126861	14	15	0.0.0.0	synth with cache (only 1: intros LT; only 1: intros EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40	40.239989	20469	4100
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40	40.044446	10667	6104
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.Zlt_le_add_1	40	0.476615	32	27	0.2.0	synth with cache (only 1: intros; only 1: apply Z.le_succ_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.Fin.L_sanity	40	40.377212	20723	2887
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.561446	48	31	0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40	40.269038	9481	4395
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.851386	885	93	2.4.25	synth with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: decide equality).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	4.321030	672	393	0.0.0.0.0.0.0.0.0.0.2.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40	40.197711	18912	1764
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xI	40	0.018919	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.148988	49	27	1.4	synth with cache (only 1: revert q; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.add_le	40	0.420650	80	59	0.0.3.0	synth with cache (only 1: intros; only 1: apply Z.add_nonneg_nonneg; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pow_neg_r	40	40.066306	15546	3299
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_append_rev	40	40.252393	31283	5447
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	3.166817	397	262	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: split; only 1: easy; only 1: easy; only 1: split; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.130864	3	5	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	3.999269	1170	430	5.0.0.0.0.0.0.0.1	synth with cache (only 1: cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: apply H; only 1: easy; only 1: intros n; only 1: intros H; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.rev_alt	40	40.326975	36752	4199
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40	40.510427	15788	1567
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.289246	178	151	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	1.480093	703	38	36	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_ge	40	40.479821	17212	4313
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40	40.049011	10889	4718
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.118892	3	5	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	5.153033	1978	581	0.9.0.1.1	synth with cache (only 1: intros m; only 1: intros n; only 1: intros p; only 1: rewrite <- add_opp_r; only 1: apply add_move_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.N2Z.inj_pow	40	40.098771	15456	3101
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	3.359876	697	395	0.0.0.3.1.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.get_empty	40	0.957583	586	119	3.2.0.4.8	synth with cache (only 1: intros; only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40	40.099449	31365	4711
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40	40.188610	41790	5106
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40	40.193580	6644	2355
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	0.918848	88	73	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	40.053830	14423	6160
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0.066431	1	2	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zcompare_plus_compat	40	40.182122	16548	4503
coq-tactician-stdlib.8.11.dev	Coq.Logic.FinFun.Endo_Injective_Surjective	40	40.221436	16445	5629
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	6.926778	7913	527	3.3.5.4.2.0.0.43.3.7	synth with cache (only 1: constructor; only 1: intros y'; only 1: red; only 1: auto with ordered_type; only 1: unfold eqk; only 1: auto with ordered_type; only 1: intros f; only 1: intros y; only 1: intros H; only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40	40.162883	9534	4264
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	40.135208	14243	4768
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0.071520	1	2	0	synth with cache (only 1: mrewrite).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40	40.168248	11699	3830
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.ltb_nlt	40	40.170746	41364	3833
coq-tactician-stdlib.8.11.dev	Coq.micromega.Refl.make_conj_in	40	40.086870	9510	2977
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.776274	509	272	0.0.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	40.119504	29321	5202
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.016326	1	2	0	synth with cache (only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	40.297404	8421	4939
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40	40.061674	18649	4005
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	0.690757	79	25	2.3.2	synth with cache (only 1: intros n; only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_spec	40	40.239485	16894	6475
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	40.070240	20158	4998
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_spec	40	40.053193	17762	1791
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40	40.286562	15722	4545
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	40.344124	6386	3918
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40	40.662400	40361	6331
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.115908	3	5	0.0	synth with cache (only 1: intros ?; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Rtauto.with_env.compose1	40	40.086700	28007	8312
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40	40.302186	15773	5450
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_inj	40	40.363005	18787	3561
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_nth	40	40.201591	14654	3583
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40	40.645944	5597	2522
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_inj	40	40.293071	20204	4797
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40	40.655346	26263	4309
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40	40.319146	19993	4818
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.112535	3	5	0.0	synth with cache (only 1: intros; only 1: ring).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.227542	31	27	0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.forallb_app	40	1.704950	540	235	1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until l1; only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.fold_right_app	40	5.635849	1709	808	0.0.0.0.0.1.1.1.4	synth with cache (only 1: intros R2; only 1: intros until l; only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListOps.concat_app	40	40.334549	32791	5172
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.BEQ.eq_dec	40
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrt_spec	40	40.068351	19984	4367
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.057645	7	9	0.0.0	synth with cache (only 1: unfold eqk; only 1: unfold ltk; only 1: auto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0.021516	1	2	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	27.286814	7830	3085	0.5.2.0.0.0.0.1.1	synth with cache (only 1: intros IH; only 1: intros n; only 1: cases n; only 1: intros H; only 1: elim H; only 1: easy; only 1: intros; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.succ_double_lt	40	40.509999	13756	4014
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0.015468	1	2	0	synth with cache (only 1: eauto with ordered_type).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zlt_cases	40	40.116618	43493	3984
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.539334	86	58	0.2.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40	40.297206	15010	5150
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40	40.350659	16168	4881
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.log2_nonpos	40	0.433691	98	47	0.2.1.0.0	synth with cache (only 1: intros H; only 1: le_elim H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: rewrite H; only 1: apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.existsb_app	40	4.654206	1833	529	4.0.3.0.0.0.0.5	synth with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros _tmp_tactician0; only 1: rewrite IHl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40	40.515615	10458	2785
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zpow_alt.Piter_op_square	40	40.118849	17307	2840
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id_abs	40	0.179085	24	16	0.0.0.2	synth with cache (only 1: destruct n; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Ztac.mul_le	40	3.268310	589	345	0.0.0.0.0.2.1	synth with cache (only 1: intros n; only 1: intros q; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40	40.063646	14713	7650
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.id	40	0.125230	13	14	0.0.0.0	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40	40.216876	16412	6248
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40	40.111645	38004	4900
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40	40.145426	53161	6810
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_0	40	0.067027	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40	40.248189	7827	4047
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40	40.163313	17413	4041
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.057016	3	5	0.0	synth with cache (only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40	40.390031	21484	4278
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorEq.CAST.cast	40	1.389401	353	170	9	synth with cache (only 1: congruence).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rect	40	41.820863	3736	1312
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.029134	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40	40.043328	9455	4138
coq-tactician-stdlib.8.11.dev	Coq.rtauto.Bintree.Store.Tget_Tadd	40	40.701620	21517	4273
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	40.237597	15733	5184
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	6.506322	1273	951	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	1.289301	569	141	1.6.0.8	synth with cache (only 1: induction 1; only 1: left; only 1: firstorder; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	3.080915	916	430	0.0.0.0.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: rewrite <- lt_pred_le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	7.019564	1528	697	0.0.0.2.2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite (mul_comm _ c); only 1: rewrite mul_mod_distr_l; only 1: easy; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_le	40	40.153407	16458	2508
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40	40.266139	7515	2249
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	3.111486	616	364	0.0.0.4.0.0.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: rewrite Private_NZDiv.mod_small_iff; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	40.163332	57639	5802
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.082344	7	9	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40	40.091312	20576	4038
coq-tactician-stdlib.8.11.dev	Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.349877	63	33	3.1.1	synth with cache (only 1: revert n; only 1: intros a; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40	40.658419	44521	3471
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj	40	40.052379	13885	4703
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	3.889036	1006	487	1.0.4.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	40.096678	8914	4898
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40	40.081637	9800	2915
coq-tactician-stdlib.8.11.dev	Coq.Sets.Image.Image.not_injective_elim	40	40.331497	36771	5375
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40	40.205724	10828	3726
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.720193	81	32	0.0.0.0.1.4	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_le_iff	40	0.190295	22	23	1.1	synth with cache (only 1: unfold le; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40	40.041376	10062	5807
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.795947	15	17	0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_Sn	40	40.127829	29643	3702
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	1.142768	317	164	0.3.0.1.0	synth with cache (only 1: intros n; only 1: intros p; only 1: rewrite mul_opp_l; only 1: rewrite mul_opp_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_iff	40	40.043956	10237	4457
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	3.571573	704	338	3.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until m; only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt_iff	40	0.190688	52	33	0.0.0.2.0	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.626376	47	35	0.0.2.0	synth with cache (only 1: unfold lt; only 1: split; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	40.063901	17736	2631
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40	40.034214	5369	386
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40	11.732241	955	232	0.0.0.0.1.0.0.0.8.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_nth_error	40	40.051681	13450	4950
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40	40.758208	6034	1477
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.double_le_mono	40	40.474328	23214	3723
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons2	40	0.462058	55	48	0.0.0.0.0.0	synth with cache (only 1: simpl; only 1: intros _tmp_tactician0; only 1: intropattern subst -> _tmp_tactician0; only 1: intros _tmp_tactician2; only 1: intropattern subst -> _tmp_tactician2; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_odd_eqn	40	29.282160	13237	1001	0.0.0.0.3.27.0.0.0.5.4.4.28	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40	40.052159	14177	5485
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_gt	40	0.033218	1	2	0	synth with cache (only 1: apply gt_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.492014	30	30	0.0.0.0.0	synth with cache (only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Env.S.jump_simpl	40	40.142435	53238	4039
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	10.938745	23515	1000	89	synth with cache (only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	12.153315	2524	1851	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	1.254181	194	132	0.0.0.3.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.exists_in_int	40	40.101434	33859	5975
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.log2_spec	40	40.056766	18138	2262
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le	40	0.167533	25	20	0.0.0.0.0	synth with cache (only 1: unfold le; only 1: unfold ge; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ge_le_iff	40	0.287258	20	17	0.0.0.1	synth with cache (only 1: apply not_iff_compat; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40	40.199302	18043	5016
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40	40.056635	12915	4494
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_ge	40	0.018869	1	2	0	synth with cache (only 1: apply ge_le_iff).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40	40.269565	35275	8053
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.032579	3	3	1	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.588374	245	160	0.0.0.2.1.0	synth with cache (only 1: intros; only 1: rewrite mul_mod_idemp_r; only 1: reflexivity; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0.034959	1	2	0	synth with cache (only 1: exact (rmatch _ _ _)).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.gt_lt	40	1.182475	339	156	0.2.0.0.1.0.1.1	synth with cache (only 1: unfold gt; only 1: unfold lt; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40	9.347326	2115	967	0.0.0.0.5.0.3	synth with cache (only 1: intros a0; only 1: rewrite <- shiftl_opp_r; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40	40.036082	4956	1821
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	0.117557	15	15	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term	40	40.282792	37989	5733
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	10.140288	1916	1379	0.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	40.417473	30313	4554
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	40.389565	22719	5853
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40	40.057693	15417	4817
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_sub	40	40.091901	31453	4039
coq-tactician-stdlib.8.11.dev	Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40	40.461959	12280	2161
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40	40.115869	10490	6118
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.even_spec	40	40.175672	28909	6431
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zcompare.Zplus_compare_compat	40	40.098534	24959	2790
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_sub	40	40.066140	18996	4348
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40	40.067116	23219	3575
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	1.749643	319	98	8.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.Zth	40	40.056515	5198	1696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.even_spec	40	40.060686	15514	2243
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.031954	4	5	1	synth with cache (only 1: inversion 1).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Int.MoreInt.leb_nle	40	40.071202	18770	4418
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	1.479538	228	152	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').
coq-tactician-stdlib.8.11.dev	Coq.micromega.Tauto.S.radd_term_term'	40	40.241198	22900	3399
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.720764	1943	692	1.2.6.2	synth with cache (only 1: intros m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply neq_sym; only 1: apply neq_succ_diag_l).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	6.659153	2811	479	0.1.5.5.0.7.1	synth with cache (only 1: intros until l; only 1: induction l; only 1: constructor; only 1: simpl; only 1: rewrite <- IHl; only 1: rewrite IHl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40	40.048525	15094	2191
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_pred	40	39.639736	31930	3494	0.0.1.4.0.10.12.19.0	synth with cache (only 1: boolify_even_odd; only 1: intros m; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: destruct m; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40	40.100391	33446	5390
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	2.252334	439	217	0.0.3.2.0.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l; only 1: rewrite Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40	40.085489	30746	3932
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40	40.028713	4305	379
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_compat	40	40.233598	45012	4484
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40	40.310239	8829	4899
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.map_rev	40	40.270017	31160	4462
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.Backport_OT.compare	40	40.595012	60668	5221
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_lt_le_compat	40	0.084300	10	10	2	synth with cache (only 1: apply Nat.add_le_mono).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_add	40	40.067016	16546	3384	1.0.0.0.0.0.2.1.0.1.2.11	synth with cache (only 1: unfold Z.le; only 1: destruct n; only 1: intros b; only 1: trivial; only 1: intros b; only 1: intros _tmp_tactician0; only 1: destruct m; only 1: easy; only 1: simpl; only 1: f_equal; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40	40.547933	48983	4158
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40	40.551298	53958	4244
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40	40.637888	114054	2914
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40	40.167528	18571	4583
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	40.023642	5360	2567
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.const_nth	40	6.780354	6993	457	1.1.0.62	synth with cache (only 1: induction p; only 1: easy; only 1: generalize dependent n; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ	40	3.829750	1648	363	0.1.0.0.1.1.4.1.3.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: intros Hn; only 1: simpl; only 1: f_equal; only 1: destruct p; only 1: split; only 1: easy; only 1: easy; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40	40.044570	10697	3773
coq-tactician-stdlib.8.11.dev	Coq.Arith.Minus.le_plus_minus_r	40	40.226862	20294	5817
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40	40.025847	7549	841
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.415627	212	133	0.0.2.2.0	synth with cache (only 1: intros; only 1: rewrite (add_comm a); only 1: rewrite (add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.plus_le_lt_compat	40	40.099771	43998	2762
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_add	40	3.890600	1046	534	0.2.0.1.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: trivial; only 1: trivial; only 1: destruct 2; only 1: easy; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.count_occ_map	40	40.418330	66467	1472
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_refl	40	8.261156	2138	486	1.3.1.0.1.1.0.2.11	synth with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: rewrite IHp; only 1: easy; only 1: simpl; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	12.531387	2535	1357	1.1.0.0.0.2.0.0.0.1	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: split; only 1: easy'; only 1: easy; only 1: split; only 1: easy'; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_spec	40	40.047174	10990	2582
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	10.405821	6349	1202	0.0.13.0.5	synth with cache (only 1: intros ?; only 1: intros l'; only 1: rewrite H; only 1: compute; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40	40.021652	5301	2566
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40	40.282011	11466	3753
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40	40.183233	9073	4216
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40	40.052271	12806	4854
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40	40.047771	11869	5270
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Map.in_flat_map	40	40.286687	19763	4619
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zquot2_opp	40	15.607583	9857	1143	1.0.0.0.4.3.0.0.0.20.0.0.15	synth with cache (only 1: destruct n; only 1: Z.nzsimpl; only 1: trivial; only 1: induction p; only 1: easy; only 1: easy; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: easy; only 1: simpl; only 1: trivial; only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_sub	40	40.135531	45939	4953
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.divmod_spec	40	40.518155	8004	2811
coq-tactician-stdlib.8.11.dev	Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40	40.215258	19195	4874
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.odd_spec	40	40.753615	11468	2464
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist2	40	16.639762	3450	1370	0.1.0.1.0.0.0.0.0.0.2.2	synth with cache (only 1: unfold meq; only 1: intros until x; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_gt	40	40.614257	18056	4942
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_le	40	40.092730	10244	5699
coq-tactician-stdlib.8.11.dev	Coq.Classes.EquivDec.list_eqdec_obligation_5	40	40.606591	14043	455
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.pow_succ_r	40	40.461560	15514	1947
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0.034275	3	3	1	synth with cache (only 1: apply Nat.compare_lt_iff).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Wf_Z.Z_of_nat_prop	40	40.083971	26834	6220
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.odd_spec	40	40.079935	22864	4022
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0.025445	1	2	0	synth with cache (only 1: apply Nat.compare_gt_iff).
coq-tactician-stdlib.8.11.dev	Coq.Arith.Compare_dec.nat_compare_ge	40	40.528575	11664	6217
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.eqb_eq	40	40.281535	18609	5584
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.of_to_nat	40	40.132320	56203	1292
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40	40.435202	50112	4675
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_le	40	40.062801	17892	4584
coq-tactician-stdlib.8.11.dev	Coq.Arith.Between.Between.in_int_exists	40	40.533209	18880	5318
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_pred	40	40.746821	92088	1669
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	6.400579	1362	1039	0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros b; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40	40.107939	37991	2273
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_ex	40	1.611141	419	185	4.1.1.0.1	synth with cache (only 1: intros; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: rewrite Zodd_even_bool; only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy).
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_false	40	24.726436	23202	2337	1.4.0.0.6.3.0.2.19	synth with cache (only 1: Nat.double_induct n m; only 1: intros a; only 1: intros Ha; only 1: intros H1; only 1: subst; only 1: easy; only 1: intros; only 1: easy; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40	40.063612	22041	1869
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zge_cases	40	40.195344	83574	3267
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.eqb_false	40
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.273022	19	16	0.2	synth with cache (only 1: inversion 1; only 1: apply pred_0).
coq-tactician-stdlib.8.11.dev	Coq.NArith.Nnat.N2Nat.inj_div2	40	40.541228	29611	4788
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_eucl_eq	40	40.155740	58255	4622
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.div_mod	40	40.265157	17885	3354
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.152054	44	21	0.0.4	synth with cache (only 1: intros EQ; only 1: apply Z.leb_le; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zodd_ex	40	0.345748	45	31	0.0.2.0	synth with cache (only 1: exists (Z.div2 n); only 1: destruct n as [| [| | ]| [| | ]]; simpl; try easy; only 1: rewrite Pos.pred_double_succ; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_le	40	1.509286	191	151	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.le; only 1: unfold N.le; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_lt	40	40.110270	14522	3431
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.partition	40	40.256130	21678	4419
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.mem_node	40	40.073000	18516	5001
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	40.096327	32098	4573
coq-tactician-stdlib.8.11.dev	Coq.Strings.Byte.nat.to_of_nat	40	40.047741	18372	1416
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40	40.085215	11605	968
coq-tactician-stdlib.8.11.dev	Coq.PArith.Pnat.Pos2Nat.inj_pred	40	17.849457	10628	1611	4.3.11.0.1.4.2.3.0.1	synth with cache (only 1: induction p using peano_ind; only 1: intros q; only 1: simpl; only 1: unfold to_nat; only 1: easy; only 1: intros; only 1: rewrite inj_succ; only 1: destruct (is_succ p) as (n, _tmp_tactician0); only 1: rewrite Nat.pred_succ; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	4.723520	1109	558	0.0.0.0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intros ?; only 1: intros l'; only 1: intros Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: transitivity (length l'); only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.concat_map	40	40.087261	26077	5847
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	6.191117	1296	991	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40	40.124216	46708	5996
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40	40.411843	11540	773
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40	40.841225	29591	3573
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	40.051786	14629	3049
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40	40.502485	12446	3215
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40	40.820846	14741	2744
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.943673	162	114	0.0.0.0.0.0.0.0	synth with cache (only 1: intros Hn; only 1: intros Hm; only 1: unfold Z.lt; only 1: unfold N.lt; only 1: rewrite Z2N.inj_compare; only 1: easy; only 1: trivial; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA3	40	40.065557	20657	3622
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA4	40	40.057601	19019	1858
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	6.376870	1294	947	0.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros a; only 1: intros a'; only 1: intros Ha; only 1: intros n; only 1: intros b'; only 1: intros Hb; only 1: bitwise; only 1: rewrite Ha; only 1: rewrite Hb; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ	40	40.056679	20105	2413
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Znot_le_succ	40	40.067110	24929	2601
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40	40.035273	7312	1961
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40	40.469193	12371	4725
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0.013022	1	2	0	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.081531	7	9	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_le_succ	40	40.054979	17712	3238
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_compat_r	40	0.023199	3	3	1	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_l	40	0.019897	3	3	1	synth with cache (only 1: apply Z.add_le_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40	40.685824	7233	3772
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_le_reg_r	40	0.020630	3	3	1	synth with cache (only 1: apply Z.add_le_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_gt_succ	40	40.082573	28364	3071
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0.034797	6	4	2	synth with cache (only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0.038895	10	5	3	synth with cache (only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_refl	40	40.163835	64155	4192
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_min	40	40.104154	34966	3804
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.093089	21	9	0.4	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	40.370174	47379	2946
coq-tactician-stdlib.8.11.dev	Coq.Strings.HexString.Raw.to_N_of_pos	40	0.116009	28	8	6	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_reg_r	40	0.079267	7	7	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.partition_cons1	40	10.865343	3940	896	1.0.1.9.2.0.1	synth with cache (only 1: firstorder; only 1: simpl; only 1: case_eq (f a); only 1: rewrite H; only 1: intros; only 1: reflexivity; only 1: intuition congruence).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zle_succ_le	40	40.093385	31546	3959
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40	40.052046	3265	1065
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_pred	40	40.128193	49314	3431
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40	40.696714	12384	1511
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40	40.403732	5577	1804
coq-tactician-stdlib.8.11.dev	Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40	41.339278	14350	2758
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.176584	13	10	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40	40.373031	54273	2610
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.112823	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_max	40	40.066946	21119	3410
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0.017216	1	2	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Vectors.VectorSpec.shiftrepeat_last	40	40.433299	10108	4014
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40	40.028669	8383	1657
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40	40.670278	5039	2333
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.fold_1	40	40.187026	24738	4828
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_1_l	40	5.150180	2922	694	7.0.0.0.1.0.2.1.3	synth with cache (only 1: induction p using peano_rect; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_refl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40	40.078119	23544	6033
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.ltb_lt	40	40.158704	20344	4514
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_1_succ	40	0.344413	84	51	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: easy; only 1: easy; only 1: rewrite lt_iff_add; only 1: exists 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.nlt_1_r	40	3.504809	1160	381	6.0.0.1.3.0.1	synth with cache (only 1: rewrite lt_iff_add; only 1: rewrite <- sub_mask_neg_iff; only 1: destruct p; only 1: simpl; only 1: discriminate; only 1: discriminate; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_nlt	40	0.245896	42	31	0.0.0.1.0	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: rewrite compare_antisym; only 1: rewrite CompOpp_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	33.654599	29173	4690	15.4.16.8	synth with cache (only 1: intros until x; only 1: intros i'; only 1: intros y; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Strings.OctalString.Raw.to_N_of_pos	40	0.093227	21	7	5	synth with cache (only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_nle	40	0.501074	66	51	0.1.2	synth with cache (only 1: unfold lt; only 1: rewrite compare_nge_iff; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40	40.030704	3933	1672
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div_mod	40	40.118036	43502	4782
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_subset	40	40.101407	38246	4168
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40	40.032068	6917	1646
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	9.821203	2661	1157	0.0.4.4.1.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l; only 1: rewrite Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul	40	12.220333	3538	1097	0.0.0.0.0.0.2.0.1.3.0.0.0.1.1	synth with cache (only 1: destruct n; only 1: N.nzsimpl; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40	40.427097	47003	3952
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_le_incl	40	1.085465	197	102	0.0.0.1.0.3	synth with cache (only 1: unfold lt; only 1: unfold le; only 1: destruct compare; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	40.051153	19111	1651
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	40.102584	10994	5477
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_div	40	40.070042	14580	4987
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40	40.293114	14240	4917
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40	22.653603	6277	2783	0.0.2.3.3.5	synth with cache (only 1: intros H; only 1: bitwise; only 1: rewrite shiftl_spec; only 1: rewrite bits_0; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	25.602940	8510	2223	0.2.0.0.0.8.2.1	synth with cache (only 1: intros n; only 1: intros _tmp_tactician2; only 1: destruct n; only 1: intuition; only 1: intuition; only 1: easy; only 1: intuition; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40	40.044019	8882	4317
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40	40.223855	22953	3725
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	40.218127	20832	5713
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	40.303736	12467	1944
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.151290	25	23	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.env_morph	40	40.104625	34782	1528
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	40.169621	12425	4269
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	40.045902	16677	1478
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.square_spec	40	40.488707	27710	3169
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40	40.151052	17070	5612
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.succ_le_mono	40	0.707977	72	38	0.0.0.0.1.2	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_succ_succ; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40	40.071019	20371	3573
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40	40.056161	10316	4951
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_mod	40	40.050238	11514	2890
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40	40.050079	12168	5167
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40	40.065259	19774	5158
coq-tactician-stdlib.8.11.dev	Coq.Arith.Div2.div2_odd	40	40.636890	32503	4293
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Bool.filter_app	40	18.110034	11492	2187	3.1.12.4.1.0.4.1.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case_eq (f a); only 1: simpl; only 1: rewrite IHl; only 1: auto; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.div_mod	40	0.351965	53	46	0.0.0.0.0.0	synth with cache (only 1: intros IH; only 1: generalize (div_eucl_spec a b); only 1: unfold div; only 1: unfold modulo; only 1: destruct div_eucl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_testbit	40	29.737073	8031	2134	0.1.0.0.0.2.9.0.0.0.0.0.0.3.1.0.3	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: destruct a as [| a]; only 1: easy; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: easy; only 1: trivial; only 1: destruct 1; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.ArithRing.natSRth	40	40.028019	7628	1734
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_quot	40	40.036469	6380	2674
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	5.029429	1756	469	0.7.4.0.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros H1; only 1: intros H2; only 1: apply Z.mul_le_mono_nonneg_r; only 1: Z.Private_Tac.order; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.leb_le	40	40.061716	17200	5498
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0.015711	1	2	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.074087	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40	40.038362	2603	1109
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40	40.605722	25324	2063
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40	40.266090	12551	4794
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xO_xI	40	21.565063	9866	3301	5.3.11.1	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40	19.226738	8202	2418	1.2.1.1.0.0.0.0.0.0.0.6	synth with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: rewrite <- lxor_spec; only 1: rewrite H; only 1: rewrite bits_0; only 1: easy; only 1: intros Ha; only 1: bitwise; only 1: rewrite Ha; only 1: apply xorb_nilpotent).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	40.074345	13962	5174
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	2.774333	888	398	0.1.2.0.1.2.0.3	synth with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy; only 1: simpl; only 1: rewrite Pos.add_1_r; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.627296	145	57	0.0.2.0.3	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_r; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_xI_xO	40	22.011415	10923	3164	5.6.4.1.5	synth with cache (only 1: change p~1 with (p~0 + 1); only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_rem	40	40.070032	19445	5414
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	40.080648	27470	2614
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_log2	40	40.573989	26254	4501
coq-tactician-stdlib.8.11.dev	Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40	40.042418	13693	1513
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_0	40	0.024204	1	2	0	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	0.141870	15	16	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	40.275441	11972	4556
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	40.062401	19220	4089
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext	40	0.477224	87	59	0.0.0.2.0	synth with cache (only 1: intros f; only 1: intros until l; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose	40	40.494451	55679	3151
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in	40	40.057959	13453	4970
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40	40.298980	31516	4329
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.225683	21	14	0.2.0	synth with cache (only 1: destruct n; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40	40.295144	19696	6439
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.909805	196	76	0.0.5.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: apply Z.mul_le_mono_nonneg_l; only 1: easy; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.006127	1021	162	1.12.3	synth with cache (only 1: intros H; only 1: bitwise; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.171015	25	22	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40	15.932659	4740	1935	0.0.4.5.0.0.0.0	synth with cache (only 1: intros Ha; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: discriminate Hb; only 1: unfold modulo; only 1: apply Z.mod_pos_bound; only 1: easy; only 1: discriminate Hb).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.451970	134	59	4.1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40	40.042720	9941	4921
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.158913	25	24	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.max_elt_spec2	40	40.040980	9168	4041
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	40.082451	7106	3431
coq-tactician-stdlib.8.11.dev	Coq.omega.OmegaLemmas.OMEGA7	40	40.041437	11921	3389
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zge_left	40	40.048057	13203	3006
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.filter_ext_in_iff	40	7.477814	2725	945	0.0.0.0.0.0.0.0.3.2.0.0	synth with cache (only 1: intros f; only 1: intros g; only 1: intros r; only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: assumption; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.169706	25	22	0.0.0.0.0	synth with cache (only 1: intros until x; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	1.191000	176	65	0.5.0.0.0	synth with cache (only 1: intros x; only 1: intros y; only 1: intros H; only 1: rewrite H; only 1: rrefl).
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.lt_compat	40	0.679056	84	82	4.0	synth with cache (only 1: red; only 1: solve_proper).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40	40.071504	14703	3031
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_rec1	40	40.418243	40361	6198
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40	40.115463	12039	2686
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.eqb_sym	40	40.133523	38387	2320
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	2.548397	341	242	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: easy; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	40.104282	35755	5535
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0.779239	139	81	4.0.0.0	synth with cache (only 1: intros _tmp_tactician0; only 1: intros l'; only 1: intropattern subst <- _tmp_tactician0; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40	40.088926	32128	2538
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.163108	269	81	6.1.1	synth with cache (only 1: intros m; only 1: bitwise; only 1: split).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.ins_ok	40	40.034903	8203	805
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.603868	242	171	1.0.0.0.0.0.0.0.1	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n); only 1: rewrite <- (id m); only 1: rewrite H; only 1: easy; only 1: intros H; only 1: subst; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	40.046060	9739	6883
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.eq_dec	40	40.072216	24810	4291
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40	40.079808	27925	3808
coq-tactician-stdlib.8.11.dev	Coq.Arith.Mult.mult_le_compat_r	40	40.430651	25282	3865
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40	40.414130	11006	4067
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40	40.050823	10935	5355
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40	40.247355	64998	3838
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_l	40	40.019890	5694	1248
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.id	40	2.253934	546	109	5.0.0.18	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: apply SuccNat2Pos.id_succ).
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40	40.180965	76761	5130
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40	40.091834	31300	5002
coq-tactician-stdlib.8.11.dev	Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40	40.090469	29838	4212
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_rec	40	40.459753	22464	4787
coq-tactician-stdlib.8.11.dev	Coq.ZArith.auxiliary.Zle_mult_approx	40	40.064533	15384	3653
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40	40.070170	24364	2693
coq-tactician-stdlib.8.11.dev	Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40	40.071088	25962	4119
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zplus_gt_compat_r	40	40.220402	6273	1312
coq-tactician-stdlib.8.11.dev	Coq.Arith.EqNat.beq_nat_eq	40	12.872405	7411	1397	1.0.0.0.0.0.2.1.0.8.4	synth with cache (only 1: intros until m; only 1: Nat.double_induct n m; only 1: simpl; only 1: intros until m; only 1: destruct m; only 1: easy; only 1: easy; only 1: intros n; only 1: easy; only 1: intros; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40	2.865312	1021	278	4.0.0.0.0.0.0.3.2.0.2	synth with cache (only 1: intros until s1; only 1: induction s1; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_spec	40	40.049505	9647	2410
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.094372	260	140	0.0.0.1.0.0.1	synth with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40	40.242731	33165	444
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40	40.642036	11558	3144
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.098898	7	7	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.095268	7	7	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.choose_spec3	40	40.054043	15163	5370
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0.024758	1	2	0	synth with cache (only 1: reflexivity).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0.029670	1	2	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	40.053074	13391	4774
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40	40.053386	12444	5105
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40	40.073617	12871	2944
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zeven.Zeven_2p	40	13.419263	5271	985	0.0.0.0.0.0.0.0.0.0.0.0.2.0.1.1.11	synth with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: simpl; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.117883	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40	40.054649	13639	3959
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Z2N.inj_pow	40	40.040684	7855	2334
coq-tactician-stdlib.8.11.dev	Coq.Arith.Plus.le_plus_l	40	16.956734	9268	1766	7.4.0.0.0.11.0.0.2.0.13	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: induction n; only 1: easy; only 1: simpl; only 1: Nat.nzsimpl; only 1: constructor; only 1: intros m; only 1: intros IH; only 1: Nat.nzsimpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ext_in_map	40	40.116778	16010	5482
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetGenTree.Props.elements_spec1'	40	40.076408	24325	4208
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.116979	3	5	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	26.564596	11060	3374	0.1.0.1.0.0.3.0.0.0.4	synth with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intros y; only 1: intros m; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite pred_succ; only 1: apply le_succ_l; only 1: order).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40	40.055526	12964	5533
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0.792169	7	5	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	1.566419	743	241	0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: intros l; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40	40.075520	21748	4554
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40	40.367553	16880	4697
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40	40.097733	13357	5582
coq-tactician-stdlib.8.11.dev	Coq.Strings.Ascii.ascii_N_embedding	40	40.172678	73924	3263
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.139445	25	17	4	synth with cache (only 1: eauto with *).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.179429	33	25	0.0.0.0.1	synth with cache (only 1: intros until s; only 1: induction s as [| l IHl o r IHr]; only 1: reflexivity; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	10.577141	3672	841	3.0.8.4	synth with cache (only 1: intros H; only 1: rewrite H; only 1: intros l'; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40	40.242873	49266	2533
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.in_split_r	40	3.961999	1257	472	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40	40.067952	17733	4899
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_1	40	40.101423	13587	3390
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zabs.Zabs_dec	40	40.086761	29541	2299
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40	40.046263	9718	4872
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40	40.106541	14802	4769
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40	1.258085	413	166	0.1.4.0.1	synth with cache (only 1: intros n; only 1: intros _tmp_tactician0; only 1: apply divide_abs_r; only 1: apply divide_mul_l; only 1: apply divide_refl).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40	40.089778	8056	4311
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_spec	40	40.086605	15941	4288
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.add_ok	40	40.061719	14150	901
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40	40.189649	12016	4173
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40	40.370052	11224	1396
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	40.048487	9666	5804
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40	40.141633	17342	268
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40	40.146343	24940	5210
coq-tactician-stdlib.8.11.dev	Coq.Arith.Wf_nat.lt_wf_double_ind	40	4.551801	1167	793	0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros P; only 1: intros Hrec; only 1: intros p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n; only 1: intros H; only 1: intros q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.914374	177	90	0.1.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: apply Z.nle_gt; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.map_ext_in_iff	40	40.063607	17237	6442
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_neg_bound	40	40.055870	15974	3877
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40	40.322645	12812	4076
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40	40.212264	23717	4872
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.mod_pos_bound	40	40.731780	15178	2617
coq-tactician-stdlib.8.11.dev	Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	0.531666	79	36	0.1.2.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: constructor; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40	40.608915	32195	2632
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_spec	40	40.071882	13498	3525
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_2	40	40.053113	13597	5052
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.compare_cont_Eq	40	40.206433	16872	5174
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.159557	41	21	0.3.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	40.062706	17003	5738
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zmin.Zmin_irreducible	40	40.105452	21262	2164
coq-tactician-stdlib.8.11.dev	Coq.Sets.Multiset.multiset_defs.treesort_twist1	40	40.517418	12177	3931
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.129895	14	12	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	40.049740	15245	1696
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quotrem_eq	40	40.145938	53917	3461
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40	40.057762	13723	6128
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.join_ok	40	40.045496	9094	2816
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.755823	167	92	0.0.0.2.0.0	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite add_comm; only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.ListPairs.split_length_r	40	0.685620	128	70	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros until l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40	40.113293	6871	2400
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.559932	289	78	5.5.0	synth with cache (only 1: intros; only 1: bitwise; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40	40.134790	17505	4558
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetRBT.MakeRaw.add_spec'	40	40.055273	10957	1179
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Znat.Nat2Z.inj	40	7.536342	1725	500	0.0.0.0.1.7.8	synth with cache (only 1: revert m; only 1: intros n'; only 1: intros H; only 1: rewrite <- (Nat2N.id n); only 1: rewrite <- (Nat2N.id n'); only 1: f_equal; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40	40.148009	11556	4676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	40.075335	23674	3629
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40	40.091700	12243	4437
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40	40.040349	8347	3076
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_gt	40	41.531789	11969	2322
coq-tactician-stdlib.8.11.dev	Coq.Lists.List.Filtering.ext_in_filter	40	14.935313	5127	1812	1.4.1.7	synth with cache (only 1: intros x0; only 1: intros until l; only 1: rewrite filter_map; only 1: apply ext_in_map).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40	40.203356	14858	6274
coq-tactician-stdlib.8.11.dev	Coq.PArith.BinPos.Pos.le_refl	40	0.062578	7	9	0.0.0	synth with cache (only 1: apply lt_eq_cases; only 1: right; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40	40.249969	9596	2412
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40	40.024939	6785	1367
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.quot_rem'	40	40.678831	53740	3441
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapList.Raw.Elt.equal_cons	40	40.197151	6674	1567
coq-tactician-stdlib.8.11.dev	Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40	40.193284	13378	4192
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	8.195742	3422	253	39.0	synth with cache (only 1: intuition; only 1: firstorder).
coq-tactician-stdlib.8.11.dev	Coq.Arith.PeanoNat.Nat.mod_bound_pos	40	40.186718	18807	3673
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.203080	30	32	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.div2_spec	40	0.039510	6	4	2	synth with cache (only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40	40.111141	13450	3796
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.846844	505	284	0.1.0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: nzsimpl; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40	40.083063	26976	3148
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	1.286458	385	150	0.0.0.4.0.1	synth with cache (only 1: intros n; only 1: intros m; only 1: rewrite <- (add_opp_r n m); only 1: rewrite add_move_l; only 1: rewrite sub_0_l; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_0_l	40	0.182946	60	33	0.0.1.0.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: easy; only 1: simpl; only 1: trivial).
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.171333	27	26	0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).
coq-tactician-stdlib.8.11.dev	Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.364463	402	172	0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: simpl; only 1: destruct a; only 1: easy; only 1: easy; only 1: easy; only 1: intros Hn; only 1: simpl; only 1: trivial; only 1: easy).
coq-tactician-stdlib.8.11.dev	Coq.NArith.BinNat.N.size_le	40	40.649192	16323	4191
coq-tactician-stdlib.8.11.dev	Coq.MSets.MSetPositive.PositiveSet.compare_inv	40	40.111099	36937	5401
coq-tactician-stdlib.8.11.dev	Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40	40.221931	14637	4361
coq-tactician-stdlib.8.11.dev	Coq.ZArith.Zbool.Zgt_cases	40	40.127965	37601	4446
coq-tactician-stdlib.8.11.dev	Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40	40.042652	9745	5676
coq-tactician-stdlib.8.11.dev	Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40	40.086351	28862	4627
coq-tactician-stdlib.8.11.dev	Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40	40.218024	7481	1463
