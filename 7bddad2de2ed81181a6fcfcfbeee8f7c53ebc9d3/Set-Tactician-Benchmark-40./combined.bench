iris.heap_lang.locations.loc_eq_decision	40	0	synth with cache (only 1: solve_decision).	0.066785	1
iris.heap_lang.class_instances.into_val_val	40	3	synth with cache (only 1: naive_solver eauto with f_equal).	0.096783	4
iris.heap_lang.class_instances.as_val_val	40	195.387	synth with cache (only 1: repeat red; only 1: set_solver).	1.090739	502
iris.heap_lang.proph_erasure.erase_expr_subst	40	1	synth with cache (only 1: tactics.done).	0.015954	2
iris.heap_lang.proofmode.tac_wp_expr_eval	40	128.129.512	synth with cache (only 1: intros i'; only 1: rewrite /not_stuck /reducible /=; only 1: naive_solver).	1.457877	46
iris.heap_lang.proofmode.tac_twp_expr_eval	40	0	synth with cache (only 1: by intros ->).	0.063412	1
iris.heap_lang.locations.loc_countable	40
iris.heap_lang.locations.loc_infinite_obligation_1	40	1.0	synth with cache (only 1: intros p'; only 1: naive_solver lia).	0.115302	3
iris.heap_lang.lang.heap_lang.lit_is_unboxed_dec	40
iris.heap_lang.metatheory.set_unfold_elem_of_insert_binder	40
iris.heap_lang.adequacy.subG_heapGpreS	40	0	synth with cache (only 1: solve_inG).	1.833633	137
iris.heap_lang.class_instances.atomic.rec_atomic	40
iris.heap_lang.proph_erasure.erase_expr_subst'	40
iris.heap_lang.proph_erasure.erase_val_subst'	40	1	synth with cache (only 1: naive_solver).	0.016575	2
iris.heap_lang.lib.arith.minimum_spec	40
iris.heap_lang.lib.nondet_bool.proof.nondet_bool_spec	40
iris.heap_lang.lib.diverge.wp_diverge	40
iris.heap_lang.proofmode.tac_wp_pure	40
iris.heap_lang.primitive_laws.steps.steps_lb_valid	40
iris.heap_lang.derived_laws.lifting.array_as_fractional	40	0.2	synth with cache (only 1: split ; first  done; only 1: apply _).	0.171386	4
iris.heap_lang.derived_laws.lifting.array_nil	40	1	synth with cache (only 1: auto).	0.116813	2
iris.heap_lang.locations.loc_add_assoc	40
iris.heap_lang.lang.heap_lang.val_is_unboxed_dec	40
iris.heap_lang.lang.heap_lang.to_of_val	40	0.321	synth with cache (only 1: apply @Permutation_singleton_inj; only 1: reflexivity).	0.105935	23
iris.heap_lang.metatheory.is_closed_weaken	40
iris.heap_lang.class_instances.atomic.pair_atomic	40
iris.heap_lang.adequacy.heap_adequacy	40
iris.heap_lang.lib.assert.twp_assert	40
iris.heap_lang.class_instances.atomic.injl_atomic	40	1.704.833	synth with cache (only 1: intro y0; only 1: intros y H; only 1: solve_atomic).	2.083481	879
iris.heap_lang.proph_erasure.erase_to_val	40
iris.heap_lang.class_instances.atomic.injr_atomic	40	0	synth with cache (only 1: solve_atomic).	0.502959	1
iris.heap_lang.lib.atomic_heap.derived.cas_spec	40
iris.heap_lang.lib.arith.minimum_spec_nat	40
iris.heap_lang.proofmode.tac_twp_pure	40
iris.heap_lang.primitive_laws.steps.steps_lb_get	40
iris.heap_lang.proofmode.tac_wp_value_nofupd	40	129.704.0.896.0	synth with cache (only 1: pose proof @pure_exec_fill; only 1: vm_compute in H; only 1: rewrite !wp_unfold /wp_pre /=; only 1: intros p; only 1: auto using (@lookup_delete _)).	2.008163	135
iris.heap_lang.derived_laws.lifting.array_singleton	40
iris.heap_lang.locations.loc_add_0	40
iris.heap_lang.locations.loc_add_inj	40	577.704.0	synth with cache (only 1: destruct l; only 1: intros l1 l2 l3; only 1: naive_solver auto with f_equal lia).	0.425856	258
iris.heap_lang.lang.heap_lang.of_to_val	40
iris.heap_lang.lang.heap_lang.of_val_inj	40	2	synth with cache (only 1: by injection 1).	0.118248	84
iris.heap_lang.lang.heap_lang.base_lit_eq_dec	40	0	synth with cache (only 1: solve_decision).	0.079243	1
iris.heap_lang.lang.heap_lang.un_op_eq_dec	40	0	synth with cache (only 1: solve_decision).	0.023586	1
iris.heap_lang.lang.heap_lang.bin_op_eq_dec	40	0	synth with cache (only 1: solve_decision).	0.303900	1
iris.heap_lang.metatheory.is_closed_weaken_empty	40
iris.heap_lang.lib.assert.wp_assert	40
iris.heap_lang.proph_erasure.erase_not_val	40
iris.heap_lang.lib.spawn.subG_spawnΣ	40	0	synth with cache (only 1: solve_inG).	0.781122	1
iris.heap_lang.class_instances.atomic.beta_atomic	40
iris.heap_lang.class_instances.atomic.unop_atomic	40	1.256.192	synth with cache (only 1: intro n; only 1: intros le_mn2; only 1: solve_atomic).	0.828095	28
iris.heap_lang.class_instances.atomic.binop_atomic	40	0.194	synth with cache (only 1: intros n m; only 1: solve_atomic).	0.488665	29
iris.heap_lang.lib.atomic_heap.proof.primitive_alloc_spec	40
iris.heap_lang.class_instances.atomic.if_true_atomic	40	0	synth with cache (only 1: solve_atomic).	0.388261	1
iris.heap_lang.lib.arith.maximum_spec	40
iris.heap_lang.class_instances.atomic.if_false_atomic	40	0	synth with cache (only 1: solve_atomic).	0.602040	1
iris.heap_lang.lib.counter.subG_mcounterΣ	40
iris.heap_lang.total_adequacy.heap_total	40
iris.heap_lang.class_instances.atomic.fst_atomic	40	0	synth with cache (only 1: solve_atomic).	0.714810	1
iris.heap_lang.class_instances.atomic.snd_atomic	40	0	synth with cache (only 1: solve_atomic).	0.582027	1
iris.heap_lang.lib.counter.mono_proof.mcounter_persistent	40	1	synth with cache (only 1: done || apply _).	1.700748	245
iris.heap_lang.primitive_laws.steps.steps_auth_update	40
iris.heap_lang.proofmode.tac_twp_value_nofupd	40
iris.heap_lang.class_instances.atomic.fork_atomic	40	0	synth with cache (only 1: solve_atomic).	0.899764	1
iris.heap_lang.class_instances.atomic.alloc_atomic	40	0	synth with cache (only 1: solve_atomic).	0.785549	1
iris.heap_lang.class_instances.atomic.free_atomic	40	0	synth with cache (only 1: solve_atomic).	0.576646	1
iris.heap_lang.class_instances.atomic.load_atomic	40	0	synth with cache (only 1: solve_atomic).	0.577425	1
iris.heap_lang.class_instances.atomic.xchg_atomic	40	0	synth with cache (only 1: solve_atomic).	0.703069	1
iris.heap_lang.class_instances.atomic.store_atomic	40	0	synth with cache (only 1: solve_atomic).	0.651816	1
iris.heap_lang.class_instances.atomic.cmpxchg_atomic	40	0	synth with cache (only 1: solve_atomic).	0.662130	1
iris.heap_lang.derived_laws.lifting.array_app	40
iris.heap_lang.class_instances.atomic.faa_atomic	40	0	synth with cache (only 1: solve_atomic).	0.742511	1
iris.heap_lang.class_instances.atomic.new_proph_atomic	40	1.1	synth with cache (only 1: red; only 1: solve_atomic).	0.303715	4
iris.heap_lang.locations.fresh_locs_fresh	40
iris.heap_lang.metatheory.is_closed_subst	40
iris.heap_lang.lang.heap_lang.expr_eq_dec	40
iris.heap_lang.lang.heap_lang.val_eq_dec	40	0	synth with cache (only 1: solve_decision).	0.156593	1
iris.heap_lang.proph_erasure.erase_ectx_app	40
iris.heap_lang.lib.spawn.proof.spawn_inv_ne	40
iris.heap_lang.lib.spawn.proof.join_handle_ne	40	0	synth with cache (only 1: solve_proper).	0.399193	1
iris.heap_lang.lib.atomic_heap.proof.primitive_free_spec	40
iris.heap_lang.lib.arith.maximum_spec_nat	40
iris.heap_lang.lib.spin_lock.subG_lockΣ	40
iris.heap_lang.primitive_laws.steps.steps_auth_update_S	40
iris.heap_lang.lib.counter.mono_proof.newcounter_mono_spec	40
iris.heap_lang.proofmode.tac_wp_value	40
iris.heap_lang.lib.ticket_lock.subG_tlockΣ	40	0	synth with cache (only 1: solve_inG).	0.637053	1
iris.heap_lang.lib.ticket_lock.proof.lock_inv_ne	40	3	synth with cache (only 1: solve_proper).	2.044028	4
iris.heap_lang.derived_laws.lifting.array_cons	40
iris.heap_lang.class_instances.atomic.resolve_atomic	40
iris.heap_lang.lib.lazy_coin.proof.prophecy_to_bool_of_bool	40	768.0.324.771	synth with cache (only 1: compute; only 1: let rec simplify := repeat match goal with | _ => progress simplify_eq /= | H:context [ base.ident_beq ?s1 ?s2 ] |- _ => destruct (base.ident_beq_reflect s1 s2) | |- context [ base.ident_beq ?s1 ?s2 ] => destruct (base.ident_beq_reflect s1 s2) | H:context [ base.pm_option_bind _ ?x ] |- _ => destruct x eqn:? | |- context [ base.pm_option_bind _ ?x ] => destruct x eqn:? | _ => case_match end in simplify; only 1: eauto with iFrame; only 1: by eauto).	30.879890	2643
iris.heap_lang.proofmode.tac_twp_value	40	2.321.261.0	synth with cache (only 1: rewrite envs_entails_eq => ->; only 1: split; only 1: red; only 1: by apply @twp_value_fupd').	24.277645	6949
iris.heap_lang.metatheory.is_closed_subst'	40
iris.heap_lang.lang.heap_lang.base_lit_countable	40
iris.heap_lang.proph_erasure.erase_ectx_expr	40
iris.heap_lang.lib.spawn.proof.spawn_spec	40
iris.heap_lang.lib.atomic_heap.proof.primitive_load_spec	40
iris.heap_lang.lib.spin_lock.proof.locked_exclusive	40
iris.heap_lang.lib.spin_lock.proof.lock_inv_ne	40	2	synth with cache (only 1: solve_proper).	0.818619	84
iris.heap_lang.primitive_laws.steps.steps_lb_le	40
iris.heap_lang.lib.counter.mono_proof.incr_mono_spec	40
iris.heap_lang.lib.ticket_lock.proof.is_lock_contractive	40
iris.heap_lang.derived_laws.lifting.array_cons_frame	40
iris.heap_lang.class_instances.pure_exec.pure_recc	40
iris.heap_lang.class_instances.pure_exec.pure_pairc	40	0	synth with cache (only 1: solve_pure_exec).	0.155284	1
iris.heap_lang.proofmode.tac_wp_bind	40
iris.heap_lang.lib.lazy_coin.proof.new_coin_spec	40
iris.heap_lang.lib.clairvoyant_coin.proof.new_coin_spec	40
iris.heap_lang.lang.heap_lang.un_op_finite	40
iris.heap_lang.metatheory.subst_is_closed	40
iris.heap_lang.proph_erasure.val_is_unboxed_erased	40
iris.heap_lang.lib.atomic_heap.proof.primitive_store_spec	40
iris.heap_lang.lib.spawn.proof.join_spec	40
iris.heap_lang.lib.par.proof.par_spec	40
iris.heap_lang.primitive_laws.heapGS_irisGS_obligation_1	40
iris.heap_lang.lib.spin_lock.proof.is_lock_contractive	40
iris.heap_lang.lib.counter.mono_proof.read_mono_spec	40
iris.heap_lang.lib.counter.subG_ccounterΣ	40	0	synth with cache (only 1: solve_inG).	0.505717	1
iris.heap_lang.lib.ticket_lock.proof.is_lock_persistent	40
iris.heap_lang.lib.ticket_lock.proof.locked_timeless	40	0	synth with cache (only 1: apply _).	0.415655	1
iris.heap_lang.derived_laws.lifting.update_array	40
iris.heap_lang.class_instances.pure_exec.pure_injlc	40
iris.heap_lang.class_instances.pure_exec.pure_injrc	40	0	synth with cache (only 1: solve_pure_exec).	0.212406	1
iris.heap_lang.lib.counter.contrib_spec.ccounter_op	40	896.64.192.6	synth with cache (only 1: rewrite -own_op; only 1: repeat split; only 1: naive_solver; only 1: auto with relations).	9.933750	780
iris.heap_lang.proofmode.tac_twp_bind	40
iris.heap_lang.lib.lazy_coin.proof.read_coin_spec	40
iris.heap_lang.lib.clairvoyant_coin.proof.read_coin_spec	40
iris.heap_lang.lang.heap_lang.bin_op_countable	40
iris.heap_lang.metatheory.subst_is_closed_empty	40
iris.heap_lang.proph_erasure.vals_compare_safe_erase	40
iris.heap_lang.lib.atomic_heap.proof.primitive_cmpxchg_spec	40
iris.heap_lang.lib.par.proof.wp_par	40
iris.heap_lang.primitive_laws.lifting.wp_lb_init	40
iris.heap_lang.lib.spin_lock.proof.is_lock_persistent	40
iris.heap_lang.lib.spin_lock.proof.locked_timeless	40	0	synth with cache (only 1: apply _).	0.046814	1
iris.heap_lang.lib.ticket_lock.proof.locked_exclusive	40
iris.heap_lang.class_instances.pure_exec.pure_beta	40
iris.heap_lang.class_instances.pure_exec.pure_unop	40	0	synth with cache (only 1: solve_pure_exec).	0.197904	1
iris.heap_lang.class_instances.pure_exec.pure_binop	40	0	synth with cache (only 1: solve_pure_exec).	0.280685	1
iris.heap_lang.derived_laws.lifting.mapsto_seq_array	40
iris.heap_lang.lib.counter.contrib_spec.newcounter_contrib_spec	40
iris.heap_lang.proofmode.heap.tac_wp_allocN	40
iris.heap_lang.metatheory.subst_subst	40
iris.heap_lang.lib.clairvoyant_coin.proof.toss_coin_spec	40
iris.heap_lang.lang.heap_lang.expr_countable	40
iris.heap_lang.proph_erasure.erase_val_inj_iff	40
iris.heap_lang.lib.array.proof.twp_array_free	40
iris.heap_lang.primitive_laws.lifting.wp_lb_update	40
iris.heap_lang.lib.spin_lock.proof.is_lock_iff	40
iris.heap_lang.lib.ticket_lock.proof.is_lock_iff	40
iris.heap_lang.lib.array.proof.wp_array_free	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Hlen Φ ) "Hl HΦ"; only 1: iInduction vs as [| v vs] "IH" forall ( l n Hlen ); only 1: subst n; only 1: wp_rec; only 1: wp_pures; only 1: iApply "HΦ"; only 1: done; only 1: subst n; only 1: wp_rec; only 1: wp_pures; only 1: iDestruct (array_cons with "Hl") as "[Hv Hl]"; only 1: wp_free; only 1: wp_pures; only 1: iApply ("IH" with "[] Hl"); only 1: eauto with lia; only 1: eauto with lia).	9.660628	666
iris.heap_lang.class_instances.pure_exec.pure_eqop	40
iris.heap_lang.derived_laws.lifting.twp_allocN	40
iris.heap_lang.class_instances.pure_exec.pure_if_true	40	1	synth with cache (only 1: solve_pure_exec).	0.256952	2
iris.heap_lang.class_instances.pure_exec.pure_if_false	40	0	synth with cache (only 1: solve_pure_exec).	0.149096	1
iris.heap_lang.class_instances.pure_exec.pure_fst	40	0	synth with cache (only 1: solve_pure_exec).	0.523044	1
iris.heap_lang.class_instances.pure_exec.pure_snd	40	0	synth with cache (only 1: solve_pure_exec).	0.277516	1
iris.heap_lang.class_instances.pure_exec.pure_case_inl	40	0	synth with cache (only 1: solve_pure_exec).	0.319795	1
iris.heap_lang.class_instances.pure_exec.pure_case_inr	40	0	synth with cache (only 1: solve_pure_exec).	0.380641	1
iris.heap_lang.lib.counter.contrib_spec.incr_contrib_spec	40
iris.heap_lang.proofmode.heap.tac_twp_allocN	40
iris.heap_lang.lib.increment.increment_physical.incr_phy_spec	40
iris.heap_lang.metatheory.subst_subst'	40
iris.heap_lang.lang.heap_lang.val_countable	40
iris.heap_lang.proph_erasure.un_op_eval_erase	40
iris.heap_lang.primitive_laws.lifting.wp_step_fupdN_lb	40
iris.heap_lang.lib.spin_lock.proof.newlock_spec	40
iris.heap_lang.lib.ticket_lock.proof.newlock_spec	40
iris.heap_lang.lib.array.proof.twp_array_copy_to	40
iris.heap_lang.derived_laws.lifting.wp_allocN	40
iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec	40
iris.heap_lang.proofmode.heap.tac_wp_alloc	40
iris.heap_lang.metatheory.subst_subst_ne	40
iris.heap_lang.lib.increment.increment.incr_spec_direct	40
iris.heap_lang.lang.heap_lang.heap_array_singleton	40
iris.heap_lang.proph_erasure.bin_op_eval_erase	40
iris.heap_lang.primitive_laws.lifting.wp_rec_löb	40
iris.heap_lang.lib.array.proof.wp_array_copy_to	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Hvdst Hvsrc Φ ) "[Hdst Hsrc] HΦ"; only 1: iInduction vdst as [| v1 vdst] "IH" forall ( n dst src vsrc Hvdst Hvsrc ); only 1: destruct vsrc as [| v2 vsrc]; only 1: simplify_eq /=; only 1: wp_rec; only 1: wp_pures; only 1: iApply "HΦ"; only 1: auto with iFrame; only 1: simplify_eq /=; only 1: destruct vsrc as [| v2 vsrc]; only 1: simplify_eq /=; only 1: simplify_eq /=; only 1: wp_rec; only 1: wp_pures; only 1: iDestruct (array_cons with "Hdst") as "[Hv1 Hdst]"; only 1: iDestruct (array_cons with "Hsrc") as "[Hv2 Hsrc]"; only 1: wp_load; only 1: wp_store; only 1: wp_smart_apply ("IH" with "[%] [%] Hdst Hsrc"); only 1: lia; only 1: lia; only 1: iIntros "[Hvdst Hvsrc]"; only 1: iApply "HΦ"; only 1: by iFrame).	35.728048	2353
iris.heap_lang.lib.spin_lock.proof.try_acquire_spec	40
iris.heap_lang.lib.ticket_lock.proof.wait_loop_spec	40
iris.heap_lang.derived_laws.lifting.twp_allocN_vec	40
iris.heap_lang.lib.counter.contrib_spec.read_contrib_spec_1	40
iris.heap_lang.proofmode.heap.tac_twp_alloc	40
iris.heap_lang.metatheory.subst_subst_ne'	40
iris.heap_lang.lang.heap_lang.heap_array_lookup	40
iris.heap_lang.lib.increment.increment.incr_spec	40
iris.heap_lang.proph_erasure.lookup_erase_heap_None	40
iris.heap_lang.primitive_laws.lifting.wp_fork	40
iris.heap_lang.lib.array.proof.twp_array_clone	40
iris.heap_lang.lib.spin_lock.proof.acquire_spec	40
iris.heap_lang.derived_laws.lifting.wp_allocN_vec	40
iris.heap_lang.lib.ticket_lock.proof.acquire_spec	40
iris.heap_lang.proofmode.heap.tac_wp_free	40
iris.heap_lang.metatheory.subst_rec'	40
iris.heap_lang.lang.heap_lang.heap_array_map_disjoint	40
iris.heap_lang.lib.increment.increment.weak_incr_spec	40
iris.heap_lang.proph_erasure.lookup_erase_heap	40
iris.heap_lang.primitive_laws.lifting.twp_fork	40
iris.heap_lang.lib.array.proof.wp_array_clone	40
iris.heap_lang.lib.spin_lock.proof.release_spec	40
iris.heap_lang.derived_laws.lifting.twp_load_offset	40
iris.heap_lang.lib.ticket_lock.proof.release_spec	40
iris.heap_lang.proofmode.heap.tac_twp_free	40
iris.heap_lang.metatheory.subst_rec_ne'	40
iris.heap_lang.lang.heap_lang.state_init_heap_singleton	40
iris.heap_lang.lib.increment.increment_client.incr_client_safe	40
iris.heap_lang.proph_erasure.erase_heap_insert_Some	40
iris.heap_lang.proph_erasure.erase_heap_insert_None	40	0	synth with cache (only 1: by rewrite /erase_heap fmap_insert).	0.070243	1
iris.heap_lang.primitive_laws.lifting.mapsto_valid	40
iris.heap_lang.lib.array.proof.array_init.wp_array_init_loop	40
iris.heap_lang.derived_laws.lifting.wp_load_offset	40
iris.heap_lang.proofmode.heap.tac_wp_load	40
iris.heap_lang.metatheory.bin_op_eval_closed	40
iris.heap_lang.lang.heap_lang.fill_item_inj	40
iris.heap_lang.proph_erasure.fmap_heap_array	40
iris.heap_lang.primitive_laws.lifting.mapsto_valid_2	40
iris.heap_lang.primitive_laws.lifting.mapsto_agree	40	0.0.0	synth with cache (only 1: iIntros "H1 H2"; only 1: iDestruct (gen_heap.mapsto_valid_2 with "H1 H2") as % [? [=?]]; only 1: done).	0.143551	3
iris.heap_lang.lib.array.proof.array_init.twp_array_init_loop	40
iris.heap_lang.derived_laws.lifting.twp_load_offset_vec	40
iris.heap_lang.proofmode.heap.tac_twp_load	40
iris.heap_lang.metatheory.heap_closed_alloc	40
iris.heap_lang.lang.heap_lang.fill_item_val	40
iris.heap_lang.lang.heap_lang.val_head_stuck	40	769.387	synth with cache (only 1: unfold_leibniz; only 1: by intros []).	1.109816	550
iris.heap_lang.proph_erasure.erase_heap_array	40
iris.heap_lang.primitive_laws.lifting.mapsto_combine	40
iris.heap_lang.derived_laws.lifting.wp_load_offset_vec	40
iris.heap_lang.lib.array.proof.array_init.wp_array_init	40
iris.heap_lang.proofmode.heap.tac_wp_store	40
iris.heap_lang.metatheory.head_step_is_closed	40
iris.heap_lang.lang.heap_lang.head_ctx_step_val	40
iris.heap_lang.proph_erasure.erase_state_init	40
iris.heap_lang.primitive_laws.lifting.mapsto_frac_ne	40
iris.heap_lang.derived_laws.lifting.twp_store_offset	40
iris.heap_lang.lib.array.proof.array_init.twp_array_init	40
iris.heap_lang.proofmode.heap.tac_twp_store	40
iris.heap_lang.metatheory.subst_map_empty	40
iris.heap_lang.lang.heap_lang.fill_item_no_val_inj	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_rec	40
iris.heap_lang.primitive_laws.lifting.mapsto_ne	40
iris.heap_lang.derived_laws.lifting.wp_store_offset	40
iris.heap_lang.lib.array.proof.array_init_fmap.big_sepL_exists_eq	40
iris.heap_lang.proofmode.heap.tac_wp_xchg	40
iris.heap_lang.metatheory.subst_map_insert	40
iris.heap_lang.lang.heap_lang.alloc_fresh	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_NewProph	40
iris.heap_lang.primitive_laws.lifting.mapsto_persist	40
iris.heap_lang.derived_laws.lifting.twp_store_offset_vec	40
iris.heap_lang.lib.array.proof.array_init_fmap.wp_array_init_fmap	40
iris.heap_lang.proofmode.heap.tac_twp_xchg	40
iris.heap_lang.metatheory.subst_map_singleton	40
iris.heap_lang.lang.heap_lang.new_proph_id_fresh	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_AllocN	40
iris.heap_lang.primitive_laws.lifting.inv_mapsto_own_proper	40
iris.heap_lang.primitive_laws.lifting.inv_mapsto_proper	40	384.0.2.0	synth with cache (only 1: intros I1 I2 HI; only 1: rewrite /inv_mapsto; only 1: f_equiv => - [w|] ; last  done; only 1: eauto  10).	3.606470	705
iris.heap_lang.derived_laws.lifting.wp_store_offset_vec	40
iris.heap_lang.lib.array.proof.array_init_fmap.twp_array_init_fmap	40
iris.heap_lang.proofmode.heap.tac_wp_cmpxchg	40
iris.heap_lang.metatheory.subst_map_binder_insert	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_Free	40
iris.heap_lang.lang.heap_lang.heap_lang_mixin	40
iris.heap_lang.primitive_laws.lifting.make_inv_mapsto	40
iris.heap_lang.derived_laws.lifting.twp_xchg_offset	40
iris.heap_lang.metatheory.subst_map_binder_insert_empty	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.5	synth with cache (only 1: destruct b; only 1: simplify_map_eq; only 1: assert (Hdel : ∀ x, binder_delete x (∅ : gmap _ val) = ∅); only 1: intros [| x]; only 1: by rewrite /= ?delete_empty; only 1: by rewrite /= ?delete_empty; only 1: induction e; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: rewrite ?Hdel; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: auto with f_equal; only 1: simplify_map_eq; only 1: by rewrite subst_map_insert delete_empty subst_map_empty).	25.446697	9084
iris.heap_lang.proofmode.heap.tac_twp_cmpxchg	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_Load	40
iris.heap_lang.lang.to_val_fill_some	40
iris.heap_lang.primitive_laws.lifting.inv_mapsto_own_inv	40
iris.heap_lang.derived_laws.lifting.wp_xchg_offset	40
iris.heap_lang.metatheory.subst_map_binder_insert_2	40
iris.heap_lang.proofmode.heap.tac_wp_cmpxchg_fail	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_Xchg	40
iris.heap_lang.lang.prim_step_to_val_is_head_step	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_Store	40	0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros Hl; only 1: rewrite lookup_erase_heap in   Hl; only 1: destruct (heap σ !! l) as [[| ]| ] eqn:?; only 1: simplify_eq /=; only 1: eexists _,_,_,_; simpl; split ; first  econstructor; only 1: eauto; only 1: repeat split; only 1: rewrite /state_upd_heap /erase_state /= erase_heap_insert_Some //; only 1: simplify_eq /=; only 1: simplify_eq /=).	2.466449	732
iris.heap_lang.primitive_laws.lifting.inv_mapsto_own_acc_strong	40
iris.heap_lang.derived_laws.lifting.twp_xchg_offset_vec	40
iris.heap_lang.metatheory.subst_map_binder_insert_2_empty	40
iris.heap_lang.proofmode.heap.tac_twp_cmpxchg_fail	40
iris.heap_lang.lang.head_step_to_val	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_CmpXchg	40
iris.heap_lang.primitive_laws.lifting.inv_mapsto_own_acc	40
iris.heap_lang.derived_laws.lifting.wp_xchg_offset_vec	40
iris.heap_lang.metatheory.subst_map_is_closed	40
iris.heap_lang.proofmode.heap.tac_wp_cmpxchg_suc	40
iris.heap_lang.lang.irreducible_resolve	40
iris.heap_lang.proph_erasure.erased_head_step_head_step_FAA	40
iris.heap_lang.primitive_laws.lifting.inv_mapsto_acc	40
iris.heap_lang.derived_laws.lifting.twp_cmpxchg_suc_offset	40
iris.heap_lang.metatheory.subst_map_is_closed_empty	40
iris.heap_lang.proofmode.heap.tac_twp_cmpxchg_suc	40
iris.heap_lang.primitive_laws.lifting.heap_array_to_seq_meta	40
iris.heap_lang.derived_laws.lifting.wp_cmpxchg_suc_offset	40
iris.heap_lang.proph_erasure.erased_head_step_head_step	40
iris.heap_lang.proofmode.heap.tac_wp_faa	40
iris.heap_lang.primitive_laws.lifting.heap_array_to_seq_mapsto	40
iris.heap_lang.derived_laws.lifting.twp_cmpxchg_suc_offset_vec	40
iris.heap_lang.proph_erasure.fill_to_resolve	40
iris.heap_lang.proofmode.heap.tac_twp_faa	40
iris.heap_lang.primitive_laws.lifting.twp_allocN_seq	40
iris.heap_lang.derived_laws.lifting.wp_cmpxchg_suc_offset_vec	40
iris.heap_lang.proph_erasure.projs_pure_steps	40
iris.heap_lang.proph_erasure.Resolve_3_vals_head_stuck	40	256.1.64.1.128.0.776	synth with cache (only 1: assert (H : ∀ a b, (0 ≤ a)%Z → (0 ≤ b)%Z → (0 ≤ Z.lxor a b)%Z); only 1: intros n m Hn Hm; only 1: apply PeanoNat.Nat.nlt_ge; only 1: intros Hhstep; only 1: easy; only 1: inversion_clear 1; only 1: now Prelude.f_equal).	7.668737	5343
iris.heap_lang.primitive_laws.lifting.wp_allocN_seq	40
iris.heap_lang.derived_laws.lifting.twp_cmpxchg_fail_offset	40
iris.heap_lang.proph_erasure.Resolve_3_vals_unsafe	40
iris.heap_lang.primitive_laws.lifting.twp_alloc	40
iris.heap_lang.derived_laws.lifting.wp_cmpxchg_fail_offset	40
iris.heap_lang.proph_erasure.prim_step_matched_by_erased_steps_ectx	40
iris.heap_lang.primitive_laws.lifting.wp_alloc	40
iris.heap_lang.derived_laws.lifting.twp_cmpxchg_fail_offset_vec	40
iris.heap_lang.derived_laws.lifting.wp_cmpxchg_fail_offset_vec	40	0.0.0.0.0.1.0.0	synth with cache (only 1: iIntros ( ? ? Φ ) ">H HΦ"; only 1: iApply (twp_wp_step with "HΦ"); only 1: iApply (twp_cmpxchg_fail_offset with "H"); only 1: by apply vlookup_lookup; only 1: done; only 1: done; only 1: iIntros "H HΦ"; only 1: by iApply "HΦ").	5.113193	529
iris.heap_lang.proph_erasure.is_Resolve_dec	40
iris.heap_lang.primitive_laws.lifting.twp_free	40
iris.heap_lang.derived_laws.lifting.twp_faa_offset	40
iris.heap_lang.proph_erasure.non_resolve_prim_step_matched_by_erased_steps_ectx_item	40
iris.heap_lang.primitive_laws.lifting.wp_free	40
iris.heap_lang.derived_laws.lifting.wp_faa_offset	40
iris.heap_lang.proph_erasure.prim_step_matched_by_erased_steps_ectx_item	40
iris.heap_lang.primitive_laws.lifting.twp_load	40
iris.heap_lang.derived_laws.lifting.twp_faa_offset_vec	40
iris.heap_lang.proph_erasure.erased_prim_step_prim_step	40
iris.heap_lang.primitive_laws.lifting.wp_load	40
iris.heap_lang.derived_laws.lifting.wp_faa_offset_vec	40
iris.heap_lang.primitive_laws.lifting.twp_store	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Φ ) "Hl HΦ"; only 1: iApply twp_lift_atomic_head_step_no_fork ; first  done; only 1: iIntros ( σ1 ns κs nt ) "(Hσ & Hκs & Hsteps) !>"; only 1: iDestruct (gen_heap_valid with "Hσ Hl") as % ?; only 1: iSplit ; first  by eauto with head_step; only 1: iIntros ( κ v2 σ2 efs Hstep ); only 1: inv_head_step; only 1: iMod (gen_heap_update with "Hσ Hl") as "[$ Hl]"; only 1: iMod (steps_auth_update_S with "Hsteps") as "Hsteps"; only 1: iModIntro; only 1: iSplit ; first  done; only 1: iSplit ; first  done; only 1: iFrame; only 1: by iApply "HΦ").	18.867149	1003
iris.heap_lang.proph_erasure.head_step_erased_prim_step_CmpXchg	40
iris.heap_lang.derived_laws.lifting.wp_resolve_proph	40
iris.heap_lang.primitive_laws.lifting.wp_store	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_resolve	40
iris.heap_lang.primitive_laws.lifting.twp_xchg	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Φ ) "Hl HΦ"; only 1: iApply twp_lift_atomic_head_step_no_fork ; first  done; only 1: iIntros ( σ1 ns κs nt ) "(Hσ & Hκs & Hsteps) !>"; only 1: iDestruct (gen_heap_valid with "Hσ Hl") as % ?; only 1: iSplit ; first  by eauto with head_step; only 1: iIntros ( κ v2 σ2 efs Hstep ); only 1: inv_head_step; only 1: iMod (steps_auth_update_S with "Hsteps") as "Hsteps"; only 1: iMod (gen_heap_update with "Hσ Hl") as "[$ Hl]"; only 1: iModIntro; only 1: iSplit ; first  done; only 1: iSplit ; first  done; only 1: iFrame; only 1: by iApply "HΦ").	21.764268	979
iris.heap_lang.derived_laws.lifting.wp_resolve_cmpxchg_suc	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_un_op	40
iris.heap_lang.primitive_laws.lifting.wp_xchg	40
iris.heap_lang.derived_laws.lifting.wp_resolve_cmpxchg_fail	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_bin_op	40
iris.heap_lang.primitive_laws.lifting.twp_cmpxchg_fail	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_allocN	40
iris.heap_lang.primitive_laws.lifting.wp_cmpxchg_fail	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_free	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step_load	40	0.0.0.0.0.0	synth with cache (only 1: intros Hw; only 1: do 3 eexists; only 1: apply head_prim_step; only 1: econstructor; only 1: rewrite /erase_state /state_upd_heap /= lookup_erase_heap Hw; only 1: eauto).	0.072490	6
iris.heap_lang.proph_erasure.head_step_erased_prim_step_xchg	40	0.0.0.0.0	synth with cache (only 1: do 3 eexists; only 1: apply head_prim_step; only 1: econstructor; only 1: rewrite /erase_state /state_upd_heap /= lookup_erase_heap; only 1: by destruct lookup; simplify_eq).	0.067886	5
iris.heap_lang.proph_erasure.head_step_erased_prim_step_store	40	0.0.0.0.0.0	synth with cache (only 1: intros Hl; only 1: do 3 eexists; only 1: apply head_prim_step; only 1: econstructor; only 1: rewrite /erase_state /state_upd_heap /= lookup_erase_heap Hl; only 1: eauto).	0.080593	6
iris.heap_lang.proph_erasure.head_step_erased_prim_step_FAA	40	0.0.0.0.0.0	synth with cache (only 1: intros Hl; only 1: do 3 eexists; only 1: apply head_prim_step; only 1: econstructor; only 1: rewrite /erase_state /state_upd_heap /= lookup_erase_heap Hl; only 1: eauto).	0.074670	6
iris.heap_lang.primitive_laws.lifting.twp_cmpxchg_suc	40
iris.heap_lang.proph_erasure.head_step_erased_prim_step	40
iris.heap_lang.primitive_laws.lifting.wp_cmpxchg_suc	40
iris.heap_lang.primitive_laws.lifting.twp_faa	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: iIntros ( Φ ) "Hl HΦ"; only 1: iApply twp_lift_atomic_head_step_no_fork ; first  done; only 1: iIntros ( σ1 ns κs nt ) "(Hσ & Hκs & Hsteps) !>"; only 1: iDestruct (gen_heap_valid with "Hσ Hl") as % ?; only 1: iSplit ; first  by eauto with head_step; only 1: iIntros ( κ v2 σ2 efs Hstep ); only 1: inv_head_step; only 1: iMod (steps_auth_update_S with "Hsteps") as "Hsteps"; only 1: iMod (gen_heap_update with "Hσ Hl") as "[$ Hl]"; only 1: iModIntro; only 1: iSplit ; first  done; only 1: iSplit ; first  done; only 1: iFrame; only 1: by iApply "HΦ").	12.100773	530
iris.heap_lang.proph_erasure.reducible_erased_reducible	40
iris.heap_lang.primitive_laws.lifting.wp_faa	40
iris.heap_lang.proph_erasure.pure_step_tp_safe	40
iris.heap_lang.primitive_laws.lifting.wp_new_proph	40
iris.heap_lang.proph_erasure.erasure	40
iris.heap_lang.primitive_laws.lifting.resolve_reducible	40
iris.heap_lang.primitive_laws.lifting.step_resolve	40
iris.heap_lang.primitive_laws.lifting.wp_resolve	40
