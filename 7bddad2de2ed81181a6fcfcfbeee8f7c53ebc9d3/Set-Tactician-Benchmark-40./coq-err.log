File "./iris_heap_lang/lang.v", line 225, characters 2-2551:
Warning:
Tactician detected a printing/parsing problem for the following tactic. Please report. refine (with go (e1 e2 : expr) {struct e1} : Decision (e1 = e2) := match e1, e2 with | Val v, Val v' => cast_if (decide (v = v')) | Var x, Var x' => cast_if (decide (x = x')) | Rec f x e, Rec f' x' e' => cast_if_and3 (decide (f = f')) (decide (x = x')) (decide (e = e')) | UnOp o e, UnOp o' e' => cast_if_and (decide (o = o')) (decide (e = e')) | BinOp o e1 e2, BinOp o' e1' e2' => cast_if_and3 (decide (o = o')) (decide (e1 = e1')) (decide (e2 = e2')) | Fst e, Fst e' | Snd e, Snd e' | InjL e, InjL e' | InjR e, InjR e' | Fork e, Fork e' | Free e, Free e' | Load e, Load e' => cast_if (decide (e = e')) | Xchg e0 e1, Xchg e0' e1' => cast_if_and (decide (e0 = e0')) (decide (e1 = e1')) | App e1 e2, App e1' e2' | Pair e1 e2, Pair e1' e2' | AllocN e1 e2, AllocN e1' e2' | Store e1 e2, Store e1' e2' | FAA e1 e2, FAA e1' e2' => cast_if_and (decide (e1 = e1')) (decide (e2 = e2')) | NewProph, NewProph => left _ | If e0 e1 e2, If e0' e1' e2' | Case e0 e1 e2, Case e0' e1' e2' | CmpXchg e0 e1 e2, CmpXchg e0' e1' e2' | Resolve e0 e1 e2, Resolve e0' e1' e2' => cast_if_and3 (decide (e0 = e0')) (decide (e1 = e1')) (decide (e2 = e2')) | _, _ => right _ end with gov (v1 v2 : val) {struct v1} : Decision (v1 = v2) := match v1, v2 with | LitV l, LitV l' => cast_if (decide (l = l')) | RecV f x e, RecV f' x' e' => cast_if_and3 (decide (f = f')) (decide (x = x')) (decide (e = e')) | PairV e1 e2, PairV e1' e2' => cast_if_and (decide (e1 = e1')) (decide (e2 = e2')) | InjLV e, InjLV e' | InjRV e, InjRV e' => cast_if (decide (e = e')) | _, _ => right _ end for go)
File "./iris_heap_lang/lang.v", line 318, characters 1-1449:
Warning:
Tactician detected a printing/parsing problem for the following tactic. Please report. set (enc := with go e := match e with | Val v => GenNode 0 [gov v] | Var x => GenLeaf (inl (inl x)) | Rec f x e => GenNode 1 [GenLeaf (inl (inr f)); GenLeaf (inl (inr x)); go e] | App e1 e2 => GenNode 2 [go e1; go e2] | UnOp op e => GenNode 3 [GenLeaf (inr (inr (inl op))); go e] | BinOp op e1 e2 => GenNode 4 [GenLeaf (inr (inr (inr op))); go e1; go e2] | If e0 e1 e2 => GenNode 5 [go e0; go e1; go e2] | Pair e1 e2 => GenNode 6 [go e1; go e2] | Fst e => GenNode 7 [go e] | Snd e => GenNode 8 [go e] | InjL e => GenNode 9 [go e] | InjR e => GenNode 10 [go e] | Case e0 e1 e2 => GenNode 11 [go e0; go e1; go e2] | Fork e => GenNode 12 [go e] | AllocN e1 e2 => GenNode 13 [go e1; go e2] | Free e => GenNode 14 [go e] | Load e => GenNode 15 [go e] | Store e1 e2 => GenNode 16 [go e1; go e2] | CmpXchg e0 e1 e2 => GenNode 17 [go e0; go e1; go e2] | Xchg e0 e1 => GenNode 18 [go e0; go e1] | FAA e1 e2 => GenNode 19 [go e1; go e2] | NewProph => GenNode 20 [] | Resolve e0 e1 e2 => GenNode 21 [go e0; go e1; go e2] end with gov v := match v with | LitV l => GenLeaf (inr (inl l)) | RecV f x e => GenNode 0 [GenLeaf (inl (inr f)); GenLeaf (inl (inr x)); go e] | PairV v1 v2 => GenNode 1 [gov v1; gov v2] | InjLV v => GenNode 2 [gov v] | InjRV v => GenNode 3 [gov v] end for go)
File "./iris_heap_lang/lang.v", line 355, characters 1-1603:
Warning:
Tactician detected a printing/parsing problem for the following tactic. Please report. set (dec := with go e := match e with | GenNode 0 [v] => Val (gov v) | GenLeaf (inl (inl x)) => Var x | GenNode 1 [GenLeaf (inl (inr f)); GenLeaf (inl (inr x)); e] => Rec f x (go e) | GenNode 2 [e1; e2] => App (go e1) (go e2) | GenNode 3 [GenLeaf (inr (inr (inl op))); e] => UnOp op (go e) | GenNode 4 [GenLeaf (inr (inr (inr op))); e1; e2] => BinOp op (go e1) (go e2) | GenNode 5 [e0; e1; e2] => If (go e0) (go e1) (go e2) | GenNode 6 [e1; e2] => Pair (go e1) (go e2) | GenNode 7 [e] => Fst (go e) | GenNode 8 [e] => Snd (go e) | GenNode 9 [e] => InjL (go e) | GenNode 10 [e] => InjR (go e) | GenNode 11 [e0; e1; e2] => Case (go e0) (go e1) (go e2) | GenNode 12 [e] => Fork (go e) | GenNode 13 [e1; e2] => AllocN (go e1) (go e2) | GenNode 14 [e] => Free (go e) | GenNode 15 [e] => Load (go e) | GenNode 16 [e1; e2] => Store (go e1) (go e2) | GenNode 17 [e0; e1; e2] => CmpXchg (go e0) (go e1) (go e2) | GenNode 18 [e0; e1] => Xchg (go e0) (go e1) | GenNode 19 [e1; e2] => FAA (go e1) (go e2) | GenNode 20 [] => NewProph | GenNode 21 [e0; e1; e2] => Resolve (go e0) (go e1) (go e2) | _ => Val (LitV LitUnit) end with gov v := match v with | GenLeaf (inr (inl l)) => LitV l | GenNode 0 [GenLeaf (inl (inr f)); GenLeaf (inl (inr x)); e] => RecV f x (go e) | GenNode 1 [v1; v2] => PairV (gov v1) (gov v2) | GenNode 2 [v] => InjLV (gov v) | GenNode 3 [v] => InjRV (gov v) | _ => LitV LitUnit end for go)
File "./iris_heap_lang/lang.v", line 394, characters 1-86:
Warning:
Tactician detected a printing/parsing problem for the following tactic. Please report. refine (with go (e : expr) := _ with gov (v : val) := _ for go)
