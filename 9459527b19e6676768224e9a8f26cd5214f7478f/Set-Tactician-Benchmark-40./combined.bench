
Coq.micromega.ZifyClasses.mkapp2	40	12.7	search with cache (only 1: subst; only 1: auto).	0.246654987335	263
Coq.micromega.ZifyClasses.mkapp	40	2.0	search with cache (only 1: subst; only 1: auto).	0.0168418884277	4
Coq.micromega.ZifyClasses.mkrel	40	4.0	search with cache (only 1: subst; only 1: auto).	0.0144999027252	6
Coq.micromega.ZifyClasses.and_morph	40	0.0.0.0.0.0.0.0.0.1.16	search with cache (only 1: intro H; only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	6.95345401764	8665
Coq.micromega.ZifyClasses.or_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0924851894379	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0202569961548	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0279779434204	2
Coq.micromega.ZifyClasses.not_morph	40	0.0.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: tauto).	0.0176608562469	3
Coq.micromega.ZifyClasses.eq_iff	40	0.0.0.0.4.0	search with cache (only 1: intros A B []; only 1: split; only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).	0.0270178318024	10
Coq.micromega.ZifyClasses.rew_iff	40	0	search with cache (only 1: tauto).	0.00873494148254	1
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	3.6.1.5.2	search with cache (only 1: induction p; only 1: trivial; only 1: unfold tail; only 1: trivial; only 1: now repeat constructor).	0.625324964523	541
Coq.micromega.Env.nth_pred_double	40	0.0.0.0.0.3.3.1.0.2.1.5	search with cache (only 1: destruct p as [| p| p]; only 1: simpl; only 1: unfold jump; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_diag; only 1: unfold jump; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag; only 1: unfold tail; only 1: f_equal).	12.0592269897	9378
Coq.micromega.Tauto.eval_f_rew	40
Coq.micromega.Tauto.eiff_refl	40
Coq.micromega.Tauto.eiff_sym	40	3.0.0.0.4.0.11	search with cache (only 1: intros; only 1: destruct k; only 1: destruct H; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto with relations).	0.769624948502	604
Coq.micromega.Tauto.eiff_trans	40	0.0.5.8.0.0.10	search with cache (only 1: intuition; only 1: destruct k; only 1: simpl; only 1: firstorder; only 1: destruct H; only 1: simpl; only 1: intuition).	2.14856600761	1838
Coq.micromega.Tauto.hold_eiff	40
Coq.micromega.Tauto.eiff_eq	40	0.0.0.11.0.2.0.1	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.771636009216	1106
Coq.micromega.Tauto.eAnd_morph_Proper	40	0.0.0.3.0.1	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition congruence; only 1: intros; only 1: simpl; only 1: intuition congruence).	0.153013944626	21
Coq.micromega.Tauto.eOR_morph_Proper	40	0.0.0.0.0.0.0.26	search with cache (only 1: red; only 1: destruct k; only 1: intros; only 1: simpl in *; only 1: intuition congruence; only 1: intros; only 1: simpl in *; only 1: intuition congruence).	1.94638681412	1877
Coq.micromega.Tauto.eIMPL_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0431392192841	6
Coq.micromega.Tauto.eIFF_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0621230602264	6
Coq.micromega.Tauto.eNOT_morph_Proper	40	1.0.0.0.0.0.0	search with cache (only 1: destruct k; only 1: intros; only 1: simpl in *; only 1: intuition congruence; only 1: intros; only 1: simpl in *; only 1: intuition congruence).	0.0462758541107	8
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0106859207153	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0117099285126	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	17.0.3	search with cache (only 1: elim ARth; only 1: intros; only 1: firstorder).	1.69822192192	789
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	108	search with cache (only 1: firstorder).	4.94717001915	11400
Coq.micromega.EnvRing.Pphi1	40	117	search with cache (only 1: firstorder).	6.08488702774	13843
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	22.7619829178	2991
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.1.0.0.0.1.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	12.8719100952	1977
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0681619644165	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0912249088287	7
Coq.micromega.EnvRing.mkZmon_ok	40	2.1.2.0.0.2.19	search with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: mul_permut).	6.26567912102	1966
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.Refl.make_impl_true	40	0.0.1.5.20	search with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: intros HF; only 1: intuition).	2.87167406082	4970
Coq.micromega.Refl.make_impl_map	40	1.0.0.2.18	search with cache (only 1: intros n d; only 1: intros; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: firstorder).	1.85763001442	1515
Coq.micromega.Refl.make_conj_cons	40	0.0.0.3.0.0.2.9	search with cache (only 1: intros q; only 1: intros a0 b; only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: simpl in *; only 1: intuition congruence).	15.9407439232	10800
Coq.micromega.Refl.make_conj_impl	40	5.0.0.1.0.0.4.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: tauto; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: firstorder).	9.45767402649	6055
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	1.0.6.0.5	search with cache (only 1: intros n m; only 1: intros l2; only 1: intro H; only 1: rewrite make_conj_cons; only 1: tauto).	3.79276609421	1046
Coq.micromega.Refl.not_make_conj_app	40
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	8.13	search with cache (only 1: intros a b ? ?; only 1: now intros ->).	4.76220393181	5198
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.map_id	40	5.0.1.1.17	search with cache (only 1: intros; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	3.94581794739	4434
Coq.Vectors.VectorSpec.map_map	40	2.1.14.0.1.8.9	search with cache (only 1: intro; only 1: intros b Hb; only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	10.6428868771	16086
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.0.2.0.0.0.0.0	search with cache (only 1: intuition; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).	0.0551960468292	10
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0	search with cache (only 1: Bool.destr_bool).	0.00987195968628	1
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	0.0.0.7.13.1	search with cache (only 1: Bool.destr_bool; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: rewrite IHv; only 1: auto).	10.6173989773	7231
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A p; only 1: induction p as [| p IHp]; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: inversion le; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp; only 1: simpl; only 1: subst; only 1: destruct v; only 1: inversion le; only 1: apply f_equal; only 1: apply IHp).	38.6304337978	11811
Coq.Vectors.VectorSpec.uncons_cons	40	1.0	search with cache (only 1: intros n k; only 1: now simpl).	0.0154581069946	3
Coq.Vectors.VectorSpec.append_comm_cons	40	1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0243699550629	4
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	9.0.6.78	search with cache (only 1: induction n as [| n IHn]; only 1: PeanoNat.Nat.nzsimpl; only 1: auto with arith; only 1: now right).	30.5844390392	28080
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.1.2	search with cache (only 1: intros m n p; only 1: intros <-; only 1: auto with arith).	0.323377847672	170
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	1.6.2.1.1.2	search with cache (only 1: induction p as [p ?| p ?| ]; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: simpl; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: trivial).	3.50855016708	2097
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B f; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0762958526611	9
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.1	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0373351573944	7
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.0.0.2.1.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: auto with arith).	0.0344169139862	9
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.2.3	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity || congruence).	0.0536060333252	20
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.00766706466675	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0122058391571	2
Coq.Setoids.Setoid.Seq_trans	40	5.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.124383926392	41
Coq.Setoids.Setoid.gen_st	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.00846195220947	1
Coq.Bool.IfProp.Iftrue_inv	40	0.2.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.0203139781952	6
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0222339630127	7
Coq.Bool.IfProp.IfProp_true	40	0.39.5	search with cache (only 1: intros; only 1: inversion_clear H; only 1: assumption).	22.9555327892	58204
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros A B H; only 1: inversion H; only 1: assumption).	0.0106220245361	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.0315811634064	16
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.BoolOrder.le_refl	40	5	search with cache (only 1: destr_bool).	0.0319609642029	30
Coq.Bool.BoolOrder.le_trans	40	2	search with cache (only 1: destr_bool).	0.017187833786	11
Coq.Bool.BoolOrder.le_true	40	0	search with cache (only 1: destr_bool).	0.007896900177	1
Coq.Bool.BoolOrder.false_le	40	0	search with cache (only 1: destr_bool).	0.00700497627258	1
Coq.Bool.BoolOrder.le_compat	40	1.3.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: intros x y H y0 y1 e; only 1: subst; only 1: firstorder).	0.0442500114441	15
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0228281021118	2
Coq.Bool.BoolOrder.lt_trans	40	0.3	search with cache (only 1: destr_bool; only 1: intuition).	0.0200910568237	13
Coq.Bool.BoolOrder.lt_compat	40	0	search with cache (only 1: intuition).	0.0114998817444	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0491659641266	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: intuition; only 1: auto; only 1: intuition).	0.0310640335083	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.01154088974	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0289158821106	4
Coq.Bool.BoolOrder.le_lteq	40	1.0.1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0480718612671	7
Coq.Bool.BoolOrder.le_preorder	40	1.3.3.2.21	search with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: compute; only 1: destr_bool).	0.469496965408	837
Coq.Bool.BoolOrder.lt_strorder	40	0.0.1.3.14.0.1	search with cache (only 1: split; only 1: intros b; only 1: compute; only 1: destr_bool; only 1: intros b; only 1: destr_bool; only 1: auto).	0.442036867142	831
Coq.Bool.DecBool.ifdec_left	40	7.0.3.7	search with cache (only 1: intros; only 1: destruct H; only 1: auto; only 1: contradiction).	0.806479930878	1109
Coq.Bool.DecBool.ifdec_right	40	1.7.1.0.0	search with cache (only 1: intros A B C H **; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	2.84901618958	1533
Coq.Bool.Sumbool.sumbool_of_bool	40	11.0.3.8	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.690455198288	1470
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0.0.0	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: intros b; only 1: auto).	0.0211770534515	5
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0177249908447	4
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0293598175049	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0389020442963	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	search with cache (only 1: discriminate).	0.00850391387939	2
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00844097137451	1
Coq.Bool.Bool.eq_true_false_abs	40	5.1.2.10.2	search with cache (only 1: intro H; only 1: destruct H; only 1: intro z; only 1: discriminate; only 1: discriminate).	1.43134593964	2290
Coq.Bool.Bool.not_true_is_false	40	3.9.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.29253411293	258
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0138309001923	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.11	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.388972043991	339
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0195391178131	3
Coq.Bool.Bool.le_implb	40	1.0.1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0259828567505	7
Coq.Bool.Bool.compare_spec	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0276670455933	6
Coq.Bool.Bool.eqb_subst	40	0.4	search with cache (only 1: intro H; only 1: destr_bool).	0.113656997681	50
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00821185112	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00901103019714	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0.1.1	search with cache (only 1: split; only 1: destr_bool; only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.22217798233	54
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.097186088562	5
Coq.Bool.Bool.negb_orb	40	0.0.1.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: intuition; only 1: repeat split).	0.0296139717102	6
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00698590278625	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00804305076599	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00818610191345	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00863599777222	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00814485549927	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00879502296448	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00828409194946	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00742506980896	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.020082950592	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0182089805603	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0338380336761	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0268490314484	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: intuition).	0.0204441547394	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.024875164032	6
Coq.Bool.Bool.orb_true_intro	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.112879037857	53
Coq.Bool.Bool.orb_false_intro	40	0.3.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0164449214935	6
Coq.Bool.Bool.orb_false_elim	40	1.2.1	search with cache (only 1: intro b1; only 1: destr_bool; only 1: intuition).	0.090616941452	49
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.00676393508911	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00619602203369	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0061891078949	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.00898385047913	2
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00840592384338	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00755095481873	2
Coq.Bool.Bool.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00761890411377	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00960898399353	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0116331577301	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0278780460358	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0340869426727	5
Coq.Bool.Bool.andb_true_eq	40	4.0.0.0.1	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: destr_bool).	0.0898089408875	45
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.00735902786255	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0272698402405	3
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.0188369750977	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00942206382751	1
Coq.Bool.Bool.andb_diag	40	1	search with cache (only 1: destr_bool).	0.00738596916199	2
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00807690620422	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00739502906799	1
Coq.Bool.Bool.andb_false_elim	40	0.1.0.0.0.1	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0407938957214	17
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00918912887573	1
Coq.Bool.Bool.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00867986679077	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00735688209534	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00897598266602	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0123519897461	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0124850273132	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0108060836792	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0109059810638	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00902605056763	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00751805305481	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0276429653168	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0329110622406	5
Coq.Bool.Bool.implb_orb	40	0	search with cache (only 1: destr_bool).	0.00959396362305	1
Coq.Bool.Bool.implb_negb_orb	40	0	search with cache (only 1: destr_bool).	0.00910091400146	1
Coq.Bool.Bool.implb_true_r	40	1	search with cache (only 1: destr_bool).	0.00901794433594	2
Coq.Bool.Bool.implb_false_r	40	0	search with cache (only 1: destr_bool).	0.0105450153351	1
Coq.Bool.Bool.implb_true_l	40	0	search with cache (only 1: destr_bool).	0.00714993476868	1
Coq.Bool.Bool.implb_false_l	40	0	search with cache (only 1: destr_bool).	0.00629806518555	1
Coq.Bool.Bool.implb_same	40	0	search with cache (only 1: destr_bool).	0.00907492637634	1
Coq.Bool.Bool.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.00870108604431	1
Coq.Bool.Bool.implb_negb	40	0	search with cache (only 1: destr_bool).	0.00749611854553	1
Coq.Bool.Bool.implb_curry	40	0	search with cache (only 1: destr_bool).	0.0103440284729	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0104949474335	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0115699768066	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0100181102753	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.0080349445343	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00742816925049	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00773787498474	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00651812553406	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00828003883362	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.082367181778	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0105428695679	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00790596008301	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0101480484009	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.010812997818	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0143141746521	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0144910812378	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.00793194770813	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0256731510162	6
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00888109207153	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0334300994873	5
Coq.Bool.Bool.eq_true_iff_eq	40	3.2.3	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.33080291748	195
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0119369029999	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0152180194855	2
Coq.Bool.Bool.absurd_eq_bool	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0172879695892	3
Coq.Bool.Bool.absurd_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0108699798584	2
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.0095489025116	1
Coq.Bool.Bool.Is_true_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0112998485565	2
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00653004646301	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0107929706573	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00588703155518	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0170540809631	3
Coq.Bool.Bool.orb_prop_elim	40	4.3.1.0.2	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: auto).	2.25522589684	1613
Coq.Bool.Bool.orb_prop_intro	40	2.0.0.0.3	search with cache (only 1: intro b1; only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: tauto).	0.0435311794281	29
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0206301212311	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0211589336395	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0829010009766	27
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0170240402222	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0187299251556	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0146441459656	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0556328296661	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0626888275146	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00896787643433	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00738978385925	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00919604301453	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.0064868927002	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	6.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.028657913208	19
Coq.Bool.Bool.reflect_dec	40	2.2.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: auto).	0.0247530937195	19
Coq.Bool.Bool.eqb_spec	40	1.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0258281230927	6
Coq.Bool.BoolEq.beq_eq_true	40	3.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.0233812332153	7
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	2.0.0.0.0.1.0.7.0	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: intros; only 1: auto with datatypes; only 1: intro eq; only 1: auto with datatypes).	4.51054787636	2395
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	0.0.5	search with cache (only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.422400951385	124
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	2.2.0.0.3.0.0.0.0.9	search with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto with datatypes).	19.748786211	5926
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	9.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intuition).	3.67991185188	1720
Coq.Lists.ListSet.set_union_intro	40	0.0.0	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.0293538570404	3
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.0.1.1.0.0.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	5.42731809616	1334
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0279459953308	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	1.3.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.901309967041	218
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	0.0.0.13.0.19	search with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: right; only 1: tauto; only 1: simpl; only 1: intuition).	5.20868587494	4452
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	3.19	search with cache (only 1: intros [x y]; only 1: reflexivity).	0.285322904587	396
Coq.Lists.Streams.tl_nth_tl	40	0.0.0.3.0.0.0.9	search with cache (only 1: induction n as [| n IHn]; only 1: intro x; only 1: trivial; only 1: intro x; only 1: simpl; only 1: rewrite <- ?IHn; only 1: case x; only 1: trivial).	2.74751710892	1633
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	0.5.18.3.1	search with cache (only 1: intros; only 1: destruct H; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: reflexivity).	2.55978989601	4319
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	12.6.2	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.286800146103	510
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0346200466156	6
Coq.Lists.Streams.Str_nth_map	40	0.0.2.0.1.0	search with cache (only 1: induction n; only 1: intros s; only 1: unfold Str_nth; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.037948846817	9
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.1.4	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.866517782211	441
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0875880718231	7
Coq.Lists.List.nil_cons	40	26	search with cache (only 1: inversion 1).	0.237392902374	433
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	13.11	search with cache (only 1: intro; only 1: CRelationClasses.simpl_crelation).	0.768046855927	1111
Coq.Lists.List.length_zero_iff_nil	40	0.0.0.2.0.0.1.13	search with cache (only 1: red; only 1: induction l as [| a tail]; only 1: split; only 1: firstorder  discriminate; only 1: firstorder  discriminate; only 1: split; only 1: now discriminate; only 1: now discriminate).	1.38032197952	970
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: split).	0.00772285461426	1
Coq.Lists.List.hd_error_cons	40	0.0	search with cache (only 1: unfold hd_error, tl; only 1: auto).	0.016478061676	2
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	1	search with cache (only 1: now destruct l).	0.0118391513824	2
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0676929950714	6
Coq.Lists.List.app_assoc	40	1.0.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.170403003693	70
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0652911663055	6
Coq.Lists.List.app_comm_cons	40	2	search with cache (only 1: auto).	0.011962890625	3
Coq.Lists.List.app_eq_nil	40	4.0.1.2.3.10	search with cache (only 1: compute; only 1: destruct l; only 1: firstorder  discriminate; only 1: destruct l as [| x xs]; only 1: inversion 1; only 1: firstorder  discriminate).	2.53225708008	2401
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.elt_eq_unit	40
Coq.Lists.List.app_inj_tail_iff	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	0.0.0.1.0.11	search with cache (only 1: firstorder; only 1: symmetry; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.50886297226	456
Coq.Lists.List.last_length	40	4.0.0.1.0.9	search with cache (only 1: induction l; only 1: simpl; only 1: intro n; only 1: reflexivity; only 1: simpl; only 1: auto).	1.86311483383	698
Coq.Lists.List.app_inv_head_iff	40
Coq.Lists.List.app_inv_head	40	0.0.1.0.1.0.0.1.0.0.0	search with cache (only 1: intro l; only 1: intro x; only 1: induction l as [| ? l IHl]; only 1: intro y; only 1: intros H; only 1: auto; only 1: intro y; only 1: intros H; only 1: apply IHl; only 1: inversion H; only 1: auto).	1.42519497871	679
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.app_inv_tail_iff	40
Coq.Lists.List.in_eq	40	4.9	search with cache (only 1: simpl; only 1: auto).	0.192361831665	110
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: intros x y H; only 1: firstorder  discriminate).	0.0132830142975	2
Coq.Lists.List.not_in_cons	40	7.14.1.0.0	search with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intros HP HIS; only 1: intuition).	7.20147609711	6267
Coq.Lists.List.in_nil	40	2.2	search with cache (only 1: intro n; only 1: auto).	0.0957820415497	6
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	3.4.1.2.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: intros H; only 1: intro y; only 1: firstorder).	6.01938891411	3155
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.in_split	40
Coq.Lists.List.in_elt	40	1.1.1.0.2.4.18	search with cache (only 1: intro x; only 1: intros l H; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.87837409973	2725
Coq.Lists.List.in_elt_inv	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.00799298286438	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.0	search with cache (only 1: simpl; only 1: intros x y l1 l2 Hin; only 1: auto).	0.0204291343689	3
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40
Coq.Lists.List.app_nth1	40	2.0.0.0.7.0.0.0	search with cache (only 1: intros l m a; only 1: induction l; only 1: inversion 1; only 1: intros [| ] ?; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	9.21230506897	4386
Coq.Lists.List.app_nth2	40
Coq.Lists.List.app_nth2_plus	40	1.1.0.2.1	search with cache (only 1: induction l; only 1: intro n; only 1: auto; only 1: simpl; only 1: auto).	0.335345983505	62
Coq.Lists.List.nth_middle	40	2.1.11.14	search with cache (only 1: intros n l d; only 1: induction n; only 1: auto; only 1: auto).	6.26705884933	7299
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_ext	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	0.0.0.1.1.0.2.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: intros n Hlen'; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	5.06822085381	1351
Coq.Lists.List.nth_error_app2	40	0.0.0.3.0.0.2.0.1.0.0.0	search with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: simpl in *; only 1: intros [| x l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	8.52661991119	3433
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.0.1.1.2.0	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	0.558680057526	152
Coq.Lists.List.last_last	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.removelast_last	40
Coq.Lists.List.remove_cons	40
Coq.Lists.List.remove_app	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.notin_remove	40
Coq.Lists.List.in_remove	40
Coq.Lists.List.in_in_remove	40
Coq.Lists.List.remove_remove_comm	40
Coq.Lists.List.remove_remove_eq	40
Coq.Lists.List.remove_length_le	40
Coq.Lists.List.remove_length_lt	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.1	search with cache (only 1: simpl; only 1: split).	0.0177628993988	7
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	0.0.1.1	search with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: auto; only 1: intuition).	0.127460956573	41
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0286018848419	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.rev_eq_app	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40	0.1.0.0.0.0.0.0.7	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).	1.27594304085	595
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	1.1.1.19	search with cache (only 1: intro y; only 1: induction l as [| ? l IHl]; only 1: auto; only 1: auto).	5.54252815247	7249
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	1	search with cache (only 1: auto).	0.00965881347656	2
Coq.Lists.List.concat_cons	40	3.0.0.1.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: intros; only 1: simpl; only 1: trivial; only 1: auto).	0.0399730205536	12
Coq.Lists.List.concat_app	40	0.4.9.3.2.8.0	search with cache (only 1: intros x l1; only 1: induction x as [| a l IHl]; only 1: auto; only 1: simpl in *; only 1: rewrite IHl; only 1: rewrite <- app_assoc; only 1: f_equal).	37.7851119041	29246
Coq.Lists.List.in_concat	40
Coq.Lists.List.list_eq_dec	40	43	search with cache (only 1: decide equality).	25.7773160934	30819
Coq.Lists.List.map_cons	40	0.0	search with cache (only 1: simpl; only 1: tauto).	0.0151491165161	2
Coq.Lists.List.in_map	40	2.7.0.2.1.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| y l IHl]; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: destruct 1 as [?| H]; only 1: destruct H; only 1: auto; only 1: eauto).	17.3331239223	8587
Coq.Lists.List.in_map_iff	40
Coq.Lists.List.map_length	40	0.0.1.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.123700141907	7
Coq.Lists.List.map_nth	40	1.0.0.0.7.0.1.1.6.3.0	search with cache (only 1: induction l; only 1: simpl; only 1: induction n; only 1: reflexivity; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: destruct n; only 1: simpl; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	39.7535979748	22353
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.0.0.2.5.3	search with cache (only 1: intros; only 1: induction l; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: auto).	16.7807080746	6144
Coq.Lists.List.map_last	40	0.0.0.0.0.0.1.2	search with cache (only 1: intro l; only 1: intro n; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.653977870941	183
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	1.0.5	search with cache (only 1: intros [| x l] H; only 1: auto; only 1: discriminate).	0.123684167862	42
Coq.Lists.List.map_eq_cons	40
Coq.Lists.List.map_eq_app	40
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.flat_map_app	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.1.0.2.0.0.6.3	search with cache (only 1: intros H; only 1: intro l2; only 1: intros f l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	4.11340403557	2368
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0501408576965	25
Coq.Lists.List.map_map	40	0.2.0.0.5.4	search with cache (only 1: intros op Hop; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.96187400818	1104
Coq.Lists.List.map_ext_in	40	0.2.2.3.0.0.5.15	search with cache (only 1: intros a b c0; only 1: intros; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	5.53806805611	3405
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.1.1.3	search with cache (only 1: intros ? ? ? Fl Fr; only 1: intro l; only 1: apply map_ext_in; only 1: auto).	0.121296167374	28
Coq.Lists.List.flat_map_ext	40	1.0.0.4.1.7	search with cache (only 1: induction l as [| ? l IHl]; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	1.9882338047	969
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.fold_left_app	40	2.2.0.0.1.1	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: intro l; only 1: reflexivity; only 1: simpl; only 1: auto).	1.07123208046	356
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.1.0.3	search with cache (only 1: induction l1 as [| a ? ?]; only 1: intros l2; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	5.1601691246	1262
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.3.1.1.0.0.0.0.1	search with cache (only 1: induction l as [| a ? ?]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros H; only 1: intuition congruence).	5.73524284363	1620
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40	0.0.0.13	search with cache (only 1: simpl; only 1: case (f a); only 1: now intros ->; only 1: firstorder  discriminate).	4.84277391434	2126
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0200018882751	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	0.2.3.6.3	search with cache (only 1: intro l1; only 1: intro l; only 1: intros H; only 1: rewrite filter_map; only 1: apply ext_in_map).	7.08833885193	2758
Coq.Lists.List.filter_ext_in_iff	40	0.0.0.5.0.6.1	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	16.5051839352	6364
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0318880081177	4
Coq.Lists.List.remove_alt	40	0.1.1.0.0.1.2.0.1.2.0.0.9	search with cache (only 1: induction l as [| y l IHl]; only 1: reflexivity; only 1: destruct (eq_dec x y); only 1: simpl; only 1: destruct (eq_dec x y); only 1: auto; only 1: rewrite IHl; only 1: intuition; only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition; only 1: rewrite IHl; only 1: f_equal).	28.4344549179	11977
Coq.Lists.List.count_occ_alt	40
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.0.0.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl in *; only 1: intros p H; only 1: destruct p as [a0 b]; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H as [H| H]; only 1: injection H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	32.2906961441	8109
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.3.0.3.1.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	6.05618405342	2504
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0605709552765	8
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.1.0.0.2.1.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.12805199623	605
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros; only 1: contradiction; only 1: firstorder  (subst; auto)).	0.117527008057	39
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	36	search with cache (only 1: left).	0.215465068817	659
Coq.Lists.List.lel_trans	40	0.0.3.16.0.13	search with cache (only 1: firstorder; only 1: unfold lel; only 1: generalize H; only 1: elim H0; only 1: auto with arith; only 1: auto with arith).	3.45533204079	4896
Coq.Lists.List.lel_cons_cons	40	1.0.0.0	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0308690071106	5
Coq.Lists.List.lel_cons	40	0.1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.0226290225983	5
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0184710025787	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_nil_l	40	0.0.4	search with cache (only 1: intros l a; only 1: intro H; only 1: inversion_clear H).	0.0305550098419	23
Coq.Lists.List.incl_l_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.00731706619263	1
Coq.Lists.List.incl_tl	40	3.3.2	search with cache (only 1: intros a b; only 1: intros x y Hneq Hin; only 1: intuition).	0.105700969696	70
Coq.Lists.List.incl_tran	40	2.0	search with cache (only 1: intros; only 1: auto with arith).	0.0132761001587	4
Coq.Lists.List.incl_appl	40	2.5	search with cache (only 1: intros l H; only 1: auto using in_app_or, in_or_app).	0.252259016037	83
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0127530097961	1
Coq.Lists.List.incl_cons	40	25	search with cache (only 1: firstorder  (subst; auto)).	8.31057310104	7020
Coq.Lists.List.incl_cons_inv	40	1.0.1.0	search with cache (only 1: unfold incl; only 1: intros a l0 ?; only 1: simpl; only 1: auto).	0.0352659225464	11
Coq.Lists.List.incl_app	40	0.2.4.3.5	search with cache (only 1: intros l H; only 1: induction l; only 1: auto; only 1: intros Hincl; only 1: firstorder).	12.7798149586	3986
Coq.Lists.List.incl_app_app	40	1.1	search with cache (only 1: intros l l1 l2; only 1: solve [ auto ]).	0.0203559398651	4
Coq.Lists.List.incl_app_inv	40	2.0	search with cache (only 1: unfold incl; only 1: auto with datatypes).	0.0182290077209	4
Coq.Lists.List.incl_filter	40	0.0.0.0.4.0.0.0.3.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros Hincl; only 1: simpl; only 1: case_eq (f a); only 1: intro H; only 1: intros; only 1: firstorder; only 1: intros Ha Eq; only 1: auto).	5.8530189991	2447
Coq.Lists.List.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.firstn_nil	40	0.0.0.2.26.14	search with cache (only 1: symmetry; only 1: destruct n; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: reflexivity).	0.700416088104	1706
Coq.Lists.List.firstn_cons	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.0186018943787	3
Coq.Lists.List.firstn_all	40	0.0.0.1.2	search with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0340669155121	8
Coq.Lists.List.firstn_all2	40	0.0.5.0.0.1.1.1.0	search with cache (only 1: induction n as [| n IHn]; only 1: intro l; only 1: now destruct l; only 1: simpl; only 1: intros [| a l] H; only 1: auto; only 1: f_equal; only 1: simpl in *; only 1: auto with arith).	16.2591469288	5560
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.00945806503296	1
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40	2.2.0.1.0.1.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: now simpl; only 1: intro y; only 1: simpl; only 1: unfold firstn at 2, length; only 1: apply f_equal; only 1: auto).	5.22112393379	1573
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	0.0.1.0.8.1.2	search with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: induction l; only 1: simpl; only 1: apply firstn_all2; only 1: auto with arith; only 1: now simpl).	7.84893512726	3505
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0.0.2.0	search with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0289869308472	7
Coq.Lists.List.skipn_nil	40	1.0.7.14	search with cache (only 1: intro l; only 1: destruct l; only 1: now simpl; only 1: now simpl).	0.774479866028	1172
Coq.Lists.List.skipn_cons	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0155999660492	2
Coq.Lists.List.skipn_all	40	2.0.8.0	search with cache (only 1: intros; only 1: induction l; only 1: now simpl; only 1: auto).	0.363129854202	210
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	5.7703230381	1376
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40
Coq.Lists.List.skipn_app	40	0.3.0.3.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: simpl; only 1: destruct l1 as [| x xs]; only 1: auto with arith; only 1: apply iHk).	3.39948606491	1039
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.removelast_firstn_len	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.2.2	search with cache (only 1: induction l; only 1: split; only 1: simpl in *; only 1: f_equal).	0.0862469673157	8
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with l'; only 1: rewrite <- IHl; only 1: reflexivity).	8.23233699799	2676
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40	3.17.8.52	search with cache (only 1: induction l1 as [| x l1 IH]; only 1: now constructor; only 1: right; only 1: auto).	1.67767691612	5059
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0156140327454	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0404930114746	4
Coq.Lists.List.NoDup_rev	40
Coq.Lists.List.NoDup_filter	40
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.nodup_incl	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.cons_seq	40	0.2.0.0	search with cache (only 1: intro i; only 1: simpl; only 1: intros; only 1: f_equal).	0.0262570381165	6
Coq.Lists.List.seq_length	40	2.3.0.0.5.18	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: intros a0; only 1: now simpl; only 1: simpl; only 1: auto with arith).	14.0541751385	13063
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	0.0.19.1	search with cache (only 1: intro i; only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	6.00907206535	4439
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40	3.0.0.16	search with cache (only 1: fix gcd_greatest 1; only 1: intros a n; only 1: revert a; only 1: auto with arith).	4.67734909058	2413
Coq.Lists.List.seq_S	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nth	40
Coq.Lists.List.Exists_nil	40	7.3	search with cache (only 1: firstorder; only 1: inversion H).	0.153328895569	113
Coq.Lists.List.Exists_cons	40	0.6.1.1.14.3	search with cache (only 1: split; only 1: inversion 1; only 1: constructor; only 1: trivial; only 1: auto; only 1: firstorder).	3.84710597992	5392
Coq.Lists.List.Exists_app	40
Coq.Lists.List.Exists_rev	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Exists_fold_right	40	0.0.0.1.0.3.1.2.2	search with cache (only 1: induction l as [| a1 l IHl]; only 1: now intuition; only 1: simpl; only 1: split; only 1: inversion 1; only 1: auto; only 1: rewrite <- IHl; only 1: auto; only 1: firstorder).	18.2180309296	7298
Coq.Lists.List.incl_Exists	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_nth	40
Coq.Lists.List.Forall_inv	40	1.12.6	search with cache (only 1: intros x l1; only 1: inversion_clear 1; only 1: auto).	1.4769551754	1658
Coq.Lists.List.Forall_inv_tail	40	0.0.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0234289169312	3
Coq.Lists.List.Forall_app	40
Coq.Lists.List.Forall_elt	40	4.1.24.52.1	search with cache (only 1: intros HE; only 1: induction l1; only 1: now inversion HE; intuition; only 1: inversion_clear HE; only 1: auto).	16.9587390423	37876
Coq.Lists.List.Forall_rev	40
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_fold_right	40	0.0.0.1.2.0.1.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: now intuition; only 1: split; only 1: simpl; only 1: inversion_clear 1; only 1: firstorder; only 1: simpl; only 1: intros HE; only 1: now inversion HE; intuition).	11.9130370617	3769
Coq.Lists.List.incl_Forall	40
Coq.Lists.List.map_ext_Forall	40
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Exists_or	40
Coq.Lists.List.Exists_or_inv	40
Coq.Lists.List.Forall_impl	40	0.0.0.0.0.5.0	search with cache (only 1: intros P Q H l H0; only 1: apply Forall_forall; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.308969974518	167
Coq.Lists.List.Forall_and	40	0.1.19.1	search with cache (only 1: intros f l; only 1: intro l'; only 1: rewrite !Forall_forall; only 1: firstorder  auto with datatypes).	13.3055171967	9177
Coq.Lists.List.Forall_and_inv	40	0.1.9.5	search with cache (only 1: intros HP HIS; only 1: intro l; only 1: rewrite !Forall_forall; only 1: firstorder  auto with datatypes).	1.47794699669	1251
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.063266992569	10
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.incl_Forall_in_iff	40
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2_refl	40	3	search with cache (only 1: eauto).	0.00955700874329	4
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.0.0.11.27	search with cache (only 1: revert n; only 1: induction n; only 1: now simpl; only 1: simpl; only 1: now f_equal).	1.47541999817	1857
Coq.Lists.List.repeat_spec	40
Coq.Lists.List.repeat_cons	40	0.3.2.0.43	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	1.33336806297	1642
Coq.Lists.List.repeat_app	40	0.1.1.2.0	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: simpl in *; only 1: f_equal; only 1: auto).	0.0470590591431	9
Coq.Lists.List.repeat_eq_app	40
Coq.Lists.List.repeat_eq_cons	40	6.0.0.1.2.0	search with cache (only 1: revert n; only 1: revert l; only 1: induction n as [| n IH]; only 1: inversion 1; only 1: intros [=H1 H0]; only 1: now f_equal).	1.47726988792	754
Coq.Lists.List.repeat_eq_elt	40
Coq.Lists.List.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	4.2.0.0.2.31	search with cache (only 1: symmetry; only 1: induction n as [| n IHn]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite IHn).	1.51572299004	1430
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.0.2.1	search with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).	0.0323159694672	8
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	0.0.3.22	search with cache (only 1: induction l; only 1: eauto; only 1: repeat rewrite <- app_comm_cons; only 1: intuition).	30.3215501308	8402
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	0.572423934937	137
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0195739269257	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	3.0.0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: eauto).	0.036544084549	8
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: now constructor).	0.0223529338837	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	1.0.4.0.0.0.1.2.7	search with cache (only 1: intro l; only 1: intros; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intros [H| H]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel).	9.01530694962	4257
Coq.Lists.SetoidList.InA_nil	40	32	search with cache (only 1: now subst).	2.25195884705	3711
Coq.Lists.SetoidList.InA_alt	40
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	0.0.8	search with cache (only 1: red; only 1: intuition; only 1: invlist InA).	0.0689930915833	34
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.4.0.1.2.7.12	search with cache (only 1: intros l1 l2; only 1: split; only 1: induction 1; only 1: constructor; only 1: auto using LocallySorted; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto).	38.0310640335	26003
Coq.Lists.SetoidList.equivlist_equiv	40	20	search with cache (only 1: firstorder).	2.67227005959	1518
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40
Coq.Lists.SetoidList.In_InA	40	1.1.0.0.2.1	search with cache (only 1: intro l; only 1: induction l as [| y l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: rewrite InA_alt; only 1: firstorder).	0.436673164368	94
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.0.0.1	search with cache (only 1: split; only 1: intros; only 1: invlist InA; only 1: auto; only 1: auto).	0.0309109687805	6
Coq.Lists.SetoidList.InA_double_head	40	0.0.0.1.4	search with cache (only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: auto).	0.0505328178406	10
Coq.Lists.SetoidList.InA_permute_heads	40	0.1	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.0787680149078	3
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.0.0	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).	0.0229980945587	4
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40	0.0.0.0.0.0	search with cache (only 1: destruct l as [| a l]; only 1: intros Hincl; only 1: reflexivity; only 1: intros E; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).	0.0485968589783	6
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0452289581299	3
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0587661266327	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.11	search with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	3.98331904411	1128
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	3.0.0.0.0.4.0.3.4.33	search with cache (only 1: intuition; only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	14.3282589912	6688
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	3.0.1.0	search with cache (only 1: simple induction l; only 1: constructor; only 1: intros; only 1: intuition).	0.280498981476	25
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.109383821487	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.0.0.0.1.1.3.27	search with cache (only 1: induction l1; only 1: intros; only 1: inv; only 1: eauto; only 1: intros; only 1: inv; only 1: constructor; only 1: auto).	4.61538100243	4887
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.0.6.0.1.0.2.4	search with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	5.37195205688	1496
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0441830158234	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	11.0	search with cache (only 1: intros; only 1: now rewrite H).	0.512415885925	184
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	0.2.0	search with cache (only 1: intro n; only 1: decide equality; only 1: decide equality).	0.229897022247	67
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	2.0	search with cache (only 1: revert P a f; only 1: intuition).	0.0135838985443	4
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.011157989502	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0327010154724	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.014209985733	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0125780105591	2
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: auto).	0.00912499427795	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00689005851746	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0234670639038	5
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0157170295715	6
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.1.0.0.0.1.2.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	8.94365406036	4973
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.1.0.1.2	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial).	4.80880212784	1964
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0158760547638	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.019021987915	3
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.017147064209	1
Coq.NArith.BinNat.N.add_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0167579650879	4
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0101289749146	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00893211364746	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	5.2.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.301305055618	68
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40	3.11.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	13.7207100391	6582
Coq.NArith.BinNat.N.compare_lt_iff	40	2.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0127990245819	4
Coq.NArith.BinNat.N.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.00869917869568	1
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: now destruct compare; only 1: trivial).	0.0371971130371	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	2	search with cache (only 1: reflexivity).	0.0407450199127	3
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40	0.0.1.0.0.0.1.1.6	search with cache (only 1: symmetry; only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.42585611343	885
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0103039741516	1
Coq.NArith.BinNat.N.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0119659900665	1
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0179948806763	4
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.009437084198	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40	0.2.0.4.0.0.1.13	search with cache (only 1: destruct n, m; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	11.6254761219	11773
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.1	search with cache (only 1: intro H2; only 1: now destruct n, m).	0.276875972748	93
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0471580028534	10
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0521619319916	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: assert (le0 : forall n, (0 <= n)%nat) by (intro n; induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: auto; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0536289215088	10
Coq.NArith.BinNat.N.compare_0_r	40	2.21	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.601529121399	624
Coq.NArith.BinNat.N.pow_0_r	40	1	search with cache (only 1: now nzsimpl').	0.0216989517212	2
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	4.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.135107040405	6
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	14	search with cache (only 1: now destruct n).	1.50833797455	1066
Coq.NArith.BinNat.N.even_spec	40	9.1.1.4.9.25	search with cache (only 1: cases ltac:(n); only 1: split; only 1: now exists 0%nat; only 1: easy; only 1: fix even_spec 1; only 1: trivial).	10.805036068	14320
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.1	search with cache (only 1: intros Hy; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0301549434662	5
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0134420394897	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.3.2.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (EQ, EQ'); only 1: exists bb; only 1: now rewrite mul_comm).	0.676326990128	319
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: apply le_0_l).	0.0473349094391	14
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0.4	search with cache (only 1: simpl; only 1: now destruct a).	0.0686631202698	13
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0266220569611	4
Coq.NArith.BinNat.N.testbit_neg_r	40	15.4	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.359256982803	297
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0136749744415	3
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40	4.2.0.4.2	search with cache (only 1: unfold ltb, lt; only 1: intuition; only 1: now rewrite compare_antisym, H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: auto).	6.83033204079	3197
Coq.NArith.BinNat.N.gt_lt	40	1.1.2	search with cache (only 1: unfold lt, gt; only 1: intros; only 1: now rewrite compare_antisym, H).	0.155561923981	42
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00734496116638	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00853586196899	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.BinNat.N.iter_swap_gen	40	0.0.0.0.0.0.0.0.0.0.0.1.0.8.0	search with cache (only 1: intros H p; only 1: induction p; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp).	10.1865990162	3869
Coq.NArith.BinNat.N.iter_swap	40	0.10.1	search with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	1.18872404099	593
Coq.NArith.BinNat.N.iter_succ	40	2.1.0.1.0.0.1.2.5	search with cache (only 1: intros n IH; only 1: intro; only 1: induction n; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intro q; only 1: apply Pos.iter_succ).	7.10138201714	4367
Coq.NArith.BinNat.N.iter_succ_r	40	2.6	search with cache (only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.249848842621	88
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.1.0.0	search with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.0242021083832	5
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	7.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).	0.460016965866	249
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	1.0.2.0.0.0.14	search with cache (only 1: symmetry; only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.560796022415	674
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40	9.1.17.20.18.18	search with cache (only 1: symmetry; only 1: bitwise as m; only 1: revert a; only 1: fix even_spec 1; only 1: intro q; only 1: trivial).	25.118858099	17875
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	2.7.3.3	search with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n; only 1: now subst; only 1: apply SuccNat2Pos.id_succ).	0.485321998596	302
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: subst n'; only 1: now rewrite <- ?N.succ_le_mono).	0.0363199710846	9
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40
Coq.NArith.Nnat.Nat2N.inj_succ	40	1.9	search with cache (only 1: simpl; only 1: now destruct n).	0.135031938553	106
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.7	search with cache (only 1: symmetry; only 1: nat2N).	0.0221841335297	9
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	0.5.29	search with cache (only 1: bitwise as m; only 1: f_equal; only 1: nat2N).	0.773860931396	1433
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.030524969101	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0171849727631	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0194489955902	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0195851325989	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	6.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: destr_bool).	0.246524810791	9
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	4.0.0.3.1	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: intro m; only 1: destruct m; only 1: easy).	0.742801904678	311
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0238351821899	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Pos.eqb_eq, Exx', Eyy').	0.0325429439545	3
Coq.Strings.Ascii.ascii_N_embedding	40	21.0.7.5	search with cache (only 1: intros n; only 1: induction n; only 1: simpl; only 1: destr_bool).	11.7172579765	6363
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	7.27.8	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: destr_bool).	9.20105004311	9864
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	6.0.39	search with cache (only 1: intro n; only 1: intro m; only 1: now PeanoNat.Nat.nzsimpl).	0.499965190887	1429
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	1.5	search with cache (only 1: unfold Empty, empty; only 1: auto).	0.0233280658722	15
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	3.2.0.2.2.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: intros p l inlist; only 1: intuition; only 1: induction H; only 1: intuition; only 1: intuition).	4.73982286453	2018
Coq.FSets.FMapWeakList.Raw.mem_1	40	4.17.2	search with cache (only 1: intros p l abs; only 1: fix odd_spec 1; only 1: trivial).	5.6916179657	1196
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.2.1.0.0.0.0.0.1.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	18.083438158	4101
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: firstorder).	0.0110471248627	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00963997840881	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	3.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: auto).	0.149687051773	30
Coq.FSets.FMapWeakList.Raw.fold_1	40	1.2.6.2.4	search with cache (only 1: induction m; only 1: auto; only 1: intros p l abs; only 1: simpl; only 1: intuition).	2.90941095352	1606
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e); only 1: intros; only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	38.6067039967	10703
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40	4.9.12.0	search with cache (only 1: intros m; only 1: intros n; only 1: fix odd_spec 1; only 1: auto).	5.11805486679	5741
Coq.FSets.FMapWeakList.Make.empty_1	40	1.2.0.16	search with cache (only 1: intro n; only 1: intro abs; only 1: red; only 1: inversion 1).	0.701310873032	734
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40	2.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.505233049393	251
Coq.FSets.FMapWeakList.Make.add_1	40	3.33	search with cache (only 1: fix gcd_greatest 1; only 1: intuition).	5.39535903931	8228
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0.2.1.1.0	search with cache (only 1: intros m; only 1: case m; only 1: intros NoDup hyp; only 1: case m; only 1: auto).	0.03937292099	9
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0163099765778	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	1.13.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.212452888489	285
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0.0	search with cache (only 1: intros m; only 1: auto).	0.0177929401398	2
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40	1.7	search with cache (only 1: fix even_spec 1; only 1: firstorder).	0.0958511829376	47
Coq.FSets.FMapWeakList.Make.equal_2	40	10.10	search with cache (only 1: fix even_spec 1; only 1: intuition congruence).	2.22777485847	1917
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	13.6.0.1	search with cache (only 1: intros A P H; only 1: simpl; only 1: firstorder; only 1: eauto with bool).	2.54045510292	2399
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40	0.1.0.1.14.0.1	search with cache (only 1: intro s; only 1: unfold mem; only 1: intros x; only 1: case (M.mem x s); only 1: auto; only 1: intros; only 1: discriminate H).	1.86561512947	2648
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	1.19.1.2	search with cache (only 1: intro b1; only 1: intro s; only 1: fix even_spec 1; only 1: eauto with bool).	3.29245519638	4835
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	5.1.0.1.2.0.0.0.0.4.1	search with cache (only 1: intros s s'; only 1: case (M.equal s s'); only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: unfold subset; only 1: case M.subset; only 1: auto; only 1: discriminate).	9.12875509262	7410
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.0.1.0.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.choose s); only 1: case (M.elements s); only 1: firstorder; only 1: case (M.elements s); only 1: firstorder).	0.122010946274	42
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.0.4	search with cache (only 1: intuition; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0437960624695	14
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	8.3	search with cache (only 1: destr_bool; only 1: intuition).	0.433843135834	349
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.1.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.054347038269	9
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	12.8381800652	1145
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.2.0	search with cache (only 1: intros s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.0683171749115	17
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.031546831131	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2.21	search with cache (only 1: intro s; only 1: intros x y H; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	4.23602199554	5234
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0.0.1.0	search with cache (only 1: intros s x y; only 1: firstorder; only 1: unfold remove; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.remove x s); only 1: firstorder).	0.048919916153	8
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.0.2	search with cache (only 1: intros s x; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.301531076431	105
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0248029232025	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.126588106155	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.1.0.9.0.4	search with cache (only 1: intros s s'; only 1: unfold inter; only 1: intuition; only 1: case (M.union s s'); only 1: case (M.inter s s'); only 1: firstorder).	1.89563989639	1516
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0253851413727	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.1.0.0.5.0	search with cache (only 1: intros s s' x; only 1: case (M.remove x s); only 1: firstorder; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: firstorder).	2.05819392204	610
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	2.2	search with cache (only 1: intros op Hop; only 1: decide equality).	0.0621619224548	14
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.3.6.0.2	search with cache (only 1: intro y0; only 1: unfold filter; only 1: intros n IH; only 1: firstorder; only 1: destruct M.filter as (x0, Hiff); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	2.00267291069	1455
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.5.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: intro x; only 1: eauto with bool).	0.660727977753	298
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.14.1	search with cache (only 1: unfold exists_; only 1: intros s s' x; only 1: case M.exists_; only 1: intuition; only 1: firstorder; only 1: intuition congruence).	4.93037891388	3534
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FMapList.Raw.empty_1	40	3.22	search with cache (only 1: intros Hincl; only 1: inversion_clear 1).	0.410597801208	481
Coq.FSets.FMapList.Raw.empty_sorted	40	26	search with cache (only 1: left).	0.0898878574371	333
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	0.9.2.3.2	search with cache (only 1: intro m; only 1: destruct m; only 1: auto with ordered_type; only 1: red; only 1: intuition).	4.3050968647	1908
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40
Coq.FSets.FMapList.Raw.elements_1	40	5.1	search with cache (only 1: intros e' eqfind; only 1: eauto with ordered_type).	0.0443580150604	12
Coq.FSets.FMapList.Raw.elements_2	40	1.0	search with cache (only 1: intros m x; only 1: auto).	0.0152728557587	3
Coq.FSets.FMapList.Raw.elements_3	40	2.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.072126865387	12
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	3.0.6.6.34	search with cache (only 1: compute; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: tauto; only 1: intuition).	35.1103758812	29270
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.0.4.4.0.0.3.0.6.5	search with cache (only 1: intros m Hm x; only 1: case m; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros sorted belong1; only 1: intuition; only 1: inversion_clear H; only 1: intuition).	28.9254698753	11206
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.1.5.0	search with cache (only 1: induction m; only 1: constructor 1; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.71091103554	404
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.730478048325	156
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40	3.5	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.139495134354	69
Coq.FSets.FMapList.Make.empty_1	40	2.0.1.15	search with cache (only 1: repeat red; only 1: simpl; only 1: intros a e; only 1: inversion 1).	0.220226049423	252
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40	2.1.4	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: auto).	0.110460042953	49
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	3.0	search with cache (only 1: intros m; only 1: intuition).	0.0179731845856	5
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0170300006866	2
Coq.FSets.FMapList.Make.elements_3	40	2.21.0	search with cache (only 1: intros m; only 1: case m; only 1: auto).	0.368151903152	655
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	4.3.3	search with cache (only 1: intros l'; only 1: destruct l'; only 1: intuition congruence).	0.220505952835	144
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	0.9	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.641044139862	88
Coq.FSets.FMapList.Make.equal_2	40	0.4.12	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	1.16373705864	1037
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40	0.24	search with cache (only 1: fix even_spec 1; only 1: auto).	3.28052687645	3117
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	3.1.1.0.47	search with cache (only 1: fix le_div2 1; only 1: intros (l, Hl); only 1: intros (m2, Hm2); only 1: unfold eq; only 1: auto).	38.2372610569	53155
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.23.6	search with cache (only 1: intro H; only 1: split; only 1: auto with sets).	0.37096786499	1055
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	0.3.9	search with cache (only 1: destruct 1; only 1: intro; only 1: auto with sets).	1.64345884323	357
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.0.3.11.13	search with cache (only 1: intro z; only 1: split; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	2.42570209503	4098
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	2.10.20.31	search with cache (only 1: intro n; only 1: intros; only 1: constructor; only 1: trivial).	9.50155806541	23673
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	1.0.1.0.1.8	search with cache (only 1: intro n; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.535365819931	338
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	4.1	search with cache (only 1: red; only 1: auto with sets).	0.0153620243073	7
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0220069885254	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0204739570618	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0245940685272	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0220229625702	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.0.16	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	7.84186291695	2827
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.1.17	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	23.9559109211	7919
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.16.16	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	1.84977316856	1471
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.17.1	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	29.1075868607	9152
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.14.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	29.679017067	8325
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.2.8.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	35.6283090115	13306
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.33.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	15.8631131649	9050
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0219597816467	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.7.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	2.44040489197	688
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	1.62540388107	498
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	3.3.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.027951002121	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40	0.0.0.0.0.2.0.0.26	search with cache (only 1: destr_bool; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order'; only 1: order'; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: order || apply lt_0_1; only 1: order').	26.1561448574	25615
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.9.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.21834182739	338
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	4.2.3.5.6	search with cache (only 1: split; only 1: firstorder; only 1: intros x x' Hx; only 1: now f_equiv; only 1: congruence).	0.522759914398	676
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	21.0.5	search with cache (only 1: intros x y EQ WF; only 1: apply eq_true_iff_eq; only 1: now rewrite <- EQ).	8.68218898773	3280
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.2.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	2.990046978	1282
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	0.0.0.6.1.3.1.29	search with cache (only 1: intro; only 1: intros a Ha; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: auto; only 1: order'; only 1: order').	27.6464021206	24826
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0420911312103	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0491020679474	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.042829990387	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.021635055542	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	13.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	1.56618094444	1250
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0217080116272	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.8.7.3	search with cache (only 1: intros a0; only 1: bitwise; only 1: simpl; only 1: trivial).	5.3878018856	3563
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.11.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	3.18921303749	1646
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	1.0.4.3	search with cache (only 1: intros z n; only 1: intro; only 1: bitwise; only 1: intuition).	0.768499135971	320
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.5.0	search with cache (only 1: intros n; only 1: bitwise; only 1: trivial).	0.0478138923645	21
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0211238861084	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40	2.0.27.1	search with cache (only 1: intros x x' Hx; only 1: generalize (CRelationClasses.partial_order_equivalence x x'); only 1: compute; only 1: now rewrite <- Hx).	8.30256080627	7301
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	13.18.0.2	search with cache (only 1: intros n; only 1: bitwise; only 1: symmetry; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	34.4526407719	30481
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	8.28.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: symmetry; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	8.288408041	7901
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0356299877167	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.2.0.1.0	search with cache (only 1: intros a; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0389430522919	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.4	search with cache (only 1: intros a b; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.245506048203	89
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.2	search with cache (only 1: intros a; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.220012187958	59
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	1.0.0.0.0.1.2	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	0.317848920822	133
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite and_comm; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.053857088089	11
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.4.1.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	22.3669161797	9510
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	1.0.0.0.3.0	search with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.0514998435974	17
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.0.8.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	5.87569594383	2767
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.0.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0377941131592	4
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.0.1.11.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	4.45222616196	2083
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	8.4.6	search with cache (only 1: intros n1 n2; only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	6.92209482193	3726
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.0.0.1.0	search with cache (only 1: intros n; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: exists 1; only 1: now nzsimpl; only 1: apply divide_0_r; only 1: trivial using divide_1_l, le_0_1).	0.0757648944855	31
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0260648727417	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_refl; only 1: trivial).	0.0290019512177	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0290238857269	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.0275840759277	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.1.0.0.1.0.0	search with cache (only 1: intros n m Hn; only 1: intros EQ; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: auto; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.219003915787	48
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	5.2.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_lcm_l).	20.3408789635	9854
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.036906003952	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.5.0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	13.8222358227	6661
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.0.0.0.5.0	search with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.777466058731	265
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.3.0.10.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	26.7331500053	13043
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.0.5.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	1.87394881248	628
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.0.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0337719917297	4
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.112757921219	46
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.93336701393	745
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	3.24657797813	1031
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	1.61875605583	522
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.5.1.0.1.6.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	8.73378705978	4519
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40	0.16.9.0.10.10.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: apply min_r; only 1: now rewrite <- sub_le_mono_l; only 1: rewrite max_l by trivial; only 1: apply min_l; only 1: now rewrite <- sub_le_mono_l).	39.3915958405	29899
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.9.1.0.0.10.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	20.1688718796	10435
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	3.1.0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	27.5506291389	11951
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	4.0.0.2.3.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	8.3462498188	4369
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	2.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	7.33037590981	3010
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	3.1.0.0.1.3.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	34.0367538929	11875
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.1.0.0.0.3.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	29.3090960979	9926
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	0.0.0.14.9.2	search with cache (only 1: intro n; only 1: symmetry; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	7.94252896309	5528
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.1.0.15.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	1.35868620872	1712
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	0.0.0.21.2	search with cache (only 1: intro m; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	2.50180006027	2990
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.0.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0295422077179	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	3.22.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.20243597031	1796
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.2.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0251829624176	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	1.9.1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	16.8635201454	7799
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.10.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.7428689003	1159
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.119601011276	20
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	0.0.0.7.5.6.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: destruct (le_gt_cases m n); only 1: contradict H; only 1: rewrite <- lt_le_pred; only 1: order; only 1: now left).	13.3656167984	7506
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	4.7.0.4.4.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	13.0339531898	6362
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	2.0.1	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0184950828552	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.3.0.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.102839946747	9
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.0.3.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.138834953308	27
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.0.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.0902001857758	23
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.3.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0796291828156	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0298838615417	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0274429321289	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.1.6.2.10	search with cache (only 1: intro a; only 1: rewrite opp_nonneg_nonpos; only 1: destruct (le_gt_cases a 0); only 1: rewrite abs_neq; only 1: intros; only 1: auto with relations; only 1: order; only 1: order).	17.2568860054	14298
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.1.34	search with cache (only 1: intro x; only 1: destruct_max x; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	16.4397120476	14305
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.0.4	search with cache (only 1: rewrite abs_neq; only 1: now nzsimpl; only 1: order).	0.0267350673676	15
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	7.1.13.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: now left; only 1: auto with relations).	4.37348914146	4480
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	1.2.0.3.0.0.0.0.0.0.0.0.14.8	search with cache (only 1: zero_pos_neg ltac:(n); only 1: right; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: auto using eq_refl, le_refl; only 1: intros n Hn; only 1: split; only 1: destruct_max n; only 1: auto with relations; only 1: order'; only 1: rewrite (abs_neq (- n)), opp_involutive; only 1: auto with relations; only 1: rewrite opp_nonpos_nonneg; only 1: order).	28.4333369732	25131
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.0.0.0.7.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: now rewrite opp_nonneg_nonpos).	0.606944084167	494
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0308229923248	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	0.1.2.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0290498733521	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0.58	search with cache (only 1: symmetry; only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	6.10076904297	6776
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.0.0.5	search with cache (only 1: intro m; only 1: destruct_sgn m; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.596215963364	389
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.3.5	search with cache (only 1: intros n m Hn; only 1: apply NZQuot.div_pos; only 1: auto).	0.907960176468	312
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.6.0.0.0	search with cache (only 1: intros a b q ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	1.44164800644	689
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.1.2.0	search with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.175097942352	61
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.23546814919	298
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.1.0.0.0.1.1.4.1	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	7.84221315384	3193
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0248219966888	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	4.821007967	1216
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.3.1.1.0.0.0.0.5.0	search with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	7.56730985641	3069
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0305278301239	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0486538410187	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0493960380554	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0445158481598	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0241990089417	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0196440219879	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a b **; only 1: symmetry; only 1: destruct (lt_ge_cases 0 b); only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm; only 1: apply Private_NZDiv.mod_unique with a; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	17.1998329163	5626
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.0.0.1.0.0.0.3	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	2.65323710442	898
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: order; only 1: order).	0.342549800873	112
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.2.0	search with cache (only 1: intros a b ? ?; only 1: apply div_pos; only 1: order; only 1: order).	0.52561712265	98
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.375534057617	109
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.0508449077606	18
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40	0.0.2.0.4.2.3.0.0	search with cache (only 1: intros a b **; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_le_mono_r; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_neg_bound a b); only 1: order; only 1: trivial).	28.716946125	7632
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	3.0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0481078624725	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros a b **; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0317089557648	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.11	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: order).	2.6388399601	1335
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0312898159027	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.0.2.0	search with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.486798048019	139
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	24.2148349285	6400
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.1.5.0.1.5	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	20.2100589275	7092
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0839610099792	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.2.0	search with cache (only 1: intros a b c **; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.070338010788	19
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.28948903084	173
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros a b c **; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.63416194916	352
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.393763065338	62
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.454432964325	73
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.353913784027	61
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.364669084549	62
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.114604949951	33
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.0.0.0.3	search with cache (only 1: intros a b c **; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.691992044449	154
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0564260482788	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	2.10.7	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	10.4069302082	2683
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	7.0.2.1	search with cache (only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now nzsimpl).	0.463063001633	174
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.1.1.0.0.18.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: nzsimpl; only 1: now nzsimpl).	20.5714521408	6840
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.20	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	3.92616820335	1215
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.2	search with cache (only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	0.272624015808	65
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.4.9	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	17.8768868446	5209
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40	0.0.0.0.0.0.0.2.0.0.4.0.0	search with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: rewrite opp_succ, opp_pred; only 1: now rewrite succ_inj_wd; only 1: intro n; only 1: rewrite add_succ_l; only 1: do 2 rewrite opp_succ; only 1: rewrite add_pred_l; only 1: now rewrite pred_inj_wd).	27.1669909954	6927
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	3.0.0.0.0.4	search with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	0.536599159241	168
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0	search with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0110738277435	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.0.5.1	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0447900295258	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	3.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.244695901871	62
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1	search with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.248957157135	66
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.2.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0286560058594	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	2.0.0.2.4	search with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	0.680990934372	242
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	2.24	search with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	2.64699411392	881
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.1	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0243711471558	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	1.4	search with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.172172784805	42
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	4	search with cache (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.114523172379	19
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.3	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.0192790031433	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.0.4.2.3.4	search with cache (only 1: apply add_move_l; only 1: symmetry; only 1: rewrite <- add_opp_r; only 1: apply add_move_l; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	7.61401796341	2230
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	2.0.0.10	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.631947994232	185
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	search with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.014466047287	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.32	search with cache (only 1: rewrite (add_comm p); only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	15.0007269382	5282
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.17	search with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	3.48822712898	1086
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.14	search with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.445822000504	154
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.107487916946	29
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.063777923584	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.0598719120026	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0443549156189	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0494887828827	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0228090286255	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0197730064392	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.0551099777222	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.2.0.0.7.11	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	22.086356163	14541
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	2.0	search with cache (only 1: intros a b ? ?; only 1: auto using div_pos).	0.593611955643	97
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.403834104538	104
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	5.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	0.798052072525	293
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0786199569702	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.1.0.0.8	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	0.775770902634	316
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0318868160248	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.433307886124	122
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	21.5449519157	6123
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0663840770721	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: symmetry; only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	7.85158014297	2072
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	2.0.1.3.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	1.09462714195	264
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.530224084854	75
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.317067861557	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.279827833176	51
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.26564002037	49
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.500274181366	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.106590986252	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	1	search with cache (only 1: Z.order).	0.0230209827423	14
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	11.0.0.4.0.4.1	search with cache (only 1: constructor; only 1: parity_binop; only 1: induction n; only 1: intros Ha; only 1: exists 0; only 1: now Nat.nzsimpl; only 1: parity_binop).	25.0293738842	11815
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	8.2.0.0.0.0	search with cache (only 1: induction n as [| n IHn]; only 1: split; only 1: now rewrite <- PeanoNat.Nat.odd_spec; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).	4.58215999603	2063
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	2.9.1	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.512250900269	434
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	2.1.11.2	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	1.84572315216	2344
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	2.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.178881168365	48
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.1.0.10.5.0	search with cache (only 1: intro n; only 1: cases n; only 1: intuition order; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	2.54287695885	2804
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.1.0.0.3	search with cache (only 1: induct n; only 1: intro H; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intros n IH H; only 1: now rewrite pred_succ).	0.0349531173706	18
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.1.7.0.4.3.1	search with cache (only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intro p; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r).	3.36521697044	3121
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.0.8.2.0.0.0.2.3	search with cache (only 1: intros n m; only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: trivial; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_succ_l in H; only 1: apply lt_eq_cases; only 1: now left).	12.815117836	8661
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.0.0.0.4.0.4.0.2.2	search with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros n _; only 1: rewrite pred_succ; only 1: intro H; only 1: apply le_succ_l; only 1: order).	35.4500389099	13307
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.3.1	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.167912960052	57
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.0.1.0.0.2.0	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.745537042618	367
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	7.1.1.0.0.1.2.1	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	9.65951395035	6566
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.0.0.1.0.0.1	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	2.16598510742	1266
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.3.0.11	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	7.98428797722	4712
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.3.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: symmetry; only 1: now nzsimpl').	0.880295038223	455
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.1.3.6.2.0.0.0.1	search with cache (only 1: intro n; only 1: cases n; only 1: intros H; only 1: now elim H; only 1: intros n _; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: apply lt_0_succ; only 1: now nzsimpl).	14.0908050537	12192
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.1.1.1.0.0.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: destruct (lt_ge_cases a b); only 1: order; only 1: order; only 1: now nzsimpl).	0.166531085968	52
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0343201160431	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0161261558533	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0183210372925	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	0.0389020442963	16
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.1.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0309209823608	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0140340328217	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0140609741211	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.235913991928	53
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0479700565338	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.375315189362	97
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.1.0.2.0.0.2.0.0.0.0.3	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: symmetry in Hab; only 1: contradict Hab; only 1: apply lt_neq, Private_NZDiv.div_str_pos; only 1: auto'; only 1: intros Hab; only 1: apply Private_NZDiv.div_small; only 1: auto').	24.525398016	9001
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	3.4.0.1.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	14.789798975	8261
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0495791435242	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0541768074036	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0372140407562	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0578980445862	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0627639293671	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: apply neq_0_lt_0; only 1: auto').	0.101603031158	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.0248961448669	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0332970619202	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: auto').	1.37742400169	435
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.1.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: auto').	1.53172206879	623
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.3.1.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0383801460266	13
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0894918441772	22
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.03639793396	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0464870929718	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.16771697998	37
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0368480682373	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0506069660187	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.12922501564	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: apply neq_0_lt_0; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: apply neq_0_lt_0; only 1: auto').	0.45508313179	111
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: apply Private_NZDiv.div_exact; only 1: auto; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	1.73049902916	537
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0403699874878	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	8.7.5.39.5.0	search with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: apply le_succ_l; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl).	11.8641309738	37140
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	10.33.7	search with cache (only 1: intros; only 1: compute; only 1: now rewrite recursion_0).	4.61906599998	10794
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.0.1.4.16.75	search with cache (only 1: apply eq_true_iff_eq; only 1: unfold even; only 1: split; only 1: now rewrite recursion_0; only 1: destr_bool; only 1: now rewrite recursion_0).	19.1985762119	9693
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.3.0.13.0.2	search with cache (only 1: destr_bool; only 1: unfold even; only 1: apply eq_true_iff_eq; only 1: rewrite recursion_succ; only 1: intuition; only 1: reflexivity; only 1: f_equiv').	7.06426811218	4089
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	3.47.33	search with cache (only 1: symmetry; only 1: compute; only 1: now rewrite recursion_0).	1.76013016701	5028
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.0.1.2.2.11	search with cache (only 1: unfold pow; only 1: intros n m; only 1: rewrite recursion_succ; only 1: now nzsimpl; only 1: auto with *; only 1: f_equiv').	9.02761292458	2361
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	2.0.1.0.8.4	search with cache (only 1: intros p n m Hp; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l; only 1: assumption).	6.70563387871	4163
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0422070026398	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40	0.0.0.11.3	search with cache (only 1: intros n m p q H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l).	11.0919299126	3772
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	3	search with cache (only 1: solve_proper).	0.0426001548767	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now constructor).	1.80067682266	624
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	3.3.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0267169475555	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.2.0.0.2.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.409477949142	168
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0523450374603	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0138981342316	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	7.0.7.0.0.0.1.6.11.109	search with cache (only 1: compute; only 1: split; only 1: intros n; only 1: reflexivity; only 1: intros x x' EQ; only 1: intros; only 1: auto; only 1: intros a0; only 1: intros; only 1: now rewrite H).	23.4880349636	28560
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	2.14.6	search with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	11.0051510334	2285
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0368640422821	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.3	search with cache (only 1: intros a0; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0816698074341	47
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.0293140411377	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.6	search with cache (only 1: intros a Ha; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	1.48667502403	586
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0390388965607	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0371079444885	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.122721910477	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0180418491364	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.0257480144501	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0199778079987	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	7.0.1	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.19787979126	110
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.2.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.100416898727	29
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40	0.1.3.4	search with cache (only 1: intros z n; only 1: intros a0; only 1: bitwise; only 1: intuition).	0.577685117722	248
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.6.0	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0480139255524	21
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0189020633698	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.0.0.0.18.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: intuition; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	39.5054841042	14346
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0134830474854	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise as m; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	2.32120108604	777
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.0.0.0.6	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.418700933456	360
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.1.4	search with cache (only 1: intro m; only 1: apply sqrt_square; only 1: apply le_0_l).	0.227509975433	52
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.1.0.0.3.1.8	search with cache (only 1: intros z n; only 1: apply neq_sym; only 1: nzinduct n; only 1: apply neq_succ_0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.01576209068	3391
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	2.1.1.0.0.0.0.1	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl).	1.3898088932	527
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.2.0.0.0.0	search with cache (only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.062087059021	19
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.3.8	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	27.4516069889	8925
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.537461996078	98
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.1.0.3.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.101546049118	33
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.274692058563	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0442891120911	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	4.0.10.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	1.64556002617	633
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.72336316109	1099
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.10.0.7.0	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: order').	12.7226631641	7063
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	4.4.6.0	search with cache (only 1: intros a b Ha Hb; only 1: apply pow_gt_1; only 1: order'; only 1: auto').	30.5682790279	7693
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.5.0.0.0	search with cache (only 1: intros a b c d ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	2.19019699097	886
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.1.0.2	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0493769645691	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	0.4.0.3.0.0.8.0.0.3	search with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_l; only 1: auto'; only 1: intro LE; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: auto'; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	23.102162838	12638
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.0.7	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	27.9595689774	10943
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.99905896187	807
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	4.86838698387	1693
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	4.99473404884	1463
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.3.0.1.0.0.0.1.0.2.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	24.63545084	10387
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.3.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order).	15.7759981155	6378
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	1.0.0.3.2.0.0.2.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	5.96344995499	2146
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	1.57518410683	472
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.10.1.0.0.9.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	20.6662209034	9204
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: reflexivity).	0.00846600532532	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	1.1.0.2.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0648458003998	10
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40	0.2.0.0.9.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (CRelationClasses.partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: easy).	1.00502490997	378
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0280790328979	22
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.1.0.0.0.0	search with cache (only 1: intro n; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.0714728832245	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0661449432373	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.6.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	2.02739191055	875
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.166528940201	47
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	0.179563045502	48
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	1.1.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	8.51677393913	3619
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.16.3	search with cache (only 1: intros n m p LE; only 1: apply le_sub_le_add_r; only 1: rewrite LE; only 1: auto using sub_add_le).	23.7675690651	15244
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.3.4	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.28608083725	60
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.1.0.0.3.9	search with cache (only 1: intro n; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: order; only 1: intros Ha; only 1: order).	3.68988394737	2458
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.0.1.0.0.0.0	search with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.0316541194916	8
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.1.2	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: reflexivity; only 1: now nzsimpl).	0.0901219844818	16
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.492835998535	202
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.4.0.0.5.7.10	search with cache (only 1: intro m; only 1: intros H; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now nzsimpl; only 1: now nzsimpl).	1.59663414955	1341
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.0359969139099	7
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.222979068756	56
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.0.4.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.818579912186	373
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	3.0.1.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0800681114197	38
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.1.1.0.0	search with cache (only 1: intros a ?; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.237633228302	64
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.0.0.0.1.3.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intros; only 1: nzsimpl; only 1: split; only 1: intros; only 1: now f_equiv; only 1: apply succ_inj).	6.04487705231	781
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0520510673523	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0522849559784	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0218801498413	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.120702028275	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0923199653625	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.230153083801	29
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.4.1.0.0	search with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	1.52971291542	447
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.1.6.2.0.5	search with cache (only 1: intro y0; only 1: intros n m p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.5268390179	4756
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.102728128433	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.8.1.3.16	search with cache (only 1: intro m; only 1: apply lt_eq_cases; only 1: rewrite lt_succ_r; only 1: left; only 1: apply lt_eq_cases; only 1: now right).	23.7827031612	19042
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	5.0.0.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.18360209465	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0194621086121	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	5.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto with relations).	0.0184490680695	8
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.5.0	search with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.140820980072	67
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	search with cache (only 1: order).	0.00689101219177	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	search with cache (only 1: order).	0.00843787193298	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	search with cache (only 1: order).	0.00799012184143	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	search with cache (only 1: order).	0.00974988937378	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	search with cache (only 1: order).	0.0080931186676	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	2	search with cache (only 1: order).	0.0520179271698	42
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.3.0	search with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0169229507446	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.1.10.3	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	7.92894721031	4299
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.3.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0183758735657	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.3.6.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: tauto).	1.05233192444	459
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.0.0.0.0.0.0.2.2.3.0	search with cache (only 1: intros n m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: rewrite <- le_succ_l; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	8.14444994926	3128
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.1.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0179059505463	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.1.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0169281959534	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.2.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0213088989258	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.8.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	1.49160790443	760
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.133775949478	57
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	4.0.1	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.144394874573	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.1.0.3.0.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.0495648384094	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	4.3.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: intuition order).	0.16868185997	84
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.00917911529541	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.1.1.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0250790119171	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.135089159012	74
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0111830234528	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0111072063446	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.713677883148	199
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.0.1.1.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: intuition order).	1.09953403473	424
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.2.1.0.0.0.0.1	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	1.67297101021	588
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	23.0.0	search with cache (only 1: intros z Base Step; only 1: apply strong_right_induction; only 1: now apply rs_rs').	19.017334938	13100
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.2.3.1.4.13.3	search with cache (only 1: red; only 1: intros x' x'' Hx' Hx''; only 1: induction n; only 1: trivial; only 1: simpl; only 1: intros; only 1: auto).	3.54024386406	4302
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	26	search with cache (only 1: reflexivity).	0.118055105209	333
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.0	search with cache (only 1: intros a; only 1: reflexivity).	0.0126080513	2
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.0.6.1.0.0.0.0	search with cache (only 1: intro n; only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	1.85511493683	1197
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40	1.0.5.20.1.7	search with cache (only 1: intros m Hm; only 1: simpl; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: trivial).	37.5714099407	45838
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	5.10	search with cache (only 1: fix gcd_divide 1; only 1: now f_equiv).	13.2835199833	6390
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40	2.0.14.10.12	search with cache (only 1: simpl; only 1: intro; only 1: fix even_spec 1; only 1: intros; only 1: now f_equiv).	21.9759349823	20941
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0297040939331	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.1.1.0.37.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: now nzsimpl; only 1: order; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	22.2023990154	11088
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.4.0.0.0.1.0.0.1.3	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	23.2736480236	6611
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40	0.5.8.11	search with cache (only 1: intros y Ryx; only 1: firstorder; only 1: rewrite mul_0_l in H || rewrite mul_0_r in H; only 1: auto).	19.3972961903	8068
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.16.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	4.73472094536	2612
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.0.6.1.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H1; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	3.84609818459	2234
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.14.0	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	2.15966200829	656
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.11.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.252210140228	152
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.1.0.0.0.0.8	search with cache (only 1: intros n H; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	1.95998001099	878
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0310120582581	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.100506067276	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0253670215607	6
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0947251319885	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	1.6.0.3.2.0	search with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	12.71656394	5490
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.0.0.1.3	search with cache (only 1: intros n m H; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.185875892639	70
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	2.4.0.4.2	search with cache (only 1: intros n1 m1 H; only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).	5.05783605576	1123
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.151314973831	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.85181999207	597
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.7.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.199094057083	52
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	3.5.2.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	18.709900856	4854
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	1.4.0.0.0	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: apply even_spec in Hm; only 1: now destruct (even n), (even m)).	0.118273973465	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.0774710178375	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0775260925293	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0251789093018	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0238580703735	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	3.0.0.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl).	0.0911550521851	13
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.129920005798	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.3.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0515089035034	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0221149921417	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.1.0.9.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	12.358976841	3014
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.0.0.0.5.0.24	search with cache (only 1: apply log2_unique; only 1: order; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order).	0.96693611145	906
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	0.2.0.0.0.8	search with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	1.81543803215	1251
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0253129005432	7
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.5.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	0.810777187347	427
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.0.2.0.0.1.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	0.0347747802734	10
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0107140541077	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40	0.2.5.1.0.0.3.1.0	search with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply lt_succ_r; only 1: order_pos; only 1: order).	27.367634058	10160
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.5.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0226969718933	14
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	8.0.2	search with cache (only 1: intro b1; only 1: Bool.destr_bool; only 1: intuition).	0.226497888565	248
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.2.10.0.1	search with cache (only 1: intros x y H; only 1: symmetry; only 1: transitivity x; only 1: intuition; only 1: auto).	0.79673409462	768
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.0.0.0.4.6	search with cache (only 1: intros b b'; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	1.03656482697	866
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	2.61396813393	532
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0.7	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	7.76734113693	3166
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.0.0.5.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	2.66571593285	1012
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0217659473419	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0248961448669	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40	2.1.12.1.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: assumption; only 1: assumption).	27.1183798313	8274
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0246829986572	5
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	9.0	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.113238096237	66
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0234987735748	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0123779773712	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	2.0.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto).	0.0701768398285	19
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00909805297852	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0074200630188	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.2.0.1.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.359066009521	163
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.1	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.250387907028	72
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	6.7	search with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.32786989212	216
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	3.0	search with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.0154550075531	5
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	23.1.13.0.1.0	search with cache (only 1: split; only 1: firstorder; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).	7.72359609604	18871
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	2.5.2.8	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	0.423142910004	292
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	2.0.0.0.145.1	search with cache (only 1: split; only 1: CRelationClasses.reduce_goal; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	18.9755110741	94722
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	5.4	search with cache (only 1: symmetry; only 1: reflexivity).	0.0723221302032	52
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.00965595245361	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0101308822632	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	10.2	search with cache (only 1: intuition auto; PeanoNat.Nat.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.779555797577	527
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	9.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.279418945312	83
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.0109720230103	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0.3	search with cache (only 1: intros H; only 1: order).	0.989959955215	26
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0111601352692	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	2.1.0.0	search with cache (only 1: red; only 1: intros H H'; only 1: apply H; only 1: order).	0.0197160243988	7
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	9	search with cache (only 1: order).	0.0205101966858	19
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	5	search with cache (only 1: order).	0.0113987922668	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00876688957214	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00870704650879	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00789499282837	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.1.0.1.0.1.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.790870904922	353
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.25999689102	458
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.1.0.13	search with cache (only 1: intros H'; only 1: intros; only 1: rewrite <- H; only 1: auto).	10.9057440758	4896
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	3.0.4.1.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: easy; only 1: firstorder  (subst; auto); only 1: intuition).	1.16085600853	796
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	8.1.2.0.6	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	8.88341498375	4437
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	1.0.1.4.5	search with cache (only 1: intro l; only 1: intros n m H; only 1: destruct l; only 1: auto; only 1: now rewrite H).	5.36801314354	2417
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40	0.0.2.0.0.0.4.1.7	search with cache (only 1: intros l' d d' Hlen Hnth; only 1: eapply SortA_InfA_InA; only 1: auto with *; only 1: split; only 1: exact lt_antirefl; only 1: exact lt_trans; only 1: auto with *; only 1: eauto; only 1: eauto).	6.29858899117	4247
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.1.0.0.0.6.2	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).	0.879260063171	460
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	2.0.4.2.6	search with cache (only 1: induction l as [| ? ? IHl]; only 1: constructor; only 1: intro n; only 1: intros; only 1: intuition).	2.32413291931	936
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.00932002067566	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	6.1.0	search with cache (only 1: intros x y H; only 1: intro; only 1: auto).	0.0210747718811	10
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00752592086792	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	6.4	search with cache (only 1: firstorder; only 1: auto with ordered_type).	0.0605142116547	50
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.00807189941406	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0151281356812	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0216920375824	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	7.1.5	search with cache (only 1: intros p H; only 1: unfold eqk, eqke; only 1: order).	0.337100028992	237
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0136930942535	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	3.14	search with cache (only 1: intros Heq; only 1: eauto with ordered_type).	1.62789607048	1337
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	0.1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	0.0369811058044	5
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	0.5.2.15.0.17.1.1.23.15	search with cache (only 1: split; only 1: intro n; only 1: unfold eqk, ltk; only 1: auto with relations; only 1: intros Hfst Hsnd; only 1: auto with ordered_type; only 1: intro n; only 1: red; only 1: intros; only 1: eauto with ordered_type).	37.8650870323	54410
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0286459922791	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.16.0.4.15.16.16.0	search with cache (only 1: constructor; only 1: intros l; only 1: generalize dependent l; only 1: compute; only 1: intro; only 1: induction l; only 1: order; only 1: eauto with ordered_type).	20.3683419228	41922
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0137810707092	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.00984287261963	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.00972294807434	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	1.0.3.9.6.1	search with cache (only 1: unfold eqke, ltk; only 1: induction 1; only 1: destruct H; only 1: auto; only 1: right; only 1: eauto with ordered_type).	9.39159011841	5429
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	1.0.6.0.1.4.0.1	search with cache (only 1: intro l; only 1: unfold eqk, ltk; only 1: induction l as [| a l IHl]; only 1: intros; only 1: eauto with *; only 1: intros l' Hnd Hlen Hincl; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	9.85728001595	3694
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.0.0.7.3.3.0.2	search with cache (only 1: intro l; only 1: unfold eqk, ltk; only 1: induction l as [| a l IHl]; only 1: auto; only 1: intros l' Hnd Hlen Hincl; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	10.5493268967	3881
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.0.5.5.1.2	search with cache (only 1: intros; only 1: red; only 1: compute; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	9.00052785873	3506
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	1.1.10.0.7	search with cache (only 1: intros a b c Ha H; only 1: inversion_clear 1; only 1: intros; only 1: intuition; only 1: eauto with *).	14.7512950897	6038
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.0.4	search with cache (only 1: unfold eqk, eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	0.0479779243469	8
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0362451076508	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.2.0.0.3.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	9.9933989048	8091
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.0.0.1.0.0.1.1.2.0	search with cache (only 1: case compare_spec; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	21.2676599026	5573
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0123620033264	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	5.0.70.87.0	search with cache (only 1: split; only 1: compute; only 1: iorder; only 1: repeat red; only 1: iorder).	17.4934148788	115508
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	6.0	search with cache (only 1: compute; only 1: iorder).	0.0471379756927	34
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	6	search with cache (only 1: iorder).	0.116108179092	38
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.011018037796	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	search with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.307547092438	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0122549533844	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.2	search with cache (only 1: autorewrite with order; only 1: iorder).	0.207304954529	73
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0555779933929	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	0.0.0.0.0.0.0.0.0.0.0.14.1	search with cache (only 1: destr_bool; only 1: compute; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: elim_compare x y; only 1: auto; only 1: auto; only 1: auto).	11.4913549423	5116
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0130372047424	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0165998935699	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0159969329834	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	5.1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eapply OrderTac.lt_irrefl; only 1: order).	0.838994979858	29
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	1.3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: contradict ltac:(H); only 1: order).	0.805073976517	11
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	0	search with cache (only 1: order).	0.00955390930176	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00924515724182	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.00935888290405	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	1.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0174450874329	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00804686546326	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	search with cache (only 1: order).	0.0084228515625	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.00887084007263	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.00848507881165	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0	search with cache (only 1: order).	0.00904202461243	1
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.00897812843323	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0089590549469	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00892186164856	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.00857305526733	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0136349201202	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.0117020606995	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0101079940796	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0140438079834	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.0.1.4.3.2.1.1	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: symmetry; only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	14.4048609734	6183
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.1.0.5.2.5	search with cache (only 1: case leb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	2.95934200287	1136
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.4.5	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.404248952866	145
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.11.2	search with cache (only 1: symmetry; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	2.28958010674	737
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	0.3.10.0.6.11	search with cache (only 1: compute; only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: firstorder; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	26.7831571102	8623
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.3.0	search with cache (only 1: intros l x y H H'; only 1: destruct H; only 1: eauto).	0.040874004364	14
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	4.0.3.1.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: simpl; only 1: easy; only 1: firstorder  (subst; auto); only 1: intuition).	1.14735412598	780
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.0.8.0.0.0.6	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).	9.23322606087	4212
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.0.1.4.4	search with cache (only 1: intro l; only 1: intros n m H; only 1: destruct l; only 1: auto; only 1: now rewrite H).	4.41311788559	2313
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.1.0.0.0.6.2	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: auto).	0.850496053696	460
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	9.0.2.6	search with cache (only 1: induction l as [| ? ? IHl]; only 1: constructor; only 1: intros; only 1: intuition).	3.57809114456	1660
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	search with cache (only 1: solve_proper).	0.0835750102997	44
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	4.0	search with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	1.45554018021	29
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	5.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: firstorder).	0.0299830436707	11
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0274789333344	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	1.0.0	search with cache (only 1: hnf; only 1: induction 1; only 1: eauto).	0.0241792201996	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	9	search with cache (only 1: auto).	0.0143308639526	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	search with cache (only 1: split).	0.0130290985107	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	29.3	search with cache (only 1: intros; only 1: firstorder).	0.423470973969	970
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0141899585724	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0121369361877	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	4	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0183568000793	5
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	6	search with cache (only 1: auto with arith).	0.0243558883667	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0.4.13.0.6.0	search with cache (only 1: induction 1; only 1: exists y; only 1: firstorder; only 1: left; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: auto; only 1: firstorder).	5.79507708549	5466
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.27.7.0	search with cache (only 1: firstorder  auto with crelations; only 1: destruct p as [a0 b]; only 1: rewrite <- H; only 1: firstorder).	9.10374903679	8055
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.0.0	search with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.0325748920441	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	0.13.12.1	search with cache (only 1: unfold In, MapsTo; only 1: destruct (split (A:=l)); only 1: destruct (split (A:=l)); only 1: now intros <-).	2.30690407753	2293
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0208759307861	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	5.4.13.0	search with cache (only 1: firstorder; only 1: inversion H; only 1: eauto; only 1: eauto).	9.17393183708	3733
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	2.4.2.4	search with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto).	0.623836040497	294
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	2.1.1	search with cache (only 1: intros p H; only 1: intros [? ?]; only 1: intuition).	0.0239229202271	14
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.1.0	search with cache (only 1: unfold eqk, eqke; only 1: intros l; only 1: firstorder).	0.016104221344	5
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.00839591026306	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	2.0.0.0	search with cache (only 1: unfold eqk, eqke; only 1: intro l; only 1: intro H; only 1: auto with arith).	0.0240619182587	6
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0393290519714	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	0.8	search with cache (only 1: intros x l' H H0; only 1: eauto).	0.0507600307465	33
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	3.18.0.2.1	search with cache (only 1: constructor; only 1: now PeanoNat.Nat.nzsimpl; only 1: auto; only 1: intro n; only 1: eauto).	5.6578669548	3984
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0288059711456	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	1.1.8.2.0.13	search with cache (only 1: intro x; only 1: intro l; only 1: induction 1; only 1: inversion H; only 1: auto; only 1: auto).	25.9706158638	7299
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.3.0.17.5	search with cache (only 1: intros; only 1: elim H0; only 1: intros; only 1: eauto; only 1: intuition).	10.1497299671	8692
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.3.6.0.3.8	search with cache (only 1: intros x y H; only 1: intro n; only 1: inversion 1; only 1: intros; only 1: intuition; only 1: auto).	4.8603310585	2485
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	1.0.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto using eqk_equiv).	0.035637140274	5
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.1.0.3.73	search with cache (only 1: intro n; only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	2.66455411911	6543
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.2.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	9.83145594597	4178
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0385820865631	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.75375294685	1653
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	16.9.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with relations; only 1: auto with relations; only 1: intros R H x x0 y H0 H1; only 1: order).	18.6325550079	23527
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	3.4.2.2.1.1.1.1.2.6	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	5.65047502518	4377
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.0.1.0.0.3.12	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition).	0.588689088821	446
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0110609531403	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.0.1.1.4.1	search with cache (only 1: split; only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: intuition; only 1: now apply max_l).	0.679059028625	272
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0201280117035	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.3.2.0.0.0.2.2.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	14.0452990532	5553
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	1.28118014336	464
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.3	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0311501026154	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0120341777802	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.0112540721893	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0605108737946	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0116579532623	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0792458057404	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0610840320587	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0290839672089	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	1.93911504745	786
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	search with cache (only 1: apply min_l; only 1: order).	0.0103681087494	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	0.1.0.0.1.10	search with cache (only 1: rewrite le_lteq; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition).	0.618406057358	325
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	2.1.9.11	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	1.27982997894	1052
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	9	search with cache (only 1: solve_min).	0.240035057068	74
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0137410163879	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.0.1.0.0.0.2.3.7	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: order).	32.8632600307	11811
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.8.0.0.0.0.0.0.2.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: intuition; only 1: solve_min; only 1: solve_min).	33.5430641174	12775
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.3.3	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	4.50691103935	1496
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	2	search with cache (only 1: solve_min).	0.0335130691528	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0119659900665	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0114850997925	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	6	search with cache (only 1: solve_min).	0.201773166656	60
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0125958919525	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	4	search with cache (only 1: solve_min).	0.349130868912	91
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0250728130341	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.3.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0723938941956	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.5	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0245621204376	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.6	search with cache (only 1: apply min_l; only 1: solve_max).	0.0749521255493	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.1.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	4.16025090218	1261
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.0.1.1.0.0.0.1.0.1.0.0.1.0.0.3.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	32.9623029232	20820
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.19	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	1.92929792404	1624
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	1.0.16.16	search with cache (only 1: intros H0; only 1: apply max_mono; only 1: eauto with *; only 1: eauto with *).	7.51975393295	6133
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.0.15.11.21	search with cache (only 1: intros H0; only 1: intros b b'; only 1: apply min_mono; only 1: congruence; only 1: auto).	27.1040270329	11667
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	9.4.2.3	search with cache (only 1: intros x y H; only 1: apply max_case_strong; only 1: intros Compat Hl Hr; only 1: simpl_relation).	1.82603311539	2478
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0198771953583	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.4	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0457849502563	27
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.8.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.751662015915	458
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0170059204102	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0170919895172	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0	search with cache (only 1: congruence).	0.00894403457642	1
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.4.1.9.10	search with cache (only 1: destruct n as [| [| n]]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: trivial).	1.18525195122	1021
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0299251079559	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: reflexivity).	0.00802898406982	1
Coq.ZArith.Znat.positive_N_nat	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0110759735107	2
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0263340473175	5
Coq.ZArith.Znat.Z_N_nat	40	1.1.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.0223250389099	7
Coq.ZArith.Znat.Z_nat_N	40	1.0.0.0.0.0.1.5.42	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	2.13203382492	2256
Coq.ZArith.Znat.Zabs_N_nat	40	0.1.0.1.0.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.159674167633	67
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.3.38	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	2.92052793503	2804
Coq.ZArith.Znat.N2Z.id	40	0.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: N.order_nz; only 1: simpl; only 1: auto).	0.0695431232452	8
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now subst).	1.45501089096	547
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.0.18.1.36	search with cache (only 1: pattern n; only 1: intro Hn; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: constructor; only 1: now destruct n).	1.52207612991	2573
Coq.ZArith.Znat.N2Z.inj_0	40	8	search with cache (only 1: auto).	0.00742101669312	9
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0076642036438	1
Coq.ZArith.Znat.N2Z.inj_compare	40	2.0.0.0.2.0.0.0.10	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	3.52030301094	2535
Coq.ZArith.Znat.N2Z.inj_le	40	2.2	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0196559429169	6
Coq.ZArith.Znat.N2Z.inj_lt	40
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40	0.0.14	search with cache (only 1: symmetry; only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	1.38097190857	630
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1.1.0.0.0.1.20	search with cache (only 1: destruct n as [| p]; only 1: now N.nzsimpl; only 1: unfold N.succ, N.add; only 1: destruct m; only 1: simpl; only 1: auto; only 1: trivial).	1.97531294823	1249
Coq.ZArith.Znat.N2Z.inj_mul	40	5	search with cache (only 1: now destruct n, m).	0.0108070373535	6
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.13.7	search with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.67299795151	467
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.0.1.8.3.4	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: destruct p; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial).	2.83507490158	1909
Coq.ZArith.Znat.N2Z.inj_pred	40	2.2.1.4	search with cache (only 1: destruct n; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: simpl; only 1: now destruct p).	0.768901824951	326
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	2.0.0.1.6.3.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: unfold N.div2, N.to_nat; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: reflexivity).	0.987211942673	595
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0179200172424	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.121990919113	9
Coq.ZArith.Znat.Z2N.id	40	0.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0268669128418	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.3	search with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).	0.834683179855	271
Coq.ZArith.Znat.Z2N.inj_0	40	1	search with cache (only 1: reflexivity).	0.00707101821899	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1	search with cache (only 1: now destruct n).	0.00899386405945	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0.2.0.7	search with cache (only 1: destruct n; only 1: reflexivity; only 1: split; only 1: reflexivity).	0.0950281620026	63
Coq.ZArith.Znat.Z2N.inj_add	40	8.1	search with cache (only 1: intros Hnm Hpq; only 1: now destruct n, m).	0.0578339099884	29
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: easy || now destruct y).	0.929902076721	237
Coq.ZArith.Znat.Z2N.inj_succ	40	4.5.0.2.2.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct p; only 1: easy).	3.70922994614	2190
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	1.2.0.0.15.1	search with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.95010304451	562
Coq.ZArith.Znat.Z2N.inj_compare	40	2.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.252058029175	77
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40	5.0.13.3	search with cache (only 1: unfold Z.le, Z.min; only 1: simpl; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).	6.30443692207	4511
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.1.1.3.3.0.8	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p as [p| p| ]; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	1.58642220497	1132
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0228838920593	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.0.0.0.1.0.2.0.1.0.1.3.0	search with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: unfold Z.testbit; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply Z.testbit_Zpos; only 1: Z.order_pos; only 1: apply Z.testbit_Zpos; only 1: trivial; only 1: simpl; only 1: now destruct a).	7.63737010956	4099
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	5	search with cache (only 1: now destruct n).	0.135022878647	22
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.0103838443756	1
Coq.ZArith.Znat.Zabs2N.id_abs	40	0	search with cache (only 1: now destruct n).	0.0111441612244	1
Coq.ZArith.Znat.Zabs2N.id	40	1	search with cache (only 1: now destruct n).	0.0853290557861	2
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.3	search with cache (only 1: N.bitwise; only 1: trivial).	0.0196731090546	5
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0108790397644	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00797605514526	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0270130634308	6
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.2.9.3.1.1	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: unfold Z.succ; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	7.45071697235	4650
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.0552659034729	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40	1	search with cache (only 1: now destruct n, m).	0.562437057495	147
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.4.1.0.4.0	search with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: simpl; only 1: now try N.order'; only 1: now destruct p; only 1: easy).	5.99017596245	2503
Coq.ZArith.Znat.Zabs2N.inj_compare	40	8	search with cache (only 1: now destruct n, m).	0.589881896973	212
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0223550796509	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0200510025024	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.3.1.0.1.3.6	search with cache (only 1: symmetry; only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	8.76226401329	5270
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.011237859726	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	9	search with cache (only 1: now subst).	0.0106918811798	10
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.3.5	search with cache (only 1: destruct n as [| p]; only 1: split; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.368323802948	116
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.0.22.4	search with cache (only 1: apply Z.lt_succ_r; only 1: symmetry; only 1: simpl; only 1: now destruct n).	0.590646028519	745
Coq.ZArith.Znat.Nat2Z.id	40	0.0.3.2	search with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: apply SuccNat2Pos.id_succ).	0.0465431213379	13
Coq.ZArith.Znat.Nat2Z.inj	40	0.19.22	search with cache (only 1: revert m; only 1: inversion 1; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	12.5501251221	12532
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.031574010849	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	4.0.0.0.0.0.0.8.1.0.0.3	search with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: destruct n; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct p).	10.8448169231	8955
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0204751491547	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	1.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0292508602142	6
Coq.ZArith.Znat.Z2Nat.inj_0	40	0.12	search with cache (only 1: Nat.bitwise; only 1: trivial).	0.0423049926758	60
Coq.ZArith.Znat.Z2Nat.inj_pos	40	2	search with cache (only 1: now destruct n).	0.0100710391998	3
Coq.ZArith.Znat.Z2Nat.inj_neg	40	3	search with cache (only 1: split).	0.0092442035675	4
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0107519626617	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.0173628330231	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.2.5	search with cache (only 1: induction n; only 1: simpl; only 1: trivial using Nat.le_add_r; only 1: apply SuccNat2Pos.id_succ).	0.0560300350189	31
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0.6	search with cache (only 1: Nat.bitwise; only 1: trivial).	0.0207571983337	8
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	6.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: now f_equal).	0.028028011322	17
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00758290290833	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0227119922638	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0227551460266	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0240960121155	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	10.0208489895	3132
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.0.0.0.0.0.0.0.0.0.1.0.1	search with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).	4.33800792694	1912
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0255789756775	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	21.4427919388	6471
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.3.0.4	search with cache (only 1: intros X Y A Hdec H x y; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	1.37216901779	749
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	2.0.1.0.7.3	search with cache (only 1: intro n; only 1: intros b LT; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	2.15837597847	1589
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0300500392914	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0250861644745	2
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.3.0.0.0.3.0.0.0.3.4	search with cache (only 1: case_eq (PeanoNat.Nat.compare x y); only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec; only 1: intros H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec; only 1: intros H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	8.66018104553	4949
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.0.1.0.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: now f_equal; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: now f_equal; only 1: simpl; only 1: trivial).	0.15916800499	100
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	3	search with cache (only 1: now destruct n).	0.00998210906982	4
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	search with cache (only 1: now destruct n).	0.00886297225952	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	2.10	search with cache (only 1: simpl; only 1: now destruct n).	0.0387930870056	63
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40	2.1.0.38.57	search with cache (only 1: exfalso; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	19.4958839417	18331
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.1.19	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	2.19636201859	2332
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2	search with cache (only 1: reflexivity).	0.0099139213562	3
Coq.ZArith.BinInt.Z.two_succ	40	0.7	search with cache (only 1: simpl; only 1: trivial).	0.013463973999	9
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0086510181427	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0134308338165	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.0.0.2.0.0.1.0.11	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now destruct pos_sub; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now destruct pos_sub; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp).	18.1111850739	9765
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0151209831238	2
Coq.ZArith.BinInt.Z.sub_0_r	40	2	search with cache (only 1: now destruct n).	0.00928211212158	3
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00886201858521	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.1.5	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.309521913528	119
Coq.ZArith.BinInt.Z.compare_le_iff	40	2.3.0	search with cache (only 1: revert m; only 1: intro m; only 1: reflexivity).	0.0330321788788	17
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.2.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	0.364168167114	97
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	7	search with cache (only 1: now destruct n).	0.231983184814	98
Coq.ZArith.BinInt.Z.abs_neq	40	1.14.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	2.54681897163	1851
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: now try PeanoNat.Nat.order'; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H).	0.0333640575409	7
Coq.ZArith.BinInt.Z.sgn_pos	40	0.1.0.4.0.1	search with cache (only 1: destruct n; only 1: intros; only 1: now nzsimpl; only 1: now destruct 1; only 1: intros; only 1: destr_eq H).	0.459363937378	147
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0118050575256	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.00836801528931	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.00894594192505	1
Coq.ZArith.BinInt.Z.square_spec	40	0.0.1.0.0.0.1.2	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.329778909683	114
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1.0.0.4.2	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: destr_eq H; only 1: now split).	0.747865915298	306
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.00938200950623	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	2.1	search with cache (only 1: simpl; only 1: reflexivity).	0.0124170780182	5
Coq.ZArith.BinInt.Z.succ_double_spec	40	5.0	search with cache (only 1: simpl; only 1: now destruct n).	0.194747924805	17
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00995206832886	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0333988666534	5
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.2.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0583260059357	21
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.2.0.2.1.2.0.0.0.3.0.3	search with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: symmetry; only 1: trivial; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	13.7040839195	9732
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0466039180756	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: reflexivity).	0.00902795791626	1
Coq.ZArith.BinInt.Z.testbit_0_l	40
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0142111778259	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	1	search with cache (only 1: now destruct a).	0.0109422206879	2
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40	13.1	search with cache (only 1: unfold ltb, lt; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	1.59402108192	701
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0159769058228	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00848293304443	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	1	search with cache (only 1: apply N.ge_le_iff).	0.0103499889374	2
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00894284248352	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	8.1.2.3	search with cache (only 1: revert m; only 1: unfold gtb, ltb; only 1: fix odd_spec 1; only 1: trivial).	9.24052596092	3546
Coq.ZArith.BinInt.Z.geb_le	40	8.3.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	13.5921330452	4017
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	1	search with cache (only 1: apply mul_cancel_l).	0.0110290050507	2
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.1	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0169050693512	3
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	17	search with cache (only 1: now nzsimpl').	0.305633068085	126
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.5.0.0.0.0.0.1	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	3.25425410271	1100
Coq.ZArith.BinInt.Pos2Z.id	40	3.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: trivial).	0.0318810939789	9
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: congruence).	0.00796794891357	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0201489925385	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	7	search with cache (only 1: split).	0.0129261016846	8
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	17	search with cache (only 1: now Z.nzsimpl').	0.226570129395	126
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.0086510181427	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	1	search with cache (only 1: trivial).	0.134991168976	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0973629951477	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	6	search with cache (only 1: now destruct p).	0.0924110412598	7
Coq.ZArith.BinInt.Pos2Z.inj_add	40	1.0	search with cache (only 1: simpl; only 1: now rewrite Pos.add_comm).	0.0141649246216	3
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.0.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: intros H; only 1: trivial; only 1: now destruct 1).	0.0294458866119	6
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00967597961426	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0114929676056	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.0080988407135	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	2.1.2.0	search with cache (only 1: revert q; only 1: simpl; only 1: intro q; only 1: now rewrite <- ?Pos.compare_antisym).	0.93710398674	232
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	6	search with cache (only 1: auto).	0.0407559871674	15
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00815105438232	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	2.2.1.0	search with cache (only 1: simpl; only 1: revert q; only 1: intros q; only 1: reflexivity).	0.174464941025	69
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.010822057724	2
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	2.0	search with cache (only 1: simpl; only 1: trivial).	0.0119907855988	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.2.0.3.1.2	search with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: easy).	0.430132865906	320
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: congruence).	0.0100698471069	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0219798088074	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00865793228149	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.024493932724	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	1	search with cache (only 1: now f_equal).	0.00912809371948	2
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	7	search with cache (only 1: now f_equal).	0.013176202774	8
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00994300842285	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0120558738708	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	55	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.514828205109	1552
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0100529193878	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.9.0	search with cache (only 1: intros; only 1: symmetry; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	0.353945970535	176
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	7.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: easy').	0.02876496315	17
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	1.4.0.1	search with cache (only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: revert q; only 1: intros a b; only 1: auto).	0.233556032181	47
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0103230476379	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	3	search with cache (only 1: easy).	0.00993609428406	4
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00807404518127	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00916504859924	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0136749744415	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.0117468833923	4
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.00975894927979	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	search with cache (only 1: trivial).	0.0110242366791	3
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00770092010498	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0090811252594	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.5.0.3.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.601245164871	387
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0092990398407	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0.1.1.1	search with cache (only 1: destruct x; only 1: auto; only 1: easy; only 1: trivial).	0.100057125092	17
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: reflexivity).	0.00814199447632	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.2.2.4.2.2.2.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: intros Hb'; only 1: now destruct p; only 1: intro H; only 1: easy).	4.13040590286	2225
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.5.0.1.2	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	0.599910974503	234
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.1.1.5.0	search with cache (only 1: destruct x; only 1: intro H; only 1: intros; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.351718902588	117
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0434279441833	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0439100265503	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0392570495605	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	2.0.0.0.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.0353491306305	10
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0415010452271	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0	search with cache (only 1: congruence).	0.00918507575989	1
Coq.ZArith.BinInt.ZL0	40	0.5	search with cache (only 1: symmetry; only 1: now PeanoNat.Nat.nzsimpl).	0.143294811249	13
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	4	search with cache (only 1: now Z.nzsimpl').	0.183955907822	18
Coq.ZArith.BinInt.Z_eq_mult	40	1	search with cache (only 1: now destruct m).	0.0229749679565	13
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	75	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	24.3053071499	21229
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40	0.0.0.0.0.1.4.0.0.0.8.0.0.6.36	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: tauto; only 1: tauto; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	16.5086028576	14821
Coq.ZArith.Zeven.Zeven_dec	40	2.0.0.0.3.2.0.0.0.4.0.0.32	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition BinNat.N.order; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition BinNat.N.order).	5.10808682442	4574
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40	6.18.1.9.16.0.0	search with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: intro EQ; only 1: tauto; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	27.8191518784	44875
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0367851257324	5
Coq.ZArith.Zeven.Zeven_Sn	40	7.6.0	search with cache (only 1: boolify_even_odd; only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	1.66991591454	1142
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	8.11.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	1.91139483452	1553
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0148231983185	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: intros Hb'; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	33.237552166	7912
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	5.7	search with cache (only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	1.97674584389	382
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.17075920105	21
Coq.ZArith.Zeven.Zodd_quot2	40	2.0	search with cache (only 1: intros a Ha; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.138927936554	26
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.3.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.510108947754	58
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.017863035202	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.5	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	0.198508024216	73
Coq.ZArith.Zeven.Zeven_2p	40	5.0.5.0.2.8.14	search with cache (only 1: Z.nzsimpl'; only 1: destruct p as [p| p| ]; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	5.41663193703	2864
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0427079200745	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0417420864105	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0256109237671	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00897789001465	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	2.4.0.2.0	search with cache (only 1: intros a n Hn; only 1: destruct n; only 1: trivial; only 1: auto with relations; only 1: trivial).	0.321256875992	304
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	7.1.2.0.0.2.7.1.1.27	search with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: left; only 1: split; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: right; only 1: easy).	38.5872299671	42120
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	0	search with cache (only 1: auto).	0.00791215896606	1
Coq.ZArith.Int.Z_as_Int.i2z_0	40	1	search with cache (only 1: auto with relations).	0.0092830657959	2
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00835394859314	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	6	search with cache (only 1: now Morphisms.f_equiv).	0.0178818702698	7
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00939702987671	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	15	search with cache (only 1: now Z.nzsimpl).	0.139657020569	91
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	1	search with cache (only 1: reflexivity).	0.0111298561096	2
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00960898399353	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0110280513763	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0107009410858	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	2	search with cache (only 1: trivial).	0.0114099979401	3
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00762414932251	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0109589099884	1
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0124628543854	1
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0110521316528	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.00930500030518	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0375440120697	5
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0221221446991	3
Coq.ZArith.auxiliary.Zgt_left_rev	40
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	1.5.0.0.2.4.5	search with cache (only 1: symmetry; only 1: unfold Z.le, Z.max; only 1: case Z.compare_spec; only 1: symmetry; only 1: reflexivity; only 1: now destruct m; only 1: auto).	29.9818208218	15639
Coq.ZArith.Zmax.Zpos_max_1	40	3.0.3.0.1.0.1.38.0	search with cache (only 1: unfold Z.max, Pos.max; only 1: bitwise as m ?; only 1: unfold Z.testbit; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	5.18512415886	5741
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	53.0	search with cache (only 1: unfold Z.min, Pos.min; only 1: now destruct p).	4.75763893127	4107
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.3	search with cache (only 1: intros H; only 1: Z.order).	0.0263681411743	12
Coq.ZArith.Zorder.Zlt_not_le	40	0.2	search with cache (only 1: intro H; only 1: Z.order).	0.0248501300812	12
Coq.ZArith.Zorder.Zle_not_gt	40	6.0	search with cache (only 1: unfold Z.le, Z.min; only 1: easy').	0.0678701400757	18
Coq.ZArith.Zorder.Zgt_not_le	40	1.4	search with cache (only 1: intro H; only 1: auto).	0.0522089004517	17
Coq.ZArith.Zorder.Znot_ge_lt	40	8.20.4	search with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: Z.order).	7.21862602234	6271
Coq.ZArith.Zorder.Znot_lt_ge	40	4	search with cache (only 1: trivial).	0.0594561100006	17
Coq.ZArith.Zorder.Znot_gt_le	40	0.12	search with cache (only 1: intros; only 1: auto).	0.494224071503	138
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0186049938202	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	1.1.0	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.168283939362	20
Coq.ZArith.Zorder.Zgt_irrefl	40	21	search with cache (only 1: now Z.nzsimpl').	1.31714582443	898
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.160859107971	34
Coq.ZArith.Zorder.Zle_gt_trans	40	3.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.161974906921	28
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0895369052887	2
Coq.ZArith.Zorder.Zge_trans	40
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0221109390259	3
Coq.ZArith.Zorder.Zsucc_gt_reg	40
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0102989673615	1
Coq.ZArith.Zorder.Zgt_succ	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0143461227417	4
Coq.ZArith.Zorder.Znot_le_succ	40	4.3.1.0.7.5	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: Z.le_elim H; only 1: apply Z.lt_succ_diag_r; only 1: apply Z.lt_succ_diag_r).	3.37583518028	1565
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.010176897049	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.00804305076599	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0177261829376	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0104789733887	1
Coq.ZArith.Zorder.Zle_succ_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0323750972748	15
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00895500183105	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0189170837402	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros n1 n2; only 1: easy).	0.0609140396118	13
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.4	search with cache (only 1: intros a; only 1: Z.swap_greater; only 1: reflexivity).	0.0258660316467	16
Coq.ZArith.Zorder.Zle_0_pos	40	3	search with cache (only 1: easy).	0.0180850028992	4
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	search with cache (only 1: intro n; only 1: reflexivity).	0.0118429660797	2
Coq.ZArith.Zorder.Zle_0_nat	40	7.30.27	search with cache (only 1: destruct n; only 1: easy; only 1: now Nat.nzsimpl).	22.4953939915	19712
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0101311206818	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0112509727478	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0113389492035	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	search with cache (only 1: apply Z.add_le_mono_r).	0.011871099472	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40
Coq.ZArith.Zorder.Zplus_lt_reg_r	40
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.28	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.924008131027	993
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.024178981781	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0331900119781	16
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.017872095108	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0118670463562	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0646967887878	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0273079872131	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	6.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0347540378571	9
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0342810153961	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	7.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.121380090714	17
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.5.4.0	search with cache (only 1: Z.swap_greater; only 1: intros H; only 1: apply Z.mul_lt_mono_pos_r; only 1: assumption).	0.424409866333	233
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00827217102051	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0207660198212	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00907707214355	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0410578250885	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0287621021271	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0194671154022	3
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0191030502319	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0628409385681	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00824308395386	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	6.3	search with cache (only 1: unfold Z.geb, Z.leb; only 1: apply Z.leb_le).	0.170625925064	74
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	3	search with cache (only 1: trivial).	0.00863194465637	4
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	3.5	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.196530103683	39
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.9	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.670519113541	400
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0239148139954	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	4.34.0	search with cache (only 1: unfold Zeq_bool; only 1: fix even_spec 1; only 1: easy).	5.75186300278	8180
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	14.0.1.21.13	search with cache (only 1: intros q; only 1: destruct q; only 1: auto; only 1: now intuition; only 1: auto).	10.252573967	10637
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.1.10.0.0	search with cache (only 1: destruct (n ?= m)%positive; only 1: auto; only 1: revert m; only 1: intros; only 1: auto; only 1: now intuition).	4.91765999794	2629
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0325200557709	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.2.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.137740850449	22
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.1.0.0.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0293700695038	8
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	5.53094601631	1629
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.1.0	search with cache (only 1: intro m; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0414199829102	5
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.00863981246948	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	2.2.0.5.7.0.1	search with cache (only 1: intros H; only 1: destruct b as [| p| p]; only 1: Z.bitwise; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: destr_eq H; only 1: easy).	3.34644389153	2628
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0415029525757	1
Coq.omega.OmegaLemmas.Zred_factor1	40	0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0128600597382	2
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.17532491684	26
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	3	search with cache (only 1: now Z.nzsimpl').	0.0550949573517	4
Coq.omega.OmegaLemmas.Zred_factor6	40	1	search with cache (only 1: now destruct n).	0.804742097855	134
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	2.6	search with cache (only 1: intros; only 1: Z.order).	0.0167381763458	10
Coq.omega.OmegaLemmas.OMEGA2	40	0.2.1.2.0	search with cache (only 1: destruct x; only 1: intros Hn Hm; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.0697331428528	12
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	4.0.10	search with cache (only 1: intros ->; only 1: intros EQ; only 1: now subst).	0.68416595459	188
Coq.omega.OmegaLemmas.OMEGA6	40	0.1.3.7	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	1.05830097198	209
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	0.4.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.10218000412	29
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	0.0.3	search with cache (only 1: symmetry; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0881969928741	23
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0554089546204	3
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40	14.23	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).	3.69313097	1406
Coq.omega.OmegaLemmas.OMEGA17	40	1.1.0	search with cache (only 1: intros H ->; only 1: Z.nzsimpl; only 1: assumption).	0.057235956192	5
Coq.omega.OmegaLemmas.OMEGA18	40	44	search with cache (only 1: easy || now destruct y).	12.9122979641	12241
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0548141002655	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.Program.Wf.Fix_F_eq	40	0.1.3.5.6.0	search with cache (only 1: intro x; only 1: intros; only 1: induction (Rwf x); only 1: destruct r using Acc_inv_dep; only 1: apply F_ext; only 1: auto).	0.809231996536	585
Coq.Program.Wf.Fix_F_inv	40	0.7.5.6.5.0.0	search with cache (only 1: intros x r; only 1: destruct r using Acc_inv_dep; only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	18.801981926	11016
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.126456022263	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0266051292419	2
Coq.Program.Wf.Fix_F_sub_rect	40	0.9.10.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	8.67967200279	3416
Coq.Program.Wf.eq_Fix_F_sub	40	3.0.0	search with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0409858226776	6
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.15.0.1	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	1.13385295868	1259
Coq.Program.Equality.JMeq_eq_refl	40	2	search with cache (only 1: apply UIP).	0.0085871219635	3
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.190668821335	51
Coq.Program.Equality.inj_pairT2_refl	40	2	search with cache (only 1: apply UIP_refl).	0.0081639289856	3
Coq.Program.Equality.solution_left	40	2.1.12	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.249400138855	254
Coq.Program.Equality.solution_right	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0168011188507	4
Coq.Program.Equality.deletion	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.0132491588593	3
Coq.Program.Equality.simplification_heq	40	0.2.15.9	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.452981948853	894
Coq.Program.Equality.simplification_existT2	40	0.0.0.20.4.14	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	1.49319219589	4087
Coq.Program.Equality.simplification_existT1	40	0.16.6.4.6.42	search with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: reflexivity; only 1: assumption).	15.0080959797	39913
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0154860019684	3
Coq.Program.Combinators.compose_id_left	40	0.3	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0112750530243	5
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0130960941315	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros A B C Hl Hr; only 1: reflexivity).	0.0141768455505	2
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0125370025635	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0149400234222	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	2.2.1.1.0.0.2.6.12	search with cache (only 1: intros; only 1: induction stack as [| [| ]]; only 1: constructor; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: auto).	7.16810798645	7935
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40	1.1.3.0.1.9.4	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: induction n; only 1: intros x; only 1: auto; only 1: intro m; only 1: auto).	29.5222361088	16760
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	6.0.2.3	search with cache (only 1: intro l; only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.269508123398	234
Coq.Sorting.Permutation.Permutation_refl'	40
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	0.3.4	search with cache (only 1: intros a a' Ha b b' Hb; only 1: subst; only 1: auto).	0.0298130512238	19
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.0.0.1.5	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto using perm_skip; only 1: simpl; only 1: auto).	0.943832874298	403
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1.0	search with cache (only 1: intro l2; only 1: auto).	0.0170700550079	3
Coq.Sorting.Permutation.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_rev	40	7.6.8.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: apply Permutation_cons_app; only 1: rewrite app_nil_r; only 1: auto).	31.0152790546	10275
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.519734144211	126
Coq.Sorting.Permutation.Permutation_Forall	40
Coq.Sorting.Permutation.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40	4.3.1.4.2	search with cache (only 1: intros HF; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: constructor).	9.25354099274	1943
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.1.0.0.1.3.1	search with cache (only 1: revert l1 l2 l; only 1: intro l1; only 1: intros l2 m Hin; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: apply Add_app).	1.43542718887	281
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.2.0	search with cache (only 1: intros l1 l2 HP; only 1: induction HP; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	9.2629108429	94
Coq.Sorting.Permutation.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_image	40
Coq.Sorting.Permutation.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_ind_transp	40
Coq.Sorting.Sorted.HdRel_inv	40	4.0.1	search with cache (only 1: inversion 1; only 1: subst; only 1: auto).	0.0418810844421	8
Coq.Sorting.Sorted.Sorted_inv	40	0.1.0.0.3.0	search with cache (only 1: intros a l H; only 1: intuition; only 1: inversion H; only 1: trivial; only 1: inversion H; only 1: trivial).	0.0468440055847	10
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.2.0.2.1.3.2	search with cache (only 1: intro n; only 1: intros; only 1: constructor; only 1: inversion H; only 1: auto; only 1: inversion H; only 1: auto).	1.90933585167	947
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0246841907501	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.2.0.0.0.8	search with cache (only 1: intro l'; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	0.895508050919	328
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.CPermutation.CPermutation_Permutation	40	9.1.0.13.1.2.1.2	search with cache (only 1: intros l1 l2 HP; only 1: induction HP; only 1: induction l1; only 1: simpl; only 1: rewrite app_nil_r; only 1: apply Permutation_refl; only 1: simpl; only 1: now apply Permutation_cons_app).	17.5484280586	5660
Coq.Sorting.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation_refl	40	16.11.14	search with cache (only 1: intros l2; only 1: rewrite <- app_nil_r  at 1; only 1: now simpl).	3.33136296272	7254
Coq.Sorting.CPermutation.CPermutation_refl'	40	19.1.1.3.10	search with cache (only 1: repeat red; only 1: intro l1; only 1: intros l HC; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	14.1980512142	18044
Coq.Sorting.CPermutation.CPermutation_sym	40	2.0	search with cache (only 1: induction 1; only 1: now constructor).	0.0454730987549	24
Coq.Sorting.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_app	40	1.2.2	search with cache (only 1: intros l l1 l2; only 1: intro; only 1: eauto using Add_head, Add_app).	0.0499358177185	8
Coq.Sorting.CPermutation.CPermutation_app_comm	40	1.1.1	search with cache (only 1: intro l1; only 1: intro l'; only 1: trivial).	0.1166639328	29
Coq.Sorting.CPermutation.CPermutation_app_rot	40	1.0	search with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.0277900695801	11
Coq.Sorting.CPermutation.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40	0.0.1.0.4.0.2.1.13.7.3	search with cache (only 1: intro Ha; only 1: intro l'; only 1: red; only 1: intro H2; only 1: elim H2; only 1: intro l2; only 1: intros; only 1: apply in_or_app; only 1: destruct (in_app_or _ _ _ H); only 1: intuition; only 1: intuition).	10.1910820007	12810
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40	0.1.0.10.1.1.0.4.2	search with cache (only 1: intros ? ? [? ?]; only 1: induction l1; only 1: intro HF; only 1: now subst; rewrite app_nil_r; only 1: simpl; only 1: rewrite <- Permutation_middle; only 1: intro HF; only 1: inversion_clear HF; only 1: intuition).	19.3860001564	10775
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40
Coq.Init.Wf.Acc_inv	40	6.9.6	search with cache (only 1: intro; only 1: destruct 1; only 1: trivial).	0.436669111252	942
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0156850814819	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0156238079071	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	10.5.4.18.3.4.4	search with cache (only 1: intro; only 1: intro p; only 1: intro H; only 1: destruct p; only 1: auto; only 1: apply False_rec; only 1: auto).	12.0453090668	40422
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.023225069046	6
Coq.Init.Peano.pred_Sn	40	0	search with cache (only 1: split).	0.00955700874329	1
Coq.Init.Peano.not_eq_S	40	11.4.0	search with cache (only 1: red; only 1: intro H; only 1: auto).	2.27882695198	1922
Coq.Init.Peano.O_S	40	3	search with cache (only 1: discriminate).	0.014545917511	12
Coq.Init.Peano.n_Sn	40	3.0.20	search with cache (only 1: induction n; only 1: discriminate; only 1: auto).	0.311942100525	763
Coq.Init.Peano.plus_n_O	40	0.2.0.0.2	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.043986082077	14
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0257711410522	6
Coq.Init.Peano.plus_n_Sm	40	0.0.0.0.6	search with cache (only 1: induction n; only 1: intro n; only 1: auto; only 1: simpl; only 1: auto).	0.174510955811	45
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0308749675751	6
Coq.Init.Peano.mult_n_O	40	0.0.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.0258100032806	5
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2.1	search with cache (only 1: intro n; only 1: induction n; only 1: left; only 1: auto).	0.0139408111572	7
Coq.Init.Peano.le_n_S	40	0.0.0	search with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: auto).	0.0141279697418	3
Coq.Init.Peano.nat_case	40	0.2.6.11.2	search with cache (only 1: intros H x0; only 1: destruct H; only 1: auto; only 1: intro n; only 1: auto).	1.10764980316	1854
Coq.Init.Peano.nat_double_ind	40	1.2.7.1.5.4	search with cache (only 1: intros H x0; only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	2.88350486755	4309
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	21.5919950008	8897
Coq.Init.Peano.min_r	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	23.2466180325	11432
Coq.Init.Peano.nat_rect_succ_r	40	1.1.0.0.21	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).	2.55324196815	3481
Coq.Init.Peano.nat_rect_plus	40	0.1.1.0.0.0.0.5	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro n; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.94077706337	1012
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	1.90	search with cache (only 1: destruct 2; only 1: assumption).	1.82629609108	20587
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0112590789795	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0113649368286	3
Coq.Init.Datatypes.surjective_pairing	40	3.0.1	search with cache (only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0168840885162	7
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0167520046234	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	14.3284561634	22189
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00456404685974	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	0.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00722813606262	6
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00599813461304	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.1.1.0.0.0.0.4	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0773270130157	624
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0755360126495	295
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.554557085037	2212
Coq.Init.Logic.imp_iff_compat_l	40	0.1.1.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0111310482025	6
Coq.Init.Logic.imp_iff_compat_r	40	1.4.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).	0.0164000988007	18
Coq.Init.Logic.not_iff_compat	40	2.1.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.0123438835144	11
Coq.Init.Logic.neg_false	40	0.1.3.0.3.0	search with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.0681209564209	188
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0765249729156	77
Coq.Init.Logic.and_assoc	40	7.4.0.1.0.0.4.2.1.9.2.0.2	search with cache (only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: apply H; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: assumption; only 1: apply HypR; only 1: apply HypR).	13.4172170162	46039
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	0.401252985001	671
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.1	search with cache (only 1: intros; only 1: assumption).	0.00841403007507	3
Coq.Init.Logic.iff_to_and	40	3.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: auto).	0.136771917343	139
Coq.Init.Logic.inst	40	4	search with cache (only 1: auto).	0.012246131897	12
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00850892066956	2
Coq.Init.Logic.absurd	40	0.4.12.1	search with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.355051994324	1159
Coq.Init.Logic.eq_sym	40	1.4.6	search with cache (only 1: intro H1; only 1: elim H1; only 1: split).	0.0411369800568	82
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0120959281921	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0103321075439	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00964403152466	2
Coq.Init.Logic.not_eq_sym	40	0.4.1.6	search with cache (only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.094064950943	247
Coq.Init.Logic.eq_sind_r	40	2.2.40	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.572934865952	2881
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0118989944458	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0101709365845	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0110349655151	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.2.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0213391780853	5
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0122420787811	2
Coq.Init.Logic.rew_opp_l	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.013524055481	2
Coq.Init.Logic.f_equal2	40	0.0.2.1	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0179891586304	7
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0185220241547	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0229279994965	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0323820114136	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.0137660503387	4
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0128099918365	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0134739875793	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0146429538727	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0134890079498	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.0175580978394	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0119631290436	2
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0200500488281	3
Coq.Init.Logic.rew_swap	40	0.0	search with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0160791873932	2
Coq.Init.Logic.rew_compose	40	3.0	search with cache (only 1: destruct H2; only 1: reflexivity).	0.0168368816376	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.00642681121826	1
Coq.Init.Logic.eq_trans_map_distr	40	0.3.1.2	search with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.0345458984375	12
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.0172791481018	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.0.1	search with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0207250118256	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.0147378444672	4
Coq.Init.Logic.rew_const	40	0.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.0121710300446	4
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.7.1	search with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0752599239349	140
Coq.Init.Logic.inhabited_covariant	40	0.1.4	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0145041942596	22
Coq.Init.Logic.eq_stepl	40	0.0.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0191698074341	20
Coq.Init.Logic.iff_stepl	40	0.0.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0134778022766	4
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.6.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.097953081131	70
Coq.Init.Logic.rew_ex2	40	0.0.24	search with cache (only 1: symmetry; only 1: destruct H, u; only 1: reflexivity).	0.463441133499	910
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0106930732727	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0127918720245	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0117399692535	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.021852016449	5
Coq.Init.Logic_Type.identity_ind_r	40	0.11.1	search with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.133687019348	294
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0123698711395	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0125529766083	3
Coq.Init.Specif.sigT_eta	40	1.3	search with cache (only 1: destruct p; only 1: split).	0.0166831016541	6
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0159430503845	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0203568935394	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0190360546112	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.10.9	search with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.320770978928	741
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.55.47	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	2.60095000267	22209
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0298659801483	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0253689289093	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0357639789581	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	1.12.18.3.8	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: intro; only 1: destruct H; only 1: reflexivity).	8.85859203339	11884
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0244660377502	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0238618850708	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0522158145905	7
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	5.4.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	2.16962194443	1027
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0215220451355	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.6.5.0.1	search with cache (only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.40261507034	952
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	4.2.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	2.7069029808	578
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0342030525208	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0345170497894	4
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.1.1.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0850150585175	10
Coq.Init.Specif.eq_sig2_uncurried_iff	40	4.5.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	7.16217088699	1614
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0851309299469	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.015664100647	3
Coq.funind.Recdef.le_lt_SS	40	17	search with cache (only 1: intuition).	0.233263015747	248
Coq.funind.Recdef.Splus_lt	40	27	search with cache (only 1: auto with arith).	0.168430089951	412
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.0	search with cache (only 1: red; only 1: trivial).	0.0108060836792	2
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	2	search with cache (only 1: firstorder).	0.00743198394775	3
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00670504570007	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	3.1.1.12.7.1	search with cache (only 1: split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: auto).	1.40186309814	1742
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00820088386536	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0100572109222	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0148448944092	4
Coq.Classes.CMorphisms.subrelation_proper	40	3	search with cache (only 1: firstorder).	0.00831198692322	4
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1	search with cache (only 1: simpl_crelation).	0.0113990306854	2
Coq.Classes.CMorphisms.pointwise_subrelation	40	4	search with cache (only 1: firstorder).	0.00722193717957	5
Coq.Classes.CMorphisms.forall_subrelation	40	4.2	search with cache (only 1: intro; only 1: firstorder).	0.0918970108032	12
Coq.Classes.CMorphisms.iff_impl_subrelation	40	5.0.0	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: auto).	0.0131170749664	8
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00634598731995	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00740909576416	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00743293762207	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	3.13.1	search with cache (only 1: intros A R H B R' H0 x y z X X0 x0 y0 X1; only 1: simpl_crelation; only 1: firstorder).	1.16057801247	796
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	3.0.0.3	search with cache (only 1: intros x y H'; only 1: reduce; only 1: red in H'; only 1: firstorder).	0.0787060260773	27
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	0.0.2	search with cache (only 1: intros A P; only 1: intros; only 1: firstorder).	0.0305149555206	5
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	6.0	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	1.52268600464	386
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	7.0	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	1.48015093803	416
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	4	search with cache (only 1: firstorder).	2.23528385162	475
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	0.6	search with cache (only 1: intros C decide H P H0; only 1: firstorder).	0.133680820465	30
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.67577791214	57
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	4.0	search with cache (only 1: hnf; only 1: firstorder).	0.0136640071869	6
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	0.6	search with cache (only 1: intros A C h1 h2; only 1: firstorder).	0.0788791179657	38
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2	search with cache (only 1: simpl_crelation).	0.0130298137665	3
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	2.5	search with cache (only 1: reduce; only 1: auto).	0.0133152008057	9
Coq.Classes.CMorphisms.flip_respectful	40	0.0.1	search with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.026221036911	4
Coq.Classes.CMorphisms.flip1	40	5.0	search with cache (only 1: reduce; only 1: firstorder).	0.0143041610718	7
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00728392601013	1
Coq.Classes.CMorphisms.eq_subrelation	40	0.7.0.1	search with cache (only 1: hnf; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: firstorder).	0.104788064957	78
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00948095321655	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00579595565796	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0	search with cache (only 1: reduce; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: subst; only 1: firstorder).	0.0448541641235	6
Coq.Classes.CMorphisms.proper_normalizes_proper	40	4.2	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0201468467712	8
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00769901275635	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.0	search with cache (only 1: intros A R H x y X x0 y0 X0 X1; only 1: simpl_crelation).	0.0174920558929	2
Coq.Classes.CMorphisms.proper_sym_flip_2	40	0.4.1.6	search with cache (only 1: intros A R H x x0 y X; only 1: unfold flip, respectful; only 1: reduce_goal; only 1: firstorder).	3.72060108185	738
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.17	search with cache (only 1: simpl_crelation; only 1: firstorder).	25.8876919746	15317
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0288710594177	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0365550518036	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	4.5.0.0.0	search with cache (only 1: intros A R H x x0 y X; only 1: intros; only 1: transitivity x0; only 1: firstorder; only 1: auto).	3.64023900032	1765
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00958681106567	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00847196578979	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00878119468689	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.208742856979	1
Coq.Classes.CRelationClasses.complement_inverse	40	2	search with cache (only 1: trivial).	0.00971984863281	3
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00913000106812	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	3.0	search with cache (only 1: hnf; only 1: firstorder).	0.0120429992676	5
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	1.1	search with cache (only 1: hnf; only 1: auto).	0.0233340263367	17
Coq.Classes.CRelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0208940505981	3
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0176038742065	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0854029655457	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.025787115097	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00723695755005	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00566792488098	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1.1.4.0	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.0132329463959	10
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00741314888	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00819492340088	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1.0.1.0.2	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.0277719497681	9
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0228459835052	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	1.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0540480613708	3
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.0.3.0.2	search with cache (only 1: intros R H x x0 y H0 H1; only 1: intros; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.163838863373	66
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00902915000916	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00729012489319	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0096869468689	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.208891868591	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.00778603553772	4
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00725889205933	1
Coq.Classes.RelationClasses.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.0111029148102	4
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.0233960151672	18
Coq.Classes.RelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0231330394745	3
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0173020362854	1
Coq.Classes.RelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0867900848389	1
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0253169536591	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00949597358704	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00719404220581	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	2.0.2.0.9.0	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro n; only 1: reflexivity || destruct H; only 1: simpl; only 1: firstorder).	1.03267598152	1344
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0265431404114	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0216009616852	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.323395013809	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	3	search with cache (only 1: firstorder).	0.0101490020752	4
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0176961421967	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0406270027161	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0155658721924	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0.7	search with cache (only 1: symmetry; only 1: trivial).	0.0119268894196	9
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0061981678009	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00598812103271	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.0.0.0.2.16.0	search with cache (only 1: split; only 1: intros h1 h2; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: red; only 1: firstorder).	0.344357967377	551
Coq.Classes.Morphisms.subrelation_id_proper	40	6	search with cache (only 1: trivial).	0.0136530399323	12
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0140318870544	1
Coq.Classes.Morphisms.subrelation_refl	40	1.0.2	search with cache (only 1: unfold subrelation in *; only 1: intros; only 1: assumption).	0.0156359672546	6
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00818014144897	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	2.1.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0205388069153	11
Coq.Classes.Morphisms.pointwise_subrelation	40	0.4	search with cache (only 1: reduce; only 1: firstorder).	0.0141630172729	6
Coq.Classes.Morphisms.forall_subrelation	40	0	search with cache (only 1: firstorder).	0.0133650302887	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.00661683082581	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00627708435059	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	2.2.25.5.3	search with cache (only 1: intros; only 1: reduce; only 1: apply mor; only 1: intuition; only 1: intuition).	20.4990079403	19462
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	5.0.2	search with cache (only 1: reduce; only 1: red in H0; only 1: firstorder).	0.0668778419495	11
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	3.6	search with cache (only 1: intro; only 1: firstorder).	0.127420902252	41
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	6.0	search with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.715749025345	220
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	1.5	search with cache (only 1: intros; only 1: firstorder).	1.3370988369	412
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	3.26566815376	520
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	1.6	search with cache (only 1: intros; only 1: firstorder).	0.0545060634613	19
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.774660825729	66
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.0130398273468	2
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1.1	search with cache (only 1: intros R H x y H0 x0 y0 H1; only 1: firstorder).	0.0321671962738	20
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.2.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.019905090332	7
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	3	search with cache (only 1: firstorder).	0.0121030807495	4
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0102651119232	1
Coq.Classes.Morphisms.flip1	40	2	search with cache (only 1: apply H).	0.00778102874756	3
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00726294517517	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0117869377136	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00665807723999	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00777888298035	1
Coq.Classes.Morphisms.proper_proper	40	0.7.0.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: rewrite <- H0; only 1: firstorder).	0.927798986435	293
Coq.Classes.Morphisms.proper_normalizes_proper	40	2.5.0	search with cache (only 1: simpl_relation; only 1: reduce in H; only 1: firstorder).	0.0288169384003	12
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00796699523926	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.2	search with cache (only 1: reduce; only 1: simpl_relation).	0.0697989463806	16
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.1.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros RA R mR x y H x0 y0 H0; only 1: auto).	0.0508420467377	24
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: simpl_relation).	0.0136349201202	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0092568397522	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.044716835022	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00900197029114	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	9	search with cache (only 1: firstorder).	0.0197360515594	14
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0167238712311	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.181364059448	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	9	search with cache (only 1: firstorder).	0.0165011882782	10
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0113470554352	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0104088783264	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00920391082764	1
Coq.Classes.RelationPairs.pair_compat	40	0.0	search with cache (only 1: intros x x' Hxx'; only 1: firstorder).	0.0152721405029	2
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00937700271606	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0103390216827	1
Coq.Classes.RelationPairs.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40	0.3.6.1.7.19.4	search with cache (only 1: intro z; only 1: intro n; only 1: case n; only 1: intro m; only 1: intros h1 h2; only 1: apply h1; only 1: assumption).	17.9103758335	40365
Coq.Classes.DecidableClass.Decidable_complete	40	1.4.1.2.1.3.13.14.6	search with cache (only 1: intro H; only 1: intro n; only 1: intro x; only 1: case n; only 1: intro m; only 1: destruct m; only 1: auto; only 1: intros [? ?]; only 1: auto).	13.2420740128	31285
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.SetoidClass.setoid_refl	40	0.17	search with cache (only 1: red; only 1: now simpl).	0.679226875305	636
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0138750076294	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0145409107208	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	17.1.3	search with cache (only 1: intros y q u H; only 1: intros; only 1: now rewrite <- H1).	2.56398391724	2351
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	0.0.6.10	search with cache (only 1: intros A x y z H1 H2; only 1: rewrite <- H2; only 1: red; only 1: firstorder).	1.95994710922	1476
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	7.5.1	search with cache (only 1: repeat red; only 1: intros H v; only 1: firstorder).	1.78571891785	322
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.0375080108643	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0100028514862	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0122430324554	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	2.7	search with cache (only 1: intros x x' EQ; only 1: firstorder).	0.335382938385	37
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.1.1.0	search with cache (only 1: intro; only 1: unfold subrelation; only 1: intro; only 1: firstorder).	0.0293838977814	9
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.00932502746582	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	4	search with cache (only 1: trivial).	0.00848889350891	5
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: now destruct (is_succ p) as (n, ->)).	0.0288150310516	7
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40	8.0.9.3	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intro q; only 1: now subst).	30.4934339523	17178
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.0.0.0.1.1.3.19	search with cache (only 1: induction n; only 1: simpl Pos.of_nat; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	2.65041613579	1767
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0197629928589	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: congruence).	0.0393788814545	11
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.0	search with cache (only 1: simpl; only 1: split).	0.0109469890594	2
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	2.0.0.1	search with cache (only 1: unfold Pos.to_nat; only 1: intros n; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl').	0.0660099983215	21
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	2	search with cache (only 1: decide equality).	0.0349860191345	18
Coq.PArith.BinPos.Pos.xI_succ_xO	40	8	search with cache (only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.0117170810699	17
Coq.PArith.BinPos.Pos.succ_discr	40	18.27.4.17.10.25	search with cache (only 1: destruct p; only 1: simpl; only 1: discriminate; only 1: intro H1; only 1: now f_equiv; only 1: Bool.destr_bool).	32.1473939419	99346
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00823402404785	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.1.0.2.0.174	search with cache (only 1: compute; only 1: induction p; only 1: symmetry; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	4.09091591835	16849
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: now destruct p).	0.00921702384949	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1.0.0.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.0491189956665	11
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0156950950623	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.2.0.0.1.0.11.5.0.0.1.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equiv; only 1: easy; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	5.84911990166	4588
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.2.1.5.0.0.0	search with cache (only 1: destruct p; only 1: now destruct p; only 1: simpl; only 1: intros; only 1: apply succ_pred_double; only 1: intros; only 1: now f_equal).	7.59002995491	2976
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00846791267395	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00762104988098	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.0.10.5.0	search with cache (only 1: revert p q; only 1: intro q; only 1: fix even_spec 1; only 1: intro m; only 1: auto using add_no_neutral).	8.87298417091	4267
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.4.0	search with cache (only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.124455928802	40
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40	1.1.0.0.10.6.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	5.28306508064	3819
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	1	search with cache (only 1: reflexivity).	0.00836801528931	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: auto using add_1_r).	0.00796294212341	1
Coq.PArith.BinPos.Pos.mul_1_r	40	2.1.3.2.0.0.8	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: auto).	2.01838612556	1240
Coq.PArith.BinPos.Pos.mul_xO_r	40	1.0.1.1.0.1.0.0.0.2.0	search with cache (only 1: revert q; only 1: induction p; only 1: intro q; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: intro q; only 1: simpl; only 1: now f_equal; only 1: intro q; only 1: now f_equal).	10.7018620968	4459
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.524975061417	128
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.466924905777	132
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	0.0.1.0.0.0.2.12.10	search with cache (only 1: induction p; only 1: destruct q; only 1: now f_equal; only 1: discriminate; only 1: simpl; only 1: now f_equal; only 1: discriminate; only 1: intros H; only 1: now f_equal).	32.7714550495	27611
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0190110206604	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.169839143753	24
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0272328853607	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40	1.0.19.1	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intro q; only 1: now f_equal).	24.6175568104	15105
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.1.0	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.119455099106	16
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.2.0.0.0.0.0.0.10	search with cache (only 1: split; only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy'; only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy || now destruct 1; only 1: easy').	8.35115408897	3085
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0410981178284	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.0.0.0.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now intuition).	0.0608999729156	12
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0462920665741	9
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.0.0.0	search with cache (only 1: destruct compare; only 1: trivial; only 1: trivial; only 1: trivial).	0.0196068286896	4
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00833606719971	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	2.0.3.1.2.2	search with cache (only 1: rewrite compare_cont_spec; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: simpl_compare; only 1: now rewrite IHp; only 1: trivial).	0.523315906525	372
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0251219272614	5
Coq.PArith.BinPos.Pos.compare_le_iff	40	2.1.1.0.1	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.326434135437	83
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.0	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.152565002441	35
Coq.PArith.BinPos.Pos.gt_lt	40	5.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.447597980499	128
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00943398475647	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.3.5	search with cache (only 1: revert q; only 1: intros a; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	1.29094004631	409
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0207979679108	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00900101661682	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	3	search with cache (only 1: now destruct compare || now destruct p).	0.027626991272	13
Coq.PArith.BinPos.Pos.nlt_1_r	40	7	search with cache (only 1: now destruct p).	0.0407149791718	25
Coq.PArith.BinPos.Pos.lt_1_succ	40	3.2.0.3	search with cache (only 1: induction p as [| p IHp] using peano_rect; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: now destruct p).	0.360271930695	232
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0165920257568	2
Coq.PArith.BinPos.Pos.lt_nle	40	6.4	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- PeanoNat.Nat.compare_nle_iff, PeanoNat.Nat.compare_antisym, CompOpp_iff).	2.54084801674	674
Coq.PArith.BinPos.Pos.lt_le_incl	40	14	search with cache (only 1: congruence).	1.10403609276	439
Coq.PArith.BinPos.Pos.lt_lt_succ	40	12.2.0	search with cache (only 1: intros; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now apply PeanoNat.Nat.lt_le_incl).	0.992771863937	1170
Coq.PArith.BinPos.Pos.succ_lt_mono	40	2.6.1.3.2	search with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	6.10847306252	2334
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	0.0.34	search with cache (only 1: constructor; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.520121097565	659
Coq.PArith.BinPos.Pos.lt_compat	40	0.3.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: intuition).	0.0889158248901	8
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0.3.4.0.6	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: intro q; only 1: now f_equal; only 1: apply lt_eq_cases; only 1: now right).	0.494329929352	505
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.1.11	search with cache (only 1: intros EQ; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	8.92875909805	2578
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40	2.6.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto).	0.520874023438	202
Coq.PArith.BinPos.Pos.le_antisym	40	1.3.2.1.10.9	search with cache (only 1: intro eq_rect_eq; only 1: case (compare_spec p q); only 1: congruence; only 1: now rewrite <- ge_le_iff; only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	15.7878711224	8147
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40	0.0.0.0.0.0.0.7	search with cache (only 1: rewrite (add_comm r), (add_comm q); only 1: revert q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: apply compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	2.6401720047	1407
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.0.3	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.268415927887	101
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.1.0.4.1	search with cache (only 1: revert q r; only 1: intros n m; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.838172912598	353
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.4	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.248095035553	79
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.0.4	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.10978603363	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0117108821869	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.4.2	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: reflexivity).	0.0970029830933	49
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00788497924805	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	0.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: exists r; only 1: apply sub_mask_add_diag_l).	0.0229299068451	4
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0213317871094	5
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0237789154053	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.0.1.0.1.1.0.0.0.0	search with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: discriminate; only 1: intros r H; only 1: subst; only 1: auto using lt_add_r; only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	1.65806412697	631
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.1	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.132627010345	4
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.2.0.0.10	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: rewrite compare_sub_mask; only 1: unfold sub; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	3.72372603416	2759
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0359489917755	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	2.0.0.4.1.0.0.3.0.0	search with cache (only 1: unfold le, min; only 1: intros x y; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: intuition; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now apply compare_eq_iff; only 1: auto).	10.5958240032	6572
Coq.PArith.BinPos.Pos.max_1_l	40	0.0.2.0.6.0.13.58.0	search with cache (only 1: apply max_r || apply max_l; only 1: case n; only 1: now destruct p; only 1: intros a; only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_succ_r, le_1_l; only 1: apply lt_eq_cases; only 1: right; only 1: reflexivity || apply f_equal || exfalso).	36.1664321423	78031
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0348680019379	9
Coq.PArith.BinPos.Pos.min_1_l	40	0.0.0.1.0.0.0.9	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.806739091873	750
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0367770195007	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	1.0.4.1.0.0.0	search with cache (only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros q r; only 1: rewrite <- compare_le_iff; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	1.15812802315	562
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.0	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.122584104538	4
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.1.0.0.0.1.10	search with cache (only 1: destruct (min_spec m n) as [(H', E')| (H', E')]; only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l; only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	1.96949386597	675
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	2.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.209225893021	24
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0183148384094	6
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0241508483887	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.0.0.1.17.15.9	search with cache (only 1: simpl; only 1: symmetry; only 1: induction n; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: f_equal; only 1: now f_equal).	8.47132992744	7755
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.0.0.2.8.0.5.0.0.1	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: simpl; only 1: induction n; only 1: auto; only 1: intros; only 1: f_equal; only 1: auto).	33.1696529388	27626
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40	1.9.18	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	3.98943305016	3046
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	2.11.3.2.0	search with cache (only 1: intros n m p; only 1: revert n m; only 1: intro n; only 1: fix odd_spec 1; only 1: auto using add_1_r).	12.9566559792	5620
Coq.PArith.BinPos.Pos.ggcd_gcd	40	0.27.19.7	search with cache (only 1: intros a m; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	16.4907739162	27985
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	1.1.20	search with cache (only 1: fix odd_spec 1; only 1: symmetry; only 1: intuition).	0.606887817383	1117
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	search with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).	0.0131080150604	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	1.2.3.8.11	search with cache (only 1: intros H; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition; only 1: intuition).	1.8173160553	1362
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: now subst).	0.0269150733948	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	11.1	search with cache (only 1: fix even_spec 1; only 1: assumption).	1.46321487427	889
Coq.Arith.Even.odd_equiv	40	9.2	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.21466803551	663
Coq.Arith.Even.even_or_odd	40	29.14.7	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	13.5733430386	30051
Coq.Arith.Even.even_odd_dec	40
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.110707998276	1
Coq.Arith.Even.even_even_plus	40	0.3.1.9.0.2	search with cache (only 1: Nat.cases n; only 1: parity_binop; only 1: induction n as [| n IH]; only 1: inversion_clear 1 as [| ? H0]; only 1: now Nat.nzsimpl'; only 1: parity_binop).	6.26834106445	3509
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0382189750671	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0809540748596	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0384809970856	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.122522830963	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0501041412354	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0375781059265	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0376310348511	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.133926153183	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0377991199493	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0379581451416	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0541620254517	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0385670661926	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.13627409935	1
Coq.Arith.Even.even_mult_l	40
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0261559486389	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0381441116333	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0548791885376	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0407650470734	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0271060466766	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0271339416504	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.00830698013306	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0207159519196	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.2.0	search with cache (only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: now rewrite IH).	0.0609338283539	18
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	3.0.0.0.2.2.8.3	search with cache (only 1: symmetry; only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: intro n; only 1: symmetry; only 1: now destruct n; only 1: trivial).	11.61510396	7135
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	15.5.7	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: intuition).	4.00196695328	5349
Coq.Arith.Between.between_le	40	1.5.0.1	search with cache (only 1: induction 1; only 1: auto with arith; only 1: constructor; only 1: auto).	0.144506931305	80
Coq.Arith.Between.between_Sk_l	40	10.1.0.6.0.2.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: destruct H; only 1: intros; only 1: auto with arith; only 1: auto with arith).	6.49979305267	6717
Coq.Arith.Between.between_restr	40	0.0.1.2	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0378060340881	24
Coq.Arith.Between.exists_le_S	40	2.0.32.1.1	search with cache (only 1: induction 1; only 1: auto; only 1: elim H using PeanoNat.Nat.le_ind; only 1: auto with arith; only 1: auto with arith).	26.1879518032	31754
Coq.Arith.Between.exists_S_le	40	1.0.0.15.4	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: intro m; only 1: intros; only 1: auto with arith).	9.57502317429	10029
Coq.Arith.Between.in_int_intro	40	1.0.4	search with cache (only 1: fix gcd_greatest 1; only 1: intros y q u H; only 1: auto).	0.149740934372	47
Coq.Arith.Between.in_int_lt	40	4.7	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order).	0.418661117554	291
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	3.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0112979412079	5
Coq.Arith.Between.in_int_Sp_q	40	1.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.112482070923	24
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.0.2.0	search with cache (only 1: induction 1; only 1: intro LS'; only 1: auto with arith; only 1: auto with arith).	0.0251219272614	7
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40	0.21.5	search with cache (only 1: intro p; only 1: fix gcd_divide 1; only 1: auto with arith).	11.9053559303	14711
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	2.0.1.9.4.0.2	search with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m as [| m]; only 1: intro H; only 1: now right; only 1: now left).	4.06339216232	3866
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40	0.9.0.0.2.12.0.0.17	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: Nat.auto'; only 1: intros m H; only 1: elim H using Nat.le_ind; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	8.16298604012	10169
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	0.0.0.2.6.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: right; only 1: revert n; only 1: fix le_div2 1; only 1: intros a; only 1: apply Nat.le_div2).	3.9068031311	2383
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.22.11	search with cache (only 1: intros a; only 1: fix even_odd_double 1; only 1: auto with arith).	4.30801010132	5978
Coq.Arith.Div2.odd_S2n	40
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.237743139267	59
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40	15.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: intuition).	11.9856131077	3635
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0.10.0.18	search with cache (only 1: revert m; only 1: intros a Ha; only 1: apply Nat.add_le_mono_l; only 1: trivial).	3.25085997581	3315
Coq.Arith.Plus.plus_le_compat_r	40	0.0.25	search with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).	2.24834895134	2075
Coq.Arith.Plus.plus_lt_compat_l	40	0.11.2	search with cache (only 1: intros H; only 1: apply Nat.add_lt_mono_l; only 1: assumption).	0.884835004807	341
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40	27.26.1.28	search with cache (only 1: induction 1; only 1: apply Nat.add_le_mono_l; only 1: Nat.nzsimpl; only 1: auto).	32.1362841129	54127
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.00797891616821	2
Coq.Arith.Plus.plus_lt_compat	40	0.26.22.2	search with cache (only 1: intros Hnm Hpq; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order; only 1: assumption).	13.7822229862	22142
Coq.Arith.Plus.le_plus_l	40	3.3.5.0.1.0	search with cache (only 1: Nat.induct m; only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).	3.34466791153	1335
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	19.10.4.15	search with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: now right).	10.9471521378	24353
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	1.3.3.3	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro H; only 1: now rewrite <- ?Nat.add_le_mono_r).	1.28104305267	669
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	3.0	search with cache (only 1: intro H; only 1: Nat.order).	0.0234761238098	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.013081073761	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0251281261444	5
Coq.Arith.Lt.le_not_lt	40	4.1	search with cache (only 1: intros LT EQ; only 1: Nat.order).	0.290845155716	46
Coq.Arith.Lt.lt_not_le	40	4.2	search with cache (only 1: intros LT EQ; only 1: Nat.order).	0.315074920654	59
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intros; only 1: Nat.auto').	0.0254399776459	2
Coq.Arith.Lt.lt_0_neq	40	0.4.2.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	0.0380530357361	10
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply le_n_S).	0.0179839134216	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.0153920650482	1
Coq.Arith.Lt.S_pred	40	3.0.6.2	search with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros a Ha; only 1: Morphisms.f_equiv).	0.882842063904	523
Coq.Arith.Lt.S_pred_pos	40	2.2.1.8	search with cache (only 1: Nat.cases n; only 1: Nat.order; only 1: intros a Ha; only 1: trivial).	1.35755610466	983
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	4.1.0.4.0.0	search with cache (only 1: destruct n; only 1: intro H; only 1: trivial; only 1: simpl; only 1: intros H; only 1: auto).	1.12360811234	720
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	39.3870949745	13025
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.35598897934	138
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00809097290039	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	search with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00805377960205	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00820422172546	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00800108909607	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00812888145447	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0199699401855	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.00826001167297	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40	4.21.24	search with cache (only 1: intros a Ha; only 1: fix gcd_divide 1; only 1: trivial).	10.4221010208	17253
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0759959220886	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.0745799541473	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	7.4.0.2.0	search with cache (only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: intros; only 1: simpl; only 1: intuition).	1.8846809864	1109
Coq.Arith.Factorial.fact_neq_0	40	0.0.1.0.0.2.54	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	25.1348061562	43341
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.904443979263	190
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40	0.0.3.2.0.0.0.1.2.4	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: destruct (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).	3.0501139164	1460
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.544179916382	182
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.241380214691	62
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.0.0.0.1.0.0.1.0.0.0.11	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: left; only 1: auto with arith; only 1: intro m; only 1: destruct m as [| m]; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	6.97346615791	3779
Coq.Arith.Compare_dec.lt_dec	40	0.0.0.0.0.0.0.0.0.17.0.1	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: Nat.Private_Tac.order || (right; Nat.Private_Tac.order) || (left; Nat.Private_Tac.order); only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	4.70752692223	3891
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.00701689720154	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.0074188709259	2
Coq.Arith.Compare_dec.dec_le	40	1.1.1.25.0	search with cache (only 1: left; only 1: Nat.cases n; only 1: auto with arith; only 1: fix le_div2 1; only 1: auto).	1.91116595268	2712
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	1.1.1.26.0.2	search with cache (only 1: right; only 1: apply Nat.le_ngt; only 1: Nat.cases n; only 1: auto with arith; only 1: fix le_div2 1; only 1: auto).	20.2977337837	9240
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0115909576416	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: intuition Nat.order).	0.0116829872131	3
Coq.Arith.Compare_dec.not_gt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.00823402404785	2
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.00906300544739	2
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.nlt_ge).	0.00935316085815	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	1.8.1.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	1.76949286461	884
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	search with cache (only 1: apply Nat.compare_lt_iff).	0.00849390029907	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	search with cache (only 1: apply Nat.compare_gt_iff).	0.00930690765381	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	1.5.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.78477191925	213
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	2.1.0.2.0.0.0.0.0.0.18	search with cache (only 1: Nat.double_induct n m; only 1: intro m; only 1: destruct m; only 1: apply Nat.leb_le; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros; only 1: apply Peano.le_0_n; only 1: Bool.destr_bool; only 1: auto with arith).	14.3232300282	7631
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0214099884033	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0184919834137	3
Coq.Arith.Compare_dec.leb_compare	40	4.5.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	1.13680315018	425
Coq.Arith.EqNat.eq_nat_refl	40	0.2.2.26	search with cache (only 1: Nat.induct n; only 1: now Nat.nzsimpl; only 1: intros m Hm; only 1: now rewrite <- ?Nat.succ_le_mono).	0.576472997665	676
Coq.Arith.EqNat.eq_nat_is_eq	40	3.7.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	3.67845892906	1635
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0221538543701	6
Coq.Arith.EqNat.eq_nat_eq	40	3.1.0.1.0	search with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.524394989014	151
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	7.0.2.1.2	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: assumption).	1.12023282051	651
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	1	search with cache (only 1: destr_bool).	0.00778698921204	2
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.010507106781	2
Coq.Arith.PeanoNat.Nat.pred_0	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00983691215515	2
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.0068371295929	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0080840587616	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0238490104675	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0252499580383	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.1	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0202529430389	5
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0225410461426	5
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0942800045013	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.2.0.1.0.1	search with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: simpl; only 1: trivial).	0.0941400527954	13
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	32.7572548389	15300
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	6.0	search with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	0.0162320137024	8
Coq.Arith.PeanoNat.Nat.pow_0_r	40	5	search with cache (only 1: now nzsimpl').	0.0140519142151	6
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	4	search with cache (only 1: trivial).	0.0175139904022	20
Coq.Arith.PeanoNat.Nat.square_spec	40	2.1.0	search with cache (only 1: induction n as [| p H]; only 1: now nzsimpl; only 1: auto).	0.0518469810486	12
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.3.1.23.18	search with cache (only 1: intro n; only 1: case n; only 1: simpl; only 1: intros; only 1: now rewrite <- plus_n_Sm in H).	1.17677092552	3295
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40	0.1.0.0.0.0.1.0.0.3.0.0.0.4	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: nzsimpl; only 1: now rewrite plus_n_Sm; only 1: intros (m, H); only 1: destruct m as [| m]; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	8.19225311279	3577
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	3.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.209714889526	63
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.0119869709015	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.5	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.143436908722	47
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00976610183716	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	13	search with cache (only 1: apply le_0_l).	0.175496101379	127
Coq.Arith.PeanoNat.Nat.div2_double	40	0.1.2.3.0.0.2.23	search with cache (only 1: nzinduct n; only 1: simpl; only 1: reflexivity; only 1: intro; only 1: set (s := log2 n); only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	8.17702007294	3698
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0310130119324	6
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.3.6.2.0.14	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now apply le_succ_l; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto).	17.5155088902	12551
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.18	search with cache (only 1: fix le_div2 1; only 1: trivial).	4.83026504517	4101
Coq.Arith.PeanoNat.Nat.double_twice	40	2.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.153588056564	55
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.7.0	search with cache (only 1: destr_bool; only 1: induct ltac:(n); only 1: intuition; only 1: intros m H1; only 1: trivial).	0.204794883728	148
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	4.1.3.6.17.0.3	search with cache (only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: split; only 1: now rewrite <- !plus_n_Sm, <- !plus_n_O; only 1: fix odd_spec 1; only 1: assumption).	8.00887298584	8465
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	2.0.10	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p H; only 1: auto with *).	5.6405608654	2710
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	5.3.8	search with cache (only 1: fix gcd_greatest 1; only 1: intros m H; only 1: intuition).	26.0308392048	12542
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	3.7.1.7	search with cache (only 1: intro m; only 1: intros a n; only 1: fix le_div2 1; only 1: trivial).	6.30940485001	4473
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	5.7.1.3	search with cache (only 1: unfold odd; only 1: intro n; only 1: fix odd_spec 1; only 1: trivial).	27.2255840302	10918
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0161409378052	4
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	9	search with cache (only 1: trivial).	0.0144240856171	12
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0093879699707	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	3.2.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: Nat.order).	0.0162768363953	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00736808776855	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00906705856323	1
Coq.Arith.Gt.gt_S	40	2.0.18	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto with relations).	1.28922700882	1058
Coq.Arith.Gt.gt_pred	40	0.3.3.5.2	search with cache (only 1: Nat.cases m; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: apply Nat.succ_lt_mono).	1.43873691559	1097
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0108091831207	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0107350349426	1
Coq.Arith.Gt.le_S_gt	40	3.0.0.0.0	search with cache (only 1: Nat.cases n; only 1: intro H; only 1: trivial; only 1: intros n IH; only 1: trivial).	0.0474379062653	8
Coq.Arith.Gt.gt_S_le	40	0.1.1.0.4.1	search with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: Nat.order; only 1: Nat.order'; only 1: intro n; only 1: apply Nat.succ_lt_mono).	0.419276952744	228
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0100281238556	1
Coq.Arith.Gt.le_gt_S	40	5	search with cache (only 1: apply Nat.lt_succ_r).	0.0260679721832	12
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00776314735413	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00850892066956	1
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.2.0	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: constructor).	0.0133950710297	5
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0151810646057	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0142378807068	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0143129825592	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0123829841614	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0126459598541	4
Coq.Logic.JMeq.JMeq_congr	40	0.1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0205361843109	5
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.7.0	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: reflexivity).	0.0210101604462	10
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0109720230103	2
Coq.Logic.JMeq.eq_dep_JMeq	40	1.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.116282939911	37
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.0.3.7.1	search with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).	0.310786962509	317
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	7.0.3.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: trivial).	0.218801021576	247
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.02237200737	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	18.0	search with cache (only 1: intros; only 1: tauto).	0.183140993118	310
Coq.Logic.Classical_Prop.not_imply_elim	40	2.2	search with cache (only 1: intros; only 1: tauto).	0.0473849773407	26
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.1.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: apply h1; only 1: intros; only 1: assumption).	0.02965092659	6
Coq.Logic.Classical_Prop.imply_to_or	40	1.1.1.8.1	search with cache (only 1: intros A; only 1: intro HnotA; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	1.21183514595	878
Coq.Logic.Classical_Prop.imply_to_and	40	2.0.0.4.0.5	search with cache (only 1: split; only 1: apply NNPP; only 1: firstorder; only 1: intro; only 1: apply H; only 1: trivial).	3.38752794266	1897
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.0202350616455	1
Coq.Logic.Classical_Prop.not_and_or	40	0.6	search with cache (only 1: intros n m; only 1: tauto).	0.125624895096	47
Coq.Logic.Classical_Prop.or_not_and	40	6.0	search with cache (only 1: intros; only 1: tauto).	0.0334770679474	15
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0195908546448	1
Coq.Logic.Classical_Prop.and_not_or	40	4.0	search with cache (only 1: simple induction 1; only 1: tauto).	0.0847299098969	32
Coq.Logic.Classical_Prop.imply_and_or	40	1	search with cache (only 1: tauto).	0.260426044464	111
Coq.Logic.Classical_Prop.imply_and_or2	40	1	search with cache (only 1: tauto).	0.0217669010162	2
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	0.7.11	search with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.27135682106	315
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	1.42	search with cache (only 1: red; only 1: eauto).	0.320609092712	1009
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	0.0.0.0.1.0.0.0.5.0.0	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: exact p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	3.11888098717	1549
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.0.0.18.3	search with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: exists f; only 1: auto).	2.31674408913	2519
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0346758365631	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.5.0	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.300306081772	266
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	25.17	search with cache (only 1: intros; only 1: apply H).	27.38586092	34015
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	29.0811669827	14188
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	21	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.905951023102	1129
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	75.6	search with cache (only 1: intros Ext EM A; only 1: now apply Ext).	16.7310261726	99616
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40	5.0.5.0.11.22.2.37	search with cache (only 1: intros a Ha; only 1: exists 0; only 1: inversion Ha; only 1: constructor; only 1: unfold P; only 1: exists x; only 1: intuition; only 1: intuition).	22.9308049679	51989
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.2.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0243790149689	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	17.1	search with cache (only 1: unfold not; only 1: firstorder).	2.134775877	3049
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	20.0	search with cache (only 1: unfold not; only 1: CRelationClasses.simpl_crelation).	3.99058699608	4825
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0344851016998	15
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0133330821991	2
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0143620967865	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.015594959259	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0152878761292	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.0.8.0	search with cache (only 1: apply (fun P k => forall_eq_rect _ P k _ H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: clear H g; only 1: reflexivity).	0.288769006729	225
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00729417800903	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00771498680115	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: eauto using @functional_extensionality_dep).	0.0187180042267	4
Coq.Logic.HLevels.false_hprop	40	0.17	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0583031177521	145
Coq.Logic.HLevels.true_hprop	40	0.18.1.5.18	search with cache (only 1: intro n; only 1: intro m; only 1: destruct m; only 1: case n; only 1: auto).	1.79115509987	6058
Coq.Logic.HLevels.not_hprop	40	6.0.3.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: contradiction).	0.341098070145	219
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40	2.4.21.6.8	search with cache (only 1: destruct p, q; only 1: intro n; only 1: simpl; only 1: rewrite eq_trans_refl_l; only 1: trivial).	18.8459689617	35264
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.2.15	search with cache (only 1: intro p; only 1: destruct 1; only 1: auto).	0.324141025543	368
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.6	search with cache (only 1: induction 1; only 1: auto).	0.0194828510284	15
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	2.31.0	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.719757795334	1626
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.61	search with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	17.2794318199	39630
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0707590579987	55
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.15.0.0.14.3	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	5.01829910278	7606
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0201771259308	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0218660831451	12
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.17.0.0.15.0	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	9.952491045	12115
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.1.0	search with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.136260986328	24
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.6.0	search with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.12197303772	43
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	32.2.6.42	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	6.41281485558	18980
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	3.2.0	search with cache (only 1: intros p2; only 1: red; only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.0254218578339	11
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	5.16	search with cache (only 1: red; only 1: auto).	1.41049003601	1474
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0229439735413	4
Coq.Logic.EqdepFacts.f_eq_dep	40	0.7.0	search with cache (only 1: intros * H; only 1: destruct H; only 1: reflexivity).	0.0328269004822	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0152988433838	12
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0.0.2	search with cache (only 1: intros A P H; only 1: intros p; only 1: destruct 1; only 1: reflexivity).	0.112835884094	39
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	7.0.0	search with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0216319561005	10
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	0.1.3.75.9	search with cache (only 1: intros; only 1: apply H; only 1: split; only 1: auto; only 1: auto).	8.5828230381	39181
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0368609428406	32
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	4.0.4.3.1.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct H; only 1: apply H; only 1: apply False_rec; only 1: auto).	1.54088306427	1829
Coq.Logic.Decidable.dec_True	40	2.17	search with cache (only 1: unfold decidable; only 1: auto).	0.0893368721008	190
Coq.Logic.Decidable.dec_False	40	0.10	search with cache (only 1: unfold decidable; only 1: tauto).	0.0233850479126	33
Coq.Logic.Decidable.dec_or	40	0.0.11	search with cache (only 1: intro z; only 1: unfold decidable; only 1: tauto).	1.0493991375	931
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0342659950256	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0237591266632	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0279560089111	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0737979412079	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.018208026886	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0137898921967	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0233020782471	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0240409374237	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0203909873962	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0455229282379	2
Coq.Logic.Decidable.not_true_iff	40	10	search with cache (only 1: tauto).	0.0325820446014	57
Coq.Logic.Decidable.not_false_iff	40	0.0.1	search with cache (only 1: split; only 1: auto; only 1: tauto).	0.0192799568176	4
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.020742893219	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0261988639832	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0298459529877	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0393888950348	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0299909114838	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0307960510254	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0321691036224	2
Coq.Logic.Decidable.not_or_iff	40	4	search with cache (only 1: tauto).	0.0467209815979	35
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0178759098053	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0353119373322	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0367710590363	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0121920108795	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	2.4.21	search with cache (only 1: split; only 1: intros H n; only 1: now try PeanoNat.Nat.order').	1.52803301811	451
Coq.setoid_ring.Ring_theory.IDmorph	40	1.1.2.4.3.3.7.9.0.1.5.40	search with cache (only 1: compute; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intros n m; only 1: intuition; only 1: intros a b; only 1: f_equiv; only 1: intuition; only 1: intros a; only 1: f_equiv; only 1: trivial).	9.79839396477	15132
Coq.setoid_ring.Ring_theory.Eqsth	40	1.1.1.9	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.167906045914	113
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	3.3.11	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.343240976334	233
Coq.setoid_ring.Ring_theory.Eq_ext	40	9.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.614697933197	337
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	1	search with cache (only 1: firstorder).	0.0171020030975	2
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	18.2	search with cache (only 1: intros; only 1: firstorder).	0.942216157913	775
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.1	search with cache (only 1: intros; only 1: firstorder).	0.0135450363159	5
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	21	search with cache (only 1: firstorder).	0.0891308784485	208
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	5	search with cache (only 1: solve_proper).	0.0118520259857	6
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.0100710391998	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0100870132446	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	3.0.0.0.0.4.0.5	search with cache (only 1: constructor; only 1: reflexivity; only 1: f_equiv; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: auto).	0.873169898987	440
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	12	search with cache (only 1: firstorder).	0.0783891677856	80
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	10.13	search with cache (only 1: intros z Hz; only 1: firstorder).	0.57462310791	449
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	6.8	search with cache (only 1: intro x; only 1: firstorder).	0.229568958282	161
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	35	search with cache (only 1: firstorder).	5.31480288506	3047
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	42	search with cache (only 1: firstorder).	8.59314703941	5153
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	12.18	search with cache (only 1: intros x y H; only 1: firstorder).	0.552977085114	642
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	3	search with cache (only 1: firstorder).	0.0217480659485	4
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	35	search with cache (only 1: firstorder).	0.692628860474	1045
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40	59	search with cache (only 1: firstorder).	0.336977005005	1785
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0155780315399	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0166227817535	1
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0109910964966	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0127429962158	2
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0139181613922	3
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	0.16.18	search with cache (only 1: intros x y H y0 y1 e; only 1: subst; only 1: now symmetry).	8.07891106606	2726
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	28.2	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	39.8917188644	10558
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	38	search with cache (only 1: firstorder).	1.82743597031	1380
Coq.setoid_ring.Ring_polynom.Pphi1	40	38	search with cache (only 1: firstorder).	1.9123840332	1440
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	17.8836319447	2291
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.1.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	15.5828809738	2004
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0189309120178	2
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	30.1	search with cache (only 1: intros ? ? n; only 1: firstorder).	9.03498482704	6326
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.4	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0560200214386	8
Coq.setoid_ring.Ncring.ring_add_assoc1	40	9.3.12.16.0	search with cache (only 1: intro x; only 1: intros a Ha; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	23.9807648659	10523
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.0889251232147	9
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	2.4.2.2.1	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: inversion 1).	0.234042882919	233
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.057834148407	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.10.0.2.5	search with cache (only 1: destruct H as [H| H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.68115401268	862
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.779630184174	535
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0114140510559	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.010195016861	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0305280685425	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	2	search with cache (only 1: eauto with *).	0.0438189506531	20
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0.11	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.159921169281	92
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0129981040955	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.0.2	search with cache (only 1: destruct s; only 1: trivial; only 1: ok).	0.0415530204773	6
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	35	search with cache (only 1: now subst).	0.22713804245	621
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	3.0.0.1.3.24.40	search with cache (only 1: intros x; only 1: rewrite <- app_nil_r  at 1; only 1: induction x as [| x l IHl]; only 1: simpl; only 1: Nat.order'; only 1: simpl; only 1: auto with arith).	3.15054988861	4478
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0143768787384	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0129690170288	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	27	search with cache (only 1: firstorder).	0.466024875641	826
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.2.1.0.0.4.0	search with cache (only 1: intros a b c Hb; only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: apply fold_add_spec; only 1: rewrite fold_add_spec; only 1: intuition_in).	1.64880895615	515
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0504832267761	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40	3.0.0.14.4.4	search with cache (only 1: intro H; only 1: inversion H; only 1: destruct l as [| [| ] ll lx lr]; only 1: auto; only 1: now constructor; only 1: ok).	4.04909992218	3667
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0523319244385	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	23.10.0	search with cache (only 1: unfold singleton; only 1: CRelationClasses.simpl_crelation; only 1: ok).	1.86632204056	2503
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.3.1.0.0.6	search with cache (only 1: intros H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.36146402359	647
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40	1.0.0.0.0.0.0.0.0.0.0.3.19	search with cache (only 1: intro H; only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intuition_in).	17.6252670288	10882
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	0.2.0.3.1.2.3	search with cache (only 1: induction s as [| i l IHl x r IHr]; only 1: compute; only 1: firstorder; only 1: descolor; only 1: simpl; only 1: destruct 1; only 1: now constructor).	2.55060696602	1268
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.0.0.0.5.0	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.546051979065	215
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	search with cache (only 1: invrb; only 1: auto).	0.0394659042358	3
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.6	search with cache (only 1: red; only 1: intuition).	0.0211639404297	8
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	4.4.0.0.79	search with cache (only 1: destruct s; only 1: unfold filter; only 1: simpl; only 1: auto_tc; only 1: ok).	2.00577521324	5192
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.4.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0412259101868	12
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.1	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.043112039566	20
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.1.0.0.0.3.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intuition_in; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.831820011139	268
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0575349330902	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.10.0.0.0.1	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: now inA; only 1: auto_tc; only 1: auto_tc).	1.07055306435	908
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.041491985321	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0	search with cache (only 1: solve_proper).	0.06627202034	1
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	11.49.19.17.0	search with cache (only 1: split; only 1: easy; only 1: now rewrite <- ?N_as_DT.succ_le_mono; only 1: intros b; only 1: firstorder).	34.6946179867	29131
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	9	search with cache (only 1: now split).	0.0821561813354	47
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: now intro n; induction n).	0.0140819549561	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	13.20	search with cache (only 1: intro n; only 1: inversion 1).	0.58460688591	960
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0	search with cache (only 1: destr_bool).	0.0106461048126	1
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	13.0.3.13	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	30.3367869854	10253
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	6.0.4	search with cache (only 1: intros a m; only 1: revert m; only 1: destr_bool).	1.75885415077	338
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	4.0.0.4.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	3.21854400635	623
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	1.2.19	search with cache (only 1: fix even_spec 1; only 1: intro a; only 1: trivial).	0.516298055649	644
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0270669460297	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	3.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0291471481323	7
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0231950283051	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0231630802155	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	0.0734508037567	10
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.0.2.5	search with cache (only 1: intros; only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: trivial; only 1: auto).	0.256376981735	85
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40	0.1.36	search with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	28.606539011	27042
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: destr_bool).	7.80265879631	4956
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40	2.15	search with cache (only 1: fix even_spec 1; only 1: intuition).	7.11477708817	2402
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	7.5.22.0	search with cache (only 1: intro l; only 1: intros l2; only 1: fix odd_spec 1; only 1: assumption).	19.7246940136	9353
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	3.6	search with cache (only 1: fix gcd_divide 1; only 1: eauto).	0.210495948792	72
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	2.10	search with cache (only 1: fix gcd_greatest 1; only 1: eauto using Nat_as_DT.Private_OrderTac.Tac.eq_trans, Nat_as_DT.Private_OrderTac.Tac.eq_sym).	0.191476106644	77
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	26	search with cache (only 1: intuition).	0.13171505928	333
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.3.4.7	search with cache (only 1: constructor; only 1: auto with *; only 1: auto with *; only 1: intros y Hy; only 1: order; only 1: intros y Hy; only 1: order).	2.31617116928	329
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0155720710754	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	8.0.0.12	search with cache (only 1: intro l; only 1: fix odd_spec 1; only 1: intro n; only 1: trivial).	11.713809967	7511
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	2.3	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.119828939438	56
Coq.MSets.MSetGenTree.Props.isok_Ok	40	0.20	search with cache (only 1: fix odd_spec 1; only 1: easy).	0.316272974014	424
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	1.3	search with cache (only 1: intros a b c H H'; only 1: intuition_in).	0.1012840271	31
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	2.3.2	search with cache (only 1: split; only 1: easy; only 1: intuition_in).	0.0314590930939	16
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.11	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: easy).	0.521328926086	580
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0126531124115	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.2.0.2	search with cache (only 1: intros a b c ? ? ?; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0841410160065	25
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.0.3.8.10	search with cache (only 1: intros n m H; only 1: intuition_in; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).	9.56415510178	4519
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	24.1.4	search with cache (only 1: intros a b Ha; only 1: intro H; only 1: order).	3.20036005974	5518
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	3	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.088700056076	47
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0163550376892	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00978899002075	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.0.9.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros f Hf H0; only 1: reduce; only 1: subst; only 1: order).	5.80802202225	2356
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.080118894577	26
Coq.MSets.MSetGenTree.Props.empty_spec	40	2	search with cache (only 1: firstorder).	0.00835394859314	3
Coq.MSets.MSetGenTree.Props.empty_ok	40	4	search with cache (only 1: now intuition).	0.00812292098999	5
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	9.2	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.449643135071	236
Coq.MSets.MSetGenTree.Props.mem_spec	40	6.1.1	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.307180166245	134
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.262237787247	60
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	0.0.26	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	15.7610991001	11066
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	7.2.11.0	search with cache (only 1: unfold Subset; only 1: intro m; only 1: fix odd_spec 1; only 1: easy).	17.5564568043	7765
Coq.MSets.MSetGenTree.Props.eq_equiv	40	2	search with cache (only 1: firstorder).	0.015350818634	3
Coq.MSets.MSetGenTree.Props.eq_Leq	40	1.7.14	search with cache (only 1: intro; only 1: fix odd_spec 1; only 1: auto using min_elt_spec1).	10.9472000599	9183
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40	0.13.6.0	search with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	2.37890100479	2057
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40	8.8.10	search with cache (only 1: unfold lt; only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	14.4044499397	5831
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40	3.78	search with cache (only 1: fix odd_spec 1; only 1: auto with arith).	3.8468568325	12338
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	0	search with cache (only 1: firstorder).	0.0116620063782	1
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	12.4.13	search with cache (only 1: intros n m; only 1: revert m; only 1: firstorder  auto with datatypes).	3.72523093224	7850
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	2	search with cache (only 1: solve_proper).	0.240737915039	27
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0200870037079	2
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.1.2.8.6	search with cache (only 1: repeat red; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	18.6043639183	1784
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.1	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0219309329987	3
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.0.5.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0347340106964	9
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	1.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	0.0360510349274	6
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	3.1.0.0	search with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: auto).	0.0904879570007	20
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	3.0.1.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: simpl; only 1: intros; only 1: auto; only 1: split).	0.0786201953888	14
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.0.0.0.3.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: unfold Empty, empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: discriminate).	2.01540112495	657
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0.0	search with cache (only 1: unfold elements; only 1: auto).	0.0226130485535	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2	search with cache (only 1: eauto).	0.0213351249695	13
Coq.MSets.MSetList.MakeRaw.mem_spec	40	2.1.0.0.0.1.1.2.8.3	search with cache (only 1: intro m; only 1: intro H; only 1: fix even_spec 1; only 1: destruct m; only 1: simpl; only 1: split; only 1: discriminate; only 1: easy; only 1: intro n; only 1: auto).	26.0749080181	11079
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	4	search with cache (only 1: auto).	0.0132350921631	5
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	7.5.0	search with cache (only 1: intros x Hs; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder  (subst; auto)).	0.936483860016	538
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0561680793762	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40	0.4.4	search with cache (only 1: intros x Hs; only 1: fix even_spec 1; only 1: intuition).	0.886389970779	280
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.00981307029724	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	2.6.32	search with cache (only 1: intro n; only 1: intuition; only 1: inversion_clear H).	1.02524018288	1243
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	1.5.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0382940769196	21
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.2.0.6.1.2	search with cache (only 1: induction s; only 1: constructors; only 1: intros H; only 1: inv; only 1: constructor; only 1: auto; only 1: auto).	1.45443582535	1047
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0230319499969	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.1.0.1.0.0.0	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: easy; only 1: simpl; only 1: inversion 2; only 1: easy; only 1: easy).	0.071545124054	10
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0.0	search with cache (only 1: destruct s; only 1: intuition; only 1: reflexivity).	0.0230009555817	3
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	1.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: tauto).	0.02423787117	4
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4	search with cache (only 1: solve_proper).	0.18723988533	54
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.24.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.345288038254	748
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.2.1.0.0.0.22	search with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.36467504501	1526
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	0.0.5.5	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.112784862518	168
Coq.Relations.Operators_Properties.clos_rtn1_step	40	1.0.5.7.38.1	search with cache (only 1: intro y0; only 1: intro m; only 1: intro H; only 1: right with y0; only 1: auto; only 1: left).	13.524394989	28795
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.3.0.3	search with cache (only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: constructor 2; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.239483118057	159
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.2.0.0.0.4	search with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: constructor 2; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.298393011093	155
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	2.3.3.0.18.3	search with cache (only 1: intro y0; only 1: induction 1 as [? ?| ]; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	3.80313897133	4773
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.0.0.1.2.1.0.0.5	search with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: constructor 2; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	16.654447794	6329
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.0.2.2.1.0.4	search with cache (only 1: intros A P; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: destruct 1; only 1: trivial).	1.12873983383	1101
Coq.ssr.ssreflect.master_key	40	10	search with cache (only 1: tauto).	0.0153088569641	38
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.7	search with cache (only 1: unlock; only 1: discriminate).	0.092444896698	18
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	0	search with cache (only 1: by case : k ).	0.00762605667114	1
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	1.1	search with cache (only 1: destruct 1; only 1: auto).	0.0147480964661	13
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.00725603103638	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00875616073608	1
Coq.ssr.ssreflect.iffLRn	40	3.7	search with cache (only 1: intros h1 h2; only 1: tauto).	0.0559289455414	39
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00937509536743	1
Coq.ssr.ssreflect.abstract_context	40	0.120.93	search with cache (only 1: intro H; only 1: apply H; only 1: split).	11.6543240547	151654
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0135390758514	1
Coq.ssr.ssrbool.is_true_true	40	12	search with cache (only 1: reflexivity).	0.0113289356232	46
Coq.ssr.ssrbool.not_false_is_true	40	2	search with cache (only 1: intuition).	0.0124549865723	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.0081889629364	2
Coq.ssr.ssrbool.negbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0109741687775	3
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.0096960067749	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.0110869407654	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.0849349498749	1
Coq.ssr.ssrbool.negbK	40	12	search with cache (only 1: by case).	0.0941290855408	46
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00721001625061	1
Coq.ssr.ssrbool.negb_inj	40	0.20	search with cache (only 1: intro n; only 1: Bool.destr_bool).	0.07546210289	208
Coq.ssr.ssrbool.negbLR	40	0.0.6	search with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0293929576874	18
Coq.ssr.ssrbool.negbRL	40	9	search with cache (only 1: Bool.destr_bool).	0.039853811264	22
Coq.ssr.ssrbool.contra	40	0.0.5	search with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0294048786163	15
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0126979351044	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0128879547119	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0131728649139	1
Coq.ssr.ssrbool.contraT	40	0.13	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.137803077698	75
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  =>// ->).	0.0115900039673	1
Coq.ssr.ssrbool.contraFT	40	3.10	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.253509044647	82
Coq.ssr.ssrbool.contraFN	40	3.12	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.336226940155	114
Coq.ssr.ssrbool.contraTF	40	1.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.314235925674	109
Coq.ssr.ssrbool.contraNF	40	1.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.331394910812	127
Coq.ssr.ssrbool.contraFF	40	0.3.12	search with cache (only 1: destruct c; only 1: by case : b  =>// ->; only 1: by move /contra =>notb_notc /negbT).	0.388998985291	157
Coq.ssr.ssrbool.contra_not	40	6	search with cache (only 1: auto).	0.016487121582	12
Coq.ssr.ssrbool.contraPnot	40	1	search with cache (only 1: by auto).	0.00933003425598	2
Coq.ssr.ssrbool.contraTnot	40	0.0.20	search with cache (only 1: destruct b; only 1: by auto; only 1: by auto).	0.481242895126	298
Coq.ssr.ssrbool.contraNnot	40	0	search with cache (only 1: by case : b ; auto).	0.00820398330688	1
Coq.ssr.ssrbool.contraPT	40	1.0.11.1.22	search with cache (only 1: Bool.destr_bool; only 1: intuition; only 1: destruct H; only 1: by [  ]; only 1: auto).	8.09800815582	8009
Coq.ssr.ssrbool.contra_notT	40	0.9.31	search with cache (only 1: Bool.destr_bool; only 1: red; only 1: intuition).	6.4493060112	7242
Coq.ssr.ssrbool.contra_notN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.0137069225311	1
Coq.ssr.ssrbool.contraPN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) nP /nP).	0.0111029148102	1
Coq.ssr.ssrbool.contraFnot	40	0	search with cache (only 1: by case : b ; auto).	0.0127780437469	1
Coq.ssr.ssrbool.contraPF	40	0	search with cache (only 1: by case : b  =>//=; move /(_ isT) =>HP /HP).	0.0130620002747	1
Coq.ssr.ssrbool.contra_notF	40	1.0	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case : b  =>// /(_ isT)).	0.0179708003998	3
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.00973796844482	1
Coq.ssr.ssrbool.ifT	40	3	search with cache (only 1: by case : b ).	0.0167689323425	12
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move ->).	0.00972104072571	1
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : b ).	0.015145778656	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.00881791114807	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.00713205337524	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.00931811332703	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00763702392578	1
Coq.ssr.ssrbool.ifE	40	7	search with cache (only 1: trivial).	0.0123488903046	8
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.00888514518738	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00765585899353	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by move <-; case Hb).	0.00794100761414	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.8.46	search with cache (only 1: intros; only 1: destruct H; only 1: by case Hb; auto; only 1: by case Hb; auto).	2.03213715553	3460
Coq.ssr.ssrbool.introTFn	40	0.30	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.55703496933	483
Coq.ssr.ssrbool.elimTFn	40	1.34	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	1.19071292877	1404
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.25	search with cache (only 1: intros [? ?]; only 1: by case : Pb ; constructor; auto).	0.268753051758	333
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40	9	search with cache (only 1: by case : Pb ; constructor; auto).	0.0166311264038	10
Coq.ssr.ssrbool.rwP	40	11	search with cache (only 1: by case : Pb ; constructor; auto).	0.0413661003113	33
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	8.53	search with cache (only 1: destruct 1; only 1: auto).	0.795221090317	2564
Coq.ssr.ssrbool.impliesPn	40	2.44	search with cache (only 1: destruct 1; only 1: by auto).	1.40239596367	2598
Coq.ssr.ssrbool.unlessL	40	1.24.2	search with cache (only 1: repeat split; only 1: intros Hfst Hsnd; only 1: auto).	0.357128858566	858
Coq.ssr.ssrbool.unlessR	40	1.25.3	search with cache (only 1: repeat split; only 1: red; only 1: auto).	0.317080020905	848
Coq.ssr.ssrbool.unless_sym	40	1.1.24.29.26.2	search with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	6.13877296448	24412
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.28	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.266638994217	588
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	1.0.18.1.0.3.19	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	9.90785217285	15647
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0156140327454	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0131969451904	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0155138969421	1
Coq.ssr.ssrbool.pair_andP	40	14	search with cache (only 1: intuition).	0.120625972748	149
Coq.ssr.ssrbool.idP	40	4.3.3	search with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	2.05381011963	76
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00657606124878	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00856900215149	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00998711585999	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00843381881714	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00721001625061	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0122561454773	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0115189552307	1
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.011981010437	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: constructor).	0.00633120536804	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.00611281394958	1
Coq.ssr.ssrbool.andbT	40	2.22	search with cache (only 1: intro n; only 1: Bool.destr_bool).	0.165032148361	309
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.00979900360107	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.00628709793091	1
Coq.ssr.ssrbool.andbC	40	0.18	search with cache (only 1: intro n; only 1: Bool.destr_bool).	0.110039949417	165
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00677800178528	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00814390182495	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01056599617	1
Coq.ssr.ssrbool.andbACA	40	7	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0122721195221	8
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: Bool.destr_bool).	0.00808310508728	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00659894943237	1
Coq.ssr.ssrbool.orbT	40	1	search with cache (only 1: Bool.destr_bool).	0.00898718833923	2
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0080189704895	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00870585441589	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00804090499878	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0112459659576	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0106711387634	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104677677155	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0149579048157	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0104420185089	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.00840187072754	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.00856304168701	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.00784611701965	1
Coq.ssr.ssrbool.andb_orl	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.014007806778	4
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0115201473236	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0113558769226	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0116329193115	1
Coq.ssr.ssrbool.andb_idl	40	5.2.3.1.1.0.0	search with cache (only 1: destruct a, b; only 1: simpl; only 1: now constructor; only 1: reflexivity; only 1: Bool.destr_bool; only 1: intuition; only 1: Bool.destr_bool).	1.89119696617	1591
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0133149623871	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.015496969223	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0171430110931	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0133719444275	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.012619972229	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0188429355621	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0912430286407	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0108559131622	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.00984907150269	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00921607017517	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0106499195099	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0101101398468	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0100538730621	1
Coq.ssr.ssrbool.implybT	40	2	search with cache (only 1: by case : b ).	0.00950288772583	3
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.00890803337097	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.00712895393372	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.00844192504883	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.00886201858521	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0110669136047	1
Coq.ssr.ssrbool.implybE	40	1	search with cache (only 1: by case : a ; case : b ).	0.0118138790131	2
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0102200508118	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00969099998474	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00982999801636	1
Coq.ssr.ssrbool.implyb_idl	40	2	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0175490379333	3
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0137941837311	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0168600082397	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00621700286865	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00835514068604	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.00836515426636	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00976300239563	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104129314423	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0115079879761	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0116930007935	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.015928030014	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0111720561981	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0125088691711	1
Coq.ssr.ssrbool.addKb	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0545971393585	3
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0106248855591	1
Coq.ssr.ssrbool.addIb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0124740600586	1
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0124111175537	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0101327896118	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0113937854767	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0106949806213	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0097029209137	1
Coq.ssr.ssrbool.addbP	40	1.0.1.0.24	search with cache (only 1: destruct a, b; only 1: now constructor; only 1: intuition; only 1: now constructor; only 1: now constructor).	0.670187950134	480
Coq.ssr.ssrbool.subrelUl	40	9.6.33.27	search with cache (only 1: intro p; only 1: red; only 1: simpl; only 1: intuition).	22.0602879524	73804
Coq.ssr.ssrbool.subrelUr	40	8.3.42.27	search with cache (only 1: intro p; only 1: red; only 1: simpl; only 1: intuition).	28.4263939857	85785
Coq.ssr.ssrbool.sub_refl	40	2.0.9	search with cache (only 1: intro; only 1: red; only 1: intuition).	0.0669271945953	69
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.00792694091797	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  =>_ /= ->).	0.0124711990356	1
Coq.ssr.ssrbool.unfold_in	40	3	search with cache (only 1: by rewrite -mem_topred).	0.0109860897064	4
Coq.ssr.ssrbool.simpl_predE	40	7	search with cache (only 1: by [  ]).	0.00928497314453	8
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.00713396072388	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.00893497467041	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: reflexivity).	0.00778293609619	1
Coq.ssr.ssrbool.in1W	40	1.6	search with cache (only 1: intros r s; only 1: by [  ]).	0.0241720676422	9
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0111658573151	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0109829902649	1
Coq.ssr.ssrbool.in1T	40	6	search with cache (only 1: auto).	0.0210800170898	7
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0154612064362	2
Coq.ssr.ssrbool.in3T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0125720500946	1
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.00947189331055	1
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0125000476837	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  =>? ?; auto).	0.015233039856	3
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0103278160095	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0163941383362	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0112318992615	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0192930698395	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0161070823669	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.014349937439	1
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0108389854431	1
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0131659507751	1
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0159578323364	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	12.44.23.19	search with cache (only 1: intro n; only 1: intro m; only 1: inversion 1; only 1: auto).	25.5561740398	43889
Coq.ssr.ssrbool.canRL_in	40	21.7.12.13.26.20	search with cache (only 1: intro n; only 1: intro m; only 1: intros; only 1: symmetry; only 1: destruct H; only 1: auto).	25.1741762161	42690
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0165128707886	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0141749382019	2
Coq.ssr.ssrbool.canRL_on	40	17.18.12.28.22	search with cache (only 1: intro n; only 1: intro m; only 1: destruct 1; only 1: symmetry; only 1: auto).	29.1367750168	51607
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0153670310974	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0201358795166	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0196299552917	1
Coq.ssr.ssrbool.sub_in_bij	40	2.12	search with cache (only 1: intro m; only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.225552797318	94
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0232748985291	1
Coq.ssr.ssrbool.in_on1P	40
Coq.ssr.ssrbool.in_on1lP	40	0.0	search with cache (only 1: <ssreflect_plugin::ssrtclseq@0> <ssreflect_plugin::ssrtclintros@0> split =>allf x; have  := allf x; <ssreflect_plugin::ssrtclintros@0> rewrite inE =>Q1f ; first  by case /andP ; only 1: by move  =>? ?; apply : Q1f ; apply /andP ).	0.111923933029	2
Coq.ssr.ssrbool.in_on2P	40
Coq.ssr.ssrbool.on1W_in	40	6	search with cache (only 1: by move  =>? ?; auto).	0.0200841426849	7
Coq.ssr.ssrbool.on1lW_in	40	0	search with cache (only 1: by move  =>D1f ? /D1f).	0.0178501605988	1
Coq.ssr.ssrbool.on2W_in	40	4	search with cache (only 1: by move  =>? ?; auto).	0.0215060710907	5
Coq.ssr.ssrbool.in_on1W	40	4	search with cache (only 1: by move  =>? ?).	0.0299830436707	5
Coq.ssr.ssrbool.in_on1lW	40	0	search with cache (only 1: by move  =>allf ? ? ?; apply : allf ).	0.0174171924591	1
Coq.ssr.ssrbool.in_on2W	40	0	search with cache (only 1: by move  =>D1f ? ? ? ? ? ?; apply : D1f ).	0.0172438621521	1
Coq.ssr.ssrbool.on1S	40	0.39	search with cache (only 1: intro x; only 1: by move  =>? ?; auto).	0.714205980301	822
Coq.ssr.ssrbool.on1lS	40	2	search with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0169529914856	3
Coq.ssr.ssrbool.on2S	40	0.30	search with cache (only 1: intro m; only 1: by move  =>? ?; auto).	0.513420820236	483
Coq.ssr.ssrbool.on1S_in	40	8.33	search with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.11791110039	975
Coq.ssr.ssrbool.on1lS_in	40	0	search with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0203042030334	1
Coq.ssr.ssrbool.on2S_in	40	9.32	search with cache (only 1: intro m; only 1: by move  =>? ?; auto).	1.20708394051	946
Coq.ssr.ssrbool.in_on1S	40	2	search with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0238869190216	3
Coq.ssr.ssrbool.in_on1lS	40	0	search with cache (only 1: by move  =>fD2 fD1 ?; apply : fD1 ).	0.0180058479309	1
Coq.ssr.ssrbool.in_on2S	40	4	search with cache (only 1: by move  =>? fD1 ? ?; apply : fD1 ).	0.0228869915009	5
Coq.ssr.ssrbool.in1_sig	40	47.24	search with cache (only 1: intro m; only 1: case  =>// undecP).	3.74987888336	7727
Coq.ssr.ssrbool.in2_sig	40
Coq.ssr.ssrbool.in3_sig	40
Coq.ssr.ssrbool.sub_in2	40	3.36.10	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.32423710823	3456
Coq.ssr.ssrbool.sub_in3	40	19.3.25.26	search with cache (only 1: intro p; only 1: intros H x0; only 1: destruct H; only 1: by move  =>? ?; auto).	3.05082702637	6119
Coq.ssr.ssrbool.sub_in12	40	2.54	search with cache (only 1: intros; only 1: by move  =>? ?; auto).	1.41528010368	1670
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0132400989532	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	4.38.32.27	search with cache (only 1: intros H ?; only 1: red; only 1: destruct 1; only 1: by [  ]).	6.61471009254	21064
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0135610103607	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0120520591736	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0139350891113	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0508780479431	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrbool.homo_sym	40	1	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0145928859711	2
Coq.ssr.ssrbool.mono_sym	40	1	search with cache (only 1: by move  =>fR y x; apply : fR ).	0.0134229660034	2
Coq.ssr.ssrbool.homo_sym_in	40	28.5	search with cache (only 1: move  =>mf mg x y; only 1: auto).	1.1916539669	1016
Coq.ssr.ssrbool.mono_sym_in	40	0	search with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.0147020816803	1
Coq.ssr.ssrbool.homo_sym_in11	40	0	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0165059566498	1
Coq.ssr.ssrbool.mono_sym_in11	40	0	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0938129425049	1
Coq.ssr.ssrbool.onW_can	40	9	search with cache (only 1: by move  =>? ?).	0.01580286026	10
Coq.ssr.ssrbool.onW_can_in	40	8	search with cache (only 1: by move  =>allf ? ? ?; apply : allf ).	0.0178689956665	9
Coq.ssr.ssrbool.in_onW_can	40	0	search with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.013580083847	1
Coq.ssr.ssrbool.onS_can	40	6	search with cache (only 1: by move  =>? fD1 ?; apply : fD1 ).	0.0152220726013	7
Coq.ssr.ssrbool.onS_can_in	40	1	search with cache (only 1: by move  =>fD fD1 ? ?; apply /fD1/fD ).	0.0213429927826	2
Coq.ssr.ssrbool.in_onS_can	40	1	search with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0162591934204	2
Coq.ssr.ssrbool.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0.1	search with cache (only 1: intros; only 1: firstorder).	0.0106399059296	3
Coq.ssr.ssrfun.unitE	40	8.1.11	search with cache (only 1: intro n; only 1: induction n; only 1: exact (erefl _)).	0.232585191727	340
Coq.ssr.ssrfun.frefl	40	3	search with cache (only 1: split).	0.0078558921814	4
Coq.ssr.ssrfun.fsym	40	1.5	search with cache (only 1: intros; only 1: by [  ]).	0.0143899917603	8
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	2	search with cache (only 1: split).	0.00637102127075	3
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.4.0.1.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0305759906769	10
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0125079154968	1
Coq.ssr.ssrfun.svalP	40	10	search with cache (only 1: apply proj2_sig).	0.0155830383301	21
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : u ).	0.00996518135071	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00909304618835	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0110559463501	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0139079093933	1
Coq.ssr.ssrfun.can_pcan	40	1.42.6.7.2	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: reflexivity).	5.05708408356	17446
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.00968599319458	2
Coq.ssr.ssrfun.canLR	40	3.6.17	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.614629983902	981
Coq.ssr.ssrfun.canRL	40	11.6	search with cache (only 1: destruct 2; only 1: auto).	0.202517032623	269
Coq.ssr.ssrfun.Some_inj	40	0.13.0	search with cache (only 1: intro n; only 1: inversion 1; only 1: reflexivity).	0.290689945221	338
Coq.ssr.ssrfun.of_voidK	40	2.6.2	search with cache (only 1: intro n; only 1: simpl; only 1: contradiction).	0.0915431976318	73
Coq.ssr.ssrfun.esymK	40	0.20.68	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.998267173767	4788
Coq.ssr.ssrfun.etrans_id	40	1.20	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.156115055084	232
Coq.ssr.ssrfun.inj_id	40	2.21	search with cache (only 1: red; only 1: Bool.destr_bool).	0.13556599617	308
Coq.ssr.ssrfun.inj_can_sym	40	0.51	search with cache (only 1: red; only 1: auto).	0.906553983688	2795
Coq.ssr.ssrfun.inj_comp	40	6.60.4	search with cache (only 1: intros Hfst Hsnd; only 1: intros H; only 1: auto).	3.04393005371	8663
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	6.49.60	search with cache (only 1: red; only 1: simpl; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	18.6144218445	65397
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	6.6.26	search with cache (only 1: exists f; only 1: trivial; only 1: trivial).	0.344302177429	1306
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0	search with cache (only 1: auto).	0.00821995735168	1
Coq.ssr.ssrunder.Under_rel.Under_relE	40	8	search with cache (only 1: auto).	0.00826120376587	9
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0084011554718	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00731086730957	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00571703910828	1
Coq.Sets.Uniset.le_refl	40	15	search with cache (only 1: destr_bool).	0.1218791008	168
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0214531421661	4
Coq.Sets.Uniset.seq_refl	40	4	search with cache (only 1: auto).	0.00991892814636	5
Coq.Sets.Uniset.seq_trans	40	1.0.3.7.0.3	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro b1; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.25166511536	1096
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0839531421661	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0171091556549	3
Coq.Sets.Uniset.union_empty_right	40	0.0.10.3.1.1.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	11.3788781166	13064
Coq.Sets.Uniset.union_comm	40	19.4.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: intuition).	19.393679142	19296
Coq.Sets.Uniset.union_ass	40	5.1.0.0.0.1	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: destruct y; only 1: simpl; only 1: auto with bool).	1.82363605499	779
Coq.Sets.Uniset.seq_left	40	0.1.1.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0466830730438	10
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0503969192505	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	0.1.0.1.1.0.0.0.1.0.2	search with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	18.3406879902	6828
Coq.Sets.Multiset.meq_refl	40	5.1.0	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0190680027008	9
Coq.Sets.Multiset.meq_trans	40	1.1.3.0.7	search with cache (only 1: compute; only 1: intros; only 1: setoid_rewrite H; only 1: destruct x; only 1: firstorder).	6.19277787209	2025
Coq.Sets.Multiset.meq_sym	40	1.0.2.0.0	search with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.112035989761	8
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.016841173172	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0261840820312	4
Coq.Sets.Multiset.munion_comm	40	12.0.9	search with cache (only 1: compute; only 1: destruct x; only 1: intuition).	29.3870439529	12504
Coq.Sets.Multiset.munion_ass	40	1.1.0.5.1	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	3.01373577118	1031
Coq.Sets.Multiset.meq_left	40	2.1.1.1.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto).	0.222635984421	68
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0619490146637	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct z; only 1: auto with arith).	0.0652589797974	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	0.0.0.1.0.0.0.0.1.0.1.2	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: intros; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	16.9855430126	5975
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: exact PeanoNat.Nat.le_refl).	0.00713896751404	1
Coq.Sets.Integers.le_antisym	40	3.2.0.0	search with cache (only 1: red; only 1: intros x y; only 1: intro EQ; only 1: PeanoNat.Nat.order).	0.0199279785156	9
Coq.Sets.Integers.le_trans	40	2.2.0.0	search with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).	0.0197911262512	8
Coq.Sets.Integers.le_Order	40	2.0.1.0.0.2	search with cache (only 1: split; only 1: red; only 1: auto with arith; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.283328056335	118
Coq.Sets.Integers.triv_nat	40	8.0	search with cache (only 1: intro n; only 1: constructor).	0.0133810043335	10
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	3.1.2.4.1.1	search with cache (only 1: intro; only 1: intro p; only 1: red; only 1: intro; only 1: red; only 1: auto).	0.677618026733	860
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	1.1.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.192818164825	39
Coq.Sets.Relations_1_facts.contains_is_preorder	40	3.3.2.1	search with cache (only 1: intro H; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets).	0.187716960907	136
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.3.1.0.10	search with cache (only 1: intro n; only 1: intros U R H'; only 1: intros H'0 H'1; only 1: elim H'; only 1: auto  10 with sets).	2.11455202103	2274
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0124969482422	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	4.0.1.0.0	search with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: auto with sets).	0.0575549602509	17
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.2	search with cache (only 1: intros U R H'; only 1: auto with sets).	0.010137796402	7
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	4.1.2	search with cache (only 1: intros U R H'; only 1: intro H'1; only 1: auto  10 with sets).	0.0145480632782	10
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.0.0.0.0.0.3.0.13	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto with sets).	17.8775599003	19615
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.1.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	2.74383592606	1669
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0476849079132	18
Coq.Sets.Permut.comm_left	40	0.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0217039585114	5
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	8.0.0.2.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	15.5383241177	2907
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.1.8.0.12.2.7	search with cache (only 1: intros H'6 H'7; only 1: intros x H'; only 1: generalize H'; only 1: intro H'0; only 1: exists x; only 1: auto with sets; only 1: trivial).	28.3588349819	36446
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.1.1.2.0.0.1.0.11.3	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: unfold In in *; only 1: elim H'; only 1: destruct 1; only 1: intuition).	1.92501616478	1531
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.1.0.9	search with cache (only 1: intros x0 H'; only 1: destruct 1; only 1: exists x; only 1: auto with sets).	0.65703701973	413
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	15.4	search with cache (only 1: red; only 1: destruct 1).	0.811105012894	1196
Coq.Sets.Powerset.Power_set_Inhabited	40	6.0.3.43.62	search with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: red; only 1: auto).	6.38545393944	51652
Coq.Sets.Powerset.Inclusion_is_an_order	40	33	search with cache (only 1: auto  10 with sets).	0.414383172989	550
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00746321678162	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.0	search with cache (only 1: elim Inclusion_is_an_order; only 1: auto with sets).	0.0201420783997	2
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.0.0.7	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	38.1821050644	4182
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.4.1.9.13.0	search with cache (only 1: intro X; only 1: split; only 1: split; only 1: auto with sets; only 1: simpl; only 1: auto with sets).	7.54339289665	6264
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0340211391449	12
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00930500030518	2
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00846600532532	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.0.0.4	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0596678256989	25
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.024708032608	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.1	search with cache (only 1: red; only 1: auto  7 using Inhabited_Setminus with sets).	0.2890188694	29
Coq.Sets.Classical_sets.Subtract_inv	40	5.0.1.0	search with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0308029651642	11
Coq.Sets.Classical_sets.Included_Strict_Included	40	1.1.8.2	search with cache (only 1: intros H'0 H'1; only 1: compute; only 1: intuition; only 1: tauto).	0.742568016052	353
Coq.Sets.Classical_sets.Strict_Included_inv	40	1.23.9.11.2	search with cache (only 1: intro X; only 1: intros; only 1: firstorder; only 1: intuition; only 1: auto  7 using Inhabited_Setminus with sets).	38.0502800941	36339
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.8.7.6.3	search with cache (only 1: red; only 1: intros x H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	6.64568996429	11973
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	2.4.1.3.4	search with cache (only 1: intros U R H'; only 1: red; only 1: intros z1 H'5; only 1: exists z1; only 1: auto with sets).	3.55758500099	2374
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.2.0.0.0.2.1.1.0.0.0	search with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros H'8 H'10; only 1: clear H'5; only 1: red; only 1: exists z1; only 1: auto with sets).	30.1761100292	12547
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.0.0.1.0	search with cache (only 1: unfold Subtract at 1; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.039980173111	7
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.3.0.0.5	search with cache (only 1: intros A x y; only 1: intro H'2; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	8.08395981789	2766
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.0.1.0.0.2.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: apply Setminus_intro; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	15.2719218731	5295
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.0.0.0.2.9.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	25.3297350407	15809
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	21	search with cache (only 1: auto  10 with sets).	0.555465936661	768
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0755581855774	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.9	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0781099796295	47
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.012953042984	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0109801292419	1
Coq.Sets.Powerset_facts.Union_associative	40	13	search with cache (only 1: auto  10 with sets).	0.284461021423	120
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0101821422577	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  9 with sets).	0.0116648674011	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.29316902161	696
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.0.0.0.0.0.1.0.1.7	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.42079520226	939
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.2.3.0.0.0.0.0.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	32.7979900837	13284
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.6.9	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	3.06221818924	1762
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.1.0.1.0.0.0.2.0.0.1.2	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	2.57476305962	1511
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.0.0.3.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: elim H'1; only 1: trivial with sets).	0.0526080131531	22
Coq.Sets.Powerset_facts.incl_add	40	4.2	search with cache (only 1: unfold Add; only 1: auto with sets).	0.0541300773621	15
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	3.4.2	search with cache (only 1: intros A x; only 1: unfold Add; only 1: auto  9 with sets).	0.927531957626	488
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: intuition).	0.011293888092	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0343070030212	19
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0158090591431	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.0.1.0.4.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.873471975327	607
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0410821437836	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.3.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: intuition; only 1: intuition).	0.761244058609	441
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40	4.7.3	search with cache (only 1: unfold not; only 1: intro m; only 1: inversion 1).	0.332858085632	489
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0179579257965	4
Coq.Sets.Constructive_sets.Add_intro1	40	1.15.2.1.1.1	search with cache (only 1: intros B C H'; only 1: red; only 1: red; only 1: intro; only 1: left; only 1: auto with sets).	10.4969739914	17299
Coq.Sets.Constructive_sets.Add_intro2	40	0.2.2	search with cache (only 1: intros x H; only 1: unfold Add at 1; only 1: auto with sets).	0.0710909366608	65
Coq.Sets.Constructive_sets.Inhabited_add	40	0.8.7.2.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.29999804497	1833
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.1.3.1.1.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.363569021225	221
Coq.Sets.Constructive_sets.Singleton_inv	40	1.2.1	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: auto with sets).	0.0241801738739	13
Coq.Sets.Constructive_sets.Singleton_intro	40	2.4.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto with sets).	0.0154020786285	9
Coq.Sets.Constructive_sets.Union_inv	40	1.1.3.2	search with cache (only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.213088035583	91
Coq.Sets.Constructive_sets.Add_inv	40	0.0.0.6.0.0.1.4.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	14.83050704	7583
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.015969991684	3
Coq.Sets.Constructive_sets.Couple_inv	40	1.2.0.0.0.3	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.406500101089	250
Coq.Sets.Constructive_sets.Setminus_intro	40	2.0	search with cache (only 1: intros B C x H'; only 1: auto using Noone_in_empty with sets).	0.0182390213013	4
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.013288974762	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	1.4.5.6	search with cache (only 1: red; only 1: intros X H'; only 1: induction H'; only 1: auto using Noone_in_empty with sets).	0.951550960541	1290
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	5.1.5.1.2	search with cache (only 1: intro; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.26932501793	1505
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.0.3.13.1.10.22.12	search with cache (only 1: intro; only 1: apply NNPP; only 1: generalize (Inclusion_is_transitive U); only 1: intro H'1; only 1: generalize (Inclusion_is_transitive U); only 1: intro H'2; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	16.2161118984	33660
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40	0.0.2.0.30	search with cache (only 1: intros a; only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	9.64579892159	9175
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_add).	0.0227921009064	3