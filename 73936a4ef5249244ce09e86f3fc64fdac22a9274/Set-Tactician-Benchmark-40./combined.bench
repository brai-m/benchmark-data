
Coq.micromega.OrderedRing.rplus_morph_Proper	40	60.0	search with cache (only 1: intros; only 1: firstorder).	9.45817708969	11426
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	28.26	search with cache (only 1: intros n m; only 1: firstorder).	5.86424684525	6339
Coq.micromega.OrderedRing.ropp_morph_Proper	40	40.9	search with cache (only 1: intros; only 1: simpl_relation).	1.93062400818	3145
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	36	search with cache (only 1: intuition).	1.53736996651	1515
Coq.micromega.OrderedRing.Rplus_0_l	40	53.6	search with cache (only 1: intros; only 1: firstorder).	1.33906888962	4304
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0172469615936	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0183501243591	2
Coq.micromega.OrderedRing.Rplus_comm	40	0.0.7	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0266489982605	10
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0190191268921	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0218122005463	2
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.2.1.0	search with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.0796740055084	18
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.157720088959	31
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	3.2.2	search with cache (only 1: intros x y z; only 1: intuition; only 1: Z.order).	0.0214669704437	10
Coq.micromega.Ztac.elim_concl_eq	40	15.17.0	search with cache (only 1: intros x y H; only 1: firstorder; only 1: Z.order).	10.7009000778	15081
Coq.micromega.Ztac.elim_concl_le	40	7.0	search with cache (only 1: intros x y H; only 1: Z.order).	0.0195610523224	9
Coq.micromega.Ztac.elim_concl_lt	40	1.0	search with cache (only 1: intros; only 1: now apply Z.nle_gt).	0.0120871067047	3
Coq.micromega.Ztac.Zlt_le_add_1	40	3.16	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	3.21486186981	2014
Coq.micromega.Ztac.add_le	40	2.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0121848583221	4
Coq.micromega.Ztac.mul_le	40	0.0.4.0	search with cache (only 1: intros n m H1 H2; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.018346786499	8
Coq.micromega.ZifyInst.PropAnd	40	24	search with cache (only 1: firstorder).	0.104274988174	280
Coq.micromega.ZifyInst.PropOr	40	151	search with cache (only 1: firstorder  (subst; auto)).	6.4002020359	11583
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0617678165436	2
Coq.micromega.ZifyInst.PropIff	40	21	search with cache (only 1: firstorder).	0.104604959488	223
Coq.micromega.ZifyInst.PropNot	40	0.0.1	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0349161624908	4
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.0.1.0.0.0.0.6.1.4.1.8.0	search with cache (only 1: intros n; only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	8.31823086739	7455
Coq.micromega.ZifyInst.z_max_spec	40	0.0.26	search with cache (only 1: intros H; only 1: intro n; only 1: Z.solve_max).	2.92661690712	2414
Coq.micromega.ZifyInst.z_min_spec	40	1.0.3	search with cache (only 1: split; only 1: Z.solve_min; only 1: Z.solve_min).	0.11975812912	32
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0118029117584	1
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0123629570007	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0127010345459	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.012923002243	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0130848884583	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0472280979156	5
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.1.3	search with cache (only 1: intros a b Hb H; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.489115953445	170
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	7.0.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.1390209198	55
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.0.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: left; only 1: apply Rle_lt_0_plus_1; only 1: red; only 1: auto with real).	0.0420298576355	8
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0456318855286	6
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	2.2.0.0.0	search with cache (only 1: split; only 1: intro EQ; only 1: now rewrite EQ; only 1: destruct 1; only 1: Z.order).	0.0326578617096	9
Coq.micromega.ZMicromega.lt_le_iff	40	0.1	search with cache (only 1: intros a; only 1: apply Z.lt_le_pred).	0.321667909622	70
Coq.micromega.ZMicromega.le_0_iff	40	0.0.17.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	4.32094907761	2566
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: trivial).	22.1393330097	8155
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40	19.1.20	search with cache (only 1: intros x; only 1: fix even_spec 1; only 1: auto).	2.60644698143	3778
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	1.0	search with cache (only 1: intros; only 1: split).	0.0140218734741	3
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.2.5	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	0.823292970657	437
Coq.micromega.ZMicromega.isZ0_n0	40	1.1.0.3.0	search with cache (only 1: destruct x; only 1: now split; only 1: simpl; only 1: now split; only 1: intuition congruence).	0.0890798568726	15
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40	5.9	search with cache (only 1: fix gcd_divide 1; only 1: tauto).	0.261305809021	330
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.118405103683	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	2.0.1.0.14	search with cache (only 1: destr_bool; only 1: split; only 1: Z.order'; only 1: auto with zarith; only 1: now split).	1.20961904526	1233
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.0.8.2.0.0.2.2.18.1	search with cache (only 1: intro n; only 1: induction n; only 1: split; only 1: compute; only 1: intuition congruence; only 1: now Z.nzsimpl; only 1: intuition try easy; only 1: intuition; only 1: destr_eq H; only 1: destr_eq H).	22.5929059982	15278
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40	3.0.1	search with cache (only 1: rewrite <- ?jump_add; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0237429141998	7
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	4.6.0.4.2	search with cache (only 1: induction p; only 1: trivial; only 1: unfold tail; only 1: trivial; only 1: auto).	0.749497175217	536
Coq.micromega.Env.nth_pred_double	40	0.0.0.0.0.2.3.1.0.1.1.7	search with cache (only 1: destruct p as [| p| p]; only 1: simpl; only 1: unfold jump; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_diag; only 1: unfold jump; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag; only 1: unfold tail; only 1: f_equal).	5.57155895233	4525
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	2.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0370149612427	8
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	12	search with cache (only 1: destr_bool).	0.163197994232	150
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0.1	search with cache (only 1: simpl; only 1: reflexivity).	0.0111839771271	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0076699256897	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	8.0.18.32	search with cache (only 1: intros m H; only 1: destruct m; only 1: reflexivity; only 1: discriminate).	11.3212900162	23127
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.1.1.0.0.0.3.8.0	search with cache (only 1: unfold cnf_tt; only 1: intros; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: destruct c; only 1: reflexivity; only 1: simpl; only 1: congruence).	2.14271998405	1558
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.2.0.0.6.4.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	2.68847489357	1961
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	35.2.12	search with cache (only 1: intros; only 1: unfold eval_cnf; only 1: firstorder).	8.90957403183	8302
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0270781517029	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40	40	search with cache (only 1: firstorder).	2.25267195702	1564
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.4.2.8	search with cache (only 1: unfold cnf_tt, eval_cnf, eval_clause; only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	3.72360777855	1026
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0648069381714	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	5.1.0.0.6.2.8	search with cache (only 1: intro p; only 1: destruct p; only 1: easy; only 1: now split; only 1: split; only 1: now rewrite <- ?Z.pred_le_mono; only 1: auto with zarith).	3.75691008568	3961
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0203421115875	1
Coq.micromega.EnvRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0219118595123	2
Coq.micromega.EnvRing.ropp_ext_Proper	40	16.0.2	search with cache (only 1: elim ARth; only 1: intros; only 1: firstorder).	2.0633430481	681
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	102	search with cache (only 1: firstorder).	4.95011687279	10246
Coq.micromega.EnvRing.Pphi1	40	113	search with cache (only 1: firstorder).	6.73915791512	12915
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	12.0817089081	1815
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	6.65124297142	1040
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0830700397491	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.2	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.109609127045	7
Coq.micromega.EnvRing.mkZmon_ok	40	2.1.1.0.0.2.20	search with cache (only 1: induction M; only 1: simpl; only 1: Esimpl; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: mul_permut).	8.60703921318	2375
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0133531093597	1
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0152719020844	2
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.0156378746033	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	2	search with cache (only 1: exact (SORle_wd sor)).	0.0171258449554	3
Coq.micromega.RingMicromega.rlt_morph_Proper	40	3	search with cache (only 1: exact (SORlt_wd sor)).	0.0172221660614	4
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	36.3.3.10	search with cache (only 1: intros x y H1; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: unfold eval_pol; only 1: now try discriminate).	7.34501218796	8899
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	2.1.0.0.18.0.4	search with cache (only 1: destruct l; only 1: constructor; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.76212215424	3881
Coq.micromega.Refl.make_impl_map	40	12.1.6.2	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: firstorder).	39.3402540684	12984
Coq.micromega.Refl.make_conj_cons	40	0.0.0.2.1.0.6	search with cache (only 1: induction l; only 1: simpl; only 1: split; only 1: firstorder; only 1: firstorder; only 1: simpl; only 1: reflexivity).	2.06125998497	1617
Coq.micromega.Refl.make_conj_impl	40	4.4.0.2.1.4	search with cache (only 1: intros A P; only 1: induction l; only 1: CRelationClasses.simpl_crelation; only 1: destruct l; only 1: reflexivity; only 1: firstorder).	9.91936206818	8994
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	7.1.2.7	search with cache (only 1: intros n m; only 1: intros l' H; only 1: rewrite make_conj_cons; only 1: intuition).	5.88925909996	2025
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0636479854584	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40	2.3	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0706920623779	17
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	1.0.3.0.0.0.28	search with cache (only 1: destruct (archimed 0) as [H1 H2]; only 1: apply lt_IZR in H1; only 1: rewrite <- minus_IZR in H2; only 1: normZ; only 1: rewrite Rinv_1; only 1: apply le_IZR in H2; only 1: auto with real).	10.5297470093	7372
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	2.35	search with cache (only 1: unfold Qplus, Qeq, Q2R; only 1: auto with real).	2.10907196999	3505
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	0.1.5.0.0.1.3.0.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: now try Nat.order'; only 1: intros H; only 1: easy; only 1: congruence; only 1: simpl; only 1: Z.swap_greater; only 1: intros H; only 1: now induction n).	3.76769709587	2189
Coq.micromega.RMicromega.Q2R_m_Proper	40	3.2.1.2	search with cache (only 1: intros x y H; only 1: apply Qeq_true; only 1: rewrite Qeq_bool_iff; only 1: auto with *).	5.70191192627	1110
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.141646146774	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.6.2.1.2.2	search with cache (only 1: induction p; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: simpl; only 1: rewrite <- Pos.compare_succ_succ; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: trivial).	3.19653511047	1763
Coq.rtauto.Bintree.map_app	40	0.0.0.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.240191936493	66
Coq.rtauto.Bintree.length_map	40	0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0568859577179	16
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.0.0.0.1.2	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: trivial).	0.0421628952026	9
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.2.6	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity || congruence).	0.127548933029	51
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.0.5.3.5.46	search with cache (only 1: inversion 1; only 1: generalize H; only 1: clear H; only 1: unfold get, push, index; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	27.7220449448	52923
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	10.0.0.7	search with cache (only 1: induction F; only 1: intros; only 1: intuition; only 1: eauto).	2.47051596642	2185
Coq.rtauto.Rtauto.compose1	40	9.2.3.0	search with cache (only 1: induction F; only 1: tauto; only 1: intros i e; only 1: firstorder).	2.15275597572	1447
Coq.rtauto.Rtauto.compose2	40	12.1.1.2.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: red; only 1: simpl; only 1: firstorder; only 1: induction F; only 1: simpl; only 1: auto; only 1: firstorder).	37.373898983	23094
Coq.rtauto.Rtauto.compose3	40	15.0.0.2.0	search with cache (only 1: induction F; only 1: tauto; only 1: intros A B C H; only 1: simpl; only 1: firstorder).	31.1362299919	4801
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40	1.2.11.2	search with cache (only 1: intros A B H; only 1: fix odd_spec 1; only 1: intros i e; only 1: auto).	1.14587712288	876
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.119668006897	3
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	1.2.0	search with cache (only 1: intro; only 1: simpl; only 1: trivial).	0.0600998401642	6
Coq.nsatz.Nsatz.Rext	40	0.0.6.35	search with cache (only 1: constructor; only 1: solve_proper; only 1: apply ring_mult_comp; only 1: solve_proper).	1.53432011604	1027
Coq.nsatz.Nsatz.Rset	40	2.1	search with cache (only 1: red; only 1: apply ring_setoid).	0.202074050903	36
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).	0.0685398578644	11
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.0195610523224	1
Coq.nsatz.Nsatz.Rcri	40	4.19.1.0.44	search with cache (only 1: unfold Rminus; only 1: red; only 1: intros; only 1: rewrite Rmult_comm; only 1: solve_proper).	5.33633899689	4703
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0164217948914	1
Coq.nsatz.Nsatz.Qcri	40	0.0.1.0.18.2.20.9	search with cache (only 1: red; only 1: intros; only 1: unfold Qminus; only 1: apply Ncring_initial.Zsth; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	28.1263430119	8878
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0.0.1	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: discriminate).	0.0461840629578	4
Coq.nsatz.Nsatz.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0283401012421	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0330700874329	1
Coq.omega.OmegaLemmas.Zred_factor1	40	3.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: change 2 with (1 + 1); only 1: apply Z.add_diag).	0.0248188972473	14
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	3	search with cache (only 1: now Z.nzsimpl).	0.265620946884	26
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	2	search with cache (only 1: now Z.nzsimpl).	0.0363149642944	3
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.00904202461243	1
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	1.6	search with cache (only 1: intros; only 1: Z.order).	0.0705840587616	9
Coq.omega.OmegaLemmas.OMEGA2	40	2.3	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.180298089981	30
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	0.1.0.8	search with cache (only 1: intros ->; only 1: intros EQ; only 1: Z.nzsimpl; only 1: now subst).	0.361788988113	77
Coq.omega.OmegaLemmas.OMEGA6	40	0.1.3.7	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	1.35858011246	209
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	1.4.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.0543079376221	29
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	0.0.3	search with cache (only 1: symmetry; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0384569168091	23
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.143194913864	3
Coq.omega.OmegaLemmas.OMEGA15	40
Coq.omega.OmegaLemmas.OMEGA16	40	11.21	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: trivial).	1.5494890213	682
Coq.omega.OmegaLemmas.OMEGA17	40	1.1.0	search with cache (only 1: intros H ->; only 1: Z.nzsimpl; only 1: assumption).	0.042699098587	5
Coq.omega.OmegaLemmas.OMEGA18	40	40	search with cache (only 1: easy || now destruct y).	8.19876503944	7423
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0497019290924	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.mod_0_r_ext	40
Coq.omega.PreOmega.div_0_r_ext	40	0.0.6.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: now destruct Hn || easy).	1.08364892006	350
Coq.omega.PreOmega.rem_0_r_ext	40
Coq.omega.PreOmega.quot_0_r_ext	40	1.0.0.1.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: auto; only 1: reflexivity; only 1: split).	0.0262970924377	8
Coq.omega.PreOmega.rem_bound_pos_pos	40
Coq.omega.PreOmega.rem_bound_neg_pos	40
Coq.omega.PreOmega.rem_bound_pos_neg	40
Coq.omega.PreOmega.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros; only 1: apply -> Decidable_spec; only 1: assumption).	0.0257000923157	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0221581459045	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.9.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.369210004807	219
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0219058990479	3
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	1.6.5.0	search with cache (only 1: revert q; only 1: intro n; only 1: rewrite Pos.eqb_eq; only 1: intuition).	10.7489070892	3596
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40	1.1.23.6	search with cache (only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: auto).	28.2183589935	13156
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	7.8.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: easy; only 1: trivial; only 1: trivial).	4.20996999741	4619
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	22	search with cache (only 1: easy').	0.873050928116	723
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	3.0.0	search with cache (only 1: destruct l; only 1: now f_equal; only 1: split).	0.0617430210114	6
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	17	search with cache (only 1: intuition).	0.441032886505	419
Coq.funind.Recdef.Splus_lt	40	29	search with cache (only 1: auto with arith).	0.24093914032	502
Coq.funind.Recdef.SSplus_lt	40	34.0	search with cache (only 1: apply Nat.lt_succ_r; only 1: firstorder).	37.4296050072	35238
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0155668258667	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	7.1	search with cache (only 1: intro EQ; only 1: Z.order').	0.129040002823	61
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	7	search with cache (only 1: firstorder).	0.0309028625488	8
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.02525806427	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40	40.0	search with cache (only 1: intros; only 1: simpl_relation).	17.0572369099	5967
Coq.setoid_ring.Ncring_polynom.Pphi1	40	26.0	search with cache (only 1: intros; only 1: firstorder  (subst; auto)).	3.24715805054	1558
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40	1.3.0.0.0.0.0.0.0	search with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: rsimpl).	21.0317270756	737
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	11.0.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	1.90398693085	217
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.27955889702	43
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.58	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	1.82754206657	2520
Coq.setoid_ring.Ring.bool_eq_ok	40	0	search with cache (only 1: destr_bool).	0.00902605056763	1
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	79	search with cache (only 1: firstorder).	13.0455648899	9823
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	53.13	search with cache (only 1: intros; only 1: firstorder).	10.7458059788	7305
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0119159221649	3
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	4	search with cache (only 1: trivial).	0.0190830230713	5
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	7	search with cache (only 1: eauto).	0.103291034698	8
Coq.setoid_ring.Field_theory.rsub_0_r	40	17	search with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	18.5809640884	371
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	27	search with cache (only 1: eauto).	5.46127796173	1107
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	5.1.0.0.0.2	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	9.39975810051	244
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	2.4.2.4.2.0	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	25.5188879967	1049
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.644401073456	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.729891061783	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	7.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	4.40016102791	56
Coq.setoid_ring.Field_theory.PEpow_0_r	40	5.1.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.02462100983	10
Coq.setoid_ring.Field_theory.PEpow_1_r	40	4.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.826882839203	11
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.1.2.0.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	12.0518929958	19
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	0.2.2.0.0.0	search with cache (only 1: rewrite PCond_cons; only 1: destruct l1; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now destruct 1).	8.43168091774	12
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5.0	search with cache (only 1: intros; only 1: now destruct 1).	4.92415213585	13
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.013631105423	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0149440765381	2
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.017814874649	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	1.1.11.0.0.2	search with cache (only 1: repeat split; only 1: congruence; only 1: intros x y; only 1: intros Hb H; only 1: symmetry; only 1: Z.order).	0.860427856445	840
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	3.3.2.3.6.7.1	search with cache (only 1: intro; only 1: intros; only 1: destruct x; only 1: rsimpl; only 1: norm; only 1: auto; only 1: auto).	2.65391778946	2332
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.7.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0451462268829	13
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40	31	search with cache (only 1: firstorder).	0.433428049088	483
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	1.0.0.0.0.3	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: apply eq_trans).	0.149709939957	11
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	0	search with cache (only 1: exact R1_neq_R0).	0.0498650074005	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	4	search with cache (only 1: reflexivity).	0.020721912384	5
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	21.15	search with cache (only 1: firstorder; only 1: now N.nzsimpl).	0.780754089355	927
Coq.setoid_ring.Ring_theory.IDmorph	40	41.36	search with cache (only 1: compute; only 1: CRelationClasses.simpl_crelation).	9.98063111305	12604
Coq.setoid_ring.Ring_theory.Eqsth	40	5	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0343630313873	6
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	3.3.14	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	0.40757393837	299
Coq.setoid_ring.Ring_theory.Eq_ext	40	9.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.929816007614	339
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	5.5	search with cache (only 1: intros H x0; only 1: firstorder).	0.292746067047	91
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	5.2	search with cache (only 1: intros; only 1: firstorder).	0.0490169525146	13
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.1	search with cache (only 1: intros; only 1: firstorder).	0.0213439464569	5
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	17	search with cache (only 1: firstorder).	0.0813500881195	126
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	5	search with cache (only 1: solve_proper).	0.0173790454865	6
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.015026807785	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0153520107269	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	4.0.0.0.0.3.0.5	search with cache (only 1: constructor; only 1: reflexivity; only 1: f_equiv; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: auto).	1.20319795609	475
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40	10	search with cache (only 1: firstorder).	0.567611217499	34
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	10.11	search with cache (only 1: intros z Hz; only 1: firstorder).	1.0367910862	415
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	10.17	search with cache (only 1: intros H x0; only 1: firstorder).	1.5518450737	756
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	22.6	search with cache (only 1: intros n m H; only 1: simpl_relation).	0.714414834976	683
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	38	search with cache (only 1: firstorder).	16.2899050713	3087
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	46	search with cache (only 1: firstorder).	16.9470272064	6235
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	11.18	search with cache (only 1: intros x y H; only 1: firstorder).	0.858554124832	581
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	2	search with cache (only 1: auto).	0.27370095253	3
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	27	search with cache (only 1: firstorder).	0.601112127304	583
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40	60	search with cache (only 1: firstorder).	0.454143047333	1846
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0274708271027	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0293879508972	1
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0123581886292	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0092408657074	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00865292549133	1
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0125868320465	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.5.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.047660112381	12
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (SRadd_ext SReqe)).	0.0101149082184	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (SRmul_ext SReqe)).	0.0112371444702	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00898313522339	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0100619792938	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0089111328125	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0109288692474	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.0897679328918	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	3.1.2	search with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0721170902252	28
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0140860080719	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0141761302948	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0128879547119	2
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0192248821259	4
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40	72	search with cache (only 1: CRelationClasses.simpl_crelation).	6.32754397392	2695
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	83	search with cache (only 1: firstorder).	16.632381916	3525
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	23.1.38	search with cache (only 1: intros n Hn; only 1: apply Ncring_initial.Zsth; only 1: intuition).	20.9137108326	14464
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0092921257019	1
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0111548900604	2
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0120480060577	3
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	19.17	search with cache (only 1: intros n n' Hn m m' Hm; only 1: CRelationClasses.simpl_crelation).	6.51029109955	2312
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	21.2	search with cache (only 1: red; only 1: simpl_relation).	6.51754307747	2752
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	37	search with cache (only 1: firstorder).	1.92321705818	1305
Coq.setoid_ring.Ring_polynom.Pphi1	40	37	search with cache (only 1: firstorder).	2.01708292961	1363
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	8.22811198235	1112
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	8.39202404022	1142
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0125708580017	2
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	34.3	search with cache (only 1: intros; only 1: firstorder).	5.5141248703	4969
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.4	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0505700111389	8
Coq.setoid_ring.Ncring.ring_add_assoc1	40	9.3.12.16.0	search with cache (only 1: intro x; only 1: intros a Ha; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: reflexivity).	22.1786839962	10570
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.148761987686	9
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0092179775238	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.0097439289093	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.8	search with cache (only 1: unlock; only 1: discriminate).	0.0400040149689	19
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.0124390125275	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	2.2	search with cache (only 1: destruct 1; only 1: auto).	0.0241160392761	28
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.0122730731964	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.0112380981445	1
Coq.ssr.ssreflect.iffLRn	40	3.7	search with cache (only 1: intros h1 h2; only 1: tauto).	0.0849821567535	41
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.012148141861	1
Coq.ssr.ssreflect.abstract_context	40	0.129.93	search with cache (only 1: intro H; only 1: apply H; only 1: split).	11.8635289669	131291
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0153930187225	1
Coq.ssr.ssrbool.is_true_true	40	16	search with cache (only 1: reflexivity).	0.0309360027313	108
Coq.ssr.ssrbool.not_false_is_true	40	2	search with cache (only 1: discriminate).	0.00911903381348	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.0122339725494	2
Coq.ssr.ssrbool.negbT	40	1	search with cache (only 1: Bool.destr_bool).	0.0120010375977	2
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.0116682052612	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.0120489597321	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.0121419429779	1
Coq.ssr.ssrbool.negbK	40	3	search with cache (only 1: by case).	0.0127818584442	4
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.0100810527802	1
Coq.ssr.ssrbool.negb_inj	40	0.21	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.107948064804	231
Coq.ssr.ssrbool.negbLR	40	6	search with cache (only 1: Bool.destr_bool).	0.0297451019287	16
Coq.ssr.ssrbool.negbRL	40	6	search with cache (only 1: Bool.destr_bool).	0.0292189121246	15
Coq.ssr.ssrbool.contra	40	5.15	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.490854024887	369
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0168991088867	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0170500278473	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.0169088840485	1
Coq.ssr.ssrbool.contraT	40	1.12	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.202441930771	76
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.014456987381	1
Coq.ssr.ssrbool.contraFT	40	3.12	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.478939056396	114
Coq.ssr.ssrbool.contraFN	40	3.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.531660079956	151
Coq.ssr.ssrbool.contraTF	40	1.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.415566921234	109
Coq.ssr.ssrbool.contraNF	40	1.20	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.701647996902	232
Coq.ssr.ssrbool.contraFF	40	0.31.24	search with cache (only 1: Bool.destr_bool; only 1: symmetry; only 1: intuition).	5.9366710186	12320
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0142271518707	1
Coq.ssr.ssrbool.ifT	40	2	search with cache (only 1: by case : b ).	0.0219969749451	11
Coq.ssr.ssrbool.ifF	40	0	search with cache (only 1: by move ->).	0.0107951164246	1
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : b ).	0.0159358978271	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.0117180347443	3
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case b).	0.0106389522552	1
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.011931180954	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0108950138092	1
Coq.ssr.ssrbool.ifE	40	7	search with cache (only 1: trivial).	0.0168349742889	8
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0168809890747	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0155899524689	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by move <-; case Hb).	0.0104398727417	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.24	search with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.403102874756	334
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.22	search with cache (only 1: intros [? ?]; only 1: by case : Pb ; constructor; auto).	0.299448013306	255
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	14	search with cache (only 1: by case : Pb ; constructor; auto).	0.0786499977112	75
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	8.66	search with cache (only 1: destruct 1; only 1: trivial).	1.55320596695	6129
Coq.ssr.ssrbool.impliesPn	40	0.43.30	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	3.7598130703	10934
Coq.ssr.ssrbool.unlessL	40	6.38.0	search with cache (only 1: repeat split; only 1: intros Hfst Hsnd; only 1: auto).	0.881916999817	3063
Coq.ssr.ssrbool.unlessR	40	2.39.2	search with cache (only 1: repeat split; only 1: red; only 1: auto).	0.595571994781	2037
Coq.ssr.ssrbool.unless_sym	40	2.1.24.3.35.33.2	search with cache (only 1: split; only 1: intro H; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	8.16175794601	39152
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40	7.7.78.40.21	search with cache (only 1: split; only 1: red; only 1: Bool.destr_bool; only 1: auto; only 1: auto).	33.2859120369	104046
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.27.4	search with cache (only 1: intuition; only 1: red; only 1: auto).	0.339897871017	946
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	1.0.1.1.0.1.18	search with cache (only 1: repeat split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.718599081039	871
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0165801048279	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0898900032043	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0222609043121	1
Coq.ssr.ssrbool.pair_andP	40	16	search with cache (only 1: intuition).	0.232306957245	249
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0123980045319	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.0112111568451	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.012218952179	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0101330280304	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0115599632263	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.020763874054	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0199110507965	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0154371261597	1
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: constructor).	0.0103120803833	1
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.011901140213	1
Coq.ssr.ssrbool.andbT	40	2.3	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.038547039032	7
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0146591663361	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.0123431682587	1
Coq.ssr.ssrbool.andbC	40	0.18	search with cache (only 1: intro z; only 1: Bool.destr_bool).	0.115443944931	165
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0130579471588	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by do 2!case).	0.0150170326233	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by do 3!case).	0.0215220451355	2
Coq.ssr.ssrbool.andbACA	40	15	search with cache (only 1: by do 3!case).	0.0833368301392	91
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0120649337769	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00973701477051	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0125551223755	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0112450122833	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0105109214783	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by do 2!case).	0.0120348930359	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by do 3!case).	0.0168190002441	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by do 3!case).	0.0171010494232	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by do 3!case).	0.0175039768219	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by do 4!case).	0.0247571468353	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0142629146576	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0120549201965	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.0126700401306	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0122179985046	1
Coq.ssr.ssrbool.andb_orl	40	5	search with cache (only 1: by do 3!case).	0.0247049331665	6
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by do 3!case).	0.0178520679474	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by do 3!case).	0.0183382034302	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by do 3!case).	0.017707824707	1
Coq.ssr.ssrbool.andb_idl	40	3.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.471199989319	214
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0376811027527	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0194199085236	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.026300907135	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0192580223083	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0193021297455	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0264530181885	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0248029232025	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0148160457611	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.0146639347076	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.016459941864	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0156350135803	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0160229206085	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.016125202179	1
Coq.ssr.ssrbool.implybT	40	2	search with cache (only 1: by case : b ).	0.0156190395355	3
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.0118200778961	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0128071308136	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0125551223755	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.0129508972168	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0131340026855	1
Coq.ssr.ssrbool.implybE	40	1	search with cache (only 1: by case : a ; case : b ).	0.0164930820465	2
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0144219398499	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0138120651245	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0146989822388	1
Coq.ssr.ssrbool.implyb_idl	40	2	search with cache (only 1: by case : a ; case : b  => // ->).	0.0259518623352	3
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.019994020462	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0585989952087	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0105841159821	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00957798957825	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0127780437469	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by do 2!case).	0.0124380588531	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by do 3!case).	0.0172691345215	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by do 3!case).	0.0168640613556	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by do 3!case).	0.0166311264038	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by do 4!case).	0.0243051052094	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by do 3!case).	0.0176141262054	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by do 3!case).	0.0182900428772	1
Coq.ssr.ssrbool.addKb	40	1	search with cache (only 1: by do 2!case).	0.0172300338745	2
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.0125768184662	1
Coq.ssr.ssrbool.addIb	40	2	search with cache (only 1: by do 3!case).	0.0219719409943	3
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by do 3!case).	0.0186078548431	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.012852191925	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0134479999542	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0160899162292	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0147950649261	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.48	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	1.50170683861	1396
Coq.ssr.ssrbool.subrelUl	40	0.31.0.27	search with cache (only 1: intro H; only 1: Bool.destr_bool; only 1: elim eq_sym with (1 := H0); only 1: by [  ]).	2.48983311653	6981
Coq.ssr.ssrbool.subrelUr	40	9.4.36.29	search with cache (only 1: intro H; only 1: red; only 1: simpl; only 1: intuition).	6.72235107422	22917
Coq.ssr.ssrbool.sub_refl	40	2.13	search with cache (only 1: intro; only 1: auto).	0.0540790557861	114
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.016016960144	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.0142250061035	1
Coq.ssr.ssrbool.unfold_in	40	3	search with cache (only 1: by rewrite -mem_topred).	0.014979839325	4
Coq.ssr.ssrbool.simpl_predE	40	1	search with cache (only 1: by [  ]).	0.0110001564026	2
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0129761695862	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0150039196014	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: reflexivity).	0.0136320590973	1
Coq.ssr.ssrbool.in1W	40	0.6	search with cache (only 1: intros; only 1: by [  ]).	0.0284960269928	8
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.016371011734	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0171959400177	1
Coq.ssr.ssrbool.in1T	40	9	search with cache (only 1: auto).	0.0257270336151	10
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0216190814972	2
Coq.ssr.ssrbool.in3T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0187430381775	1
Coq.ssr.ssrbool.sub_in1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0164430141449	1
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0197319984436	2
Coq.ssr.ssrbool.sub_in111	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0236058235168	3
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0168769359589	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0170910358429	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.017226934433	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0219769477844	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0220539569855	2
Coq.ssr.ssrbool.on2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0192959308624	1
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  =>? ?; auto).	0.017776966095	1
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0202491283417	1
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0250821113586	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	20.48.65	search with cache (only 1: intros; only 1: subst; only 1: auto).	19.4349710941	37652
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0227539539337	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0867440700531	2
Coq.ssr.ssrbool.canRL_on	40	19.21.15.70	search with cache (only 1: intros H H'; only 1: destruct 1; only 1: symmetry; only 1: auto).	27.0898251534	55067
Coq.ssr.ssrbool.inW_bij	40	3.3.39.111	search with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  =>? ?; only 1: by move  =>? ?; auto).	24.7018511295	60779
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0226120948792	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0233380794525	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0266919136047	1
Coq.ssr.ssrbool.sub_in_bij	40	3.25	search with cache (only 1: intro x; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.669147968292	429
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0299580097198	1
Coq.ssr.ssrbool.sub_in2	40	3.28.13	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.04428386688	2712
Coq.ssr.ssrbool.sub_in3	40	11.31.13	search with cache (only 1: intros; only 1: red; only 1: auto).	1.68245482445	2931
Coq.ssr.ssrbool.sub_in12	40	0.48	search with cache (only 1: intros H x0; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	1.17946100235	1240
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.018679857254	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	5.33.19.22	search with cache (only 1: intros H ?; only 1: red; only 1: destruct 1; only 1: by [  ]).	3.76747989655	12371
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0134749412537	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0184230804443	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0161118507385	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0268712043762	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	search with cache (only 1: tauto).	0.00553894042969	2
Coq.ssr.ssrfun.unitE	40	0.8.7.21	search with cache (only 1: intro H; only 1: intuition; only 1: reflexivity || destruct H; only 1: tauto).	0.236304998398	1060
Coq.ssr.ssrfun.frefl	40	3	search with cache (only 1: split).	0.00535917282104	4
Coq.ssr.ssrfun.fsym	40	1.5	search with cache (only 1: intros; only 1: by [  ]).	0.0101461410522	8
Coq.ssr.ssrfun.ftrans	40	0.42.54.16	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H; only 1: trivial).	10.0411260128	49849
Coq.ssr.ssrfun.rrefl	40	2	search with cache (only 1: split).	0.00573682785034	3
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.4.0.1.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0237610340118	10
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0131747722626	1
Coq.ssr.ssrfun.svalP	40	21	search with cache (only 1: apply proj2_sig).	0.0548479557037	208
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : u ).	0.00771713256836	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00717306137085	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0108609199524	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0138030052185	1
Coq.ssr.ssrfun.can_pcan	40	2.45.18	search with cache (only 1: intros H ?; only 1: rewrite H; only 1: reflexivity).	4.97123622894	23969
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.00907897949219	2
Coq.ssr.ssrfun.canLR	40	1.7.14	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.376259088516	691
Coq.ssr.ssrfun.canRL	40	14.6	search with cache (only 1: destruct 2; only 1: auto).	0.261073827744	449
Coq.ssr.ssrfun.Some_inj	40	0.0.26	search with cache (only 1: inversion 1; only 1: destruct H; only 1: reflexivity).	0.625203132629	1046
Coq.ssr.ssrfun.of_voidK	40	1.12	search with cache (only 1: intro H; only 1: destruct H).	0.0424499511719	76
Coq.ssr.ssrfun.esymK	40	0.22.22.17	search with cache (only 1: red; only 1: intro p; only 1: destruct p; only 1: reflexivity).	1.10676002502	4322
Coq.ssr.ssrfun.etrans_id	40	0.24	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.138375043869	306
Coq.ssr.ssrfun.inj_id	40	8	search with cache (only 1: by move  =>eq_fg x).	0.00768208503723	9
Coq.ssr.ssrfun.inj_can_sym	40	1.56.6	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.20797610283	4379
Coq.ssr.ssrfun.inj_comp	40	7.71.3	search with cache (only 1: intros Hfst Hsnd; only 1: intros H; only 1: auto).	3.8873269558	12174
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	5.41.67	search with cache (only 1: red; only 1: simpl in *; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	9.7557079792	38253
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	6.6.23	search with cache (only 1: exists f; only 1: trivial; only 1: trivial).	0.312232971191	1061
Coq.ssr.ssrunder.Under_rel_from_rel	40	0.2	search with cache (only 1: intros; only 1: trivial).	0.00820708274841	4
Coq.ssr.ssrunder.Under_relE	40	10	search with cache (only 1: auto).	0.00887107849121	21
Coq.ssr.ssrunder.over_rel	40	0	search with cache (only 1: now trivial).	0.00565099716187	1
Coq.ssr.ssrunder.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00534296035767	1
Coq.ssr.ssrunder.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00501394271851	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	1.16.2.2	search with cache (only 1: intros x y z; only 1: intros; only 1: destruct H; only 1: auto).	2.65579509735	3084
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.19.1.2.0	search with cache (only 1: apply caseS; only 1: intros x y H; only 1: simpl; only 1: elim H; only 1: reflexivity; only 1: now destruct t).	18.0195631981	11657
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	3.0	search with cache (only 1: intros; only 1: split).	0.0420150756836	24
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	5.0.4.9.1	search with cache (only 1: Bool.destr_bool; only 1: induction v; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	5.29492902756	3518
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	0.1	search with cache (only 1: intros x y H; only 1: reflexivity).	0.0126359462738	3
Coq.Vectors.VectorSpec.append_comm_cons	40	3.0.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.0186500549316	6
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	2.15.14	search with cache (only 1: intros a Ha; only 1: fix even_spec 1; only 1: apply PeanoNat.Nat.even_spec).	24.165979147	19908
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	1.1.0	search with cache (only 1: intros m n p; only 1: intros <-; only 1: auto with arith).	0.0245199203491	5
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0133459568024	1
Coq.Setoids.Setoid.Seq_sym	40	0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0158262252808	2
Coq.Setoids.Setoid.Seq_trans	40	1.1.3.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.141792058945	55
Coq.Setoids.Setoid.gen_st	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0139138698578	1
Coq.Bool.IfProp.Iftrue_inv	40	2.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.021665096283	5
Coq.Bool.IfProp.Iffalse_inv	40	1.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.077112197876	11
Coq.Bool.IfProp.IfProp_true	40	0.39.12	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with bool).	19.3464050293	69255
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0198600292206	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0714330673218	17
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	6.1	search with cache (only 1: intros p IH; only 1: now subst).	0.012393951416	9
Coq.Bool.Zerob.zerob_true_elim	40	0.0.1	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0203969478607	4
Coq.Bool.Zerob.zerob_false_intro	40	0.2.0.0.9.7	search with cache (only 1: intro n; only 1: Nat.cases n; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: trivial).	3.62642121315	1228
Coq.Bool.Zerob.zerob_false_elim	40	0.3.2.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: simpl; only 1: easy).	0.0409388542175	13
Coq.Bool.DecBool.ifdec_left	40	0.5.12	search with cache (only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.485774993896	837
Coq.Bool.DecBool.ifdec_right	40	0.6.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	0.453134059906	366
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.24.1	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.284103155136	1087
Coq.Bool.Sumbool.bool_eq_rec	40	0.1.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0124928951263	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0106301307678	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0245108604431	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0207149982452	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	search with cache (only 1: discriminate).	0.010185956955	2
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00762295722961	1
Coq.Bool.Bool.eq_true_false_abs	40	2.1.5.2.0	search with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.218189001083	304
Coq.Bool.Bool.not_true_is_false	40	3.9.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.183876037598	254
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0163700580597	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.13.1	search with cache (only 1: intro z; only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.632579088211	947
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0208299160004	3
Coq.Bool.Bool.leb_implb	40	1.0.1.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0786149501801	36
Coq.Bool.Bool.eqb_subst	40	1	search with cache (only 1: destr_bool).	0.0243740081787	16
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0114510059357	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0118398666382	1
Coq.Bool.Bool.eqb_true_iff	40	1.0.1	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).	0.022537946701	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0333228111267	5
Coq.Bool.Bool.negb_orb	40	0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: intuition; only 1: repeat split).	0.0238130092621	5
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0130698680878	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.0108120441437	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0100250244141	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0129880905151	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.0116980075836	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.0104258060455	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.010360956192	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.0110869407654	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0192699432373	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0215430259705	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0343689918518	5
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0342118740082	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0274169445038	5
Coq.Bool.Bool.orb_prop	40	1.1.1.1.1	search with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: destr_bool).	0.0285971164703	10
Coq.Bool.Bool.orb_true_intro	40	1.3.2.0	search with cache (only 1: destruct b1; only 1: intuition; only 1: destr_bool; only 1: intuition).	0.382269859314	160
Coq.Bool.Bool.orb_false_intro	40	0.3.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0176820755005	6
Coq.Bool.Bool.orb_false_elim	40	0.0.4.0.1	search with cache (only 1: destruct b1; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: auto).	0.0557930469513	34
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.0121729373932	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.0106730461121	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0105450153351	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.0101749897003	2
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0106930732727	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.0109970569611	2
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0122539997101	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0159680843353	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0533490180969	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0372869968414	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.038428068161	9
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.0137369632721	2
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0179510116577	3
Coq.Bool.Bool.andb_false_r	40	2	search with cache (only 1: destr_bool).	0.0114398002625	3
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.010125875473	1
Coq.Bool.Bool.andb_diag	40	1	search with cache (only 1: destr_bool).	0.0100929737091	2
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.0102200508118	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.0100820064545	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.022766828537	5
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0117590427399	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0116751194	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0164539813995	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0175080299377	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0177459716797	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0174989700317	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0177710056305	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0143971443176	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0130710601807	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.0114412307739	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.010617017746	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0106539726257	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00958609580994	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0106029510498	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0116188526154	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0164430141449	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0141530036926	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0178821086884	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0183370113373	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0577540397644	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0188868045807	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0149550437927	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0256278514862	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0146238803864	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0414249897003	5
Coq.Bool.Bool.eq_true_iff_eq	40	2.0.0.0.3.1	search with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: intros [? ?]; only 1: intuition; only 1: intuition).	0.838529109955	446
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0163948535919	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0165061950684	2
Coq.Bool.Bool.absurd_eq_bool	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0201261043549	3
Coq.Bool.Bool.absurd_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0140721797943	2
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.0159389972687	1
Coq.Bool.Bool.Is_true_eq_true	40	0.1	search with cache (only 1: destr_bool; only 1: intuition).	0.0140500068665	3
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0117690563202	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0151479244232	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0101158618927	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0188529491425	3
Coq.Bool.Bool.orb_prop_elim	40	1.2.1.2.1.2.2.1.1	search with cache (only 1: destruct a, b; only 1: intros; only 1: intuition; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: auto).	3.82481193542	6245
Coq.Bool.Bool.orb_prop_intro	40	0.4.0.0.0.6	search with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: simpl; only 1: tauto).	0.910490989685	822
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0226540565491	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0252110958099	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0254230499268	4
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0217339992523	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0177140235901	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0141098499298	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0141658782959	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0166389942169	3
Coq.Bool.Bool.andb_if	40	1	search with cache (only 1: destr_bool).	0.0131461620331	2
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.0119059085846	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0128099918365	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00944519042969	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	6.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0344421863556	19
Coq.Bool.Bool.reflect_dec	40	5.2.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: auto).	0.0385711193085	24
Coq.Bool.Bool.eqb_spec	40	1.1.1.0.9	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.183442831039	152
Coq.Bool.BoolEq.beq_eq_true	40	3.11.0	search with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.271389961243	303
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40	10.0.0.1.0.1.0	search with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	17.0257730484	7458
Coq.Lists.ListSet.set_mem_correct1	40	2.0.2.0.1.0.4.0	search with cache (only 1: simple induction x; only 1: easy; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: intro eq; only 1: auto with datatypes).	2.71891498566	1535
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40	0.1.1.7.0.0.1.0.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec b a0); only 1: left; only 1: intuition; only 1: now subst; only 1: right; only 1: auto with datatypes).	36.9775531292	17663
Coq.Lists.ListSet.set_add_intro	40	0.0.4	search with cache (only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	0.320972919464	114
Coq.Lists.ListSet.set_add_elim	40	0.0.0.3.0.0.3.1.0.0.0.0.7.0.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: intros [Hc1| Hc2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: unfold not; only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: tauto).	35.6328258514	19723
Coq.Lists.ListSet.set_add_elim2	40
Coq.Lists.ListSet.set_add_not_empty	40	1.3.8.3.1.4.0.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: unfold not; only 1: intro Hba0; only 1: discriminate).	37.4699699879	25066
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	2.2.0.0.5.0.0.0.0.14	search with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: simpl; only 1: intros H0 [| ]; only 1: auto; only 1: auto with datatypes).	36.0319190025	15663
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	9.0.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intuition).	2.41135001183	1424
Coq.Lists.ListSet.set_union_intro	40	0.0.0	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.0240988731384	3
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.0.1.1.0.0.0.0.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	4.2233440876	1262
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0302691459656	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	0.0.2.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 x0 Ha0; only 1: intros; only 1: eauto with datatypes).	0.462255001068	64
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	0.3.0.4.0.21	search with cache (only 1: induction l; only 1: simpl; only 1: right; only 1: tauto; only 1: simpl; only 1: intuition).	17.0693411827	3559
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.0.18	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.113281965256	187
Coq.Lists.Streams.tl_nth_tl	40	0.0.1.0.0.0.0.0.0.0.8	search with cache (only 1: induction n; only 1: intro x; only 1: case x; only 1: trivial; only 1: intro x; only 1: induction n; only 1: case x; only 1: trivial; only 1: simpl; only 1: case x; only 1: trivial).	1.5149140358	1196
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	11.20.14	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	3.13571286201	10970
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	14.10.2	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.365439176559	939
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.1	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0217730998993	6
Coq.Lists.Streams.Str_nth_map	40	0.0.1.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0192818641663	5
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	13.0.0.4	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	3.7085018158	3023
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.034471988678	7
Coq.Lists.List.nil_cons	40	16	search with cache (only 1: destr_bool).	0.588762044907	413
Coq.Lists.List.destruct_list	40	53.15.3.5	search with cache (only 1: intro p; only 1: destruct p; only 1: CRelationClasses.simpl_crelation; only 1: eauto).	13.152905941	40566
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	12.5	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.475125789642	408
Coq.Lists.List.length_zero_iff_nil	40	2.0.0.0.0.0.1.32.6	search with cache (only 1: split; only 1: compute; only 1: destruct l; only 1: reflexivity; only 1: firstorder  discriminate; only 1: destruct l; only 1: firstorder  discriminate; only 1: intros; only 1: discriminate).	29.2241358757	29440
Coq.Lists.List.hd_error_nil	40	0	search with cache (only 1: split).	0.0115220546722	1
Coq.Lists.List.hd_error_cons	40	0.0	search with cache (only 1: intros; only 1: split).	0.0196430683136	2
Coq.Lists.List.in_eq	40	0.6	search with cache (only 1: intros a Ha; only 1: firstorder  discriminate).	0.0297329425812	13
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: intros x y H; only 1: firstorder  discriminate).	0.0189509391785	2
Coq.Lists.List.not_in_cons	40	4.1.0.1.2.2.2	search with cache (only 1: split; only 1: simpl in *; only 1: auto; only 1: intro H; only 1: simpl; only 1: intro H1; only 1: intuition).	2.11966395378	1334
Coq.Lists.List.in_nil	40	4.3	search with cache (only 1: intro n; only 1: intuition).	0.0192849636078	9
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.0127418041229	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40	9.0.2.2.22.15	search with cache (only 1: intro H; only 1: destruct H; only 1: firstorder  discriminate; only 1: simpl; only 1: intros; only 1: firstorder  discriminate).	38.0344491005	34683
Coq.Lists.List.app_nil_l	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: now destruct l).	0.0246770381927	4
Coq.Lists.List.app_nil_r	40	36.3.0.4	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: congruence).	8.35872507095	15414
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0472590923309	6
Coq.Lists.List.app_assoc	40
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0579431056976	7
Coq.Lists.List.app_comm_cons	40	1.1.1	search with cache (only 1: simpl; only 1: intros a r; only 1: reflexivity).	0.0213220119476	6
Coq.Lists.List.app_eq_nil	40	6.3.5	search with cache (only 1: induction l; only 1: auto; only 1: firstorder  discriminate).	0.697835922241	391
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	0.2.2.1	search with cache (only 1: induction l as [| a tail]; only 1: auto; only 1: simpl; only 1: auto).	0.126437902451	35
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	4.3.0.2.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: intuition).	3.50518512726	1951
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40	1.7.6.1.1.7	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: intros y H0 H1; only 1: inversion H1; only 1: auto).	6.76307201385	7470
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0.0	search with cache (only 1: simpl; only 1: intros a b l H; only 1: auto  4).	0.0224239826202	3
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40
Coq.Lists.List.app_nth1	40	4.0.2.3.0.0.1.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: destruct n; only 1: auto; only 1: auto with arith).	11.7026290894	5823
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40	1.0.3.2.0.0.0.0.1.3.1.7.6	search with cache (only 1: revert l; only 1: induction n as [| n IH]; only 1: intros [| ] ?; only 1: discriminate H; only 1: inversion_clear H; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros l H; only 1: destruct l; only 1: inversion_clear H; only 1: simpl; only 1: auto).	37.9569900036	36154
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.2.1.0.0	search with cache (only 1: revert n; only 1: induction l as [| a l IH]; only 1: inversion 1; only 1: intros [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.22500896454	356
Coq.Lists.List.nth_error_app2	40	0.0.0.3.1.0.2.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: simpl in *; only 1: intros [| x l] H; only 1: auto; only 1: solve [ inversion H ]; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	18.2251660824	7746
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.1.0.3.0.1.2	search with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: destruct n; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	4.02323698997	1367
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.1	search with cache (only 1: simpl; only 1: split).	0.0212149620056	7
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	0.6.0.1	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: split; only 1: intuition).	0.150537014008	73
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0322759151459	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	3.1.14	search with cache (only 1: induction l; only 1: auto; only 1: auto).	2.15116500854	2212
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	1	search with cache (only 1: auto).	0.0128290653229	2
Coq.Lists.List.concat_cons	40	4.1.0	search with cache (only 1: induction l; only 1: firstorder; only 1: auto with arith).	0.0647580623627	24
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40	31	search with cache (only 1: decide equality).	2.96684503555	3073
Coq.Lists.List.map_cons	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.023736000061	3
Coq.Lists.List.in_map	40	2.0.0.11.0.0.3	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: firstorder; only 1: subst; only 1: simpl; only 1: auto).	36.7840120792	24852
Coq.Lists.List.in_map_iff	40	0.0.3.7.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: simpl; only 1: subst; only 1: intuition).	2.49885392189	1550
Coq.Lists.List.map_length	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.0414772033691	5
Coq.Lists.List.map_nth	40
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	1.0.5	search with cache (only 1: intros [| x l] H; only 1: auto; only 1: discriminate).	0.142596006393	46
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	14.0.1.0.14	search with cache (only 1: intros A P; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	22.7471151352	19640
Coq.Lists.List.concat_map	40
Coq.Lists.List.map_id	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0351169109344	5
Coq.Lists.List.map_map	40	1.2.2.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: firstorder  (subst; auto)).	0.323558092117	103
Coq.Lists.List.map_ext_in	40	2.0.5.5.3.0.7.12	search with cache (only 1: induction l; only 1: reflexivity || discriminate; only 1: simpl; only 1: firstorder  (subst; auto); only 1: f_equal; only 1: apply H; only 1: auto; only 1: auto).	11.2606019974	10593
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.0584020614624	7
Coq.Lists.List.fold_left_app	40	0.0.1.0.1.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: intros; only 1: simpl in *; only 1: auto).	0.147799015045	39
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	2.72	search with cache (only 1: fix even_spec 1; only 1: solve [ auto ]).	11.0567259789	28552
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.1.1.0.0.0.0.3	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intuition).	3.0836122036	611
Coq.Lists.List.find_none	40	0.2.0.2.0.0.1.0.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intros Ha Eq; only 1: intuition congruence; only 1: intros Ha Eq; only 1: intuition; only 1: intuition congruence).	17.081499815	1958
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0253150463104	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	0.0.10.4.2	search with cache (only 1: intros l l1 l2; only 1: revert l1 l2 l; only 1: intros l m n; only 1: rewrite filter_map; only 1: apply ext_in_map).	19.2124471664	6583
Coq.Lists.List.filter_ext_in_iff	40	0.0.0.3.0.4.1	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	3.67025017738	1293
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0378401279449	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	2.3.0.3.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto with arith).	3.69742488861	1886
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0669949054718	8
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	0.0.0.1.0.4.1.0.0.4.0.0	search with cache (only 1: induction l, l'; only 1: intros; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: destruct H; only 1: simpl; only 1: firstorder; only 1: injection H; only 1: auto).	20.2074990273	11211
Coq.Lists.List.in_combine_r	40	0.0.3.0.1.0.0.0.0.1.1.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros [| ] ? Heq; only 1: intros; only 1: destruct H; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto); only 1: injection H; only 1: auto).	27.027438879	11361
Coq.Lists.List.combine_length	40	0.0.1.0.2.0.0	search with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.101175069809	21
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	0.0.1.2	search with cache (only 1: induction l; only 1: simpl; only 1: trivial; only 1: firstorder  (subst; auto)).	0.0425369739532	7
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	34	search with cache (only 1: left).	0.169512987137	585
Coq.Lists.List.lel_trans	40	1.1.2.2.11	search with cache (only 1: intro y; only 1: unfold lel; only 1: intros H; only 1: rewrite <- H; only 1: auto with arith).	1.67718410492	1193
Coq.Lists.List.lel_cons_cons	40	0.0.0.0	search with cache (only 1: unfold lel; only 1: intros; only 1: simpl; only 1: auto with arith).	0.0397222042084	4
Coq.Lists.List.lel_cons	40	0.1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto with arith).	0.0293350219727	5
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0248839855194	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0120930671692	1
Coq.Lists.List.incl_tl	40	0.3.5	search with cache (only 1: intros n H1 H2 m H3; only 1: simpl; only 1: auto).	0.174106121063	106
Coq.Lists.List.incl_tran	40	1	search with cache (only 1: auto).	0.0165190696716	2
Coq.Lists.List.incl_appl	40	2.5	search with cache (only 1: intros l H; only 1: auto using in_app_or, in_or_app).	0.0870988368988	48
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0158360004425	1
Coq.Lists.List.incl_cons	40	19	search with cache (only 1: firstorder  (subst; auto)).	4.07691287994	2681
Coq.Lists.List.incl_app	40	3.2.1.1.0.5	search with cache (only 1: induction l; only 1: intros l m a; only 1: auto; only 1: intros; only 1: simpl in *; only 1: firstorder).	4.87648105621	1250
Coq.Lists.List.firstn_nil	40	0.0.0.49	search with cache (only 1: induction n as [| n IH]; only 1: simpl; only 1: reflexivity; only 1: auto).	0.706862211227	1390
Coq.Lists.List.firstn_cons	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.0219688415527	4
Coq.Lists.List.firstn_all	40	0.0.0.1.15	search with cache (only 1: induction l; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.274379014969	201
Coq.Lists.List.firstn_all2	40	0.0.4.0.0.0.2.0.2.2.0	search with cache (only 1: induction n; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: now simpl; only 1: simpl; only 1: intros [| a l] H; only 1: auto; only 1: f_equal; only 1: simpl in *; only 1: auto with arith).	26.0386879444	10934
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0147149562836	1
Coq.Lists.List.firstn_le_length	40	1.6.4.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: destruct l; only 1: now simpl; only 1: now simpl; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	19.9145030975	10763
Coq.Lists.List.firstn_length_le	40	0.0.0.1.0.1.0.1.0.0.3.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: induction n; only 1: easy; only 1: simpl; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: intros; only 1: auto with arith; only 1: simpl; only 1: intros; only 1: auto with arith).	32.1341052055	13973
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40	1.6.3.0.0.0	search with cache (only 1: induction l1; only 1: now simpl; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto with arith).	8.55058383942	3308
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	6.0.0.1.0.4.0.0.0.2	search with cache (only 1: induction n as [| k iHk]; only 1: simpl; only 1: intros; only 1: trivial; only 1: destruct l as [| x xs]; only 1: simpl; only 1: apply firstn_all2; only 1: auto with arith; only 1: simpl; only 1: firstorder).	33.6869809628	19034
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0301311016083	4
Coq.Lists.List.skipn_nil	40	1.0.22	search with cache (only 1: destruct n; only 1: now simpl; only 1: now simpl).	0.489789962769	378
Coq.Lists.List.skipn_cons	40	4	search with cache (only 1: auto).	0.0173499584198	5
Coq.Lists.List.skipn_none	40	3.0.3	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: auto).	0.0396158695221	18
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: now destruct l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	2.16870284081	485
Coq.Lists.List.firstn_skipn	40	0.0.0.0.0.1.26	search with cache (only 1: induction n; only 1: reflexivity; only 1: destruct l as [| x xs]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: trivial).	31.7682640553	21350
Coq.Lists.List.firstn_length	40	0.0.1.0.3.1.7	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: induction l; only 1: simpl; only 1: now simpl; only 1: simpl; only 1: auto).	19.5485439301	6976
Coq.Lists.List.skipn_length	40	1.0.1.0.0.2.1.3.3	search with cache (only 1: intros; only 1: revert n; only 1: induction l; only 1: simpl; only 1: now intros []; only 1: intros [| n]; only 1: now simpl; only 1: simpl; only 1: auto).	12.7921819687	5624
Coq.Lists.List.skipn_all	40	1.0.14.1	search with cache (only 1: rewrite <- (firstn_all l)  at 1; only 1: induction l as [| x l]; only 1: now simpl; only 1: now simpl).	0.620514154434	295
Coq.Lists.List.skipn_app	40	0.3.0.3.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: simpl; only 1: destruct l1 as [| x xs]; only 1: auto with arith; only 1: apply iHk).	0.923871994019	387
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.3.2	search with cache (only 1: induction l; only 1: auto; only 1: simpl in *; only 1: f_equal).	0.0368089675903	9
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.2.0.2.0	search with cache (only 1: induction l as [| x l IHl]; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	5.5914311409	1909
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40	0.0.1.0.14.3	search with cache (only 1: intros; only 1: generalize H; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	9.96038007736	6221
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0214447975159	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0474061965942	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	2.3.0.0.6.4	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: intros a0; only 1: now simpl; only 1: simpl; only 1: auto with arith).	2.70860004425	1391
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40	1.0.0.14	search with cache (only 1: fix gcd_greatest 1; only 1: intros a n; only 1: revert a; only 1: auto with arith).	1.61670899391	1079
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	4.3	search with cache (only 1: firstorder; only 1: inversion H).	0.0600569248199	26
Coq.Lists.List.Exists_cons	40	0.0.6.0.0.8	search with cache (only 1: constructor; only 1: firstorder; only 1: inversion_clear H; only 1: eauto; only 1: auto; only 1: firstorder).	1.34937000275	776
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.1.0.14.3.2.16	search with cache (only 1: induction l; only 1: firstorder; only 1: split; only 1: inversion_clear 1; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: intuition).	38.0469331741	29694
Coq.Lists.List.Forall_inv	40	0.0.0	search with cache (only 1: intros; only 1: inversion_clear H; only 1: trivial).	0.0290048122406	3
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	3	search with cache (only 1: abstract now inversion 1).	0.0334320068359	4
Coq.Lists.List.Exists_impl	40	3.4.12.0.28.3.0	search with cache (only 1: intro H; only 1: intro Pdec; only 1: intros a r; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now apply Exists_cons_tl).	18.6597251892	39057
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0698778629303	10
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40	4.2.9.1.0.0	search with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: right; only 1: auto; only 1: trivial).	1.01283502579	1182
Coq.Lists.List.Forall2_refl	40	3	search with cache (only 1: eauto).	0.0153629779816	4
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.9.0.41	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	11.7253639698	10450
Coq.Lists.List.repeat_spec	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	1.0.2.1	search with cache (only 1: repeat intro; only 1: apply permA_skip; only 1: auto; only 1: intuition).	0.0239632129669	8
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.2.0.0.3	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: repeat rewrite <- app_comm_cons; only 1: trivial; only 1: do 2 (etransitivity; try eassumption)).	0.29776597023	79
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	7.0.3.1.1.3.20	search with cache (only 1: induction l; only 1: simpl; only 1: now apply permA_skip; only 1: simpl; only 1: etransitivity; only 1: now apply permA_swap; only 1: firstorder).	37.7086720467	13790
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0970060825348	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: eauto).	0.0295059680939	6
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0172309875488	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.5.0.7	search with cache (only 1: split; only 1: intros H; only 1: inversion H; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.44402098656	767
Coq.Lists.SetoidList.InA_nil	40	29	search with cache (only 1: now subst).	3.09677505493	2287
Coq.Lists.SetoidList.InA_alt	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: firstorder; only 1: subst; only 1: auto).	1.06493592262	321
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	0.0.8	search with cache (only 1: red; only 1: intuition; only 1: invlist InA).	0.079803943634	30
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.1.0.1.0.6.9	search with cache (only 1: intros l1 l2; only 1: split; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using LocallySorted; only 1: induction 1; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto).	12.3668179512	10839
Coq.Lists.SetoidList.equivlist_equiv	40	22	search with cache (only 1: firstorder).	4.46738004684	3059
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40
Coq.Lists.SetoidList.In_InA	40	1.1.0.0.1	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: subst; only 1: auto).	0.189824104309	8
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.0.0.1	search with cache (only 1: split; only 1: intros; only 1: invlist InA; only 1: auto; only 1: auto).	0.0428349971771	6
Coq.Lists.SetoidList.InA_double_head	40	0.0.0.1.4	search with cache (only 1: intuition; only 1: inv; only 1: auto; only 1: auto; only 1: auto).	0.0697720050812	10
Coq.Lists.SetoidList.InA_permute_heads	40	0.1	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.229608058929	3
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.0	search with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: auto).	0.0287990570068	5
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.0	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0593709945679	3
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0832660198212	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.12	search with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	5.66195178032	1835
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	3.0.0.0.0.4.0.3.4.31	search with cache (only 1: intros; only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	14.7671840191	5916
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	3.0.1.0	search with cache (only 1: simple induction l; only 1: constructor; only 1: intros; only 1: intuition).	0.333265066147	25
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.054279088974	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.0.0.0.1.1.3.27	search with cache (only 1: induction l1; only 1: intros; only 1: inv; only 1: eauto; only 1: intros; only 1: inv; only 1: constructor; only 1: auto).	4.79848313332	5168
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.0.6.0.1.0.2.5	search with cache (only 1: induction 1; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto; only 1: constructor; only 1: auto; only 1: auto).	5.89098215103	1608
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.05317902565	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	11.0	search with cache (only 1: intros; only 1: now rewrite H).	0.557700872421	184
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.eq_dec	40	0.2	search with cache (only 1: decide equality; only 1: decide equality).	0.37371301651	79
Coq.NArith.BinNat.discr	40
Coq.NArith.BinNat.peano_rect_base	40	2.0	search with cache (only 1: revert P a f; only 1: intuition).	0.0200259685516	4
Coq.NArith.BinNat.peano_rect_succ	40
Coq.NArith.BinNat.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.014622926712	1
Coq.NArith.BinNat.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0855209827423	5
Coq.NArith.BinNat.bi_induction	40
Coq.NArith.BinNat.recursion_wd	40
Coq.NArith.BinNat.recursion_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.016676902771	2
Coq.NArith.BinNat.recursion_succ	40
Coq.NArith.BinNat.one_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0155208110809	2
Coq.NArith.BinNat.two_succ	40	0	search with cache (only 1: auto).	0.0116658210754	1
Coq.NArith.BinNat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0093457698822	1
Coq.NArith.BinNat.pos_pred_spec	40	0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0262229442596	5
Coq.NArith.BinNat.succ_pos_spec	40	0.0.3	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0207839012146	6
Coq.NArith.BinNat.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.2.1.0.0.0.2.3	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: simpl; only 1: trivial).	6.19927096367	4026
Coq.NArith.BinNat.succ_pos_pred	40	0.0.0.0.0.0.0.0.1.2.0.0.2	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	6.9491610527	3632
Coq.NArith.BinNat.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0212390422821	3
Coq.NArith.BinNat.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0228538513184	3
Coq.NArith.BinNat.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0214750766754	1
Coq.NArith.BinNat.add_0_l	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0216240882874	3
Coq.NArith.BinNat.add_succ_l	40
Coq.NArith.BinNat.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0145831108093	1
Coq.NArith.BinNat.sub_succ_r	40
Coq.NArith.BinNat.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0134160518646	1
Coq.NArith.BinNat.mul_succ_l	40
Coq.NArith.BinNat.eqb_eq	40	4.1.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.231728076935	65
Coq.NArith.BinNat.ltb_lt	40
Coq.NArith.BinNat.leb_le	40
Coq.NArith.BinNat.compare_eq_iff	40	3.11.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	9.143846035	4798
Coq.NArith.BinNat.compare_lt_iff	40	2.0	search with cache (only 1: unfold ltb, lt; only 1: now split).	0.0190088748932	4
Coq.NArith.BinNat.compare_le_iff	40	0	search with cache (only 1: reflexivity).	0.0133080482483	1
Coq.NArith.BinNat.compare_antisym	40
Coq.NArith.BinNat.min_l	40
Coq.NArith.BinNat.min_r	40
Coq.NArith.BinNat.max_l	40
Coq.NArith.BinNat.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: easy'; only 1: now destruct compare; only 1: trivial).	0.0371131896973	7
Coq.NArith.BinNat.lt_succ_r	40
Coq.NArith.BinNat.double_spec	40	2	search with cache (only 1: reflexivity).	0.0713338851929	3
Coq.NArith.BinNat.succ_double_spec	40
Coq.NArith.BinNat.double_add	40	0.0.0.0.0.0.1.1.9	search with cache (only 1: symmetry; only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.27982807159	793
Coq.NArith.BinNat.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.0186519622803	1
Coq.NArith.BinNat.double_mul	40	0	search with cache (only 1: now destruct n, m).	0.0170648097992	1
Coq.NArith.BinNat.succ_double_mul	40
Coq.NArith.BinNat.div2_double	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0233938694	3
Coq.NArith.BinNat.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0130081176758	1
Coq.NArith.BinNat.double_inj	40
Coq.NArith.BinNat.succ_double_inj	40	0.4.0.4.0.0.2.12	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	14.981194973	14219
Coq.NArith.BinNat.succ_double_lt	40
Coq.NArith.BinNat.double_lt_mono	40	3.1	search with cache (only 1: intro H2; only 1: now destruct n, m).	0.304628133774	117
Coq.NArith.BinNat.double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.053878068924	9
Coq.NArith.BinNat.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0642809867859	11
Coq.NArith.BinNat.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: auto; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.059033870697	10
Coq.NArith.BinNat.compare_0_r	40	2.21	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.858603000641	631
Coq.NArith.BinNat.pow_0_r	40	1	search with cache (only 1: now nzsimpl').	0.0904099941254	2
Coq.NArith.BinNat.pow_succ_r	40
Coq.NArith.BinNat.pow_neg_r	40	4.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0836448669434	6
Coq.NArith.BinNat.square_spec	40
Coq.NArith.BinNat.size_log2	40	9.4.0.0.0.4	search with cache (only 1: destruct n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: now destruct p).	23.1894738674	11187
Coq.NArith.BinNat.size_gt	40
Coq.NArith.BinNat.size_le	40
Coq.NArith.BinNat.log2_spec	40
Coq.NArith.BinNat.log2_nonpos	40	15	search with cache (only 1: now destruct n).	1.81222891808	1398
Coq.NArith.BinNat.even_spec	40
Coq.NArith.BinNat.odd_spec	40
Coq.NArith.BinNat.pos_div_eucl_spec	40
Coq.NArith.BinNat.div_eucl_spec	40
Coq.NArith.BinNat.div_mod'	40
Coq.NArith.BinNat.div_mod	40	0.0.0.1	search with cache (only 1: intros Hy; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0336620807648	5
Coq.NArith.BinNat.pos_div_eucl_remainder	40
Coq.NArith.BinNat.mod_lt	40
Coq.NArith.BinNat.mod_bound_pos	40
Coq.NArith.BinNat.sqrtrem_sqrt	40
Coq.NArith.BinNat.sqrtrem_spec	40
Coq.NArith.BinNat.sqrt_spec	40
Coq.NArith.BinNat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0179779529572	2
Coq.NArith.BinNat.ggcd_gcd	40
Coq.NArith.BinNat.ggcd_correct_divisors	40
Coq.NArith.BinNat.gcd_divide_l	40
Coq.NArith.BinNat.gcd_divide_r	40	0.3.2.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (EQ, EQ'); only 1: exists bb; only 1: now rewrite mul_comm).	0.969102144241	405
Coq.NArith.BinNat.gcd_greatest	40
Coq.NArith.BinNat.gcd_nonneg	40	2.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: apply le_0_l).	0.0922029018402	14
Coq.NArith.BinNat.testbit_even_0	40
Coq.NArith.BinNat.testbit_odd_0	40	0.4	search with cache (only 1: simpl; only 1: now destruct a).	0.141707897186	12
Coq.NArith.BinNat.testbit_succ_r_div2	40
Coq.NArith.BinNat.testbit_odd_succ	40
Coq.NArith.BinNat.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0326201915741	4
Coq.NArith.BinNat.testbit_neg_r	40	15.3	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.419034004211	271
Coq.NArith.BinNat.shiftr_succ_r	40
Coq.NArith.BinNat.shiftl_succ_r	40
Coq.NArith.BinNat.shiftr_spec	40
Coq.NArith.BinNat.shiftl_spec_high	40
Coq.NArith.BinNat.shiftl_spec_low	40
Coq.NArith.BinNat.div2_spec	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0183990001678	3
Coq.NArith.BinNat.pos_lxor_spec	40
Coq.NArith.BinNat.lxor_spec	40
Coq.NArith.BinNat.pos_lor_spec	40
Coq.NArith.BinNat.lor_spec	40
Coq.NArith.BinNat.pos_land_spec	40
Coq.NArith.BinNat.land_spec	40
Coq.NArith.BinNat.pos_ldiff_spec	40
Coq.NArith.BinNat.ldiff_spec	40
Coq.NArith.BinNat.gt_lt_iff	40	4.2.0.5.0	search with cache (only 1: unfold ltb, lt; only 1: intuition; only 1: now rewrite compare_antisym, H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: assumption).	4.12276101112	1774
Coq.NArith.BinNat.gt_lt	40	1.1.2	search with cache (only 1: unfold lt, gt; only 1: intros; only 1: now rewrite compare_antisym, H).	0.205780029297	41
Coq.NArith.BinNat.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0112669467926	1
Coq.NArith.BinNat.ge_le_iff	40
Coq.NArith.BinNat.ge_le	40	2.6.3.9	search with cache (only 1: destruct (le_gt_cases m n); only 1: auto; only 1: rewrite le_lteq; only 1: now left).	39.5062711239	21191
Coq.NArith.BinNat.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0121479034424	1
Coq.NArith.BinNat.pos_pred_shiftl_low	40
Coq.NArith.BinNat.pos_pred_shiftl_high	40
Coq.NArith.BinNat.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0.0	search with cache (only 1: rewrite Pos.eqb_eq; only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0386860370636	2
Coq.NArith.Ndec.Neqb_Ncompare	40	0.0.0.1.0.7.0.42.28.0.21	search with cache (only 1: symmetry; only 1: apply N.eqb_eq in H; only 1: destruct H as [H2 H3]; only 1: destruct n; only 1: reflexivity; only 1: induction p; only 1: simpl; only 1: trivial; only 1: auto; only 1: simpl; only 1: trivial).	19.9249749184	56710
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0289130210876	1
Coq.NArith.Ndec.Neqb_complete	40	0.0.1	search with cache (only 1: intro H; only 1: apply N.eqb_eq in H; only 1: assumption).	0.0300629138947	4
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	1.2.1.12	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: congruence).	0.611069917679	429
Coq.NArith.Ndec.Ndiv2_eq	40
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0582640171051	4
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	0.0.1.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: intro LT; only 1: intros H; only 1: N.order).	0.053750038147	13
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.5.4.0.3.10.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: apply not_true_is_false in H; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	9.86814498901	9841
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40	1.0.0.2.2.10.2.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: rewrite !N2Nat.inj_double; only 1: apply le_S_n; only 1: apply le_n_S, mult_le_compat_l; only 1: now apply leb_complete).	10.2161791325	9453
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.1.4.0.1	search with cache (only 1: elim (sumbool_of_bool (Nleb a b)); only 1: rewrite !Nleb_Nle; only 1: easy'; only 1: unfold Nleb; only 1: trivial).	0.24574804306	100
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	0.1.3.74	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	36.7511079311	37831
Coq.NArith.Ndec.Nmin_le_2	40	3.0.36	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.50732588768	1720
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0500931739807	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	11.7.0	search with cache (only 1: intros; only 1: N.bitwise; only 1: now destruct a).	1.01148891449	812
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	0.0.0.4.0.1.14.5.7.9.4	search with cache (only 1: intros m; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: intuition; only 1: simpl; only 1: f_equal; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	18.4039800167	23574
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.4.4.10	search with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: trivial).	0.801583051682	857
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.1.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0567510128021	7
Coq.NArith.Ndist.ni_min_inf_l	40	1	search with cache (only 1: trivial).	0.0266768932343	2
Coq.NArith.Ndist.ni_min_inf_r	40	1.8	search with cache (only 1: intro n; only 1: now destruct n).	0.0910608768463	54
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.1.8.13.0	search with cache (only 1: unfold ni_le; only 1: intros EQ; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	4.18865299225	4220
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	2.5.6.0.4.0.28	search with cache (only 1: unfold ni_le; only 1: intro; only 1: intros; only 1: inversion H; only 1: destruct (Nat.min_spec m n) as [(H', E')| (H', E')]; only 1: intuition Nat.order; only 1: Nat.Private_Tac.order).	23.3783290386	29092
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	1.0	search with cache (only 1: intros; only 1: now destruct a).	0.0359439849854	3
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0	search with cache (only 1: intros n m; only 1: split).	0.0306010246277	3
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: reflexivity).	0.0268340110779	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.0338280200958	3
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.0.2.1.0.0.1.2.0.8	search with cache (only 1: destruct a, a'; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	1.58905911446	1212
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.1.0.3.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply IH || now rewrite orb_false_r; only 1: simpl; only 1: apply N.pos_lor_spec).	0.986366033554	529
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.3.1.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.461154937744	201
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_true_r; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.35257601738	106
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.1.1.6.4.6	search with cache (only 1: intros [| n]; only 1: split; only 1: induction n; only 1: split; only 1: easy; only 1: easy).	2.76467204094	2586
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.0335011482239	2
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	1.7.7	search with cache (only 1: intros m; only 1: apply N.eqb_eq; only 1: now destruct m).	0.991566181183	896
Coq.NArith.Ndigits.Ndiv2_double	40	1.3.0.7.21.8	search with cache (only 1: intros m H; only 1: symmetry; only 1: destruct m; only 1: reflexivity; only 1: unfold N.div2, N.to_nat; only 1: now destruct p).	38.6085639	35742
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	3.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: trivial).	0.0459570884705	7
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	4.93399691582	2289
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.9.0.0	search with cache (only 1: destruct a; only 1: intros m; only 1: now destruct m; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	7.09322595596	3750
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.4.11.17	search with cache (only 1: intro n; only 1: destruct n; only 1: easy; only 1: now exists p).	1.71653294563	2767
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	0	search with cache (only 1: N.order).	0.0271480083466	1
Coq.NArith.Nnat.id	40
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	7.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).	0.361346006393	239
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40	1.1.0.36.2.0	search with cache (only 1: destruct a; only 1: now Morphisms.f_equiv; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now Morphisms.f_equiv).	29.8712940216	25196
Coq.NArith.Nnat.inj_succ	40	1.0.2.0.0.0.14	search with cache (only 1: symmetry; only 1: destruct a; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.527004003525	761
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_mul	40	12.15.19.18.16	search with cache (only 1: symmetry; only 1: Nat.bitwise; only 1: revert a; only 1: fix even_spec 1; only 1: trivial).	13.5869300365	14461
Coq.NArith.Nnat.inj_sub	40
Coq.NArith.Nnat.inj_pred	40
Coq.NArith.Nnat.inj_div2	40
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_max	40
Coq.NArith.Nnat.inj_min	40
Coq.NArith.Nnat.inj_iter	40
Coq.NArith.Nnat.id	40	2.3.16.4	search with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n; only 1: now subst; only 1: apply SuccNat2Pos.id_succ).	1.08253383636	731
Coq.NArith.Nnat.inj	40
Coq.NArith.Nnat.inj_iff	40	0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: subst n'; only 1: now rewrite <- ?N.succ_le_mono).	0.0260021686554	8
Coq.NArith.Nnat.inj_double	40
Coq.NArith.Nnat.inj_succ_double	40
Coq.NArith.Nnat.inj_succ	40	1.9	search with cache (only 1: simpl; only 1: now destruct n).	0.0912959575653	106
Coq.NArith.Nnat.inj_pred	40	0.6	search with cache (only 1: symmetry; only 1: nat2N).	0.0180518627167	8
Coq.NArith.Nnat.inj_add	40
Coq.NArith.Nnat.inj_sub	40	0.6.31	search with cache (only 1: N.bitwise; only 1: f_equal; only 1: nat2N).	5.58286309242	2899
Coq.NArith.Nnat.inj_mul	40	0	search with cache (only 1: nat2N).	0.0162768363953	1
Coq.NArith.Nnat.inj_div2	40	0	search with cache (only 1: nat2N).	0.0143251419067	1
Coq.NArith.Nnat.inj_compare	40
Coq.NArith.Nnat.inj_min	40	0	search with cache (only 1: nat2N).	0.0168027877808	1
Coq.NArith.Nnat.inj_max	40	0	search with cache (only 1: nat2N).	0.0812139511108	1
Coq.NArith.Nnat.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	14.0	search with cache (only 1: destruct x; only 1: destr_bool).	0.381833076477	237
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40	4.0.3.0	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: destruct m; only 1: easy).	0.700424194336	144
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0276927947998	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!Nat.eqb_eq, Exx', Eyy').	0.0379769802094	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, BinInt.Z.eqb_eq).	0.036906003952	1
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinNat.N.eqb_eq, Exx', Eyy').	0.050008058548	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40	2.0.1.1.0.9.0.0.4	search with cache (only 1: intros; only 1: elim s1; only 1: simpl; only 1: Nat.nzsimpl; only 1: auto with *; only 1: intros n1 n2 H; only 1: simpl; only 1: Nat.nzsimpl; only 1: auto).	29.4076311588	13488
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	6.1.0.0.0.3	search with cache (only 1: elim s; only 1: simpl; only 1: easy; only 1: simpl; only 1: intros a s' Rec; only 1: t_eqb).	1.24692511559	825
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	2.0.0.0.0.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.0612509250641	8
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.to_N_of_pos	40	3	search with cache (only 1: trivial).	0.0130507946014	4
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.to_N_of_pos	40	7	search with cache (only 1: trivial).	0.0258169174194	8
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.to_N_of_pos	40	2	search with cache (only 1: auto).	0.0122427940369	3
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	125	search with cache (only 1: constructor).	1.15067911148	7956
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.116151094437	3
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	0.0762798786163	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40	0.0.3.0.1.0.0.0.1.2.1	search with cache (only 1: intro; only 1: destruct (Rle_dec x 0); only 1: replace (x ^ 2) with ((- x) ^ 2) by ring; only 1: apply pow_le; only 1: lra; only 1: assert (0 < x) by (apply Rnot_le_gt; assumption); only 1: simpl; only 1: rewrite Rmult_1_r; only 1: assert (0 < x) by (apply Rnot_le_gt; assumption); only 1: assert (0 < x) by (apply Rnot_le_gt; assumption); only 1: apply (Rle_0_sqr x)).	18.6917250156	5908
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	6.1	search with cache (only 1: intro H4; only 1: lra).	0.0893359184265	9
Coq.Reals.Ratan.pos_opp_lt	40	1.4.2.11	search with cache (only 1: replace 0 with (- 0); only 1: intros a Ha; only 1: lra; only 1: apply Ropp_0).	5.82349300385	2986
Coq.Reals.Ratan.tech_opp_tan	40	1.1.2.0.5.4	search with cache (only 1: do 2 intro; only 1: rewrite tan_neg; only 1: intro H14; only 1: generalize PI4_RLT_PI2; only 1: intros; only 1: assumption).	1.94499588013	926
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.2.6.0.3.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: intro; only 1: auto with real; only 1: intros ? ? f; only 1: apply pow_lt; only 1: assumption).	19.277148962	4363
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40	7.0.2.0	search with cache (only 1: intros x; only 1: reg; only 1: apply Rgt_not_eq; only 1: apply plus_Rsqr_gt_0).	2.32660984993	436
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	4.1.19.2	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: now Z.nzsimpl; only 1: auto).	19.1040849686	3572
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	2.2.3.1.20	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: contradiction || auto).	23.4426009655	14695
Coq.Reals.RList.RList_P15	40	3.12	search with cache (only 1: fix gcd_greatest 1; only 1: auto with real).	2.37875199318	1572
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.1.0.10.0.4.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: apply S_pred with 0%nat; only 1: apply Nat.lt_0_succ).	5.11111092567	3553
Coq.Reals.RList.RList_P19	40	48.4.0.0	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: now destruct H; only 1: eauto).	34.8777310848	36140
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.1	search with cache (only 1: intros; only 1: now f_equal).	0.0479340553284	3
Coq.Reals.RList.RList_P22	40
Coq.Reals.RList.RList_P23	40	1.0.0.2.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros s2 n H; only 1: intro m; only 1: simpl; only 1: auto with arith).	0.153491973877	23
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40	2.3.2.0.3.0.2.32	search with cache (only 1: intros n; only 1: intro; only 1: induction n as [| n IH]; only 1: intro; only 1: auto; only 1: intros; only 1: simpl; only 1: now f_equal).	28.533755064	27731
Coq.Reals.RList.RList_P28	40	2.4.6.1.9	search with cache (only 1: induction l as [| a l' Hrec]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: trivial).	1.13460993767	1487
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.0.1.2.0.6.20	search with cache (only 1: cut (0%nat <> 2%nat); only 1: intros cond; only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption; only 1: Nat.order').	3.3382589817	2061
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40	5.8	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	6.36396694183	580
Coq.Reals.Rsigma.sigma_diff_neg	40	0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.10498714447	4
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.0.19	search with cache (only 1: intuition; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	1.24373984337	724
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	0.0.0.0.1.1.2.4.2.2	search with cache (only 1: intros r1 r2; only 1: intros f Hf; only 1: unfold Rle; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2); only 1: intros a b; only 1: case (Rle_dec r1 r2); only 1: clear a b; only 1: auto with real; only 1: auto with real).	7.44020986557	6480
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	1.2.0.0.1.6.0	search with cache (only 1: unfold Rgt; only 1: do 2 intro; only 1: intros y (Hy, Hy'); only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	1.64098000526	1277
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.5.3.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intros H; only 1: auto with real).	0.92015504837	562
Coq.Reals.Rbasic_fun.Rmin_left	40	0.0.0.0.1.1.2	search with cache (only 1: intros r1 r2; only 1: intro H; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: generalize (Rtotal_order r1 r2); only 1: tauto).	0.922196865082	262
Coq.Reals.Rbasic_fun.Rmin_right	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: intro H1; only 1: now elim H).	0.104724884033	7
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.100150108337	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.2.0.0.0.9.0.1	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	4.50218200684	2574
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.0.0.0.0.1.1	search with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: intros; only 1: assumption).	0.5317299366	163
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.1.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto).	0.54186797142	32
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.2.0.1.0.7	search with cache (only 1: intros x y; only 1: unfold Rmin; only 1: intro; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with real).	2.72321605682	1961
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.222237825394	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.10339307785	8
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: reflexivity).	0.260159015656	17
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0939540863037	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0992870330811	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: eauto using Rle_trans, Rle_refl).	0.0978789329529	7
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0997729301453	7
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.612547874451	246
Coq.Reals.Rbasic_fun.Rcase_abs	40	1.1.0.0.1.5.0	search with cache (only 1: intro; only 1: unfold IZR; only 1: edestruct Rle_lt_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: auto with real).	0.871123075485	577
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.4.0.1.0.0.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	2.08429408073	625
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40	0.0.0.0.1.0.4.1.1	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real; only 1: assumption).	4.59667301178	2141
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40	1.0.0.0.0.0.0.0.1.3.6.3	search with cache (only 1: intros; only 1: unfold Rmax; only 1: apply Rmin_case_strong; only 1: case (Rle_dec x y); only 1: intros H1 H2; only 1: auto with real; only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: case (Rle_dec x y); only 1: intros; only 1: auto with real; only 1: auto with real).	13.4523508549	5938
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.935381174088	138
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.lt_strorder	40
Coq.Reals.ROrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: subst; only 1: reflexivity).	0.0423431396484	3
Coq.Reals.ROrderedType.le_lteq	40	0	search with cache (only 1: intuition).	0.0425710678101	1
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	4.0.5.0	search with cache (only 1: intro; only 1: unfold fact at 1; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.15224909782	347
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.1.3.1.2.0.0.9.10	search with cache (only 1: unfold IZR; only 1: apply N.le_ind; only 1: simpl; only 1: auto with real; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: ring).	13.6526808739	9099
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.16.3	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	5.02762103081	3530
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.16.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	4.48012304306	2373
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0.8.0	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	0.421022891998	63
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.0	search with cache (only 1: intros n m H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.116420030594	5
Coq.Reals.Runcountable.increase_seq_transit	40	1.20.27	search with cache (only 1: intros n IH; only 1: fix ind_0_1_SS 1; only 1: assumption).	6.98637199402	5892
Coq.Reals.Runcountable.decrease_seq_transit	40	6.0.28.16.6	search with cache (only 1: intros l2; only 1: intros b Hb; only 1: fix ind_0_1_SS 1; only 1: intros H; only 1: auto).	22.4604458809	33117
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	0.0.1.0.0.2.1.7.4.9	search with cache (only 1: intro n; only 1: apply Rlt_dichotomy_converse; only 1: right; only 1: red; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	13.8343479633	8460
Coq.Reals.Rfunctions.fact_simpl	40	1.1.0	search with cache (only 1: intros; only 1: simpl; only 1: trivial).	0.0208430290222	5
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0.0	search with cache (only 1: intro; only 1: simpl; only 1: trivial).	0.0223050117493	3
Coq.Reals.Rfunctions.pow_1	40	2.0	search with cache (only 1: intros; only 1: ring).	0.0420320034027	4
Coq.Reals.Rfunctions.pow_add	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0496060848236	8
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.5.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto with real).	0.0407569408417	22
Coq.Reals.Rfunctions.tech_pow_Rplus	40	2.8.2.1	search with cache (only 1: intros n m p; only 1: pattern m, n; only 1: repeat rewrite S_INR; only 1: ring).	0.876628160477	556
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: intro; only 1: auto with real; only 1: simpl; only 1: intros; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.077183008194	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	4.1.4.0.6.0.0.1	search with cache (only 1: unfold IZR at 1; only 1: simple induction n; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: unfold IZR; only 1: rewrite H; only 1: apply Rmult_1_l).	21.2869307995	9397
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	7.12.0	search with cache (only 1: simpl; only 1: intro r; only 1: ring_Rsqr).	2.55406808853	2146
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	0.0.21	search with cache (only 1: fix gcd_greatest 1; only 1: intros a b Ha; only 1: auto).	8.96809196472	4222
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.0135219097137	1
Coq.Reals.Rfunctions.powerRZ_1	40	1.3.0	search with cache (only 1: intro; only 1: simpl; only 1: auto with real).	0.0397498607635	7
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.1.1.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: intro; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0521359443665	10
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	2.0.5.0.6	search with cache (only 1: induction n as [| n Hrecn]; only 1: auto with real arith; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: trivial).	7.50440597534	2215
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	2.1.13	search with cache (only 1: intros x n; only 1: apply Rle_ge; only 1: apply Rabs_pos).	2.72515296936	2203
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40	0.0.9.17.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: apply Rmult_le_pos; only 1: auto with real; only 1: apply H; only 1: apply le_n).	25.4076840878	19727
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	search with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.073333978653	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.1.0.0.4.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.382547140121	121
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	2.1.0	search with cache (only 1: simpl; only 1: intros; only 1: apply Nat.div2_double).	0.0780439376831	6
Coq.Reals.Exp_prop.div2_S_double	40	1.0	search with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0485379695892	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0743198394775	4
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	5.2.3	search with cache (only 1: intros f x X; only 1: intros; only 1: firstorder).	0.976179838181	306
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0.6	search with cache (only 1: intros z1 z2 H; only 1: intros; only 1: field; only 1: auto).	0.245323896408	66
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	11.0	search with cache (only 1: intros; only 1: firstorder).	1.51917314529	440
Coq.Reals.Rpower.D_in_ext	40	0.3.0.0.4	search with cache (only 1: intros f g l H; only 1: intros; only 1: unfold D_in; only 1: elim H0; only 1: auto).	3.32314419746	582
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	6.0.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: destruct H; only 1: assumption).	0.397248029709	214
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40	27.10.14	search with cache (only 1: destruct (CRltLinear R); only 1: intros; only 1: apply R).	7.80756497383	9552
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40	7.4	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	2.1580619812	272
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	2.6	search with cache (only 1: right; only 1: reflexivity).	0.120113134384	41
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.096381187439	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	2.0.0.4	search with cache (only 1: intros n H; only 1: eapply Rlt_asym; only 1: eauto; only 1: trivial).	0.123183965683	34
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.14.3.15	search with cache (only 1: intros a b H; only 1: intros Hb; only 1: subst a; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	39.9690830708	23183
Coq.Reals.RIneq.Rgt_not_eq	40	0.8.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: destruct H0; only 1: eauto).	0.801446914673	443
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.8.0.0.0.0.0.5.1	search with cache (only 1: intros; only 1: intuition; only 1: apply (Rlt_irrefl r1); only 1: pattern r1 at 2; only 1: rewrite H0; only 1: trivial; only 1: apply (Rlt_irrefl r1); only 1: destruct H0; only 1: eauto).	8.43240785599	6767
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	0.0.0.4.1.1	search with cache (only 1: intros; only 1: rewrite Rlt_def in H; only 1: unfold Rle; only 1: left; only 1: rewrite Rlt_def; only 1: exact H).	0.465559005737	89
Coq.Reals.RIneq.Rgt_ge	40	2.23.5	search with cache (only 1: intros n m H; only 1: left; only 1: auto).	11.7153270245	2465
Coq.Reals.RIneq.Rle_ge	40	4.5.0.0.1	search with cache (only 1: induction 1; only 1: red; only 1: tauto; only 1: destruct H; only 1: now left || now right).	3.51797223091	1312
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.115900039673	6
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0881578922272	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0826239585876	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.128362894058	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.110790014267	3
Coq.Reals.RIneq.Rnot_lt_le	40	3.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.159415006638	16
Coq.Reals.RIneq.Rnot_gt_le	40	4.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real; only 1: red; only 1: contradiction).	1.3559820652	519
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.0.0.2.1	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: tauto; only 1: red; only 1: auto with real; only 1: red; only 1: tauto).	0.416353940964	112
Coq.Reals.RIneq.Rnot_lt_ge	40	3.0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.118822813034	9
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.126837015152	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.108088970184	5
Coq.Reals.RIneq.Rle_not_lt	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: red; only 1: tauto).	0.187732934952	19
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.295747041702	52
Coq.Reals.RIneq.Rle_not_gt	40	0.14.1.2	search with cache (only 1: intros; only 1: intro abs; only 1: contradict H; only 1: auto with real).	3.35325098038	2329
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.0.2	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.222422838211	38
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: destruct 1; only 1: auto with rorders).	0.092698097229	2
Coq.Reals.RIneq.Req_ge	40	4.1	search with cache (only 1: destruct 1; only 1: now left || now right).	0.100517988205	7
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 H; only 1: auto with real).	0.102998018265	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: auto).	0.093966960907	3
Coq.Reals.RIneq.Rgt_asym	40	0.3.1.0.19	search with cache (only 1: intro r; only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	3.25219607353	3796
Coq.Reals.RIneq.Rle_antisym	40	0.0.0.7.2.8.0.6	search with cache (only 1: unfold Rle; only 1: intros n m H; only 1: intuition; only 1: apply Rquot1; only 1: absurd (m < n)%nat; only 1: apply Rle_not_lt; only 1: auto with real; only 1: auto with arith).	9.85854101181	8666
Coq.Reals.RIneq.Rge_antisym	40	2.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: auto with real).	0.104515075684	5
Coq.Reals.RIneq.Rle_le_eq	40	6.3	search with cache (only 1: intros a b; only 1: intuition).	0.454614162445	117
Coq.Reals.RIneq.Rge_ge_eq	40	2	search with cache (only 1: intuition).	0.124886989594	14
Coq.Reals.RIneq.Rlt_eq_compat	40	1.15	search with cache (only 1: intros a n Hn; only 1: congruence).	0.888974905014	665
Coq.Reals.RIneq.Rgt_eq_compat	40	0.2.3.3	search with cache (only 1: destruct 1; only 1: intros; only 1: subst; only 1: tauto).	0.399553060532	195
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.113002061844	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40	0.3.4.17.2	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: repeat red; only 1: unfold Rgt; only 1: unfold Rge; only 1: intuition eauto  2).	22.421022892	11795
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.1.0.0.1.1.18	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3; only 1: right; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	21.3027038574	7886
Coq.Reals.RIneq.Rgt_dec	40	1.5.13.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	9.16416287422	5578
Coq.Reals.RIneq.Rge_dec	40
Coq.Reals.RIneq.Rlt_le_dec	40	0.3.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.379281997681	40
Coq.Reals.RIneq.Rgt_ge_dec	40	0.1.2.0.3	search with cache (only 1: unfold Rge; only 1: intuition; only 1: generalize (Rlt_asym r1 r2); only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: intuition eauto  3).	0.640310049057	96
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.176263093948	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.391304016113	78
Coq.Reals.RIneq.Rlt_or_le	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.143943071365	4
Coq.Reals.RIneq.Rgt_or_ge	40	0.0.0.0.1.8	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.579381942749	252
Coq.Reals.RIneq.Rle_or_lt	40	1.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.303546905518	40
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.250303983688	42
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.4.0.0	search with cache (only 1: intros r1 r2; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.473588943481	44
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.23283290863	23
Coq.Reals.RIneq.Rplus_ne	40	1.0.10.0	search with cache (only 1: intros; only 1: split; only 1: ring; only 1: ring).	0.457787036896	216
Coq.Reals.RIneq.Rplus_opp_l	40	0.5.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.80194997787	12
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.5	search with cache (only 1: intros n m p; only 1: now intros ->).	0.1246778965	26
Coq.Reals.RIneq.Rplus_eq_compat_r	40	8.0	search with cache (only 1: intros r r1 r2; only 1: congruence).	0.434738874435	44
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	0.0.0.0.0.1.0.3.1	search with cache (only 1: intros; only 1: unfold IZR; only 1: rewrite RinvImpl.Rinv_def; only 1: rewrite Rmult_comm; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: apply CReal_inv_l).	26.3719382286	1305
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.129221916199	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.120831012726	3
Coq.Reals.RIneq.Rmult_0_r	40	2.3	search with cache (only 1: intros; only 1: ring).	0.142425060272	24
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.100248098373	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.141407966614	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.120424985886	5
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	search with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0910158157349	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.1	search with cache (only 1: intros r r1 r2; only 1: congruence).	0.0994169712067	5
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	0.12.0.12.10	search with cache (only 1: intuition; only 1: rewrite H0; only 1: ring; only 1: rewrite H0; only 1: ring).	16.9247779846	12862
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.2	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.103587150574	5
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.090311050415	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	6.1	search with cache (only 1: intro H; only 1: intuition).	0.180922985077	25
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	3.0.1	search with cache (only 1: intro Hnotz; only 1: intros n m; only 1: auto with real).	0.111428022385	7
Coq.Reals.RIneq.Rmult_plus_distr_r	40	2.1.0.0.0	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	0.119567155838	8
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: auto with *).	0.0894808769226	1
Coq.Reals.RIneq.Ropp_0	40	3	search with cache (only 1: ring).	0.0948429107666	4
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.4	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.477681159973	109
Coq.Reals.RIneq.Ropp_involutive	40	0.51.0	search with cache (only 1: intros; only 1: symmetry; only 1: ring).	5.26037597656	10422
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	5.4	search with cache (only 1: intros a n; only 1: ring).	0.240387916565	53
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.5	search with cache (only 1: intros n m; only 1: field).	0.241939067841	39
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.115239858627	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.1	search with cache (only 1: intros; only 1: ring).	0.105478048325	3
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.103554964066	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.103668928146	2
Coq.Reals.RIneq.Rminus_0_r	40	2.5.0	search with cache (only 1: intro; only 1: unfold IZR; only 1: ring).	0.137897014618	19
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.102094173431	2
Coq.Reals.RIneq.Ropp_minus_distr	40	2.2	search with cache (only 1: intros a b; only 1: ring).	0.10281586647	6
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.105293035507	2
Coq.Reals.RIneq.Rminus_diag_eq	40	5.0.1.0	search with cache (only 1: intros r b; only 1: intros; only 1: rewrite H; only 1: ring).	0.12752199173	11
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	5.1.12	search with cache (only 1: intro; only 1: intro n; only 1: ring).	2.04118800163	1206
Coq.Reals.RIneq.Rminus_eq_contra	40	2.1.0.0.0	search with cache (only 1: intros; only 1: red; only 1: unfold Rminus; only 1: intro; only 1: auto with real).	0.343189001083	34
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.120928049088	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.126387834549	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.0	search with cache (only 1: intros; only 1: ring).	0.128097057343	12
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.3.19	search with cache (only 1: intros Hm; only 1: intros; only 1: field; only 1: trivial).	14.0446119308	5371
Coq.Reals.RIneq.Rinv_mult_distr	40	3.0.2.3.7	search with cache (only 1: intros a b Hb; only 1: unfold IZR, IPR; only 1: intros; only 1: field; only 1: auto with real).	12.8958392143	1733
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.113431930542	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.0.0.0.0.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: trivial).	0.184961080551	11
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.4.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.400110960007	33
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.6.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.930562973022	133
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	1.5.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.242453098297	11
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.1.0.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.113571166992	10
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.3.8.3.1	search with cache (only 1: do 3 intro; only 1: unfold Rle; only 1: intros [?| ?]; only 1: auto with real; only 1: auto with real).	6.24229884148	2055
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.5.2.5.2	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	3.46827602386	1255
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.3.0.0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	2.32183504105	689
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.1.0.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.107754945755	9
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.10356593132	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.0.5	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.146020174026	14
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	3	search with cache (only 1: auto with real).	0.107429027557	11
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	5	search with cache (only 1: firstorder).	0.165632009506	42
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.159620046616	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.190149068832	10
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.2.2.3.2	search with cache (only 1: destruct 1; only 1: red; only 1: auto with zarith real; only 1: red; only 1: auto with real).	2.15489315987	443
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	2.4	search with cache (only 1: intros; only 1: auto with real).	0.268231868744	62
Coq.Reals.RIneq.Ropp_le_contravar	40	1.4.0	search with cache (only 1: unfold Rle; only 1: intros a b; only 1: intuition).	0.527768135071	59
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0.1.2.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: auto with real; only 1: intro; only 1: auto with real).	0.243016004562	10
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.107481002808	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.121185064316	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.107987880707	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.4	search with cache (only 1: intros a Ha; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.137732982635	17
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.11314201355	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0.4	search with cache (only 1: unfold Rgt; only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.179287910461	30
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40	2.0.0.1	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.11693406105	7
Coq.Reals.RIneq.Rmult_lt_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite <- 2!(Rmult_comm r); only 1: rewrite Rlt_def in H; only 1: do 2 rewrite Rrepr_mult; only 1: apply CRealLtForget; only 1: apply CReal_mult_lt_compat_l; only 1: rewrite <- (Rquot2 0); only 1: unfold IZR in H; only 1: rewrite R0_def in H; only 1: apply CRealLtEpsilon; only 1: exact H; only 1: rewrite Rlt_def in H0; only 1: apply CRealLtEpsilon; only 1: exact H0).	26.5356891155	2904
Coq.Reals.RIneq.Rmult_gt_compat_r	40	3.0.8.2	search with cache (only 1: intros r r1 r2; only 1: red; only 1: intros; only 1: auto with real).	2.09187698364	1561
Coq.Reals.RIneq.Rmult_gt_compat_l	40	3.0.8.3	search with cache (only 1: intros r r1 r2; only 1: red; only 1: intros; only 1: auto with real).	1.19699621201	787
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	4.9	search with cache (only 1: intros a b c Hc; only 1: intuition).	2.04897809029	925
Coq.Reals.RIneq.Rmult_ge_compat_r	40	4.10	search with cache (only 1: intros a b c Hc; only 1: intuition).	3.10156607628	957
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	6.22	search with cache (only 1: intros n m; only 1: intuition).	13.3190360069	7116
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.0.1.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.22931599617	31
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	6.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.210141897202	28
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.1.1	search with cache (only 1: red; only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.229856967926	19
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.1.0.0	search with cache (only 1: red; only 1: intuition; only 1: elim H; only 1: intuition; only 1: intuition).	0.390633821487	6
Coq.Reals.RIneq.Rge_minus	40	0.4.0.0.0.5.7.4.0	search with cache (only 1: destruct 1; only 1: unfold Rgt in H; only 1: red; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r; only 1: red; only 1: auto with real).	21.2543690205	9665
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.4.0.0.0.0.0.0.3.1	search with cache (only 1: intros; only 1: destruct H; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: red; only 1: auto with real).	23.1005039215	7167
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.103451967239	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.106019973755	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.09969592094	253
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	7	search with cache (only 1: apply Rlt_n_Sn).	0.0951881408691	17
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	0.0.9.7.1.4	search with cache (only 1: intros; only 1: simpl; only 1: symmetry; only 1: destruct n; only 1: apply Rplus_0_l; only 1: reflexivity).	8.71492004395	3541
Coq.Reals.RIneq.S_O_plus_INR	40	2.5.0.2.0.1.9.1	search with cache (only 1: intro; only 1: rewrite Rplus_comm; only 1: Nat.nzsimpl; only 1: case n; only 1: simpl; only 1: auto with real; only 1: intros a; only 1: trivial).	27.2205851078	10473
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	0.0.0.1.4	search with cache (only 1: induction n; only 1: unfold Rle; only 1: auto with real; only 1: rewrite S_INR; only 1: auto with real).	0.289959907532	89
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.1.0.0.3	search with cache (only 1: Nat.cases ltac:(n); only 1: intros; only 1: auto with real; only 1: intros n EQ; only 1: discriminate).	0.296892166138	39
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	0.0.1.2.0.1.17	search with cache (only 1: unfold IZR; only 1: intro; only 1: case n; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.50370907784	2630
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.0.9.4	search with cache (only 1: red; only 1: intros a a' H; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto with zarith real).	19.736274004	6589
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	5.87973093987	2301
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.5.0.2	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	1.1605219841	308
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	1.7	search with cache (only 1: intros a; only 1: ring).	0.188671827316	28
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.1.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.424229860306	62
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	4.0.10.0.1	search with cache (only 1: intros x y; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	21.4482309818	9961
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.1	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.123601913452	5
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40	4.24.7	search with cache (only 1: intros LE; only 1: fix even_spec 1; only 1: trivial).	23.5438289642	26346
Coq.Reals.ArithProp.lt_minus_O_lt	40	0.5.2.3.3	search with cache (only 1: intro n; only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: Nat.nzsimpl; only 1: auto).	1.47559499741	1084
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	6.0.0	search with cache (only 1: intros n m; only 1: Nat.nzsimpl; only 1: auto with arith).	0.194666862488	12
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40	0.1.10	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: now destruct n).	1.26020884514	586
Coq.Reals.R_Ifp.fp_nat	40	1.9	search with cache (only 1: intro; only 1: eauto with real).	0.195280790329	64
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0	search with cache (only 1: auto with real).	0.033066034317	1
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity).	0.0532169342041	4
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	0.15	search with cache (only 1: intros n m LE LT; only 1: auto using Rplus_lt_compat with rorders).	2.26659417152	1243
Coq.Reals.Ranalysis2.quadruple	40	7.0	search with cache (only 1: intro; only 1: Lra.lra).	0.0665721893311	9
Coq.Reals.Ranalysis2.quadruple_var	40	2.14.5	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: field).	1.60810804367	1068
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	3.4	search with cache (only 1: intros; only 1: auto).	0.0441119670868	31
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	4.4.18	search with cache (only 1: intros x y; only 1: intros; only 1: firstorder).	1.79411005974	2335
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	41.15	search with cache (only 1: red; only 1: firstorder).	17.3545718193	23887
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	1.0.7	search with cache (only 1: intros a b; only 1: unfold neighbourhood; only 1: firstorder).	0.13674902916	94
Coq.Reals.Rtopology.open_set_P2	40	19.0.2.8.6	search with cache (only 1: red; only 1: intro; only 1: intros P H0 H1 H2; only 1: intro eq_dep_eq; only 1: firstorder).	28.1105949879	33241
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	24	search with cache (only 1: now Z.swap_greater).	0.332875013351	507
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	16.2.3.6	search with cache (only 1: red; only 1: cbn; only 1: intros n1 H' H'0 H'1; only 1: firstorder).	10.2995781898	7525
Coq.Reals.Rtopology.open_set_P6	40	4.0.2.0	search with cache (only 1: unfold open_set; only 1: intros x x' y y'; only 1: intros del1 H; only 1: firstorder).	0.0837869644165	33
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40	11.7.2.12	search with cache (only 1: intro Hyp_F_NE; only 1: red; only 1: unfold closed_set, adherence; only 1: firstorder).	21.7512009144	24094
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40	0.5.3.0.2.14	search with cache (only 1: intro n; only 1: intros Base Step; only 1: unfold EUn; only 1: intros (b, Hb); only 1: subst; only 1: trivial).	3.6587638855	2553
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40
Coq.Reals.Rseries.Un_growing_shift	40	1.0.5	search with cache (only 1: intros LE p Hp1 Hp2; only 1: Nat.nzsimpl; only 1: auto).	0.224878072739	50
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	0.0.1.0.21.11.11	search with cache (only 1: intro; only 1: intro H; only 1: CRelationClasses.simpl_crelation; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: apply cond_pos).	4.5726211071	9605
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	1.2.0.13.0.11	search with cache (only 1: intro q; only 1: red; only 1: intro Hyp; only 1: intros r1 r2 H; only 1: apply Ropp_le_contravar; only 1: auto with real).	14.7265110016	9827
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	6.1.4.14.5.0	search with cache (only 1: intros; only 1: intro; only 1: intros H1; only 1: intro; only 1: unfold opp_fct; only 1: auto with real).	16.0941970348	15694
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40	1.3.1.0.0.3.0	search with cache (only 1: intros; only 1: generalize (derive_increasing_interv_ax a b f pr H); only 1: intro; only 1: elim H4; only 1: elim H4; only 1: intro; only 1: auto with real).	23.6205148697	3524
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	4	search with cache (only 1: trivial).	0.0382418632507	11
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	11.7.0.2.0.1.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: trivial; only 1: auto with real).	38.646310091	13422
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.0945959091187	8
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0680458545685	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.3.11.5	search with cache (only 1: intros n; only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.771999120712	1159
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.10.9	search with cache (only 1: intros EQ; only 1: exists 1%N; only 1: apply derivable_pt_lim_id).	0.569980144501	516
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	0.0.0.0.0.0.0.0.1.2.0.1.4	search with cache (only 1: unfold IZR; only 1: intros a n; only 1: apply derive_pt_eq_0; only 1: intro; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	4.04523205757	2323
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.389526844025	46
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	2.0.3	search with cache (only 1: fix le_div2 1; only 1: intro; only 1: contradiction || auto).	0.199573040009	40
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	10.0.0.4	search with cache (only 1: red; only 1: intros; only 1: unfold EUn; only 1: firstorder).	1.02571296692	769
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0383298397064	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	2.3.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.528800010681	65
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0375919342041	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	3.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.203430891037	31
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.8	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	0.959532022476	273
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l; only 1: apply PI_RGT_0).	0.2084441185	9
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0770108699799	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0771579742432	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.5	search with cache (only 1: red; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0767948627472	10
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.23	search with cache (only 1: intro H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	4.22881603241	2856
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.573823928833	67
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.04634308815	7
Coq.Reals.DiscrR.IZR_eq	40	7.0	search with cache (only 1: intros z1 z2 H; only 1: now Morphisms.f_equiv).	0.0466139316559	9
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40	1.9.4	search with cache (only 1: intro; only 1: destruct (CRltLinear R), p; only 1: assumption).	10.2611718178	582
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: simpl_relation; only 1: intuition; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	0.134932041168	7
Coq.Reals.ConstructiveReals.CReq_sym	40	4.1	search with cache (only 1: intuition; only 1: firstorder).	0.624733924866	48
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40	1.28	search with cache (only 1: fix odd_spec 1; only 1: assumption).	14.4174919128	5120
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	81.22.7	search with cache (only 1: intros; only 1: red in H; only 1: eauto).	6.02657794952	16782
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	5	search with cache (only 1: trivial).	0.0497999191284	23
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	1.2.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CRealEq_sym; only 1: apply CReal_plus_opp_r; only 1: apply CReal_plus_proper_r; only 1: apply CRealEq_sym; only 1: apply H).	26.6245310307	880
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	1.1.1	search with cache (only 1: intros EQ; only 1: intro x; only 1: apply (Ropp_ext CReal_isRingExt)).	3.09400391579	98
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0686120986938	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0326280593872	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	0.1.15.1	search with cache (only 1: intro; only 1: intros a; only 1: apply (CReal_plus_eq_reg_l 0); only 1: ring).	35.8852229118	2113
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0368359088898	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0	search with cache (only 1: assumption).	0.0203850269318	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40	1.33.11	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	9.42177200317	13591
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	2.1.0	search with cache (only 1: intros; only 1: apply CReal_mult_proper_l; only 1: exact H).	0.459172964096	20
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0351250171661	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0912730693817	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	3.0.22	search with cache (only 1: intros p0; only 1: intro; only 1: ring_Rsqr).	5.49400615692	3542
Coq.Reals.R_sqr.Rsqr_1	40	0.0	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0823309421539	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	0.0.1.3.0.0	search with cache (only 1: intros; only 1: destruct (Rabs_pos x) as [| Heq]; only 1: auto with real; only 1: apply Rabs_no_R0 in H; only 1: symmetry in Heq; only 1: contradiction).	0.179124116898	17
Coq.Reals.R_sqr.Rsqr_div	40	0.1.26.4	search with cache (only 1: intros n m H; only 1: unfold Rsqr; only 1: field; only 1: auto with real).	33.8042960167	13767
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.0.2.0	search with cache (only 1: unfold Rsqr; only 1: intro z; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: trivial).	0.148053884506	23
Coq.Reals.R_sqr.Rsqr_minus_plus	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0894949436188	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.1.1.2	search with cache (only 1: intros x y; only 1: intro H0; only 1: unfold Rsqr; only 1: auto with real).	0.318696022034	83
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	1.3.0.8.0.6	search with cache (only 1: unfold Rsqr; only 1: intro; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: auto with real; only 1: auto with real).	9.1380469799	5018
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	10.1.0.4.1.0	search with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: generalize (Rle_le_eq x² y²); only 1: intro; only 1: rewrite (Rsqr_abs y); only 1: auto with real).	15.7362620831	8994
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0693027973175	4
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	6.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intuition).	0.089663028717	11
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.2.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: split; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).	22.6807360649	1808
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	0.3.0.0.0.0.1	search with cache (only 1: intro; only 1: unfold Rdiv; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	1.16740083694	274
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40	3.5	search with cache (only 1: fix even_equiv 1; only 1: assumption).	0.0696477890015	33
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0560111999512	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0582218170166	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0553789138794	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0587239265442	4
Coq.Reals.Rminmax.plus_max_distr_l	40	2.0.0.1	search with cache (only 1: intros m n p; only 1: apply max_mono; only 1: eauto with *; only 1: firstorder).	0.521599054337	38
Coq.Reals.Rminmax.plus_max_distr_r	40	0.8.0.4.2.0.0.3.3	search with cache (only 1: intros a b c; only 1: unfold Rmax; only 1: destruct (Rle_dec a b); only 1: destruct Rle_dec as [H'| H']; only 1: auto with real; only 1: auto with real; only 1: destruct Rle_dec as [H'| H']; only 1: auto with real; only 1: reflexivity).	38.7286710739	13774
Coq.Reals.Rminmax.plus_min_distr_l	40
Coq.Reals.Rminmax.plus_min_distr_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0634438991547	6
Coq.Reals.Rminmax.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0580520629883	4
Coq.Reals.Rminmax.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.054759979248	4
Coq.Reals.Rminmax.minus_max_distr_l	40
Coq.Reals.Rminmax.minus_max_distr_r	40
Coq.Reals.Rminmax.minus_min_distr_l	40
Coq.Reals.Rminmax.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.0.10	search with cache (only 1: intros a Ha; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.802466869354	424
Coq.Reals.Rlimit.eps2	40	1.1	search with cache (only 1: intros n; only 1: field).	0.0451259613037	4
Coq.Reals.Rlimit.eps4	40	3.8.9	search with cache (only 1: rewrite <- double; only 1: intro; only 1: field).	1.14346313477	560
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0340969562531	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- double; only 1: lra).	0.0413959026337	3
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	9.4.15	search with cache (only 1: intros p abs; only 1: intros x H2; only 1: firstorder).	1.88659596443	2804
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	12.2.0.0	search with cache (only 1: intros; only 1: unfold limit1_in; only 1: intros Hr1 Hr2; only 1: firstorder).	2.90339589119	1570
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.1.0.1	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: apply Rle_refl; only 1: apply Rsqrt_positivity).	0.0878658294678	7
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0930440425873	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0786411762238	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.0.10.3.5	search with cache (only 1: intro; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: intros H1; only 1: apply sqrt_square; only 1: assumption).	22.947840929	9926
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0583522319794	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.1.3	search with cache (only 1: intros a b Hb H; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.97439289093	187
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0998599529266	6
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	45.20.11	search with cache (only 1: intro abs; only 1: destruct r; only 1: eauto).	7.284938097	13117
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	2.2.8.2	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: easy; only 1: reflexivity).	1.24081802368	996
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0801610946655	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.038535118103	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40	1.0.42.11	search with cache (only 1: left; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	2.21667313576	2784
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.0.15.4.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	2.04748106003	1550
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.1.1.0.0	search with cache (only 1: intro; only 1: rewrite double; only 1: rewrite double; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.312907934189	61
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.0766220092773	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.9.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: symmetry; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	1.14503002167	595
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.0.3.0.0.0.4.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite Rplus_comm; only 1: rewrite sin_PI; only 1: rewrite <- cos_sym; only 1: rewrite sin_neg; only 1: rewrite Rplus_comm; only 1: rewrite cos_PI; only 1: ring).	3.03001093864	1098
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	6.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: unfold Rminus; only 1: rewrite cos_PI2; only 1: ring).	2.229377985	739
Coq.Reals.Rtrigo1.cos_shift	40	0.1.0.0.0.2.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite sin_neg; only 1: ring).	0.0912659168243	10
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.4.1.8	search with cache (only 1: intro H7; only 1: rewrite sin_plus; only 1: symmetry; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	3.95821285248	1422
Coq.Reals.Rtrigo1.PI2_RGT_0	40
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.10.2.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: intro; only 1: destruct pi2_int; only 1: lra).	9.77866697311	3174
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	2.82210016251	635
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.5.0	search with cache (only 1: intros; only 1: simpl; only 1: ring).	0.0403320789337	8
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	7	search with cache (only 1: auto with real).	0.112137079239	58
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	5.0.2.4.1.2.12	search with cache (only 1: intros x n; only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	6.42802405357	4916
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.15.1.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	3.55812621117	2554
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	10.0.0.0.0.27.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: auto with real; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: auto with real).	24.9835748672	28392
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.439455986023	155
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	5.13.1	search with cache (only 1: intros a b; only 1: fix le_div2 1; only 1: assumption).	3.70126700401	1785
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	13.0081369877	4063
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.4	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0389289855957	23
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	8.14.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: red; only 1: auto).	10.7545950413	5834
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	2	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	1.1411190033	20
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	2	search with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.0567600727081	20
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40	2.3.6.6.9.14	search with cache (only 1: intros (r, Hr); only 1: intro Hn; only 1: intros a b Ha Hb; only 1: unfold Qminus; only 1: rewrite Qplus_opp_r; only 1: reflexivity).	14.9964158535	17037
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: constructor; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	1.22872281075	540
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	3	search with cache (only 1: trivial).	0.0197470188141	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	4	search with cache (only 1: auto).	0.017550945282	5
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.302760124207	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40	3.9.15	search with cache (only 1: intro abs; only 1: fix gcd_greatest 1; only 1: auto with sets).	21.3238518238	8937
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	2.3560500145	530
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	8.1.34	search with cache (only 1: simpl; only 1: apply CRealEq_diff; only 1: now Z.nzsimpl).	21.0320000648	8011
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40	4.0.0	search with cache (only 1: fix le_div2 1; only 1: intro x; only 1: easy).	0.0292508602142	7
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	1.0.0.2.14.5	search with cache (only 1: intro n; only 1: induction n; only 1: intros (Hc1, Hc2) || intros Hc; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: f_equiv).	39.8777070045	10132
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	8	search with cache (only 1: auto with relations).	0.0397040843964	19
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.3.16	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.523880004883	278
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0708191394806	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.0.17	search with cache (only 1: intros a0; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	21.8872458935	4425
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.0918598175049	13
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.6.1	search with cache (only 1: intro; only 1: apply pow_nonzero; only 1: now apply not_0_IZR).	0.0507900714874	17
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.height_non_negative	40
Coq.FSets.FMapFullAVL.avl_node	40	0	search with cache (only 1: solve [ inv MapsTo; auto ]).	0.0314571857452	1
Coq.FSets.FMapFullAVL.height_0	40
Coq.FSets.FMapFullAVL.empty_avl	40	2.0	search with cache (only 1: unfold empty, Empty; only 1: intuition_in).	0.0393929481506	4
Coq.FSets.FMapFullAVL.create_avl	40	1.3.0	search with cache (only 1: intros m x; only 1: unfold create; only 1: auto).	0.0901792049408	23
Coq.FSets.FMapFullAVL.create_height	40	0	search with cache (only 1: auto).	0.0311450958252	1
Coq.FSets.FMapFullAVL.bal_avl	40
Coq.FSets.FMapFullAVL.bal_height_1	40
Coq.FSets.FMapFullAVL.bal_height_2	40
Coq.FSets.FMapFullAVL.add_avl_1	40
Coq.FSets.FMapFullAVL.add_avl	40
Coq.FSets.FMapFullAVL.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.remove_min_avl	40
Coq.FSets.FMapFullAVL.merge_avl_1	40
Coq.FSets.FMapFullAVL.merge_avl	40
Coq.FSets.FMapFullAVL.remove_avl_1	40
Coq.FSets.FMapFullAVL.remove_avl	40
Coq.FSets.FMapFullAVL.join_avl_1	40
Coq.FSets.FMapFullAVL.join_avl	40
Coq.FSets.FMapFullAVL.concat_avl	40
Coq.FSets.FMapFullAVL.split_avl	40
Coq.FSets.FMapFullAVL.map_height	40	1.0.4.5	search with cache (only 1: intros; only 1: induction m; only 1: auto; only 1: auto).	0.274975061417	103
Coq.FSets.FMapFullAVL.map_avl	40
Coq.FSets.FMapFullAVL.mapi_height	40	1.0.0.89.0	search with cache (only 1: intros m; only 1: induction m; only 1: simpl; only 1: auto; only 1: intuition).	7.48421001434	16735
Coq.FSets.FMapFullAVL.mapi_avl	40
Coq.FSets.FMapFullAVL.map_option_avl	40
Coq.FSets.FMapFullAVL.map2_opt_avl	40
Coq.FSets.FMapFullAVL.map2_avl	40
Coq.FSets.FMapFullAVL.MapsTo_1	40
Coq.FSets.FMapFullAVL.mem_1	40
Coq.FSets.FMapFullAVL.mem_2	40
Coq.FSets.FMapFullAVL.empty_1	40	5.7.17	search with cache (only 1: red; only 1: let rec avl_nns := let rec avl_nn_hyp H := let nz := fresh "nz" in pose proof (height_non_negative (s:=H)) as nz in match goal with | H:avl (elt:=_) |- _ => avl_nn_hyp H; clear H; avl_nns | _ => idtac end in match goal with | |- avl (elt:=assert_false _ _ _ _) => avl_nns | _ => repeat apply create_avl; simpl in *; auto end; only 1: easy).	0.667536973953	599
Coq.FSets.FMapFullAVL.is_empty_1	40
Coq.FSets.FMapFullAVL.is_empty_2	40
Coq.FSets.FMapFullAVL.add_1	40
Coq.FSets.FMapFullAVL.add_2	40	0.3.3.0.2.1.2	search with cache (only 1: intros m x y e e'; only 1: generalize y, e; only 1: red; only 1: clear y e; only 1: simpl; only 1: intros; only 1: eauto using add_2, add_3).	4.35472393036	2634
Coq.FSets.FMapFullAVL.add_3	40
Coq.FSets.FMapFullAVL.remove_1	40
Coq.FSets.FMapFullAVL.remove_2	40
Coq.FSets.FMapFullAVL.remove_3	40
Coq.FSets.FMapFullAVL.find_1	40	1.0.5.5	search with cache (only 1: intuition_in; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	0.365982055664	134
Coq.FSets.FMapFullAVL.find_2	40	3.23.24.1.0	search with cache (only 1: intros m x; only 1: intros; only 1: compute; only 1: apply L.find_2; only 1: auto).	24.9570839405	44815
Coq.FSets.FMapFullAVL.fold_1	40
Coq.FSets.FMapFullAVL.elements_1	40
Coq.FSets.FMapFullAVL.elements_2	40	0.5.0.16.10	search with cache (only 1: red; only 1: induction m; only 1: intros; only 1: rewrite <- elements_mapsto; only 1: eauto with *).	13.3114309311	12485
Coq.FSets.FMapFullAVL.elements_3	40
Coq.FSets.FMapFullAVL.elements_3w	40
Coq.FSets.FMapFullAVL.cardinal_1	40
Coq.FSets.FMapFullAVL.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.equal_1	40
Coq.FSets.FMapFullAVL.equal_2	40
Coq.FSets.FMapFullAVL.map_1	40
Coq.FSets.FMapFullAVL.map_2	40
Coq.FSets.FMapFullAVL.mapi_1	40
Coq.FSets.FMapFullAVL.mapi_2	40
Coq.FSets.FMapFullAVL.map2_1	40
Coq.FSets.FMapFullAVL.map2_2	40
Coq.FSets.FMapFullAVL.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.cons_Cmp	40	0.0.0.7.3.2.24	search with cache (only 1: intros a b Ha Hb; only 1: intros sorted belong1; only 1: intros y' e'' eqky'; only 1: destruct a; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	21.8703069687	17187
Coq.FSets.FMapFullAVL.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.compare_Cmp	40
Coq.FSets.FMapFullAVL.compare	40
Coq.FSets.FMapFullAVL.eq_seq	40	2.0	search with cache (only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt).	0.0425560474396	4
Coq.FSets.FMapFullAVL.lt_slt	40	0	search with cache (only 1: intuition).	0.0310900211334	1
Coq.FSets.FMapFullAVL.eq_1	40
Coq.FSets.FMapFullAVL.eq_2	40
Coq.FSets.FMapFullAVL.eq_refl	40
Coq.FSets.FMapFullAVL.eq_sym	40
Coq.FSets.FMapFullAVL.eq_trans	40
Coq.FSets.FMapFullAVL.lt_trans	40
Coq.FSets.FMapFullAVL.lt_not_eq	40
Coq.FSets.FMapAVL.MapsTo_In	40	1.1.0.5.1	search with cache (only 1: intros x y H; only 1: induction 1; only 1: auto; only 1: auto; only 1: auto).	0.21315407753	166
Coq.FSets.FMapAVL.In_MapsTo	40
Coq.FSets.FMapAVL.In_alt	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.In_1	40	2.2.1.2.14.0.43	search with cache (only 1: intros l H; only 1: intros; only 1: elim H1; only 1: intros m x; only 1: eauto with *; only 1: auto; only 1: auto).	12.9550061226	23783
Coq.FSets.FMapAVL.In_node_iff	40
Coq.FSets.FMapAVL.lt_leaf	40	6.19	search with cache (only 1: intro Ha; only 1: easy).	1.00103497505	1262
Coq.FSets.FMapAVL.gt_leaf	40	0.0	search with cache (only 1: intros m Hm x; only 1: intuition_in).	0.0255119800568	2
Coq.FSets.FMapAVL.lt_tree_node	40	0.0.5.1.1.22	search with cache (only 1: intros x y z; only 1: intros Az RS; only 1: intros H'; only 1: compute; only 1: intuition_in; only 1: eauto with ordered_type).	27.0714359283	10208
Coq.FSets.FMapAVL.gt_tree_node	40
Coq.FSets.FMapAVL.lt_left	40	0	search with cache (only 1: intuition_in).	0.018443107605	1
Coq.FSets.FMapAVL.lt_right	40	0	search with cache (only 1: intuition_in).	0.0167648792267	1
Coq.FSets.FMapAVL.gt_left	40	0	search with cache (only 1: intuition_in).	0.0386109352112	1
Coq.FSets.FMapAVL.gt_right	40	0	search with cache (only 1: intuition_in).	0.0158438682556	1
Coq.FSets.FMapAVL.lt_tree_not_in	40
Coq.FSets.FMapAVL.lt_tree_trans	40	0.6.0	search with cache (only 1: unfold lt_tree in *; only 1: intros a b H; only 1: eauto with ordered_type).	0.0767397880554	32
Coq.FSets.FMapAVL.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0279200077057	4
Coq.FSets.FMapAVL.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0225160121918	1
Coq.FSets.FMapAVL.empty_bst	40	6	search with cache (only 1: constructor).	0.0143001079559	7
Coq.FSets.FMapAVL.empty_1	40	8.10	search with cache (only 1: red; only 1: abstract now inversion 1).	0.456089019775	384
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40	2.0.0.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: easy; only 1: simpl; only 1: easy).	0.0350480079651	6
Coq.FSets.FMapAVL.mem_1	40
Coq.FSets.FMapAVL.mem_2	40	1.1.4.7.23.2	search with cache (only 1: intuition; only 1: functional induction (L.mem (elt:=x) m); only 1: congruence; only 1: auto; only 1: auto; only 1: auto).	4.86953878403	9637
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40	1.0.11.0.1.0.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (L.find (elt:=x) m); only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros; only 1: inversion_clear H; only 1: auto; only 1: auto with ordered_type).	11.3313720226	3725
Coq.FSets.FMapAVL.find_iff	40
Coq.FSets.FMapAVL.find_in	40	3.2.2.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: firstorder  discriminate; only 1: auto; only 1: auto; only 1: auto).	1.06235218048	385
Coq.FSets.FMapAVL.in_find	40
Coq.FSets.FMapAVL.find_in_iff	40
Coq.FSets.FMapAVL.not_find_iff	40
Coq.FSets.FMapAVL.find_find	40
Coq.FSets.FMapAVL.find_mapsto_equiv	40
Coq.FSets.FMapAVL.find_in_equiv	40
Coq.FSets.FMapAVL.create_bst	40	1.1.15	search with cache (only 1: compute; only 1: intros; only 1: auto).	4.4672870636	1171
Coq.FSets.FMapAVL.create_in	40
Coq.FSets.FMapAVL.bal_bst	40
Coq.FSets.FMapAVL.bal_in	40
Coq.FSets.FMapAVL.bal_mapsto	40
Coq.FSets.FMapAVL.bal_find	40
Coq.FSets.FMapAVL.add_in	40
Coq.FSets.FMapAVL.add_bst	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.add_find	40
Coq.FSets.FMapAVL.remove_min_in	40
Coq.FSets.FMapAVL.remove_min_mapsto	40
Coq.FSets.FMapAVL.remove_min_bst	40
Coq.FSets.FMapAVL.remove_min_gt_tree	40
Coq.FSets.FMapAVL.remove_min_find	40
Coq.FSets.FMapAVL.merge_in	40
Coq.FSets.FMapAVL.merge_mapsto	40
Coq.FSets.FMapAVL.merge_bst	40
Coq.FSets.FMapAVL.remove_in	40
Coq.FSets.FMapAVL.remove_bst	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.join_in	40
Coq.FSets.FMapAVL.join_bst	40
Coq.FSets.FMapAVL.join_find	40
Coq.FSets.FMapAVL.split_in_1	40
Coq.FSets.FMapAVL.split_in_2	40
Coq.FSets.FMapAVL.split_in_3	40
Coq.FSets.FMapAVL.split_bst	40
Coq.FSets.FMapAVL.split_lt_tree	40
Coq.FSets.FMapAVL.split_gt_tree	40
Coq.FSets.FMapAVL.split_find	40
Coq.FSets.FMapAVL.concat_in	40
Coq.FSets.FMapAVL.concat_bst	40
Coq.FSets.FMapAVL.concat_find	40
Coq.FSets.FMapAVL.elements_aux_mapsto	40
Coq.FSets.FMapAVL.elements_mapsto	40
Coq.FSets.FMapAVL.elements_in	40
Coq.FSets.FMapAVL.elements_aux_sort	40
Coq.FSets.FMapAVL.elements_sort	40
Coq.FSets.FMapAVL.elements_nodup	40
Coq.FSets.FMapAVL.elements_aux_cardinal	40
Coq.FSets.FMapAVL.elements_cardinal	40
Coq.FSets.FMapAVL.elements_app	40
Coq.FSets.FMapAVL.elements_node	40
Coq.FSets.FMapAVL.fold_equiv_aux	40
Coq.FSets.FMapAVL.fold_equiv	40
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.flatten_e_elements	40	0.0.0.0.0.10	search with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.670575141907	362
Coq.FSets.FMapAVL.cons_1	40
Coq.FSets.FMapAVL.cons_IfEq	40
Coq.FSets.FMapAVL.equal_end_IfEq	40
Coq.FSets.FMapAVL.equal_more_IfEq	40	0.2.4.0.0.1.2.0.18.2	search with cache (only 1: intros; only 1: simpl flatten_e; only 1: unfold elements; only 1: unfold IfEq; only 1: simpl; only 1: destruct X.compare; only 1: auto; only 1: inversion_clear H; only 1: auto; only 1: auto).	23.7430660725	7687
Coq.FSets.FMapAVL.equal_cont_IfEq	40
Coq.FSets.FMapAVL.equal_IfEq	40
Coq.FSets.FMapAVL.Equivb_elements	40
Coq.FSets.FMapAVL.equal_Equivb	40
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40	0.0.1.2.0.1.37.2	search with cache (only 1: intros m x; only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: inversion 1; only 1: intuition; only 1: intuition_in; only 1: intuition_in).	5.40189504623	15426
Coq.FSets.FMapAVL.map_bst	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40	0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.143480062485	7
Coq.FSets.FMapAVL.mapi_bst	40
Coq.FSets.FMapAVL.map_option_2	40
Coq.FSets.FMapAVL.map_option_bst	40
Coq.FSets.FMapAVL.map_option_find	40
Coq.FSets.FMapAVL.map2_opt_2	40
Coq.FSets.FMapAVL.map2_opt_bst	40
Coq.FSets.FMapAVL.map2_opt_1	40
Coq.FSets.FMapAVL.map2_bst	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.MapsTo_1	40
Coq.FSets.FMapAVL.mem_1	40	3.3.9	search with cache (only 1: fix even_spec 1; only 1: destruct m; only 1: auto).	9.1302587986	855
Coq.FSets.FMapAVL.mem_2	40	5.12	search with cache (only 1: fix even_spec 1; only 1: intuition).	1.35076284409	1584
Coq.FSets.FMapAVL.empty_1	40	7.22	search with cache (only 1: intro LS'; only 1: inversion_clear 1).	0.210980892181	504
Coq.FSets.FMapAVL.is_empty_1	40
Coq.FSets.FMapAVL.is_empty_2	40
Coq.FSets.FMapAVL.add_1	40
Coq.FSets.FMapAVL.add_2	40
Coq.FSets.FMapAVL.add_3	40
Coq.FSets.FMapAVL.remove_1	40
Coq.FSets.FMapAVL.remove_2	40
Coq.FSets.FMapAVL.remove_3	40
Coq.FSets.FMapAVL.find_1	40
Coq.FSets.FMapAVL.find_2	40	6.1.0.1.0.1.4.13.1.0	search with cache (only 1: intros m x; only 1: intros; only 1: compute; only 1: case_eq (Raw.find x m); only 1: intros; only 1: inversion H; only 1: apply find_2; only 1: auto; only 1: intros; only 1: congruence).	3.66508221626	6287
Coq.FSets.FMapAVL.fold_1	40
Coq.FSets.FMapAVL.elements_1	40
Coq.FSets.FMapAVL.elements_2	40	2.0.7.26.0.49	search with cache (only 1: intros a b H; only 1: unfold elements, MapsTo, eq_key_elt; only 1: destruct a as (x'', e''); only 1: simpl; only 1: rewrite elements_mapsto; only 1: auto).	19.6614909172	44663
Coq.FSets.FMapAVL.elements_3	40
Coq.FSets.FMapAVL.elements_3w	40	0.0.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0237090587616	3
Coq.FSets.FMapAVL.cardinal_1	40
Coq.FSets.FMapAVL.Equivb_Equivb	40
Coq.FSets.FMapAVL.equal_1	40
Coq.FSets.FMapAVL.equal_2	40
Coq.FSets.FMapAVL.map_1	40
Coq.FSets.FMapAVL.map_2	40
Coq.FSets.FMapAVL.mapi_1	40
Coq.FSets.FMapAVL.mapi_2	40
Coq.FSets.FMapAVL.map2_1	40
Coq.FSets.FMapAVL.map2_2	40
Coq.FSets.FMapAVL.cons_Cmp	40
Coq.FSets.FMapAVL.compare_end_Cmp	40	1.0.5.43.69	search with cache (only 1: intro n; only 1: destruct n as [| n]; only 1: simpl; only 1: trivial; only 1: reflexivity).	10.1798570156	40500
Coq.FSets.FMapAVL.compare_more_Cmp	40
Coq.FSets.FMapAVL.compare_cont_Cmp	40
Coq.FSets.FMapAVL.compare_Cmp	40
Coq.FSets.FMapAVL.compare	40
Coq.FSets.FMapAVL.eq_seq	40	9	search with cache (only 1: Raw.Proofs.intuition_in).	0.15242099762	57
Coq.FSets.FMapAVL.lt_slt	40	6.0	search with cache (only 1: intros; only 1: now split).	0.0430870056152	20
Coq.FSets.FMapAVL.eq_1	40
Coq.FSets.FMapAVL.eq_2	40
Coq.FSets.FMapAVL.eq_refl	40
Coq.FSets.FMapAVL.eq_sym	40
Coq.FSets.FMapAVL.eq_trans	40
Coq.FSets.FMapAVL.lt_trans	40
Coq.FSets.FMapAVL.lt_not_eq	40
Coq.FSets.FSetFacts.In_eq_iff	40
Coq.FSets.FSetFacts.mem_iff	40	12	search with cache (only 1: intuition).	0.475868940353	233
Coq.FSets.FSetFacts.not_mem_iff	40	4.3.37	search with cache (only 1: Ndec.eqb2eq; only 1: symmetry; only 1: intuition).	2.19034290314	3546
Coq.FSets.FSetFacts.equal_iff	40	5.0	search with cache (only 1: symmetry; only 1: intuition).	0.346031904221	63
Coq.FSets.FSetFacts.subset_iff	40	3	search with cache (only 1: intuition).	0.0464539527893	4
Coq.FSets.FSetFacts.empty_iff	40
Coq.FSets.FSetFacts.is_empty_iff	40	17.3.0	search with cache (only 1: split; only 1: intuition; only 1: intuition).	1.76875495911	1607
Coq.FSets.FSetFacts.singleton_iff	40	14	search with cache (only 1: intuition).	0.390111923218	261
Coq.FSets.FSetFacts.add_iff	40
Coq.FSets.FSetFacts.add_neq_iff	40	0.1.5.11.5.0	search with cache (only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition auto; BinPos.Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: unfold not; only 1: intros m'; only 1: intuition; only 1: exact (add_3 E H)).	6.28370404243	5543
Coq.FSets.FSetFacts.remove_iff	40
Coq.FSets.FSetFacts.remove_neq_iff	40	0.0.6	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.065938949585	18
Coq.FSets.FSetFacts.union_iff	40	12	search with cache (only 1: intuition).	0.275272846222	162
Coq.FSets.FSetFacts.inter_iff	40
Coq.FSets.FSetFacts.diff_iff	40
Coq.FSets.FSetFacts.filter_iff	40
Coq.FSets.FSetFacts.for_all_iff	40	0	search with cache (only 1: intuition).	0.0503058433533	1
Coq.FSets.FSetFacts.exists_iff	40	3.4	search with cache (only 1: intro H; only 1: intuition).	0.0972728729248	26
Coq.FSets.FSetFacts.elements_iff	40
Coq.FSets.FSetFacts.mem_b	40
Coq.FSets.FSetFacts.empty_b	40
Coq.FSets.FSetFacts.add_b	40
Coq.FSets.FSetFacts.add_neq_b	40
Coq.FSets.FSetFacts.remove_b	40
Coq.FSets.FSetFacts.remove_neq_b	40
Coq.FSets.FSetFacts.singleton_b	40
Coq.FSets.FSetFacts.union_b	40
Coq.FSets.FSetFacts.inter_b	40
Coq.FSets.FSetFacts.diff_b	40
Coq.FSets.FSetFacts.elements_b	40
Coq.FSets.FSetFacts.filter_b	40
Coq.FSets.FSetFacts.for_all_b	40
Coq.FSets.FSetFacts.exists_b	40
Coq.FSets.FSetFacts.E_ST	40	7.1.11.17.4.1	search with cache (only 1: split; only 1: auto with *; only 1: intuition; only 1: red; only 1: intros x y z; only 1: eauto).	5.19876599312	10055
Coq.FSets.FSetFacts.Equal_ST	40	65	search with cache (only 1: firstorder).	1.85512185097	2166
Coq.FSets.FSetFacts.In_m	40
Coq.FSets.FSetFacts.is_empty_m	40
Coq.FSets.FSetFacts.Empty_m	40	15	search with cache (only 1: firstorder).	0.497089147568	162
Coq.FSets.FSetFacts.mem_m	40
Coq.FSets.FSetFacts.singleton_m	40
Coq.FSets.FSetFacts.add_m	40
Coq.FSets.FSetFacts.remove_m	40
Coq.FSets.FSetFacts.union_m	40
Coq.FSets.FSetFacts.inter_m	40
Coq.FSets.FSetFacts.diff_m	40
Coq.FSets.FSetFacts.Subset_m	40	14	search with cache (only 1: firstorder).	9.28852200508	1525
Coq.FSets.FSetFacts.subset_m	40
Coq.FSets.FSetFacts.equal_m	40
Coq.FSets.FSetFacts.Subset_refl	40	5.1	search with cache (only 1: intros; only 1: easy).	0.0429329872131	8
Coq.FSets.FSetFacts.Subset_trans	40	2.2.3	search with cache (only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: firstorder).	0.0660262107849	24
Coq.FSets.FSetFacts.In_s_m	40
Coq.FSets.FSetFacts.Empty_s_m_Proper	40	3.3	search with cache (only 1: intros n1 m1 H; only 1: firstorder).	0.0733880996704	24
Coq.FSets.FSetFacts.add_s_m_Proper	40
Coq.FSets.FSetFacts.remove_s_m_Proper	40
Coq.FSets.FSetFacts.union_s_m_Proper	40
Coq.FSets.FSetFacts.inter_s_m_Proper	40
Coq.FSets.FSetFacts.diff_s_m_Proper	40	1.0.1.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: destruct 1; only 1: rewrite H0; only 1: auto).	0.161339998245	23
Coq.FSets.FSetFacts.filter_equal	40
Coq.FSets.FSetFacts.filter_ext	40
Coq.FSets.FSetFacts.filter_subset	40	0.0.1.0.10.0.2	search with cache (only 1: intros n1 le_mn1; only 1: unfold Subset, Empty, impl; only 1: intros n m p q; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).	2.3140308857	1737
Coq.FSets.FSetPositive.In_1	40	0.0.0.7	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eauto).	0.134143829346	95
Coq.FSets.FSetPositive.eq_refl	40	3.0	search with cache (only 1: intros; only 1: easy).	0.0424220561981	5
Coq.FSets.FSetPositive.eq_sym	40	4	search with cache (only 1: firstorder).	0.0460910797119	5
Coq.FSets.FSetPositive.eq_trans	40	1.3.1	search with cache (only 1: intros x y z; only 1: intuition auto; BinNat.N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: firstorder).	0.0523200035095	8
Coq.FSets.FSetPositive.mem_1	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.0315039157867	7
Coq.FSets.FSetPositive.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0265870094299	2
Coq.FSets.FSetPositive.mem_Leaf	40	2.0	search with cache (only 1: intros n; only 1: now destruct n).	0.0339829921722	4
Coq.FSets.FSetPositive.empty_1	40	0.0.5.16	search with cache (only 1: intros a b; only 1: absurd (false = true); only 1: discriminate; only 1: tauto).	0.255261898041	414
Coq.FSets.FSetPositive.mem_node	40	1.7.2	search with cache (only 1: intros a n Hn; only 1: fix even_spec 1; only 1: trivial).	1.50676083565	941
Coq.FSets.FSetPositive.is_empty_spec	40	6.1.6.2.7	search with cache (only 1: intro m; only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	29.9936630726	4795
Coq.FSets.FSetPositive.is_empty_1	40
Coq.FSets.FSetPositive.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.161480903625	73
Coq.FSets.FSetPositive.subset_Leaf_s	40	7.6	search with cache (only 1: intro H; only 1: easy).	0.0917580127716	103
Coq.FSets.FSetPositive.subset_spec	40
Coq.FSets.FSetPositive.subset_1	40
Coq.FSets.FSetPositive.subset_2	40
Coq.FSets.FSetPositive.equal_subset	40
Coq.FSets.FSetPositive.equal_spec	40
Coq.FSets.FSetPositive.equal_1	40	7.7.36	search with cache (only 1: intros Heq; only 1: fix even_spec 1; only 1: trivial).	38.449944973	23817
Coq.FSets.FSetPositive.equal_2	40
Coq.FSets.FSetPositive.eq_dec	40	1.1.13.1.11.1	search with cache (only 1: unfold eq, Equal; only 1: intros a b; only 1: left; only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	8.7282140255	9434
Coq.FSets.FSetPositive.lex_Opp	40
Coq.FSets.FSetPositive.compare_bool_inv	40	3	search with cache (only 1: destr_bool).	0.0259909629822	4
Coq.FSets.FSetPositive.compare_inv	40
Coq.FSets.FSetPositive.lex_Eq	40	0.4.0.0.0.0.9.0.14	search with cache (only 1: intros n; only 1: split; only 1: case n; only 1: intros; only 1: easy'; only 1: congruence; only 1: discriminate; only 1: intuition; only 1: now subst).	10.7507300377	13183
Coq.FSets.FSetPositive.compare_bool_Eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.0487039089203	5
Coq.FSets.FSetPositive.compare_equal	40
Coq.FSets.FSetPositive.compare_gt	40
Coq.FSets.FSetPositive.compare_eq	40
Coq.FSets.FSetPositive.compare	40
Coq.FSets.FSetPositive.ct_cxe	40
Coq.FSets.FSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.033704996109	4
Coq.FSets.FSetPositive.ct_lxl	40
Coq.FSets.FSetPositive.ct_gxg	40
Coq.FSets.FSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0306711196899	4
Coq.FSets.FSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0336310863495	4
Coq.FSets.FSetPositive.ct_lex	40
Coq.FSets.FSetPositive.ct_compare_bool	40	0.0.0.0.0.0.0.0.1.5.9	search with cache (only 1: intros n m H; only 1: revert n m; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	1.15914297104	1590
Coq.FSets.FSetPositive.compare_x_Leaf	40	17.4	search with cache (only 1: intro n; only 1: now destruct n).	0.678287029266	966
Coq.FSets.FSetPositive.compare_empty_x	40
Coq.FSets.FSetPositive.compare_x_empty	40
Coq.FSets.FSetPositive.ct_compare_fun	40	2.11.21	search with cache (only 1: intros n m; only 1: fix odd_spec 1; only 1: trivial).	28.9027190208	31766
Coq.FSets.FSetPositive.lt_trans	40
Coq.FSets.FSetPositive.lt_not_eq	40
Coq.FSets.FSetPositive.add_spec	40
Coq.FSets.FSetPositive.add_1	40
Coq.FSets.FSetPositive.add_2	40	1.0.0.13	search with cache (only 1: intros n m Hn; only 1: intros LT; only 1: apply <- add_spec; only 1: auto).	1.26352405548	1474
Coq.FSets.FSetPositive.add_3	40
Coq.FSets.FSetPositive.remove_spec	40
Coq.FSets.FSetPositive.remove_1	40
Coq.FSets.FSetPositive.remove_2	40	0.0.3	search with cache (only 1: intros a b c Hb H; only 1: rewrite remove_spec; only 1: tauto).	0.0665941238403	33
Coq.FSets.FSetPositive.remove_3	40
Coq.FSets.FSetPositive.singleton_1	40
Coq.FSets.FSetPositive.singleton_2	40	0.0.0.1.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: intros H; only 1: rewrite mem_Leaf; only 1: left; only 1: assumption).	0.0599808692932	9
Coq.FSets.FSetPositive.union_spec	40
Coq.FSets.FSetPositive.union_1	40
Coq.FSets.FSetPositive.union_2	40
Coq.FSets.FSetPositive.union_3	40	2.1.0.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: auto).	0.0686368942261	15
Coq.FSets.FSetPositive.inter_spec	40
Coq.FSets.FSetPositive.inter_1	40
Coq.FSets.FSetPositive.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0352411270142	3
Coq.FSets.FSetPositive.inter_3	40	0.0.6.1	search with cache (only 1: intros s s' x; only 1: intros Hnm Hpq; only 1: rewrite inter_spec; only 1: tauto).	1.20994901657	157
Coq.FSets.FSetPositive.diff_spec	40
Coq.FSets.FSetPositive.diff_1	40
Coq.FSets.FSetPositive.diff_2	40
Coq.FSets.FSetPositive.diff_3	40	5.1.2	search with cache (only 1: intros a b c Ha Hb; only 1: rewrite diff_spec; only 1: auto).	0.302766084671	147
Coq.FSets.FSetPositive.fold_1	40	2.2.14.37.15	search with cache (only 1: intros n Hn; only 1: revert n; only 1: fix gcd_greatest 1; only 1: intros; only 1: trivial).	31.8695378304	52385
Coq.FSets.FSetPositive.cardinal_1	40
Coq.FSets.FSetPositive.xfilter_spec	40
Coq.FSets.FSetPositive.filter_1	40
Coq.FSets.FSetPositive.filter_2	40
Coq.FSets.FSetPositive.filter_3	40	0.0.3.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: intros m Hm; only 1: rewrite xfilter_spec; only 1: tauto).	0.0732779502869	18
Coq.FSets.FSetPositive.xforall_spec	40
Coq.FSets.FSetPositive.for_all_1	40
Coq.FSets.FSetPositive.for_all_2	40	1.0.0.32.1	search with cache (only 1: intro f; only 1: intro m; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: intuition congruence).	15.6072230339	12307
Coq.FSets.FSetPositive.xexists_spec	40
Coq.FSets.FSetPositive.exists_1	40
Coq.FSets.FSetPositive.exists_2	40	0.0.1.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0429999828339	5
Coq.FSets.FSetPositive.partition_filter	40
Coq.FSets.FSetPositive.partition_1	40
Coq.FSets.FSetPositive.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0353679656982	3
Coq.FSets.FSetPositive.xelements_spec	40
Coq.FSets.FSetPositive.elements_1	40	2.35	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	5.51146602631	10245
Coq.FSets.FSetPositive.elements_2	40	3.12.3.0.2.2.0.10.0	search with cache (only 1: unfold elements, In; only 1: destruct s; only 1: intros; only 1: rewrite ?mem_Leaf; only 1: easy'; only 1: simpl; only 1: apply H || intro; only 1: fix even_spec 1; only 1: eauto).	29.8466911316	25565
Coq.FSets.FSetPositive.lt_rev_append	40
Coq.FSets.FSetPositive.elements_3	40
Coq.FSets.FSetPositive.elements_3w	40
Coq.FSets.FSetPositive.choose_1	40
Coq.FSets.FSetPositive.choose_2	40	3.25	search with cache (only 1: fix even_spec 1; only 1: auto).	1.80149698257	2713
Coq.FSets.FSetPositive.choose_empty	40
Coq.FSets.FSetPositive.choose_3'	40
Coq.FSets.FSetPositive.choose_3	40
Coq.FSets.FSetPositive.min_elt_1	40
Coq.FSets.FSetPositive.min_elt_3	40
Coq.FSets.FSetPositive.min_elt_2	40
Coq.FSets.FSetPositive.max_elt_1	40
Coq.FSets.FSetPositive.max_elt_3	40
Coq.FSets.FSetPositive.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now f_equal).	0.0297999382019	9
Coq.FSets.FMapPositive.gempty	40	0.0.0.0.1.63.36	search with cache (only 1: intros l; only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: reflexivity).	7.81549811363	31299
Coq.FSets.FMapPositive.gss	40
Coq.FSets.FMapPositive.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.0341110229492	7
Coq.FSets.FMapPositive.gso	40
Coq.FSets.FMapPositive.rleaf	40	0.0.0.0.0.0.28.2	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.02483296394	2563
Coq.FSets.FMapPositive.grs	40
Coq.FSets.FMapPositive.gro	40
Coq.FSets.FMapPositive.xelements_correct	40
Coq.FSets.FMapPositive.elements_correct	40
Coq.FSets.FMapPositive.xfind_left	40
Coq.FSets.FMapPositive.xelements_ii	40
Coq.FSets.FMapPositive.xelements_io	40
Coq.FSets.FMapPositive.xelements_oo	40
Coq.FSets.FMapPositive.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	14.5165071487	5549
Coq.FSets.FMapPositive.xelements_ih	40
Coq.FSets.FMapPositive.xelements_oh	40
Coq.FSets.FMapPositive.xelements_hi	40
Coq.FSets.FMapPositive.xelements_ho	40
Coq.FSets.FMapPositive.find_xfind_h	40	0.0.0.1.0.0.0.6	search with cache (only 1: intros H; only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.551645040512	255
Coq.FSets.FMapPositive.xelements_complete	40
Coq.FSets.FMapPositive.elements_complete	40
Coq.FSets.FMapPositive.cardinal_1	40
Coq.FSets.FMapPositive.mem_find	40
Coq.FSets.FMapPositive.Empty_alt	40
Coq.FSets.FMapPositive.Empty_Node	40
Coq.FSets.FMapPositive.mem_1	40
Coq.FSets.FMapPositive.mem_2	40
Coq.FSets.FMapPositive.MapsTo_1	40	0.19	search with cache (only 1: destruct 1; only 1: intuition).	0.236268997192	231
Coq.FSets.FMapPositive.find_1	40	0	search with cache (only 1: auto).	0.00950884819031	1
Coq.FSets.FMapPositive.find_2	40	0	search with cache (only 1: auto).	0.00935196876526	1
Coq.FSets.FMapPositive.empty_1	40
Coq.FSets.FMapPositive.is_empty_1	40
Coq.FSets.FMapPositive.is_empty_2	40
Coq.FSets.FMapPositive.add_1	40
Coq.FSets.FMapPositive.add_2	40
Coq.FSets.FMapPositive.add_3	40	1.0.0.2.0	search with cache (only 1: unfold MapsTo; only 1: intro; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0368118286133	16
Coq.FSets.FMapPositive.remove_1	40
Coq.FSets.FMapPositive.remove_2	40
Coq.FSets.FMapPositive.remove_3	40
Coq.FSets.FMapPositive.elements_1	40
Coq.FSets.FMapPositive.elements_2	40
Coq.FSets.FMapPositive.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.xelements_sort	40
Coq.FSets.FMapPositive.elements_3	40
Coq.FSets.FMapPositive.elements_3w	40
Coq.FSets.FMapPositive.xgmapi	40
Coq.FSets.FMapPositive.gmapi	40
Coq.FSets.FMapPositive.mapi_1	40
Coq.FSets.FMapPositive.mapi_2	40
Coq.FSets.FMapPositive.map_1	40
Coq.FSets.FMapPositive.map_2	40
Coq.FSets.FMapPositive.xgmap2_l	40
Coq.FSets.FMapPositive.xgmap2_r	40
Coq.FSets.FMapPositive.gmap2	40
Coq.FSets.FMapPositive.map2_1	40
Coq.FSets.FMapPositive.map2_2	40
Coq.FSets.FMapPositive.xfoldi_1	40
Coq.FSets.FMapPositive.fold_1	40
Coq.FSets.FMapPositive.equal_1	40
Coq.FSets.FMapPositive.equal_2	40
Coq.FSets.FMapPositive.gsspec	40
Coq.FSets.FMapPositive.gsident	40
Coq.FSets.FMapPositive.xmap2_lr	40
Coq.FSets.FMapPositive.map2_commut	40
Coq.FSets.FMapFacts.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0336980819702	5
Coq.FSets.FMapFacts.eq_option_alt	40
Coq.FSets.FMapFacts.MapsTo_fun	40
Coq.FSets.FMapFacts.In_iff	40
Coq.FSets.FMapFacts.MapsTo_iff	40	0.0.11.1	search with cache (only 1: intros; only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.287070035934	244
Coq.FSets.FMapFacts.mem_in_iff	40	1	search with cache (only 1: intuition).	0.109299898148	20
Coq.FSets.FMapFacts.not_mem_in_iff	40	1.10.31	search with cache (only 1: intros a H; only 1: Ndec.eqb2eq; only 1: intuition).	12.6602890491	20208
Coq.FSets.FMapFacts.In_dec	40
Coq.FSets.FMapFacts.find_mapsto_iff	40	11.0	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.214887857437	139
Coq.FSets.FMapFacts.not_find_in_iff	40
Coq.FSets.FMapFacts.in_find_iff	40
Coq.FSets.FMapFacts.equal_iff	40
Coq.FSets.FMapFacts.empty_mapsto_iff	40
Coq.FSets.FMapFacts.empty_in_iff	40	5.0.11.0	search with cache (only 1: split; only 1: firstorder; only 1: apply (empty_1 H); only 1: intuition).	0.746176958084	840
Coq.FSets.FMapFacts.is_empty_iff	40	0	search with cache (only 1: intuition).	0.0189878940582	1
Coq.FSets.FMapFacts.add_mapsto_iff	40
Coq.FSets.FMapFacts.add_in_iff	40
Coq.FSets.FMapFacts.add_neq_mapsto_iff	40	0.0.0.1.19	search with cache (only 1: intros H ?; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	5.70727992058	5354
Coq.FSets.FMapFacts.add_neq_in_iff	40
Coq.FSets.FMapFacts.remove_mapsto_iff	40
Coq.FSets.FMapFacts.remove_in_iff	40
Coq.FSets.FMapFacts.remove_neq_mapsto_iff	40	0.0.6	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0697910785675	42
Coq.FSets.FMapFacts.remove_neq_in_iff	40	0.0.0.1.0.0.4.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	0.966998815536	998
Coq.FSets.FMapFacts.elements_mapsto_iff	40
Coq.FSets.FMapFacts.elements_in_iff	40
Coq.FSets.FMapFacts.map_mapsto_iff	40
Coq.FSets.FMapFacts.map_in_iff	40
Coq.FSets.FMapFacts.mapi_in_iff	40
Coq.FSets.FMapFacts.mapi_inv	40
Coq.FSets.FMapFacts.mapi_1bis	40
Coq.FSets.FMapFacts.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.mem_find_b	40
Coq.FSets.FMapFacts.mem_b	40
Coq.FSets.FMapFacts.find_o	40
Coq.FSets.FMapFacts.empty_o	40	3.0.0.5.1.0.2.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- find_mapsto_iff; only 1: intros; only 1: exfalso; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: discriminate).	4.73992085457	3959
Coq.FSets.FMapFacts.empty_a	40
Coq.FSets.FMapFacts.add_eq_o	40	0.0	search with cache (only 1: intros; only 1: auto with map).	0.0154201984406	2
Coq.FSets.FMapFacts.add_neq_o	40
Coq.FSets.FMapFacts.add_o	40
Coq.FSets.FMapFacts.add_eq_b	40	0.10.1.0.8	search with cache (only 1: intros Az LS; only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: auto with map).	9.04274702072	1221
Coq.FSets.FMapFacts.add_neq_b	40
Coq.FSets.FMapFacts.add_b	40
Coq.FSets.FMapFacts.remove_eq_o	40
Coq.FSets.FMapFacts.remove_neq_o	40	0.1.0.1.2	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.052925825119	12
Coq.FSets.FMapFacts.remove_o	40	2.0.0.2.0.0.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.474863052368	167
Coq.FSets.FMapFacts.remove_eq_b	40
Coq.FSets.FMapFacts.remove_neq_b	40
Coq.FSets.FMapFacts.remove_b	40
Coq.FSets.FMapFacts.map_o	40
Coq.FSets.FMapFacts.map_b	40
Coq.FSets.FMapFacts.mapi_b	40
Coq.FSets.FMapFacts.mapi_o	40
Coq.FSets.FMapFacts.map2_1bis	40
Coq.FSets.FMapFacts.elements_o	40
Coq.FSets.FMapFacts.elements_b	40
Coq.FSets.FMapFacts.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.Equal_Equiv	40
Coq.FSets.FMapFacts.Equiv_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb	40
Coq.FSets.FMapFacts.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.Equal_refl	40	0	search with cache (only 1: split).	0.00870108604431	1
Coq.FSets.FMapFacts.Equal_sym	40	9.5	search with cache (only 1: intros H x y Hxy; only 1: firstorder).	0.128802061081	218
Coq.FSets.FMapFacts.Equal_trans	40	1.6.6.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H; only 1: auto with map).	0.524245023727	329
Coq.FSets.FMapFacts.Equal_ST	40	2.0	search with cache (only 1: intro n; only 1: auto).	0.0478839874268	11
Coq.FSets.FMapFacts.In_m_Proper	40
Coq.FSets.FMapFacts.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.Empty_m_Proper	40
Coq.FSets.FMapFacts.is_empty_m_Proper	40
Coq.FSets.FMapFacts.mem_m_Proper	40
Coq.FSets.FMapFacts.find_m_Proper	40	1.1.1.1.0.10.0.4.2	search with cache (only 1: intros m m' Hm; only 1: intros l1 l2; only 1: intros; only 1: rewrite <- H0; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply MapsTo_iff; only 1: intuition).	22.5704669952	13702
Coq.FSets.FMapFacts.add_m_Proper	40
Coq.FSets.FMapFacts.remove_m_Proper	40
Coq.FSets.FMapFacts.map_m_Proper	40
Coq.FSets.FMapFacts.eqk_equiv	40
Coq.FSets.FMapFacts.eqke_equiv	40
Coq.FSets.FMapFacts.InA_eqke_eqk	40
Coq.FSets.FMapFacts.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.findA_rev	40
Coq.FSets.FMapFacts.elements_Empty	40
Coq.FSets.FMapFacts.elements_empty	40
Coq.FSets.FMapFacts.of_list_1	40
Coq.FSets.FMapFacts.of_list_1b	40
Coq.FSets.FMapFacts.of_list_2	40
Coq.FSets.FMapFacts.of_list_3	40
Coq.FSets.FMapFacts.fold_spec_right	40
Coq.FSets.FMapFacts.fold_rec	40
Coq.FSets.FMapFacts.fold_rec_bis	40
Coq.FSets.FMapFacts.fold_rec_nodep	40	0.3.0.0.0.7	search with cache (only 1: intros Base Step; only 1: intros; only 1: apply fold_rec; only 1: set (F := uncurry f); only 1: auto; only 1: auto).	0.495079994202	378
Coq.FSets.FMapFacts.fold_rec_weak	40
Coq.FSets.FMapFacts.fold_rel	40
Coq.FSets.FMapFacts.map_induction	40
Coq.FSets.FMapFacts.map_induction_bis	40
Coq.FSets.FMapFacts.fold_identity	40
Coq.FSets.FMapFacts.fold_init	40
Coq.FSets.FMapFacts.fold_Empty	40
Coq.FSets.FMapFacts.fold_commutes	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Equal2	40
Coq.FSets.FMapFacts.fold_Add	40
Coq.FSets.FMapFacts.fold_add	40
Coq.FSets.FMapFacts.cardinal_fold	40
Coq.FSets.FMapFacts.cardinal_Empty	40
Coq.FSets.FMapFacts.Equal_cardinal	40
Coq.FSets.FMapFacts.cardinal_1	40
Coq.FSets.FMapFacts.cardinal_2	40
Coq.FSets.FMapFacts.cardinal_inv_1	40	4.0.5	search with cache (only 1: intros le_mn2; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.455407857895	92
Coq.FSets.FMapFacts.cardinal_inv_2	40
Coq.FSets.FMapFacts.cardinal_inv_2b	40	0.0.0.0.0.0.0.3.11.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: unfold eq_key_elt at 1; only 1: exfalso; only 1: auto; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	30.0795829296	25248
Coq.FSets.FMapFacts.filter_iff	40
Coq.FSets.FMapFacts.for_all_iff	40
Coq.FSets.FMapFacts.exists_iff	40
Coq.FSets.FMapFacts.Disjoint_alt	40	12.3.19.7	search with cache (only 1: intros m Hsame; only 1: hnf; only 1: compute; only 1: firstorder).	30.6787230968	30402
Coq.FSets.FMapFacts.partition_iff_1	40
Coq.FSets.FMapFacts.partition_iff_2	40
Coq.FSets.FMapFacts.partition_Partition	40
Coq.FSets.FMapFacts.Partition_In	40
Coq.FSets.FMapFacts.Disjoint_sym	40	9.14.2.1	search with cache (only 1: intros m m' Hm; only 1: intro; only 1: intuition; only 1: firstorder).	2.98802185059	3427
Coq.FSets.FMapFacts.Partition_sym	40	8.0.6.12	search with cache (only 1: intros i j Hi E; only 1: split; only 1: firstorder; only 1: firstorder).	3.26938700676	2326
Coq.FSets.FMapFacts.Partition_Empty	40
Coq.FSets.FMapFacts.Partition_Add	40
Coq.FSets.FMapFacts.Partition_fold	40
Coq.FSets.FMapFacts.Partition_cardinal	40
Coq.FSets.FMapFacts.Partition_partition	40
Coq.FSets.FMapFacts.update_mapsto_iff	40
Coq.FSets.FMapFacts.update_dec	40
Coq.FSets.FMapFacts.update_in_iff	40
Coq.FSets.FMapFacts.diff_mapsto_iff	40
Coq.FSets.FMapFacts.diff_in_iff	40
Coq.FSets.FMapFacts.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.restrict_in_iff	40
Coq.FSets.FMapFacts.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.1	search with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.400475978851	161
Coq.FSets.FMapFacts.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.Partition_m_Proper	40
Coq.FSets.FMapFacts.update_m_Proper	40
Coq.FSets.FMapFacts.restrict_m_Proper	40
Coq.FSets.FMapFacts.diff_m_Proper	40
Coq.FSets.FMapFacts.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.gtb_1	40
Coq.FSets.FMapFacts.leb_1	40
Coq.FSets.FMapFacts.gtb_compat	40
Coq.FSets.FMapFacts.leb_compat	40
Coq.FSets.FMapFacts.elements_split	40
Coq.FSets.FMapFacts.elements_Add	40
Coq.FSets.FMapFacts.elements_Add_Above	40
Coq.FSets.FMapFacts.elements_Add_Below	40
Coq.FSets.FMapFacts.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.max_elt_Above	40
Coq.FSets.FMapFacts.max_elt_MapsTo	40
Coq.FSets.FMapFacts.max_elt_Empty	40
Coq.FSets.FMapFacts.min_elt_Below	40
Coq.FSets.FMapFacts.min_elt_MapsTo	40
Coq.FSets.FMapFacts.min_elt_Empty	40
Coq.FSets.FMapFacts.map_induction_max	40
Coq.FSets.FMapFacts.map_induction_min	40
Coq.FSets.FMapFacts.fold_Equal	40
Coq.FSets.FMapFacts.fold_Add_Above	40
Coq.FSets.FMapFacts.fold_Add_Below	40
Coq.FSets.FMapWeakList.empty_1	40	48	search with cache (only 1: easy).	0.82840013504	1704
Coq.FSets.FMapWeakList.empty_NoDup	40	1.5	search with cache (only 1: unfold Empty, empty; only 1: auto).	0.0179960727692	15
Coq.FSets.FMapWeakList.is_empty_1	40	6.6.0.1.7	search with cache (only 1: destruct m; only 1: intuition; only 1: intuition; only 1: compute in H; only 1: eauto).	20.7929439545	1661
Coq.FSets.FMapWeakList.is_empty_2	40	3.2.0.2.1.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: intros p l inlist; only 1: intuition; only 1: induction H; only 1: intuition; only 1: intuition).	2.77622795105	1176
Coq.FSets.FMapWeakList.mem_1	40	2.26.2	search with cache (only 1: intros p l abs; only 1: fix odd_spec 1; only 1: auto).	15.9875309467	3077
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_eq	40
Coq.FSets.FMapWeakList.add_1	40
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.add_3'	40
Coq.FSets.FMapWeakList.add_NoDup	40
Coq.FSets.FMapWeakList.add_eq	40
Coq.FSets.FMapWeakList.add_not_eq	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40	0.0.2.0.1.0.0.0.0.1.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto).	13.9897389412	4047
Coq.FSets.FMapWeakList.remove_3'	40
Coq.FSets.FMapWeakList.remove_NoDup	40
Coq.FSets.FMapWeakList.elements_1	40	0	search with cache (only 1: firstorder).	0.00969290733337	1
Coq.FSets.FMapWeakList.elements_2	40	0	search with cache (only 1: auto).	0.00765681266785	1
Coq.FSets.FMapWeakList.elements_3w	40	3.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: auto).	0.104722976685	30
Coq.FSets.FMapWeakList.fold_1	40	2.2.6.2.4	search with cache (only 1: induction m; only 1: auto; only 1: intros p l abs; only 1: simpl; only 1: intuition).	2.51152801514	1968
Coq.FSets.FMapWeakList.submap_1	40
Coq.FSets.FMapWeakList.submap_2	40
Coq.FSets.FMapWeakList.equal_1	40
Coq.FSets.FMapWeakList.equal_2	40
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.map_NoDup	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.mapi_NoDup	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e); only 1: intros; only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: simpl in *; only 1: inversion H; only 1: simpl in *; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	23.8567159176	7971
Coq.FSets.FMapWeakList.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.combine_NoDup	40
Coq.FSets.FMapWeakList.combine_l_1	40
Coq.FSets.FMapWeakList.combine_r_1	40
Coq.FSets.FMapWeakList.combine_1	40
Coq.FSets.FMapWeakList.map2_NoDup	40
Coq.FSets.FMapWeakList.map2_0	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FMapWeakList.MapsTo_1	40
Coq.FSets.FMapWeakList.mem_1	40
Coq.FSets.FMapWeakList.mem_2	40
Coq.FSets.FMapWeakList.empty_1	40	0.13.1.9	search with cache (only 1: repeat red; only 1: intros m x; only 1: unfold Raw.PX.MapsTo; only 1: inversion 1).	0.642877817154	942
Coq.FSets.FMapWeakList.is_empty_1	40
Coq.FSets.FMapWeakList.is_empty_2	40	1.2.1.6	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: intros; only 1: intuition).	0.932878017426	628
Coq.FSets.FMapWeakList.add_1	40	5.35	search with cache (only 1: fix gcd_greatest 1; only 1: intuition).	4.22459697723	8205
Coq.FSets.FMapWeakList.add_2	40
Coq.FSets.FMapWeakList.add_3	40
Coq.FSets.FMapWeakList.remove_1	40
Coq.FSets.FMapWeakList.remove_2	40
Coq.FSets.FMapWeakList.remove_3	40
Coq.FSets.FMapWeakList.find_1	40
Coq.FSets.FMapWeakList.find_2	40
Coq.FSets.FMapWeakList.elements_1	40	4.1.1.0	search with cache (only 1: intros m; only 1: case m; only 1: intros NoDup hyp; only 1: auto).	0.0366740226746	12
Coq.FSets.FMapWeakList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0131089687347	2
Coq.FSets.FMapWeakList.elements_3w	40	1.13.1	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.188856124878	315
Coq.FSets.FMapWeakList.cardinal_1	40	0.0	search with cache (only 1: intros m; only 1: auto).	0.0131590366364	2
Coq.FSets.FMapWeakList.fold_1	40
Coq.FSets.FMapWeakList.equal_1	40	1.7	search with cache (only 1: fix even_spec 1; only 1: firstorder).	0.0892090797424	51
Coq.FSets.FMapWeakList.equal_2	40	3.6.9	search with cache (only 1: fix even_spec 1; only 1: destruct m; only 1: auto).	1.55127501488	1657
Coq.FSets.FMapWeakList.map_1	40
Coq.FSets.FMapWeakList.map_2	40
Coq.FSets.FMapWeakList.mapi_1	40
Coq.FSets.FMapWeakList.mapi_2	40
Coq.FSets.FMapWeakList.map2_1	40
Coq.FSets.FMapWeakList.map2_2	40
Coq.FSets.FSetToFiniteSet.In_In	40	5.0	search with cache (only 1: intros n m; only 1: intuition PeanoNat.Nat.order).	0.0397160053253	24
Coq.FSets.FSetToFiniteSet.Subset_Included	40	1.0	search with cache (only 1: intros n m; only 1: now PeanoNat.Nat.nzsimpl).	0.038379907608	3
Coq.FSets.FSetToFiniteSet.Equal_Same_set	40	22	search with cache (only 1: firstorder).	5.63433098793	3454
Coq.FSets.FSetToFiniteSet.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.Empty_Empty_set	40	0.0.0.0.0.3	search with cache (only 1: intros x H2; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: firstorder; only 1: intro; only 1: inversion 1).	0.317604064941	113
Coq.FSets.FSetToFiniteSet.singleton_Singleton	40	0.9.4.18.0.1	search with cache (only 1: intro n; only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: Dec.fsetdec; only 1: inversion 1; only 1: Dec.fsetdec).	4.23099112511	5376
Coq.FSets.FSetToFiniteSet.union_Union	40
Coq.FSets.FSetToFiniteSet.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.add_Add	40
Coq.FSets.FSetToFiniteSet.Add_Add	40
Coq.FSets.FSetToFiniteSet.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0759840011597	9
Coq.FSets.FSetEqProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.empty_mem	40
Coq.FSets.FSetEqProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.choose_mem_1	40	16	search with cache (only 1: intuition).	0.296327114105	257
Coq.FSets.FSetEqProperties.choose_mem_2	40	2.3	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	0.44135594368	42
Coq.FSets.FSetEqProperties.add_mem_1	40	0.0.0.0.0.0.2.0	search with cache (only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.159559965134	10
Coq.FSets.FSetEqProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0841588973999	9
Coq.FSets.FSetEqProperties.remove_mem_1	40	1.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0153119564056	7
Coq.FSets.FSetEqProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0847611427307	9
Coq.FSets.FSetEqProperties.singleton_equal_add	40	9	search with cache (only 1: auto with set).	0.0110189914703	10
Coq.FSets.FSetEqProperties.union_mem	40
Coq.FSets.FSetEqProperties.inter_mem	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	26.8057410717	3772
Coq.FSets.FSetEqProperties.diff_mem	40
Coq.FSets.FSetEqProperties.mem_3	40	0.0.8	search with cache (only 1: intuition; only 1: rewrite <- not_mem_iff; only 1: auto with fset).	1.09112286568	370
Coq.FSets.FSetEqProperties.mem_4	40	2.7.4	search with cache (only 1: generalize (mem_iff s x), (mem_iff s' y); only 1: rewrite <- not_mem_iff; only 1: intuition).	4.41718196869	1890
Coq.FSets.FSetEqProperties.equal_refl	40	8	search with cache (only 1: intuition).	0.0326418876648	21
Coq.FSets.FSetEqProperties.equal_sym	40
Coq.FSets.FSetEqProperties.equal_trans	40
Coq.FSets.FSetEqProperties.equal_equal	40	0.0.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0258920192719	6
Coq.FSets.FSetEqProperties.equal_cardinal	40	13.1	search with cache (only 1: intros; only 1: intuition).	0.582471847534	457
Coq.FSets.FSetEqProperties.subset_refl	40	6	search with cache (only 1: auto with set).	0.0144979953766	11
Coq.FSets.FSetEqProperties.subset_antisym	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0176260471344	2
Coq.FSets.FSetEqProperties.subset_trans	40
Coq.FSets.FSetEqProperties.subset_equal	40	1.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0220949649811	5
Coq.FSets.FSetEqProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.add_mem_3	40	2	search with cache (only 1: auto with set).	0.0119280815125	3
Coq.FSets.FSetEqProperties.add_equal	40	2	search with cache (only 1: auto with set).	0.0112679004669	3
Coq.FSets.FSetEqProperties.remove_mem_3	40	17	search with cache (only 1: eauto with set).	11.0100049973	2400
Coq.FSets.FSetEqProperties.remove_equal	40	0.0.0.4.8	search with cache (only 1: generalize (FM.mem_iff (union s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.union_iff s s' x); only 1: rewrite <- not_mem_iff; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	16.8889319897	2852
Coq.FSets.FSetEqProperties.add_remove	40
Coq.FSets.FSetEqProperties.remove_add	40	3.3.13	search with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: rewrite <- not_mem_iff; only 1: intuition).	2.92928504944	1602
Coq.FSets.FSetEqProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.010262966156	1
Coq.FSets.FSetEqProperties.singleton_mem_2	40	0.0.2.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.391216039658	65
Coq.FSets.FSetEqProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.union_sym	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0538501739502	3
Coq.FSets.FSetEqProperties.union_subset_equal	40	16	search with cache (only 1: intuition).	0.0903289318085	119
Coq.FSets.FSetEqProperties.union_equal_1	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0236570835114	3
Coq.FSets.FSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0106089115143	1
Coq.FSets.FSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0115759372711	1
Coq.FSets.FSetEqProperties.add_union_singleton	40	0	search with cache (only 1: auto with set).	0.0108678340912	1
Coq.FSets.FSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0112180709839	1
Coq.FSets.FSetEqProperties.union_subset_1	40	2	search with cache (only 1: auto with set).	0.00999593734741	3
Coq.FSets.FSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00972008705139	1
Coq.FSets.FSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0543200969696	2
Coq.FSets.FSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.011883020401	1
Coq.FSets.FSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0111711025238	1
Coq.FSets.FSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0112099647522	1
Coq.FSets.FSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0105841159821	1
Coq.FSets.FSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0114090442657	1
Coq.FSets.FSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0124549865723	1
Coq.FSets.FSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0111589431763	1
Coq.FSets.FSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.016261100769	2
Coq.FSets.FSetEqProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0104629993439	1
Coq.FSets.FSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0102779865265	1
Coq.FSets.FSetEqProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0290238857269	4
Coq.FSets.FSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.00974893569946	1
Coq.FSets.FSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0133681297302	1
Coq.FSets.FSetEqProperties.remove_inter_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.126834869385	3
Coq.FSets.FSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0098888874054	1
Coq.FSets.FSetEqProperties.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0106959342957	2
Coq.FSets.FSetEqProperties.set_rec	40
Coq.FSets.FSetEqProperties.exclusive_set	40
Coq.FSets.FSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.018089056015	2
Coq.FSets.FSetEqProperties.fold_equal	40	2.0.0.0.2.1	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	1.0873811245	318
Coq.FSets.FSetEqProperties.fold_add	40
Coq.FSets.FSetEqProperties.add_fold	40
Coq.FSets.FSetEqProperties.remove_fold_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0553500652313	8
Coq.FSets.FSetEqProperties.remove_fold_2	40
Coq.FSets.FSetEqProperties.fold_union	40
Coq.FSets.FSetEqProperties.add_cardinal_1	40	8.0	search with cache (only 1: intros; only 1: intuition).	0.0188210010529	10
Coq.FSets.FSetEqProperties.add_cardinal_2	40
Coq.FSets.FSetEqProperties.remove_cardinal_1	40	0.0.0.5.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.397208929062	253
Coq.FSets.FSetEqProperties.remove_cardinal_2	40	13.4.33	search with cache (only 1: intros m H; only 1: rewrite <- not_mem_iff; only 1: intuition).	34.613255024	36832
Coq.FSets.FSetEqProperties.union_cardinal	40
Coq.FSets.FSetEqProperties.subset_cardinal	40	18	search with cache (only 1: intuition).	0.583870887756	967
Coq.FSets.FSetEqProperties.Comp'	40	1	search with cache (only 1: solve_proper).	0.0219719409943	2
Coq.FSets.FSetEqProperties.filter_mem	40
Coq.FSets.FSetEqProperties.for_all_filter	40
Coq.FSets.FSetEqProperties.exists_filter	40
Coq.FSets.FSetEqProperties.partition_filter_1	40	14	search with cache (only 1: firstorder).	1.15804815292	771
Coq.FSets.FSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0141539573669	1
Coq.FSets.FSetEqProperties.filter_add_1	40
Coq.FSets.FSetEqProperties.filter_add_2	40
Coq.FSets.FSetEqProperties.add_filter_1	40
Coq.FSets.FSetEqProperties.add_filter_2	40
Coq.FSets.FSetEqProperties.union_filter	40
Coq.FSets.FSetEqProperties.filter_union	40
Coq.FSets.FSetEqProperties.for_all_mem_1	40	11.0.0.0.6	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	3.50982284546	1898
Coq.FSets.FSetEqProperties.for_all_mem_2	40
Coq.FSets.FSetEqProperties.for_all_mem_3	40
Coq.FSets.FSetEqProperties.for_all_mem_4	40	0.42.55	search with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: auto).	14.3829960823	27840
Coq.FSets.FSetEqProperties.for_all_exists	40
Coq.FSets.FSetEqProperties.Comp'	40	1.15.8.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros a b H; only 1: f_equiv; only 1: auto).	4.66753411293	4864
Coq.FSets.FSetEqProperties.exists_mem_1	40
Coq.FSets.FSetEqProperties.exists_mem_2	40
Coq.FSets.FSetEqProperties.exists_mem_3	40
Coq.FSets.FSetEqProperties.exists_mem_4	40
Coq.FSets.FSetEqProperties.sum_plus	40
Coq.FSets.FSetEqProperties.sum_filter	40
Coq.FSets.FSetEqProperties.fold_compat	40
Coq.FSets.FSetEqProperties.sum_compat	40
Coq.FSets.FSetBridge.empty	40
Coq.FSets.FSetBridge.is_empty	40
Coq.FSets.FSetBridge.mem	40
Coq.FSets.FSetBridge.add	40
Coq.FSets.FSetBridge.singleton	40	220	search with cache (only 1: eauto with *).	38.2797210217	250204
Coq.FSets.FSetBridge.remove	40
Coq.FSets.FSetBridge.union	40
Coq.FSets.FSetBridge.inter	40
Coq.FSets.FSetBridge.diff	40
Coq.FSets.FSetBridge.equal	40
Coq.FSets.FSetBridge.subset	40
Coq.FSets.FSetBridge.elements	40
Coq.FSets.FSetBridge.fold	40	22.0.7	search with cache (only 1: intros; only 1: simpl; only 1: eauto).	2.99595808983	4323
Coq.FSets.FSetBridge.cardinal	40
Coq.FSets.FSetBridge.compat_P_aux	40
Coq.FSets.FSetBridge.filter	40
Coq.FSets.FSetBridge.for_all	40
Coq.FSets.FSetBridge.exists_	40
Coq.FSets.FSetBridge.partition	40
Coq.FSets.FSetBridge.choose_aux	40
Coq.FSets.FSetBridge.choose	40
Coq.FSets.FSetBridge.choose_ok1	40
Coq.FSets.FSetBridge.choose_ok2	40
Coq.FSets.FSetBridge.choose_equal	40
Coq.FSets.FSetBridge.min_elt	40
Coq.FSets.FSetBridge.max_elt	40
Coq.FSets.FSetBridge.empty_1	40
Coq.FSets.FSetBridge.is_empty_1	40
Coq.FSets.FSetBridge.is_empty_2	40
Coq.FSets.FSetBridge.mem_1	40
Coq.FSets.FSetBridge.mem_2	40	1.21.27.1	search with cache (only 1: intro s; only 1: intros l2; only 1: fix even_spec 1; only 1: easy).	12.7097609043	30926
Coq.FSets.FSetBridge.equal_1	40
Coq.FSets.FSetBridge.equal_2	40
Coq.FSets.FSetBridge.subset_1	40
Coq.FSets.FSetBridge.subset_2	40	4.1.0.1.2.0.0.0.0.4.1	search with cache (only 1: intros s s'; only 1: case (M.equal s s'); only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: discriminate; only 1: unfold subset; only 1: case M.subset; only 1: auto; only 1: discriminate).	6.43865513802	5344
Coq.FSets.FSetBridge.choose_1	40
Coq.FSets.FSetBridge.choose_2	40
Coq.FSets.FSetBridge.choose_3	40
Coq.FSets.FSetBridge.elements_1	40
Coq.FSets.FSetBridge.elements_2	40	0.0.0.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.090635061264	43
Coq.FSets.FSetBridge.elements_3	40	0.0.0.4	search with cache (only 1: intuition; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0344200134277	14
Coq.FSets.FSetBridge.elements_3w	40	8.4	search with cache (only 1: intros; only 1: intuition).	0.525166034698	336
Coq.FSets.FSetBridge.min_elt_1	40
Coq.FSets.FSetBridge.min_elt_2	40
Coq.FSets.FSetBridge.min_elt_3	40	0.0.0.0.0.0.1.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.238250017166	9
Coq.FSets.FSetBridge.max_elt_1	40
Coq.FSets.FSetBridge.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	21.1257641315	1199
Coq.FSets.FSetBridge.max_elt_3	40	0.0.0.0.1.2.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.103906154633	18
Coq.FSets.FSetBridge.add_1	40
Coq.FSets.FSetBridge.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0346069335938	5
Coq.FSets.FSetBridge.add_3	40	0.0.0.0.2.18.14	search with cache (only 1: intros n m H; only 1: revert n m; only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	13.9632639885	23176
Coq.FSets.FSetBridge.remove_1	40
Coq.FSets.FSetBridge.remove_2	40	0.0.1.0.1.0	search with cache (only 1: intros s x y; only 1: firstorder; only 1: unfold remove; only 1: case M.empty; only 1: case (M.remove x s); only 1: firstorder).	0.0415790081024	8
Coq.FSets.FSetBridge.remove_3	40	0.0.0.2	search with cache (only 1: intros s x; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.264935970306	98
Coq.FSets.FSetBridge.singleton_1	40
Coq.FSets.FSetBridge.singleton_2	40
Coq.FSets.FSetBridge.union_1	40
Coq.FSets.FSetBridge.union_2	40	1.0.0.0.0.9.4.7.2	search with cache (only 1: intros; only 1: case (M.union s s'); only 1: intros a Ha; only 1: case (M.mem x s); only 1: unfold union; only 1: intros; only 1: case (M.union s s'); only 1: firstorder; only 1: tauto).	17.0973639488	19865
Coq.FSets.FSetBridge.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0294120311737	4
Coq.FSets.FSetBridge.inter_1	40
Coq.FSets.FSetBridge.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0293498039246	4
Coq.FSets.FSetBridge.inter_3	40	0.0.7.0.5	search with cache (only 1: intros s s'; only 1: unfold inter; only 1: intro H; only 1: case (M.inter s s'); only 1: firstorder).	1.01906204224	705
Coq.FSets.FSetBridge.diff_1	40
Coq.FSets.FSetBridge.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0303018093109	4
Coq.FSets.FSetBridge.diff_3	40	0.0.1.0.2.6	search with cache (only 1: intros s s'; only 1: intros q H H'; only 1: unfold diff; only 1: case (M.inter s s'); only 1: case (M.diff s s'); only 1: firstorder).	1.73422694206	862
Coq.FSets.FSetBridge.cardinal_1	40
Coq.FSets.FSetBridge.fold_1	40
Coq.FSets.FSetBridge.f_dec	40	1.2	search with cache (only 1: intros op Hop; only 1: decide equality).	0.0967688560486	14
Coq.FSets.FSetBridge.compat_P_aux	40	0.1.15.19.3	search with cache (only 1: intros; only 1: intros Ha Eq; only 1: reduce; only 1: rewrite <- (H _ _ H0); only 1: easy).	14.0147309303	11638
Coq.FSets.FSetBridge.filter_1	40
Coq.FSets.FSetBridge.filter_2	40
Coq.FSets.FSetBridge.filter_3	40	0.1.0.0.3.35	search with cache (only 1: intros z Hz; only 1: intuition; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	32.6219968796	41248
Coq.FSets.FSetBridge.for_all_1	40
Coq.FSets.FSetBridge.for_all_2	40	3.3.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: intro x; only 1: firstorder).	1.25780010223	554
Coq.FSets.FSetBridge.exists_1	40
Coq.FSets.FSetBridge.exists_2	40	0.0.0.0.13.1	search with cache (only 1: unfold exists_; only 1: intros s s' x; only 1: case M.exists_; only 1: intuition; only 1: firstorder; only 1: intuition congruence).	4.52655005455	2716
Coq.FSets.FSetBridge.partition_1	40
Coq.FSets.FSetBridge.partition_2	40
Coq.FSets.FSetCompat.lt_not_eq	40
Coq.FSets.FSetCompat.compare	40
Coq.FSets.FSetCompat.In_compat	40	4	search with cache (only 1: solve_proper).	0.169885873795	20
Coq.FSets.FSetCompat.mem_spec	40
Coq.FSets.FSetCompat.equal_spec	40
Coq.FSets.FSetCompat.subset_spec	40
Coq.FSets.FSetCompat.is_empty_spec	40
Coq.FSets.FSetCompat.add_spec	40
Coq.FSets.FSetCompat.remove_spec	40
Coq.FSets.FSetCompat.singleton_spec	40
Coq.FSets.FSetCompat.elements_spec1	40	23.3.2	search with cache (only 1: split; only 1: simpl_relation; only 1: intuition).	18.9947750568	17793
Coq.FSets.FSetCompat.for_all_spec	40
Coq.FSets.FSetCompat.exists_spec	40
Coq.FSets.FSetCompat.lt_strorder	40
Coq.FSets.FSetCompat.lt_compat	40
Coq.FSets.FSetCompat.compare_spec	40
Coq.FSets.FSetProperties.In_dec	40
Coq.FSets.FSetProperties.Add_Equal	40
Coq.FSets.FSetProperties.equal_refl	40	13	search with cache (only 1: now BinInt.Z.nzsimpl).	0.147844076157	99
Coq.FSets.FSetProperties.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0459411144257	1
Coq.FSets.FSetProperties.equal_trans	40	21.1	search with cache (only 1: intros; only 1: fsetdec).	0.442502975464	742
Coq.FSets.FSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0285711288452	1
Coq.FSets.FSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0489671230316	1
Coq.FSets.FSetProperties.subset_antisym	40	0.0.2.0.29	search with cache (only 1: intros Hb; only 1: split; only 1: intros; only 1: eauto with set; only 1: intuition).	2.76140999794	3732
Coq.FSets.FSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0373170375824	1
Coq.FSets.FSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0294718742371	1
Coq.FSets.FSetProperties.subset_remove_3	40	0.2	search with cache (only 1: intros l; only 1: fsetdec).	0.0518200397491	4
Coq.FSets.FSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0479640960693	1
Coq.FSets.FSetProperties.subset_add_3	40	2	search with cache (only 1: fsetdec).	0.0736930370331	3
Coq.FSets.FSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0414671897888	1
Coq.FSets.FSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0391089916229	1
Coq.FSets.FSetProperties.double_inclusion	40	0.0.5.9	search with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).	0.53010392189	272
Coq.FSets.FSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0664310455322	1
Coq.FSets.FSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0421929359436	1
Coq.FSets.FSetProperties.add_equal	40	0	search with cache (only 1: fsetdec).	0.0611970424652	1
Coq.FSets.FSetProperties.add_add	40	3.6.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.248615980148	58
Coq.FSets.FSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.0746879577637	1
Coq.FSets.FSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0837528705597	1
Coq.FSets.FSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.0934641361237	1
Coq.FSets.FSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.104228019714	1
Coq.FSets.FSetProperties.singleton_equal_add	40	20.3.2	search with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: fsetdec; only 1: fsetdec).	0.807855129242	847
Coq.FSets.FSetProperties.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.185387134552	2
Coq.FSets.FSetProperties.union_sym	40	0	search with cache (only 1: intuition fsetdec).	0.0656540393829	1
Coq.FSets.FSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0578329563141	1
Coq.FSets.FSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0982010364532	1
Coq.FSets.FSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0750350952148	1
Coq.FSets.FSetProperties.union_assoc	40	2.1.0.17	search with cache (only 1: intros EQ; only 1: do 2 rewrite union_iff; only 1: intuition; only 1: fsetdec).	0.886447191238	298
Coq.FSets.FSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0899600982666	1
Coq.FSets.FSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.115669965744	1
Coq.FSets.FSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.211111783981	1
Coq.FSets.FSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.193982124329	1
Coq.FSets.FSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0352058410645	1
Coq.FSets.FSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0352220535278	1
Coq.FSets.FSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0611729621887	1
Coq.FSets.FSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0524430274963	1
Coq.FSets.FSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0524339675903	1
Coq.FSets.FSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0580852031708	1
Coq.FSets.FSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0763139724731	1
Coq.FSets.FSetProperties.not_in_union	40	0.4	search with cache (only 1: intuition; only 1: fsetdec).	0.116755008698	14
Coq.FSets.FSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0628499984741	1
Coq.FSets.FSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0693929195404	1
Coq.FSets.FSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0704641342163	1
Coq.FSets.FSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.097021818161	1
Coq.FSets.FSetProperties.inter_assoc	40	3.0.3.19	search with cache (only 1: intros EQ; only 1: split; only 1: fsetdec; only 1: fsetdec).	10.084651947	3227
Coq.FSets.FSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.137322902679	1
Coq.FSets.FSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.174036979675	1
Coq.FSets.FSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.154589891434	1
Coq.FSets.FSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.106568813324	1
Coq.FSets.FSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0665988922119	1
Coq.FSets.FSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0526759624481	1
Coq.FSets.FSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0385358333588	1
Coq.FSets.FSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0394518375397	1
Coq.FSets.FSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0530469417572	1
Coq.FSets.FSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0584290027618	1
Coq.FSets.FSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0908269882202	1
Coq.FSets.FSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0440011024475	1
Coq.FSets.FSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0887022018433	1
Coq.FSets.FSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0981199741364	1
Coq.FSets.FSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.176533937454	1
Coq.FSets.FSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.117360115051	1
Coq.FSets.FSetProperties.Add_add	40	1.4.0.0.1.0.0.6.0.1	search with cache (only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: red; only 1: intro H; only 1: intros; only 1: fsetdec; only 1: intuition; only 1: red; only 1: intros q; only 1: fsetdec).	6.45476317406	2851
Coq.FSets.FSetProperties.Add_remove	40	0.0.0.0.6.9	search with cache (only 1: split; only 1: fsetdec; only 1: destruct 1; only 1: eauto with set; only 1: apply remove_3 with x; only 1: auto).	1.20422887802	505
Coq.FSets.FSetProperties.union_Add	40
Coq.FSets.FSetProperties.inter_Add	40
Coq.FSets.FSetProperties.union_Equal	40	0.0.5	search with cache (only 1: intros H; only 1: expAdd; only 1: fsetdec).	0.331321001053	14
Coq.FSets.FSetProperties.inter_Add_2	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.299848079681	3
Coq.FSets.FSetProperties.elements_Empty	40
Coq.FSets.FSetProperties.elements_empty	40
Coq.FSets.FSetProperties.of_list_1	40
Coq.FSets.FSetProperties.of_list_2	40
Coq.FSets.FSetProperties.of_list_3	40
Coq.FSets.FSetProperties.fold_spec_right	40
Coq.FSets.FSetProperties.fold_rec	40
Coq.FSets.FSetProperties.fold_rec_bis	40
Coq.FSets.FSetProperties.fold_rec_nodep	40	9.1.0.16.0.8	search with cache (only 1: intros a b; only 1: intro H; only 1: intros n m Hn; only 1: apply fold_rec; only 1: eauto; only 1: firstorder).	8.56149888039	15148
Coq.FSets.FSetProperties.fold_rec_weak	40
Coq.FSets.FSetProperties.fold_rel	40
Coq.FSets.FSetProperties.set_induction	40
Coq.FSets.FSetProperties.set_induction_bis	40
Coq.FSets.FSetProperties.fold_identity	40
Coq.FSets.FSetProperties.fold_0	40
Coq.FSets.FSetProperties.fold_1	40
Coq.FSets.FSetProperties.fold_2	40
Coq.FSets.FSetProperties.fold_1b	40	0.1.3.0.6	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto with *; only 1: auto with *; only 1: auto with *).	0.712510108948	482
Coq.FSets.FSetProperties.fold_commutes	40
Coq.FSets.FSetProperties.fold_init	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.fold_empty	40
Coq.FSets.FSetProperties.fold_add	40	0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	0.0743329524994	16
Coq.FSets.FSetProperties.add_fold	40
Coq.FSets.FSetProperties.remove_fold_1	40	0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.073224067688	16
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0421259403229	3
Coq.FSets.FSetProperties.fold_union_inter	40
Coq.FSets.FSetProperties.fold_diff_inter	40
Coq.FSets.FSetProperties.fold_union	40
Coq.FSets.FSetProperties.fold_plus	40
Coq.FSets.FSetProperties.cardinal_fold	40
Coq.FSets.FSetProperties.cardinal_0	40
Coq.FSets.FSetProperties.cardinal_1	40
Coq.FSets.FSetProperties.cardinal_2	40
Coq.FSets.FSetProperties.cardinal_Empty	40
Coq.FSets.FSetProperties.cardinal_inv_1	40
Coq.FSets.FSetProperties.cardinal_inv_2	40
Coq.FSets.FSetProperties.cardinal_inv_2b	40
Coq.FSets.FSetProperties.Equal_cardinal	40
Coq.FSets.FSetProperties.cardinal_m_Proper	40
Coq.FSets.FSetProperties.empty_cardinal	40
Coq.FSets.FSetProperties.singleton_cardinal	40
Coq.FSets.FSetProperties.diff_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal	40
Coq.FSets.FSetProperties.subset_cardinal_lt	40
Coq.FSets.FSetProperties.union_inter_cardinal	40
Coq.FSets.FSetProperties.union_cardinal_inter	40
Coq.FSets.FSetProperties.union_cardinal_le	40
Coq.FSets.FSetProperties.add_cardinal_1	40	0.0.7.1	search with cache (only 1: symmetry; only 1: generalize (F.mem_iff s x); only 1: intros; only 1: intuition).	0.375325202942	152
Coq.FSets.FSetProperties.add_cardinal_2	40	5.0.0.1.21	search with cache (only 1: intro H; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with fset; only 1: auto with *).	36.9411931038	23795
Coq.FSets.FSetProperties.remove_cardinal_1	40
Coq.FSets.FSetProperties.remove_cardinal_2	40	9.6	search with cache (only 1: intros until s; only 1: intuition).	1.7302031517	1001
Coq.FSets.FSetProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.gtb_1	40
Coq.FSets.FSetProperties.leb_1	40
Coq.FSets.FSetProperties.gtb_compat	40
Coq.FSets.FSetProperties.leb_compat	40
Coq.FSets.FSetProperties.elements_split	40
Coq.FSets.FSetProperties.elements_Add	40
Coq.FSets.FSetProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.set_induction_max	40
Coq.FSets.FSetProperties.set_induction_min	40
Coq.FSets.FSetProperties.fold_3	40
Coq.FSets.FSetProperties.fold_4	40
Coq.FSets.FSetProperties.fold_equal	40
Coq.FSets.FSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0393779277802	3
Coq.FSets.FSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0392978191376	3
Coq.FSets.FSetProperties.choose_equal	40
Coq.FSets.FSetDecide.test_push	40	2.0	search with cache (only 1: intros; only 1: trivial).	0.040069103241	4
Coq.FSets.FSetDecide.test_pull	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.612288951874	2
Coq.FSets.FSetDecide.eq_refl_iff	40	1.1.2.1	search with cache (only 1: split; only 1: eauto; only 1: intros H; only 1: auto).	0.0414061546326	9
Coq.FSets.FSetDecide.dec_In	40
Coq.FSets.FSetDecide.dec_eq	40
Coq.FSets.FSetDecide.test_eq_trans_1	40
Coq.FSets.FSetDecide.test_eq_trans_2	40
Coq.FSets.FSetDecide.test_eq_neq_trans_1	40	1.9.27	search with cache (only 1: intros x y; only 1: intros n m p; only 1: fsetdec).	25.518830061	19731
Coq.FSets.FSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.264210939407	1
Coq.FSets.FSetDecide.test_In_singleton	40	20.1	search with cache (only 1: intros; only 1: intuition).	0.546708106995	891
Coq.FSets.FSetDecide.test_add_In	40	3.19	search with cache (only 1: intros n m; only 1: fsetdec).	3.03677105904	2709
Coq.FSets.FSetDecide.test_Subset_add_remove	40	5.18	search with cache (only 1: intro p; only 1: fsetdec).	1.57051205635	1961
Coq.FSets.FSetDecide.test_eq_disjunction	40	0.7	search with cache (only 1: intros n m H; only 1: fsetdec).	0.130331993103	24
Coq.FSets.FSetDecide.test_not_In_disj	40	0.6	search with cache (only 1: intros n m Hn Hm; only 1: fsetdec).	0.656419038773	51
Coq.FSets.FSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.149232149124	1
Coq.FSets.FSetDecide.test_iff_conj	40	0.18	search with cache (only 1: intros n m H; only 1: fsetdec).	1.52373099327	644
Coq.FSets.FSetDecide.test_set_ops_1	40	3.12	search with cache (only 1: intros a n m H; only 1: fsetdec).	1.22770500183	822
Coq.FSets.FSetDecide.eq_chain_test	40	0.7	search with cache (only 1: intros n m Hn; only 1: fsetdec).	0.415679931641	57
Coq.FSets.FSetDecide.test_too_complex	40	5.0.2.3	search with cache (only 1: intros a b H; only 1: unfold Subset; only 1: intros; only 1: intuition).	0.651870012283	323
Coq.FSets.FSetDecide.function_test_1	40	2	search with cache (only 1: fsetdec).	0.0952250957489	3
Coq.FSets.FSetDecide.function_test_2	40	0.1.6	search with cache (only 1: intros a b Ha Hb; only 1: intros; only 1: fsetdec).	0.22385597229	32
Coq.FSets.FSetDecide.test_baydemir	40	0.4.0.0	search with cache (only 1: intro H; only 1: intros s1; only 1: intros n m; only 1: fsetdec).	0.114691972733	20
Coq.FSets.FMapList.empty_1	40	2.15	search with cache (only 1: intro H; only 1: inversion_clear 1).	0.241865873337	161
Coq.FSets.FMapList.empty_sorted	40	62	search with cache (only 1: constructor 1).	0.437376976013	1971
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40	0.8.1.0.2	search with cache (only 1: destruct m; only 1: simpl; only 1: trivial; only 1: red; only 1: intuition).	3.33861303329	923
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.add_Inf	40
Coq.FSets.FMapList.add_sorted	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.remove_Inf	40
Coq.FSets.FMapList.remove_sorted	40
Coq.FSets.FMapList.elements_1	40	5.1	search with cache (only 1: intros e' eqfind; only 1: eauto with ordered_type).	0.0362470149994	12
Coq.FSets.FMapList.elements_2	40	2.0	search with cache (only 1: intros m x; only 1: auto).	0.0168759822845	4
Coq.FSets.FMapList.elements_3	40	2.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0592160224915	12
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40
Coq.FSets.FMapList.equal_2	40
Coq.FSets.FMapList.equal_cons	40
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.map_lelistA	40	0.0.4.4.0.0.3.0.6.9	search with cache (only 1: intros m Hm x; only 1: case m; only 1: intros; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros sorted belong1; only 1: intuition; only 1: inversion_clear H; only 1: intuition).	23.5940990448	12880
Coq.FSets.FMapList.map_sorted	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.mapi_lelistA	40	0.0.0.0.1.5.0	search with cache (only 1: induction m; only 1: constructor 1; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.37356305122	435
Coq.FSets.FMapList.mapi_sorted	40	2.0.1.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear Hm; only 1: auto).	1.16621398926	360
Coq.FSets.FMapList.map2_alt_equiv	40
Coq.FSets.FMapList.combine_lelistA	40
Coq.FSets.FMapList.combine_sorted	40
Coq.FSets.FMapList.map2_sorted	40
Coq.FSets.FMapList.combine_1	40
Coq.FSets.FMapList.map2_0	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.MapsTo_1	40
Coq.FSets.FMapList.mem_1	40
Coq.FSets.FMapList.mem_2	40	2.0.15	search with cache (only 1: fix odd_spec 1; only 1: intros m; only 1: auto).	2.56602501869	2497
Coq.FSets.FMapList.empty_1	40	2.0.1.16	search with cache (only 1: repeat red; only 1: simpl; only 1: intros a e; only 1: inversion 1).	0.174809932709	275
Coq.FSets.FMapList.is_empty_1	40
Coq.FSets.FMapList.is_empty_2	40	2.1.4	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: auto).	0.0920951366425	44
Coq.FSets.FMapList.add_1	40
Coq.FSets.FMapList.add_2	40
Coq.FSets.FMapList.add_3	40
Coq.FSets.FMapList.remove_1	40
Coq.FSets.FMapList.remove_2	40
Coq.FSets.FMapList.remove_3	40
Coq.FSets.FMapList.find_1	40
Coq.FSets.FMapList.find_2	40
Coq.FSets.FMapList.elements_1	40	3.0	search with cache (only 1: intros m; only 1: intuition).	0.0202059745789	5
Coq.FSets.FMapList.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0191130638123	2
Coq.FSets.FMapList.elements_3	40	2.21.0	search with cache (only 1: intros m; only 1: case m; only 1: auto).	0.30237698555	643
Coq.FSets.FMapList.elements_3w	40
Coq.FSets.FMapList.cardinal_1	40	6.3	search with cache (only 1: intros l'; only 1: trivial).	0.0536308288574	49
Coq.FSets.FMapList.fold_1	40
Coq.FSets.FMapList.equal_1	40	0.21	search with cache (only 1: fix odd_spec 1; only 1: auto).	5.86198806763	1876
Coq.FSets.FMapList.equal_2	40	0.4.13	search with cache (only 1: fix even_spec 1; only 1: intros m; only 1: auto).	0.703357934952	1002
Coq.FSets.FMapList.map_1	40
Coq.FSets.FMapList.map_2	40
Coq.FSets.FMapList.mapi_1	40
Coq.FSets.FMapList.mapi_2	40
Coq.FSets.FMapList.map2_1	40
Coq.FSets.FMapList.map2_2	40
Coq.FSets.FMapList.eq_equal	40
Coq.FSets.FMapList.eq_1	40
Coq.FSets.FMapList.eq_2	40
Coq.FSets.FMapList.eq_refl	40	0.14	search with cache (only 1: fix even_spec 1; only 1: auto).	0.526865005493	453
Coq.FSets.FMapList.eq_sym	40
Coq.FSets.FMapList.eq_trans	40
Coq.FSets.FMapList.lt_trans	40
Coq.FSets.FMapList.lt_not_eq	40
Coq.FSets.FMapList.compare	40	4.1.1.0.11	search with cache (only 1: fix le_div2 1; only 1: intros (l, Hl); only 1: intros (m2, Hm2); only 1: unfold eq; only 1: auto).	1.48978900909	1203
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.29.7	search with cache (only 1: intro H; only 1: split; only 1: auto with sets).	0.436347961426	1612
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	3.17	search with cache (only 1: destruct 1; only 1: auto).	1.28453111649	837
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.0.4.5.5	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.567654132843	695
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.5.10.19.10	search with cache (only 1: red; only 1: intros n m; only 1: intros; only 1: constructor; only 1: auto).	1.08387899399	4416
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.1.0.1.11	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.449023962021	465
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.1	search with cache (only 1: red; only 1: auto with sets).	0.00970101356506	3
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	7.0.3.1.0.10	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: unfold rev; only 1: auto).	20.2149610519	12666
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.3.0.0.0.1	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	4.63622283936	1484
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	17.6398961544	8091
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.0	search with cache (only 1: unfold unorm, lnorm; only 1: now induction d).	0.0289659500122	2
Coq.Numbers.DecimalFacts.norm_invol	40	3.2.13	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.337745904922	458
Coq.Numbers.DecimalPos.of_lu_eqn	40
Coq.Numbers.DecimalPos.of_lu_revapp	40
Coq.Numbers.DecimalPos.Nadd_simpl	40
Coq.Numbers.DecimalPos.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.of_uint_alt	40
Coq.Numbers.DecimalPos.of_lu_rev	40
Coq.Numbers.DecimalPos.of_lu_double_gen	40
Coq.Numbers.DecimalPos.of_lu_double	40
Coq.Numbers.DecimalPos.of_lu_succ_double	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.succ_double_alt	40
Coq.Numbers.DecimalPos.double_succ	40
Coq.Numbers.DecimalPos.to_lu_succ	40
Coq.Numbers.DecimalPos.nat_iter_S	40	4.3	search with cache (only 1: simpl; only 1: solve [ auto ]).	0.0405089855194	9
Coq.Numbers.DecimalPos.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.031877040863	1
Coq.Numbers.DecimalPos.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.of_lu_0	40
Coq.Numbers.DecimalPos.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Nadd_alt	40
Coq.Numbers.DecimalPos.to_of_lu	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_uint_nonzero	40
Coq.Numbers.DecimalPos.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0521929264069	3
Coq.Numbers.DecimalPos.to_uint_inj	40
Coq.Numbers.DecimalPos.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.of_uint_norm	40	3	search with cache (only 1: now induction d).	0.720194101334	195
Coq.Numbers.DecimalPos.of_inj	40
Coq.Numbers.DecimalPos.of_iff	40
Coq.Numbers.DecimalPos.of_to	40
Coq.Numbers.DecimalPos.to_of	40
Coq.Numbers.DecimalPos.to_int_inj	40
Coq.Numbers.DecimalPos.to_int_pos_surj	40
Coq.Numbers.DecimalPos.of_int_norm	40
Coq.Numbers.DecimalPos.of_inj_pos	40
Coq.Numbers.DecimalNat.to_lu_succ	40	5	search with cache (only 1: auto with arith).	0.0579588413239	25
Coq.Numbers.DecimalNat.to_little_uint_succ	40
Coq.Numbers.DecimalNat.to_lu_equiv	40
Coq.Numbers.DecimalNat.to_uint_alt	40
Coq.Numbers.DecimalNat.of_lu_eqn	40
Coq.Numbers.DecimalNat.of_lu_succ	40
Coq.Numbers.DecimalNat.of_to_lu	40
Coq.Numbers.DecimalNat.of_lu_revapp	40
Coq.Numbers.DecimalNat.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.of_uint_alt	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_lu_tenfold	40
Coq.Numbers.DecimalNat.of_lu_0	40
Coq.Numbers.DecimalNat.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.to_of_lu	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_uint_inj	40
Coq.Numbers.DecimalNat.to_uint_surj	40
Coq.Numbers.DecimalNat.of_uint_norm	40	4	search with cache (only 1: now induction d).	0.0716369152069	15
Coq.Numbers.DecimalNat.of_inj	40
Coq.Numbers.DecimalNat.of_iff	40
Coq.Numbers.DecimalNat.of_to	40
Coq.Numbers.DecimalNat.to_of	40
Coq.Numbers.DecimalNat.to_int_inj	40
Coq.Numbers.DecimalNat.to_int_pos_surj	40
Coq.Numbers.DecimalNat.of_int_norm	40
Coq.Numbers.DecimalNat.of_inj_pos	40
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_uint_inj	40
Coq.Numbers.DecimalN.to_uint_surj	40
Coq.Numbers.DecimalN.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0132219791412	1
Coq.Numbers.DecimalN.of_inj	40	5.1.0	search with cache (only 1: intros; only 1: apply Unsigned.of_inj; only 1: trivial).	0.0676939487457	22
Coq.Numbers.DecimalN.of_iff	40	0.0.1.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0471830368042	13
Coq.Numbers.DecimalN.of_to	40
Coq.Numbers.DecimalN.to_of	40
Coq.Numbers.DecimalN.to_int_inj	40
Coq.Numbers.DecimalN.to_int_pos_surj	40	0.0.0.0.0	search with cache (only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: simpl; only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0254259109497	5
Coq.Numbers.DecimalN.of_int_norm	40	5.10.5	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.844342947006	402
Coq.Numbers.DecimalN.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_add_opp	40	5.0	search with cache (only 1: intros n m; only 1: split).	0.0134541988373	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pair_wd	40	5.1.2	search with cache (only 1: repeat red; only 1: intros n m p q H1 H2; only 1: now f_equiv).	0.474784851074	113
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_wd	40	0.1.3.7.13	search with cache (only 1: simpl_relation; only 1: destruct y; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.99971914291	4378
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_wd	40	0.5.0.1.10.15.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: repeat red; only 1: simpl; only 1: intro; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	31.7256190777	13998
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_comm	40	2.11	search with cache (only 1: fix gcd_divide 1; only 1: assumption).	0.338540077209	304
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.pred_succ	40	3.2.5.1	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: intro p; only 1: now nzsimpl).	1.13946485519	525
Coq.Numbers.Integer.NatPairs.ZNatPairs.succ_pred	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.one_succ	40	9.0.2.0	search with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: compute; only 1: rewrite add_succ_l; only 1: now nzsimpl).	0.216413974762	209
Coq.Numbers.Integer.NatPairs.ZNatPairs.two_succ	40	0.29.0	search with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl').	3.1428000927	1053
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_0	40	10	search with cache (only 1: reflexivity).	0.0171320438385	21
Coq.Numbers.Integer.NatPairs.ZNatPairs.opp_succ	40	1.1	search with cache (only 1: intros; only 1: now nzsimpl).	0.0442380905151	26
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_0_l	40	5.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.157606124878	9
Coq.Numbers.Integer.NatPairs.ZNatPairs.add_succ_l	40	0.2.0.1.13	search with cache (only 1: induction n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl).	1.18972611427	920
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_0_r	40	0.0.3.5	search with cache (only 1: unfold Z.eq; only 1: intros q; only 1: simpl in *; only 1: now nzsimpl).	0.320077896118	116
Coq.Numbers.Integer.NatPairs.ZNatPairs.sub_succ_r	40	0.0.5.1.2.2	search with cache (only 1: induction n; only 1: destruct m; only 1: unfold Z.eq; only 1: apply BinInt.Z.add_cancel_l; only 1: simpl; only 1: now nzsimpl).	1.13153004646	607
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_0_l	40	0.1.0.0.4	search with cache (only 1: induction n; only 1: unfold Z.eq; only 1: simpl in *; only 1: rewrite !add_assoc; only 1: now nzsimpl).	0.229135990143	37
Coq.Numbers.Integer.NatPairs.ZNatPairs.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_irrefl	40	11.2.2.0	search with cache (only 1: intros; only 1: destruct n; only 1: intro H; only 1: false_hyp H PeanoNat.Nat.lt_irrefl).	0.997333049774	970
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_nge	40	1.1.0.2	search with cache (only 1: intros a n; only 1: unfold Z.lt, Z.le, Z.eq; only 1: rewrite nle_gt; only 1: now nzsimpl).	0.440842866898	80
Coq.Numbers.Integer.NatPairs.ZNatPairs.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0183320045471	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0179538726807	3
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0214140415192	4
Coq.Numbers.Integer.Abstract.ZAddOrder.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0176301002502	3
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_0	40	0.0.16	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	4.78061008453	1931
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_0	40	0.1.18	search with cache (only 1: intro m; only 1: intro n; only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	25.7148399353	10801
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_m1_0	40	0.16.20	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	2.20526790619	1874
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_r	40	0.18.1	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	34.8601160049	12337
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.odd_pred	40	0.14.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	25.3338057995	8362
Coq.Numbers.Integer.Abstract.ZParity.even_pred	40	0.0.2.2.9.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	32.64189291	15008
Coq.Numbers.Integer.Abstract.ZParity.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0170738697052	3
Coq.Numbers.Integer.Abstract.ZMulOrder.mul_nonpos_nonneg	40	0.0.6.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	0.9686460495	283
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_false	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	1.76051592827	507
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_inj	40	3.3.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0433039665222	9
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.bit0_mod	40	0.10.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.7990000248	507
Coq.Numbers.Integer.Abstract.ZBits.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.eqf_equiv	40	4.1.4.8.9	search with cache (only 1: split; only 1: firstorder; only 1: intros x x' Hx; only 1: now f_equiv; only 1: congruence).	0.999147176743	1145
Coq.Numbers.Integer.Abstract.ZBits.testbit_eqf	40	21.0.5	search with cache (only 1: intros x y EQ WF; only 1: apply eq_true_iff_eq; only 1: now rewrite <- EQ).	9.16168117523	3439
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_mul_pow2	40	0.1.0.0.0.2.6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	5.34515714645	1616
Coq.Numbers.Integer.Abstract.ZBits.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0721039772034	3
Coq.Numbers.Integer.Abstract.ZBits.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.13560795784	3
Coq.Numbers.Integer.Abstract.ZBits.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.080265045166	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0301661491394	3
Coq.Numbers.Integer.Abstract.ZBits.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_0_l	40	10.1.1	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.942650079727	486
Coq.Numbers.Integer.Abstract.ZBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0320200920105	4
Coq.Numbers.Integer.Abstract.ZBits.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.land_0_l	40	0.12.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: trivial).	1.01012802124	697
Coq.Numbers.Integer.Abstract.ZBits.land_0_r	40	1.9.0.3	search with cache (only 1: intro n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	1.78169298172	976
Coq.Numbers.Integer.Abstract.ZBits.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.land_assoc	40	8.0.10.6	search with cache (only 1: intro z; only 1: intros a n; only 1: bitwise; only 1: intuition).	16.8210039139	8832
Coq.Numbers.Integer.Abstract.ZBits.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_l	40	0.4.1	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0770251750946	36
Coq.Numbers.Integer.Abstract.ZBits.ldiff_0_r	40	6.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0318698883057	9
Coq.Numbers.Integer.Abstract.ZBits.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_wd	40	0.4.0.27.1	search with cache (only 1: intros x x' Hx; only 1: generalize (CRelationClasses.partial_order_equivalence x x'); only 1: compute; only 1: rewrite Hx in *; only 1: intuition).	14.083523035	10340
Coq.Numbers.Integer.Abstract.ZBits.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.land_m1_l	40	8.28.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: symmetry; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	8.5725069046	7581
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_r	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0499889850616	8
Coq.Numbers.Integer.Abstract.ZBits.lxor_m1_l	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0610830783844	9
Coq.Numbers.Integer.Abstract.ZBits.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.shiftr_neg	40	0.1.4	search with cache (only 1: intros a b; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.384803771973	89
Coq.Numbers.Integer.Abstract.ZBits.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.div2_neg	40	0.3.2	search with cache (only 1: intros a; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.316078186035	70
Coq.Numbers.Integer.Abstract.ZBits.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.pred_inj_wd	40	1.0.0.0.0.1.2	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	0.454459905624	146
Coq.Numbers.Integer.Abstract.ZBase.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_opp_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite and_comm; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0692269802094	11
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_l	40	1.0.0.4.1.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	22.8085019588	9944
Coq.Numbers.Integer.Abstract.ZGcd.gcd_abs_r	40	1.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.107980966568	17
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_diag	40	0.0.0.1.9.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	14.7067251205	8068
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.gcd_mul_mono_r_nonneg	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0887789726257	4
Coq.Numbers.Integer.Abstract.ZGcd.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_rem	40	0.0.1.11.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	2.00813508034	1006
Coq.Numbers.Integer.Abstract.ZLcm.lcm_wd	40	1.1.0.1.0.14.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: intuition; only 1: setoid_rewrite Hy; only 1: easy).	2.88635587692	910
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_nonneg	40	8.4.6	search with cache (only 1: intros n1 n2; only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	5.58063197136	3170
Coq.Numbers.Integer.Abstract.ZLcm.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_l	40	0.0.1.2.0.1.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: apply divide_refl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.726777076721	540
Coq.Numbers.Integer.Abstract.ZLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0300328731537	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l_nonneg	40	0.1.0.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.033627986908	10
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r_nonneg	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0244181156158	7
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.0229759216309	8
Coq.Numbers.Integer.Abstract.ZLcm.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_eq_r	40	0.2.0.1.1.0.0	search with cache (only 1: intros n m Hn; only 1: intros EQ; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: auto; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.634235858917	222
Coq.Numbers.Integer.Abstract.ZLcm.divide_lcm_iff	40	5.2.0.0.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: apply divide_lcm_l).	22.8038840294	12470
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0305771827698	6
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_l	40	0.0.5.0.0.2.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: apply lcm_unique_alt; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite H; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	11.3457100391	6519
Coq.Numbers.Integer.Abstract.ZLcm.lcm_abs_r	40	1.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.762943029404	282
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_l	40	0.2.0.7.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: destruct_max n; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	28.4578928947	14995
Coq.Numbers.Integer.Abstract.ZLcm.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_diag	40	0.0.0.1.5.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	3.27311611176	1249
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.lcm_mul_mono_r_nonneg	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0389790534973	4
Coq.Numbers.Integer.Abstract.ZLcm.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.877053022385	304
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	6.02100300789	1451
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_l	40	0.0.0.3.0.0.0.4.1.0	search with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	8.75067400932	2013
Coq.Numbers.Integer.Abstract.ZMaxMin.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	4.67288303375	1254
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_max_distr_r	40	1.0.2.5.1.0.3.6.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	31.5118699074	17030
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.sub_min_distr_r	40	0.0.0.9.0.0.0.10.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	29.5020978451	16103
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonneg_r	40	1.2.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	9.19059705734	4035
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_l	40	1.0.0.2.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	10.2574501038	2218
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonneg_r	40	1.2.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	20.6940839291	6155
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_max_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	7.05051183701	2183
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.mul_min_distr_nonpos_r	40	0.2.0.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonpos_l).	15.2172060013	2958
Coq.Numbers.Integer.Abstract.ZLt.neg_pos_cases	40	0.0.0.11.9.3	search with cache (only 1: intro n; only 1: symmetry; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	4.82017993927	3861
Coq.Numbers.Integer.Abstract.ZLt.nonpos_pos_cases	40	0.1.0.15.0	search with cache (only 1: intro n; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	1.29160499573	1758
Coq.Numbers.Integer.Abstract.ZLt.neg_nonneg_cases	40	0.0.0.21.2	search with cache (only 1: intro m; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	2.1480050087	3066
Coq.Numbers.Integer.Abstract.ZLt.nonpos_nonneg_cases	40	1.0.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.025582075119	4
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_l	40	3.22.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.29847693443	1802
Coq.Numbers.Integer.Abstract.ZLt.le_pred_l	40	0.2.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0165238380432	6
Coq.Numbers.Integer.Abstract.ZLt.lt_le_pred	40	1.9.0.2.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: rewrite <- (succ_pred m)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	14.4179649353	7885
Coq.Numbers.Integer.Abstract.ZLt.nle_pred_r	40	0.0.10.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.60135102272	1104
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.le_le_pred	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_pred_le; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0535531044006	20
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt	40	0.0.0.7.5.6.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: destruct (le_gt_cases m n); only 1: contradict H; only 1: rewrite <- lt_le_pred; only 1: order; only 1: now left).	10.7924239635	5983
Coq.Numbers.Integer.Abstract.ZLt.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.pred_le_mono	40	4.7.0.5.4.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	14.7013828754	7183
Coq.Numbers.Integer.Abstract.ZLt.lt_succ_lt_pred	40	2.0.1	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0156538486481	6
Coq.Numbers.Integer.Abstract.ZLt.le_succ_le_pred	40	0.0.0.3.0.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0444269180298	9
Coq.Numbers.Integer.Abstract.ZLt.lt_pred_lt_succ	40	0.0.3.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- le_succ_l; only 1: symmetry; only 1: apply lt_succ_r).	0.0754840373993	27
Coq.Numbers.Integer.Abstract.ZLt.le_pred_lt_succ	40	0.0.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.0732219219208	23
Coq.Numbers.Integer.Abstract.ZLt.neq_pred_l	40	0.3.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.0792238712311	40
Coq.Numbers.Integer.Abstract.ZLt.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0263979434967	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0258271694183	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0	40	0.7.0	search with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.0131537914276	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_or_opp	40	16.1.12.0	search with cache (only 1: intro; only 1: destruct_max n; only 1: now left; only 1: auto with relations).	28.9105861187	26254
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_involutive	40	0.0.0.0.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.557334899902	288
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.029981136322	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_square	40	0.1.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0277190208435	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_0	40	0.0.0.48	search with cache (only 1: symmetry; only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	5.99765300751	5069
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.sgn_sgn	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.0430800914764	8
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_pos	40	0.3.4	search with cache (only 1: intros n m Hn; only 1: apply NZQuot.div_pos; only 1: auto).	0.475214004517	119
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_lt_upper_bound	40	0.0.0.6.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	1.20633983612	604
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_lower_bound	40	2.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.17060303688	61
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.21577095985	266
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_pos	40	0.1.0.0.0.0.0.1.1.4.1	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	4.47596287727	2011
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0293180942535	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique	40	0.1.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	9.09705305099	2831
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_pos	40	0.3.1.0.0.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	4.10249400139	1983
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0309648513794	4
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0614719390869	7
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.060093164444	7
Coq.Numbers.Integer.Abstract.ZDivFloor.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0519590377808	9
Coq.Numbers.Integer.Abstract.ZDivFloor.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.132033109665	5
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.128359079361	5
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mul	40	0.0.0.1.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: destruct (lt_ge_cases 0 b); only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: nzsimpl; only 1: apply mul_comm; only 1: apply Private_NZDiv.mod_unique with a; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	9.4866361618	3681
Coq.Numbers.Integer.Abstract.ZDivFloor.div_unique_exact	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	1.64248013496	600
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.366775035858	115
Coq.Numbers.Integer.Abstract.ZDivFloor.div_pos	40	0.0.1.0	search with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.619978189468	97
Coq.Numbers.Integer.Abstract.ZDivFloor.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.555324077606	144
Coq.Numbers.Integer.Abstract.ZDivFloor.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_le	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: order).	0.0673551559448	7
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_div_ge	40	0.0.2.0.4.2.3.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_le_mono_r; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_neg_bound a b); only 1: trivial; only 1: trivial).	27.2036688328	7356
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_gt	40	3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0761229991913	14
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0433549880981	4
Coq.Numbers.Integer.Abstract.ZDivFloor.div_lt_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0393571853638	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0391619205475	6
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_lower_bound	40	2.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.475009918213	129
Coq.Numbers.Integer.Abstract.ZDivFloor.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	25.0254600048	7764
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_add	40	0.0.5.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.11317706108	1490
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.087779045105	8
Coq.Numbers.Integer.Abstract.ZDivFloor.div_add_l	40	0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0829350948334	20
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.49522089958	180
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_l	40	0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.54670405388	319
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.529758930206	62
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.582942008972	73
Coq.Numbers.Integer.Abstract.ZDivFloor.mul_mod	40	1.1.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.513011217117	60
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.464421033859	62
Coq.Numbers.Integer.Abstract.ZDivFloor.add_mod	40	1.1.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.290707826614	38
Coq.Numbers.Integer.Abstract.ZDivFloor.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.rem_mul_r	40	0.0.1.0.0.0.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.138586997986	15
Coq.Numbers.Integer.Abstract.ZDivFloor.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.div_mul_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0686638355255	8
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_succ_l	40	2.9.7.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	7.98263001442	3154
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_l	40	8.0.2.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite <- 2!add_opp_r; only 1: now nzsimpl).	1.15551114082	605
Coq.Numbers.Integer.Abstract.ZAdd.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_diag_r	40	0.20.0	search with cache (only 1: intro n; only 1: rewrite add_comm; only 1: now rewrite add_comm, add_opp_r, sub_diag).	8.37738394737	2860
Coq.Numbers.Integer.Abstract.ZAdd.add_opp_l	40	0.0.0.0.5.1.2	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	6.36498808861	2113
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_assoc	40	0.0.0.0.0.3.8.0	search with cache (only 1: intros n m p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	18.8863589764	6183
Coq.Numbers.Integer.Abstract.ZAdd.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.opp_inj_wd	40	2.0.0.0.0.4.1	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intro H; only 1: now f_equiv).	1.52139997482	708
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0228681564331	2
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_sub_distr	40	0.0.5.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.698217868805	139
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_l	40	3.1.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	0.0311341285706	7
Coq.Numbers.Integer.Abstract.ZAdd.sub_opp_r	40	0.0.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.388598918915	74
Coq.Numbers.Integer.Abstract.ZAdd.add_sub_swap	40	0.1.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite add_comm).	0.0634250640869	5
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_cancel_r	40	2.0.0.2.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	0.765094041824	213
Coq.Numbers.Integer.Abstract.ZAdd.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_l	40	1.12.2.7.1	search with cache (only 1: intro m; only 1: intro; only 1: intro n; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	8.03136086464	4805
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_move_0_r	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0400609970093	4
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_l	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0334711074829	7
Coq.Numbers.Integer.Abstract.ZAdd.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_l	40	4.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.102753162384	14
Coq.Numbers.Integer.Abstract.ZAdd.add_simpl_r	40	0.3.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.0378611087799	6
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_simpl_r	40	2.0.0.2	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.15981388092	28
Coq.Numbers.Integer.Abstract.ZAdd.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0271019935608	2
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_l	40	2.16.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	4.07025504112	1646
Coq.Numbers.Integer.Abstract.ZAdd.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.sub_add_simpl_r_r	40	0.13.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.980314970016	338
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_same	40	0.1.4.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.154100179672	29
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.0990169048309	10
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.0918550491333	10
Coq.Numbers.Integer.Abstract.ZDivEucl.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0744349956512	7
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0790009498596	9
Coq.Numbers.Integer.Abstract.ZDivEucl.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0326690673828	5
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0275490283966	5
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul	40	1.0.0.0.3.9.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (mod_always_pos a b); only 1: intuition order; only 1: intuition order; only 1: nzsimpl; only 1: apply mul_comm).	8.05566692352	4760
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.174029827118	8
Coq.Numbers.Integer.Abstract.ZDivEucl.div_unique_exact	40	0.0.1.1.0.0.20	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	18.2411580086	13554
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_pos	40	2.0	search with cache (only 1: intros; only 1: auto using div_pos).	0.865909814835	142
Coq.Numbers.Integer.Abstract.ZDivEucl.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.555811882019	131
Coq.Numbers.Integer.Abstract.ZDivEucl.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_div_le	40	5.2.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	0.945611000061	300
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0399348735809	4
Coq.Numbers.Integer.Abstract.ZDivEucl.div_lt_upper_bound	40	0.5.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.659265995026	241
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0385360717773	7
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_lower_bound	40	2.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.553479909897	134
Coq.Numbers.Integer.Abstract.ZDivEucl.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	20.4041759968	7451
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_add	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.190454006195	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0872640609741	8
Coq.Numbers.Integer.Abstract.ZDivEucl.div_add_l	40	0.0.5.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0871510505676	26
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: symmetry; only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	7.58775782585	2175
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_distr_r	40	0.0.0.0.0.0.0.0.0.1.0.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm _ c); only 1: intros Hb H; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite div_mul_cancel_l by trivial; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition; only 1: order).	4.34991884232	1011
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: symmetry; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.638792991638	75
Coq.Numbers.Integer.Abstract.ZDivEucl.mul_mod	40	1.1.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.485094070435	58
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod_idemp_r	40	1.1.1.1.0.0	search with cache (only 1: intros a b n Hn; only 1: symmetry; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.429792881012	51
Coq.Numbers.Integer.Abstract.ZDivEucl.add_mod	40	1.1.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.386801958084	48
Coq.Numbers.Integer.Abstract.ZDivEucl.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_mul_r	40	0.0.0.1.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.570781946182	80
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0706739425659	9
Coq.Numbers.Integer.Abstract.ZDivEucl.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	0	search with cache (only 1: BinInt.Z.order).	0.0194869041443	1
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	5.2	search with cache (only 1: intros f g l H; only 1: firstorder).	0.0572199821472	32
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.1.2.0	search with cache (only 1: Bool.destr_bool; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	0.0299708843231	7
Coq.Numbers.Cyclic.Int31.Ring31.test	40	13.5	search with cache (only 1: intros q r; only 1: ring).	9.08919692039	668
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	9.3.1	search with cache (only 1: intros m Hm; only 1: red; only 1: now intros ->).	10.9790458679	714
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	26	search with cache (only 1: CRelationClasses.simpl_crelation).	1.43359208107	1715
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.5.5	search with cache (only 1: intros n; only 1: destruct n; only 1: auto).	0.229481935501	122
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: now f_equal).	0.0414490699768	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40	0.0.3.1.0.5.5.2	search with cache (only 1: intros; only 1: symmetry; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: intuition).	3.20799994469	2413
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.0250959396362	1
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	7.2.0.3.1	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).	2.28709602356	1105
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	1.0.1.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0695791244507	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	1.0	search with cache (only 1: destruct x; only 1: auto).	0.0442910194397	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.3	search with cache (only 1: destruct x; only 1: split).	2.04019594193	12
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0527400970459	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	3.12.5.1	search with cache (only 1: simpl; only 1: intros; only 1: rewrite H; only 1: tauto).	5.32844495773	3867
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	5.81	search with cache (only 1: fix odd_spec 1; only 1: now f_equal).	39.3277349472	55368
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.1.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: <Coq.Strings.String.t_eqb>; only 1: auto).	1.2664129734	6
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	0.0.0	search with cache (only 1: simpl; only 1: intros; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.0472710132599	3
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	1.1.3	search with cache (only 1: intro n; only 1: destruct n; only 1: auto).	0.0804178714752	23
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0518200397491	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40	0.0.0.0.0.13	search with cache (only 1: fix le_div2 1; only 1: induction n; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	2.05243706703	1179
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.027508020401	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: easy).	0.0281507968903	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.0452799797058	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0284469127655	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: trivial).	0.0295178890228	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	9.4	search with cache (only 1: simpl; only 1: reflexivity).	0.327184200287	128
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	0.0	search with cache (only 1: intros q r; only 1: trivial).	0.0385630130768	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	3.0.0.0	search with cache (only 1: unfold add31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: Morphisms.f_equiv).	0.086718082428	11
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.3.0.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: pattern x at 1; only 1: apply phi_phi_inv).	0.563544034958	92
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.2	search with cache (only 1: unfold sub31c, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	1.12873721123	32
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.038510799408	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0480589866638	3
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0369079113007	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.099396944046	7
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0280230045319	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.4.0	search with cache (only 1: unfold to_Z; only 1: unfold wB, base; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.081041097641	20
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.3.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0423109531403	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.0.1.0.0.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: split; only 1: auto with zarith; only 1: unfold wB, base; only 1: auto with zarith).	0.079225063324	13
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.0127329826355	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40	1.0.3.4	search with cache (only 1: intro H0; only 1: symmetry; only 1: unfold opp_carry, to_Z; only 1: apply Zplus_mod_idemp_l).	2.31712293625	700
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	2.3.0.14.0.0	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: fold [|x|]; only 1: rewrite Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	15.7729520798	7582
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	4.0.2	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: auto).	0.0499720573425	12
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.0.6.0.5.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto with zarith; only 1: simpl; only 1: apply two_power_pos_equiv; only 1: auto using Z.lt_gt with zarith).	1.64331793785	641
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40	2.1.0.1.0.0.1.62	search with cache (only 1: intro n; only 1: generalize (proj1 (is_zero_spec n)); only 1: case is_zero; only 1: intros ->; only 1: now try Z.order'; only 1: auto; only 1: intros; only 1: discriminate).	16.8824148178	26734
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	4.0	search with cache (only 1: intros; only 1: auto).	0.03560090065	6
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.10	search with cache (only 1: intros; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	4.4111700058	996
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.0.0	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.0439939498901	3
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	search with cache (only 1: intros; only 1: Z.order_nz).	0.0359649658203	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1	search with cache (only 1: now Z.nzsimpl).	0.0491578578949	2
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	6.7	search with cache (only 1: apply Z.le_neq; only 1: easy).	0.398951053619	116
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: now subst).	0.0218260288239	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	4	search with cache (only 1: reflexivity).	0.0228478908539	5
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.0422120094299	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.4.4.5.2.3	search with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: subst; only 1: reflexivity; only 1: auto using eqb_correct, eqb_complete).	1.91165709496	1579
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0292761325836	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	26.2	search with cache (only 1: intros; only 1: congruence).	1.03641104698	1012
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.061635017395	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.16.0.0.58	search with cache (only 1: symmetry; only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.nzsimpl; only 1: lia).	1.76146912575	3910
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0.0.0	search with cache (only 1: symmetry; only 1: unfold is_even; only 1: auto).	0.0387849807739	3
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.23.2.6	search with cache (only 1: intros; only 1: rewrite H; only 1: subst; only 1: apply negb_involutive).	2.93693804741	2914
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.1	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0377371311188	3
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0358488559723	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0501539707184	5
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.047189950943	5
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	7.2	search with cache (only 1: intros f g l H; only 1: firstorder).	0.167351961136	80
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.0	search with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0164520740509	2
Coq.Numbers.Cyclic.Int63.Ring63.test	40	29.5	search with cache (only 1: intros a0 a; only 1: ring).	9.69986701012	9288
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_comm	40	0.13.0.9.4	search with cache (only 1: intros h; only 1: intros a; only 1: zify; only 1: Morphisms.f_equiv; only 1: auto with zarith).	9.12081599236	8365
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.eqb_correct	40	14.13	search with cache (only 1: intros f w; only 1: apply Pos.eqb_eq).	1.4307320118	2053
Coq.Numbers.Cyclic.Abstract.NZCyclic.eq_equiv	40	2.8.17.6.57	search with cache (only 1: split; only 1: now rewrite <- ?N.add_le_mono_l; only 1: intuition; only 1: compute; only 1: eauto using Pos.Private_Tac.eq_trans, Pos.Private_Tac.eq_sym).	4.57384300232	6311
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.gt_wB_0	40	0.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0140659809113	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.succ_mod_wB	40	0.0.45.1	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	7.23774504662	5861
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.two_succ	40	18	search with cache (only 1: now f_equal).	0.0466730594635	145
Coq.Numbers.Cyclic.Abstract.NZCyclic.B0	40	5	search with cache (only 1: tauto).	0.0125229358673	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_0_l	40	1.4.3.51.0	search with cache (only 1: zify; only 1: intros Hn; only 1: zify; only 1: simpl; only 1: apply NZ_to_Z_mod).	31.4241530895	30091
Coq.Numbers.Cyclic.Abstract.NZCyclic.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_0_l	40	8.0.14	search with cache (only 1: intros; only 1: zify; only 1: trivial).	0.606381177902	642
Coq.Numbers.Cyclic.Abstract.NZCyclic.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.DecimalString.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.sus	40
Coq.Numbers.DecimalString.usu	40
Coq.Numbers.DecimalString.usu_nil	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0135910511017	3
Coq.Numbers.DecimalString.usu_gen	40
Coq.Numbers.DecimalString.isi	40
Coq.Numbers.DecimalString.isi_posnil	40	5.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0125529766083	7
Coq.Numbers.DecimalString.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.00935983657837	1
Coq.Numbers.DecimalString.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	2.4.0	search with cache (only 1: constructor; only 1: parity_binop; only 1: parity_binop).	0.18772482872	57
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	8.2.0.0.0.0	search with cache (only 1: induction n; only 1: split; only 1: now rewrite <- PeanoNat.Nat.odd_spec; only 1: inversion_clear 1; only 1: elim IHn; only 1: parity_binop).	4.149985075	1845
Coq.Numbers.Natural.Abstract.NOrder.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.nlt_0_r	40	0.9.1	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.405061006546	252
Coq.Numbers.Natural.Abstract.NOrder.nle_succ_0	40	0.1.12.2	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	1.61454296112	2071
Coq.Numbers.Natural.Abstract.NOrder.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_0_succ	40	0.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0190608501434	4
Coq.Numbers.Natural.Abstract.NOrder.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.eq_0_gt_0_cases	40	0.1.0.10.0	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	0.591700077057	567
Coq.Numbers.Natural.Abstract.NOrder.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.succ_pred_pos	40	0.0.0.3	search with cache (only 1: intros n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0736970901489	15
Coq.Numbers.Natural.Abstract.NOrder.le_pred_l	40	0.1.8.0.4.5	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: order; only 1: intro p; only 1: rewrite pred_succ; only 1: now apply le_le_succ_r).	2.32422494888	2642
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_l	40	0.16.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n IH; only 1: rewrite lt_succ_r; only 1: now rewrite pred_succ).	21.029845953	17334
Coq.Numbers.Natural.Abstract.NOrder.le_le_pred	40	0.8.2.2.0.0.1.6	search with cache (only 1: cases ltac:(n); only 1: intros n H; only 1: rewrite pred_0; only 1: assumption; only 1: intros n m H; only 1: rewrite pred_succ; only 1: apply le_succ_l in H; only 1: order).	12.515843153	9103
Coq.Numbers.Natural.Abstract.NOrder.lt_lt_pred	40	1.0.4.1.0.3.0.2.2	search with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: intro p; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	34.5582768917	15949
Coq.Numbers.Natural.Abstract.NOrder.lt_le_pred	40	0.0.3.1	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.186593055725	78
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt	40	0.0.0.1.0.0.1.2	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	0.788203954697	484
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le	40	0.1.5.0.0.1.5.1	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intro m; only 1: rewrite pred_succ; only 1: apply le_le_succ_r).	9.67629504204	7158
Coq.Numbers.Natural.Abstract.NOrder.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.lt_pred_lt_succ	40	0.2.0.0.0.0.1.0.0.1	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	1.86466789246	1241
Coq.Numbers.Natural.Abstract.NOrder.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.div_unique_exact	40	0.0.3.0.6	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	1.8108048439	872
Coq.Numbers.Natural.Abstract.NDiv.div_same	40	1.3.0.0.0.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: symmetry; only 1: now nzsimpl').	0.561922073364	238
Coq.Numbers.Natural.Abstract.NDiv.mod_same	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	0.0512821674347	10
Coq.Numbers.Natural.Abstract.NDiv.div_small	40	1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.0479629039764	6
Coq.Numbers.Natural.Abstract.NDiv.mod_small	40	1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0452580451965	6
Coq.Numbers.Natural.Abstract.NDiv.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0235631465912	4
Coq.Numbers.Natural.Abstract.NDiv.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0232617855072	5
Coq.Numbers.Natural.Abstract.NDiv.div_1_r	40	0.0.1.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: apply lt_0_1; only 1: nzsimpl; only 1: order).	0.0510489940643	16
Coq.Numbers.Natural.Abstract.NDiv.mod_1_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0440299510956	7
Coq.Numbers.Natural.Abstract.NDiv.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0216829776764	3
Coq.Numbers.Natural.Abstract.NDiv.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0204389095306	3
Coq.Numbers.Natural.Abstract.NDiv.div_mul	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply mul_comm).	0.272454977036	53
Coq.Numbers.Natural.Abstract.NDiv.mod_mul	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0580132007599	6
Coq.Numbers.Natural.Abstract.NDiv.mod_le	40	0.0.9.0.9	search with cache (only 1: intro n; only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	9.80242705345	7767
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.588533163071	120
Coq.Numbers.Natural.Abstract.NDiv.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.div_str_pos_iff	40	1.2.4.0.1.1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: intuition; only 1: auto').	17.9946777821	10218
Coq.Numbers.Natural.Abstract.NDiv.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.mul_div_le	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0623068809509	8
Coq.Numbers.Natural.Abstract.NDiv.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0675828456879	7
Coq.Numbers.Natural.Abstract.NDiv.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0437228679657	4
Coq.Numbers.Natural.Abstract.NDiv.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.mod_add	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0762100219727	9
Coq.Numbers.Natural.Abstract.NDiv.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.133682012558	7
Coq.Numbers.Natural.Abstract.NDiv.div_add_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: apply neq_0_lt_0; only 1: auto').	0.146596908569	30
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_r	40	0.0.3.1.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.26430106163	72
Coq.Numbers.Natural.Abstract.NDiv.div_mul_cancel_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.197782993317	30
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_r	40	0.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.29164409637	375
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_distr_l	40	0.1.0.0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.45280098915	521
Coq.Numbers.Natural.Abstract.NDiv.mod_mod	40	1.3.1.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.101459980011	13
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_l	40	0.0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.161499023438	22
Coq.Numbers.Natural.Abstract.NDiv.mul_mod_idemp_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0467438697815	6
Coq.Numbers.Natural.Abstract.NDiv.mul_mod	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0510990619659	8
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.123359918594	37
Coq.Numbers.Natural.Abstract.NDiv.add_mod_idemp_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0418789386749	6
Coq.Numbers.Natural.Abstract.NDiv.add_mod	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.0549349784851	8
Coq.Numbers.Natural.Abstract.NDiv.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.mod_mul_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.0933330059052	7
Coq.Numbers.Natural.Abstract.NDiv.div_mul_le	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: apply neq_0_lt_0; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: apply neq_0_lt_0; only 1: auto').	0.0884540081024	10
Coq.Numbers.Natural.Abstract.NDiv.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.induction	40
Coq.Numbers.Natural.Abstract.NBase.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.032329082489	7
Coq.Numbers.Natural.Abstract.NBase.neq_0	40	7.7.4.41.5.1	search with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: apply le_succ_l; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl).	8.35040402412	30082
Coq.Numbers.Natural.Abstract.NBase.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.succ_pred	40	0.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.025847196579	6
Coq.Numbers.Natural.Abstract.NBase.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.double_induction	40	9.8.0.0.6.0.13.6	search with cache (only 1: intros z Hz; only 1: intros x; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	19.3122849464	31145
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_wd	40	3.0.5.4.1.2	search with cache (only 1: repeat red; only 1: intros x y; only 1: compute; only 1: firstorder; only 1: simpl_relation; only 1: f_equiv').	9.03729605675	2104
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_0	40	0.0.1.23.24	search with cache (only 1: intros x y H; only 1: symmetry; only 1: compute; only 1: rewrite recursion_0; only 1: auto).	24.2688961029	46366
Coq.Numbers.Natural.Abstract.NDefOps.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_0_r	40	9.32.9	search with cache (only 1: intros; only 1: compute; only 1: now rewrite recursion_0).	3.59018802643	7146
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.even_0	40	0.0.0.3.14.78	search with cache (only 1: apply eq_true_iff_eq; only 1: unfold even; only 1: split; only 1: now rewrite recursion_0; only 1: destr_bool; only 1: now rewrite recursion_0).	4.20876812935	9561
Coq.Numbers.Natural.Abstract.NDefOps.even_succ	40	0.0.2.0.14.0.0	search with cache (only 1: intros; only 1: unfold even; only 1: apply eq_true_iff_eq; only 1: rewrite recursion_succ; only 1: intuition; only 1: reflexivity; only 1: f_equiv').	2.00365304947	1814
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.half_0	40	3.45.28	search with cache (only 1: symmetry; only 1: compute; only 1: now rewrite recursion_0).	1.83210611343	4346
Coq.Numbers.Natural.Abstract.NDefOps.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.pow_succ	40	0.0.1.2.2.10	search with cache (only 1: unfold pow; only 1: intros n m; only 1: rewrite recursion_succ; only 1: now nzsimpl; only 1: auto with *; only 1: f_equiv').	12.3193638325	1501
Coq.Numbers.Natural.Abstract.NDefOps.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_l	40	2.0.1.0.8.6	search with cache (only 1: intros p n m Hp; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l; only 1: assumption).	13.4960811138	6256
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0587320327759	15
Coq.Numbers.Natural.Abstract.NMulOrder.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.mul_le_mono	40	0.0.0.11.3	search with cache (only 1: intros n m p q H; only 1: apply mul_le_mono_nonneg; only 1: apply le_0_l; only 1: order; only 1: apply le_0_l).	12.1451928616	3725
Coq.Numbers.Natural.Abstract.NMulOrder.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.b2n_proper	40	2	search with cache (only 1: solve_proper).	0.0412580966949	19
Coq.Numbers.Natural.Abstract.NBits.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	3.15112018585	1187
Coq.Numbers.Natural.Abstract.NBits.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.b2n_inj	40	4.4.0	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.150864124298	47
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.bits_0	40	0.0.0.2.0.0.2.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.434947967529	168
Coq.Numbers.Natural.Abstract.NBits.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0636720657349	10
Coq.Numbers.Natural.Abstract.NBits.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0114719867706	2
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.eqf_equiv	40	0.0.16.0.2.125	search with cache (only 1: repeat split; only 1: intros x x' Hx; only 1: now f_equiv; only 1: intros a Ha; only 1: CRelationClasses.simpl_crelation; only 1: now rewrite H).	4.7052218914	14389
Coq.Numbers.Natural.Abstract.NBits.testbit_eqf	40	2.14.6	search with cache (only 1: intros x x' EQ; only 1: intro H; only 1: now f_equiv).	8.16115689278	2196
Coq.Numbers.Natural.Abstract.NBits.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_r	40	0.0.0.6	search with cache (only 1: intro n; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.115778923035	41
Coq.Numbers.Natural.Abstract.NBits.shiftl_0_l	40	0.0.4	search with cache (only 1: intros a0; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0558459758759	31
Coq.Numbers.Natural.Abstract.NBits.shiftr_0_l	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.0286200046539	6
Coq.Numbers.Natural.Abstract.NBits.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_eq_0	40	0.0.0.0.0.0.5	search with cache (only 1: intros a Ha; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	0.959047079086	356
Coq.Numbers.Natural.Abstract.NBits.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.div2_wd	40	2.0.0.4.2	search with cache (only 1: intros a a' Ha; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: symmetry; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now rewrite ?Ha).	2.66316604614	1151
Coq.Numbers.Natural.Abstract.NBits.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.144356012344	5
Coq.Numbers.Natural.Abstract.NBits.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0402529239655	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0450608730316	5
Coq.Numbers.Natural.Abstract.NBits.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.057018995285	3
Coq.Numbers.Natural.Abstract.NBits.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_0_l	40	4.3.0	search with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.0232598781586	10
Coq.Numbers.Natural.Abstract.NBits.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0168650150299	4
Coq.Numbers.Natural.Abstract.NBits.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.land_0_l	40	7.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0185730457306	10
Coq.Numbers.Natural.Abstract.NBits.land_0_r	40	0.1.0.4	search with cache (only 1: intros n; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0869419574738	39
Coq.Numbers.Natural.Abstract.NBits.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.land_assoc	40	0.1.5.1.7	search with cache (only 1: intro z; only 1: intro n; only 1: intros a0; only 1: bitwise; only 1: intuition).	3.41635203362	1560
Coq.Numbers.Natural.Abstract.NBits.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_l	40	0.4.4	search with cache (only 1: intro n; only 1: bitwise; only 1: trivial).	0.0866940021515	61
Coq.Numbers.Natural.Abstract.NBits.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0170359611511	5
Coq.Numbers.Natural.Abstract.NBits.ldiff_diag	40	31.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: bitwise; only 1: intuition).	22.9127650261	22068
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_wd	40	0.0.0.0.0.16.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: intuition; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	18.453799963	8144
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ones	40	1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0125870704651	4
Coq.Numbers.Natural.Abstract.NBits.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag	40	0.0.2.0.0.0.1.0.0.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.84080505371	1825
Coq.Numbers.Natural.Abstract.NBits.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.lnot_lxor_r	40	0.0.5.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.249028921127	78
Coq.Numbers.Natural.Abstract.NBits.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.hom_nat_iso	40	0.0.1.0.0.0.0.15.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.666088104248	1066
Coq.Numbers.Natural.Abstract.NIso.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_spec'	40	2.0.0.5.3.0.3.0.16.6.9	search with cache (only 1: intro p; only 1: split; only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply sqrt_nonneg; only 1: apply sqrt_le_mono; only 1: apply le_refl; only 1: apply sqrt_lt_square; only 1: apply le_0_l; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: apply lt_succ_diag_r).	33.0224299431	28180
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_square	40	2.1.3	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.0550799369812	24
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.succ_add_discr	40	0.1.0.0.3.1.0.9	search with cache (only 1: intro z; only 1: intro n; only 1: apply neq_sym; only 1: nzinduct n; only 1: apply neq_succ_0; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	7.22339606285	4887
Coq.Numbers.Natural.Abstract.NAdd.add_pred_l	40	7.0.0.0.1.0.5	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros n m H; only 1: now nzsimpl).	5.33747005463	2760
Coq.Numbers.Natural.Abstract.NAdd.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.odd_pred	40	0.1.2.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.158527135849	19
Coq.Numbers.Natural.Abstract.NParity.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.lt_lt_add_l	40	0.0.0.0.2.9	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	33.7247989178	10481
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_l	40	2.1.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.623970985413	113
Coq.Numbers.Natural.Abstract.NAddOrder.add_pos_r	40	1.1.0.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.150367975235	32
Coq.Numbers.Natural.Abstract.NPow.pow_succ_r'	40	0.0.0.0.0.2.1.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.534242868423	64
Coq.Numbers.Natural.Abstract.NPow.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0445051193237	6
Coq.Numbers.Natural.Abstract.NPow.pow_1_l	40	3.3.9.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: reflexivity; only 1: apply le_0_l).	1.55374097824	651
Coq.Numbers.Natural.Abstract.NPow.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	8.3382229805	2049
Coq.Numbers.Natural.Abstract.NPow.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l	40	2.0.1.1.4.7	search with cache (only 1: intros x y z; only 1: CRelationClasses.simpl_crelation; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: auto).	13.8983209133	7414
Coq.Numbers.Natural.Abstract.NPow.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono	40	2.0.0.5.0.0.0	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	2.07328486443	769
Coq.Numbers.Natural.Abstract.NPow.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.pow_inj_r	40	0.1.0.0.2.0.1	search with cache (only 1: intros a b c Ha Hc; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.249217033386	78
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_l_iff	40	0.5.0.4.0.0.8.0.0.3	search with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_l; only 1: auto'; only 1: intro LE; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: auto'; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	39.1439979076	21331
Coq.Numbers.Natural.Abstract.NPow.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	7.64150190353	1852
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_l	40	0.0.0.4.0.0.0.3.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	11.8144538403	3816
Coq.Numbers.Natural.Abstract.NMaxMin.add_min_distr_r	40	1.0.0.1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	7.7178709507	2250
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.mul_max_distr_r	40	0.0.3.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	29.4677298069	11219
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_l	40	1.0.0.3.2.0.0.2.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	17.2944262028	4840
Coq.Numbers.Natural.Abstract.NMaxMin.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	2.96405100822	951
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_alt	40	0	search with cache (only 1: reflexivity).	0.00736093521118	1
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_0_any	40	1.1.0.2.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.0564329624176	10
Coq.Numbers.Natural.Abstract.NStrongRec.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_wd	40	1.2.0.0.13.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: easy).	2.94256591797	940
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_l	40	0.3.1	search with cache (only 1: intro n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.0234248638153	21
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_l	40	0.0.1.1.1.0.0.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.670300960541	401
Coq.Numbers.Natural.Abstract.NLcm.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0264859199524	10
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_l	40	0.1.0.0.5.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	1.72381591797	973
Coq.Numbers.Natural.Abstract.NLcm.lcm_1_r	40	0.0.0.1.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0278630256653	10
Coq.Numbers.Natural.Abstract.NLcm.lcm_diag	40	0.1.1.2.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0165750980377	10
Coq.Numbers.Natural.Abstract.NLcm.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_eq_r	40
Coq.Numbers.Natural.Abstract.NLcm.divide_lcm_iff	40	1.1.0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	7.88634705544	3642
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_r	40	0.3.13.3	search with cache (only 1: intros n m p LE; only 1: apply le_sub_le_add_r; only 1: rewrite LE; only 1: auto using sub_add_le).	10.5241689682	7575
Coq.Numbers.Natural.Abstract.NSub.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: f_equal; only 1: easy).	0.0482611656189	11
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_0	40	1.3.4	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.216580152512	59
Coq.Numbers.NatInt.NZSqrt.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eqn	40	0.0.0.0.1.2.9	search with cache (only 1: intro n; only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	1.70678496361	1224
Coq.Numbers.NatInt.NZSqrt.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_nonneg	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.103955030441	8
Coq.Numbers.NatInt.NZSqrt.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_0	40	0.1.0.2	search with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: reflexivity; only 1: now nzsimpl).	0.0315029621124	15
Coq.Numbers.NatInt.NZSqrt.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.div_unique	40
Coq.Numbers.NatInt.NZDiv.mod_unique	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.567530155182	199
Coq.Numbers.NatInt.NZDiv.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.div_same	40	0.4.0.0.6.7.21	search with cache (only 1: intro m; only 1: intros H; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now nzsimpl; only 1: now nzsimpl).	3.75741910934	3624
Coq.Numbers.NatInt.NZDiv.mod_same	40
Coq.Numbers.NatInt.NZDiv.div_small	40
Coq.Numbers.NatInt.NZDiv.mod_small	40
Coq.Numbers.NatInt.NZDiv.div_0_l	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.101687908173	29
Coq.Numbers.NatInt.NZDiv.mod_0_l	40	1.0.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.26010799408	58
Coq.Numbers.NatInt.NZDiv.div_1_r	40	1.0.4.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	1.02961492538	482
Coq.Numbers.NatInt.NZDiv.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.div_1_l	40	3.0.1.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0800919532776	38
Coq.Numbers.NatInt.NZDiv.mod_1_l	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.232779979706	64
Coq.Numbers.NatInt.NZDiv.div_mul	40
Coq.Numbers.NatInt.NZDiv.mod_mul	40
Coq.Numbers.NatInt.NZDiv.mod_le	40
Coq.Numbers.NatInt.NZDiv.div_pos	40
Coq.Numbers.NatInt.NZDiv.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.div_lt	40
Coq.Numbers.NatInt.NZDiv.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.div_exact	40
Coq.Numbers.NatInt.NZDiv.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.mod_add	40
Coq.Numbers.NatInt.NZDiv.div_add	40
Coq.Numbers.NatInt.NZDiv.div_add_l	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.mod_mod	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.mul_mod	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.add_mod	40
Coq.Numbers.NatInt.NZDiv.div_div	40
Coq.Numbers.NatInt.NZDiv.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.mod_divides	40
Coq.Numbers.NatInt.NZAdd.add_0_r	40
Coq.Numbers.NatInt.NZAdd.add_succ_r	40	0.0.0.0.0.0.0.1.16.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: split; only 1: intros; only 1: now rewrite succ_inj_wd; only 1: apply succ_inj).	35.0578410625	21894
Coq.Numbers.NatInt.NZAdd.add_succ_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.116583824158	6
Coq.Numbers.NatInt.NZAdd.add_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.116768121719	7
Coq.Numbers.NatInt.NZAdd.add_1_l	40
Coq.Numbers.NatInt.NZAdd.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0222201347351	2
Coq.Numbers.NatInt.NZAdd.add_assoc	40	1.0.0.0.0.0	search with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0696749687195	7
Coq.Numbers.NatInt.NZAdd.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0659918785095	6
Coq.Numbers.NatInt.NZAdd.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.240751028061	29
Coq.Numbers.NatInt.NZAdd.add_shuffle1	40	0.0.0.0.5.1.0.0	search with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	2.21631789207	685
Coq.Numbers.NatInt.NZAdd.add_shuffle2	40	0.0.0.0.6.3.1.9	search with cache (only 1: intros x y H; only 1: intro p; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	24.1018309593	10016
Coq.Numbers.NatInt.NZAdd.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0761299133301	6
Coq.Numbers.NatInt.NZAdd.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0222980976105	2
Coq.Numbers.NatInt.NZOrder.le_wd	40
Coq.Numbers.NatInt.NZOrder.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.le_refl	40
Coq.Numbers.NatInt.NZOrder.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.le_succ_diag_r	40	0.0.0.6.2.0	search with cache (only 1: intro; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.522172927856	238
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.nle_succ_diag_l	40	5.0.0.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.282748937607	13
Coq.Numbers.NatInt.NZOrder.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.lt_trans	40
Coq.Numbers.NatInt.NZOrder.le_trans	40
Coq.Numbers.NatInt.NZOrder.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.le_preorder	40
Coq.Numbers.NatInt.NZOrder.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.lt_neq	40	0.0.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0281479358673	5
Coq.Numbers.NatInt.NZOrder.le_neq	40
Coq.Numbers.NatInt.NZOrder.eq_le_incl	40	5.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto with relations).	0.0235011577606	8
Coq.Numbers.NatInt.NZOrder.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0197329521179	3
Coq.Numbers.NatInt.NZOrder.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0240149497986	3
Coq.Numbers.NatInt.NZOrder.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0229580402374	3
Coq.Numbers.NatInt.NZOrder.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0249998569489	3
Coq.Numbers.NatInt.NZOrder.le_lt_trans	40	1	search with cache (only 1: order).	0.0619621276855	21
Coq.Numbers.NatInt.NZOrder.lt_le_trans	40	1	search with cache (only 1: order).	0.0675039291382	21
Coq.Numbers.NatInt.NZOrder.le_antisymm	40	3	search with cache (only 1: order).	0.159648895264	75
Coq.Numbers.NatInt.NZOrder.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.lt_succ_l	40	0.3.0	search with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0501918792725	6
Coq.Numbers.NatInt.NZOrder.le_le_succ_r	40	2.1.10.4	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	20.8875417709	12117
Coq.Numbers.NatInt.NZOrder.lt_lt_succ_r	40	0.0.3.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0256488323212	7
Coq.Numbers.NatInt.NZOrder.succ_lt_mono	40	0.4.6.0	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: tauto).	1.11135220528	512
Coq.Numbers.NatInt.NZOrder.succ_le_mono	40	0.0.0.0.0.0.0.1.2.3.0	search with cache (only 1: intros n m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: rewrite <- le_succ_l; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	4.19041204453	1906
Coq.Numbers.NatInt.NZOrder.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.le_0_1	40	0.2.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0255169868469	5
Coq.Numbers.NatInt.NZOrder.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.lt_0_2	40	0.1.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0246050357819	4
Coq.Numbers.NatInt.NZOrder.le_0_2	40	0.3.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0332441329956	10
Coq.Numbers.NatInt.NZOrder.lt_1_l	40	0.0.14.7.0	search with cache (only 1: intros n m; only 1: rewrite one_succ; only 1: rewrite <- le_succ_l; only 1: intros LE EQ; only 1: order).	28.2098300457	17137
Coq.Numbers.NatInt.NZOrder.lt_ge_cases	40	1.0.0.7.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.74715089798	392
Coq.Numbers.NatInt.NZOrder.le_ge_cases	40	0.0.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.12709903717	55
Coq.Numbers.NatInt.NZOrder.lt_gt_cases	40	4.0.1	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.237946987152	24
Coq.Numbers.NatInt.NZOrder.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.eq_dne	40	0.1.0.3.0.0	search with cache (only 1: intros n m; only 1: intuition; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.0587811470032	10
Coq.Numbers.NatInt.NZOrder.le_ngt	40	3.2.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: symmetry; only 1: intuition order).	0.151438951492	64
Coq.Numbers.NatInt.NZOrder.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0169930458069	1
Coq.Numbers.NatInt.NZOrder.lt_decidable	40	0.1.1.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0305497646332	6
Coq.Numbers.NatInt.NZOrder.lt_dne	40	0.1.2.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.13074016571	51
Coq.Numbers.NatInt.NZOrder.nle_gt	40	0	search with cache (only 1: intuition order).	0.0169718265533	1
Coq.Numbers.NatInt.NZOrder.lt_nge	40	0	search with cache (only 1: intuition order).	0.0166068077087	1
Coq.Numbers.NatInt.NZOrder.le_decidable	40	1.0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.788686037064	186
Coq.Numbers.NatInt.NZOrder.le_dne	40	1.0.1.1.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: intuition order).	1.39666295052	481
Coq.Numbers.NatInt.NZOrder.nlt_succ_r	40	0.2.2.0.0.0.0.1	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	2.47356009483	996
Coq.Numbers.NatInt.NZOrder.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.rbase	40
Coq.Numbers.NatInt.NZOrder.A'A_right	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction	40
Coq.Numbers.NatInt.NZOrder.right_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.lbase	40
Coq.Numbers.NatInt.NZOrder.A'A_left	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction	40
Coq.Numbers.NatInt.NZOrder.left_induction'	40
Coq.Numbers.NatInt.NZOrder.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.order_induction	40
Coq.Numbers.NatInt.NZOrder.order_induction'	40
Coq.Numbers.NatInt.NZOrder.lt_ind	40
Coq.Numbers.NatInt.NZOrder.le_ind	40	23.0.0	search with cache (only 1: intros z Base Step; only 1: apply strong_right_induction; only 1: now apply rs_rs').	18.5627629757	14569
Coq.Numbers.NatInt.NZOrder.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.lt_wf	40
Coq.Numbers.NatInt.NZOrder.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	3.0.0.0.48	search with cache (only 1: intros a a' Ha b b' Hb; only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	22.6568748951	19352
Coq.Numbers.NatInt.NZDomain.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.initial_alt	40
Coq.Numbers.NatInt.NZDomain.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.initial_unique	40
Coq.Numbers.NatInt.NZDomain.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.ofnat_zero	40	29	search with cache (only 1: reflexivity).	0.12784409523	420
Coq.Numbers.NatInt.NZDomain.ofnat_succ	40	1.0	search with cache (only 1: intros a; only 1: reflexivity).	0.0131568908691	3
Coq.Numbers.NatInt.NZDomain.ofnat_pred	40	0.0.11.4.0.0.0	search with cache (only 1: PeanoNat.Nat.cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	18.4286029339	10425
Coq.Numbers.NatInt.NZDomain.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.ofnat_eq	40	2.9.8	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: auto).	19.8010149002	8695
Coq.Numbers.NatInt.NZDomain.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.ofnat_add	40	5.9	search with cache (only 1: fix gcd_divide 1; only 1: now f_equiv).	9.87772703171	3392
Coq.Numbers.NatInt.NZDomain.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.ofnat_sub_r	40	2.0.14.15.6	search with cache (only 1: intro n; only 1: simpl; only 1: fix even_spec 1; only 1: intros; only 1: now f_equiv).	29.6959121227	24830
Coq.Numbers.NatInt.NZDomain.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.pow_0_l	40
Coq.Numbers.NatInt.NZPow.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.pow_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0540111064911	2
Coq.Numbers.NatInt.NZPow.pow_1_l	40
Coq.Numbers.NatInt.NZPow.pow_2_r	40	0.1.1.0.35.1	search with cache (only 1: intros; only 1: nzsimpl'; only 1: now nzsimpl; only 1: order; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	21.6474280357	8824
Coq.Numbers.NatInt.NZPow.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.pow_add_r	40
Coq.Numbers.NatInt.NZPow.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.pow_pos_nonneg	40	0.4.0.0.0.2.0.0.1.3	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: clear b Hb; only 1: intros b Hb IH; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	30.9661529064	8962
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.divide_wd	40
Coq.Numbers.NatInt.NZGcd.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.divide_0_l	40	1.3.22.0	search with cache (only 1: intros n; only 1: intros [? ?]; only 1: rewrite mul_0_r in H; only 1: assumption).	13.5682470798	5411
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.divide_refl	40
Coq.Numbers.NatInt.NZGcd.divide_trans	40
Coq.Numbers.NatInt.NZGcd.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_mono_r	40	0.0.12.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	1.42571902275	695
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.mul_divide_cancel_r	40	0.0.0.0.0.6.1.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H1; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	3.42844796181	2097
Coq.Numbers.NatInt.NZGcd.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.divide_factor_l	40	0.0.14.0	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	3.46424984932	860
Coq.Numbers.NatInt.NZGcd.divide_factor_r	40	0.11.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.525039196014	169
Coq.Numbers.NatInt.NZGcd.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.gcd_0_l_nonneg	40	0.0.0.0.0.0.0.7	search with cache (only 1: intros n H; only 1: apply gcd_unique; only 1: trivial; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.29010796547	550
Coq.Numbers.NatInt.NZGcd.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0320789813995	8
Coq.Numbers.NatInt.NZGcd.gcd_1_l	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0789129734039	15
Coq.Numbers.NatInt.NZGcd.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0409910678864	7
Coq.Numbers.NatInt.NZGcd.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0335948467255	9
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.gcd_eq_0_r	40	1.6.0.3.2.0	search with cache (only 1: intros; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	9.0513780117	4597
Coq.Numbers.NatInt.NZGcd.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.gcd_mul_diag_l	40	0.1.1.0.1.3	search with cache (only 1: intros n m H; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.414809942245	146
Coq.Numbers.NatInt.NZGcd.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.Even_wd	40
Coq.Numbers.NatInt.NZParity.Odd_wd	40
Coq.Numbers.NatInt.NZParity.even_wd	40
Coq.Numbers.NatInt.NZParity.odd_wd	40
Coq.Numbers.NatInt.NZParity.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.double_below	40	2.3.0.4.2	search with cache (only 1: intros n1 m1 H; only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: now apply add_le_mono).	5.9377219677	1002
Coq.Numbers.NatInt.NZParity.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.135456800461	6
Coq.Numbers.NatInt.NZParity.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.negb_odd	40
Coq.Numbers.NatInt.NZParity.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.31944203377	492
Coq.Numbers.NatInt.NZParity.even_0	40
Coq.Numbers.NatInt.NZParity.odd_0	40
Coq.Numbers.NatInt.NZParity.odd_1	40
Coq.Numbers.NatInt.NZParity.even_1	40
Coq.Numbers.NatInt.NZParity.even_2	40
Coq.Numbers.NatInt.NZParity.odd_2	40
Coq.Numbers.NatInt.NZParity.Odd_succ	40
Coq.Numbers.NatInt.NZParity.odd_succ	40
Coq.Numbers.NatInt.NZParity.even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ	40
Coq.Numbers.NatInt.NZParity.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_succ_succ	40	0.7.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.171015977859	51
Coq.Numbers.NatInt.NZParity.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.even_add	40
Coq.Numbers.NatInt.NZParity.odd_add	40
Coq.Numbers.NatInt.NZParity.even_mul	40
Coq.Numbers.NatInt.NZParity.odd_mul	40
Coq.Numbers.NatInt.NZParity.even_add_even	40	3.5.2.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	18.8339431286	4888
Coq.Numbers.NatInt.NZParity.odd_add_even	40	1.4.0.0.0	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: apply even_spec in Hm; only 1: now destruct (even n), (even m)).	0.108294010162	17
Coq.Numbers.NatInt.NZParity.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.129208087921	6
Coq.Numbers.NatInt.NZAddOrder.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.131796836853	6
Coq.Numbers.NatInt.NZAddOrder.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0432069301605	3
Coq.Numbers.NatInt.NZAddOrder.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0433549880981	3
Coq.Numbers.NatInt.NZAddOrder.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.mul_0_r	40	4.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl).	0.0582540035248	14
Coq.Numbers.NatInt.NZMul.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.mul_comm	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.051600933075	6
Coq.Numbers.NatInt.NZMul.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.mul_assoc	40
Coq.Numbers.NatInt.NZMul.mul_1_l	40	0.0.0.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.042927980423	7
Coq.Numbers.NatInt.NZMul.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0225081443787	2
Coq.Numbers.NatInt.NZMul.mul_shuffle0	40	0.0.0.1.0.9.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	11.7377109528	3117
Coq.Numbers.NatInt.NZMul.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.log2_unique	40
Coq.Numbers.NatInt.NZLog.log2_wd	40
Coq.Numbers.NatInt.NZLog.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.log2_unique'	40
Coq.Numbers.NatInt.NZLog.log2_pow2	40
Coq.Numbers.NatInt.NZLog.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.log2_1	40	0.0.0.0.0.5.0.24	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: nzsimpl; only 1: split; only 1: order; only 1: rewrite two_succ; only 1: apply lt_succ_diag_r; only 1: order_pos).	1.23875999451	980
Coq.Numbers.NatInt.NZLog.log2_2	40	1.0.0.1.0.7	search with cache (only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	1.23753499985	899
Coq.Numbers.NatInt.NZLog.log2_pos	40
Coq.Numbers.NatInt.NZLog.log2_null	40
Coq.Numbers.NatInt.NZLog.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_double	40
Coq.Numbers.NatInt.NZLog.log2_same	40
Coq.Numbers.NatInt.NZLog.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.log2_up_eqn	40	0.0.0.0.2.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0297629833221	8
Coq.Numbers.NatInt.NZLog.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_up_nonpos	40	0.6.1.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	1.14038586617	635
Coq.Numbers.NatInt.NZLog.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.log2_up_nonneg	40	0.0.2.0.0.1.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intro H; only 1: order_pos; only 1: order).	0.0310599803925	10
Coq.Numbers.NatInt.NZLog.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_1	40	0.0	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0103130340576	2
Coq.Numbers.NatInt.NZLog.log2_up_2	40
Coq.Numbers.NatInt.NZLog.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.log2_up_pos	40	0.2.5.1.0.0.3.0.0	search with cache (only 1: intros a Ha; only 1: assert (Ha' : 0 < a) by order'; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros; only 1: apply lt_succ_r; only 1: order_pos; only 1: order).	32.4864301682	10229
Coq.Numbers.NatInt.NZLog.log2_up_null	40
Coq.Numbers.NatInt.NZLog.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_double	40
Coq.Numbers.NatInt.NZLog.log2_up_same	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.eq_sym_iff	40	1.4.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0300860404968	16
Coq.Numbers.NatInt.NZBase.neq_sym	40	9	search with cache (only 1: firstorder).	0.0320870876312	33
Coq.Numbers.NatInt.NZBase.eq_stepl	40	0.1.9.0.1	search with cache (only 1: intros x y H; only 1: symmetry; only 1: transitivity x; only 1: intuition; only 1: auto).	0.488762140274	500
Coq.Numbers.NatInt.NZBase.succ_inj	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.succ_inj_wd_neg	40	0.0.0.0.7.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	0.528945922852	310
Coq.Numbers.NatInt.NZBase.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonpos_r	40	0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	2.93844103813	514
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_pos_r	40	0.0.0.4.0.5	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	4.18952798843	1683
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_neg_r	40	0.0.0.0.0.5.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	2.37605404854	900
Coq.Numbers.NatInt.NZMulOrder.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0238320827484	4
Coq.Numbers.NatInt.NZMulOrder.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.024288892746	4
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_l	40	0.0.11.0.0.0	search with cache (only 1: intros n m Hn; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	5.84519290924	2511
Coq.Numbers.NatInt.NZMulOrder.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.eq_mul_0_r	40	0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0198972225189	5
Coq.Numbers.NatInt.NZMulOrder.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_lt_mono_nonneg	40	8.0	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.0183880329132	10
Coq.Numbers.NatInt.NZMulOrder.square_le_mono_nonneg	40	1.0.1.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0219171047211	9
Coq.Numbers.NatInt.NZMulOrder.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.eq_refl	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0100150108337	2
Coq.Structures.OrdersTac.le_refl	40
Coq.Structures.OrdersTac.lt_irrefl	40
Coq.Structures.OrdersTac.eq_sym	40	4.0.0.0.0	search with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto).	0.122303962708	49
Coq.Structures.OrdersTac.le_antisym	40
Coq.Structures.OrdersTac.neq_sym	40	0	search with cache (only 1: auto with *).	0.00860786437988	1
Coq.Structures.OrdersTac.trans	40
Coq.Structures.OrdersTac.eq_neq	40
Coq.Structures.OrdersTac.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00844693183899	1
Coq.Structures.OrdersTac.not_neq_eq	40
Coq.Structures.OrdersTac.not_ge_lt	40
Coq.Structures.OrdersTac.not_gt_le	40	0.2.0.1.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition; only 1: rewrite P.le_lteq; only 1: intuition).	0.318813085556	164
Coq.Structures.OrdersTac.le_neq_lt	40	0.2.1	search with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.28040099144	87
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.lt_compat	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrdersEx.bits_lt_antirefl	40
Coq.Structures.OrdersEx.bits_lt_trans	40
Coq.Structures.OrdersEx.lt_compat	40	2	search with cache (only 1: auto with *).	0.0385229587555	12
Coq.Structures.OrdersEx.lt_strorder	40
Coq.Structures.OrdersEx.compare_spec	40
Coq.Structures.OrderedTypeEx.lt_trans	40	0.0.0.0	search with cache (only 1: intros; only 1: transitivity ltac:(y); only 1: assumption; only 1: assumption).	0.0514798164368	4
Coq.Structures.OrderedTypeEx.lt_not_eq	40	4.5	search with cache (only 1: intros a b Hb; only 1: Nat.order).	0.283812046051	176
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_trans	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0403809547424	3
Coq.Structures.OrderedTypeEx.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0328810214996	1
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40	9.28.3	search with cache (only 1: intro n; only 1: intros q H H'; only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order)).	12.7436189651	15604
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_refl	40	8.8	search with cache (only 1: intros; only 1: easy).	0.490204811096	334
Coq.Structures.OrderedTypeEx.eq_sym	40	10.9.5	search with cache (only 1: intros; only 1: destruct H; only 1: firstorder).	2.67010807991	2185
Coq.Structures.OrderedTypeEx.eq_trans	40	8.5.1.0	search with cache (only 1: intros; only 1: firstorder; only 1: eauto with *; only 1: now rewrite <- H1).	1.29714488983	1044
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40
Coq.Structures.OrderedTypeEx.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.OrderedTypeEx.eq_dec	40	0	search with cache (only 1: decide equality).	0.0428400039673	1
Coq.Structures.OrderedTypeEx.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.lt_trans	40
Coq.Structures.OrderedTypeEx.lt_not_eq	40
Coq.Structures.OrderedTypeEx.compare	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.le_lteq	40	1.0	search with cache (only 1: Bool.destr_bool; only 1: reflexivity).	0.00910997390747	3
Coq.Structures.Orders.lt_total	40
Coq.Structures.Orders.leb_le	40
Coq.Structures.Orders.leb_total	40
Coq.Structures.Orders.leb_trans	40
Coq.Structures.Orders.compare_spec	40
Coq.Structures.Orders.eqb_eq	40
Coq.Structures.Orders.eq_equiv	40
Coq.Structures.Orders.lt_strorder	40
Coq.Structures.Orders.lt_compat	40
Coq.Structures.Orders.le_lteq	40
Coq.Structures.DecidableTypeEx.eq_refl	40	10.0	search with cache (only 1: intros; only 1: easy).	0.14929318428	97
Coq.Structures.DecidableTypeEx.eq_sym	40	13.1	search with cache (only 1: intros; only 1: firstorder).	0.298918008804	280
Coq.Structures.DecidableTypeEx.eq_trans	40
Coq.Structures.DecidableTypeEx.eq_dec	40
Coq.Structures.DecidableTypeEx.eq_dec	40	3.20.21	search with cache (only 1: intro Hxy; only 1: fix odd_spec 1; only 1: auto).	6.40806293488	16685
Coq.Structures.Equalities.eq_equiv	40	23.1.18.0.7.2	search with cache (only 1: split; only 1: auto with *; only 1: auto with *; only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: eauto).	2.53067803383	10121
Coq.Structures.Equalities.eqb_eq	40
Coq.Structures.Equalities.eq_dec	40
Coq.Structures.Equalities.eqb_compat	40
Coq.Structures.Equalities.eqb_spec	40
Coq.Structures.Equalities.eqb_neq	40
Coq.Structures.Equalities.eqb_refl	40	2.5.1.8	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: intuition).	0.32400393486	260
Coq.Structures.Equalities.eqb_sym	40
Coq.Structures.OrderedType.eq_dec	40
Coq.Structures.OrderedType.eq_equiv	40
Coq.Structures.OrderedType.lt_antirefl	40
Coq.Structures.OrderedType.lt_strorder	40	2.0.0.0.87.1	search with cache (only 1: split; only 1: simpl_relation; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	4.31121921539	15206
Coq.Structures.OrderedType.lt_eq	40
Coq.Structures.OrderedType.eq_lt	40
Coq.Structures.OrderedType.lt_compat	40
Coq.Structures.OrderedType.lt_total	40
Coq.Structures.OrderedType.le_lteq	40	5.3	search with cache (only 1: symmetry; only 1: reflexivity).	0.0347881317139	22
Coq.Structures.OrderedType.le_eq	40
Coq.Structures.OrderedType.eq_le	40
Coq.Structures.OrderedType.neq_eq	40	0	search with cache (only 1: order).	0.0102179050446	1
Coq.Structures.OrderedType.eq_neq	40	0	search with cache (only 1: order).	0.148873090744	1
Coq.Structures.OrderedType.le_lt_trans	40	12.2	search with cache (only 1: intuition auto; PeanoNat.Nat.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.18768596649	1019
Coq.Structures.OrderedType.lt_le_trans	40	10.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.430328845978	163
Coq.Structures.OrderedType.le_neq	40	0	search with cache (only 1: order).	0.0113170146942	1
Coq.Structures.OrderedType.le_trans	40	10.3	search with cache (only 1: intros; only 1: order).	6.35119605064	515
Coq.Structures.OrderedType.le_antisym	40	0	search with cache (only 1: order).	0.0111739635468	1
Coq.Structures.OrderedType.neq_sym	40	1.0	search with cache (only 1: red; only 1: order).	0.0197131633759	11
Coq.Structures.OrderedType.lt_le	40	10	search with cache (only 1: order).	0.0424749851227	41
Coq.Structures.OrderedType.gt_not_eq	40	6	search with cache (only 1: order).	0.0147941112518	7
Coq.Structures.OrderedType.eq_not_lt	40	0	search with cache (only 1: order).	0.00934100151062	1
Coq.Structures.OrderedType.eq_not_gt	40	0	search with cache (only 1: order).	0.010516166687	1
Coq.Structures.OrderedType.lt_not_gt	40	0	search with cache (only 1: order).	0.0101089477539	1
Coq.Structures.OrderedType.elim_compare_eq	40
Coq.Structures.OrderedType.elim_compare_lt	40	0.0.0.1.0.1.0.1.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.703526973724	342
Coq.Structures.OrderedType.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.99889421463	447
Coq.Structures.OrderedType.lt_dec	40
Coq.Structures.OrderedType.eqb_alt	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.ListIn_In	40	7.0.0.3.1.5	search with cache (only 1: induction l as [| x xs Hl]; only 1: simpl; only 1: intro H1; only 1: inversion 1; only 1: firstorder  (subst; auto); only 1: firstorder).	9.56166696548	7204
Coq.Structures.OrderedType.Inf_lt	40	7.1.2.0.8	search with cache (only 1: induction l; only 1: auto; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	5.13424396515	3205
Coq.Structures.OrderedType.Inf_eq	40	4.0.0.0.7.0.2	search with cache (only 1: destruct l; only 1: constructor; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: eauto; only 1: constructor; only 1: order).	8.61883187294	5029
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.ListIn_Inf	40	0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: firstorder).	0.0319011211395	7
Coq.Structures.OrderedType.In_Inf	40	0.0.1.0.0.0.0.0.12	search with cache (only 1: intros [| ] ?; only 1: apply InA_InfA; only 1: split; only 1: exact eq_refl; only 1: auto with *; only 1: exact eq_trans; only 1: intros; only 1: constructor; only 1: auto with ordered_type).	0.925866127014	815
Coq.Structures.OrderedType.Inf_alt	40
Coq.Structures.OrderedType.Sort_NoDup	40
Coq.Structures.OrderedType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.147561073303	3
Coq.Structures.OrderedType.ltk_right_r	40	2.1	search with cache (only 1: intros; only 1: trivial).	0.0158498287201	5
Coq.Structures.OrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0110611915588	1
Coq.Structures.OrderedType.eqk_refl	40	4	search with cache (only 1: firstorder).	0.0102598667145	5
Coq.Structures.OrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.0082859992981	1
Coq.Structures.OrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0151519775391	2
Coq.Structures.OrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0214030742645	2
Coq.Structures.OrderedType.eqk_trans	40	0.1.6.0.3.15	search with cache (only 1: intros n m; only 1: induction n; only 1: unfold eqk, eqke; only 1: simpl; only 1: intros H'; only 1: order).	4.43086600304	5699
Coq.Structures.OrderedType.eqke_trans	40
Coq.Structures.OrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0127038955688	2
Coq.Structures.OrderedType.ltk_not_eqk	40	3.22	search with cache (only 1: intro; only 1: eauto with ordered_type).	11.1727609634	6973
Coq.Structures.OrderedType.ltk_not_eqke	40	0.1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: intuition; only 1: order).	0.0373251438141	5
Coq.Structures.OrderedType.eqk_equiv	40	3.0.23.0.19.0.32.15	search with cache (only 1: split; only 1: hnf; only 1: auto with ordered_type; only 1: intros Hfst Hsnd; only 1: auto with ordered_type; only 1: intros x y z H; only 1: revert z; only 1: eauto with ordered_type).	18.6451070309	47535
Coq.Structures.OrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0299699306488	4
Coq.Structures.OrderedType.ltk_strorder	40	0.12.0.2.13.16.18.0	search with cache (only 1: constructor; only 1: intros l; only 1: generalize dependent l; only 1: compute; only 1: intro; only 1: induction l; only 1: order; only 1: eauto with ordered_type).	13.0482120514	29270
Coq.Structures.OrderedType.ltk_compat	40
Coq.Structures.OrderedType.ltk_compat'	40
Coq.Structures.OrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0134799480438	2
Coq.Structures.OrderedType.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.0113060474396	1
Coq.Structures.OrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.011265039444	1
Coq.Structures.OrderedType.InA_eqke_eqk	40	1.1.5.9.6.1	search with cache (only 1: unfold eqke, ltk; only 1: induction 1; only 1: constructor; only 1: intuition; only 1: right; only 1: eauto with ordered_type).	10.9391849041	5892
Coq.Structures.OrderedType.In_alt	40
Coq.Structures.OrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.In_eq	40
Coq.Structures.OrderedType.Inf_eq	40	1.6.0.0.1.0	search with cache (only 1: induction l as [| a l' Hrec]; only 1: unfold eqke, ltk; only 1: intuition; only 1: intuition; only 1: rewrite H; only 1: eauto with *).	5.81885313988	1438
Coq.Structures.OrderedType.Inf_lt	40	2.8.0.1.2	search with cache (only 1: induction l; only 1: eauto with ordered_type; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	13.7853858471	1333
Coq.Structures.OrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.Sort_In_cons_1	40	0.0.0.0.5.5.1.2	search with cache (only 1: intros; only 1: red; only 1: compute; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	8.65254497528	3608
Coq.Structures.OrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.In_inv	40
Coq.Structures.OrderedType.In_inv_2	40	0.1.10.0.11	search with cache (only 1: intros a b c Ha H; only 1: inversion_clear 1; only 1: intros; only 1: intuition; only 1: eauto with *).	26.5608057976	15496
Coq.Structures.OrderedType.In_inv_3	40	0.0.0.3.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	0.124758005142	40
Coq.Structures.OrdersFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0307581424713	7
Coq.Structures.OrdersFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.2.0.0.3.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	11.3967220783	9790
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.0.0.1.1.2.0	search with cache (only 1: case compare_spec; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	20.9262280464	4641
Coq.Structures.OrdersFacts.compare_ngt_iff	40	2.1.0.0.1.1.1.0.0.1.1.3.1	search with cache (only 1: case compare_spec; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	27.7392859459	10269
Coq.Structures.OrdersFacts.compare_compat	40
Coq.Structures.OrdersFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.00991606712341	2
Coq.Structures.OrdersFacts.compare_antisym	40
Coq.Structures.OrdersFacts.le_compat	40
Coq.Structures.OrdersFacts.le_preorder	40
Coq.Structures.OrdersFacts.le_order	40	2.0.0.31	search with cache (only 1: intro H; only 1: simpl in *; only 1: compute; only 1: iorder).	37.8184309006	9258
Coq.Structures.OrdersFacts.le_antisym	40	7.0	search with cache (only 1: compute; only 1: iorder).	0.0520889759064	46
Coq.Structures.OrdersFacts.le_not_gt_iff	40	5	search with cache (only 1: iorder).	0.0638220310211	34
Coq.Structures.OrdersFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.00866103172302	1
Coq.Structures.OrdersFacts.le_or_gt	40
Coq.Structures.OrdersFacts.lt_or_ge	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.249936103821	40
Coq.Structures.OrdersFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0106661319733	1
Coq.Structures.OrdersFacts.compare_le_iff	40	2.3	search with cache (only 1: autorewrite with order; only 1: iorder).	0.280975818634	103
Coq.Structures.OrdersFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0188841819763	3
Coq.Structures.OrdersFacts.lt_dec	40
Coq.Structures.OrdersFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.eqb_alt	40	0.0.0.0.1.0.1.0.0.0.0.14.1	search with cache (only 1: destr_bool; only 1: compute; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: elim_compare x y; only 1: order; only 1: auto; only 1: auto).	15.2155120373	6467
Coq.Structures.OrdersFacts.eqb_compat	40
Coq.Structures.OrdersFacts.lt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0127658843994	3
Coq.Structures.OrdersFacts.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0145039558411	1
Coq.Structures.OrdersFacts.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0124971866608	1
Coq.Structures.OrdersFacts.le_eq	40	2.4.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: contradict ltac:(H); only 1: order).	0.927145004272	19
Coq.Structures.OrdersFacts.eq_le	40	1.3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: contradict ltac:(H); only 1: order).	0.955188989639	11
Coq.Structures.OrdersFacts.neq_eq	40	0	search with cache (only 1: order).	0.00914001464844	1
Coq.Structures.OrdersFacts.eq_neq	40	0	search with cache (only 1: order).	0.0100588798523	1
Coq.Structures.OrdersFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00810813903809	1
Coq.Structures.OrdersFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00752091407776	1
Coq.Structures.OrdersFacts.le_trans	40	0	search with cache (only 1: order).	0.00774598121643	1
Coq.Structures.OrdersFacts.le_antisym	40	0	search with cache (only 1: order).	0.00855302810669	1
Coq.Structures.OrdersFacts.le_neq	40	0	search with cache (only 1: order).	0.00811696052551	1
Coq.Structures.OrdersFacts.neq_sym	40	0	search with cache (only 1: order).	0.00706601142883	1
Coq.Structures.OrdersFacts.lt_le	40	0	search with cache (only 1: order).	0.00774312019348	1
Coq.Structures.OrdersFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00752401351929	1
Coq.Structures.OrdersFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00774097442627	1
Coq.Structures.OrdersFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00813293457031	1
Coq.Structures.OrdersFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00735807418823	1
Coq.Structures.OrdersFacts.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.lt_strorder	40
Coq.Structures.OrdersFacts.lt_compat	40	7.12.2.2.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: apply _; only 1: apply _; only 1: unfold lt; only 1: solve_proper).	24.764731884	18459
Coq.Structures.OrdersFacts.le_lteq	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_spec	40
Coq.Structures.OrdersFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.010125875473	2
Coq.Structures.OrdersFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.00992798805237	2
Coq.Structures.OrdersFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.compare_ngt_iff	40	1	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00936007499695	2
Coq.Structures.OrdersFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0128288269043	3
Coq.Structures.OrdersFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.leb_spec0	40
Coq.Structures.OrdersFacts.leb_spec	40
Coq.Structures.OrdersFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.ltb_spec	40
Coq.Structures.OrdersFacts.leb_nle	40	0.0.17.1	search with cache (only 1: rewrite <- compare_le_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	16.393116951	8013
Coq.Structures.OrdersFacts.leb_gt	40	0.1.0.1.3.2.5	search with cache (only 1: case leb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: trivial).	3.08696389198	1146
Coq.Structures.OrdersFacts.ltb_nlt	40	0.5.9	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.843920946121	508
Coq.Structures.OrdersFacts.ltb_ge	40	0.1.9	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.707711935043	208
Coq.Structures.OrdersFacts.leb_refl	40
Coq.Structures.OrdersFacts.leb_antisym	40	1.3.2.1.0.7.15	search with cache (only 1: compute; only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: symmetry; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	29.3401610851	11625
Coq.Structures.OrdersFacts.ltb_irrefl	40	0.4.14.8.6	search with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: intuition).	2.88135004044	3145
Coq.Structures.OrdersFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.eqb_compare	40
Coq.Structures.OrdersFacts.ltb_compare	40
Coq.Structures.OrdersFacts.leb_compare	40
Coq.Structures.OrdersLists.In_eq	40	2.3.0	search with cache (only 1: intros l x y H H'; only 1: elim H; only 1: eauto).	0.054162979126	22
Coq.Structures.OrdersLists.ListIn_In	40	8.0.0.2.1.5	search with cache (only 1: induction l as [| x xs Hl]; only 1: simpl; only 1: intro H1; only 1: inversion 1; only 1: firstorder  (subst; auto); only 1: firstorder).	8.34051394463	6591
Coq.Structures.OrdersLists.Inf_lt	40	0.0.7.0.0.0.7	search with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: eauto; only 1: eauto).	4.47546482086	2403
Coq.Structures.OrdersLists.Inf_eq	40	2.14.0.2	search with cache (only 1: destruct l; only 1: constructor; only 1: intros n m H; only 1: now rewrite H).	15.1869750023	9437
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.ListIn_Inf	40	0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: firstorder).	0.0366189479828	7
Coq.Structures.OrdersLists.In_Inf	40	10.0.2.1.12	search with cache (only 1: intros [| ] ?; only 1: intros; only 1: eauto; only 1: apply InA_InfA; only 1: intuition).	2.475055933	2784
Coq.Structures.OrdersLists.Inf_alt	40
Coq.Structures.OrdersLists.Sort_NoDup	40
Coq.Structures.OrdersLists.ltk_compat	40	6	search with cache (only 1: solve_proper).	0.300673007965	50
Coq.Structures.OrdersLists.ltk_compat'	40	3.0	search with cache (only 1: unfold eqk, ltk; only 1: solve_proper).	1.71185016632	19
Coq.Structures.OrdersLists.pair_compat	40	5.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: firstorder).	0.0310180187225	11
Coq.Structures.OrdersLists.ltk_not_eqk	40
Coq.Structures.OrdersLists.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0305190086365	3
Coq.Structures.OrdersLists.Inf_eq	40
Coq.Structures.OrdersLists.Inf_lt	40
Coq.Structures.OrdersLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.Sort_NoDupA	40
Coq.Structures.OrdersLists.Sort_In_cons_1	40
Coq.Structures.OrdersLists.Sort_In_cons_2	40
Coq.Structures.OrdersLists.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.eqke_eqk	40	1	search with cache (only 1: firstorder).	0.0151739120483	2
Coq.Structures.EqualitiesFacts.eqke_def	40	6	search with cache (only 1: firstorder).	0.0136978626251	7
Coq.Structures.EqualitiesFacts.eqke_def'	40	1	search with cache (only 1: split).	0.013787984848	2
Coq.Structures.EqualitiesFacts.eqke_1	40	33.5	search with cache (only 1: intros; only 1: firstorder).	0.800801038742	1330
Coq.Structures.EqualitiesFacts.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.0165340900421	1
Coq.Structures.EqualitiesFacts.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0128390789032	1
Coq.Structures.EqualitiesFacts.eqk_def'	40	3	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0231540203094	4
Coq.Structures.EqualitiesFacts.eqk_1	40	6	search with cache (only 1: auto with arith).	0.0174748897552	7
Coq.Structures.EqualitiesFacts.InA_eqke_eqk	40
Coq.Structures.EqualitiesFacts.InA_eqk_eqke	40	0.0.6.0	search with cache (only 1: induction 1; only 1: exists y; only 1: firstorder; only 1: firstorder).	0.0550210475922	14
Coq.Structures.EqualitiesFacts.InA_eqk	40	1.18.6.0	search with cache (only 1: firstorder; only 1: destruct p; only 1: rewrite <- H; only 1: auto).	3.56128311157	2940
Coq.Structures.EqualitiesFacts.In_alt	40
Coq.Structures.EqualitiesFacts.In_alt'	40
Coq.Structures.EqualitiesFacts.In_alt2	40
Coq.Structures.EqualitiesFacts.In_nil	40	1.0.0	search with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.035392999649	4
Coq.Structures.EqualitiesFacts.In_cons	40
Coq.Structures.EqualitiesFacts.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.In_compat	40
Coq.Structures.EqualitiesFacts.MapsTo_eq	40	4.25	search with cache (only 1: intro; only 1: now rewrite H).	2.50211310387	2525
Coq.Structures.EqualitiesFacts.In_eq	40	0	search with cache (only 1: now intros <-).	0.0256359577179	1
Coq.Structures.EqualitiesFacts.In_inv	40	9.1.7	search with cache (only 1: rewrite !In_alt; only 1: setoid_rewrite InA_alt; only 1: firstorder  (subst; auto)).	2.77263903618	1045
Coq.Structures.EqualitiesFacts.In_inv_2	40
Coq.Structures.EqualitiesFacts.In_inv_3	40	2.4.2.4	search with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto).	0.674170970917	296
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.EqualitiesFacts.eq_dec	40
Coq.Structures.DecidableType.eqke_eqk	40	3.7	search with cache (only 1: destruct 1; only 1: auto).	0.387763023376	126
Coq.Structures.DecidableType.eqk_refl	40	1.3.0	search with cache (only 1: unfold eqk, eqke; only 1: intros l; only 1: firstorder).	0.023857831955	7
Coq.Structures.DecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0128490924835	1
Coq.Structures.DecidableType.eqk_sym	40	5.1.0	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: eauto with *).	0.0251739025116	9
Coq.Structures.DecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0284469127655	2
Coq.Structures.DecidableType.eqk_trans	40	0.8	search with cache (only 1: intros x l' H H0; only 1: eauto).	0.0552639961243	34
Coq.Structures.DecidableType.eqke_trans	40
Coq.Structures.DecidableType.eqk_equiv	40	1.1.29.0.1.1.0	search with cache (only 1: constructor; only 1: intros x; only 1: auto; only 1: auto; only 1: intros z Hz; only 1: revert z; only 1: eauto).	21.4837670326	21582
Coq.Structures.DecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.200887918472	4
Coq.Structures.DecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.InA_eqk	40	0.3.0.17.5	search with cache (only 1: intros; only 1: elim H0; only 1: intros; only 1: eauto; only 1: intuition).	6.95475006104	5790
Coq.Structures.DecidableType.In_alt	40
Coq.Structures.DecidableType.MapsTo_eq	40	1.1.5.2.2.9.4.7.4	search with cache (only 1: firstorder; only 1: destruct (split (A:=l)); only 1: destruct (split (A:=l)); only 1: elim H0; only 1: induction 1; only 1: destruct (split (A:=l)); only 1: destruct (split (A:=l)); only 1: eauto; only 1: auto).	25.1895599365	28656
Coq.Structures.DecidableType.In_eq	40
Coq.Structures.DecidableType.In_inv	40	2.2.20.2.0	search with cache (only 1: firstorder; only 1: inversion_clear H; only 1: destruct H0; only 1: eauto; only 1: eauto).	26.2770931721	18447
Coq.Structures.DecidableType.In_inv_2	40	1.3.13	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: auto using eqke_equiv).	0.967074155807	754
Coq.Structures.DecidableType.In_inv_3	40	0.0.0.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto using eqk_equiv).	0.08735704422	4
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.lt_not_eq	40
Coq.Structures.OrdersAlt.lt_trans	40	1.3.4.0.69	search with cache (only 1: intro y; only 1: intros; only 1: transitivity y0; only 1: auto; only 1: assumption).	3.85084104538	7330
Coq.Structures.OrdersAlt.compare	40
Coq.Structures.OrdersAlt.eq_equiv	40
Coq.Structures.OrdersAlt.lt_strorder	40
Coq.Structures.OrdersAlt.lt_eq	40
Coq.Structures.OrdersAlt.eq_lt	40
Coq.Structures.OrdersAlt.lt_compat	40
Coq.Structures.OrdersAlt.compare_spec	40
Coq.Structures.OrdersAlt.eq_dec	40
Coq.Structures.OrdersAlt.compare_sym	40
Coq.Structures.OrdersAlt.compare_Eq	40
Coq.Structures.OrdersAlt.compare_Lt	40
Coq.Structures.OrdersAlt.compare_Gt	40	0.0.2.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	9.78534388542	4041
Coq.Structures.OrdersAlt.compare_trans	40
Coq.Structures.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0421907901764	9
Coq.Structures.GenericMinMax.max_spec	40
Coq.Structures.GenericMinMax.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.18056106567	1419
Coq.Structures.GenericMinMax.Proper_instance_0	40
Coq.Structures.GenericMinMax.max_compat	40
Coq.Structures.GenericMinMax.max_unicity	40	3.4.2.2.1.1.1.1.2.10	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order).	15.7460970879	11457
Coq.Structures.GenericMinMax.max_unicity_ext	40
Coq.Structures.GenericMinMax.max_mono	40
Coq.Structures.GenericMinMax.max_id	40	0.0.5.2	search with cache (only 1: apply max_r; only 1: rewrite le_lteq; only 1: right; only 1: reflexivity).	0.0521860122681	29
Coq.Structures.GenericMinMax.max_assoc	40
Coq.Structures.GenericMinMax.max_comm	40
Coq.Structures.GenericMinMax.le_max_l	40	0.0.0.0.0.4.12	search with cache (only 1: rewrite le_lteq; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition).	0.567632913589	450
Coq.Structures.GenericMinMax.le_max_r	40	0	search with cache (only 1: solve_max).	0.0354170799255	1
Coq.Structures.GenericMinMax.max_l_iff	40	12	search with cache (only 1: solve_max).	0.66955780983	266
Coq.Structures.GenericMinMax.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0315721035004	1
Coq.Structures.GenericMinMax.max_le	40
Coq.Structures.GenericMinMax.max_le_iff	40	0.0.0.3.2.0.0.0.2.2.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	17.1025340557	6860
Coq.Structures.GenericMinMax.max_lt_iff	40	0.0.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	1.212018013	457
Coq.Structures.GenericMinMax.max_lub_l	40	0.1.0.1.3	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0396919250488	10
Coq.Structures.GenericMinMax.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0210540294647	1
Coq.Structures.GenericMinMax.max_lub	40	0.1.0.1.3	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0396389961243	10
Coq.Structures.GenericMinMax.max_lub_iff	40	0.4.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0952889919281	15
Coq.Structures.GenericMinMax.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0222091674805	1
Coq.Structures.GenericMinMax.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0989298820496	25
Coq.Structures.GenericMinMax.max_le_compat_l	40
Coq.Structures.GenericMinMax.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0368368625641	3
Coq.Structures.GenericMinMax.max_le_compat	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0659730434418	4
Coq.Structures.GenericMinMax.min_spec	40
Coq.Structures.GenericMinMax.min_spec_le	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	1.78536701202	760
Coq.Structures.GenericMinMax.min_compat	40
Coq.Structures.GenericMinMax.min_unicity	40
Coq.Structures.GenericMinMax.min_unicity_ext	40
Coq.Structures.GenericMinMax.min_mono	40
Coq.Structures.GenericMinMax.min_id	40	0.1	search with cache (only 1: apply min_l; only 1: order).	0.0156149864197	3
Coq.Structures.GenericMinMax.min_assoc	40
Coq.Structures.GenericMinMax.min_comm	40
Coq.Structures.GenericMinMax.le_min_r	40	2.1.1.12	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.644212007523	283
Coq.Structures.GenericMinMax.le_min_l	40	0	search with cache (only 1: solve_min).	0.0202460289001	1
Coq.Structures.GenericMinMax.min_l_iff	40	11	search with cache (only 1: solve_min).	0.895951986313	278
Coq.Structures.GenericMinMax.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0262341499329	1
Coq.Structures.GenericMinMax.min_le	40	0.0.1.8	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	1.04036521912	430
Coq.Structures.GenericMinMax.min_le_iff	40	0.0.7.0.0.0.0.0.0.2.0	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: intuition; only 1: solve_min; only 1: solve_min).	21.158288002	9182
Coq.Structures.GenericMinMax.min_lt_iff	40	0.0.0.0.0.0.0.3.3	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	4.27922105789	1468
Coq.Structures.GenericMinMax.min_glb_l	40	5	search with cache (only 1: solve_min).	0.0552489757538	16
Coq.Structures.GenericMinMax.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0212268829346	1
Coq.Structures.GenericMinMax.min_glb	40	2	search with cache (only 1: solve_min).	0.0217587947845	3
Coq.Structures.GenericMinMax.min_glb_iff	40	0.6.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0910761356354	17
Coq.Structures.GenericMinMax.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0217599868774	2
Coq.Structures.GenericMinMax.min_glb_lt_iff	40	4	search with cache (only 1: solve_min).	0.508603096008	89
Coq.Structures.GenericMinMax.min_le_compat_l	40
Coq.Structures.GenericMinMax.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0381190776825	3
Coq.Structures.GenericMinMax.min_le_compat	40	1.3.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0563130378723	9
Coq.Structures.GenericMinMax.min_max_absorption	40	0.4	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0316441059113	6
Coq.Structures.GenericMinMax.max_min_absorption	40	0.7	search with cache (only 1: apply min_l; only 1: solve_max).	0.057678937912	21
Coq.Structures.GenericMinMax.max_min_distr	40
Coq.Structures.GenericMinMax.min_max_distr	40
Coq.Structures.GenericMinMax.max_min_modular	40
Coq.Structures.GenericMinMax.min_max_modular	40
Coq.Structures.GenericMinMax.max_min_disassoc	40
Coq.Structures.GenericMinMax.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	3.53496003151	998
Coq.Structures.GenericMinMax.min_max_antimono	40
Coq.Structures.GenericMinMax.max_case_strong	40
Coq.Structures.GenericMinMax.max_case	40	0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.1.0	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	24.2307519913	17127
Coq.Structures.GenericMinMax.max_dec	40
Coq.Structures.GenericMinMax.min_case_strong	40
Coq.Structures.GenericMinMax.min_case	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	18.1426210403	11776
Coq.Structures.GenericMinMax.min_dec	40	0.0.0.0.0.0.0.0.0.21	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	2.4755358696	2843
Coq.Structures.GenericMinMax.max_monotone	40	0.15	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.237597942352	226
Coq.Structures.GenericMinMax.min_monotone	40	0.0.17.7	search with cache (only 1: intros x x' Hxx'; only 1: apply min_mono; only 1: congruence; only 1: auto).	1.65348005295	1302
Coq.Structures.GenericMinMax.min_max_antimonotone	40
Coq.Structures.GenericMinMax.max_min_antimonotone	40
Coq.Structures.GenericMinMax.max_case_strong	40	12.2.4.3	search with cache (only 1: intros x y H; only 1: apply max_case_strong; only 1: intros Compat Hl Hr; only 1: simpl_relation).	16.5417740345	13690
Coq.Structures.GenericMinMax.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0234451293945	4
Coq.Structures.GenericMinMax.max_dec	40	0.0.0.2	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0247778892517	6
Coq.Structures.GenericMinMax.min_case_strong	40	0.0.0.8.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.619478940964	374
Coq.Structures.GenericMinMax.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0247578620911	4
Coq.Structures.GenericMinMax.min_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0252690315247	6
Coq.Structures.GenericMinMax.compare_spec	40
Coq.Structures.OrderedTypeAlt.eq_refl	40
Coq.Structures.OrderedTypeAlt.eq_sym	40
Coq.Structures.OrderedTypeAlt.lt_not_eq	40	0	search with cache (only 1: congruence).	0.00855612754822	1
Coq.Structures.OrderedTypeAlt.compare	40
Coq.Structures.OrderedTypeAlt.eq_dec	40	5.3.7.19	search with cache (only 1: intros m IH; only 1: pattern m; only 1: unfold eq; only 1: decide equality).	15.3759679794	22926
Coq.Structures.OrderedTypeAlt.compare_sym	40
Coq.Structures.OrderedTypeAlt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.4.0.10.8	search with cache (only 1: destruct n as [| [| n]]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: easy; only 1: trivial).	1.271930933	932
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0241510868073	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: reflexivity).	0.00647377967834	1
Coq.ZArith.Znat.positive_N_nat	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00840091705322	2
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0260870456696	9
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.015930891037	4
Coq.ZArith.Znat.Z_nat_N	40	0.1.0.0.0.1.1.4.42	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: trivial).	2.28128600121	2196
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.1.0.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity).	0.0226080417633	9
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.1.13	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: simpl; only 1: apply positive_nat_N).	0.374847888947	252
Coq.ZArith.Znat.id	40	0.0.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0313549041748	9
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: intros; only 1: now subst).	1.45668697357	543
Coq.ZArith.Znat.is_nonneg	40	0.0.19.1.37	search with cache (only 1: pattern n; only 1: intro Hn; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: constructor; only 1: now destruct n).	1.29303884506	2531
Coq.ZArith.Znat.inj_0	40	6	search with cache (only 1: trivial).	0.00589609146118	7
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00566601753235	1
Coq.ZArith.Znat.inj_compare	40	2.0.0.0.0.0.0.0.10	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	1.88853597641	1016
Coq.ZArith.Znat.inj_le	40	2.2	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.0146889686584	6
Coq.ZArith.Znat.inj_lt	40	4.1.0.0.0.0.1.1.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: now split; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy'; only 1: simpl; only 1: easy).	16.8774809837	8255
Coq.ZArith.Znat.inj_ge	40
Coq.ZArith.Znat.inj_gt	40	0.0.12	search with cache (only 1: symmetry; only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	1.34215688705	347
Coq.ZArith.Znat.inj_abs_N	40
Coq.ZArith.Znat.inj_add	40	0.0.0.0.0.1.20	search with cache (only 1: destruct n; only 1: now N.nzsimpl; only 1: unfold N.succ, N.add; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: trivial).	1.83449697495	1068
Coq.ZArith.Znat.inj_mul	40	5	search with cache (only 1: now destruct n, m).	0.00863695144653	6
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_succ	40	0.1.0.13.6	search with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.82596588135	439
Coq.ZArith.Znat.inj_pred_max	40	0.0.0.1.8.3.4	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: split; only 1: trivial; only 1: simpl; only 1: trivial).	1.80884099007	1299
Coq.ZArith.Znat.inj_pred	40	2.2.1.4	search with cache (only 1: destruct n; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: simpl; only 1: now destruct p).	0.649667024612	304
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.1.0.0.6.3.0	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.466207027435	356
Coq.ZArith.Znat.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0165820121765	4
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0374591350555	10
Coq.ZArith.Znat.id	40	1.0.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0228428840637	6
Coq.ZArith.Znat.inj	40
Coq.ZArith.Znat.inj_iff	40	2.0.0.3.3	search with cache (only 1: split; only 1: apply SuccNat2Pos.inj; only 1: Z.order; only 1: Z.order; only 1: congruence).	3.03354096413	1104
Coq.ZArith.Znat.inj_0	40	1	search with cache (only 1: reflexivity).	0.00604104995728	2
Coq.ZArith.Znat.inj_pos	40	1	search with cache (only 1: now destruct n).	0.00704288482666	2
Coq.ZArith.Znat.inj_neg	40	1.0.0.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: split; only 1: reflexivity).	0.0157279968262	9
Coq.ZArith.Znat.inj_add	40	8.1	search with cache (only 1: intros Hnm Hpq; only 1: now destruct n, m).	0.152516841888	29
Coq.ZArith.Znat.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy || now destruct y).	1.02242302895	237
Coq.ZArith.Znat.inj_succ	40	1.0.0.0.0.7.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: intros H; only 1: trivial; only 1: trivial; only 1: easy; only 1: now destruct 1 || now destruct 2).	4.55903887749	2681
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.1.0.0.15.1	search with cache (only 1: unfold Z.succ, Z.pred; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now destruct p; only 1: trivial).	0.89669084549	433
Coq.ZArith.Znat.inj_compare	40	2.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.185739040375	83
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40	5.0.13.3	search with cache (only 1: unfold Z.le, Z.min; only 1: simpl; only 1: unfold Z.ltb, Z.lt; only 1: now destruct n, m).	5.80910897255	4543
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_div	40
Coq.ZArith.Znat.inj_mod	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_div2	40	0.0.0.0.0.3.3.0.8	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	1.10555815697	768
Coq.ZArith.Znat.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0196270942688	6
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_testbit	40	1.0.0.0.0.1.0.2.0.1.0.1.3.0	search with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: unfold Z.testbit; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: apply Z.testbit_Zpos; only 1: Z.order_pos; only 1: apply Z.testbit_Zpos; only 1: trivial; only 1: simpl; only 1: now destruct a).	9.39516186714	5889
Coq.ZArith.Znat.abs_N_spec	40	0.0.0.0.3.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0241250991821	9
Coq.ZArith.Znat.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.0101878643036	1
Coq.ZArith.Znat.id_abs	40	0	search with cache (only 1: now destruct n).	0.00758981704712	1
Coq.ZArith.Znat.id	40	0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: trivial).	0.016813993454	4
Coq.ZArith.Znat.inj_0	40	0.2	search with cache (only 1: N.bitwise; only 1: trivial).	0.0160830020905	4
Coq.ZArith.Znat.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00867319107056	2
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00580191612244	1
Coq.ZArith.Znat.inj_opp	40	0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0199398994446	6
Coq.ZArith.Znat.inj_succ	40	3.0.1.0.0.0.4.6	search with cache (only 1: intro H; only 1: destruct n; only 1: reflexivity; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: f_equal; only 1: now destruct p; only 1: easy).	8.38354301453	5381
Coq.ZArith.Znat.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: easy || now destruct y; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.97506403923	491
Coq.ZArith.Znat.inj_mul	40	1	search with cache (only 1: now destruct n, m).	0.732540130615	166
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40	0.4.1.0.4.0	search with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: simpl; only 1: now try N.order'; only 1: now destruct p; only 1: easy).	6.42995095253	2876
Coq.ZArith.Znat.inj_compare	40	8	search with cache (only 1: now destruct n, m).	0.879072189331	236
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0169148445129	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0151968002319	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_quot	40
Coq.ZArith.Znat.inj_rem	40
Coq.ZArith.Znat.inj_pow	40
Coq.ZArith.Znat.inj_succ_abs	40	1.3.1.0.1.3.6	search with cache (only 1: symmetry; only 1: destruct n as [| p| p]; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	7.95214986801	5182
Coq.ZArith.Znat.inj_add_abs	40
Coq.ZArith.Znat.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0127749443054	1
Coq.ZArith.Znat.inj_0	40	6	search with cache (only 1: now subst).	0.00858497619629	7
Coq.ZArith.Znat.inj_succ	40	0.0.3.5	search with cache (only 1: destruct n as [| p]; only 1: split; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.402240037918	114
Coq.ZArith.Znat.is_nonneg	40	1.0.20.3	search with cache (only 1: apply Z.lt_succ_r; only 1: symmetry; only 1: simpl; only 1: now destruct n).	0.546419858932	670
Coq.ZArith.Znat.id	40	1.0.0.3.18	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.5783059597	983
Coq.ZArith.Znat.inj	40	0.22.18	search with cache (only 1: revert m; only 1: inversion 1; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	6.00272512436	8554
Coq.ZArith.Znat.inj_iff	40	0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now f_equal).	0.0244479179382	5
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	3.1.18.2.10	search with cache (only 1: unfold Z.le, Z.ge; only 1: revert m; only 1: intros q; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	24.5478138924	16832
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_ge	40	1.5.7.13.19	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: intro p; only 1: easy).	38.1612608433	35088
Coq.ZArith.Znat.inj_gt	40
Coq.ZArith.Znat.inj_abs_nat	40
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub_max	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred_max	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.id	40	4.1.0.0.0.1.0.8.1.0.0.3	search with cache (only 1: unfold Z.le, Z.max; only 1: intuition; only 1: destruct n; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct p).	11.6302089691	12366
Coq.ZArith.Znat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0833580493927	3
Coq.ZArith.Znat.inj_iff	40	1.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0247211456299	6
Coq.ZArith.Znat.inj_0	40	7	search with cache (only 1: now subst).	0.00749588012695	8
Coq.ZArith.Znat.inj_pos	40	5	search with cache (only 1: now destruct n).	0.0772519111633	52
Coq.ZArith.Znat.inj_neg	40	3	search with cache (only 1: split).	0.00710892677307	4
Coq.ZArith.Znat.inj_add	40
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40
Coq.ZArith.Znat.inj_lt	40
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00891304016113	1
Coq.ZArith.Znat.abs_nat_nonneg	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.014545917511	2
Coq.ZArith.Znat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	9.36834192276	6653
Coq.ZArith.Znat.id	40	3.5.0.3.16	search with cache (only 1: symmetry; only 1: induction n; only 1: reflexivity; only 1: symmetry; only 1: apply SuccNat2Pos.id_succ).	1.45377087593	1129
Coq.ZArith.Znat.inj_0	40	0.5	search with cache (only 1: Nat.bitwise; only 1: trivial).	0.0173728466034	7
Coq.ZArith.Znat.inj_pos	40	0	search with cache (only 1: trivial).	0.00587177276611	1
Coq.ZArith.Znat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00518202781677	1
Coq.ZArith.Znat.inj_succ	40
Coq.ZArith.Znat.inj_add	40	1.1.2.0.0.0.2.4.1.0.0.12	search with cache (only 1: induction n in m |- *; only 1: intros; only 1: now Z.nzsimpl; only 1: intros Hn Hm; only 1: destruct m as [| m| m]; only 1: simpl; only 1: trivial; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: apply Pos2Nat.inj_add; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct 1).	17.9895811081	12737
Coq.ZArith.Znat.inj_mul	40
Coq.ZArith.Znat.inj_sub	40
Coq.ZArith.Znat.inj_pred	40
Coq.ZArith.Znat.inj_compare	40
Coq.ZArith.Znat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.019504070282	3
Coq.ZArith.Znat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0185601711273	3
Coq.ZArith.Znat.inj_min	40
Coq.ZArith.Znat.inj_max	40
Coq.ZArith.Znat.inj_succ_abs	40
Coq.ZArith.Znat.inj_add_abs	40
Coq.ZArith.Znat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0239129066467	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.0.0.1.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: trivial; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	11.858577013	4001
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.0.1.0.0.0.0.0.0.0.0.1.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: now destruct Hx).	4.85417914391	2391
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0227429866791	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	24.5525279045	8745
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	1.1.1.0.4	search with cache (only 1: intros X Y A Hdec H x y; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	2.53252291679	342
Coq.ZArith.Zcompare.Zle_compare	40	6.0.0.1.0.8.13	search with cache (only 1: intro n; only 1: intro RS'; only 1: case Z.compare_spec; only 1: intuition; only 1: intros LT EQ; only 1: trivial; only 1: Z.order).	6.76003599167	7148
Coq.ZArith.Zcompare.Zlt_compare	40	13.6.3	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: trivial).	3.88169503212	3482
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0777499675751	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0749220848083	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0.3.11.15.12.2	search with cache (only 1: symmetry; only 1: Z.bitwise; only 1: destruct a; only 1: trivial; only 1: trivial; only 1: trivial).	13.6980469227	13847
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0340929031372	3
Coq.ZArith.Zquot.Zquot_0_l	40	4	search with cache (only 1: now destruct a).	0.0771610736847	19
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.4.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	3.76042819023	107
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.065975189209	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0946619510651	12
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.177562952042	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0622239112854	6
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	0.2	search with cache (only 1: fix odd_spec 1; only 1: assumption).	0.146015882492	37
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.1.11.4	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: generalize (Zrem_lt_neg a b); only 1: lia).	2.3044719696	1555
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	22.1	search with cache (only 1: intros; only 1: firstorder  discriminate).	0.677103042603	1382
Coq.ZArith.Zdigits.two_compl_value	40	1.9	search with cache (only 1: intros m H; only 1: exact 0%Z).	0.130919933319	118
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	8.0	search with cache (only 1: intros n m; only 1: trivial).	0.0196688175201	10
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	1.1	search with cache (only 1: simpl; only 1: repeat split).	0.0170741081238	4
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1.1.1	search with cache (only 1: unfold Bcons; only 1: intros; only 1: trivial).	0.0215210914612	6
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40	0.2.0.17	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: now destruct p; only 1: auto).	1.44144105911	1315
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1	search with cache (only 1: intros; only 1: auto).	0.0160479545593	3
Coq.ZArith.Zdigits.Zeven_bit_value	40	5.0.1.47	search with cache (only 1: intros Hx; only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, negb_true_iff; only 1: now destruct Z.odd).	23.187114954	23545
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.3.0.0.0.0.1.0.0.1.0.1.0	search with cache (only 1: destruct z; only 1: now try Z.order'; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: intros H; only 1: trivial).	24.2490448952	9979
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.eq_dec	40	0.0.3.0.0.0.3.0.0.0.2.0.3	search with cache (only 1: case_eq (PeanoNat.Nat.compare x y); only 1: intros H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec; only 1: intros H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec; only 1: intros H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	8.74708294868	5214
Coq.ZArith.BinInt.pos_sub_spec	40
Coq.ZArith.BinInt.pos_sub_discr	40
Coq.ZArith.BinInt.pos_sub_diag	40	0.0.1.1.0.1.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: trivial).	0.292914152145	226
Coq.ZArith.BinInt.pos_sub_lt	40
Coq.ZArith.BinInt.pos_sub_gt	40
Coq.ZArith.BinInt.pos_sub_opp	40
Coq.ZArith.BinInt.add_0_r	40	3	search with cache (only 1: now destruct n).	0.0104730129242	4
Coq.ZArith.BinInt.mul_0_r	40	0	search with cache (only 1: now destruct n).	0.00788307189941	1
Coq.ZArith.BinInt.mul_1_l	40	1.10	search with cache (only 1: simpl; only 1: now destruct n).	0.0884540081024	47
Coq.ZArith.BinInt.add_comm	40
Coq.ZArith.BinInt.opp_add_distr	40
Coq.ZArith.BinInt.opp_inj	40
Coq.ZArith.BinInt.pos_sub_add	40
Coq.ZArith.BinInt.add_assoc_pos	40	2.1.0.37.55	search with cache (only 1: exfalso; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	14.2968871593	14807
Coq.ZArith.BinInt.add_assoc	40
Coq.ZArith.BinInt.add_opp_diag_r	40	0.0.0.0.0.1.19	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	2.64392900467	2415
Coq.ZArith.BinInt.mul_opp_r	40
Coq.ZArith.BinInt.mul_add_distr_pos	40
Coq.ZArith.BinInt.mul_add_distr_r	40
Coq.ZArith.BinInt.one_succ	40	1	search with cache (only 1: reflexivity).	0.00942802429199	2
Coq.ZArith.BinInt.two_succ	40	0.7	search with cache (only 1: simpl; only 1: trivial).	0.0115129947662	9
Coq.ZArith.BinInt.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0080451965332	1
Coq.ZArith.BinInt.add_succ_l	40
Coq.ZArith.BinInt.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.0107431411743	2
Coq.ZArith.BinInt.opp_succ	40
Coq.ZArith.BinInt.succ_pred	40
Coq.ZArith.BinInt.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0127639770508	2
Coq.ZArith.BinInt.sub_0_r	40	2	search with cache (only 1: now destruct n).	0.00910902023315	3
Coq.ZArith.BinInt.sub_succ_r	40
Coq.ZArith.BinInt.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00910902023315	1
Coq.ZArith.BinInt.mul_succ_l	40
Coq.ZArith.BinInt.eqb_eq	40
Coq.ZArith.BinInt.ltb_lt	40
Coq.ZArith.BinInt.leb_le	40
Coq.ZArith.BinInt.compare_eq_iff	40
Coq.ZArith.BinInt.compare_sub	40
Coq.ZArith.BinInt.compare_antisym	40
Coq.ZArith.BinInt.compare_lt_iff	40	0.1.5	search with cache (only 1: split; only 1: trivial; only 1: trivial).	0.456903934479	110
Coq.ZArith.BinInt.compare_le_iff	40	1.3.0	search with cache (only 1: revert m; only 1: intro m; only 1: reflexivity).	0.111742973328	56
Coq.ZArith.BinInt.lt_succ_r	40
Coq.ZArith.BinInt.max_l	40
Coq.ZArith.BinInt.max_r	40
Coq.ZArith.BinInt.min_l	40
Coq.ZArith.BinInt.min_r	40	0.1.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case N.compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.543436050415	98
Coq.ZArith.BinInt.peano_ind	40
Coq.ZArith.BinInt.bi_induction	40
Coq.ZArith.BinInt.abs_eq	40	7	search with cache (only 1: now destruct n).	0.251330137253	136
Coq.ZArith.BinInt.abs_neq	40	0.14.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	1.71124315262	1134
Coq.ZArith.BinInt.sgn_null	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: now try PeanoNat.Nat.order'; only 1: intros H; only 1: destr_eq H; only 1: simpl; only 1: intros H; only 1: destr_eq H).	0.0334889888763	7
Coq.ZArith.BinInt.sgn_pos	40	0.1.0.4.0.1	search with cache (only 1: destruct n; only 1: intros; only 1: now nzsimpl; only 1: trivial; only 1: intros; only 1: destr_eq H).	0.311933994293	138
Coq.ZArith.BinInt.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0125551223755	1
Coq.ZArith.BinInt.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.00874781608582	1
Coq.ZArith.BinInt.pow_succ_r	40
Coq.ZArith.BinInt.pow_neg_r	40
Coq.ZArith.BinInt.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.00870490074158	1
Coq.ZArith.BinInt.square_spec	40	0.0.1.0.0.0.0.2	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	0.174557924271	63
Coq.ZArith.BinInt.sqrtrem_spec	40
Coq.ZArith.BinInt.sqrt_spec	40
Coq.ZArith.BinInt.sqrt_neg	40	1.0.6.0.1	search with cache (only 1: destruct n; only 1: trivial; only 1: now nzsimpl; only 1: intros Hn; only 1: now split).	0.609102964401	292
Coq.ZArith.BinInt.sqrtrem_sqrt	40
Coq.ZArith.BinInt.log2_spec	40
Coq.ZArith.BinInt.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.00993609428406	1
Coq.ZArith.BinInt.even_spec	40
Coq.ZArith.BinInt.odd_spec	40
Coq.ZArith.BinInt.double_spec	40	2.1	search with cache (only 1: simpl; only 1: reflexivity).	0.0124750137329	5
Coq.ZArith.BinInt.succ_double_spec	40	4.0	search with cache (only 1: simpl; only 1: now destruct n).	0.0532360076904	6
Coq.ZArith.BinInt.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0099618434906	1
Coq.ZArith.BinInt.pos_div_eucl_eq	40
Coq.ZArith.BinInt.div_eucl_eq	40
Coq.ZArith.BinInt.div_mod	40
Coq.ZArith.BinInt.pos_div_eucl_bound	40
Coq.ZArith.BinInt.mod_pos_bound	40
Coq.ZArith.BinInt.mod_neg_bound	40
Coq.ZArith.BinInt.quotrem_eq	40
Coq.ZArith.BinInt.quot_rem'	40
Coq.ZArith.BinInt.quot_rem	40	0.0.0.0.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.029541015625	5
Coq.ZArith.BinInt.rem_bound_pos	40
Coq.ZArith.BinInt.rem_opp_l'	40
Coq.ZArith.BinInt.rem_opp_r'	40
Coq.ZArith.BinInt.rem_opp_l	40
Coq.ZArith.BinInt.rem_opp_r	40
Coq.ZArith.BinInt.divide_Zpos	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.ggcd_gcd	40
Coq.ZArith.BinInt.ggcd_correct_divisors	40
Coq.ZArith.BinInt.gcd_divide_l	40
Coq.ZArith.BinInt.gcd_divide_r	40	0.1.2.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.0609140396118	21
Coq.ZArith.BinInt.gcd_greatest	40
Coq.ZArith.BinInt.gcd_nonneg	40
Coq.ZArith.BinInt.ggcd_opp	40
Coq.ZArith.BinInt.testbit_of_N	40
Coq.ZArith.BinInt.testbit_of_N'	40	0.0.0.2.1.2.1.2.0.0.0.2.0.3	search with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: symmetry; only 1: trivial; only 1: simpl; only 1: split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy).	20.8778409958	16653
Coq.ZArith.BinInt.testbit_Zpos	40	1.0.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0420579910278	9
Coq.ZArith.BinInt.testbit_Zneg	40
Coq.ZArith.BinInt.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0086989402771	1
Coq.ZArith.BinInt.testbit_0_l	40	89	search with cache (only 1: now destruct n).	2.15861415863	5181
Coq.ZArith.BinInt.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0140659809113	1
Coq.ZArith.BinInt.testbit_odd_0	40
Coq.ZArith.BinInt.testbit_even_0	40	1	search with cache (only 1: now destruct a).	0.00945210456848	2
Coq.ZArith.BinInt.testbit_odd_succ	40
Coq.ZArith.BinInt.testbit_even_succ	40
Coq.ZArith.BinInt.shiftr_spec_aux	40
Coq.ZArith.BinInt.shiftl_spec_low	40
Coq.ZArith.BinInt.shiftl_spec_high	40
Coq.ZArith.BinInt.shiftr_spec	40
Coq.ZArith.BinInt.lor_spec	40
Coq.ZArith.BinInt.land_spec	40
Coq.ZArith.BinInt.ldiff_spec	40
Coq.ZArith.BinInt.lxor_spec	40
Coq.ZArith.BinInt.gt_lt_iff	40	13.1	search with cache (only 1: unfold ltb, lt; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	1.39345192909	717
Coq.ZArith.BinInt.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0146911144257	2
Coq.ZArith.BinInt.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00803089141846	1
Coq.ZArith.BinInt.ge_le_iff	40
Coq.ZArith.BinInt.ge_le	40	2	search with cache (only 1: apply N.ge_le_iff).	0.0701878070831	21
Coq.ZArith.BinInt.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00822615623474	1
Coq.ZArith.BinInt.gtb_ltb	40
Coq.ZArith.BinInt.geb_leb	40
Coq.ZArith.BinInt.gtb_lt	40	7.2.2.3	search with cache (only 1: revert m; only 1: unfold gtb, ltb; only 1: fix odd_spec 1; only 1: trivial).	12.1929519176	5196
Coq.ZArith.BinInt.geb_le	40	9.2.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	11.8200259209	4057
Coq.ZArith.BinInt.gtb_spec	40
Coq.ZArith.BinInt.geb_spec	40
Coq.ZArith.BinInt.add_reg_l	40
Coq.ZArith.BinInt.mul_reg_l	40	1	search with cache (only 1: apply mul_cancel_l).	0.0103499889374	2
Coq.ZArith.BinInt.mul_reg_r	40	0.1	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0148739814758	3
Coq.ZArith.BinInt.opp_eq_mul_m1	40	1.24	search with cache (only 1: rewrite mul_comm; only 1: split).	8.75471282005	3958
Coq.ZArith.BinInt.add_diag	40	17	search with cache (only 1: now nzsimpl').	0.312171936035	126
Coq.ZArith.BinInt.compare_opp	40
Coq.ZArith.BinInt.add_compare_mono_l	40
Coq.ZArith.BinInt.testbit_mod_pow2	40
Coq.ZArith.BinInt.testbit_ones	40
Coq.ZArith.BinInt.testbit_ones_nonneg	40	0.0.5.0.0.0.0.0.1	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order'; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	2.86790895462	1091
Coq.ZArith.BinInt.id	40	2.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: trivial).	0.0245850086212	8
Coq.ZArith.BinInt.inj	40	0	search with cache (only 1: congruence).	0.00728988647461	1
Coq.ZArith.BinInt.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0184850692749	3
Coq.ZArith.BinInt.is_pos	40	7	search with cache (only 1: split).	0.0141968727112	8
Coq.ZArith.BinInt.is_nonneg	40	17	search with cache (only 1: now Z.nzsimpl').	0.218602895737	126
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: easy).	0.00927591323853	1
Coq.ZArith.BinInt.inj_xO	40	1	search with cache (only 1: trivial).	0.0607981681824	2
Coq.ZArith.BinInt.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0134189128876	2
Coq.ZArith.BinInt.inj_succ	40	6	search with cache (only 1: now destruct p).	0.00867605209351	7
Coq.ZArith.BinInt.inj_add	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0129301548004	2
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_sub_max	40
Coq.ZArith.BinInt.inj_pred	40	2.0.0.0.0	search with cache (only 1: destruct p; only 1: trivial; only 1: intros H; only 1: trivial; only 1: now destruct 1).	0.0249679088593	7
Coq.ZArith.BinInt.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00952506065369	1
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0111708641052	1
Coq.ZArith.BinInt.inj_square	40	0	search with cache (only 1: trivial).	0.00760221481323	1
Coq.ZArith.BinInt.inj_compare	40	0.4.0	search with cache (only 1: revert q; only 1: intros m; only 1: trivial).	1.02118110657	291
Coq.ZArith.BinInt.inj_leb	40	6	search with cache (only 1: auto).	0.0267889499664	15
Coq.ZArith.BinInt.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00774312019348	1
Coq.ZArith.BinInt.inj_eqb	40	2.1.1.0	search with cache (only 1: simpl; only 1: revert q; only 1: intros q; only 1: reflexivity).	0.287173032761	64
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0104081630707	2
Coq.ZArith.BinInt.inj_gcd	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0124289989471	2
Coq.ZArith.BinInt.inj_divide	40
Coq.ZArith.BinInt.inj_testbit	40	0.1.1.3.2.2	search with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: easy).	0.507291078568	391
Coq.ZArith.BinInt.inj_neg	40	0	search with cache (only 1: congruence).	0.00853705406189	1
Coq.ZArith.BinInt.inj_neg_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0190179347992	3
Coq.ZArith.BinInt.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00824689865112	1
Coq.ZArith.BinInt.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0211629867554	4
Coq.ZArith.BinInt.neg_is_neg	40	1	search with cache (only 1: now f_equal).	0.00913190841675	2
Coq.ZArith.BinInt.neg_is_nonpos	40	7	search with cache (only 1: now f_equal).	0.0123329162598	8
Coq.ZArith.BinInt.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0090057849884	1
Coq.ZArith.BinInt.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0107989311218	1
Coq.ZArith.BinInt.neg_le_pos	40	55	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.602541923523	1552
Coq.ZArith.BinInt.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0100090503693	1
Coq.ZArith.BinInt.neg_le_neg	40
Coq.ZArith.BinInt.neg_lt_neg	40	0.0.9.0	search with cache (only 1: intros; only 1: symmetry; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	0.47854590416	204
Coq.ZArith.BinInt.pos_le_pos	40	7.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: easy').	0.144501209259	17
Coq.ZArith.BinInt.pos_lt_pos	40	1.3.0.1	search with cache (only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: revert q; only 1: intros a b; only 1: auto).	0.122828960419	37
Coq.ZArith.BinInt.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00963497161865	1
Coq.ZArith.BinInt.neg_xI	40	3	search with cache (only 1: easy).	0.00871801376343	4
Coq.ZArith.BinInt.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00779008865356	1
Coq.ZArith.BinInt.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00786995887756	1
Coq.ZArith.BinInt.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0114078521729	2
Coq.ZArith.BinInt.opp_pos	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.0110719203949	3
Coq.ZArith.BinInt.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.00936794281006	1
Coq.ZArith.BinInt.add_pos_neg	40	2	search with cache (only 1: trivial).	0.00994086265564	3
Coq.ZArith.BinInt.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0076630115509	1
Coq.ZArith.BinInt.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00875878334045	1
Coq.ZArith.BinInt.divide_pos_neg_r	40
Coq.ZArith.BinInt.divide_pos_neg_l	40
Coq.ZArith.BinInt.testbit_neg	40	0.5.0.3.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.576149940491	387
Coq.ZArith.BinInt.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.008868932724	1
Coq.ZArith.BinInt.id	40
Coq.ZArith.BinInt.inj	40
Coq.ZArith.BinInt.inj_iff	40
Coq.ZArith.BinInt.to_pos_nonpos	40	0.1.0.1.1	search with cache (only 1: destruct x; only 1: intros H; only 1: reflexivity; only 1: easy; only 1: trivial).	0.0435180664062	15
Coq.ZArith.BinInt.inj_1	40	0	search with cache (only 1: reflexivity).	0.00816583633423	1
Coq.ZArith.BinInt.inj_double	40
Coq.ZArith.BinInt.inj_succ_double	40
Coq.ZArith.BinInt.inj_succ	40	0.2.0.0.0.2.1.2.1.3.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros H; only 1: destr_eq H; only 1: destruct p; only 1: now f_equal; only 1: trivial; only 1: intros Hb; only 1: split; only 1: intro H; only 1: easy).	3.82439303398	2161
Coq.ZArith.BinInt.inj_add	40
Coq.ZArith.BinInt.inj_sub	40
Coq.ZArith.BinInt.inj_pred	40	0.5.0.1.2	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: easy).	0.492612123489	225
Coq.ZArith.BinInt.inj_mul	40	0.0.1.1.5.0	search with cache (only 1: destruct x; only 1: intro H; only 1: intros; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.307847976685	113
Coq.ZArith.BinInt.inj_pow	40
Coq.ZArith.BinInt.inj_pow_pos	40
Coq.ZArith.BinInt.inj_compare	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.051167011261	14
Coq.ZArith.BinInt.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0898830890656	4
Coq.ZArith.BinInt.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0440919399261	4
Coq.ZArith.BinInt.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0379660129547	4
Coq.ZArith.BinInt.inj_max	40
Coq.ZArith.BinInt.inj_min	40
Coq.ZArith.BinInt.inj_sqrt	40	2.0.0.0.0.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: now rewrite ?Pos.min_1_r, <- ?Pos2Z.inj_min).	0.03107213974	10
Coq.ZArith.BinInt.inj_gcd	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0828578472137	4
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0	search with cache (only 1: congruence).	0.0094268321991	1
Coq.ZArith.BinInt.ZL0	40	0.5	search with cache (only 1: symmetry; only 1: now PeanoNat.Nat.nzsimpl).	0.049134016037	13
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	4	search with cache (only 1: now Z.nzsimpl').	0.135529994965	18
Coq.ZArith.BinInt.Z_eq_mult	40	1	search with cache (only 1: now destruct m).	0.0230219364166	13
Coq.ZArith.Zcomplements.floor_gt0	40	8.0	search with cache (only 1: intros a; only 1: easy).	0.0684299468994	18
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	0	search with cache (only 1: now destruct n).	0.018217086792	1
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	4	search with cache (only 1: auto).	0.0122761726379	5
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	70	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	9.88604807854	18757
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40	0.0.0.0.0.1.4.0.0.0.8.0.0.6.35	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: tauto; only 1: tauto; only 1: auto; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	23.1655888557	17645
Coq.ZArith.Zeven.Zeven_dec	40	2.0.0.0.3.2.0.0.0.3.0.0.31	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: auto; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition BinNat.N.order; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition BinNat.N.order).	5.27042293549	4041
Coq.ZArith.Zeven.Zodd_dec	40
Coq.ZArith.Zeven.Zeven_not_Zodd	40	6.17.1.1.16.0.0	search with cache (only 1: intros; only 1: destruct n as [| p| p]; only 1: intro EQ; only 1: tauto; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	12.6084549427	19865
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0564110279083	5
Coq.ZArith.Zeven.Zeven_Sn	40	7.6.0	search with cache (only 1: boolify_even_odd; only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	2.24768900871	1140
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	8.11.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	2.59871792793	1636
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0264060497284	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: intros Hb'; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	32.1432871819	7496
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	5.7	search with cache (only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	3.08244299889	472
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.201333045959	23
Coq.ZArith.Zeven.Zodd_quot2	40	1.3.0.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.211079120636	28
Coq.ZArith.Zeven.Zodd_quot2_neg	40	2.4.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	2.14577817917	227
Coq.ZArith.Zeven.Zquot2_opp	40	23.13	search with cache (only 1: symmetry; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	35.0440988541	28675
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0322530269623	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.5	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zodd_div2 n Hn)).	0.27721118927	75
Coq.ZArith.Zeven.Zeven_2p	40	2.0.2.0.1.9.14	search with cache (only 1: Z.nzsimpl'; only 1: destruct p; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	3.83127713203	1180
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0670537948608	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0664649009705	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0175588130951	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	1	search with cache (only 1: apply Z.divide_opp_l).	0.0203039646149	2
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	1	search with cache (only 1: apply Z.divide_abs_l).	0.0190708637238	2
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.2.2.0.12.13	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: trivial).	36.184374094	23886
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	1.0	search with cache (only 1: intro; only 1: Z.order).	0.0259480476379	3
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	6.5.0.0.5.0.3	search with cache (only 1: intros x y z; only 1: destruct 1; only 1: constructor; only 1: trivial; only 1: assumption; only 1: intro; only 1: auto).	7.24771094322	3057
Coq.ZArith.Znumtheory.Zis_gcd_0	40	3.1.14	search with cache (only 1: fix le_div2 1; only 1: intros; only 1: trivial).	1.27570390701	884
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.1.0.0.33.4	search with cache (only 1: intros n; only 1: split; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith; only 1: intros; only 1: trivial).	12.8658409119	9638
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	13.0	search with cache (only 1: intros; only 1: now subst).	0.725500822067	279
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.7.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: Z.pos_or_neg b; only 1: intuition; only 1: intuition).	0.544258117676	406
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.10468506813	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0514118671417	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	20.4.7	search with cache (only 1: intros x y; only 1: CRelationClasses.simpl_crelation; only 1: auto with zarith).	4.26376700401	3312
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	2.0.0.0.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.0929927825928	17
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	9.2	search with cache (only 1: intros n m (Hm, H); only 1: auto).	0.906214952469	291
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	25	search with cache (only 1: easy').	3.84941411018	543
Coq.ZArith.Znumtheory.not_prime_1	40	59	search with cache (only 1: now destruct 1 || intros _).	2.76898407936	5734
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	13.4.0	search with cache (only 1: simple induction 1; only 1: intros m Hm; only 1: now apply (Zlt_le_succ 1)).	1.51575708389	907
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	1.8.18	search with cache (only 1: intro; only 1: intros a b; only 1: apply Z.gcd_greatest).	7.96285700798	8435
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	1.2.1.1.2.1.3.13	search with cache (only 1: destruct b as [| b| b]; only 1: now Z.nzsimpl; only 1: intros _; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq; only 1: intros _; only 1: rewrite Z.mul_comm; only 1: now apply Z.mod_eq).	21.7866210938	13928
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	7.0	search with cache (only 1: intros; only 1: trivial).	0.0609488487244	12
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0179078578949	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	2.0	search with cache (only 1: intros; only 1: auto).	0.0447719097137	22
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0197069644928	4
Coq.ZArith.Zdiv.Zmod_1_r	40	6.0	search with cache (only 1: intros; only 1: now Z.nzsimpl').	0.0649859905243	32
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order).	0.088495016098	17
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.0.2.0.3	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros Hb; only 1: intros Hab; only 1: apply Z.div_pos; only 1: Z.order; only 1: trivial).	0.595471143723	282
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0196940898895	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.2.2.3.0.0.2.2.20.2	search with cache (only 1: intros a b Hb; only 1: Z.pos_or_neg a; only 1: unfold Z.div, Z.modulo; only 1: rewrite Z.div_exact; only 1: easy; only 1: easy; only 1: unfold Z.div, Z.modulo; only 1: rewrite Z.div_exact; only 1: intuition; only 1: easy).	39.3945860863	27868
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	1.1.0.0.2.0.2.1.2.9.7.0.1	search with cache (only 1: intros; only 1: symmetry; only 1: zero_or_not n; only 1: zero_or_not n; only 1: symmetry; only 1: rewrite Zplus_mod; only 1: symmetry; only 1: zero_or_not n; only 1: zero_or_not n; only 1: rewrite Zplus_mod; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: auto with zarith).	39.5388140678	40100
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	0.0482339859009	13
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0157430171967	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: trivial).	0.0197939872742	3
Coq.ZArith.Zdiv.eqm_refl	40	4	search with cache (only 1: solve_proper).	0.012393951416	11
Coq.ZArith.Zdiv.eqm_sym	40	1.1	search with cache (only 1: intros n m LE; only 1: now rewrite <- ?Z.add_le_mono_r).	0.0163369178772	13
Coq.ZArith.Zdiv.eqm_trans	40	1.0.11.16	search with cache (only 1: intros x y H; only 1: generalize x, y; only 1: unfold eqm; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym).	11.4194099903	8409
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.0.12.0	search with cache (only 1: intros a; only 1: symmetry; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.485461950302	338
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	3.2.0	search with cache (only 1: intros; only 1: apply Z.mod_same; only 1: now intros ->).	0.204201936722	40
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	3.1.0	search with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.195560932159	36
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.2.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.158438920975	15
Coq.ZArith.Zdiv.Z_div_exact_2	40	5.0.2.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now destruct b).	0.528039932251	121
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros a b Hb H; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: Z.order; only 1: auto).	0.0358421802521	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.mod_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0797820091248	3
Coq.ZArith.Zeuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00704193115234	1
Coq.ZArith.Zeuclid.div_mod	40
Coq.ZArith.Zeuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	1.0.2.5.0.0	search with cache (only 1: intros a n Hn; only 1: intros EQ; only 1: induction n; only 1: tauto; only 1: easy; only 1: auto).	0.427757024765	370
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	2.6.2.0.0.2.8.1.2.26	search with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: left; only 1: split; only 1: easy; only 1: trivial; only 1: simpl; only 1: compute; only 1: auto with arith).	39.318021059	44370
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.eqb_eq	40
Coq.ZArith.Int.eqb_neq	40
Coq.ZArith.Int.ltb_lt	40
Coq.ZArith.Int.ltb_nlt	40
Coq.ZArith.Int.leb_le	40
Coq.ZArith.Int.leb_nle	40
Coq.ZArith.Int.norm_ei_correct	40
Coq.ZArith.Int.norm_ez_correct	40
Coq.ZArith.Int.norm_ep_correct	40
Coq.ZArith.Int.norm_ep_correct2	40
Coq.ZArith.Int.gt_le_dec	40
Coq.ZArith.Int.ge_lt_dec	40
Coq.ZArith.Int.i2z_eq	40	0	search with cache (only 1: auto).	0.0161039829254	1
Coq.ZArith.Int.i2z_0	40	1	search with cache (only 1: auto with relations).	0.0173790454865	2
Coq.ZArith.Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0168600082397	1
Coq.ZArith.Int.i2z_2	40	6	search with cache (only 1: now Morphisms.f_equiv).	0.0287230014801	7
Coq.ZArith.Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0193448066711	1
Coq.ZArith.Int.i2z_add	40	15	search with cache (only 1: now Z.nzsimpl).	0.157590866089	91
Coq.ZArith.Int.i2z_opp	40	1	search with cache (only 1: reflexivity).	0.0216298103333	2
Coq.ZArith.Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.018453836441	1
Coq.ZArith.Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0198850631714	1
Coq.ZArith.Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0197269916534	1
Coq.ZArith.Int.i2z_eqb	40	1	search with cache (only 1: trivial).	0.0208749771118	2
Coq.ZArith.Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0158340930939	1
Coq.ZArith.Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0196931362152	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: reflexivity).	0.00690603256226	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1	search with cache (only 1: trivial).	0.00770497322083	2
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.0.8.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: intros H; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	0.746157884598	539
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	2	search with cache (only 1: trivial).	0.00900197029114	3
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: trivial).	0.00730800628662	1
Coq.ZArith.Zpower.shift_equiv	40	1.0.4.0.9.4.1.0.2	search with cache (only 1: destruct n; only 1: intros; only 1: reflexivity; only 1: intros H; only 1: symmetry; only 1: simpl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: f_equal; only 1: now destruct 1).	23.3319480419	20037
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	2.18	search with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	15.0776438713	6726
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0.1.0	search with cache (only 1: induction n; only 1: now Morphisms.f_equiv; only 1: now Morphisms.f_equiv).	0.0260119438171	4
Coq.ZArith.Zpower.shift_nat_plus	40	0.0.2.1.16.1.18	search with cache (only 1: destruct n as [| n]; only 1: now Nat.nzsimpl; only 1: induction n; only 1: now Nat.nzsimpl'; only 1: simpl; only 1: f_equal; only 1: trivial).	28.6007819176	17015
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.0.2.4.1.0.3.0	search with cache (only 1: destruct x; only 1: Z.swap_greater; only 1: intros Hx; only 1: easy; only 1: now destruct 1 || intros _; only 1: symmetry; only 1: trivial; only 1: now destruct 1).	2.75997304916	2106
Coq.ZArith.Zpower.two_p_S	40	0.0.4.6.1.3.3	search with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: unfold Z.succ; only 1: intros; only 1: symmetry; only 1: rewrite !two_p_equiv; only 1: now Z.nzsimpl).	27.4490180016	11022
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0121469497681	1
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0115900039673	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.00880098342896	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.22	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.786300897598	716
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.0366599559784	5
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0225110054016	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.5	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0248560905457	7
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	1.5.0.0.2.4.5	search with cache (only 1: symmetry; only 1: unfold Z.le, Z.max; only 1: case Z.compare_spec; only 1: symmetry; only 1: trivial; only 1: now destruct m; only 1: auto).	24.3088610172	14239
Coq.ZArith.Zmax.Zpos_max_1	40	1.0.3.0.1.0.1.43.0	search with cache (only 1: unfold Z.max, Pos.max; only 1: Z.bitwise; only 1: unfold Z.testbit; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	5.88523507118	6972
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	51.0	search with cache (only 1: unfold Z.min, Pos.min; only 1: now destruct p).	4.43955278397	3710
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	7.27.15	search with cache (only 1: symmetry; only 1: Nat.bitwise; only 1: now destruct a).	1.5876750946	2133
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.3	search with cache (only 1: intros H; only 1: Z.order).	0.0224261283875	12
Coq.ZArith.Zorder.Zlt_not_le	40	0.2	search with cache (only 1: intro H; only 1: Z.order).	0.0215668678284	12
Coq.ZArith.Zorder.Zle_not_gt	40	5.0	search with cache (only 1: unfold Z.le, Z.min; only 1: easy').	0.116175889969	17
Coq.ZArith.Zorder.Zgt_not_le	40	1.4	search with cache (only 1: intro H; only 1: auto).	0.121305942535	17
Coq.ZArith.Zorder.Znot_ge_lt	40	12.2.9.5	search with cache (only 1: unfold Z.lt, Z.gt; only 1: intros LE; only 1: Z.swap_greater; only 1: Z.order).	20.4822750092	15232
Coq.ZArith.Zorder.Znot_lt_ge	40	3	search with cache (only 1: trivial).	0.112470149994	16
Coq.ZArith.Zorder.Znot_gt_le	40	0.12	search with cache (only 1: intros; only 1: auto).	0.530370950699	146
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0169830322266	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	1.1.0	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.165875911713	20
Coq.ZArith.Zorder.Zgt_irrefl	40	26	search with cache (only 1: now Z.nzsimpl').	0.803818941116	973
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.21594619751	38
Coq.ZArith.Zorder.Zle_gt_trans	40	3.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.106981992722	31
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0214579105377	2
Coq.ZArith.Zorder.Zge_trans	40
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0204930305481	3
Coq.ZArith.Zorder.Zsucc_gt_reg	40
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00927686691284	1
Coq.ZArith.Zorder.Zgt_succ	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0129029750824	4
Coq.ZArith.Zorder.Znot_le_succ	40	4.3.1.0.7.5	search with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: Z.le_elim H; only 1: apply Z.lt_succ_diag_r; only 1: apply Z.lt_succ_diag_r).	3.6447827816	1592
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00928282737732	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.00732612609863	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0149397850037	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00963497161865	1
Coq.ZArith.Zorder.Zle_succ_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0300500392914	15
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00844788551331	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0163979530334	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros n1 n2; only 1: easy).	0.0287530422211	13
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0.4	search with cache (only 1: intros a; only 1: Z.swap_greater; only 1: reflexivity).	0.0254940986633	16
Coq.ZArith.Zorder.Zle_0_pos	40	3	search with cache (only 1: easy).	0.0152959823608	4
Coq.ZArith.Zorder.Zlt_neg_0	40	3	search with cache (only 1: split).	0.00716209411621	4
Coq.ZArith.Zorder.Zle_0_nat	40	7.27.28	search with cache (only 1: destruct n; only 1: Morphisms.solve_proper; only 1: now Nat.nzsimpl).	12.5429730415	14505
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00921010971069	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0103099346161	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0100309848785	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	search with cache (only 1: apply Z.add_le_mono_r).	0.0101671218872	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40
Coq.ZArith.Zorder.Zplus_lt_reg_r	40
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.28	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	1.1101360321	1002
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0218019485474	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0305640697479	16
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0182230472565	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0104870796204	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00876688957214	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0255160331726	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	7.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0314428806305	10
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0320830345154	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	7.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.352077960968	17
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.5.4.0	search with cache (only 1: Z.swap_greater; only 1: intros H; only 1: apply Z.mul_lt_mono_pos_r; only 1: assumption).	0.646368026733	257
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00807595252991	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0185260772705	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00799894332886	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0246970653534	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0272200107574	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0165500640869	3
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40	0.6.2.4.1.5.8.2.0.18.0	search with cache (only 1: Z.swap_greater; only 1: unfold Z.ltb, Z.lt; only 1: rewrite Z.compare_sub; only 1: intros H; only 1: red; only 1: intros; only 1: simpl in *; only 1: destruct m; only 1: trivial; only 1: easy'; only 1: now destruct n).	38.2142839432	47150
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0167591571808	3
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.023285150528	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00796008110046	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40	1.0.0.4.8.4.3.18	search with cache (only 1: generalize (Z.compare_eq n m); only 1: unfold Z.le, Z.ge; only 1: unfold Z.ltb, Z.lt; only 1: intro; only 1: case Z.compare; only 1: discriminate; only 1: auto; only 1: discriminate).	18.9084730148	19606
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	6.3	search with cache (only 1: unfold Z.geb, Z.leb; only 1: apply Z.leb_le).	0.225904941559	71
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	3	search with cache (only 1: trivial).	0.0185739994049	4
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	3.5	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.339322090149	39
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.11	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	1.81128621101	847
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0382590293884	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	4.30.0	search with cache (only 1: unfold Zeq_bool; only 1: fix even_spec 1; only 1: easy).	4.58764696121	6341
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	13.0.1.33.37	search with cache (only 1: intro n; only 1: destruct n; only 1: auto; only 1: now intuition; only 1: auto).	22.2117488384	39727
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.9.0.0	search with cache (only 1: destruct (n ?= m)%positive; only 1: auto; only 1: revert m; only 1: intros; only 1: auto; only 1: now intuition).	2.38594412804	1308
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.105115890503	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40	0.0.0.0.27	search with cache (only 1: unfold Z.le, Z.ge; only 1: case Z.compare; only 1: now left || (right; tauto); only 1: now left || (right; tauto); only 1: now left || (right; tauto)).	2.58336186409	2055
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	1.0.2.0.0	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.152778863907	23
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	1.1.0.0.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0222640037537	8
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	0.0.1.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: right; only 1: auto).	5.21118998528	1796
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.1	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0258259773254	4
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.00897693634033	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	3.2.1.5.8.0.1	search with cache (only 1: intros H; only 1: destruct b as [| p| p]; only 1: Z.bitwise; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: destr_eq H; only 1: easy).	5.39573311806	3834
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.039167881012	13
Coq.Program.Wf.Fix_F_inv	40	0.6.6.2.5.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Wf.Fix_F_eq; only 1: rewrite <- Wf.Fix_F_eq; only 1: auto).	10.2562708855	6114
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0586359500885	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0204730033875	3
Coq.Program.Wf.Fix_F_sub_rect	40	0.7.8.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.927685976028	686
Coq.Program.Wf.eq_Fix_F_sub	40	1.7.3.2	search with cache (only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: apply Fix_F_inv; only 1: auto).	0.863362073898	371
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.0.0.1	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	0.0297849178314	6
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP).	0.00688505172729	2
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.140532016754	84
Coq.Program.Equality.inj_pairT2_refl	40	2	search with cache (only 1: apply UIP_refl).	0.00815510749817	3
Coq.Program.Equality.solution_left	40	2.2.8	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0590448379517	99
Coq.Program.Equality.solution_right	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0109851360321	4
Coq.Program.Equality.deletion	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.00793290138245	3
Coq.Program.Equality.simplification_heq	40	0.1.15.16	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: trivial).	0.45133805275	1242
Coq.Program.Equality.simplification_existT2	40	0.0.0.11.12	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.568235874176	1110
Coq.Program.Equality.simplification_existT1	40	0.16.6.4.6.40	search with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	10.3562209606	37509
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0148370265961	3
Coq.Program.Combinators.compose_id_left	40	0.3	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0156610012054	5
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0157840251923	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros A B C Hl Hr; only 1: reflexivity).	0.016636133194	2
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0517430305481	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0163481235504	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0.0	search with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0893859863281	6
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40	11.2.0.1.28	search with cache (only 1: intros l a; only 1: intros H; only 1: rewrite multiplicity_In; only 1: rewrite multiplicity_In; only 1: now intros ->).	13.295979023	13418
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sorted_merge	40
Coq.Sorting.Mergesort.Permuted_merge	40
Coq.Sorting.Mergesort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sorted_merge_stack	40	2.2.1.1.0.0.3.6.5	search with cache (only 1: intros; only 1: induction stack as [| [| ]]; only 1: constructor; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: auto).	1.85082888603	2431
Coq.Sorting.Mergesort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sorted_sort	40
Coq.Sorting.Mergesort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Permuted_sort	40
Coq.Sorting.Mergesort.StronglySorted_sort	40
Coq.Sorting.Mergesort.leb_total	40	10.9.4	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: easy).	12.0092129707	7416
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	10.0.1	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.181114912033	238
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	13.2.10	search with cache (only 1: intros l1 l2; only 1: intros H; only 1: eauto).	7.34736990929	7361
Coq.Sorting.Permutation.Permutation_cons	40	0.33.3	search with cache (only 1: intros a a' Ha b b' Hb; only 1: subst; only 1: auto).	7.05288100243	2130
Coq.Sorting.Permutation.Permutation_in	40	2.0.0.2.3.1.0.0	search with cache (only 1: intros l m a; only 1: induction 1; only 1: auto; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: tauto; only 1: auto).	15.1654748917	5721
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.1.0.1.0	search with cache (only 1: intros l l' tl Hperm; only 1: induction l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	0.0821409225464	29
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0	search with cache (only 1: auto).	0.012284040451	1
Coq.Sorting.Permutation.Permutation_rev	40	0.2.0.12.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: constructor; only 1: simpl; only 1: destruct l; only 1: auto; only 1: rewrite <- IHl; only 1: auto).	15.8485050201	6568
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0521850585938	10
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40	4.3.1.3.3	search with cache (only 1: intros H; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: constructor).	2.82880401611	1078
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.3.0.0.6	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: apply Add_app).	0.244772911072	122
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.13	search with cache (only 1: intros Ij; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	11.1423351765	322
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	0.9	search with cache (only 1: red; only 1: auto with datatypes).	0.202694892883	83
Coq.Sorting.PermutSetoid.permut_sym	40	0.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0275499820709	4
Coq.Sorting.PermutSetoid.permut_trans	40
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	1.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.037880897522	5
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	2.15879106522	436
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	2.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: symmetry; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: auto with arith).	13.1593630314	2759
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	5.0.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	0.0500528812408	10
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0829989910126	5
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	4.0.1	search with cache (only 1: inversion 1; only 1: subst; only 1: auto).	0.0406029224396	24
Coq.Sorting.Sorted.Sorted_inv	40	1.4.0	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto).	0.0226318836212	8
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.0.5	search with cache (only 1: intros a r; only 1: inversion_clear 1; only 1: eauto).	0.0506980419159	23
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0202820301056	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.2.0.0.1.21	search with cache (only 1: intros H; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	22.8574609756	15124
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	1.1	search with cache (only 1: simpl; only 1: auto with *).	0.0578598976135	13
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0345439910889	2
Coq.Sorting.Heap.invert_heap	40	7.6.4	search with cache (only 1: intros H a; only 1: inversion 1; only 1: auto with datatypes).	0.916079044342	704
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.3.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	2.81983304024	901
Coq.Sorting.Heap.low_trans	40	6.12.0.0.0.7.10	search with cache (only 1: intros l l1 l2; only 1: induction l as [| y l Hl]; only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: eauto with *).	10.9561982155	8581
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	0.2.1.16.8	search with cache (only 1: unfold permutation, meq; only 1: intros a a' Ha b b' Hb; only 1: intros; only 1: simpl; only 1: auto with datatypes).	1.31409811974	760
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40	2.0.0	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.0410509109497	5
Coq.Sorting.Heap.heap_to_list	40	3.7	search with cache (only 1: fix merge 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.353625059128	142
Coq.Sorting.Heap.treesort	40
Coq.Init.Wf.Acc_inv	40	6.9.6	search with cache (only 1: intro; only 1: destruct 1; only 1: trivial).	0.355825901031	960
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0139720439911	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.014368057251	4
Coq.Init.Wf.Fix_F_eq	40	1.49	search with cache (only 1: intros f [x]; only 1: auto).	0.705704927444	3100
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	12.5.4.17.3.4.4	search with cache (only 1: intro; only 1: intro p; only 1: intro H; only 1: destruct p; only 1: auto; only 1: apply False_rec; only 1: auto).	7.23063111305	33833
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0195169448853	6
Coq.Init.Peano.pred_Sn	40	0	search with cache (only 1: reflexivity).	0.00675201416016	1
Coq.Init.Peano.not_eq_S	40	14.7	search with cache (only 1: intros; only 1: auto).	0.643192052841	1155
Coq.Init.Peano.O_S	40	2	search with cache (only 1: discriminate).	0.00810503959656	3
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.3	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.072438955307	73
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0163128376007	5
Coq.Init.Peano.plus_n_Sm	40	0.0.1.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.018630027771	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.022922039032	6
Coq.Init.Peano.mult_n_O	40	0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.0140788555145	4
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.1	search with cache (only 1: induction n; only 1: left; only 1: auto).	0.0104269981384	4
Coq.Init.Peano.le_n_S	40	1.1.0.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0170638561249	7
Coq.Init.Peano.nat_case	40	1.0.0.1	search with cache (only 1: induction n; only 1: intros; only 1: assumption; only 1: trivial).	0.0159318447113	6
Coq.Init.Peano.nat_double_ind	40	1.0.8.1.9	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.464981079102	930
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.5.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	30.9842250347	17847
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.41693902016	4094
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.56887817383	3192
Coq.Init.Peano.nat_rect_succ_r	40	1.6.12.1.20	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl; only 1: destruct H; only 1: reflexivity).	2.92560887337	5897
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.3	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.454336166382	257
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.1.4.25.30	search with cache (only 1: intro H; only 1: intro; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	5.6726129055	37596
Coq.Init.Datatypes.eq_true_ind_r	40	0.4.34.30	search with cache (only 1: intro H; only 1: intro A; only 1: destruct 2; only 1: trivial).	0.931908845901	10291
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00976705551147	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00988388061523	3
Coq.Init.Datatypes.surjective_pairing	40	5.0.0.0	search with cache (only 1: intros; only 1: destruct p; only 1: simpl in *; only 1: reflexivity).	0.0165998935699	9
Coq.Init.Datatypes.injective_projections	40	0.1.1.38.7.5	search with cache (only 1: intros A B []; only 1: intros [Hl Hr]; only 1: simpl in *; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	16.5795350075	73201
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0139710903168	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.1.56	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.469714164734	3643
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	29.4156219959	45960
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00220394134521	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	0.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00443816184998	6
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00344586372375	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.1.1.0.0.0.0.4	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0957269668579	624
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0895099639893	308
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.665754795074	2359
Coq.Init.Logic.imp_iff_compat_l	40	0.1.1.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00811815261841	6
Coq.Init.Logic.imp_iff_compat_r	40	1.4.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).	0.0154278278351	18
Coq.Init.Logic.not_iff_compat	40	2.1.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.010509967804	11
Coq.Init.Logic.neg_false	40	0.1.3.0.3.0	search with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.0757489204407	189
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0812079906464	78
Coq.Init.Logic.and_assoc	40	7.4.1.1.0.0.4.2.1.9.2.0.2	search with cache (only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: apply H; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: assumption; only 1: apply HypR; only 1: apply HypR).	16.3909440041	67390
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.425268888474	676
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.1	search with cache (only 1: intros; only 1: assumption).	0.00774598121643	4
Coq.Init.Logic.iff_to_and	40	3.0.0.0.1.0.0	search with cache (only 1: intros; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial; only 1: trivial).	0.140341043472	138
Coq.Init.Logic.inst	40	7.1	search with cache (only 1: intro H; only 1: auto).	0.010959148407	13
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00647187232971	2
Coq.Init.Logic.absurd	40	4.0.8.2.0.1	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: assumption).	0.429043054581	1308
Coq.Init.Logic.eq_sym	40	1.6.4	search with cache (only 1: intro H1; only 1: elim H1; only 1: split).	0.0371129512787	88
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0101411342621	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00784802436829	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00762987136841	2
Coq.Init.Logic.not_eq_sym	40	0.4.1.5	search with cache (only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.0746669769287	201
Coq.Init.Logic.eq_sind_r	40	2.2.39	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	1.14540314674	8208
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00909090042114	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00768113136292	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00875377655029	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.2.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0174460411072	5
Coq.Init.Logic.rew_opp_r	40	0.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.0115699768066	4
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.013176202774	3
Coq.Init.Logic.f_equal2	40	0.0.1.3	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0340478420258	19
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0163888931274	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0206508636475	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0295557975769	6
Coq.Init.Logic.f_equal_compose	40	0.7.8.11.4	search with cache (only 1: intros A B C Hl Hr; only 1: intro H; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	1.75521206856	4328
Coq.Init.Logic.eq_trans_refl_l	40	0.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.0117390155792	4
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0111510753632	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0111429691315	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0115420818329	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0106890201569	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.5.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0204169750214	10
Coq.Init.Logic.rew_map	40	0.1.5	search with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: reflexivity).	0.0194418430328	9
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0148689746857	3
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0166850090027	3
Coq.Init.Logic.rew_swap	40	6.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0181930065155	10
Coq.Init.Logic.rew_compose	40	3.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0185990333557	6
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0133440494537	2
Coq.Init.Logic.eq_trans_map_distr	40	0.0.2.1.25.1	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: unfold f_equal; only 1: trivial).	2.19834709167	5225
Coq.Init.Logic.eq_sym_map_distr	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.0256972312927	17
Coq.Init.Logic.eq_trans_sym_distr	40	0.6.3	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.113445997238	130
Coq.Init.Logic.eq_trans_rew_distr	40	0.5	search with cache (only 1: destruct e'; only 1: reflexivity).	0.0199718475342	15
Coq.Init.Logic.rew_const	40	0.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.0181629657745	13
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.13.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.222769975662	629
Coq.Init.Logic.inhabited_covariant	40	0.0.7	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0213119983673	27
Coq.Init.Logic.eq_stepl	40	0.0.9	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0842440128326	109
Coq.Init.Logic.iff_stepl	40	0.0.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0176241397858	4
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.6.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.135444164276	70
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0226669311523	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00960302352905	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0113039016724	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0109889507294	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0198020935059	5
Coq.Init.Logic_Type.identity_ind_r	40	0.11.2	search with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.136747121811	303
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0116140842438	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0121600627899	3
Coq.Init.Specif.sigT_eta	40	1.3	search with cache (only 1: destruct p; only 1: split).	0.0138070583344	6
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0132710933685	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0166821479797	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0156490802765	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.11.9	search with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.296773910522	820
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.55.45	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	2.28096604347	22538
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.024276971817	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0243890285492	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0328788757324	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	1.10.15.3.8	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: intro; only 1: destruct H; only 1: reflexivity).	6.15077400208	8704
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0242741107941	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0247669219971	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.1.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0482451915741	7
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	5.4.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	1.83002090454	1009
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0221149921417	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.4.1.3	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.915498018265	470
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	4.2.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	2.05664014816	529
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0320780277252	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0359020233154	4
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.1.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.138726949692	9
Coq.Init.Specif.eq_sig2_uncurried_iff	40	4.5.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	5.71249604225	1576
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0267748832703	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0163578987122	3
Coq.QArith.QOrderedType.lt_strorder	40
Coq.QArith.QOrderedType.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0234830379486	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.1.41.3.3	search with cache (only 1: intros n m; only 1: revert m; only 1: intro p; only 1: symmetry; only 1: now rewrite !Qred_correct).	35.3185601234	41962
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	3.16.40	search with cache (only 1: unfold Qcle; only 1: simpl; only 1: apply Qle_Qabs).	3.17890787125	3638
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40	1.2.15	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p; only 1: intuition).	36.7737128735	7380
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	2.1.2.1.1	search with cache (only 1: intros; only 1: unfold Qle in *; only 1: simpl; only 1: Z.nzsimpl; only 1: apply Z.square_nonneg).	0.574698209763	140
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.1.4.10.2.0	search with cache (only 1: constructor; only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: auto with *; only 1: constructor).	2.51180887222	1943
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0192649364471	1
Coq.QArith.Qfield.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.0185310840607	1
Coq.QArith.Qfield.ex3	40
Coq.QArith.Qfield.ex4	40	0	search with cache (only 1: ring).	0.0300390720367	1
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.032322883606	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0321581363678	1
Coq.QArith.Qfield.ex7	40	0.0.3.1	search with cache (only 1: red; only 1: intros; only 1: simpl in *; only 1: ring).	0.220433950424	19
Coq.QArith.Qfield.ex8	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0394809246063	2
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0503258705139	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: simpl; only 1: ring_simplify; only 1: reflexivity).	0.167721986771	6
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0512049198151	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	2	search with cache (only 1: reflexivity).	0.00899410247803	3
Coq.QArith.Qcanon.Qcgt_alt	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Pos.gt; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0198409557343	4
Coq.QArith.Qcanon.Qcle_alt	40	2.0	search with cache (only 1: intros n m; only 1: reflexivity).	0.021390914917	4
Coq.QArith.Qcanon.Qcge_alt	40	0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0207848548889	3
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	0	search with cache (only 1: discriminate).	0.00850701332092	1
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	3.0.62	search with cache (only 1: intros (k, Hk); only 1: qc; only 1: ring).	25.7056210041	20678
Coq.QArith.Qcanon.Qcplus_0_r	40	6.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0820260047913	19
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	4.2	search with cache (only 1: fix le_div2 1; only 1: auto).	0.0272860527039	20
Coq.QArith.Qcanon.Qcplus_opp_r	40	6.0.2	search with cache (only 1: destruct q; only 1: qc; only 1: ring).	0.286082029343	112
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	24.11	search with cache (only 1: induction n; only 1: auto with qarith).	3.94057297707	3139
Coq.QArith.Qcanon.Qcmult_0_r	40	3.0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.0737738609314	9
Coq.QArith.Qcanon.Qcmult_1_l	40	14.0.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: ring).	10.9627919197	2123
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0603680610657	5
Coq.QArith.Qcanon.Qcmult_comm	40	2.16.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	23.1458108425	1770
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	9.0.0	search with cache (only 1: intros; only 1: qc; only 1: field).	0.56139922142	190
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	5.0.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: qc; only 1: ring).	2.45260500908	680
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	0.0.0.0	search with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto with *).	0.0407381057739	4
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.27	search with cache (only 1: intuition; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	6.00948381424	3796
Coq.QArith.Qcanon.Qcinv_mult_distr	40	5.18.6.31.6	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: fix even_spec 1; only 1: auto).	35.4451038837	41458
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.48.0	search with cache (only 1: intros n; only 1: red; only 1: auto with qarith).	2.81285595894	6631
Coq.QArith.Qcanon.Qcle_antisym	40	1.12	search with cache (only 1: intros H; only 1: intuition).	0.571944952011	227
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	0.0.0.1	search with cache (only 1: intros; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.0977609157562	5
Coq.QArith.Qcanon.Qclt_le_weak	40	1.9	search with cache (only 1: intros x y; only 1: apply Z.lt_le_incl).	0.207456111908	112
Coq.QArith.Qcanon.Qcle_lt_trans	40	0.0.0.1	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: now f_equal; only 1: auto with qarith).	0.0779438018799	49
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	4.0.2.0.0.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: eapply Qle_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: auto with *).	1.42696881294	713
Coq.QArith.Qcanon.Qcnot_lt_le	40	6.3	search with cache (only 1: intros a b Hb; only 1: Z.order).	0.0744299888611	74
Coq.QArith.Qcanon.Qcnot_le_lt	40	0.5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros q r; only 1: apply Z.nle_gt).	0.0305669307709	22
Coq.QArith.Qcanon.Qclt_not_le	40	6.8.15.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: unfold Qlt, Qle; only 1: intuition Z.order).	17.7567229271	13373
Coq.QArith.Qcanon.Qcle_not_lt	40	2.2.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros a b H; only 1: auto with qarith).	0.0269091129303	15
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40	1.9	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.493730068207	322
Coq.QArith.Qcanon.Qclt_le_dec	40	0.8	search with cache (only 1: fix gcd_divide 1; only 1: now subst).	0.0988259315491	74
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	3.3.26	search with cache (only 1: fix odd_spec 1; only 1: intros a a' H; only 1: auto).	1.60478591919	2183
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.1.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.183187961578	31
Coq.QArith.Qreals.IZR_nz	40	1	search with cache (only 1: auto with real).	0.014671087265	2
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	0.0	search with cache (only 1: symmetry; only 1: reflexivity).	0.0115389823914	2
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	search with cache (only 1: easy').	0.00887608528137	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	12	search with cache (only 1: intuition).	0.0365788936615	46
Coq.QArith.QArith_base.Qeq_sym	40	0.0.9	search with cache (only 1: red; only 1: intro EQ; only 1: now Z.nzsimpl).	0.0693330764771	40
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	search with cache (only 1: apply Zeq_is_eq_bool).	0.00797700881958	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	1.0.7.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply Qeq_bool_iff; only 1: auto).	0.687782049179	377
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40
Coq.QArith.QArith_base.Qnot_eq_sym	40	6	search with cache (only 1: intuition).	0.0326638221741	23
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	1.0.5	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: intuition).	0.0280439853668	9
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.15	search with cache (only 1: destruct 1; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.148928880692	194
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	2.20.12	search with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	2.24851083755	2551
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	8	search with cache (only 1: now Z.nzsimpl).	0.026358127594	9
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	4.1.20.0.3	search with cache (only 1: intros; only 1: rewrite <- Qeq_bool_iff; only 1: apply Zeq_is_eq_bool; only 1: simpl; only 1: now Z.nzsimpl').	13.1003608704	10231
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.1.4.6.0.6.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: f_equiv; only 1: simpl in *; only 1: ring; only 1: Z.nzsimpl; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: trivial).	5.83083796501	2469
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.9.3	search with cache (only 1: unfold Qeq, Qplus; only 1: intros a; only 1: simpl in *; only 1: ring).	1.24518799782	788
Coq.QArith.QArith_base.Qplus_opp_r	40	0.15.5.0.1	search with cache (only 1: intros a; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: Z.nzsimpl; only 1: ring).	7.98316788673	3816
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	8.0	search with cache (only 1: intros; only 1: split).	0.0143511295319	10
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.22	search with cache (only 1: induction x; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	17.9228310585	3282
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	5.3.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: now Z.nzsimpl).	5.93196702003	736
Coq.QArith.QArith_base.Qmult_comm	40
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	1.0.0.5.0.2	search with cache (only 1: intros n m p; only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: auto with qarith).	3.0508620739	374
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	0.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: intuition).	0.0117900371552	2
Coq.QArith.QArith_base.inject_Z_opp	40	1	search with cache (only 1: now destruct Hn || easy).	0.00710010528564	2
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	2.0.0.0.19	search with cache (only 1: intros x y H; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	4.23307991028	2626
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.7.0.0.2	search with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: symmetry; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	2.24067115784	824
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	45	search with cache (only 1: firstorder).	0.532423973083	1036
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40	3.5.10.15	search with cache (only 1: symmetry; only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.nzsimpl'; only 1: f_equal).	6.95676612854	9771
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	1.18.12	search with cache (only 1: red; only 1: unfold Qlt; only 1: Z.order').	1.75546193123	1601
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	3.24	search with cache (only 1: destruct y; only 1: apply Z.ge_le_iff).	12.6390478611	1181
Coq.QArith.QArith_base.Qnot_le_lt	40	1.2.7	search with cache (only 1: unfold Qle; only 1: intros; only 1: now apply Z.nle_gt).	0.121994018555	99
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00845718383789	1
Coq.QArith.QArith_base.Qle_not_lt	40
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40	0.17.5	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: auto with arith).	32.6990630627	17912
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	0.0.1.1.1.0.2.5	search with cache (only 1: intros [[| n| n] d]; only 1: trivial; only 1: red; only 1: trivial; only 1: intros; only 1: unfold Qle, Qlt; only 1: simpl in *; only 1: auto with qarith).	4.73371696472	2051
Coq.QArith.QArith_base.Qle_shift_div_l	40	2.14	search with cache (only 1: fix gcd_greatest 1; only 1: trivial).	10.2470858097	3723
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40	0.0.2.2.4.1.0.0.3.2.0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hy; only 1: clear y' Hy; only 1: induction y; only 1: red; only 1: simpl; only 1: easy; only 1: simpl; only 1: now f_equiv; only 1: simpl; only 1: rewrite Hx; only 1: unfold Qpower_positive; only 1: auto with *).	8.90121388435	5503
Coq.QArith.Qminmax.plus_max_distr_l	40
Coq.QArith.Qminmax.plus_max_distr_r	40
Coq.QArith.Qminmax.plus_min_distr_l	40	0.0.0.0.1.3.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.683031797409	137
Coq.QArith.Qminmax.plus_min_distr_r	40	0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.218096017838	26
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	0.2.1	search with cache (only 1: simpl; only 1: intro n; only 1: apply Z.div_1_r).	0.0816910266876	28
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.1.2.0.0.1	search with cache (only 1: intros x; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: auto with *).	0.35598897934	94
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40	5.0.0.1	search with cache (only 1: fix sqrtrem_spec 1; only 1: red; only 1: simpl; only 1: auto with zarith).	0.199329853058	74
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.197313785553	41
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0679740905762	9
Coq.QArith.Qabs.Qabs_nonneg	40
Coq.QArith.Qabs.Zabs_Qabs	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.0273730754852	3
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40	5.10.3	search with cache (only 1: induction x; only 1: fix even_spec 1; only 1: now auto with arith).	4.06177806854	1949
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0555200576782	6
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.0	search with cache (only 1: red; only 1: trivial).	0.00851202011108	2
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	3	search with cache (only 1: firstorder).	0.00614190101624	4
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00455093383789	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	3.1.1.4.1	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: intros h1 h2; only 1: auto).	0.280778884888	230
Coq.Classes.CMorphisms.subrelation_id_proper	40	6	search with cache (only 1: firstorder).	0.0730168819427	7
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00730395317078	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.00898814201355	4
Coq.Classes.CMorphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00540208816528	2
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1	search with cache (only 1: simpl_crelation).	0.00838398933411	2
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00993704795837	1
Coq.Classes.CMorphisms.forall_subrelation	40	3.1.2	search with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0145659446716	9
Coq.Classes.CMorphisms.iff_impl_subrelation	40	3.0.0	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.00838303565979	6
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00497007369995	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00452613830566	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00484800338745	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	9	search with cache (only 1: firstorder).	0.0189480781555	10
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.086314201355	7
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.53419303894	215
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.92400288582	712
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.70081686974	697
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	2.76969599724	965
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.100614070892	7
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	1.06059408188	684
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	2.50458598137	468
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	4.0	search with cache (only 1: hnf; only 1: firstorder).	0.011204957962	6
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	20	search with cache (only 1: firstorder).	0.211279153824	186
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2.0	search with cache (only 1: intros; only 1: simpl_crelation).	0.0126440525055	4
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	2.5	search with cache (only 1: reduce; only 1: auto).	0.011598110199	9
Coq.Classes.CMorphisms.flip_respectful	40	0.0.1	search with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.0207419395447	4
Coq.Classes.CMorphisms.flip1	40	2.1	search with cache (only 1: hnf; only 1: auto).	0.0294990539551	32
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00693202018738	1
Coq.Classes.CMorphisms.eq_subrelation	40	2.1	search with cache (only 1: hnf; only 1: simpl_crelation).	0.0224509239197	18
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00682091712952	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00602698326111	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0.0.0.0.0.0	search with cache (only 1: reduce; only 1: split; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: subst; only 1: firstorder).	0.0318338871002	8
Coq.Classes.CMorphisms.proper_normalizes_proper	40	4.2	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0215327739716	8
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00704097747803	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	4.4	search with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.0927951335907	10
Coq.Classes.CMorphisms.proper_sym_flip_2	40	2.3.0.9	search with cache (only 1: red; only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: auto).	5.70431399345	1465
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0848100185394	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0286810398102	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	2.2.2.6	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.552026033401	530
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	2	search with cache (only 1: simpl_crelation).	0.0125920772552	3
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00842022895813	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.056401014328	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.247075080872	1
Coq.Classes.CRelationClasses.complement_inverse	40	2	search with cache (only 1: trivial).	0.00689792633057	3
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00609302520752	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	3.0	search with cache (only 1: hnf; only 1: firstorder).	0.00952291488647	5
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	3.1	search with cache (only 1: hnf; only 1: auto).	0.0872359275818	19
Coq.Classes.CRelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0823328495026	3
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0174868106842	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0248279571533	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0270760059357	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.007572889328	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00620698928833	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	2.2.0.11	search with cache (only 1: hnf; only 1: split; only 1: auto; only 1: auto).	0.119200944901	213
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00749707221985	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00832486152649	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	2.0.1.0.2	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.02077293396	11
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0127120018005	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0517189502716	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.2.5	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	1.31040096283	640
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0157499313354	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00983190536499	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0114469528198	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.369724988937	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	3	search with cache (only 1: trivial).	0.01016497612	4
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00989699363708	1
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.0175750255585	9
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1.0	search with cache (only 1: hnf; only 1: auto).	0.0986549854279	37
Coq.Classes.RelationClasses.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0723910331726	3
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0257050991058	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0384311676025	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0432889461517	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0110230445862	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0108509063721	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.2.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: assumption; only 1: firstorder).	0.0664050579071	16
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0219669342041	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0510621070862	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.0127968788147	5
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0166809558868	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0507230758667	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0184609889984	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0.2	search with cache (only 1: symmetry; only 1: trivial).	0.00829410552979	4
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00470089912415	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00456404685974	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.0.0.14.0	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: firstorder).	0.203743934631	275
Coq.Classes.Morphisms.subrelation_id_proper	40	2.4	search with cache (only 1: reduce; only 1: firstorder).	0.0109858512878	8
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00798296928406	1
Coq.Classes.Morphisms.subrelation_refl	40	1.0.2	search with cache (only 1: unfold subrelation in *; only 1: intros; only 1: assumption).	0.0103800296783	6
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00570297241211	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	1.4.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0321199893951	10
Coq.Classes.Morphisms.pointwise_subrelation	40	0.0	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.00874495506287	2
Coq.Classes.Morphisms.forall_subrelation	40	0	search with cache (only 1: firstorder).	0.00864696502686	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	3.0.0	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.00788402557373	6
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00464010238647	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	6	search with cache (only 1: firstorder).	0.0134561061859	7
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.0613279342651	11
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.234843969345	146
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3.3.2	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	4.48573088646	2054
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	4.3.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.701281070709	312
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	6.9505841732	2787
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	7.63393211365	3262
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4.8.0	search with cache (only 1: transitivity y; only 1: assumption; only 1: intuition).	2.25763201714	1856
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.0105729103088	2
Coq.Classes.Morphisms.compose_proper_obligation_1	40	9	search with cache (only 1: firstorder).	0.0109839439392	10
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	0.2.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0135118961334	7
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	4	search with cache (only 1: firstorder).	0.00791120529175	5
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.00897312164307	1
Coq.Classes.Morphisms.flip1	40	2.0.0.0	search with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).	0.0176219940186	6
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00612902641296	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.00903582572937	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00575304031372	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00549292564392	1
Coq.Classes.Morphisms.proper_proper	40	6.0.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl in *; only 1: simpl_relation).	0.0785071849823	24
Coq.Classes.Morphisms.proper_normalizes_proper	40	5.2	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0207290649414	9
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00698900222778	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0551478862762	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	5.2.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	0.0283749103546	17
Coq.Classes.Morphisms.proper_sym_impl_iff	40	15.1	search with cache (only 1: simpl_relation; only 1: firstorder).	1.19541096687	718
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: simpl_relation).	0.0126929283142	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00862812995911	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0290148258209	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00843000411987	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	8	search with cache (only 1: firstorder).	0.0165250301361	13
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0163190364838	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.246245861053	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	8	search with cache (only 1: firstorder).	0.0165550708771	9
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0104019641876	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00912594795227	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0124659538269	1
Coq.Classes.RelationPairs.pair_compat	40	0.0	search with cache (only 1: intros x x' Hxx'; only 1: firstorder).	0.0127980709076	2
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00868391990662	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.00930595397949	1
Coq.Classes.RelationPairs.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40	0.44.9	search with cache (only 1: intros; only 1: apply H; only 1: assumption).	10.4641270638	50715
Coq.Classes.DecidableClass.Decidable_complete	40	0.55.15	search with cache (only 1: intro p; only 1: intros (x, (Hx, Huni)); only 1: assumption).	21.0992481709	96381
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.10	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.158545970917	85
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	3.0.1.0.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.0509748458862	13
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	5	search with cache (only 1: now simpl).	0.0493409633636	26
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0114049911499	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0104479789734	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	13.1.4	search with cache (only 1: intros y q u H; only 1: intros; only 1: now rewrite <- H1).	1.23644304276	1511
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	0.0.6.10	search with cache (only 1: intros A x y z H1 H2; only 1: rewrite <- H2; only 1: red; only 1: firstorder).	2.12772512436	1330
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	0.2	search with cache (only 1: intros f Hf; only 1: firstorder).	0.28953909874	33
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.443666219711	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00863194465637	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0111980438232	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	1.3.2	search with cache (only 1: intros; only 1: simpl_relation; only 1: firstorder).	0.172272920609	9
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1	search with cache (only 1: reduce; only 1: firstorder).	0.174026012421	13
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.00902700424194	1
Coq.PArith.Pnat.inj_succ	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_1	40	0	search with cache (only 1: trivial).	0.0157129764557	1
Coq.PArith.Pnat.inj_xO	40
Coq.PArith.Pnat.inj_xI	40
Coq.PArith.Pnat.is_succ	40
Coq.PArith.Pnat.is_pos	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	1.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: now destruct (is_succ p) as (n, ->)).	0.0397200584412	7
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_lt	40	1.3.2.0.8.3	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: destruct q; only 1: trivial; only 1: trivial; only 1: now subst).	20.6420068741	11238
Coq.PArith.Pnat.inj_le	40
Coq.PArith.Pnat.inj_gt	40
Coq.PArith.Pnat.inj_ge	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_sub_max	40
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_pred_max	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.inj_iter	40
Coq.PArith.Pnat.id	40
Coq.PArith.Pnat.id_max	40	3.0.0.0.5.0.7.8	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: rewrite Pos2Nat.inj_succ; only 1: now Morphisms.f_equiv).	1.74431490898	1125
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40
Coq.PArith.Pnat.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0305068492889	4
Coq.PArith.Pnat.inj_pred	40
Coq.PArith.Pnat.inj_add	40
Coq.PArith.Pnat.inj_mul	40
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.inj_sub	40
Coq.PArith.Pnat.inj_min	40
Coq.PArith.Pnat.inj_max	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40
Coq.PArith.Pnat.id_succ	40
Coq.PArith.Pnat.pred_id	40	1.0.0.8.1.28	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	30.3944239616	26703
Coq.PArith.Pnat.inj	40
Coq.PArith.Pnat.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: congruence).	0.0524117946625	11
Coq.PArith.Pnat.inv	40
Coq.PArith.Pnat.inj_succ	40	0.0	search with cache (only 1: simpl; only 1: split).	0.0190958976746	2
Coq.PArith.Pnat.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	2.0.0.1	search with cache (only 1: unfold Pos.to_nat; only 1: intros n; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl').	0.102994203568	21
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.eq_dec	40	2	search with cache (only 1: decide equality).	0.0239751338959	3
Coq.PArith.BinPos.xI_succ_xO	40	8	search with cache (only 1: now rewrite <- ?PeanoNat.Nat.add_le_mono_r).	0.0196158885956	17
Coq.PArith.BinPos.succ_discr	40	4.27.2.13.8.69	search with cache (only 1: destruct p; only 1: simpl; only 1: discriminate; only 1: intro H1; only 1: now f_equiv; only 1: easy).	16.2147648335	70219
Coq.PArith.BinPos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0126059055328	1
Coq.PArith.BinPos.succ_pred_double	40
Coq.PArith.BinPos.pred_double_succ	40	0.1.0.2.0.168	search with cache (only 1: compute; only 1: induction p; only 1: symmetry; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	4.11432409286	15766
Coq.PArith.BinPos.double_succ	40	0	search with cache (only 1: now destruct p).	0.0144650936127	1
Coq.PArith.BinPos.pred_double_xO_discr	40	2.0.0.0.1.1	search with cache (only 1: induction p; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.254187107086	52
Coq.PArith.BinPos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0282070636749	1
Coq.PArith.BinPos.pred_succ	40	0.0.0.0.0.0.1.0.10.5.0.0.1.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equiv; only 1: easy; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	3.82157301903	3366
Coq.PArith.BinPos.succ_pred_or	40
Coq.PArith.BinPos.succ_pred	40	1.2.1.6.0.0.0	search with cache (only 1: destruct p; only 1: auto; only 1: simpl; only 1: intro H; only 1: apply succ_pred_double; only 1: intro H; only 1: now f_equal).	8.59135103226	3801
Coq.PArith.BinPos.succ_inj	40
Coq.PArith.BinPos.pred_N_succ	40	0.0.1.1.8.0.20	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	31.1433489323	19049
Coq.PArith.BinPos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.0146760940552	1
Coq.PArith.BinPos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.0132110118866	1
Coq.PArith.BinPos.add_carry_spec	40
Coq.PArith.BinPos.add_comm	40
Coq.PArith.BinPos.add_succ_r	40
Coq.PArith.BinPos.add_succ_l	40
Coq.PArith.BinPos.add_no_neutral	40
Coq.PArith.BinPos.add_carry_add	40
Coq.PArith.BinPos.add_reg_r	40
Coq.PArith.BinPos.add_reg_l	40
Coq.PArith.BinPos.add_cancel_r	40	1.6.1.1.3.0	search with cache (only 1: revert p q; only 1: split; only 1: now apply add_reg_r; only 1: intro H; only 1: f_equal; only 1: auto using add_carry_add).	7.700756073	3459
Coq.PArith.BinPos.add_cancel_l	40
Coq.PArith.BinPos.add_carry_reg_r	40
Coq.PArith.BinPos.add_carry_reg_l	40
Coq.PArith.BinPos.add_assoc	40
Coq.PArith.BinPos.add_xO	40	1	search with cache (only 1: trivial).	0.0135269165039	2
Coq.PArith.BinPos.add_xI_pred_double	40
Coq.PArith.BinPos.add_xO_pred_double	40
Coq.PArith.BinPos.add_diag	40	1.0.0.0.0.9.6.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: trivial).	4.81711506844	3430
Coq.PArith.BinPos.peano_rect_succ	40
Coq.PArith.BinPos.peano_rect_base	40	1	search with cache (only 1: reflexivity).	0.0153439044952	2
Coq.PArith.BinPos.peano_case	40
Coq.PArith.BinPos.eq_dep_eq_positive	40
Coq.PArith.BinPos.PeanoViewUnique	40
Coq.PArith.BinPos.peano_equiv	40
Coq.PArith.BinPos.mul_1_l	40	0	search with cache (only 1: auto using add_1_r).	0.0164911746979	1
Coq.PArith.BinPos.mul_1_r	40	3.0.3.2.1.0.8	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: now f_equal; only 1: auto).	2.31389689445	1698
Coq.PArith.BinPos.mul_xO_r	40
Coq.PArith.BinPos.mul_xI_r	40
Coq.PArith.BinPos.mul_comm	40
Coq.PArith.BinPos.mul_add_distr_l	40
Coq.PArith.BinPos.mul_add_distr_r	40
Coq.PArith.BinPos.mul_assoc	40
Coq.PArith.BinPos.mul_succ_l	40
Coq.PArith.BinPos.mul_succ_r	40
Coq.PArith.BinPos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.mul_xO_discr	40
Coq.PArith.BinPos.mul_reg_r	40
Coq.PArith.BinPos.mul_reg_l	40
Coq.PArith.BinPos.mul_cancel_r	40	0.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.471424818039	129
Coq.PArith.BinPos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.418035030365	131
Coq.PArith.BinPos.mul_eq_1_l	40	0.0.0.1.1.0.0.0.0.0.5	search with cache (only 1: revert p q; only 1: induction p as [p IHp| p IHp| ]; only 1: intros [q| q| ] H; only 1: destr_eq H; only 1: destr_eq H; only 1: destr_eq H; only 1: discriminate; only 1: intros [q| q| ] H; only 1: reflexivity || apply f_equal || exfalso; only 1: reflexivity || apply f_equal || exfalso; only 1: reflexivity || apply f_equal || exfalso).	3.15170407295	1325
Coq.PArith.BinPos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0344040393829	1
Coq.PArith.BinPos.square_xO	40	2.0.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0828020572662	24
Coq.PArith.BinPos.square_xI	40
Coq.PArith.BinPos.iter_swap_gen	40
Coq.PArith.BinPos.iter_swap	40
Coq.PArith.BinPos.iter_succ	40
Coq.PArith.BinPos.iter_add	40
Coq.PArith.BinPos.iter_invariant	40
Coq.PArith.BinPos.pow_1_r	40
Coq.PArith.BinPos.pow_succ_r	40
Coq.PArith.BinPos.square_spec	40
Coq.PArith.BinPos.sub_mask_succ_r	40
Coq.PArith.BinPos.sub_mask_carry_spec	40
Coq.PArith.BinPos.sub_mask_spec	40
Coq.PArith.BinPos.sub_mask_nul_iff	40
Coq.PArith.BinPos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0396649837494	7
Coq.PArith.BinPos.sub_mask_add	40
Coq.PArith.BinPos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.sub_mask_pos_iff	40
Coq.PArith.BinPos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.sub_mask_neg_iff	40
Coq.PArith.BinPos.eqb_eq	40
Coq.PArith.BinPos.ltb_lt	40
Coq.PArith.BinPos.leb_le	40
Coq.PArith.BinPos.compare_cont_spec	40	4.17.1	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: trivial).	18.0976479053	10479
Coq.PArith.BinPos.compare_cont_Eq	40
Coq.PArith.BinPos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_Lt	40	0.1.1.1.2.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	0.800333023071	138
Coq.PArith.BinPos.compare_cont_Gt_Lt	40	0.0.0.0.1.0	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0706551074982	17
Coq.PArith.BinPos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.2.0.0.0.0.0.0.10	search with cache (only 1: split; only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy'; only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy || now destruct 1; only 1: easy').	6.32323980331	2746
Coq.PArith.BinPos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0543739795685	7
Coq.PArith.BinPos.compare_cont_Gt_not_Lt	40	1.0.0.0.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now intuition).	0.0796608924866	12
Coq.PArith.BinPos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.3	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0649030208588	9
Coq.PArith.BinPos.compare_xO_xO	40	0.0.0.0	search with cache (only 1: destruct compare; only 1: trivial; only 1: trivial; only 1: trivial).	0.0266079902649	4
Coq.PArith.BinPos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0133650302887	1
Coq.PArith.BinPos.compare_xI_xO	40
Coq.PArith.BinPos.compare_xO_xI	40
Coq.PArith.BinPos.compare_sub_mask	40
Coq.PArith.BinPos.lt_iff_add	40
Coq.PArith.BinPos.gt_iff_add	40
Coq.PArith.BinPos.compare_cont_refl	40	1.3.1.1.2	search with cache (only 1: rewrite compare_cont_spec; only 1: induction p; only 1: trivial; only 1: trivial; only 1: trivial).	0.200845956802	138
Coq.PArith.BinPos.compare_cont_antisym	40
Coq.PArith.BinPos.compare_eq_iff	40
Coq.PArith.BinPos.compare_antisym	40
Coq.PArith.BinPos.compare_lt_iff	40	0.0.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0321159362793	5
Coq.PArith.BinPos.compare_le_iff	40	0.0.0.1.1.0.1	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: split; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	0.328653097153	80
Coq.PArith.BinPos.gt_lt_iff	40	2.0	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.170398950577	35
Coq.PArith.BinPos.gt_lt	40	5.0	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.611910820007	118
Coq.PArith.BinPos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0157091617584	1
Coq.PArith.BinPos.ge_le_iff	40	0.0.7.4	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold ge, lt, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	1.83962702751	538
Coq.PArith.BinPos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0284729003906	2
Coq.PArith.BinPos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0151121616364	1
Coq.PArith.BinPos.compare_succ_r	40
Coq.PArith.BinPos.compare_succ_l	40
Coq.PArith.BinPos.lt_succ_r	40
Coq.PArith.BinPos.lt_succ_diag_r	40
Coq.PArith.BinPos.compare_succ_succ	40
Coq.PArith.BinPos.le_1_l	40	3	search with cache (only 1: now destruct compare || now destruct p).	0.0435101985931	13
Coq.PArith.BinPos.nlt_1_r	40	7	search with cache (only 1: now destruct p).	0.0581238269806	26
Coq.PArith.BinPos.lt_1_succ	40	2.1.0.3	search with cache (only 1: induction p using peano_rect; only 1: simpl; only 1: now f_equal; only 1: now destruct p).	0.0759770870209	42
Coq.PArith.BinPos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0222928524017	2
Coq.PArith.BinPos.lt_nle	40	1.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.626229047775	116
Coq.PArith.BinPos.lt_le_incl	40	14	search with cache (only 1: congruence).	1.30198383331	453
Coq.PArith.BinPos.lt_lt_succ	40	13.2.0	search with cache (only 1: intros; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: now apply PeanoNat.Nat.lt_le_incl).	1.25342988968	1520
Coq.PArith.BinPos.succ_lt_mono	40	3.6.3.3.2	search with cache (only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	15.8689248562	6642
Coq.PArith.BinPos.succ_le_mono	40
Coq.PArith.BinPos.lt_trans	40
Coq.PArith.BinPos.lt_ind	40
Coq.PArith.BinPos.lt_strorder	40	0.0.40	search with cache (only 1: constructor; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.855834960938	902
Coq.PArith.BinPos.lt_compat	40	0.3.1.0	search with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: intuition).	0.0446529388428	8
Coq.PArith.BinPos.lt_total	40
Coq.PArith.BinPos.le_refl	40	0.0.7.0.6	search with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: apply lt_eq_cases; only 1: now right).	0.390699863434	251
Coq.PArith.BinPos.le_lt_trans	40
Coq.PArith.BinPos.lt_le_trans	40	0.0.0.0.1.9	search with cache (only 1: intros EQ; only 1: intro H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	3.3229970932	1119
Coq.PArith.BinPos.le_trans	40
Coq.PArith.BinPos.le_succ_l	40	3.6.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: auto).	2.020195961	806
Coq.PArith.BinPos.le_antisym	40	3.15.1.0.1	search with cache (only 1: case (compare_spec p q); only 1: intuition; only 1: unfold ltb, lt; only 1: now rewrite compare_antisym, CompOpp_iff; only 1: now rewrite <- ge_le_iff).	33.1310989857	20946
Coq.PArith.BinPos.le_preorder	40
Coq.PArith.BinPos.le_partorder	40
Coq.PArith.BinPos.add_compare_mono_l	40
Coq.PArith.BinPos.add_compare_mono_r	40	0.0.0.0.0.0.0.7	search with cache (only 1: rewrite (add_comm r), (add_comm q); only 1: revert p q r; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: apply compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	1.89258718491	1150
Coq.PArith.BinPos.lt_add_diag_r	40
Coq.PArith.BinPos.add_lt_mono_l	40
Coq.PArith.BinPos.add_lt_mono_r	40	0.0.0.1	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold lt; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0846960544586	29
Coq.PArith.BinPos.add_lt_mono	40
Coq.PArith.BinPos.add_le_mono_l	40	1.1.0.3.5	search with cache (only 1: revert q r; only 1: intros n m; only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: now rewrite compare_antisym, CompOpp_iff).	0.799148082733	533
Coq.PArith.BinPos.add_le_mono_r	40	0.0.0.2	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.15828704834	24
Coq.PArith.BinPos.add_le_mono	40
Coq.PArith.BinPos.mul_compare_mono_l	40
Coq.PArith.BinPos.mul_compare_mono_r	40
Coq.PArith.BinPos.mul_lt_mono_l	40
Coq.PArith.BinPos.mul_lt_mono_r	40	0.0.0.4	search with cache (only 1: rewrite 2!(mul_comm _ p); only 1: unfold lt; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.135709047318	37
Coq.PArith.BinPos.mul_lt_mono	40
Coq.PArith.BinPos.mul_le_mono_l	40
Coq.PArith.BinPos.mul_le_mono_r	40
Coq.PArith.BinPos.mul_le_mono	40
Coq.PArith.BinPos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0198030471802	2
Coq.PArith.BinPos.lt_not_add_l	40
Coq.PArith.BinPos.pow_gt_1	40
Coq.PArith.BinPos.sub_1_r	40	0.0.0.4.2	search with cache (only 1: destruct p; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: reflexivity).	0.172595977783	50
Coq.PArith.BinPos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0622320175171	1
Coq.PArith.BinPos.sub_succ_r	40
Coq.PArith.BinPos.sub_mask_pos'	40
Coq.PArith.BinPos.sub_mask_pos	40	0.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: exists r; only 1: apply sub_mask_add_diag_l).	0.0343809127808	4
Coq.PArith.BinPos.sub_add	40
Coq.PArith.BinPos.add_sub	40
Coq.PArith.BinPos.mul_sub_distr_l	40
Coq.PArith.BinPos.mul_sub_distr_r	40
Coq.PArith.BinPos.sub_lt_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_l	40
Coq.PArith.BinPos.sub_compare_mono_r	40
Coq.PArith.BinPos.sub_lt_mono_r	40
Coq.PArith.BinPos.sub_decr	40
Coq.PArith.BinPos.add_sub_assoc	40
Coq.PArith.BinPos.sub_add_distr	40
Coq.PArith.BinPos.sub_sub_distr	40
Coq.PArith.BinPos.sub_xO_xO	40
Coq.PArith.BinPos.sub_xI_xI	40	0.0.1.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0321061611176	5
Coq.PArith.BinPos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0300149917603	4
Coq.PArith.BinPos.sub_xO_xI	40
Coq.PArith.BinPos.sub_mask_neg_iff'	40	0.0.1.1.1.1.0.0.0.0	search with cache (only 1: split; only 1: case sub_mask_spec; only 1: congruence; only 1: discriminate; only 1: intros r H; only 1: subst; only 1: auto using lt_add_r; only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	2.56729793549	1047
Coq.PArith.BinPos.sub_mask_neg	40	0.0.1	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.129245042801	4
Coq.PArith.BinPos.sub_le	40
Coq.PArith.BinPos.sub_lt	40	0.0.0.0.2.0.0.10	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: rewrite compare_sub_mask; only 1: unfold sub; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	3.55785894394	2772
Coq.PArith.BinPos.sub_diag	40
Coq.PArith.BinPos.size_nat_monotone	40
Coq.PArith.BinPos.size_gt	40
Coq.PArith.BinPos.size_le	40
Coq.PArith.BinPos.max_l	40
Coq.PArith.BinPos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0438559055328	9
Coq.PArith.BinPos.min_l	40
Coq.PArith.BinPos.min_r	40	2.0.0.4.1.0.0.4.0	search with cache (only 1: unfold le, min; only 1: intros x y H; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: intuition; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: now apply compare_eq_iff; only 1: auto).	8.57562279701	5954
Coq.PArith.BinPos.max_1_l	40	0.5.0.3.48	search with cache (only 1: induction n; only 1: intuition; only 1: apply max_r || apply max_l; only 1: now f_equal; only 1: intuition).	5.69055318832	12876
Coq.PArith.BinPos.max_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0436279773712	8
Coq.PArith.BinPos.min_1_l	40	0.0.0.0.1.0.0.9	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.986647844315	766
Coq.PArith.BinPos.min_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0473871231079	8
Coq.PArith.BinPos.succ_max_distr	40
Coq.PArith.BinPos.succ_min_distr	40
Coq.PArith.BinPos.add_max_distr_l	40	2.0.4.0.0.0.0	search with cache (only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros q r; only 1: rewrite <- compare_le_iff; only 1: rewrite add_compare_mono_l; only 1: easy || now destruct 1).	1.05559802055	408
Coq.PArith.BinPos.add_max_distr_r	40
Coq.PArith.BinPos.add_min_distr_l	40	0.0.0.0	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.133022069931	4
Coq.PArith.BinPos.add_min_distr_r	40	0.0.0.1.0.0.0.1.10	search with cache (only 1: destruct (min_spec m n) as [(H', E')| (H', E')]; only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l; only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	1.91618299484	667
Coq.PArith.BinPos.mul_max_distr_l	40	0.1.1.1.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: unfold le; only 1: red; only 1: rewrite mul_compare_mono_l; only 1: easy').	0.218799114227	17
Coq.PArith.BinPos.mul_max_distr_r	40
Coq.PArith.BinPos.mul_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0268170833588	6
Coq.PArith.BinPos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0321378707886	5
Coq.PArith.BinPos.iter_op_succ	40	3.1.1.16.0.6	search with cache (only 1: induction p; only 1: simpl; only 1: congruence; only 1: auto; only 1: simpl; only 1: split).	7.69187498093	7116
Coq.PArith.BinPos.of_nat_succ	40	0.0.0.0.25.12.9	search with cache (only 1: simpl; only 1: symmetry; only 1: induction n; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: f_equal; only 1: now f_equal).	1.58186006546	3544
Coq.PArith.BinPos.pred_of_succ_nat	40
Coq.PArith.BinPos.succ_of_nat	40
Coq.PArith.BinPos.sqrtrem_step_spec	40
Coq.PArith.BinPos.sqrtrem_spec	40
Coq.PArith.BinPos.sqrt_spec	40
Coq.PArith.BinPos.divide_add_cancel_l	40
Coq.PArith.BinPos.divide_xO_xI	40
Coq.PArith.BinPos.divide_xO_xO	40	1.10.22	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	10.2924838066	6885
Coq.PArith.BinPos.divide_mul_l	40
Coq.PArith.BinPos.divide_mul_r	40
Coq.PArith.BinPos.ggcdn_gcdn	40
Coq.PArith.BinPos.ggcd_gcd	40	0.26.17.4	search with cache (only 1: intros a m; only 1: revert m; only 1: fix even_spec 1; only 1: auto).	9.52040219307	19892
Coq.PArith.BinPos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.ggcd_correct_divisors	40
Coq.PArith.BinPos.gcd_divide_l	40
Coq.PArith.BinPos.gcd_divide_r	40
Coq.PArith.BinPos.gcdn_greatest	40
Coq.PArith.BinPos.gcd_greatest	40
Coq.PArith.BinPos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	1.1.21	search with cache (only 1: fix odd_spec 1; only 1: symmetry; only 1: intuition).	0.591040849686	971
Coq.PArith.BinPos.Pcompare_eq_Gt	40	1.0	search with cache (only 1: unfold Pos.gt; only 1: apply iff_refl).	0.0229110717773	3
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	1.1.3.7.13	search with cache (only 1: intros H; only 1: reflexivity || destruct H; only 1: intuition; only 1: intuition; only 1: intuition).	2.36031007767	1317
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: now subst).	0.0246279239655	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	16.1	search with cache (only 1: fix even_spec 1; only 1: trivial).	4.19680500031	3309
Coq.Arith.Even.odd_equiv	40	10.2	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.940201997757	735
Coq.Arith.Even.even_or_odd	40	26.9.66	search with cache (only 1: induction n; only 1: intuition; only 1: intuition).	6.61206698418	26603
Coq.Arith.Even.even_odd_dec	40	4.5.7.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: left; only 1: constructor; only 1: assumption).	7.04645895958	5889
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.110148906708	1
Coq.Arith.Even.even_even_plus	40
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0396540164948	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0695159435272	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0396308898926	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.137742042542	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0898418426514	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0406789779663	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0392558574677	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0428171157837	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0398190021515	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0396449565887	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0541260242462	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0405719280243	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.209667921066	1
Coq.Arith.Even.even_mult_l	40
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0276639461517	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0605959892273	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0423719882965	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0452709197998	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0646498203278	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0280930995941	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0149068832397	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0360090732574	1
Coq.Arith.Minus.minus_diag_reverse	40	3.2.6	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.402158975601	195
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	13.11.2	search with cache (only 1: nzinduct p; only 1: auto; only 1: auto with *).	23.2658991814	8028
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.0.0.2.4.1.7.3	search with cache (only 1: symmetry; only 1: revert m; only 1: induction n; only 1: simpl; only 1: intro n; only 1: symmetry; only 1: now destruct n; only 1: trivial).	1.88503503799	1627
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.1.1.1.0.1.3.0.0.7	search with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: destruct m; only 1: inversion 1; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	24.1004869938	12027
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	11.4.6	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: intuition).	1.77013111115	2038
Coq.Arith.Between.between_le	40	0.10.0.3	search with cache (only 1: induction 1; only 1: auto with arith; only 1: constructor; only 1: trivial).	0.751929044724	670
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.1.3	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.153608083725	35
Coq.Arith.Between.exists_le_S	40	0.6.9.12.4	search with cache (only 1: intro n; only 1: intro H; only 1: induction 1; only 1: auto; only 1: auto with arith).	11.5205321312	17139
Coq.Arith.Between.exists_S_le	40	8.0.6.10	search with cache (only 1: intro LS'; only 1: fix le_div2 1; only 1: intros m IH; only 1: auto with arith).	5.1053750515	7702
Coq.Arith.Between.in_int_intro	40	1.0.5	search with cache (only 1: fix gcd_greatest 1; only 1: intros y q u H; only 1: auto).	0.177869796753	48
Coq.Arith.Between.in_int_lt	40	4.5	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order).	0.228260993958	111
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	3.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0113241672516	5
Coq.Arith.Between.in_int_Sp_q	40	1.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.141131162643	24
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.128788948059	5
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40	0.35.3	search with cache (only 1: intro p; only 1: fix gcd_divide 1; only 1: auto with arith).	32.2884728909	53406
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40	0.15.0.1.84	search with cache (only 1: destruct n; only 1: right; only 1: now Nat.nzsimpl; only 1: left; only 1: now exists n).	33.240981102	92345
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	2.0.1.9.4.0.2	search with cache (only 1: destruct n; only 1: intro H; only 1: now left; only 1: destruct m as [| m]; only 1: intro H; only 1: now right; only 1: now left).	4.17009115219	3928
Coq.Arith.Mult.mult_is_one	40	1.0.0.6.3.2.7.0.16.4	search with cache (only 1: destruct m as [| m]; only 1: Nat.nzsimpl; only 1: Nat.order'; only 1: Nat.induct n; only 1: now split; only 1: destruct m as [| m]; only 1: intro n; only 1: now Nat.nzsimpl; only 1: intros n IH; only 1: now split).	31.1271221638	25072
Coq.Arith.Mult.mult_O_le	40	2.0.10.6.1.16	search with cache (only 1: revert m; only 1: destruct m; only 1: now left; only 1: simpl; only 1: right; only 1: apply Nat.le_add_r).	11.6555969715	8022
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	0.0.0.2.6.0.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: right; only 1: revert n; only 1: fix le_div2 1; only 1: intros a; only 1: apply Nat.le_div2).	1.6705429554	1319
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.22.11	search with cache (only 1: intros a; only 1: fix even_odd_double 1; only 1: auto with arith).	22.5955319405	18313
Coq.Arith.Div2.odd_S2n	40
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.181500911713	53
Coq.Arith.Div2.div2_double_plus_one	40
Coq.Arith.Plus.plus_assoc_reverse	40	1.0.1.0.7.0.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: split; only 1: Nat.nzsimpl; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	6.81969404221	1868
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0.11.0.15	search with cache (only 1: revert m; only 1: intros a Ha; only 1: apply Nat.add_le_mono_l; only 1: trivial).	3.55254292488	2900
Coq.Arith.Plus.plus_le_compat_r	40	0.0.22	search with cache (only 1: induction 1; only 1: now rewrite <- ?Nat.add_le_mono_r; only 1: now right).	1.88357591629	1377
Coq.Arith.Plus.plus_lt_compat_l	40	0.11.2	search with cache (only 1: intros H; only 1: apply Nat.add_lt_mono_l; only 1: trivial).	1.11621403694	483
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.0076060295105	2
Coq.Arith.Plus.plus_lt_compat	40	0.26.21.2	search with cache (only 1: intros Hnm Hpq; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order; only 1: assumption).	10.8396849632	19830
Coq.Arith.Plus.le_plus_l	40	3.3.5.0.1.0.14	search with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intros a Ha; only 1: Nat.nzsimpl; only 1: auto).	6.82094407082	3323
Coq.Arith.Plus.le_plus_r	40	3.11.1.1.44	search with cache (only 1: induction n as [| p H]; only 1: Nat.nzsimpl; only 1: Nat.order; only 1: right; only 1: assumption).	1.82011008263	2828
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	4.2.2.3	search with cache (only 1: Nat.induct n; only 1: intuition; only 1: intro H; only 1: now rewrite <- ?Nat.add_le_mono_r).	1.7188179493	807
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	2.3.0.2.1.0.0.2.6	search with cache (only 1: nzinduct n; only 1: auto; only 1: intro; only 1: split; only 1: Nat.nzsimpl; only 1: auto; only 1: Nat.nzsimpl; only 1: intros Hy; only 1: auto).	18.0350451469	5591
Coq.Arith.Lt.lt_le_S	40	3.0	search with cache (only 1: intro H; only 1: Nat.order).	0.0158319473267	5
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.0100569725037	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.2.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.018709897995	5
Coq.Arith.Lt.le_not_lt	40	4.1	search with cache (only 1: intros LT EQ; only 1: Nat.order).	0.186944961548	50
Coq.Arith.Lt.lt_not_le	40	4.2	search with cache (only 1: intros LT EQ; only 1: Nat.order).	0.174413919449	59
Coq.Arith.Lt.neq_0_lt	40	0.0	search with cache (only 1: intro H; only 1: Nat.auto').	0.0162148475647	2
Coq.Arith.Lt.lt_0_neq	40	0.3.2.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: eauto).	0.0188138484955	9
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply le_n_S).	0.00982284545898	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.00705003738403	1
Coq.Arith.Lt.S_pred	40	2.13.0.1.32.6	search with cache (only 1: intros H; only 1: induction n; only 1: symmetry; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: Morphisms.f_equiv).	36.5940539837	53825
Coq.Arith.Lt.S_pred_pos	40	4.1.27	search with cache (only 1: induction n; only 1: Nat.order; only 1: trivial).	5.68621897697	11742
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	4.1.0.4.0.0	search with cache (only 1: destruct n; only 1: intro H; only 1: trivial; only 1: simpl; only 1: intros H; only 1: auto).	0.619750976562	628
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	15.0852789879	7048
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.324873924255	156
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0061240196228	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00729298591614	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00607681274414	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00692820549011	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40	3.20.17	search with cache (only 1: intros n Hn; only 1: fix gcd_divide 1; only 1: trivial).	8.32693099976	17520
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0332188606262	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	6.4.1.68	search with cache (only 1: induction n; only 1: Nat.order'; only 1: simpl; only 1: intuition).	14.5736789703	10796
Coq.Arith.Factorial.fact_neq_0	40	0.0.1.0.0.2.53	search with cache (only 1: apply Nat.lt_gt_cases; only 1: right; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	14.0702040195	23235
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.848725795746	208
Coq.Arith.Compare_dec.le_lt_dec	40	1.1.3.25.3	search with cache (only 1: left; only 1: revert m; only 1: fix le_div2 1; only 1: intros; only 1: now rewrite <- ?Nat.succ_le_mono).	15.4297759533	18254
Coq.Arith.Compare_dec.le_le_S_dec	40	0.0.3.2.0.0.0.1.2.4	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: destruct (IHn m); only 1: auto with arith; only 1: right; only 1: auto with arith).	3.94764900208	1489
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.54752612114	188
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.220495939255	64
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.0.0.0.1.0.3.1.3.9	search with cache (only 1: revert m; only 1: induction n; only 1: intros n; only 1: auto with arith; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	3.98428297043	2343
Coq.Arith.Compare_dec.lt_dec	40	0.0.0.0.0.0.0.1.0.0.10.0.1	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: destruct (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	2.49714303017	2044
Coq.Arith.Compare_dec.gt_dec	40	0	search with cache (only 1: apply le_dec).	0.00747179985046	1
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00758910179138	2
Coq.Arith.Compare_dec.dec_le	40	1.1.3.27.1	search with cache (only 1: left; only 1: revert m; only 1: fix le_div2 1; only 1: intros; only 1: now rewrite <- ?Nat.succ_le_mono).	3.56749606133	4849
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	1.1.3.28.0.2	search with cache (only 1: right; only 1: apply Nat.le_ngt; only 1: revert m; only 1: fix le_div2 1; only 1: intros; only 1: now rewrite <- ?Nat.succ_le_mono).	16.835351944	11107
Coq.Arith.Compare_dec.dec_ge	40
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0109329223633	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: intuition Nat.order).	0.0128061771393	3
Coq.Arith.Compare_dec.not_gt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.00854396820068	2
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.00915884971619	2
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.nlt_ge).	0.00860786437988	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40	2.6.1.0	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.576234817505	384
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	1.0.0.0.0.0.0.1.1.1	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: destruct m; only 1: auto; only 1: easy; only 1: simpl; only 1: destruct m; only 1: easy; only 1: auto).	1.57597303391	749
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	1	search with cache (only 1: apply Nat.compare_lt_iff).	0.00831699371338	2
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2	search with cache (only 1: apply Nat.compare_gt_iff).	0.00926995277405	3
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	1.6.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.437611818314	123
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0.14.16	search with cache (only 1: revert m; only 1: intro RS'; only 1: apply Nat.leb_le).	2.03813314438	1578
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0200390815735	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.016804933548	3
Coq.Arith.Compare_dec.leb_compare	40	4.4.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.578017950058	210
Coq.Arith.EqNat.eq_nat_refl	40	4.2.34	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	0.422410964966	1198
Coq.Arith.EqNat.eq_nat_is_eq	40	2.8.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	2.14612388611	1276
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0177428722382	6
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.412818193436	145
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.0.0.0.0.0.0.0.0.0.4.5.2	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: left; only 1: simpl; only 1: auto; only 1: now right; only 1: destruct m; only 1: right; only 1: auto; only 1: destruct (IHn m); only 1: auto; only 1: auto).	8.81791996956	6501
Coq.Arith.EqNat.beq_nat_refl	40	7.0.1.1.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: assumption).	0.251133918762	332
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	7.0.0.0.0.0.0.1.0.0.2.10	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: destruct m; only 1: easy; only 1: simpl; only 1: auto).	24.946616888	13001
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.bi_induction	40	16.1.17	search with cache (only 1: induction n; only 1: intuition; only 1: firstorder).	13.1876981258	4360
Coq.Arith.PeanoNat.recursion_wd	40
Coq.Arith.PeanoNat.recursion_0	40	1	search with cache (only 1: destr_bool).	0.0129380226135	2
Coq.Arith.PeanoNat.recursion_succ	40
Coq.Arith.PeanoNat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0169968605042	2
Coq.Arith.PeanoNat.pred_0	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0159840583801	2
Coq.Arith.PeanoNat.one_succ	40	0	search with cache (only 1: auto).	0.0124859809875	1
Coq.Arith.PeanoNat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0123109817505	1
Coq.Arith.PeanoNat.add_0_l	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0175969600677	2
Coq.Arith.PeanoNat.add_succ_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0316038131714	5
Coq.Arith.PeanoNat.sub_0_r	40	0.0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0269711017609	7
Coq.Arith.PeanoNat.sub_succ_r	40	0.0.0.1.0.0.4.12	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct m; only 1: now destruct n; only 1: auto).	7.47108006477	9177
Coq.Arith.PeanoNat.mul_0_l	40	0	search with cache (only 1: auto).	0.0131850242615	1
Coq.Arith.PeanoNat.mul_succ_l	40
Coq.Arith.PeanoNat.lt_succ_r	40
Coq.Arith.PeanoNat.eqb_eq	40
Coq.Arith.PeanoNat.leb_le	40
Coq.Arith.PeanoNat.ltb_lt	40
Coq.Arith.PeanoNat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0185978412628	1
Coq.Arith.PeanoNat.compare_eq_iff	40
Coq.Arith.PeanoNat.compare_lt_iff	40
Coq.Arith.PeanoNat.compare_le_iff	40
Coq.Arith.PeanoNat.compare_antisym	40	2.0.0.3.0.0.0.0.0.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: reflexivity || destruct H; only 1: simpl; only 1: reflexivity || destruct H; only 1: destruct m; only 1: simpl; only 1: split; only 1: simpl; only 1: rewrite ?IHn; only 1: split).	25.8123600483	13976
Coq.Arith.PeanoNat.compare_succ	40	3.2.1	search with cache (only 1: revert m; only 1: simpl; only 1: trivial).	0.304764986038	88
Coq.Arith.PeanoNat.max_l	40	0.0.1.0.0.0.0.1.0.0.0.0.2	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	25.4475557804	10232
Coq.Arith.PeanoNat.max_r	40	0.0.1.0.1.0.0.0.0.0.0.0.3	search with cache (only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	26.9531679153	9849
Coq.Arith.PeanoNat.min_l	40	0.0.1.0.1.0.0.3.0.0.3	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	26.3576619625	10574
Coq.Arith.PeanoNat.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0.4	search with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	19.1930000782	10126
Coq.Arith.PeanoNat.pow_neg_r	40	6.0	search with cache (only 1: intro; only 1: false_hyp H nlt_0_r).	0.0192201137543	8
Coq.Arith.PeanoNat.pow_0_r	40	5	search with cache (only 1: now nzsimpl').	0.0228600502014	6
Coq.Arith.PeanoNat.pow_succ_r	40	3	search with cache (only 1: trivial).	0.0324549674988	20
Coq.Arith.PeanoNat.square_spec	40	1.0.1.0	search with cache (only 1: induction n as [| p H]; only 1: now nzsimpl; only 1: simpl; only 1: split).	0.0433099269867	6
Coq.Arith.PeanoNat.Even_1	40
Coq.Arith.PeanoNat.Even_2	40
Coq.Arith.PeanoNat.Odd_0	40	0.0.57	search with cache (only 1: destruct 1; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	3.88377404213	8331
Coq.Arith.PeanoNat.Odd_2	40	0.1.0.0.0.0.1.0.0.8.0.0.0.0	search with cache (only 1: split; only 1: intros (m, H); only 1: exists (S m); only 1: rewrite H; only 1: nzsimpl; only 1: now rewrite plus_n_Sm; only 1: intros (m, H); only 1: destruct m; only 1: discriminate; only 1: exists m; only 1: simpl in H; only 1: rewrite <- plus_n_Sm in H; only 1: rewrite <- plus_n_Sm in H; only 1: now inversion H).	19.9547901154	9855
Coq.Arith.PeanoNat.even_spec	40
Coq.Arith.PeanoNat.odd_spec	40	4.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.105574846268	38
Coq.Arith.PeanoNat.divmod_spec	40
Coq.Arith.PeanoNat.div_mod	40
Coq.Arith.PeanoNat.mod_bound_pos	40
Coq.Arith.PeanoNat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.sqrt_specif	40
Coq.Arith.PeanoNat.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.0187439918518	2
Coq.Arith.PeanoNat.log2_iter_spec	40
Coq.Arith.PeanoNat.log2_spec	40
Coq.Arith.PeanoNat.log2_nonpos	40	0.5	search with cache (only 1: inversion 1; only 1: now apply pred_0).	0.0984871387482	52
Coq.Arith.PeanoNat.gcd_divide	40
Coq.Arith.PeanoNat.gcd_divide_l	40	4.0.1.0.12.16.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: destr_bool; only 1: now exists 0; only 1: fix gcd_divide 1; only 1: intro n; only 1: auto).	11.7323141098	13036
Coq.Arith.PeanoNat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0174770355225	2
Coq.Arith.PeanoNat.gcd_greatest	40
Coq.Arith.PeanoNat.gcd_nonneg	40	13	search with cache (only 1: apply le_0_l).	0.293475151062	95
Coq.Arith.PeanoNat.div2_double	40	0.2.0.2.6.6.16	search with cache (only 1: simpl; only 1: nzinduct n; only 1: auto; only 1: intro p; only 1: nzsimpl; only 1: simpl; only 1: now rewrite succ_inj_wd).	3.52393221855	1709
Coq.Arith.PeanoNat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.173163890839	7
Coq.Arith.PeanoNat.le_div2	40
Coq.Arith.PeanoNat.lt_div2	40
Coq.Arith.PeanoNat.div2_decr	40	1.26	search with cache (only 1: fix le_div2 1; only 1: trivial).	34.8492019176	29031
Coq.Arith.PeanoNat.double_twice	40	2.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.225708007812	49
Coq.Arith.PeanoNat.testbit_0_l	40	0.0.3.2	search with cache (only 1: induct ltac:(n); only 1: intuition; only 1: intros m H1; only 1: trivial).	0.0469679832458	18
Coq.Arith.PeanoNat.testbit_odd_0	40	5.1.1.10.26.1.4	search with cache (only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: split; only 1: easy; only 1: fix odd_spec 1; only 1: assumption).	31.4500420094	34270
Coq.Arith.PeanoNat.testbit_even_0	40
Coq.Arith.PeanoNat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.testbit_even_succ'	40
Coq.Arith.PeanoNat.shiftr_specif	40
Coq.Arith.PeanoNat.shiftl_specif_high	40	2.0.13	search with cache (only 1: fix gcd_greatest 1; only 1: intros n m p H; only 1: auto with *).	15.0374958515	6854
Coq.Arith.PeanoNat.shiftl_spec_low	40
Coq.Arith.PeanoNat.div2_bitwise	40	3.13.6	search with cache (only 1: intros R L n; only 1: fix odd_spec 1; only 1: auto).	33.8727071285	18712
Coq.Arith.PeanoNat.odd_bitwise	40
Coq.Arith.PeanoNat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.land_spec	40
Coq.Arith.PeanoNat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0238618850708	4
Coq.Arith.PeanoNat.lor_spec	40
Coq.Arith.PeanoNat.lxor_spec	40
Coq.Arith.PeanoNat.div2_spec	40	7	search with cache (only 1: trivial).	0.0205769538879	11
Coq.Arith.PeanoNat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0146658420563	1
Coq.Arith.PeanoNat.tail_add_spec	40
Coq.Arith.PeanoNat.tail_addmul_spec	40
Coq.Arith.PeanoNat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	3.2.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: Nat.order).	0.0306131839752	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00830912590027	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0077600479126	1
Coq.Arith.Gt.gt_S	40	2.0.18	search with cache (only 1: inversion 1; only 1: intuition; only 1: auto with relations).	1.08040690422	1110
Coq.Arith.Gt.gt_pred	40	3.2.2.0.15.7	search with cache (only 1: induction 1; only 1: now constructor; only 1: destruct m; only 1: trivial; only 1: constructor; only 1: trivial).	1.49524998665	3160
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00839114189148	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00752782821655	1
Coq.Arith.Gt.le_S_gt	40	3.0.0.0.0	search with cache (only 1: Nat.cases n; only 1: intro H; only 1: trivial; only 1: intros n IH; only 1: trivial).	0.0377879142761	8
Coq.Arith.Gt.gt_S_le	40	0.1.1.0.2.1	search with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: Nat.order; only 1: Nat.order'; only 1: intro n; only 1: apply Nat.succ_lt_mono).	0.144990921021	77
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0076539516449	1
Coq.Arith.Gt.le_gt_S	40	5	search with cache (only 1: apply Nat.lt_succ_r).	0.0211069583893	12
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00810122489929	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00809979438782	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.2.4	search with cache (only 1: intros A C h1 h2; only 1: destruct 1; only 1: constructor).	0.0172510147095	9
Coq.Logic.JMeq.JMeq_trans	40	1.0.2	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0189440250397	6
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0218780040741	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0212161540985	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0210111141205	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0201640129089	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.019501209259	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0204701423645	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0155019760132	2
Coq.Logic.JMeq.eq_dep_JMeq	40	1.2	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0812349319458	33
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.0.3.1.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_sigT_eq_dep; only 1: reflexivity).	0.0438840389252	16
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.1.0.4.0	search with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: simpl in *; only 1: trivial).	0.0229918956757	10
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.021411895752	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	6.0	search with cache (only 1: intros; only 1: tauto).	0.0121998786926	8
Coq.Logic.Classical_Prop.not_imply_elim	40	0.10	search with cache (only 1: intros n m H1; only 1: tauto).	0.0447580814362	81
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.1.1.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: apply h1; only 1: trivial).	0.0132238864899	6
Coq.Logic.Classical_Prop.imply_to_or	40	1.1.1.8.1	search with cache (only 1: intros A; only 1: intro HnotA; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	0.84668302536	781
Coq.Logic.Classical_Prop.imply_to_and	40	4.1.2.6	search with cache (only 1: intros; only 1: apply NNPP; only 1: apply NNPP; only 1: tauto).	0.765141963959	542
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.00872802734375	1
Coq.Logic.Classical_Prop.not_and_or	40	4.0.0.2	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: intuition).	0.0224769115448	10
Coq.Logic.Classical_Prop.or_not_and	40	8.0	search with cache (only 1: intros; only 1: tauto).	0.041225194931	28
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00880098342896	1
Coq.Logic.Classical_Prop.and_not_or	40	6.0	search with cache (only 1: simple induction 1; only 1: tauto).	0.0480089187622	28
Coq.Logic.Classical_Prop.imply_and_or	40	1	search with cache (only 1: tauto).	0.195479869843	99
Coq.Logic.Classical_Prop.imply_and_or2	40	1	search with cache (only 1: tauto).	0.00949907302856	2
Coq.Logic.Classical_Prop.eq_rect_eq	40
Coq.Logic.Hurkens.Omega	40
Coq.Logic.Hurkens.lemma1	40
Coq.Logic.Hurkens.lemma2	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.strength	40
Coq.Logic.Hurkens.modal	40	0.48	search with cache (only 1: intros [x y]; only 1: eauto).	0.793998003006	3084
Coq.Logic.Hurkens.Forall	40	1.39	search with cache (only 1: red; only 1: eauto).	0.282066822052	898
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.mparadox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.up_down	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.Hurkens.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.15.55.25	search with cache (only 1: intros n m; only 1: intro p; only 1: destruct p; only 1: reflexivity).	6.94219279289	33777
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.2.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.21457195282	86
Coq.Logic.Eqdep_dec.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40	7.29.2	search with cache (only 1: intros Hq Hr; only 1: intuition; only 1: eauto).	1.04151988029	2884
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40	2.16.2	search with cache (only 1: intros; only 1: split; only 1: abstract now inversion 1).	0.536989212036	734
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	49	search with cache (only 1: eauto).	4.20871591568	8435
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.0.0.20.3	search with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: exists f; only 1: auto).	3.53430104256	3657
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	1.0.0.12.2.0.2.4.4.11	search with cache (only 1: compute; only 1: repeat Record.split; only 1: intros A P H; only 1: intro x; only 1: eauto; only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	19.7270231247	30789
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0331158638	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	6.9	search with cache (only 1: compute; only 1: firstorder).	0.196230173111	258
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.3.0.5.0	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.122611045837	135
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	22.4	search with cache (only 1: intros; only 1: apply H).	4.79022908211	4992
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	26.9069108963	15153
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	16.24.12	search with cache (only 1: intuition; only 1: apply H; only 1: firstorder).	5.84973406792	8873
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	2.3.0.0.1	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intro x; only 1: firstorder).	1.69092607498	169
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.0.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: intro x; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.80370092392	453
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	3.12.5.128	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	3.89046311378	39788
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	17.1.1.10.1.15.0.31.4	search with cache (only 1: intros; only 1: red; only 1: intro A; only 1: destruct (H A); only 1: rewrite H0; only 1: constructor; only 1: exact I; only 1: rewrite H0; only 1: auto).	36.5141429901	204876
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	7.0.0.1.11	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.388847112656	1287
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	63.5	search with cache (only 1: intros Ext EM A; only 1: now apply Ext).	1.82332015038	15472
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.2.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0213129520416	7
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	1.4.0.10	search with cache (only 1: destruct 1; only 1: intro all; only 1: destruct H; only 1: trivial).	1.56558489799	2599
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	24.0	search with cache (only 1: unfold not; only 1: CRelationClasses.simpl_crelation).	6.71449804306	9823
Coq.Logic.ProofIrrelevanceFacts.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.subsetT_eq_compat	40	0.0.1.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0392580032349	15
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.extend_ok	40
Coq.Logic.FinFun.extend_f2n	40
Coq.Logic.FinFun.extend_n2f	40
Coq.Logic.FinFun.restrict_f2n	40
Coq.Logic.FinFun.restrict_n2f	40
Coq.Logic.FinFun.extend_surjective	40
Coq.Logic.FinFun.extend_injective	40
Coq.Logic.FinFun.restrict_surjective	40
Coq.Logic.FinFun.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	23.0921280384	10782
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40	22.0.11.79	search with cache (only 1: compute; only 1: pose (A0 := {A : Type & {P : A -> Prop & exists ! x, P x}}); only 1: pose (B0 := fun x : A0 => projT1 x); only 1: eauto).	6.02996301651	8450
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0125069618225	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00844717025757	4
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0107660293579	4
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0119550228119	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0122101306915	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	4.9.0.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.30105805397	326
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00626301765442	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00538611412048	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1	search with cache (only 1: intros A C h1 h2; only 1: intros; only 1: eauto using @functional_extensionality_dep).	0.0754561424255	4
Coq.Logic.HLevels.false_hprop	40	0.16	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0232698917389	126
Coq.Logic.HLevels.true_hprop	40	1.1.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.00887489318848	5
Coq.Logic.HLevels.not_hprop	40	6.0.1.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: contradiction).	0.0664930343628	83
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.11	search with cache (only 1: induction 1; only 1: auto).	0.0294530391693	46
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.7	search with cache (only 1: induction 1; only 1: auto).	0.0151429176331	9
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	2.27.0	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.467517137527	1145
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	2.61	search with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	6.04717898369	23451
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.17	search with cache (only 1: destruct 1; only 1: reflexivity).	0.394327878952	524
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.17.0.0.16.7	search with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	5.37818908691	12656
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0579669475555	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0269658565521	13
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.18.0.0.16.0	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	6.15642595291	12053
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.1.1.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.058051109314	24
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.7.0.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: dependent rewrite H; only 1: reflexivity).	0.448714017868	277
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	30.2.3.11.35	search with cache (only 1: intro x; only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: auto).	5.29473090172	19811
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	5.2.0	search with cache (only 1: intros; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.028694152832	16
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	0.0.0.1.0.6.2	search with cache (only 1: intro eq_rect_eq; only 1: red; only 1: intro; only 1: rewrite <- eq_rect_eq; only 1: trivial; only 1: simpl; only 1: trivial).	0.688413143158	504
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0408368110657	4
Coq.Logic.EqdepFacts.f_eq_dep	40	1.2	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0287511348724	16
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.7	search with cache (only 1: destruct 1; only 1: trivial).	0.0193839073181	16
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.2	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0681700706482	32
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8.0.0	search with cache (only 1: intros Ext A P Q Eq; only 1: intros x; only 1: auto).	0.0556280612946	51
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	5.5.4.71.2.10	search with cache (only 1: intros; only 1: change A with ((fun _ => A) I); only 1: apply H; only 1: split; only 1: auto; only 1: auto).	26.1124658585	147572
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0384929180145	31
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	5.11.8	search with cache (only 1: intros n m; only 1: induction n; only 1: auto).	3.21689295769	4932
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.0.5.4.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: destruct H; only 1: apply H; only 1: apply False_rec; only 1: auto).	0.892141819	2027
Coq.Logic.Decidable.dec_True	40	1.16	search with cache (only 1: unfold decidable; only 1: tauto).	0.0403881072998	147
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.010626077652	2
Coq.Logic.Decidable.dec_or	40	0.0.20	search with cache (only 1: intro z; only 1: unfold decidable; only 1: tauto).	2.02116799355	4275
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0774781703949	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0170679092407	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0218698978424	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0267310142517	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0148208141327	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0133039951324	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0209138393402	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0238029956818	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0193049907684	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0565798282623	2
Coq.Logic.Decidable.not_true_iff	40	0.2.0	search with cache (only 1: split; only 1: tauto; only 1: auto).	0.0152418613434	5
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.0107598304749	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0187740325928	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0420219898224	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.026447057724	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0264730453491	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.025722026825	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0268340110779	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0286729335785	2
Coq.Logic.Decidable.not_or_iff	40	4	search with cache (only 1: tauto).	0.0495889186859	44
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0158720016479	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.032623052597	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0332870483398	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.singleton_spec	40
Coq.MSets.MSetRBT.singleton_ok	40	3	search with cache (only 1: firstorder).	0.045294046402	24
Coq.MSets.MSetRBT.makeBlack_spec	40
Coq.MSets.MSetRBT.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0825078487396	5
Coq.MSets.MSetRBT.makeBlack_ok	40	0.10.0.2.5	search with cache (only 1: destruct H as [H| H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.07086896896	836
Coq.MSets.MSetRBT.makeRed_ok	40
Coq.MSets.MSetRBT.rmatch	40
Coq.MSets.MSetRBT.rrmatch	40
Coq.MSets.MSetRBT.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.979619026184	535
Coq.MSets.MSetRBT.lbal_match	40
Coq.MSets.MSetRBT.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0185470581055	1
Coq.MSets.MSetRBT.rbal'_match	40
Coq.MSets.MSetRBT.lbalS_match	40
Coq.MSets.MSetRBT.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0213098526001	1
Coq.MSets.MSetRBT.lbal_spec	40
Coq.MSets.MSetRBT.lbal_ok	40
Coq.MSets.MSetRBT.rbal_spec	40
Coq.MSets.MSetRBT.rbal_ok	40
Coq.MSets.MSetRBT.rbal'_spec	40
Coq.MSets.MSetRBT.rbal'_ok	40
Coq.MSets.MSetRBT.ins_spec	40
Coq.MSets.MSetRBT.ins_ok	40
Coq.MSets.MSetRBT.add_spec'	40
Coq.MSets.MSetRBT.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0468201637268	2
Coq.MSets.MSetRBT.add_ok	40	2	search with cache (only 1: eauto with *).	0.0660970211029	20
Coq.MSets.MSetRBT.lbalS_spec	40
Coq.MSets.MSetRBT.lbalS_ok	40
Coq.MSets.MSetRBT.rbalS_spec	40
Coq.MSets.MSetRBT.rbalS_ok	40
Coq.MSets.MSetRBT.append_rr_match	40	0.10	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.146764993668	63
Coq.MSets.MSetRBT.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0195019245148	1
Coq.MSets.MSetRBT.append_spec	40
Coq.MSets.MSetRBT.append_ok	40
Coq.MSets.MSetRBT.del_spec	40
Coq.MSets.MSetRBT.del_ok	40
Coq.MSets.MSetRBT.remove_spec	40
Coq.MSets.MSetRBT.remove_ok	40	1.0.2	search with cache (only 1: destruct s; only 1: trivial; only 1: ok).	0.0661180019379	6
Coq.MSets.MSetRBT.delmin_spec	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetRBT.remove_min_ok	40
Coq.MSets.MSetRBT.treeify_zero_spec	40	23	search with cache (only 1: now subst).	0.199815988541	255
Coq.MSets.MSetRBT.treeify_one_spec	40
Coq.MSets.MSetRBT.treeify_cont_spec	40
Coq.MSets.MSetRBT.treeify_aux_spec	40
Coq.MSets.MSetRBT.plength_aux_spec	40
Coq.MSets.MSetRBT.plength_spec	40
Coq.MSets.MSetRBT.treeify_elements	40
Coq.MSets.MSetRBT.treeify_spec	40
Coq.MSets.MSetRBT.treeify_ok	40
Coq.MSets.MSetRBT.filter_aux_elements	40
Coq.MSets.MSetRBT.filter_elements	40
Coq.MSets.MSetRBT.filter_spec	40
Coq.MSets.MSetRBT.filter_ok	40
Coq.MSets.MSetRBT.partition_aux_spec	40
Coq.MSets.MSetRBT.partition_spec	40
Coq.MSets.MSetRBT.partition_spec1	40
Coq.MSets.MSetRBT.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0188829898834	1
Coq.MSets.MSetRBT.partition_ok1	40
Coq.MSets.MSetRBT.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0232820510864	2
Coq.MSets.MSetRBT.INV_init	40
Coq.MSets.MSetRBT.INV_sym	40	35	search with cache (only 1: firstorder).	0.650670051575	1054
Coq.MSets.MSetRBT.INV_drop	40
Coq.MSets.MSetRBT.INV_eq	40
Coq.MSets.MSetRBT.INV_lt	40
Coq.MSets.MSetRBT.INV_rev	40
Coq.MSets.MSetRBT.union_list_ok	40
Coq.MSets.MSetRBT.linear_union_ok	40
Coq.MSets.MSetRBT.fold_add_ok	40
Coq.MSets.MSetRBT.union_ok	40
Coq.MSets.MSetRBT.union_list_spec	40
Coq.MSets.MSetRBT.linear_union_spec	40
Coq.MSets.MSetRBT.fold_add_spec	40
Coq.MSets.MSetRBT.union_spec'	40
Coq.MSets.MSetRBT.union_spec	40	0.1.0.1.1.0.0.4	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	2.81860423088	717
Coq.MSets.MSetRBT.inter_list_ok	40
Coq.MSets.MSetRBT.linear_inter_ok	40
Coq.MSets.MSetRBT.inter_ok	40
Coq.MSets.MSetRBT.inter_list_spec	40
Coq.MSets.MSetRBT.linear_inter_spec	40
Coq.MSets.MSetRBT.mem_proper	40
Coq.MSets.MSetRBT.inter_spec	40
Coq.MSets.MSetRBT.diff_list_ok	40
Coq.MSets.MSetRBT.diff_inter_ok	40
Coq.MSets.MSetRBT.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0584349632263	8
Coq.MSets.MSetRBT.diff_ok	40
Coq.MSets.MSetRBT.diff_list_spec	40
Coq.MSets.MSetRBT.linear_diff_spec	40
Coq.MSets.MSetRBT.fold_remove_spec	40
Coq.MSets.MSetRBT.diff_spec	40
Coq.MSets.MSetRBT.rr_nrr_rb	40	3.0.1.22.5.1	search with cache (only 1: intro H; only 1: inversion H; only 1: destruct l as [| [| ] ll lx lr]; only 1: intuition; only 1: now constructor; only 1: ok).	7.55663919449	7336
Coq.MSets.MSetRBT.arb_nrr_rb	40
Coq.MSets.MSetRBT.arb_nr_rb	40
Coq.MSets.MSetRBT.rb_maxdepth	40
Coq.MSets.MSetRBT.rb_mindepth	40
Coq.MSets.MSetRBT.maxdepth_upperbound	40
Coq.MSets.MSetRBT.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.057088136673	8
Coq.MSets.MSetRBT.singleton_rb	40	20.11.0	search with cache (only 1: unfold singleton; only 1: CRelationClasses.simpl_crelation; only 1: ok).	1.48031783104	2012
Coq.MSets.MSetRBT.makeBlack_rb	40
Coq.MSets.MSetRBT.makeRed_rr	40	0.3.1.1.0.5	search with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	1.09194397926	641
Coq.MSets.MSetRBT.lbal_rb	40
Coq.MSets.MSetRBT.rbal_rb	40
Coq.MSets.MSetRBT.rbal'_rb	40	1.0.0.0.0.0.0.0.0.0.0.3.16	search with cache (only 1: intro H; only 1: case rbal'_match; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intros; only 1: desarb; only 1: invrb; only 1: invrb; only 1: auto; only 1: intuition_in).	17.9821779728	12273
Coq.MSets.MSetRBT.lbalS_rb	40
Coq.MSets.MSetRBT.lbalS_arb	40
Coq.MSets.MSetRBT.rbalS_rb	40
Coq.MSets.MSetRBT.rbalS_arb	40
Coq.MSets.MSetRBT.ifred_notred	40	0.2.0.3.0.3	search with cache (only 1: induction s as [| i l IHl x r IHr]; only 1: simpl_relation; only 1: descolor; only 1: simpl; only 1: destruct 1; only 1: now constructor).	0.948834896088	438
Coq.MSets.MSetRBT.ifred_or	40	0.0.0.0.0.2.0	search with cache (only 1: destruct s; only 1: firstorder; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0576901435852	9
Coq.MSets.MSetRBT.ins_rr_rb	40
Coq.MSets.MSetRBT.ins_arb	40
Coq.MSets.MSetRBT.add_rb	40
Coq.MSets.MSetRBT.append_arb_rb	40
Coq.MSets.MSetRBT.del_arb	40	1.0	search with cache (only 1: invrb; only 1: auto).	0.0302531719208	3
Coq.MSets.MSetRBT.remove_rb	40
Coq.MSets.MSetRBT.treeify_zero_rb	40	6	search with cache (only 1: easy).	0.0315699577332	7
Coq.MSets.MSetRBT.treeify_one_rb	40
Coq.MSets.MSetRBT.treeify_cont_rb	40
Coq.MSets.MSetRBT.treeify_aux_rb	40
Coq.MSets.MSetRBT.treeify_rb	40
Coq.MSets.MSetRBT.filter_rb	40	4.4.0.0.62	search with cache (only 1: destruct s; only 1: unfold filter; only 1: simpl; only 1: auto_tc; only 1: ok).	1.5384888649	3606
Coq.MSets.MSetRBT.partition_rb1	40	0.4.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0925500392914	12
Coq.MSets.MSetRBT.partition_rb2	40	0.0.0.1	search with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0592579841614	22
Coq.MSets.MSetRBT.fold_add_rb	40	0.0.0.1.0.0.0.3.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: intros H'; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.00433421135	349
Coq.MSets.MSetRBT.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.065290927887	10
Coq.MSets.MSetRBT.union_rb	40	1.1.4.0.2.1.0.1	search with cache (only 1: intros; only 1: unfold union; only 1: unfold linear_union; only 1: rewrite !rev_elements_rev; only 1: destruct compare_height; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	1.15227293968	867
Coq.MSets.MSetRBT.inter_rb	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0510158538818	8
Coq.MSets.MSetRBT.diff_rb	40
Coq.MSets.MSetRBT.remove_min_spec1	40
Coq.MSets.MSetRBT.remove_min_spec2	40
Coq.MSets.MSetPositive.In_compat	40	0	search with cache (only 1: solve_proper).	0.0524940490723	1
Coq.MSets.MSetPositive.eq_equiv	40	1.5.32.2.5.0	search with cache (only 1: split; only 1: now subst; only 1: now subst; only 1: repeat red; only 1: intros; only 1: firstorder).	6.24554514885	5786
Coq.MSets.MSetPositive.mem_spec	40	8	search with cache (only 1: easy').	0.072478055954	47
Coq.MSets.MSetPositive.mem_Leaf	40	2	search with cache (only 1: destr_bool).	0.025130033493	12
Coq.MSets.MSetPositive.empty_spec	40	25	search with cache (only 1: now N_as_OT.nzsimpl).	0.122618198395	306
Coq.MSets.MSetPositive.mem_node	40
Coq.MSets.MSetPositive.is_empty_spec	40
Coq.MSets.MSetPositive.subset_Leaf_s	40	9	search with cache (only 1: now discriminate).	0.0364298820496	17
Coq.MSets.MSetPositive.subset_spec	40	13.3.13.14	search with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: intuition).	31.2328720093	20468
Coq.MSets.MSetPositive.equal_subset	40
Coq.MSets.MSetPositive.equal_spec	40
Coq.MSets.MSetPositive.eq_dec	40
Coq.MSets.MSetPositive.lex_Opp	40
Coq.MSets.MSetPositive.compare_bool_inv	40	5.0.4	search with cache (only 1: intros a m; only 1: revert m; only 1: destr_bool).	1.03249001503	267
Coq.MSets.MSetPositive.compare_inv	40
Coq.MSets.MSetPositive.lex_Eq	40
Coq.MSets.MSetPositive.compare_bool_Eq	40	4.0.0.4.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	2.90595817566	617
Coq.MSets.MSetPositive.compare_equal	40
Coq.MSets.MSetPositive.compare_gt	40
Coq.MSets.MSetPositive.compare_eq	40
Coq.MSets.MSetPositive.compare_spec	40
Coq.MSets.MSetPositive.ct_cxe	40	6.16	search with cache (only 1: fix le_div2 1; only 1: trivial).	0.444664001465	307
Coq.MSets.MSetPositive.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0311150550842	4
Coq.MSets.MSetPositive.ct_lxl	40	10.0.0.85.0	search with cache (only 1: intros n; only 1: induction n; only 1: constructor; only 1: constructor; only 1: constructor).	8.88242101669	17919
Coq.MSets.MSetPositive.ct_gxg	40	7.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.11953997612	47
Coq.MSets.MSetPositive.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0289618968964	4
Coq.MSets.MSetPositive.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0289239883423	4
Coq.MSets.MSetPositive.ct_lex	40
Coq.MSets.MSetPositive.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	0.0551910400391	10
Coq.MSets.MSetPositive.compare_x_Leaf	40	0.0.0.2.6	search with cache (only 1: intros; only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: trivial; only 1: auto).	0.301367998123	99
Coq.MSets.MSetPositive.compare_empty_x	40
Coq.MSets.MSetPositive.compare_x_empty	40
Coq.MSets.MSetPositive.ct_compare	40	2.1.36	search with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: auto).	32.8138639927	36260
Coq.MSets.MSetPositive.lt_strorder	40
Coq.MSets.MSetPositive.compare_compat_1	40
Coq.MSets.MSetPositive.compare_compat	40
Coq.MSets.MSetPositive.lt_compat	40
Coq.MSets.MSetPositive.add_spec	40
Coq.MSets.MSetPositive.remove_spec	40
Coq.MSets.MSetPositive.singleton_spec	40
Coq.MSets.MSetPositive.union_spec	40
Coq.MSets.MSetPositive.inter_spec	40
Coq.MSets.MSetPositive.diff_spec	40
Coq.MSets.MSetPositive.fold_spec	40
Coq.MSets.MSetPositive.cardinal_spec	40
Coq.MSets.MSetPositive.xfilter_spec	40
Coq.MSets.MSetPositive.filter_spec	40	2.15	search with cache (only 1: fix even_spec 1; only 1: intuition).	4.33475899696	1928
Coq.MSets.MSetPositive.xforall_spec	40
Coq.MSets.MSetPositive.for_all_spec	40
Coq.MSets.MSetPositive.xexists_spec	40
Coq.MSets.MSetPositive.exists_spec	40	0.16.13	search with cache (only 1: unfold E.eq, E.lt; only 1: fix even_spec 1; only 1: intuition congruence).	5.7952940464	3942
Coq.MSets.MSetPositive.partition_filter	40
Coq.MSets.MSetPositive.partition_spec1	40
Coq.MSets.MSetPositive.partition_spec2	40	1.0.16.3	search with cache (only 1: intro H; only 1: intros x y; only 1: rewrite partition_filter; only 1: reflexivity).	3.23357105255	2996
Coq.MSets.MSetPositive.xelements_spec	40
Coq.MSets.MSetPositive.elements_spec1	40	3.5	search with cache (only 1: fix gcd_divide 1; only 1: eauto).	0.0704679489136	39
Coq.MSets.MSetPositive.lt_rev_append	40	2.12	search with cache (only 1: fix gcd_greatest 1; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	0.424806833267	258
Coq.MSets.MSetPositive.elements_spec2	40
Coq.MSets.MSetPositive.elements_spec2w	40
Coq.MSets.MSetPositive.choose_spec1	40
Coq.MSets.MSetPositive.choose_spec2	40
Coq.MSets.MSetPositive.choose_empty	40
Coq.MSets.MSetPositive.choose_spec3'	40
Coq.MSets.MSetPositive.choose_spec3	40
Coq.MSets.MSetPositive.min_elt_spec1	40
Coq.MSets.MSetPositive.min_elt_spec3	40
Coq.MSets.MSetPositive.min_elt_spec2	40
Coq.MSets.MSetPositive.max_elt_spec1	40
Coq.MSets.MSetPositive.max_elt_spec3	40
Coq.MSets.MSetPositive.max_elt_spec2	40
Coq.MSets.MSetFacts.In_1	40
Coq.MSets.MSetFacts.mem_1	40
Coq.MSets.MSetFacts.mem_2	40	0.0.26	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.648822784424	1397
Coq.MSets.MSetFacts.equal_1	40
Coq.MSets.MSetFacts.equal_2	40
Coq.MSets.MSetFacts.subset_1	40
Coq.MSets.MSetFacts.subset_2	40
Coq.MSets.MSetFacts.is_empty_1	40
Coq.MSets.MSetFacts.is_empty_2	40
Coq.MSets.MSetFacts.add_1	40
Coq.MSets.MSetFacts.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.119001865387	3
Coq.MSets.MSetFacts.add_3	40
Coq.MSets.MSetFacts.remove_1	40
Coq.MSets.MSetFacts.remove_2	40	0.2.7	search with cache (only 1: intro H; only 1: rewrite remove_spec; only 1: intuition).	0.132079839706	87
Coq.MSets.MSetFacts.remove_3	40
Coq.MSets.MSetFacts.singleton_1	40
Coq.MSets.MSetFacts.singleton_2	40	2.0.0	search with cache (only 1: intros E; only 1: rewrite singleton_spec; only 1: auto with relations).	0.0174589157104	5
Coq.MSets.MSetFacts.union_1	40
Coq.MSets.MSetFacts.union_2	40
Coq.MSets.MSetFacts.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0165450572968	2
Coq.MSets.MSetFacts.inter_1	40
Coq.MSets.MSetFacts.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0158178806305	2
Coq.MSets.MSetFacts.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: auto).	0.0191168785095	2
Coq.MSets.MSetFacts.diff_1	40
Coq.MSets.MSetFacts.diff_2	40
Coq.MSets.MSetFacts.diff_3	40
Coq.MSets.MSetFacts.filter_1	40
Coq.MSets.MSetFacts.filter_2	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0275020599365	4
Coq.MSets.MSetFacts.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.104616165161	4
Coq.MSets.MSetFacts.for_all_1	40
Coq.MSets.MSetFacts.for_all_2	40
Coq.MSets.MSetFacts.exists_1	40
Coq.MSets.MSetFacts.exists_2	40
Coq.MSets.MSetFacts.elements_1	40
Coq.MSets.MSetFacts.elements_2	40
Coq.MSets.MSetFacts.In_eq_iff	40	7.19.3	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: rewrite H; only 1: auto).	2.51113200188	3411
Coq.MSets.MSetFacts.mem_iff	40	1.0.0.0.2.1	search with cache (only 1: symmetry; only 1: split; only 1: intros; only 1: apply -> mem_spec; only 1: auto; only 1: apply <- mem_spec).	0.0365748405457	11
Coq.MSets.MSetFacts.not_mem_iff	40	3.6.39	search with cache (only 1: Ndec.eqb2eq; only 1: symmetry; only 1: intuition).	3.22259902954	5943
Coq.MSets.MSetFacts.equal_iff	40	6.0	search with cache (only 1: symmetry; only 1: intuition).	0.152415990829	31
Coq.MSets.MSetFacts.subset_iff	40	4	search with cache (only 1: intuition).	0.0200819969177	5
Coq.MSets.MSetFacts.empty_iff	40
Coq.MSets.MSetFacts.is_empty_iff	40	0.0.0.1.4	search with cache (only 1: split; only 1: apply <- is_empty_spec; only 1: intros; only 1: apply -> is_empty_spec; only 1: auto).	0.158937931061	37
Coq.MSets.MSetFacts.singleton_iff	40	0.0.0.0.2	search with cache (only 1: split; only 1: rewrite singleton_spec; only 1: auto with relations; only 1: rewrite singleton_spec; only 1: auto with relations).	0.0303280353546	7
Coq.MSets.MSetFacts.add_iff	40
Coq.MSets.MSetFacts.add_neq_iff	40	0.0.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.113399982452	6
Coq.MSets.MSetFacts.remove_iff	40	0.1.5.2.0.15	search with cache (only 1: case_eq (Fin.eqb x y); only 1: rewrite remove_spec; only 1: intros; only 1: intuition; only 1: rewrite remove_spec; only 1: intuition).	7.63339304924	7923
Coq.MSets.MSetFacts.remove_neq_iff	40	0.0.1.0.0.6	search with cache (only 1: split; only 1: rewrite remove_spec; only 1: intuition; only 1: intros; only 1: apply <- remove_spec; only 1: auto with relations).	0.480607032776	209
Coq.MSets.MSetFacts.for_all_iff	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.027615070343	2
Coq.MSets.MSetFacts.exists_iff	40	15	search with cache (only 1: intuition).	0.269547939301	232
Coq.MSets.MSetFacts.elements_iff	40	3	search with cache (only 1: intuition).	0.0132830142975	4
Coq.MSets.MSetFacts.mem_b	40
Coq.MSets.MSetFacts.empty_b	40
Coq.MSets.MSetFacts.add_b	40
Coq.MSets.MSetFacts.add_neq_b	40	0.0.0.0.0.0.2.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.855926990509	96
Coq.MSets.MSetFacts.remove_b	40
Coq.MSets.MSetFacts.remove_neq_b	40
Coq.MSets.MSetFacts.singleton_b	40
Coq.MSets.MSetFacts.union_b	40
Coq.MSets.MSetFacts.inter_b	40
Coq.MSets.MSetFacts.diff_b	40
Coq.MSets.MSetFacts.elements_b	40
Coq.MSets.MSetFacts.filter_b	40
Coq.MSets.MSetFacts.for_all_b	40
Coq.MSets.MSetFacts.exists_b	40
Coq.MSets.MSetFacts.In_m	40
Coq.MSets.MSetFacts.Empty_m	40	15	search with cache (only 1: firstorder).	0.407039880753	165
Coq.MSets.MSetFacts.is_empty_m	40
Coq.MSets.MSetFacts.mem_m	40
Coq.MSets.MSetFacts.singleton_m	40
Coq.MSets.MSetFacts.add_m	40
Coq.MSets.MSetFacts.remove_m	40
Coq.MSets.MSetFacts.union_m	40
Coq.MSets.MSetFacts.inter_m	40
Coq.MSets.MSetFacts.diff_m	40
Coq.MSets.MSetFacts.Subset_m	40	14	search with cache (only 1: firstorder).	1.96383404732	645
Coq.MSets.MSetFacts.subset_m	40
Coq.MSets.MSetFacts.equal_m	40
Coq.MSets.MSetFacts.SubsetSetoid	40	1.2.1.54	search with cache (only 1: split; only 1: firstorder; only 1: intros x x' Hx s s' Hs; only 1: eauto).	1.25778412819	1940
Coq.MSets.MSetFacts.In_s_m	40	0.8.13.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite H; only 1: intros P; only 1: auto).	25.5491979122	4886
Coq.MSets.MSetFacts.Empty_s_m	40	12.0.2.0	search with cache (only 1: repeat red; only 1: intros y0 z D H0 H1; only 1: intros; only 1: firstorder).	1.08363509178	1127
Coq.MSets.MSetFacts.add_s_m	40
Coq.MSets.MSetFacts.remove_s_m	40	0.1.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.124871015549	4
Coq.MSets.MSetFacts.union_s_m	40	2.0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intros; only 1: tauto).	0.0456020832062	6
Coq.MSets.MSetFacts.inter_s_m	40
Coq.MSets.MSetFacts.diff_s_m	40	0.1.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite diff_spec; only 1: intuition).	0.0834059715271	21
Coq.MSets.MSetFacts.filter_equal	40	0.0.1.0.10.0.10	search with cache (only 1: simpl_relation; only 1: rewrite filter_spec; only 1: rewrite H0; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition; only 1: intuition).	7.39141392708	3001
Coq.MSets.MSetFacts.filter_subset	40	0.0.0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite filter_spec; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition; only 1: intuition).	0.0549440383911	5
Coq.MSets.MSetFacts.filter_ext	40
Coq.MSets.MSetProperties.In_dec	40	0.0.0.15.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	5.46672701836	1614
Coq.MSets.MSetProperties.Add_Equal	40	4.5.1.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: fix even_spec 1; only 1: intuition).	0.552901983261	305
Coq.MSets.MSetProperties.equal_refl	40	12	search with cache (only 1: intuition).	0.100738048553	88
Coq.MSets.MSetProperties.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0529689788818	1
Coq.MSets.MSetProperties.equal_trans	40
Coq.MSets.MSetProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0345680713654	1
Coq.MSets.MSetProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0796480178833	1
Coq.MSets.MSetProperties.subset_antisym	40	12.29	search with cache (only 1: intros Hb; only 1: fsetdec).	1.99516797066	3437
Coq.MSets.MSetProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0478157997131	1
Coq.MSets.MSetProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0366251468658	1
Coq.MSets.MSetProperties.subset_remove_3	40	0.1	search with cache (only 1: intros; only 1: fsetdec).	0.0752902030945	3
Coq.MSets.MSetProperties.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0624129772186	1
Coq.MSets.MSetProperties.subset_add_3	40	4.0.0	search with cache (only 1: intuition; only 1: red; only 1: fsetdec).	0.111226797104	13
Coq.MSets.MSetProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0532319545746	1
Coq.MSets.MSetProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.0501430034637	1
Coq.MSets.MSetProperties.double_inclusion	40	0.0.5.9	search with cache (only 1: split; only 1: intros ->; only 1: fsetdec; only 1: fsetdec).	0.818598985672	330
Coq.MSets.MSetProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0682241916656	1
Coq.MSets.MSetProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0548439025879	1
Coq.MSets.MSetProperties.add_equal	40	1	search with cache (only 1: fsetdec).	0.0969569683075	11
Coq.MSets.MSetProperties.add_add	40	1.4.29	search with cache (only 1: constructor; only 1: fsetdec; only 1: fsetdec).	0.571912050247	680
Coq.MSets.MSetProperties.remove_equal	40	0	search with cache (only 1: fsetdec).	0.112614154816	1
Coq.MSets.MSetProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.13006901741	1
Coq.MSets.MSetProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.132750988007	1
Coq.MSets.MSetProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.144882917404	1
Coq.MSets.MSetProperties.singleton_equal_add	40	22.0.2	search with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: fsetdec; only 1: fsetdec).	1.0371029377	826
Coq.MSets.MSetProperties.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.276669025421	2
Coq.MSets.MSetProperties.union_sym	40	0	search with cache (only 1: intuition fsetdec).	0.0946369171143	1
Coq.MSets.MSetProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0745949745178	1
Coq.MSets.MSetProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.112194061279	1
Coq.MSets.MSetProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.114029884338	1
Coq.MSets.MSetProperties.union_assoc	40	6.11	search with cache (only 1: intros EQ; only 1: fsetdec).	0.367939949036	188
Coq.MSets.MSetProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0997979640961	1
Coq.MSets.MSetProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.174359083176	1
Coq.MSets.MSetProperties.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.297125101089	1
Coq.MSets.MSetProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.269622802734	1
Coq.MSets.MSetProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0447289943695	1
Coq.MSets.MSetProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0442631244659	1
Coq.MSets.MSetProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0670168399811	1
Coq.MSets.MSetProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0697450637817	1
Coq.MSets.MSetProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0725159645081	1
Coq.MSets.MSetProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0742359161377	1
Coq.MSets.MSetProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0780220031738	1
Coq.MSets.MSetProperties.not_in_union	40	0.0	search with cache (only 1: intuition; only 1: fsetdec).	0.167717933655	2
Coq.MSets.MSetProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0898978710175	1
Coq.MSets.MSetProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0794730186462	1
Coq.MSets.MSetProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.102779865265	1
Coq.MSets.MSetProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.102969884872	1
Coq.MSets.MSetProperties.inter_assoc	40	7.0.18	search with cache (only 1: intros EQ; only 1: generalize (mem_iff s x); only 1: fsetdec).	1.6548500061	494
Coq.MSets.MSetProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.184548854828	1
Coq.MSets.MSetProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.202532052994	1
Coq.MSets.MSetProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.167932033539	1
Coq.MSets.MSetProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.141376972198	1
Coq.MSets.MSetProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0610899925232	1
Coq.MSets.MSetProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0593121051788	1
Coq.MSets.MSetProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0450260639191	1
Coq.MSets.MSetProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0455369949341	1
Coq.MSets.MSetProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0571329593658	1
Coq.MSets.MSetProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0674011707306	1
Coq.MSets.MSetProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0801770687103	1
Coq.MSets.MSetProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0498578548431	1
Coq.MSets.MSetProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.113736152649	1
Coq.MSets.MSetProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.113298177719	1
Coq.MSets.MSetProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.16365981102	1
Coq.MSets.MSetProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.143533945084	1
Coq.MSets.MSetProperties.Add_add	40	1.1.2	search with cache (only 1: unfold Add; only 1: intro n; only 1: fsetdec).	0.736471891403	124
Coq.MSets.MSetProperties.Add_remove	40	4.6	search with cache (only 1: red; only 1: fsetdec).	0.435968160629	56
Coq.MSets.MSetProperties.union_Add	40
Coq.MSets.MSetProperties.inter_Add	40
Coq.MSets.MSetProperties.union_Equal	40	0.1.2	search with cache (only 1: intros E; only 1: expAdd; only 1: fsetdec).	0.418992996216	6
Coq.MSets.MSetProperties.inter_Add_2	40
Coq.MSets.MSetProperties.elements_Empty	40
Coq.MSets.MSetProperties.elements_empty	40
Coq.MSets.MSetProperties.of_list_1	40
Coq.MSets.MSetProperties.of_list_2	40
Coq.MSets.MSetProperties.of_list_3	40
Coq.MSets.MSetProperties.fold_spec_right	40
Coq.MSets.MSetProperties.fold_rec	40
Coq.MSets.MSetProperties.fold_rec_bis	40
Coq.MSets.MSetProperties.fold_rec_nodep	40	9.0.0.17.0.8	search with cache (only 1: intros a b; only 1: intro H; only 1: intros n m Hn; only 1: apply fold_rec; only 1: eauto; only 1: firstorder).	9.24163889885	14584
Coq.MSets.MSetProperties.fold_rec_weak	40
Coq.MSets.MSetProperties.fold_rel	40
Coq.MSets.MSetProperties.set_induction	40
Coq.MSets.MSetProperties.set_induction_bis	40
Coq.MSets.MSetProperties.fold_identity	40
Coq.MSets.MSetProperties.fold_0	40
Coq.MSets.MSetProperties.fold_1	40
Coq.MSets.MSetProperties.fold_2	40
Coq.MSets.MSetProperties.fold_1b	40	1.4.1.11.1.0	search with cache (only 1: intros a n m H; only 1: apply fold_rec_bis; only 1: intros x y z H1 H2; only 1: now rewrite <- H1; only 1: trivial; only 1: fsetdec).	19.0196998119	4465
Coq.MSets.MSetProperties.fold_commutes	40
Coq.MSets.MSetProperties.fold_init	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.fold_empty	40
Coq.MSets.MSetProperties.fold_add	40	7.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: eauto with *).	9.74393987656	2297
Coq.MSets.MSetProperties.add_fold	40
Coq.MSets.MSetProperties.remove_fold_1	40
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0469889640808	3
Coq.MSets.MSetProperties.fold_union_inter	40
Coq.MSets.MSetProperties.fold_diff_inter	40
Coq.MSets.MSetProperties.fold_union	40
Coq.MSets.MSetProperties.fold_plus	40
Coq.MSets.MSetProperties.cardinal_fold	40
Coq.MSets.MSetProperties.cardinal_0	40
Coq.MSets.MSetProperties.cardinal_1	40
Coq.MSets.MSetProperties.cardinal_2	40
Coq.MSets.MSetProperties.cardinal_Empty	40
Coq.MSets.MSetProperties.cardinal_inv_1	40
Coq.MSets.MSetProperties.cardinal_inv_2	40
Coq.MSets.MSetProperties.cardinal_inv_2b	40
Coq.MSets.MSetProperties.Equal_cardinal	40
Coq.MSets.MSetProperties.cardinal_m	40
Coq.MSets.MSetProperties.empty_cardinal	40
Coq.MSets.MSetProperties.singleton_cardinal	40
Coq.MSets.MSetProperties.diff_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal	40
Coq.MSets.MSetProperties.subset_cardinal_lt	40
Coq.MSets.MSetProperties.union_inter_cardinal	40
Coq.MSets.MSetProperties.union_cardinal_inter	40
Coq.MSets.MSetProperties.union_cardinal_le	40
Coq.MSets.MSetProperties.add_cardinal_1	40	1.0	search with cache (only 1: symmetry; only 1: auto with set).	0.0365450382233	3
Coq.MSets.MSetProperties.add_cardinal_2	40	2.0.0.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto with set).	0.0810508728027	11
Coq.MSets.MSetProperties.remove_cardinal_1	40	0.0.1.10.4	search with cache (only 1: intros m; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: eauto with set relations; only 1: eauto).	3.2323539257	2234
Coq.MSets.MSetProperties.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.137850999832	29
Coq.MSets.MSetProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.gtb_1	40
Coq.MSets.MSetProperties.leb_1	40
Coq.MSets.MSetProperties.gtb_compat	40
Coq.MSets.MSetProperties.leb_compat	40
Coq.MSets.MSetProperties.elements_split	40
Coq.MSets.MSetProperties.elements_Add	40
Coq.MSets.MSetProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.set_induction_max	40
Coq.MSets.MSetProperties.set_induction_min	40
Coq.MSets.MSetProperties.fold_3	40
Coq.MSets.MSetProperties.fold_4	40
Coq.MSets.MSetProperties.fold_equal	40
Coq.MSets.MSetProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0433211326599	3
Coq.MSets.MSetProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0466120243073	3
Coq.MSets.MSetProperties.choose_equal	40
Coq.MSets.MSetAVL.singleton_spec	40
Coq.MSets.MSetAVL.singleton_ok	40	19	search with cache (only 1: intuition).	0.0617668628693	165
Coq.MSets.MSetAVL.create_spec	40	0.14.0	search with cache (only 1: intros; only 1: compute; only 1: intuition_in).	2.81122589111	972
Coq.MSets.MSetAVL.create_ok	40	0.0.3.1.8	search with cache (only 1: constructor; only 1: now auto; only 1: auto with sets; only 1: ok; only 1: ok).	2.11308884621	153
Coq.MSets.MSetAVL.bal_spec	40
Coq.MSets.MSetAVL.bal_ok	40
Coq.MSets.MSetAVL.add_spec'	40
Coq.MSets.MSetAVL.add_spec	40
Coq.MSets.MSetAVL.add_ok	40
Coq.MSets.MSetAVL.join_spec	40
Coq.MSets.MSetAVL.join_ok	40
Coq.MSets.MSetAVL.remove_min_spec	40
Coq.MSets.MSetAVL.remove_min_ok	40
Coq.MSets.MSetAVL.remove_min_gt_tree	40
Coq.MSets.MSetAVL.merge_spec	40
Coq.MSets.MSetAVL.merge_ok	40
Coq.MSets.MSetAVL.remove_spec	40
Coq.MSets.MSetAVL.remove_ok	40
Coq.MSets.MSetAVL.concat_spec	40
Coq.MSets.MSetAVL.concat_ok	40
Coq.MSets.MSetAVL.split_spec1	40
Coq.MSets.MSetAVL.split_spec2	40
Coq.MSets.MSetAVL.split_spec3	40
Coq.MSets.MSetAVL.split_ok	40
Coq.MSets.MSetAVL.split_ok1	40
Coq.MSets.MSetAVL.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0250098705292	4
Coq.MSets.MSetAVL.inter_spec_ok	40
Coq.MSets.MSetAVL.inter_spec	40
Coq.MSets.MSetAVL.inter_ok	40
Coq.MSets.MSetAVL.diff_spec_ok	40
Coq.MSets.MSetAVL.diff_spec	40
Coq.MSets.MSetAVL.diff_ok	40
Coq.MSets.MSetAVL.union_spec	40
Coq.MSets.MSetAVL.union_ok	40
Coq.MSets.MSetAVL.filter_spec	40
Coq.MSets.MSetAVL.filter_weak_spec	40
Coq.MSets.MSetAVL.filter_ok	40
Coq.MSets.MSetAVL.partition_spec1'	40
Coq.MSets.MSetAVL.partition_spec2'	40
Coq.MSets.MSetAVL.partition_spec1	40
Coq.MSets.MSetAVL.partition_spec2	40
Coq.MSets.MSetAVL.partition_ok1	40
Coq.MSets.MSetAVL.partition_ok2	40
Coq.MSets.MSetEqProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.106975078583	9
Coq.MSets.MSetEqProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.subset_mem_2	40
Coq.MSets.MSetEqProperties.empty_mem	40
Coq.MSets.MSetEqProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.choose_mem_1	40	1.1.0.1.2	search with cache (only 1: intros; only 1: apply <- mem_spec; only 1: apply -> mem_spec; only 1: apply <- mem_spec; only 1: intuition).	0.0628480911255	11
Coq.MSets.MSetEqProperties.choose_mem_2	40	2.4	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	0.504983901978	27
Coq.MSets.MSetEqProperties.add_mem_1	40	0.0.0.0.0.0.2.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.252218008041	10
Coq.MSets.MSetEqProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.111463069916	9
Coq.MSets.MSetEqProperties.remove_mem_1	40	0.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0330049991608	6
Coq.MSets.MSetEqProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.111303091049	9
Coq.MSets.MSetEqProperties.singleton_equal_add	40	8.11	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.414113044739	432
Coq.MSets.MSetEqProperties.union_mem	40
Coq.MSets.MSetEqProperties.inter_mem	40	0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	27.6818261147	3827
Coq.MSets.MSetEqProperties.diff_mem	40
Coq.MSets.MSetEqProperties.mem_3	40	0.1.0	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.0372970104218	4
Coq.MSets.MSetEqProperties.mem_4	40	0.4.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto).	0.541455030441	150
Coq.MSets.MSetEqProperties.equal_refl	40	10	search with cache (only 1: intuition).	0.0803229808807	48
Coq.MSets.MSetEqProperties.equal_sym	40
Coq.MSets.MSetEqProperties.equal_trans	40
Coq.MSets.MSetEqProperties.equal_equal	40	1.1.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0493080615997	6
Coq.MSets.MSetEqProperties.equal_cardinal	40	5.0	search with cache (only 1: intros; only 1: auto with set).	0.0586040019989	15
Coq.MSets.MSetEqProperties.subset_refl	40	7	search with cache (only 1: auto with set).	0.033411026001	11
Coq.MSets.MSetEqProperties.subset_antisym	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.037544965744	3
Coq.MSets.MSetEqProperties.subset_trans	40
Coq.MSets.MSetEqProperties.subset_equal	40	2.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0453200340271	6
Coq.MSets.MSetEqProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.add_mem_3	40	2	search with cache (only 1: auto with set).	0.110401153564	3
Coq.MSets.MSetEqProperties.add_equal	40	2.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0383989810944	5
Coq.MSets.MSetEqProperties.remove_mem_3	40	4.0	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	0.620491981506	128
Coq.MSets.MSetEqProperties.remove_equal	40
Coq.MSets.MSetEqProperties.add_remove	40
Coq.MSets.MSetEqProperties.remove_add	40	2.3.9	search with cache (only 1: generalize (empty_iff y), (mem_iff empty y); only 1: rewrite <- not_mem_iff; only 1: intuition).	1.90498995781	610
Coq.MSets.MSetEqProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.singleton_mem_1	40	0.0.0.0	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0791301727295	4
Coq.MSets.MSetEqProperties.singleton_mem_2	40	0.0.2.3	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.696302890778	113
Coq.MSets.MSetEqProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.union_sym	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0724368095398	3
Coq.MSets.MSetEqProperties.union_subset_equal	40	4.13	search with cache (only 1: intros; only 1: auto with set).	0.258821964264	184
Coq.MSets.MSetEqProperties.union_equal_1	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0440039634705	4
Coq.MSets.MSetEqProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0263419151306	1
Coq.MSets.MSetEqProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0268349647522	1
Coq.MSets.MSetEqProperties.add_union_singleton	40	0	search with cache (only 1: auto with set).	0.0255839824677	1
Coq.MSets.MSetEqProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0263109207153	1
Coq.MSets.MSetEqProperties.union_subset_1	40	0.1	search with cache (only 1: apply <- subset_spec; only 1: Dec.fsetdec).	0.0452308654785	3
Coq.MSets.MSetEqProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.024444103241	1
Coq.MSets.MSetEqProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0739810466766	2
Coq.MSets.MSetEqProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0264911651611	1
Coq.MSets.MSetEqProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0276579856873	1
Coq.MSets.MSetEqProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0265939235687	1
Coq.MSets.MSetEqProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0258638858795	1
Coq.MSets.MSetEqProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0261948108673	1
Coq.MSets.MSetEqProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0277850627899	1
Coq.MSets.MSetEqProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0259280204773	1
Coq.MSets.MSetEqProperties.inter_add_1	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0332250595093	2
Coq.MSets.MSetEqProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0246319770813	1
Coq.MSets.MSetEqProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0250570774078	1
Coq.MSets.MSetEqProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.123529911041	4
Coq.MSets.MSetEqProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0253069400787	1
Coq.MSets.MSetEqProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0306060314178	1
Coq.MSets.MSetEqProperties.remove_inter_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0997459888458	3
Coq.MSets.MSetEqProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0241868495941	1
Coq.MSets.MSetEqProperties.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0280020236969	2
Coq.MSets.MSetEqProperties.set_rec	40
Coq.MSets.MSetEqProperties.exclusive_set	40
Coq.MSets.MSetEqProperties.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0448911190033	2
Coq.MSets.MSetEqProperties.fold_equal	40	0.0.0.0.1.3.4	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	11.3392410278	2684
Coq.MSets.MSetEqProperties.fold_add	40
Coq.MSets.MSetEqProperties.add_fold	40
Coq.MSets.MSetEqProperties.remove_fold_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	0.154036045074	8
Coq.MSets.MSetEqProperties.remove_fold_2	40
Coq.MSets.MSetEqProperties.fold_union	40
Coq.MSets.MSetEqProperties.add_cardinal_1	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.0332059860229	7
Coq.MSets.MSetEqProperties.add_cardinal_2	40
Coq.MSets.MSetEqProperties.remove_cardinal_1	40	0.0.0.4.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.353584051132	153
Coq.MSets.MSetEqProperties.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.union_cardinal	40
Coq.MSets.MSetEqProperties.subset_cardinal	40	0.0	search with cache (only 1: intros; only 1: auto with set).	0.0383560657501	2
Coq.MSets.MSetEqProperties.Comp'	40	17	search with cache (only 1: solve_proper).	0.473165988922	126
Coq.MSets.MSetEqProperties.filter_mem	40
Coq.MSets.MSetEqProperties.for_all_filter	40
Coq.MSets.MSetEqProperties.exists_filter	40
Coq.MSets.MSetEqProperties.partition_filter_1	40	14	search with cache (only 1: firstorder).	1.30674505234	747
Coq.MSets.MSetEqProperties.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0309820175171	1
Coq.MSets.MSetEqProperties.filter_add_1	40
Coq.MSets.MSetEqProperties.filter_add_2	40
Coq.MSets.MSetEqProperties.add_filter_1	40
Coq.MSets.MSetEqProperties.add_filter_2	40
Coq.MSets.MSetEqProperties.union_filter	40
Coq.MSets.MSetEqProperties.filter_union	40
Coq.MSets.MSetEqProperties.for_all_mem_1	40	9.0.0.0.6	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intuition).	2.89902997017	1105
Coq.MSets.MSetEqProperties.for_all_mem_2	40
Coq.MSets.MSetEqProperties.for_all_mem_3	40
Coq.MSets.MSetEqProperties.for_all_mem_4	40	0.50.64	search with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: auto).	39.3775517941	63960
Coq.MSets.MSetEqProperties.for_all_exists	40
Coq.MSets.MSetEqProperties.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0493710041046	4
Coq.MSets.MSetEqProperties.exists_mem_1	40
Coq.MSets.MSetEqProperties.exists_mem_2	40
Coq.MSets.MSetEqProperties.exists_mem_3	40
Coq.MSets.MSetEqProperties.exists_mem_4	40
Coq.MSets.MSetEqProperties.sum_plus	40
Coq.MSets.MSetEqProperties.sum_filter	40
Coq.MSets.MSetEqProperties.fold_compat	40
Coq.MSets.MSetEqProperties.sum_compat	40
Coq.MSets.MSetDecide.test_push	40	2.0	search with cache (only 1: intros; only 1: trivial).	0.0200259685516	4
Coq.MSets.MSetDecide.test_pull	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.465561151505	2
Coq.MSets.MSetDecide.eq_refl_iff	40	14	search with cache (only 1: easy).	0.040363073349	75
Coq.MSets.MSetDecide.dec_In	40
Coq.MSets.MSetDecide.dec_eq	40
Coq.MSets.MSetDecide.test_eq_trans_1	40
Coq.MSets.MSetDecide.test_eq_trans_2	40
Coq.MSets.MSetDecide.test_eq_neq_trans_1	40
Coq.MSets.MSetDecide.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.198766946793	1
Coq.MSets.MSetDecide.test_In_singleton	40	20.1	search with cache (only 1: intros; only 1: intuition).	0.55952000618	1111
Coq.MSets.MSetDecide.test_add_In	40	7.0.6	search with cache (only 1: intros x y H; only 1: rewrite add_spec; only 1: intuition).	1.34256386757	962
Coq.MSets.MSetDecide.test_Subset_add_remove	40	6.18	search with cache (only 1: intro p; only 1: fsetdec).	2.07350897789	2525
Coq.MSets.MSetDecide.test_eq_disjunction	40	0.7	search with cache (only 1: intros n m H; only 1: fsetdec).	0.116422891617	24
Coq.MSets.MSetDecide.test_not_In_disj	40	1.6	search with cache (only 1: intros n m Hn Hm; only 1: fsetdec).	0.36637711525	43
Coq.MSets.MSetDecide.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.089555978775	1
Coq.MSets.MSetDecide.test_iff_conj	40	1.18	search with cache (only 1: intros n m H; only 1: fsetdec).	1.3342320919	836
Coq.MSets.MSetDecide.test_set_ops_1	40	1.12	search with cache (only 1: intros a n m H; only 1: fsetdec).	0.969285964966	571
Coq.MSets.MSetDecide.eq_chain_test	40	0.8	search with cache (only 1: intros n m Hn; only 1: fsetdec).	0.293030977249	52
Coq.MSets.MSetDecide.test_too_complex	40	1.0.15.0.4	search with cache (only 1: intros n m p Hp H; only 1: intros; only 1: apply H1; only 1: intuition; only 1: intuition).	2.24966192245	2128
Coq.MSets.MSetDecide.function_test_1	40	2	search with cache (only 1: fsetdec).	0.0505521297455	3
Coq.MSets.MSetDecide.function_test_2	40	4.1.5	search with cache (only 1: intros a b Ha Hb; only 1: intuition; only 1: fsetdec).	0.522959947586	209
Coq.MSets.MSetDecide.test_baydemir	40	2.10	search with cache (only 1: intros a b n H; only 1: fsetdec).	0.586018800735	324
Coq.MSets.MSetGenTree.ltb_tree_iff	40	9.1.17	search with cache (only 1: intro H; only 1: fix even_spec 1; only 1: trivial).	13.5974872112	13861
Coq.MSets.MSetGenTree.gtb_tree_iff	40
Coq.MSets.MSetGenTree.isok_iff	40	1.3	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0653228759766	32
Coq.MSets.MSetGenTree.isok_Ok	40	0.26	search with cache (only 1: fix odd_spec 1; only 1: easy).	0.351626873016	713
Coq.MSets.MSetGenTree.In_1	40
Coq.MSets.MSetGenTree.In_compat	40
Coq.MSets.MSetGenTree.In_node_iff	40	1.3	search with cache (only 1: intros a b c H H'; only 1: intuition_in).	0.0870730876923	30
Coq.MSets.MSetGenTree.In_leaf_iff	40	0.0.3.2	search with cache (only 1: split; only 1: easy; only 1: intros; only 1: tauto).	0.0274138450623	15
Coq.MSets.MSetGenTree.lt_leaf	40	1.3.7	search with cache (only 1: red; only 1: intros; only 1: easy).	0.409775018692	445
Coq.MSets.MSetGenTree.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0108919143677	2
Coq.MSets.MSetGenTree.lt_tree_node	40	0.0.3.1.6	search with cache (only 1: intros i j Hi E; only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	1.07164788246	454
Coq.MSets.MSetGenTree.gt_tree_node	40	0.0.0.3.1.9	search with cache (only 1: intros n m H; only 1: intros; only 1: unfold gt_tree; only 1: intros; only 1: intuition_in; only 1: order).	1.72353291512	772
Coq.MSets.MSetGenTree.lt_tree_not_in	40	24.0.4	search with cache (only 1: intros a b Ha; only 1: intro H; only 1: order).	2.40081000328	4700
Coq.MSets.MSetGenTree.lt_tree_trans	40	3	search with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0757441520691	46
Coq.MSets.MSetGenTree.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0129330158234	3
Coq.MSets.MSetGenTree.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00856995582581	1
Coq.MSets.MSetGenTree.lt_tree_compat	40	0.0.0.8.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros f Hf H0; only 1: reduce; only 1: subst; only 1: order).	3.01832604408	1097
Coq.MSets.MSetGenTree.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0688738822937	21
Coq.MSets.MSetGenTree.empty_spec	40	13	search with cache (only 1: firstorder).	0.0200610160828	60
Coq.MSets.MSetGenTree.empty_ok	40	6	search with cache (only 1: auto).	0.006502866745	7
Coq.MSets.MSetGenTree.is_empty_spec	40	9.1	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.188899040222	111
Coq.MSets.MSetGenTree.mem_spec	40	5.1.2	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	0.239822149277	111
Coq.MSets.MSetGenTree.min_elt_spec1	40
Coq.MSets.MSetGenTree.min_elt_spec2	40
Coq.MSets.MSetGenTree.min_elt_spec3	40
Coq.MSets.MSetGenTree.max_elt_spec1	40
Coq.MSets.MSetGenTree.max_elt_spec2	40
Coq.MSets.MSetGenTree.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.230428218842	66
Coq.MSets.MSetGenTree.choose_spec1	40
Coq.MSets.MSetGenTree.choose_spec2	40
Coq.MSets.MSetGenTree.choose_spec3	40
Coq.MSets.MSetGenTree.elements_spec1'	40
Coq.MSets.MSetGenTree.elements_spec1	40
Coq.MSets.MSetGenTree.elements_spec2'	40
Coq.MSets.MSetGenTree.elements_spec2	40
Coq.MSets.MSetGenTree.elements_spec2w	40
Coq.MSets.MSetGenTree.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.elements_cardinal	40	0.25	search with cache (only 1: fix odd_spec 1; only 1: trivial).	3.85222315788	3066
Coq.MSets.MSetGenTree.elements_app	40
Coq.MSets.MSetGenTree.elements_node	40
Coq.MSets.MSetGenTree.rev_elements_app	40
Coq.MSets.MSetGenTree.rev_elements_node	40
Coq.MSets.MSetGenTree.rev_elements_rev	40
Coq.MSets.MSetGenTree.sorted_app_inv	40
Coq.MSets.MSetGenTree.elements_sort_ok	40
Coq.MSets.MSetGenTree.for_all_spec	40
Coq.MSets.MSetGenTree.exists_spec	40
Coq.MSets.MSetGenTree.fold_spec'	40
Coq.MSets.MSetGenTree.fold_spec	40
Coq.MSets.MSetGenTree.subsetl_spec	40
Coq.MSets.MSetGenTree.subsetr_spec	40
Coq.MSets.MSetGenTree.subset_spec	40
Coq.MSets.MSetGenTree.eq_equiv	40	5	search with cache (only 1: firstorder).	0.0285580158234	20
Coq.MSets.MSetGenTree.eq_Leq	40	1.7.14	search with cache (only 1: intro; only 1: fix odd_spec 1; only 1: auto using min_elt_spec1).	10.0235409737	10111
Coq.MSets.MSetGenTree.lt_strorder	40
Coq.MSets.MSetGenTree.lt_compat	40
Coq.MSets.MSetGenTree.flatten_e_elements	40
Coq.MSets.MSetGenTree.cons_1	40
Coq.MSets.MSetGenTree.compare_end_Cmp	40
Coq.MSets.MSetGenTree.compare_more_Cmp	40
Coq.MSets.MSetGenTree.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.compare_Cmp	40	0.0.12.0	search with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	0.785656929016	705
Coq.MSets.MSetGenTree.compare_spec	40
Coq.MSets.MSetGenTree.equal_spec	40
Coq.MSets.MSetGenTree.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.mindepth_cardinal	40
Coq.MSets.MSetGenTree.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.In_compat	40
Coq.MSets.MSetInterface.eq_equiv	40	44	search with cache (only 1: firstorder).	0.4896941185	990
Coq.MSets.MSetInterface.eq_dec	40
Coq.MSets.MSetInterface.mem_spec	40
Coq.MSets.MSetInterface.equal_spec	40
Coq.MSets.MSetInterface.subset_spec	40
Coq.MSets.MSetInterface.empty_spec	40
Coq.MSets.MSetInterface.is_empty_spec	40
Coq.MSets.MSetInterface.add_spec	40
Coq.MSets.MSetInterface.remove_spec	40
Coq.MSets.MSetInterface.singleton_spec	40
Coq.MSets.MSetInterface.union_spec	40
Coq.MSets.MSetInterface.inter_spec	40
Coq.MSets.MSetInterface.diff_spec	40
Coq.MSets.MSetInterface.fold_spec	40
Coq.MSets.MSetInterface.cardinal_spec	40
Coq.MSets.MSetInterface.filter_spec	40
Coq.MSets.MSetInterface.for_all_spec	40
Coq.MSets.MSetInterface.exists_spec	40
Coq.MSets.MSetInterface.partition_spec1	40
Coq.MSets.MSetInterface.partition_spec2	40
Coq.MSets.MSetInterface.elements_spec1	40
Coq.MSets.MSetInterface.elements_spec2w	40
Coq.MSets.MSetInterface.choose_spec1	40
Coq.MSets.MSetInterface.choose_spec2	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat	40	8.8.11	search with cache (only 1: unfold lt; only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	13.7729320526	5739
Coq.MSets.MSetInterface.compare_spec	40
Coq.MSets.MSetInterface.elements_spec2	40
Coq.MSets.MSetInterface.min_elt_spec1	40
Coq.MSets.MSetInterface.min_elt_spec2	40
Coq.MSets.MSetInterface.min_elt_spec3	40
Coq.MSets.MSetInterface.max_elt_spec1	40
Coq.MSets.MSetInterface.max_elt_spec2	40
Coq.MSets.MSetInterface.max_elt_spec3	40
Coq.MSets.MSetInterface.choose_spec3	40
Coq.MSets.MSetInterface.eq_equiv	40	1	search with cache (only 1: firstorder).	0.0204639434814	18
Coq.MSets.MSetInterface.Proper_instance_0	40
Coq.MSets.MSetInterface.Proper_instance_1	40
Coq.MSets.MSetInterface.Proper_instance_2	40
Coq.MSets.MSetInterface.Proper_instance_3	40
Coq.MSets.MSetInterface.Proper_instance_4	40
Coq.MSets.MSetInterface.lt_compat	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_empty_r	40	17.4.10	search with cache (only 1: intros n m; only 1: revert m; only 1: firstorder).	4.73361492157	10122
Coq.MSets.MSetInterface.lt_empty_l	40
Coq.MSets.MSetInterface.lt_add_lt	40
Coq.MSets.MSetInterface.lt_add_eq	40
Coq.MSets.MSetInterface.lt_strorder	40
Coq.MSets.MSetInterface.lt_compat'	40
Coq.MSets.MSetInterface.eq_cons	40
Coq.MSets.MSetInterface.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.In_In	40	0.1	search with cache (only 1: destr_bool; only 1: auto with *).	0.0504629611969	3
Coq.MSets.MSetToFiniteSet.Subset_Included	40	6.0	search with cache (only 1: intros n m; only 1: now PeanoNat.Nat.nzsimpl).	0.153786897659	8
Coq.MSets.MSetToFiniteSet.Equal_Same_set	40	8.15.0	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: red; only 1: firstorder).	18.1435499191	5422
Coq.MSets.MSetToFiniteSet.empty_Empty_Set	40	3.0.9.76.0	search with cache (only 1: compute; only 1: split; only 1: Dec.fsetdec; only 1: intros a Ha; only 1: easy).	14.4286830425	14625
Coq.MSets.MSetToFiniteSet.Empty_Empty_set	40	4	search with cache (only 1: firstorder  (subst; auto)).	0.612094163895	127
Coq.MSets.MSetToFiniteSet.singleton_Singleton	40
Coq.MSets.MSetToFiniteSet.union_Union	40
Coq.MSets.MSetToFiniteSet.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.add_Add	40
Coq.MSets.MSetToFiniteSet.Add_Add	40
Coq.MSets.MSetToFiniteSet.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.Ens_to_MSet	40
Coq.MSets.MSetWeakList.In_compat	40	1	search with cache (only 1: solve_proper).	0.364089012146	28
Coq.MSets.MSetWeakList.mem_spec	40
Coq.MSets.MSetWeakList.isok_iff	40
Coq.MSets.MSetWeakList.isok_Ok	40
Coq.MSets.MSetWeakList.add_spec	40
Coq.MSets.MSetWeakList.add_ok	40
Coq.MSets.MSetWeakList.remove_spec	40
Coq.MSets.MSetWeakList.remove_ok	40
Coq.MSets.MSetWeakList.singleton_ok	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0163280963898	2
Coq.MSets.MSetWeakList.singleton_spec	40	0.1.2.8.6	search with cache (only 1: repeat red; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	8.13375496864	1703
Coq.MSets.MSetWeakList.empty_ok	40	0.0	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.017324924469	2
Coq.MSets.MSetWeakList.empty_spec	40	0.1.5.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0270500183105	10
Coq.MSets.MSetWeakList.is_empty_spec	40
Coq.MSets.MSetWeakList.elements_spec1	40	1.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: intuition; only 1: intros; only 1: auto).	0.0280809402466	6
Coq.MSets.MSetWeakList.elements_spec2w	40	3.1.0.0	search with cache (only 1: induction s; only 1: intros; only 1: intuition; only 1: auto).	0.0732669830322	19
Coq.MSets.MSetWeakList.fold_spec	40	3.0.1.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: intros; only 1: split; only 1: split).	0.132759094238	39
Coq.MSets.MSetWeakList.union_ok	40
Coq.MSets.MSetWeakList.union_spec	40
Coq.MSets.MSetWeakList.inter_ok	40
Coq.MSets.MSetWeakList.inter_spec	40
Coq.MSets.MSetWeakList.diff_ok	40
Coq.MSets.MSetWeakList.diff_spec	40
Coq.MSets.MSetWeakList.subset_spec	40
Coq.MSets.MSetWeakList.equal_spec	40
Coq.MSets.MSetWeakList.choose_spec1	40
Coq.MSets.MSetWeakList.choose_spec2	40	0.0.0.0.0.3.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: unfold Empty, empty; only 1: destruct s; only 1: red; only 1: intros; only 1: inv; only 1: intros; only 1: discriminate).	0.994199991226	392
Coq.MSets.MSetWeakList.cardinal_spec	40	0.0	search with cache (only 1: unfold elements; only 1: auto).	0.0197451114655	2
Coq.MSets.MSetWeakList.filter_spec'	40
Coq.MSets.MSetWeakList.filter_spec	40
Coq.MSets.MSetWeakList.filter_ok	40
Coq.MSets.MSetWeakList.for_all_spec	40
Coq.MSets.MSetWeakList.exists_spec	40
Coq.MSets.MSetWeakList.partition_spec1	40
Coq.MSets.MSetWeakList.partition_spec2	40
Coq.MSets.MSetWeakList.partition_ok1'	40
Coq.MSets.MSetWeakList.partition_ok2'	40
Coq.MSets.MSetWeakList.partition_ok1	40
Coq.MSets.MSetWeakList.partition_ok2	40
Coq.MSets.MSetList.inf_iff	40
Coq.MSets.MSetList.isok_iff	40
Coq.MSets.MSetList.isok_Ok	40	1	search with cache (only 1: eauto).	0.0111360549927	2
Coq.MSets.MSetList.mem_spec	40
Coq.MSets.MSetList.add_inf	40
Coq.MSets.MSetList.add_ok	40
Coq.MSets.MSetList.add_spec	40
Coq.MSets.MSetList.remove_inf	40
Coq.MSets.MSetList.remove_ok	40
Coq.MSets.MSetList.remove_spec	40
Coq.MSets.MSetList.singleton_ok	40	4	search with cache (only 1: auto).	0.0118989944458	5
Coq.MSets.MSetList.singleton_spec	40	5.5.0	search with cache (only 1: intros x Hs; only 1: rewrite InA_altdef, Exists_exists; only 1: firstorder  (subst; auto)).	0.38056397438	218
Coq.MSets.MSetList.union_inf	40
Coq.MSets.MSetList.union_ok	40
Coq.MSets.MSetList.union_spec	40
Coq.MSets.MSetList.inter_inf	40
Coq.MSets.MSetList.inter_ok	40	0.3.0.10.0.0.0.0.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2; only 1: constructors; only 1: auto; only 1: apply Inf_eq with x'; only 1: auto; only 1: destruct l as [| y ys]; only 1: auto; only 1: inv; only 1: intuition).	26.5561800003	9503
Coq.MSets.MSetList.inter_spec	40
Coq.MSets.MSetList.diff_inf	40
Coq.MSets.MSetList.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.110239028931	3
Coq.MSets.MSetList.diff_spec	40
Coq.MSets.MSetList.equal_spec	40	0.2.4	search with cache (only 1: intros x Hs; only 1: fix even_spec 1; only 1: intuition).	0.250994205475	92
Coq.MSets.MSetList.subset_spec	40
Coq.MSets.MSetList.empty_ok	40	0	search with cache (only 1: auto).	0.00974917411804	1
Coq.MSets.MSetList.empty_spec	40	34	search with cache (only 1: now f_equal).	0.707862138748	702
Coq.MSets.MSetList.is_empty_spec	40
Coq.MSets.MSetList.elements_spec1	40	1.6.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0312070846558	22
Coq.MSets.MSetList.elements_spec2	40	0.0.2.0.6.1.2	search with cache (only 1: induction s; only 1: constructors; only 1: intros H; only 1: inv; only 1: constructor; only 1: auto; only 1: auto).	1.105864048	1006
Coq.MSets.MSetList.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0195438861847	3
Coq.MSets.MSetList.min_elt_spec1	40
Coq.MSets.MSetList.min_elt_spec2	40
Coq.MSets.MSetList.min_elt_spec3	40	0.0.1.0.1.0.0.0	search with cache (only 1: induction s as [| x s IH]; only 1: simpl; only 1: inversion 1; only 1: easy; only 1: simpl; only 1: inversion 2; only 1: easy; only 1: easy).	0.093190908432	10
Coq.MSets.MSetList.max_elt_spec1	40
Coq.MSets.MSetList.max_elt_spec2	40
Coq.MSets.MSetList.max_elt_spec3	40
Coq.MSets.MSetList.choose_spec3	40
Coq.MSets.MSetList.fold_spec	40	0.1.0	search with cache (only 1: destruct s; only 1: intuition; only 1: reflexivity).	0.0192928314209	4
Coq.MSets.MSetList.cardinal_spec	40	1.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: tauto).	0.0198919773102	4
Coq.MSets.MSetList.filter_inf	40
Coq.MSets.MSetList.filter_ok	40
Coq.MSets.MSetList.filter_spec	40
Coq.MSets.MSetList.for_all_spec	40
Coq.MSets.MSetList.exists_spec	40
Coq.MSets.MSetList.partition_inf1	40
Coq.MSets.MSetList.partition_inf2	40
Coq.MSets.MSetList.partition_ok1	40
Coq.MSets.MSetList.partition_ok2	40
Coq.MSets.MSetList.partition_spec1	40
Coq.MSets.MSetList.partition_spec2	40
Coq.MSets.MSetList.In_compat	40	2	search with cache (only 1: solve_proper).	0.0469810962677	12
Coq.MSets.MSetList.lt_strorder	40
Coq.MSets.MSetList.lt_compat	40
Coq.MSets.MSetList.compare_spec_aux	40	0.11.21.0.21	search with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: intro l; only 1: induction l as [| x l IH]; only 1: intuition; only 1: auto with relations).	20.6771528721	32361
Coq.MSets.MSetList.compare_spec	40
Coq.MSets.MSetList.eq_leibniz_list	40
Coq.MSets.MSetList.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	4	search with cache (only 1: now Z.nzsimpl').	0.175621032715	5
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40	3.10.43	search with cache (only 1: intro Hn; only 1: fix odd_spec 1; only 1: auto with zarith).	21.7809829712	28443
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0238990783691	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.411014080048	172
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.2.1.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.0522420406342	18
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.5.0	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0260789394379	10
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.0315899848938	10
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.0565149784088	20
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.2.0.0.0.0.2.0	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	21.7881679535	13629
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	2.4.2.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.583868980408	363
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.1.0.0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	6.52658605576	2814
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.2.0.3.4.1.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	1.37797212601	1596
Coq.Sets.Uniset.leb_refl	40	9	search with cache (only 1: destr_bool).	0.010360956192	18
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0182812213898	4
Coq.Sets.Uniset.seq_refl	40	4	search with cache (only 1: auto).	0.00750303268433	5
Coq.Sets.Uniset.seq_trans	40	1.0.3.24	search with cache (only 1: intros H x0; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	6.10762906075	9390
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0163691043854	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0169589519501	3
Coq.Sets.Uniset.union_empty_right	40	0.0.11.4.1.1.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	12.474878788	16428
Coq.Sets.Uniset.union_comm	40	18.4.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: intuition).	13.9988849163	16161
Coq.Sets.Uniset.union_ass	40	0.0.0.2.1.0.1	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.536853790283	205
Coq.Sets.Uniset.seq_left	40	0.0.1.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0476460456848	9
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0489158630371	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	0.1.0.1.1.0.0.0.1.0.2	search with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	17.1394128799	7301
Coq.Sets.Multiset.meq_refl	40	0.0	search with cache (only 1: compute; only 1: trivial).	0.0135638713837	2
Coq.Sets.Multiset.meq_trans	40	1.3.1.0.6.2	search with cache (only 1: unfold meq; only 1: compute; only 1: intros; only 1: firstorder; only 1: setoid_rewrite H; only 1: firstorder).	11.2259371281	2825
Coq.Sets.Multiset.meq_sym	40	1.0.2.0.0	search with cache (only 1: destruct y; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: auto).	0.0270421504974	8
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0174260139465	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.125555038452	4
Coq.Sets.Multiset.munion_comm	40	6.9	search with cache (only 1: compute; only 1: firstorder).	4.66489911079	2193
Coq.Sets.Multiset.munion_ass	40	1.1.0.5.1	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	2.86972904205	1076
Coq.Sets.Multiset.meq_left	40	2.1.1.1.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto).	0.168550014496	68
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0543339252472	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct z; only 1: auto with arith).	0.0565531253815	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	3.1.1.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	12.3079819679	4806
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: exact PeanoNat.Nat.le_refl).	0.0136280059814	1
Coq.Sets.Integers.le_antisym	40	3.2.0.0	search with cache (only 1: red; only 1: intros x y; only 1: intro EQ; only 1: PeanoNat.Nat.order).	0.0335319042206	9
Coq.Sets.Integers.le_trans	40	2.2.1.0	search with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).	0.0560359954834	23
Coq.Sets.Integers.le_Order	40	2.0.1.1.2	search with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.377071142197	156
Coq.Sets.Integers.triv_nat	40	8.1	search with cache (only 1: intros; only 1: constructor).	0.104161024094	56
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.1.15.0.1	search with cache (only 1: intro; only 1: intro; only 1: intros x' x'' Hx' Hx''; only 1: red; only 1: auto).	0.762309074402	2424
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.1.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.241416931152	67
Coq.Sets.Relations_1_facts.contains_is_preorder	40	7.4.3.1	search with cache (only 1: intro H; only 1: constructor; only 1: auto  10 with sets; only 1: auto  10 with sets).	0.263417959213	471
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.3.0.0.16	search with cache (only 1: intro h; only 1: intros U R H'; only 1: intros H'0 H'1; only 1: elim H'; only 1: auto  10 with sets).	6.72014093399	12346
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00922393798828	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	4.0.1.0.0	search with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: auto with sets).	0.0327010154724	17
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.2	search with cache (only 1: intros U R H'; only 1: auto with sets).	0.00767207145691	5
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.00521802902222	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.0.0.0.0.0.4.0.14	search with cache (only 1: intros H'0 H'1; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto with sets).	13.6214761734	20579
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.0.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	1.89402699471	1607
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0426790714264	18
Coq.Sets.Permut.comm_left	40	0.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0217950344086	5
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	8.0.0.2.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	12.4884459972	2905
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40	0.1.8.0.12.2.6	search with cache (only 1: intros H'6 H'7; only 1: intros x H'; only 1: generalize H'; only 1: intro H'0; only 1: exists x; only 1: auto with sets; only 1: trivial).	23.6956179142	33862
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.1.1.2.0.0.1.0.12.3	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x0 H'; only 1: unfold In in *; only 1: elim H'; only 1: destruct 1; only 1: intuition).	2.06653213501	1649
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.1.0.9	search with cache (only 1: intros x0 H'; only 1: destruct 1; only 1: exists x; only 1: auto with sets).	0.553508043289	413
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	19.2	search with cache (only 1: intros H'0 H'1; only 1: contradiction).	0.57369685173	1221
Coq.Sets.Powerset.Power_set_Inhabited	40	10.40.56	search with cache (only 1: intro x; only 1: exists x; only 1: auto with sets).	3.8520860672	35819
Coq.Sets.Powerset.Inclusion_is_an_order	40	1.1.1.8	search with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.211709976196	102
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00674891471863	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto with sets).	0.0062940120697	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.0.0.7	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	36.6389250755	5039
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.2.2.1.10.14.0	search with cache (only 1: intro X; only 1: split; only 1: split; only 1: auto with sets; only 1: red; only 1: simpl; only 1: auto with sets).	15.5742080212	12789
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0233678817749	12
Coq.Sets.Powerset.Union_increases_l	40	1	search with cache (only 1: auto with sets).	0.00688195228577	2
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00587606430054	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.0.0.4	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0374979972839	26
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.018483877182	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	5.0.1	search with cache (only 1: red; only 1: intros A x y H'; only 1: firstorder).	0.126933813095	12
Coq.Sets.Classical_sets.Subtract_inv	40	4.0.1.0	search with cache (only 1: unfold Subtract at 1; only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.0238399505615	9
Coq.Sets.Classical_sets.Included_Strict_Included	40	1.1.7.2	search with cache (only 1: intros H'0 H'1; only 1: compute; only 1: intuition; only 1: tauto).	1.04657101631	288
Coq.Sets.Classical_sets.Strict_Included_inv	40	0.2.8.15.6	search with cache (only 1: induction 1; only 1: red in H, H0; only 1: split; only 1: auto with sets; only 1: auto  7 using Inhabited_Setminus with sets).	11.7041139603	9663
Coq.Sets.Classical_sets.not_SIncl_empty	40	1.13.2.1.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'1; only 1: elim H'1; only 1: auto with sets).	2.25536298752	3520
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.0.8.0.4.1	search with cache (only 1: generalize Rstar_transitive; only 1: red; only 1: intro T1; only 1: intros U R; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	11.1651899815	9626
Coq.Sets.Relations_3_facts.coherent_symmetric	40	0.2.0.0.0.2.2.1.0.0.1	search with cache (only 1: intros U R; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: intros z1 H'5; only 1: elim H'5; only 1: intros H'8 H'10; only 1: clear H'5; only 1: red; only 1: exists z1; only 1: auto with sets).	30.6643638611	16048
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.1.0.1.0	search with cache (only 1: unfold Subtract at 1; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0488460063934	8
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.2.3.0.0.5	search with cache (only 1: intros A x y; only 1: intro H'2; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	6.30813097954	2364
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40	0.0.0.1.4.0.2.1.0.3	search with cache (only 1: intros a b; only 1: red; only 1: intros x0 H'0; only 1: apply NNPP; only 1: elim H'0; only 1: intro H'1; only 1: red; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	15.1534030437	13210
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40	0.0.0.0.1.1.0.0.2.0.1.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: apply Setminus_intro; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	23.4806799889	9748
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	0.0.0.0.2.9.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	18.9104459286	14540
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	26	search with cache (only 1: auto  10 with sets).	0.995068073273	1512
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0181219577789	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.10	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.187894105911	96
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0142171382904	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0160088539124	1
Coq.Sets.Powerset_facts.Union_associative	40	17	search with cache (only 1: auto  10 with sets).	0.655836105347	294
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0179650783539	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  9 with sets).	0.0210831165314	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	1.67198491096	917
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.0.0.0.0.0.2.0.2.7	search with cache (only 1: intros y H'1; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.01735496521	1534
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.7.10	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	7.66751408577	4302
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.0.0.0.2.0.0.1.2	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	1.81627702713	1229
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.0.0.3.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.0689220428467	22
Coq.Sets.Powerset_facts.incl_add	40	2.2	search with cache (only 1: unfold Add; only 1: auto with sets).	0.131083965302	16
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	0.0.3	search with cache (only 1: unfold Add at 1; only 1: unfold Add; only 1: auto  9 with sets).	0.169631958008	57
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: intuition).	0.0185270309448	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.040107011795	19
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0205709934235	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	3.0.0.1.0.0.0.1	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.841486215591	520
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0474588871002	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.3.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: exfalso; only 1: inversion_clear H1; only 1: intuition; only 1: intuition).	0.741641044617	415
Coq.Sets.Constructive_sets.Extension	40	3.8.3.8.4.13.1	search with cache (only 1: red; only 1: destruct 1; only 1: split; only 1: red; only 1: auto; only 1: red; only 1: auto).	4.36772918701	17907
Coq.Sets.Constructive_sets.Noone_in_empty	40	31.4.2	search with cache (only 1: intro x; only 1: red; only 1: contradiction).	0.914910078049	4533
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0098729133606	4
Coq.Sets.Constructive_sets.Add_intro1	40	1.14.1.1	search with cache (only 1: intros B C H'; only 1: intro; only 1: left; only 1: auto with sets).	2.82649278641	6113
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00880408287048	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.8.8.2.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.669770956039	1694
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.23.4.4.3.2	search with cache (only 1: red; only 1: intro H'1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	32.2910420895	109197
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.2.3.1.1.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.379113912582	374
Coq.Sets.Constructive_sets.Singleton_inv	40	0.6	search with cache (only 1: destruct 1; only 1: auto with sets).	0.0917630195618	24
Coq.Sets.Constructive_sets.Singleton_intro	40	0.6.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Add_intro2 with sets).	0.013335943222	9
Coq.Sets.Constructive_sets.Union_inv	40	0.0.3.2	search with cache (only 1: intros X H'; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.102838993073	27
Coq.Sets.Constructive_sets.Add_inv	40	1.12.0.0.2.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	11.4831719398	8320
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0125179290771	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.2.0.1.0.3	search with cache (only 1: intros x H'0; only 1: destruct 1; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.239660978317	227
Coq.Sets.Constructive_sets.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00985193252563	3
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00941514968872	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.0.1.6.8	search with cache (only 1: intros X H'; only 1: elim H'; only 1: elim H'; only 1: intro H'1; only 1: auto with sets).	0.575939178467	1389
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	5.1.5.1.2	search with cache (only 1: intro; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.30978417397	1537
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.0.3.13.2.10.23.13	search with cache (only 1: intro; only 1: apply NNPP; only 1: generalize (Inclusion_is_transitive U); only 1: intro H'1; only 1: generalize (Inclusion_is_transitive U); only 1: intro H'2; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	13.0794160366	28761
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40	0.0.2.1.29	search with cache (only 1: intros a; only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	7.45859503746	7805
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: apply Inhabited_add).	0.0813000202179	11