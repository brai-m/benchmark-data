
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40	1.2.1.2.12.2.2	search with cache (only 1: induction n as [| n IHn] in m |- *); (only 1: auto with arith); (only 1: destruct m as [| m]); (only 1: auto with arith); (only 1: destruct (IHn m) as [H| H]); (only 1: auto with arith); (only 1: auto with arith).	10.7629470825	7494
Coq.Arith.Compare_dec.le_le_S_dec	40	3.1.2.3.4.1.5	search with cache (only 1: induction n as [| n IHn] in m |- *); (only 1: auto with arith); (only 1: destruct m as [| m]); (only 1: auto with arith); (only 1: elim (IHn m)); (only 1: auto with arith); (only 1: auto with arith).	16.8546230793	9471
Coq.Arith.Compare_dec.le_ge_dec	40	3.1.2.1.0.2.2.2	search with cache (only 1: induction n as [| n IHn] in m |- *); (only 1: auto with arith); (only 1: destruct m as [| m]); (only 1: right); (only 1: auto with arith); (only 1: elim (IHn m)); (only 1: auto with arith); (only 1: auto with arith).	9.45539522171	5225
Coq.Arith.Compare_dec.le_gt_dec	40	11	search with cache (only 1: exact (le_lt_dec n m)).	0.0862200260162	46
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	5.3.5	search with cache (only 1: elim (le_lt_dec n m)); (only 1: auto with arith); (only 1: auto with arith).	1.7785449028	927
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	6	search with cache (only 1: apply le_dec).	0.0538549423218	32
Coq.Arith.Compare_dec.ge_dec	40	4	search with cache (only 1: apply le_dec).	0.156630992889	60
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0112459659576	1
Coq.Arith.Compare_dec.dec_gt	40	22	search with cache (only 1: apply Nat.lt_decidable).	1.23916697502	866
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.0307641029358	21
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0130040645599	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.0121428966522	3
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0121848583221	1
Coq.Arith.Compare_dec.not_ge	40	6	search with cache (only 1: apply Nat.lt_nge).	0.068156003952	16
Coq.Arith.Compare_dec.not_lt	40	5	search with cache (only 1: apply Nat.le_ngt).	0.040274143219	13
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.0126841068268	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0121059417725	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0143790245056	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle); (only 1: apply Nat.lt_nge).	0.0267598628998	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0139091014862	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40	15	search with cache (only 1: exact induction_ltof1).	1.79463386536	1763
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0102100372314	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	1	search with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0336818695068	21
Coq.Arith.Wf_nat.lt_wf_rec1	40	1	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0336129665375	17
Coq.Arith.Wf_nat.lt_wf_rec	40	1	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0338418483734	17
Coq.Arith.Wf_nat.lt_wf_ind	40	1	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0336918830872	17
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.3	search with cache (only 1: intro p); (only 1: intros); (only 1: elim (lt_wf p)); (only 1: auto with arith).	0.0394699573517	23
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.0111880302429	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	2.1.1.0.1.3	search with cache (only 1: intros P Hrec p); (only 1: pattern p); (only 1: apply lt_wf_rect); (only 1: intros n H q); (only 1: apply lt_wf_rect); (only 1: auto with arith).	1.91763591766	1184
Coq.Arith.Wf_nat.lt_wf_double_ind	40	2.1.1.0.1.3	search with cache (only 1: intros P Hrec p); (only 1: pattern p); (only 1: apply lt_wf_rect); (only 1: intros n H q); (only 1: apply lt_wf_rect); (only 1: auto with arith).	2.67463493347	1357
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0119259357452	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0110809803009	1
Coq.Arith.Gt.gt_S	40	2.1.9	search with cache (only 1: intros H); (only 1: apply Nat.lt_eq_cases); (only 1: auto with arith).	0.283767938614	131
Coq.Arith.Gt.gt_pred	40	3	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.174783229828	61
Coq.Arith.Gt.le_not_gt	40	4	search with cache (only 1: apply Nat.le_ngt).	0.0372021198273	23
Coq.Arith.Gt.gt_not_le	40	6	search with cache (only 1: apply Nat.lt_nge).	0.0507981777191	24
Coq.Arith.Gt.le_S_gt	40	2.0.0.1	search with cache (only 1: intro); (only 1: apply Nat.succ_lt_mono); (only 1: apply Nat.lt_succ_r); (only 1: auto with arith).	0.0284261703491	11
Coq.Arith.Gt.gt_S_le	40	7	search with cache (only 1: apply Nat.lt_succ_r).	0.0417821407318	20
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0111758708954	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0109260082245	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	3.4.0	search with cache (only 1: intros); (only 1: apply Nat.succ_lt_mono); (only 1: now apply Nat.le_lt_trans with m).	0.0644278526306	10
Coq.Arith.Gt.gt_0_eq	40	1.5.40.2	search with cache (only 1: apply Nat.lt_eq_cases); (only 1: induction n); (only 1: now repeat split); (only 1: auto with arith).	3.51999402046	6667
Coq.Arith.Gt.plus_gt_reg_l	40	9	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0570468902588	26
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0116879940033	1
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Between.bet_eq	40	7.19.9.9	search with cache (only 1: intros a n); (only 1: intros EQ); (only 1: rewrite EQ); (only 1: now left).	8.26531100273	23307
Coq.Arith.Between.between_le	40	1.1.0.2.5.1.1.3	search with cache (only 1: intro n); (only 1: induction n); (only 1: intro n); (only 1: auto with arith); (only 1: intros m Le); (only 1: elim Le); (only 1: auto with arith); (only 1: auto with arith).	3.69524097443	1094
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]); (only 1: auto with arith); (only 1: auto with arith); (only 1: auto with arith).	0.0292930603027	4
Coq.Arith.Between.exists_le_S	40	12.3.7.1	search with cache (only 1: induction 1 as [| * [| ]]); (only 1: auto with arith); (only 1: Morphisms.solve_proper); (only 1: auto with arith).	0.735550165176	1193
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	1.1.0.0.0	search with cache (only 1: intros p q r []); (only 1: destruct (le_lt_or_eq r q)); (only 1: auto with arith); (only 1: auto with arith); (only 1: auto with arith).	0.159272909164	51
Coq.Arith.Between.in_int_Sp_q	40	1.1.0.0.0	search with cache (only 1: intros p q r []); (only 1: destruct (le_lt_or_eq r q)); (only 1: auto with arith); (only 1: auto with arith); (only 1: auto with arith).	0.178930997849	51
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.2.0	search with cache (only 1: induction 1 as [| l]); (only 1: auto with arith); (only 1: auto with arith).	0.0253930091858	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Minus.minus_n_O	40	0.8.90	search with cache (only 1: Nat.induct n); (only 1: reflexivity); (only 1: reflexivity).	4.59564781189	27670
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	8	search with cache (only 1: now Nat.nzsimpl').	0.0467090606689	21
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	3	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.0130839347839	4
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	1.0.1.10.1.21.0	search with cache (only 1: rewrite Nat.add_comm); (only 1: symmetry); (only 1: apply Nat.sub_add); (only 1: apply Nat.lt_succ_r); (only 1: apply Nat.succ_lt_mono); (only 1: apply Nat.lt_succ_r); (only 1: auto with arith).	25.9962639809	41810
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.0126969814301	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0121960639954	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	search with cache (only 1: apply Nat.add_le_mono).	0.0113499164581	1
Coq.Arith.Plus.plus_lt_compat	40	17.4.0.24.28	search with cache (only 1: revert m); (only 1: intros a b c0); (only 1: apply Nat.add_le_lt_mono); (only 1: Nat.order); (only 1: trivial).	10.5378248692	13475
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	19.2.1.19.5	search with cache (only 1: Nat.induct n); (only 1: repeat split); (only 1: now Nat.nzsimpl); (only 1: intros a b c0); (only 1: now Nat.nzsimpl').	8.2821559906	10521
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.9	search with cache (only 1: fix even_odd_double 1); (only 1: auto).	0.120935916901	26
Coq.Arith.Div2.odd_S2n	40	6.0.0	search with cache (only 1: intros n H); (only 1: exists (Nat.div2 n)); (only 1: auto with arith).	0.0233368873596	9
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.0129868984222	2
Coq.Arith.Div2.div2_double_plus_one	40	1.0	search with cache (only 1: rewrite Nat.div2_succ_double); (only 1: auto).	0.105844974518	3
Coq.Arith.Lt.lt_le_S	40	5	search with cache (only 1: trivial).	0.0108230113983	6
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0115571022034	1
Coq.Arith.Lt.le_not_lt	40	6	search with cache (only 1: Nat.order_nz).	0.0208518505096	12
Coq.Arith.Lt.lt_not_le	40	7.0	search with cache (only 1: intro H'); (only 1: Nat.order_nz).	0.0216739177704	9
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	5.0	search with cache (only 1: intros); (only 1: Nat.order_nz).	0.0240831375122	7
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.0119438171387	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0119888782501	1
Coq.Arith.Lt.S_pred	40
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.EqNat.eq_nat_refl	40	12.41.13	search with cache (only 1: Nat.induct n); (only 1: now repeat split); (only 1: trivial).	3.76900291443	5131
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	1.0.2.0.0	search with cache (only 1: intros <-); (only 1: induction n); (only 1: simpl); (only 1: auto); (only 1: apply eq_nat_refl).	0.0277409553528	11
Coq.Arith.EqNat.eq_nat_eq	40	1	search with cache (only 1: apply eq_nat_is_eq).	0.16695189476	2
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	5.1.6.75	search with cache (only 1: Nat.induct n); (only 1: now Nat.nzsimpl); (only 1: intros a); (only 1: now Nat.nzsimpl).	3.38774108887	10393
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	8.0.7	search with cache (only 1: intros); (only 1: apply Nat.eqb_eq); (only 1: now rewrite H).	0.92432308197	766
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	26.3	search with cache (only 1: fix even_equiv 1); (only 1: trivial).	1.813174963	2793
Coq.Arith.Even.even_or_odd	40	1.1.5.0.1.43	search with cache (only 1: Nat.induct n); (only 1: constructor); (only 1: constructor); (only 1: inversion_clear 1); (only 1: now do 2 constructor); (only 1: now do 2 constructor).	6.66180992126	13984
Coq.Arith.Even.even_odd_dec	40	1.1.1.0.0.0.0	search with cache (only 1: induction n); (only 1: auto with arith); (only 1: elim IHn); (only 1: elim IHn); (only 1: auto with arith); (only 1: auto with arith); (only 1: auto with arith).	0.154774904251	45
Coq.Arith.Even.not_even_and_odd	40	2.5.5.2.6.0	search with cache (only 1: induction n); (only 1: inversion_clear 1); (only 1: inversion_clear 1); (only 1: inversion_clear 1); (only 1: inversion_clear 1); (only 1: auto with arith).	4.45347094536	4108
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.115191936493	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.0978400707245	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0627660751343	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0639870166779	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0864670276642	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.245596170425	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0623071193695	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.190514087677	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0621089935303	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0626389980316	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0909621715546	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0625748634338	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0624039173126	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0645270347595	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.160342931747	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.044634103775	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0434880256653	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0633971691132	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0652229785919	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0658991336823	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0439209938049	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0716760158539	1
Coq.Arith.Le.le_n_0_eq	40
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3.0.0	search with cache (only 1: simpl); (only 1: intros); (only 1: auto).	0.0173058509827	6
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	2.0.0.0	search with cache (only 1: induction n); (only 1: simpl); (only 1: auto); (only 1: auto).	0.0335400104523	24
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00921988487244	1
Coq.Arith.PeanoNat.Nat.one_succ	40	7	search with cache (only 1: auto).	0.0150480270386	18
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00963020324707	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.0100209712982	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.0104520320892	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.4	search with cache (only 1: induction n); (only 1: reflexivity); (only 1: reflexivity).	0.0154891014099	7
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0100870132446	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	4	search with cache (only 1: split).	0.0114231109619	5
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	12.3.2.0	search with cache (only 1: intros LT); (only 1: exfalso); (only 1: eapply Private_Tac.lt_irrefl); (only 1: now apply lt_succ_l).	0.592293024063	1122
Coq.Arith.PeanoNat.Nat.pow_0_r	40	19	search with cache (only 1: split).	0.0486600399017	165
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.0.0	search with cache (only 1: inversion 1); (only 1: reflexivity); (only 1: reflexivity).	0.0222961902618	4
Coq.Arith.PeanoNat.Nat.square_spec	40	16.2.5	search with cache (only 1: induct n); (only 1: apply mul_0_l); (only 1: reflexivity).	0.977164030075	1205
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.43	search with cache (only 1: intros ([| ], H)); (only 1: discriminate); (only 1: rewrite <- plus_n_Sm in H); (only 1: now inversion H).	2.24312400818	6171
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.8	search with cache (only 1: fix even_spec 1); (only 1: trivial).	0.784248828888	619
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0	search with cache (only 1: inversion 1).	0.00980615615845	1
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.2.0.0.3	search with cache (only 1: intros [| a] b); (only 1: simpl); (only 1: now exists 0); (only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H')); (only 1: set (a' := S a) in *); (only 1: auto).	0.0791411399841	51
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.3	search with cache (only 1: intros); (only 1: apply gcd_divide).	0.0132620334625	5
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	1.13	search with cache (only 1: fix gcd_divide 1); (only 1: auto).	0.577414989471	387
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	25	search with cache (only 1: apply le_0_l).	0.497601032257	544
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.1.0.2	search with cache (only 1: induction n); (only 1: trivial); (only 1: simpl); (only 1: rewrite add_succ_r); (only 1: simpl); (only 1: now f_equal).	0.0498230457306	18
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.8.3.1.0.0	search with cache (only 1: destruct n); (only 1: simpl); (only 1: auto); (only 1: revert n); (only 1: fix le_div2 1); (only 1: trivial).	9.00312590599	4879
Coq.Arith.PeanoNat.Nat.div2_decr	40	6.8	search with cache (only 1: fix le_div2 1); (only 1: trivial).	0.783937215805	639
Coq.Arith.PeanoNat.Nat.double_twice	40	0.17.8	search with cache (only 1: simpl); (only 1: intro k); (only 1: now rewrite add_0_r).	0.62716794014	743
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	6.11	search with cache (only 1: fix odd_spec 1); (only 1: trivial).	0.313887119293	346
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.11	search with cache (only 1: fix odd_spec 1); (only 1: now intro n; induction n).	0.859279870987	497
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	8.4.8	search with cache (only 1: unfold testbit, odd); (only 1: fix odd_spec 1); (only 1: trivial).	9.04736208916	6943
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	7.18.13	search with cache (only 1: intro n); (only 1: fix le_div2 1); (only 1: now f_equal).	8.52623200417	7709
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	10.0.1	search with cache (only 1: apply testbit_bitwise_1); (only 1: trivial); (only 1: trivial).	0.289093971252	278
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	10	search with cache (only 1: trivial).	0.01935505867	21
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	6	search with cache (only 1: inversion H).	0.0156290531158	7
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	11.0	search with cache (only 1: intro n); (only 1: Nat.order').	0.136155843735	113
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.Bool.Zerob.zerob_true_intro	40	17.26	search with cache (only 1: intros); (only 1: now subst).	0.412949085236	1143
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n); (only 1: trivial with bool); (only 1: inversion 1).	0.0210540294647	3
Coq.Bool.Zerob.zerob_false_intro	40	2.25.0	search with cache (only 1: destruct n); (only 1: intuition); (only 1: trivial with bool).	0.343792915344	807
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n); (only 1: inversion 1); (only 1: inversion 1); (only 1: inversion 1).	0.0566091537476	28
Coq.Bool.BoolOrder.le_refl	40	0	search with cache (only 1: destr_bool).	0.0156409740448	1
Coq.Bool.BoolOrder.le_trans	40	0	search with cache (only 1: destr_bool).	0.019073009491	1
Coq.Bool.BoolOrder.le_true	40	0	search with cache (only 1: destr_bool).	0.014240026474	1
Coq.Bool.BoolOrder.false_le	40	0	search with cache (only 1: destr_bool).	0.0135440826416	1
Coq.Bool.BoolOrder.le_compat	40	0.0.0.0.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2); (only 1: red); (only 1: auto); (only 1: red); (only 1: auto); (only 1: intros R R' EQ a a' Ha WF); (only 1: subst a'); (only 1: destr_bool).	0.113577127457	8
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	search with cache (only 1: destr_bool); (only 1: tauto).	0.0984778404236	2
Coq.Bool.BoolOrder.lt_trans	40	1.0	search with cache (only 1: destr_bool); (only 1: tauto).	0.01735496521	3
Coq.Bool.BoolOrder.lt_compat	40	0	search with cache (only 1: intuition).	0.0127329826355	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.0	search with cache (only 1: destr_bool); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto).	0.0243809223175	5
Coq.Bool.BoolOrder.lt_total	40	0.0.0.2.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0514450073242	7
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	search with cache (only 1: destr_bool); (only 1: auto).	0.0136048793793	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	search with cache (only 1: destr_bool); (only 1: auto); (only 1: auto); (only 1: auto).	0.0206589698792	4
Coq.Bool.BoolOrder.le_lteq	40	0.0.0.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0509858131409	6
Coq.Bool.BoolOrder.le_preorder	40	1.19.2.5.1	search with cache (only 1: constructor); (only 1: intros x); (only 1: destr_bool); (only 1: intro l); (only 1: destr_bool).	2.4600610733	3176
Coq.Bool.BoolOrder.lt_strorder	40	0.7.0.1.2.14	search with cache (only 1: split); (only 1: compute); (only 1: destr_bool); (only 1: intros b1 b2 b3); (only 1: destr_bool); (only 1: auto).	0.937732934952	1144
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	15	search with cache (only 1: discriminate).	0.0566020011902	224
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.0111491680145	1
Coq.Bool.Bool.eq_true_false_abs	40	6.6.19.0	search with cache (only 1: intro H); (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end); (only 1: discriminate); (only 1: discriminate).	0.990113019943	4107
Coq.Bool.Bool.not_true_is_false	40	3.16.2	search with cache (only 1: destr_bool); (only 1: Ltac.reflexivity || destruct H); (only 1: repeat Ltac.split).	0.50998210907	1388
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool); (only 1: intuition).	0.0168299674988	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0210270881653	5
Coq.Bool.Bool.not_false_iff_true	40	1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0205121040344	5
Coq.Bool.Bool.le_implb	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0268402099609	9
Coq.Bool.Bool.compare_spec	40	3.4.4.3.3.1	search with cache (only 1: destr_bool); (only 1: constructor); (only 1: repeat Ltac.split); (only 1: auto); (only 1: auto); (only 1: auto).	1.41647195816	3183
Coq.Bool.Bool.eqb_subst	40	4.0.0	search with cache (only 1: intro H); (only 1: intro z); (only 1: destr_bool).	0.0191578865051	7
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.0121419429779	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0150978565216	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0259981155396	9
Coq.Bool.Bool.eqb_false_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0309689044952	9
Coq.Bool.Bool.negb_orb	40	2.1.4	search with cache (only 1: destruct b1); (only 1: repeat Ltac.split); (only 1: repeat Ltac.split).	0.026782989502	24
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.0139269828796	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.0129449367523	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.0126011371613	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0152621269226	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.014641046524	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.011892080307	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0125710964203	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.0134971141815	1
Coq.Bool.Bool.negb_true_iff	40	1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0193839073181	5
Coq.Bool.Bool.negb_false_iff	40	1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0195269584656	5
Coq.Bool.Bool.orb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0329129695892	9
Coq.Bool.Bool.orb_false_iff	40	0.0.0.6.1	search with cache (only 1: intro H); (only 1: intuition); (only 1: destr_bool); (only 1: destr_bool); (only 1: destr_bool).	0.316968917847	198
Coq.Bool.Bool.orb_true_elim	40	2.2.3.0	search with cache (only 1: destr_bool); (only 1: auto); (only 1: auto); (only 1: auto).	0.0558769702911	65
Coq.Bool.Bool.orb_prop	40	2.2.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: auto); (only 1: auto).	0.0179011821747	9
Coq.Bool.Bool.orb_true_intro	40	2.2.1.0.0	search with cache (only 1: intros); (only 1: destruct b1); (only 1: destr_bool); (only 1: apply orb_true_iff); (only 1: auto).	0.0210800170898	14
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0111801624298	1
Coq.Bool.Bool.orb_false_elim	40	2.0	search with cache (only 1: destr_bool); (only 1: auto).	0.0143020153046	4
Coq.Bool.Bool.orb_diag	40	6.0	search with cache (only 1: intros); (only 1: destr_bool).	0.0144050121307	8
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	search with cache (only 1: intros); (only 1: apply orb_true_iff); (only 1: apply orb_true_iff); (only 1: destr_bool).	0.023411989212	15
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00832486152649	1
Coq.Bool.Bool.orb_false_r	40	5.0	search with cache (only 1: intros); (only 1: destr_bool).	0.0137388706207	7
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00869107246399	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00893902778625	1
Coq.Bool.Bool.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00879812240601	1
Coq.Bool.Bool.orb_comm	40	7.0	search with cache (only 1: intros); (only 1: destr_bool).	0.0210840702057	13
Coq.Bool.Bool.orb_assoc	40	7.0	search with cache (only 1: intros); (only 1: destr_bool).	0.0437500476837	20
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.6	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.632175922394	489
Coq.Bool.Bool.andb_false_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0348889827728	9
Coq.Bool.Bool.andb_true_eq	40	3.0	search with cache (only 1: destr_bool); (only 1: repeat Ltac.split).	0.0153169631958	5
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.0103890895844	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros); (only 1: apply andb_false_iff); (only 1: auto).	0.0132451057434	3
Coq.Bool.Bool.andb_false_r	40	1.2.1	search with cache (only 1: intros); (only 1: apply andb_false_iff); (only 1: auto).	0.0130069255829	7
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00791883468628	1
Coq.Bool.Bool.andb_diag	40	7.0	search with cache (only 1: intros); (only 1: destr_bool).	0.0130069255829	9
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00904321670532	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00874495506287	1
Coq.Bool.Bool.andb_false_elim	40	2.2.2.1	search with cache (only 1: destr_bool); (only 1: auto); (only 1: auto); (only 1: auto).	0.0928630828857	106
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0089271068573	1
Coq.Bool.Bool.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0087890625	1
Coq.Bool.Bool.andb_comm	40	2	search with cache (only 1: destr_bool).	0.102707862854	72
Coq.Bool.Bool.andb_assoc	40	2	search with cache (only 1: destr_bool).	0.147036075592	84
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0140829086304	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0137689113617	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0136890411377	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0141050815582	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0103080272675	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00958299636841	1
Coq.Bool.Bool.implb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0327749252319	9
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0284249782562	5
Coq.Bool.Bool.implb_orb	40	0	search with cache (only 1: destr_bool).	0.0112810134888	1
Coq.Bool.Bool.implb_negb_orb	40	0	search with cache (only 1: destr_bool).	0.0104360580444	1
Coq.Bool.Bool.implb_true_r	40	0	search with cache (only 1: destr_bool).	0.00866293907166	1
Coq.Bool.Bool.implb_false_r	40	0	search with cache (only 1: destr_bool).	0.00865292549133	1
Coq.Bool.Bool.implb_true_l	40	0	search with cache (only 1: destr_bool).	0.00892400741577	1
Coq.Bool.Bool.implb_false_l	40	0	search with cache (only 1: destr_bool).	0.00894808769226	1
Coq.Bool.Bool.implb_same	40	0	search with cache (only 1: destr_bool).	0.00882291793823	1
Coq.Bool.Bool.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.0100009441376	1
Coq.Bool.Bool.implb_negb	40	0	search with cache (only 1: destr_bool).	0.0104880332947	1
Coq.Bool.Bool.implb_curry	40	0	search with cache (only 1: destr_bool).	0.0133759975433	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0134530067444	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0143871307373	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0145950317383	1
Coq.Bool.Bool.xorb_false_r	40	0.0.2.1	search with cache (only 1: intros); (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end); (only 1: auto); (only 1: auto).	0.01638007164	7
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00981593132019	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00949716567993	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00884914398193	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00976300239563	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0130681991577	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.0156910419464	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0119779109955	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0150971412659	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0156621932983	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0160391330719	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.015328168869	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.0116989612579	2
Coq.Bool.Bool.negb_xorb_r	40	2.0.0.0.0.0	search with cache (only 1: intros b b'); (only 1: destruct b, b'); (only 1: trivial); (only 1: trivial); (only 1: trivial); (only 1: trivial).	0.0199930667877	8
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0.0	search with cache (only 1: intros b b'); (only 1: destruct b, b'); (only 1: trivial); (only 1: trivial); (only 1: trivial); (only 1: destr_bool).	0.0194821357727	6
Coq.Bool.Bool.eq_iff_eq_true	40	1.1.1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.135330915451	9
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0226159095764	5
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool); (only 1: intuition).	0.0143220424652	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool); (only 1: intuition).	0.0136549472809	3
Coq.Bool.Bool.absurd_eq_bool	40	6.6.0	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.360372066498	490
Coq.Bool.Bool.absurd_eq_true	40	6.0	search with cache (only 1: destr_bool); (only 1: intuition).	0.0125291347504	8
Coq.Bool.Bool.trans_eq_bool	40	5	search with cache (only 1: destr_bool).	0.0232110023499	23
Coq.Bool.Bool.Is_true_eq_true	40	1.4	search with cache (only 1: destr_bool); (only 1: auto).	0.0230989456177	25
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.009437084198	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros); (only 1: subst); (only 1: auto with bool).	0.0112040042877	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00879001617432	1
Coq.Bool.Bool.eqb_eq	40	1.1.0	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto).	0.0171370506287	5
Coq.Bool.Bool.orb_prop_elim	40	0.1.0.0.0.2.0	search with cache (only 1: intros); (only 1: destruct a, b); (only 1: auto with bool); (only 1: auto with bool); (only 1: auto with bool); (only 1: destr_bool); (only 1: auto).	0.0270118713379	10
Coq.Bool.Bool.orb_prop_intro	40	16.0	search with cache (only 1: destr_bool); (only 1: tauto).	2.56002902985	3120
Coq.Bool.Bool.andb_prop_intro	40	9.0.0.1	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto); (only 1: apply H).	1.45634293556	1546
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto); (only 1: tauto); (only 1: tauto).	0.0185830593109	5
Coq.Bool.Bool.eq_bool_prop_intro	40	1.1.1	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto).	0.0406529903412	24
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto).	0.0178251266479	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto).	0.0141181945801	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool); (only 1: tauto).	0.0142068862915	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool); (only 1: tauto).	0.0113208293915	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool); (only 1: tauto); (only 1: tauto).	0.0130960941315	3
Coq.Bool.Bool.andb_if	40	2	search with cache (only 1: destr_bool).	0.0472090244293	39
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00996708869934	1
Coq.Bool.Bool.andb_lazy_alt	40	0.0.1.0.1.0.0.0	search with cache (only 1: intros); (only 1: destruct a, b); (only 1: repeat Ltac.split); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto); (only 1: reflexivity).	0.021231174469	10
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros); (only 1: trivial).	0.0100281238556	2
Coq.Bool.Bool.reflect_iff	40	0.1.1.31	search with cache (only 1: intros A B []); (only 1: intuition); (only 1: intuition); (only 1: destr_bool).	18.5504610538	29330
Coq.Bool.Bool.iff_reflect	40	0.0.1	search with cache (only 1: destr_bool); (only 1: intuition); (only 1: intuition).	0.0352210998535	19
Coq.Bool.Bool.reflect_dec	40	5.5.2	search with cache (only 1: destruct 1); (only 1: auto); (only 1: auto).	0.634068012238	336
Coq.Bool.Bool.eqb_spec	40	0.0.6.6.0.0.0	search with cache (only 1: destruct b, b'); (only 1: destr_bool); (only 1: intuition); (only 1: intuition); (only 1: intuition); (only 1: destr_bool); (only 1: intuition).	0.859349966049	1775
Coq.Bool.BoolEq.beq_eq_true	40	0.1.2	search with cache (only 1: intros); (only 1: destruct H); (only 1: auto).	0.0246229171753	6
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	12.44.0	search with cache (only 1: intros x y e); (only 1: apply eq_iff_eq_true); (only 1: intuition).	30.5178580284	63799
Coq.Bool.BoolEq.eq_dec	40
Coq.Bool.IfProp.Iftrue_inv	40	5.0.5	search with cache (only 1: destruct 1); (only 1: auto); (only 1: destr_bool).	0.179757118225	216
Coq.Bool.IfProp.Iffalse_inv	40	0.7.0	search with cache (only 1: destruct 1); (only 1: destr_bool); (only 1: auto with bool).	0.0267150402069	18
Coq.Bool.IfProp.IfProp_true	40	17.16.8.5	search with cache (only 1: intro H); (only 1: intro n); (only 1: inversion 1); (only 1: auto).	5.72510886192	24749
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: assumption).	0.0446348190308	20
Coq.Bool.IfProp.IfProp_or	40	2.2.0.3.7	search with cache (only 1: intro H); (only 1: intro z); (only 1: destruct 1); (only 1: auto); (only 1: auto).	4.25665783882	3130
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.DecBool.ifdec_left	40	7.0.0.1	search with cache (only 1: intros); (only 1: destruct H); (only 1: Ltac.reflexivity); (only 1: contradiction).	0.180903196335	239
Coq.Bool.DecBool.ifdec_right	40	2.5.0.0	search with cache (only 1: intros); (only 1: case H); (only 1: contradiction); (only 1: auto).	0.359285116196	209
Coq.Bool.Sumbool.sumbool_of_bool	40	2.2.15.0	search with cache (only 1: intro H); (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end); (only 1: auto); (only 1: auto).	0.17982006073	587
Coq.Bool.Sumbool.bool_eq_rec	40	2.2.2	search with cache (only 1: destruct b); (only 1: auto); (only 1: auto).	0.0403490066528	37
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b); (only 1: auto); (only 1: auto).	0.0179100036621	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	1.1.2.1.0	search with cache (only 1: case H1); (only 1: auto); (only 1: case H2); (only 1: auto); (only 1: auto).	0.698143005371	293
Coq.Bool.Sumbool.sumbool_not	40	1.1.1.0.0	search with cache (only 1: case H1); (only 1: case H1); (only 1: auto); (only 1: auto); (only 1: auto).	0.363510847092	155
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Classes.DecidableClass.Decidable_sound	40	1.7.1.32.22.1	search with cache (only 1: intro H); (only 1: intro n); (only 1: case n); (only 1: intro z); (only 1: intros [? ?]); (only 1: auto).	9.71620297432	60250
Coq.Classes.DecidableClass.Decidable_complete	40	0.10.4.35.25.4	search with cache (only 1: intro H); (only 1: intro n); (only 1: case n); (only 1: intro z); (only 1: intros [? ?]); (only 1: assumption).	26.9135978222	139888
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.0988121032715	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.011283159256	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.0	search with cache (only 1: do 2 red); (only 1: auto).	0.0115928649902	2
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0104198455811	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	2.1.1.1.0	search with cache (only 1: intro); (only 1: intro); (only 1: intro); (only 1: intro); (only 1: auto).	0.0466539859772	11
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	6.2	search with cache (only 1: intro); (only 1: firstorder).	0.0452799797058	15
Coq.Classes.SetoidClass.setoid_refl	40	31.0	search with cache (only 1: intro n); (only 1: now subst).	0.280476808548	1312
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0108110904694	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0114810466766	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	3.1.1	search with cache (only 1: red); (only 1: red); (only 1: auto).	0.031308889389	8
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.0181679725647	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.045618057251	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.014625787735	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.0159499645233	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0359480381012	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.470034122467	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0227069854736	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0198128223419	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0171060562134	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0160369873047	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0194270610809	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.016713142395	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0163691043854	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.0	search with cache (only 1: compute in *); (only 1: auto).	0.0226438045502	2
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	1.1.2.0	search with cache (only 1: firstorder); (only 1: transitivity y); (only 1: auto); (only 1: auto).	0.0270159244537	8
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.0157389640808	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0106899738312	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0139529705048	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.394635915756	1
Coq.Classes.CMorphisms.eq_proper_proxy	40	6	search with cache (only 1: Ltac.reflexivity).	0.0486409664154	56
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.010360956192	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00951099395752	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	10.1.24.2	search with cache (only 1: split); (only 1: destruct 2); (only 1: firstorder); (only 1: firstorder).	9.77557492256	21082
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.01118683815	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0166261196136	1
Coq.Classes.CMorphisms.subrelation_refl	40	5.0.0	search with cache (only 1: hnf); (only 1: intros x y H'); (only 1: assumption).	0.0190010070801	8
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0175487995148	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	4	search with cache (only 1: simpl_crelation).	0.0521070957184	5
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.0197160243988	2
Coq.Classes.CMorphisms.forall_subrelation	40	8	search with cache (only 1: firstorder).	0.0559329986572	27
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4	search with cache (only 1: simpl_crelation).	0.0248579978943	23
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0115249156952	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	search with cache (only 1: reduce); (only 1: firstorder).	0.0152390003204	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0119571685791	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	1.0.0	search with cache (only 1: reduce); (only 1: simpl_crelation); (only 1: firstorder).	0.0473520755768	4
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	3.1	search with cache (only 1: reduce); (only 1: firstorder).	0.0507469177246	6
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0306558609009	6
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	12	search with cache (only 1: firstorder).	9.86353802681	4255
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.199907064438	118
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.50815701485	469
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	0.0837910175323	21
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	12.0	search with cache (only 1: intros A R H x x0 y X); (only 1: firstorder).	5.10815191269	2372
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	9.0	search with cache (only 1: hnf); (only 1: firstorder).	0.0661790370941	47
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	5.0	search with cache (only 1: intros A R H x y X x0 y0 X0); (only 1: firstorder).	0.04962682724	11
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	5	search with cache (only 1: simpl_crelation).	0.0217559337616	11
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0.4	search with cache (only 1: unfold respectful, relation_equivalence in *); (only 1: firstorder).	0.0134840011597	6
Coq.Classes.CMorphisms.flip_respectful	40	9	search with cache (only 1: firstorder).	0.0380051136017	33
Coq.Classes.CMorphisms.flip1	40	2.0.3	search with cache (only 1: hnf); (only 1: intros); (only 1: auto).	0.0161511898041	8
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00798296928406	1
Coq.Classes.CMorphisms.eq_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.014123916626	3
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00864887237549	1
Coq.Classes.CMorphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00788402557373	2
Coq.Classes.CMorphisms.proper_proper	40	0.0.1	search with cache (only 1: reduce); (only 1: subst); (only 1: firstorder).	0.0159349441528	4
Coq.Classes.CMorphisms.proper_normalizes_proper	40	8	search with cache (only 1: firstorder).	0.039158821106	21
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00828790664673	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1.4	search with cache (only 1: intros A B R R' HRR' S S' HSS' f g); (only 1: unfold flip, respectful); (only 1: simpl_crelation).	0.157530069351	24
Coq.Classes.CMorphisms.proper_sym_flip_2	40	8.5.0	search with cache (only 1: intros A R1 Sym B R2 f Hf); (only 1: unfold flip, respectful); (only 1: firstorder).	5.54372215271	1083
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	14.10	search with cache (only 1: simpl_crelation); (only 1: firstorder).	5.42473578453	2037
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.0.1	search with cache (only 1: intros A R Sym f Hf x x' Hxx'); (only 1: repeat red in Hf); (only 1: split); (only 1: eauto); (only 1: eauto).	0.0907080173492	7
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.11.5	search with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0); (only 1: split); (only 1: apply mor); (only 1: auto); (only 1: auto); (only 1: apply mor); (only 1: auto); (only 1: auto).	17.6792931557	5612
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.4	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'); (only 1: repeat red in Hf); (only 1: split); (only 1: eauto); (only 1: eauto).	0.0583329200745	39
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.1.2.0	search with cache (only 1: firstorder); (only 1: transitivity y); (only 1: auto); (only 1: auto).	0.023185968399	8
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.0147850513458	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00928902626038	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0142059326172	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.356323003769	1
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CRelationClasses.complement_inverse	40	11	search with cache (only 1: Ltac.reflexivity).	0.0261919498444	33
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.0125560760498	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf); (only 1: assumption).	0.0157070159912	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf); (only 1: firstorder).	0.0266289710999	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	4	search with cache (only 1: firstorder).	0.0312860012054	5
Coq.Classes.CRelationClasses.flip_StrictOrder	40	4	search with cache (only 1: firstorder).	0.0251958370209	5
Coq.Classes.CRelationClasses.flip_PER	40	4	search with cache (only 1: firstorder).	0.0368659496307	5
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0310349464417	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	7	search with cache (only 1: firstorder).	0.0178179740906	14
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.0111889839172	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0	search with cache (only 1: firstorder).	0.0107288360596	1
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0128481388092	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0150668621063	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0126340389252	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0224092006683	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0478048324585	1
Coq.Classes.Morphisms.eq_proper_proxy	40	6	search with cache (only 1: Ltac.reflexivity).	0.0508568286896	56
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0119678974152	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0106060504913	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.1.20.4.5	search with cache (only 1: hnf); (only 1: Ltac.split); (only 1: destruct 2); (only 1: firstorder); (only 1: firstorder).	13.9229381084	25618
Coq.Classes.Morphisms.subrelation_id_proper	40	1.1	search with cache (only 1: reduce); (only 1: firstorder).	0.016252040863	4
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0200321674347	1
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.0112769603729	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.0125069618225	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.4.2.4	search with cache (only 1: unfold subrelation in *); (only 1: reduce); (only 1: subst); (only 1: firstorder).	0.619556903839	150
Coq.Classes.Morphisms.pointwise_subrelation	40	3	search with cache (only 1: firstorder).	0.0123598575592	4
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation); (only 1: firstorder).	0.0316898822784	18
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	search with cache (only 1: reduce); (only 1: firstorder).	0.0146460533142	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0122289657593	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0.0.28	search with cache (only 1: compute); (only 1: intros H x y H0 a); (only 1: intuition).	5.42000484467	5285
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	6.0.1	search with cache (only 1: reduce); (only 1: red in H0); (only 1: firstorder).	0.0689668655396	16
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.0287270545959	10
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	7.1	search with cache (only 1: intros R H x x0 y H0 H1); (only 1: firstorder).	0.507988929749	209
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.193007230759	115
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.42948007584	486
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.107077121735	80
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	14.0	search with cache (only 1: intros R H x x0 y H0); (only 1: firstorder).	11.586070776	6893
Coq.Classes.Morphisms.symmetric_equiv_flip	40	5.3.0	search with cache (only 1: hnf); (only 1: compute); (only 1: firstorder).	0.0236709117889	35
Coq.Classes.Morphisms.compose_proper_obligation_1	40	3.2.0	search with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0); (only 1: intuition); (only 1: firstorder).	0.0310289859772	8
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	4.5.5	search with cache (only 1: reduce); (only 1: subst); (only 1: firstorder).	0.120438814163	167
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	8	search with cache (only 1: firstorder).	0.0132710933685	9
Coq.Classes.Morphisms.flip_respectful	40	11	search with cache (only 1: firstorder).	0.243716001511	105
Coq.Classes.Morphisms.flip1	40	4.4	search with cache (only 1: unfold flip, respectful); (only 1: apply H).	0.0317800045013	29
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00891089439392	1
Coq.Classes.Morphisms.eq_subrelation	40	0.3.0.3	search with cache (only 1: unfold subrelation); (only 1: firstorder); (only 1: subst); (only 1: firstorder).	0.0210249423981	10
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00928592681885	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00880885124207	2
Coq.Classes.Morphisms.proper_proper	40	1.0.0.0	search with cache (only 1: reduce); (only 1: subst); (only 1: unfold respectful, relation_equivalence, predicate_equivalence in *); (only 1: firstorder).	0.0249180793762	11
Coq.Classes.Morphisms.proper_normalizes_proper	40	6	search with cache (only 1: firstorder).	0.0556540489197	18
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0106329917908	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	6.3	search with cache (only 1: unfold flip, respectful); (only 1: firstorder).	0.269414186478	113
Coq.Classes.Morphisms.proper_sym_flip_2	40	8.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf); (only 1: unfold flip, respectful); (only 1: firstorder).	1.41789197922	867
Coq.Classes.Morphisms.proper_sym_impl_iff	40	17.11	search with cache (only 1: simpl_relation); (only 1: firstorder).	7.25319504738	5737
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationClasses.complement_inverse	40	11	search with cache (only 1: Ltac.reflexivity).	0.0219440460205	33
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.01247382164	2
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf); (only 1: assumption).	0.0146088600159	7
Coq.Classes.RelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf); (only 1: firstorder).	0.0284850597382	16
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0353648662567	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	3	search with cache (only 1: firstorder).	0.0306358337402	4
Coq.Classes.RelationClasses.flip_PER	40	3	search with cache (only 1: firstorder).	0.0438921451569	4
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0422329902649	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	6.2	search with cache (only 1: hnf); (only 1: firstorder).	0.0163779258728	10
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.0127239227295	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	0.0.3.70	search with cache (only 1: intro n); (only 1: induction n); (only 1: firstorder); (only 1: firstorder).	9.86497092247	28984
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	2.0.0.0	search with cache (only 1: intro l); (only 1: induction l); (only 1: firstorder); (only 1: firstorder).	1.41697216034	44
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	1.0.0.0	search with cache (only 1: intro l); (only 1: induction l); (only 1: firstorder); (only 1: firstorder).	0.0156590938568	5
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.0.0.0.0	search with cache (only 1: intro l); (only 1: induction l); (only 1: firstorder); (only 1: intros x y z H H0 x0); (only 1: pose (IHl (x x0) (y x0) (z x0))); (only 1: firstorder).	0.531100034714	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0123660564423	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0237338542938	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.064395904541	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	3	search with cache (only 1: firstorder).	0.0196599960327	4
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition).	0.0319528579712	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	0	search with cache (only 1: auto).	0.0205078125	1
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: auto).	0.0231449604034	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	0.0.0.2.0.0.1.0.0.0.0.0.4	search with cache (only 1: intros); (only 1: functional induction merge m1 m2); (only 1: auto); (only 1: factornode _x _x0 _x1 _x2 _x3 as m1); (only 1: auto); (only 1: factornode _x _x0 _x1 _x2 _x3 as m1); (only 1: generalize (remove_min_avl_1 H0)); (only 1: rewrite e1); (only 1: destruct 1); (only 1: apply bal_avl); (only 1: auto); (only 1: auto); (only 1: omega_max).	33.0128130913	7933
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.1.0.0	search with cache (only 1: induction m); (only 1: simpl); (only 1: intuition); (only 1: auto).	0.0444939136505	5
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0	search with cache (only 1: induction m); (only 1: simpl); (only 1: auto); (only 1: auto).	0.0438079833984	4
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	6.0.6.45	search with cache (only 1: intros z Hz); (only 1: simpl); (only 1: unfold Raw.empty); (only 1: inversion_clear 1).	0.664201974869	2002
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.0.0.16.12	search with cache (only 1: red); (only 1: intros m x y); (only 1: unfold elements, MapsTo, eq_key_elt); (only 1: rewrite elements_mapsto); (only 1: auto).	5.68014788628	7165
Coq.FSets.FMapFullAVL.IntMake.elements_3	40	0.0.0.0.0.3.1.0.10.1.0	search with cache (only 1: intros); (only 1: unfold elements, MapsTo, eq_key_elt); (only 1: unfold Raw.elements); (only 1: apply elements_aux_sort); (only 1: apply (is_bst m)); (only 1: constructor); (only 1: intros); (only 1: inversion H0); (only 1: inversion_clear H); (only 1: inversion_clear H); (only 1: inversion_clear H).	1.88514304161	2137
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	0.8.0	search with cache (only 1: intros); (only 1: apply PX.Sort_NoDupA); (only 1: exact (elements_sort (is_bst m))).	0.107458114624	75
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40	1	search with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0627598762512	14
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal); (only 1: intros (m, b, a) (m', b', a') cmp); (only 1: rewrite Equivb_Equivb); (only 1: simpl in *); (only 1: rewrite equal_Equivb); (only 1: auto); (only 1: auto); (only 1: auto).	0.434527873993	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	10.7	search with cache (only 1: red); (only 1: auto with ordered_type).	0.731062173843	730
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	8	search with cache (only 1: intuition).	0.111351013184	29
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	1.1.1.30	search with cache (only 1: induction 1); (only 1: auto); (only 1: auto); (only 1: auto).	0.736306905746	1220
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40	0.2.9.0.2.9.12.0	search with cache (only 1: induction 1); (only 1: eauto with *); (only 1: firstorder); (only 1: exists x); (only 1: auto); (only 1: firstorder); (only 1: exists x); (only 1: auto).	8.03254890442	11332
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40	0.0.10.5.33	search with cache (only 1: intros m x y e e'); (only 1: induction 1); (only 1: eauto with *); (only 1: auto); (only 1: auto).	6.10067915916	8550
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	1.1.3.6.16	search with cache (only 1: intros m x y e); (only 1: induction 1); (only 1: eauto with ordered_type); (only 1: auto); (only 1: auto).	11.1428492069	1292
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	6.6.3	search with cache (only 1: split); (only 1: intuition_in); (only 1: intuition_in).	1.06486487389	307
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.30.0	search with cache (only 1: intuition_in); (only 1: compute); (only 1: intuition_in).	0.565851926804	976
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.0.32.0	search with cache (only 1: intros); (only 1: compute); (only 1: intros); (only 1: intuition_in).	0.832641124725	1688
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	2.0.5	search with cache (only 1: unfold lt_tree); (only 1: intuition_in); (only 1: eauto with ordered_type).	0.393239021301	22
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.6	search with cache (only 1: unfold gt_tree); (only 1: intuition_in); (only 1: order).	2.61990094185	17
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *); (only 1: intuition_in).	0.0279037952423	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0222868919373	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *); (only 1: intuition_in).	0.0255870819092	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0201230049133	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	6.0.0.1	search with cache (only 1: intuition_in); (only 1: induction m); (only 1: intuition_in); (only 1: order).	5.53999900818	143
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.1.1.1	search with cache (only 1: intros); (only 1: intro); (only 1: intro); (only 1: order).	0.0937530994415	31
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros); (only 1: intro); (only 1: generalize (H _ H0)); (only 1: order).	0.0279421806335	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.1.1.1	search with cache (only 1: intros); (only 1: intro); (only 1: intro); (only 1: order).	0.0892589092255	31
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	6	search with cache (only 1: left).	0.0130791664124	7
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.21.0	search with cache (only 1: unfold empty); (only 1: intros m x f); (only 1: intuition_in).	1.41927695274	493
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	8.0.0.7.7	search with cache (only 1: intros); (only 1: intro); (only 1: destruct m as [| r x e l h]); (only 1: intuition_in); (only 1: intuition_in).	9.56113505363	5407
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	1.0.3.19.1.0.0	search with cache (only 1: intros m x); (only 1: functional induction mem x m); (only 1: intros); (only 1: inversion H); (only 1: auto); (only 1: auto with ordered_type); (only 1: auto with ordered_type).	10.0894491673	9672
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.0.1.5.0.4.1.0	search with cache (only 1: intros m x); (only 1: functional induction find x m); (only 1: intuition_in); (only 1: constructor 2); (only 1: auto); (only 1: auto); (only 1: constructor 3); (only 1: auto with ordered_type).	3.71026301384	1048
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.17.4	search with cache (only 1: intros); (only 1: constructor 2); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto).	7.58438897133	4766
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	1.2	search with cache (only 1: unfold create); (only 1: intuition_in).	2.3469080925	30
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.1.2.0.0	search with cache (only 1: unfold elements); (only 1: simpl); (only 1: intros); (only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse); (only 1: auto).	0.0765209197998	8
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.8.0.0.0	search with cache (only 1: induction m); (only 1: simpl); (only 1: inversion_clear 1); (only 1: inversion_clear 1); (only 1: auto); (only 1: auto); (only 1: auto).	1.11488294601	372
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	37.21	search with cache (only 1: intros Bs); (only 1: inversion_clear 1).	4.3767619133	5908
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40	1.4.3.2.0.3.4	search with cache (only 1: intros m x y e); (only 1: unfold In, mem); (only 1: rewrite In_alt); (only 1: simpl); (only 1: rewrite remove_in); (only 1: intuition); (only 1: apply (is_bst m)).	2.22593784332	3085
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40	9.1.25.0	search with cache (only 1: intros m x y e); (only 1: apply find_1); (only 1: apply (is_bst m)); (only 1: auto).	1.16848397255	3204
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	0.0.0.12.10	search with cache (only 1: red); (only 1: intros m x y); (only 1: unfold elements, MapsTo, eq_key_elt); (only 1: rewrite elements_mapsto); (only 1: auto).	2.84944605827	4579
Coq.FSets.FMapAVL.IntMake.elements_3	40	0.0.0.0.0.5.1.0.10.3.0	search with cache (only 1: intros); (only 1: unfold elements, MapsTo, eq_key_elt); (only 1: unfold Raw.elements); (only 1: apply elements_aux_sort); (only 1: apply (is_bst m)); (only 1: constructor); (only 1: intros); (only 1: inversion H0); (only 1: inversion_clear H); (only 1: inversion_clear H); (only 1: inversion_clear H).	1.55237412453	2988
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.8.0	search with cache (only 1: intros); (only 1: apply PX.Sort_NoDupA); (only 1: exact (elements_sort (is_bst m))).	0.0668129920959	61
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	1	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0347838401794	15
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	1.1.1.0.1.0.0.0	search with cache (only 1: unfold equal); (only 1: intros (m, b) (m', b') cmp); (only 1: rewrite Equivb_Equivb); (only 1: simpl in *); (only 1: rewrite equal_Equivb); (only 1: auto); (only 1: auto); (only 1: auto).	2.73025798798	671
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	0.4.15.3.0	search with cache (only 1: destruct e2); (only 1: simpl); (only 1: auto with ordered_type); (only 1: simpl); (only 1: auto with ordered_type).	1.54378294945	4251
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	7.7.1	search with cache (only 1: intros); (only 1: red); (only 1: auto with ordered_type).	1.33007502556	2293
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	7.1	search with cache (only 1: intros); (only 1: intuition).	0.064642906189	69
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	1.3	search with cache (only 1: simpl); (only 1: auto).	0.0744581222534	47
Coq.FSets.FMapPositive.PositiveMap.gempty	40	9.4.7.98	search with cache (only 1: induction i); (only 1: auto); (only 1: auto); (only 1: auto).	14.1728830338	40655
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.1.0.0.0.0.0	search with cache (only 1: destruct i); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	0.0322449207306	8
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	1.2.0.9	search with cache (only 1: induction i); (only 1: auto); (only 1: auto); (only 1: auto).	0.193683862686	176
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	1.0.0.0.0.0.1	search with cache (only 1: destruct i); (only 1: simpl in *); (only 1: auto); (only 1: simpl in *); (only 1: auto); (only 1: simpl in *); (only 1: auto).	0.0433859825134	9
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	3.0.3.4.4	search with cache (only 1: intro); (only 1: intro); (only 1: red); (only 1: rewrite H in H0); (only 1: auto).	0.741117954254	521
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.0202159881592	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo); (only 1: auto).	0.0234150886536	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	8.6	search with cache (only 1: rewrite Empty_alt); (only 1: exact gempty).	1.82684588432	464
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.2.0	search with cache (only 1: unfold MapsTo); (only 1: intro H); (only 1: rewrite gso); (only 1: auto); (only 1: auto).	0.117618083954	53
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.3.0.1.0.0.0.0.2	search with cache (only 1: unfold map); (only 1: intros); (only 1: apply mem_2); (only 1: rewrite mem_find); (only 1: destruct H as (v, H)); (only 1: generalize (find_1 H)); (only 1: clear H); (only 1: rewrite gmapi); (only 1: destruct (find x m)); (only 1: auto); (only 1: simpl in *); (only 1: discriminate).	16.7217731476	7818
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.2.4.0	search with cache (only 1: intros); (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H)); (only 1: destruct (mem y s)); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	14.9274060726	3588
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	3.12	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.diff_iff s s' x)); (only 1: intuition).	1.02608299255	652
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0172119140625	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	8	search with cache (only 1: auto with set).	1.32815504074	393
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.1.0.0.0.3.1.0	search with cache (only 1: intros); (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H)); (only 1: destruct (mem y (remove x s))); (only 1: destruct (mem y s)); (only 1: intuition); (only 1: intuition); (only 1: destruct (mem y s)); (only 1: intuition); (only 1: intuition).	7.52639102936	1725
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	3	search with cache (only 1: auto with set).	0.0283648967743	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite FM.mem_iff); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.0398259162903	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros); (only 1: rewrite FM.mem_iff); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.0458960533142	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	5	search with cache (only 1: auto with set).	0.0339441299438	17
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	2.8.4	search with cache (only 1: intros); (only 1: rewrite (equal_2 H)); (only 1: auto).	24.4262459278	9608
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.2.1	search with cache (only 1: intros); (only 1: rewrite (equal_2 H)); (only 1: auto).	0.0279929637909	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.6.2	search with cache (only 1: intros); (only 1: rewrite (equal_2 H)); (only 1: auto).	0.0671408176422	30
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	6.1.2	search with cache (only 1: apply subset_1); (only 1: unfold Subset); (only 1: auto).	0.0960168838501	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	11	search with cache (only 1: auto with set fset).	0.193023920059	96
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0182278156281	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	8	search with cache (only 1: auto with set).	0.295594930649	112
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	1	search with cache (only 1: auto with set).	0.0179569721222	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	4.6	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y)); (only 1: intuition).	1.17218613625	512
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.2	search with cache (only 1: rewrite <- not_mem_iff); (only 1: intuition).	0.0516130924225	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	0.1.0.9	search with cache (only 1: rewrite <- not_mem_iff); (only 1: intros); (only 1: apply equal_1); (only 1: Dec.fsetdec).	1.38309502602	232
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	3.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: intuition).	0.0991659164429	27
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	1.1.2.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: destruct (mem y (singleton x))); (only 1: intuition); (only 1: intuition).	0.562120199203	122
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	3.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: intuition).	0.655431985855	148
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	1.1.1.0.0	search with cache (only 1: destruct (mem x (union s s'))); (only 1: destruct (mem x (union s s'))); (only 1: intuition); (only 1: intuition); (only 1: intuition).	1.23930716515	168
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0225071907043	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0175681114197	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0179431438446	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.0162830352783	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0361840724945	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.017098903656	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0153090953827	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.01518201828	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0276050567627	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: intuition).	0.0294029712677	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0198180675507	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0182108879089	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0179159641266	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0155670642853	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0354900360107	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0168540477753	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.018012046814	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0165150165558	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0154960155487	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0281140804291	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.4	search with cache (only 1: apply subset_1); (only 1: Dec.fsetdec).	0.132110118866	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0195851325989	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1); (only 1: Dec.fsetdec).	0.186188936234	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0171520709991	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0164558887482	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b); (only 1: auto with set).	0.0254929065704	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	1.2.1.1.1.0.1	search with cache (only 1: symmetry); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto with set); (only 1: auto with set); (only 1: auto with set); (only 1: auto with set); (only 1: auto with set).	1.40785312653	557
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0712480545044	34
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	6.0.1.1.0	search with cache (only 1: intros); (only 1: apply cardinal_2 with x); (only 1: rewrite not_mem_iff); (only 1: auto); (only 1: auto with set).	1.03845286369	573
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	14	search with cache (only 1: auto with set fset).	0.179039955139	222
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	6.23.6	search with cache (only 1: simpl_relation); (only 1: rewrite H); (only 1: simpl_relation).	9.60320281982	2916
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	5.0	search with cache (only 1: intros); (only 1: auto with set).	0.222561120987	47
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0208661556244	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.1.0.2.0.1	search with cache (only 1: red); (only 1: intros); (only 1: set_iff); (only 1: repeat rewrite filter_iff); (only 1: set_iff); (only 1: intuition); (only 1: auto); (only 1: auto); (only 1: auto).	3.93568086624	395
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	18.1.0.2.0	search with cache (only 1: intros); (only 1: apply for_all_1); (only 1: auto); (only 1: red); (only 1: auto with set).	26.3381769657	9990
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	2.26.2.0	search with cache (only 1: intros); (only 1: rewrite <- (for_all_iff s (f:=f)) in H); (only 1: intuition); (only 1: auto).	19.2370901108	12658
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	2.3.1.4	search with cache (only 1: repeat red); (only 1: intros); (only 1: f_equal); (only 1: auto).	0.214532136917	127
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	8	search with cache (only 1: Dec.fsetdec).	0.138785839081	16
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	2.1	search with cache (only 1: compute); (only 1: auto).	0.0205450057983	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	6.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns); (only 1: intuition); (only 1: unfold Subset, Included, In, mkEns); (only 1: intro x); (only 1: Dec.fsetdec).	0.503621816635	312
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.12.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In); (only 1: split); (only 1: Dec.fsetdec); (only 1: intro); (only 1: inversion 1).	12.4943351746	6880
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.2.0	search with cache (only 1: intros); (only 1: unfold Subset, Included, Same_set, In, mkEns); (only 1: intuition).	0.0347380638123	5
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	2.5.1.10.5	search with cache (only 1: intros); (only 1: generalize (F.mem_iff s x)); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	15.6967818737	2743
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	4.4	search with cache (only 1: repeat red); (only 1: auto).	0.0169780254364	10
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	7	search with cache (only 1: intuition).	0.0681140422821	21
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	0	search with cache (only 1: fsetdec).	0.0587840080261	1
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0228941440582	1
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.048437833786	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0.0.9	search with cache (only 1: split); (only 1: intuition); (only 1: intuition).	0.189875125885	100
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0375530719757	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0273871421814	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0500259399414	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0458788871765	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0817539691925	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0401167869568	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0362989902496	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.5	search with cache (only 1: intuition); (only 1: fsetdec); (only 1: fsetdec); (only 1: fsetdec).	0.150384187698	9
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0465111732483	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	1.1.0	search with cache (only 1: red); (only 1: intros); (only 1: fsetdec).	0.127148151398	11
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	1.1.0	search with cache (only 1: red); (only 1: intros); (only 1: fsetdec).	0.14950299263	5
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	23	search with cache (only 1: fsetdec).	2.21398591995	1606
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.132172107697	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.125638008118	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.120073080063	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0.0	search with cache (only 1: red); (only 1: fsetdec).	0.0963349342346	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.249114990234	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	2	search with cache (only 1: fsetdec).	0.0901210308075	3
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0994441509247	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0999441146851	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.150177001953	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0850331783295	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.146739959717	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.256280183792	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.225306987762	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0317549705505	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0294909477234	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0536580085754	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0564389228821	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0525460243225	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0656018257141	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0596098899841	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	11	search with cache (only 1: fsetdec).	19.3745639324	3345
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.0706920623779	3
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.093013048172	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0836050510406	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.126595973969	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.152776002884	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.170365095139	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	2.1	search with cache (only 1: intros); (only 1: fsetdec).	3.52118611336	438
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.128759145737	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0460381507874	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0433750152588	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0308921337128	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0318999290466	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	2	search with cache (only 1: fsetdec).	0.0562999248505	3
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0634608268738	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	6	search with cache (only 1: fsetdec).	1.01941394806	367
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.110730886459	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0836079120636	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.136069059372	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.127064943314	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	5.4	search with cache (only 1: red); (only 1: fsetdec).	0.182744026184	40
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.119934082031	2
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.195741176605	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.335657119751	2
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.275115966797	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.242494821548	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep); (only 1: apply fold_rec); (only 1: auto); (only 1: auto).	0.140552997589	51
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40	1.0.6.0.0	search with cache (only 1: intros); (only 1: apply fold_rec_bis); (only 1: fsetdec); (only 1: fsetdec); (only 1: auto with set).	1.84325194359	311
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	1.0.17.9.2.0	search with cache (only 1: intros); (only 1: rewrite M.fold_1); (only 1: split); (only 1: intuition); (only 1: intro x); (only 1: auto).	11.137775898	11817
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	10.0.0.0.0.0.2	search with cache (only 1: intros); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: intuition).	4.18913793564	2607
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	10.8.0.0.0.0.2	search with cache (only 1: symmetry); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto with set); (only 1: intuition).	19.2798829079	13584
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	7.11.0	search with cache (only 1: intros); (only 1: apply fold_equal); (only 1: auto with set).	8.90042710304	4644
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.3.0.0.0.0	search with cache (only 1: intros); (only 1: rewrite M.cardinal_1 in H); (only 1: generalize (elements_2 (s:=s))); (only 1: destruct (elements s)); (only 1: intuition); (only 1: exists e); (only 1: auto).	0.07599401474	16
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.7	search with cache (only 1: apply cardinal_1); (only 1: auto with set).	0.01646900177	9
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	5.4.3	search with cache (only 1: intros); (only 1: rewrite <- union_inter_cardinal); (only 1: auto with arith).	0.294349908829	157
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	4.4	search with cache (only 1: intro); (only 1: intuition).	0.384494066238	143
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.3.0.0	search with cache (only 1: intros); (only 1: apply cardinal_2 with x); (only 1: auto); (only 1: expAdd); (only 1: fsetdec).	0.113083839417	22
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.11.0.5.3	search with cache (only 1: intros); (only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x))); (only 1: auto with set); (only 1: fsetdec); (only 1: expAdd); (only 1: fsetdec).	4.61917304993	2877
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	6	search with cache (only 1: auto with set fset).	0.0908761024475	43
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros); (only 1: apply P.fold_equal); (only 1: auto with set).	0.0308208465576	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros); (only 1: apply P.fold_equal); (only 1: auto with set).	0.0292179584503	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.3.1.6.9	search with cache (only 1: repeat red); (only 1: intros); (only 1: rewrite H0); (only 1: rewrite H); (only 1: eauto with set).	5.89569997787	6153
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0156488418579	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros); (only 1: push not in *); (only 1: tauto).	0.184365034103	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	3.3.0	search with cache (only 1: split); (only 1: auto); (only 1: auto).	0.0159151554108	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	16	search with cache (only 1: fsetdec).	2.01165294647	782
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.125180959702	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.235982894897	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0252721309662	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.0502669811249	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset); (only 1: fsetdec).	0.0606439113617	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0951609611511	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.116567850113	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.139726161957	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0665640830994	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.221191167831	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.243791818619	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	3.2.1	search with cache (only 1: unfold Subset); (only 1: intros x y H a); (only 1: intuition).	0.0898189544678	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	6	search with cache (only 1: fsetdec).	0.166048049927	43
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0790221691132	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0558280944824	1
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.8.0.8.0	search with cache (only 1: split); (only 1: intros); (only 1: apply (MapsTo_1 H H0)); (only 1: intros); (only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.54777097702	622
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	18.5	search with cache (only 1: intros); (only 1: intuition).	1.41082811356	2982
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	20	search with cache (only 1: intuition).	0.363756895065	649
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	4	search with cache (only 1: intuition).	0.0917730331421	17
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	1.0.4.0.0	search with cache (only 1: intros); (only 1: intuition); (only 1: apply add_3 with x e); (only 1: auto); (only 1: auto).	0.0519468784332	17
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.0.1.0.9.9.0.0.0	search with cache (only 1: intros); (only 1: split); (only 1: intros); (only 1: apply remove_3 with x); (only 1: auto); (only 1: intros); (only 1: apply remove_2); (only 1: auto); (only 1: auto).	4.58346009254	6580
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40	9.0.3.4.3.1.3.4.0.3	search with cache (only 1: unfold In); (only 1: split); (only 1: intros (e0, H0)); (only 1: exists e0); (only 1: apply elements_1); (only 1: auto); (only 1: intros (e0, H0)); (only 1: exists e0); (only 1: apply elements_2); (only 1: auto).	21.0623269081	29928
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	0.1.25.6.0.0.13.0	search with cache (only 1: intros); (only 1: rewrite eq_option_alt); (only 1: intro e); (only 1: rewrite <- find_mapsto_iff); (only 1: intuition); (only 1: rewrite empty_mapsto_iff in H); (only 1: intuition discriminate); (only 1: intuition discriminate).	35.7707948685	40735
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	2.0	search with cache (only 1: intros); (only 1: auto with map).	0.0320460796356	4
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	1.0.5.0.0.6.2.1	search with cache (only 1: intros); (only 1: rewrite eq_option_alt); (only 1: intros); (only 1: rewrite <- 2!find_mapsto_iff); (only 1: intuition); (only 1: apply add_3 with x e); (only 1: auto); (only 1: auto).	2.30340385437	1439
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros); (only 1: rewrite eq_option_alt); (only 1: intro e); (only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff); (only 1: now intuition).	0.0572698116302	7
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.2.0.0.0.1.4.0	search with cache (only 1: intros); (only 1: rewrite eq_option_alt); (only 1: intro e); (only 1: destruct (eq_dec x y)); (only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff); (only 1: now intuition); (only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff); (only 1: now intuition).	2.08289599419	616
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.5.0	search with cache (only 1: intros); (only 1: intro k); (only 1: auto).	0.0622620582581	24
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	3.1.0	search with cache (only 1: red); (only 1: intros); (only 1: auto).	0.0365829467773	7
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	1.6.2.0	search with cache (only 1: unfold Equal); (only 1: intros); (only 1: rewrite <- H0); (only 1: auto).	0.614067077637	347
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: unfold Equal); (only 1: auto).	0.0214149951935	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40	7.21.6.3.0.31	search with cache (only 1: unfold Equal); (only 1: intros); (only 1: rewrite map_o); (only 1: rewrite map_o); (only 1: rewrite H); (only 1: auto).	32.1203930378	26258
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40	33.10.4	search with cache (only 1: compute); (only 1: dintuition); (only 1: eauto).	24.8365409374	31026
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	2.2.1.1	search with cache (only 1: intros A P f i m Hempty Hstep); (only 1: apply fold_rec); (only 1: auto); (only 1: auto).	0.182960033417	53
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	1.1.25	search with cache (only 1: intros k); (only 1: rewrite <- cardinal_Empty); (only 1: auto).	5.64519000053	3001
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	7.10.0	search with cache (only 1: unfold Disjoint); (only 1: intuition); (only 1: intuition eauto).	0.46559715271	359
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	1.1.7.6.0.2.0.0	search with cache (only 1: intros); (only 1: do 2 rewrite cardinal_fold); (only 1: apply fold_Equal with (eqA := eq)); (only 1: auto); (only 1: congruence); (only 1: red); (only 1: eauto); (only 1: auto).	4.22859978676	2771
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	9	search with cache (only 1: intuition).	0.0522010326385	32
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	3.3.1	search with cache (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.274496793747	70
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	5	search with cache (only 1: intuition).	0.175925016403	33
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	3.3.1	search with cache (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.149859189987	58
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	3	search with cache (only 1: intuition).	0.0346820354462	16
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.0.5.5.3.0	search with cache (only 1: split); (only 1: intro); (only 1: apply remove_3 with x); (only 1: auto); (only 1: apply remove_2); (only 1: auto).	0.493000984192	806
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	7	search with cache (only 1: intuition).	0.112907171249	59
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	8	search with cache (only 1: intuition).	0.0472660064697	23
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	9	search with cache (only 1: intuition).	0.0524001121521	23
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	8	search with cache (only 1: intuition).	0.0350069999695	21
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.3.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y)); (only 1: destruct (mem y s)); (only 1: intuition); (only 1: destruct (mem y (remove x s))); (only 1: intuition); (only 1: intuition).	37.8750751019	13453
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	32.4.4.40	search with cache (only 1: split); (only 1: auto); (only 1: auto); (only 1: eauto).	0.884127855301	5832
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.7	search with cache (only 1: unfold Equal, Subset); (only 1: auto).	0.139060974121	66
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	4.0	search with cache (only 1: red); (only 1: auto).	0.019495010376	6
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	7.2.3.7.0	search with cache (only 1: intros); (only 1: unfold Empty); (only 1: intuition); (only 1: simpl_relation); (only 1: eauto with set).	8.63633513451	6264
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	1.2.0.4.0	search with cache (only 1: unfold Subset); (only 1: intros x y H s s' H0 a); (only 1: do 2 rewrite add_iff); (only 1: rewrite H); (only 1: intuition).	0.678263187408	132
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.2.0.1.0	search with cache (only 1: unfold Subset); (only 1: intros x y H s s' H0 a); (only 1: do 2 rewrite remove_iff); (only 1: rewrite H); (only 1: intuition).	0.112016916275	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.0.4	search with cache (only 1: intros s s' H s'' s''' H0 a); (only 1: do 2 rewrite union_iff); (only 1: rewrite H0); (only 1: intuition).	0.292667150497	45
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.5.0	search with cache (only 1: unfold Subset); (only 1: intuition); (only 1: eauto with set).	0.078066110611	8
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.3	search with cache (only 1: intros s s' H s'' s''' H0 a); (only 1: do 2 rewrite diff_iff); (only 1: intuition).	0.139077186584	30
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.2.7.2.0	search with cache (only 1: intros); (only 1: red); (only 1: inversion H); (only 1: subst y); (only 1: auto).	0.312698125839	368
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	36	search with cache (only 1: now subst).	0.232826948166	1232
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	11.0	search with cache (only 1: unfold eq, Equal); (only 1: now subst).	0.0878059864044	110
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.0	search with cache (only 1: intros); (only 1: trivial).	0.0183470249176	2
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In); (only 1: trivial).	0.0181348323822	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.0160520076752	1
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.11.4.0	search with cache (only 1: intros EQ); (only 1: unfold In); (only 1: intro); (only 1: discriminate || simpl).	0.177196979523	588
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro); (only 1: rewrite is_empty_spec); (only 1: trivial).	0.0281758308411	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	7.0.7.8.5	search with cache (only 1: intros); (only 1: intro); (only 1: unfold In); (only 1: simpl); (only 1: intuition discriminate).	1.30565309525	2242
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros); (only 1: rewrite equal_subset); (only 1: rewrite andb_true_iff); (only 1: rewrite <- 2!subset_spec); (only 1: unfold Equal, Subset); (only 1: firstorder).	0.041442155838	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'); (only 1: rewrite equal_subset); (only 1: rewrite andb_true_iff); (only 1: rewrite <- 2!subset_spec); (only 1: unfold Equal, Subset); (only 1: firstorder).	0.108926057816	23
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	7.7.7.7.0	search with cache (only 1: intros [| ] [| ]); (only 1: now subst); (only 1: now subst); (only 1: now subst); (only 1: now subst).	3.97342395782	3484
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0213580131531	6
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	1.1.1.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.020740032196	7
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	1.1.1.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0188059806824	7
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0209989547729	6
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0210871696472	6
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	0.0.1.4.3.16.0	search with cache (only 1: unfold compare_fun, equal); (only 1: induction s as [| l IHl o r IHr]); (only 1: reflexivity); (only 1: simpl); (only 1: destruct o); (only 1: reflexivity); (only 1: reflexivity).	7.63824796677	11713
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	5.0.0	search with cache (only 1: intros); (only 1: apply <- add_spec); (only 1: intuition congruence).	0.0449688434601	22
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros); (only 1: rewrite remove_spec); (only 1: tauto).	0.0380759239197	16
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton); (only 1: intros x y); (only 1: rewrite add_spec); (only 1: unfold In); (only 1: rewrite mem_Leaf); (only 1: intuition discriminate).	0.0361499786377	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	5.2.0	search with cache (only 1: intros); (only 1: apply <- union_spec); (only 1: firstorder).	0.14425110817	21
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x); (only 1: rewrite inter_spec); (only 1: tauto).	0.0253100395203	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x); (only 1: rewrite inter_spec); (only 1: tauto).	0.0291709899902	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x); (only 1: rewrite diff_spec); (only 1: tauto).	0.106679201126	46
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x); (only 1: rewrite diff_spec); (only 1: tauto).	0.0301830768585	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter); (only 1: intros s x f _); (only 1: rewrite xfilter_spec); (only 1: tauto).	0.0325679779053	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter); (only 1: intros s x f _); (only 1: rewrite xfilter_spec); (only 1: tauto).	0.0388150215149	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _); (only 1: unfold for_all); (only 1: rewrite xforall_spec); (only 1: trivial).	0.0331130027771	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _); (only 1: unfold exists_); (only 1: rewrite xexists_spec); (only 1: trivial).	0.0329539775848	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros); (only 1: rewrite partition_filter); (only 1: apply eq_refl).	0.0226311683655	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapList.Raw.empty_1	40
Coq.FSets.FMapList.Raw.empty_sorted	40	0	search with cache (only 1: left).	0.0139269828796	1
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	7.0.0.1	search with cache (only 1: intros m); (only 1: case m); (only 1: auto); (only 1: inversion 1).	3.83403015137	329
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	2.0.0.0.1.2.0.0.0.0.1	search with cache (only 1: induction m); (only 1: simpl); (only 1: auto); (only 1: intros); (only 1: destruct a as (x'', e'')); (only 1: simpl); (only 1: inversion_clear Hm); (only 1: case (X.compare x x'')); (only 1: intuition); (only 1: auto); (only 1: intuition).	18.8507189751	5736
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.012501001358	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0123958587646	1
Coq.FSets.FMapList.Raw.elements_3	40	0	search with cache (only 1: auto).	0.0121200084686	1
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	2.0.1.40	search with cache (only 1: induction m); (only 1: intuition); (only 1: simpl in *); (only 1: intuition).	6.36060404778	7455
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	1.1.2.3.1.0.1	search with cache (only 1: induction m); (only 1: intuition); (only 1: constructor); (only 1: destruct a as (x', e')); (only 1: inversion_clear 1); (only 1: constructor); (only 1: auto).	5.62351179123	1896
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.4.2.0.0.0.0.1.0	search with cache (only 1: induction m); (only 1: simpl); (only 1: auto); (only 1: intros); (only 1: destruct a as (x0, e0)); (only 1: inversion_clear H); (only 1: rename x0 into e'); (only 1: constructor); (only 1: auto).	6.07221198082	1772
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.4.4.1.0.0.4	search with cache (only 1: induction m); (only 1: simpl); (only 1: auto); (only 1: destruct a as (x', e')); (only 1: simpl); (only 1: inversion_clear 1); (only 1: auto).	6.74445796013	2425
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	0.0.52	search with cache (only 1: intros sorted hyp); (only 1: intro abs); (only 1: inversion abs).	3.94044089317	4753
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	12	search with cache (only 1: auto with ordered_type).	0.0582399368286	72
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m); (only 1: exact (Raw.elements_1 (m:=m))).	0.0164830684662	2
Coq.FSets.FMapList.Make.elements_3	40	9.64.0	search with cache (only 1: intros m); (only 1: induction m); (only 1: auto).	1.32582306862	6406
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	21.0	search with cache (only 1: intros m); (only 1: auto with ordered_type).	0.256244897842	426
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	2.3.22	search with cache (only 1: intros Heq); (only 1: unfold PX.MapsTo in *); (only 1: inversion_clear 1).	0.297339916229	476
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	33	search with cache (only 1: left).	0.332823991776	826
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	7.0.0.1	search with cache (only 1: intros m); (only 1: case m); (only 1: auto); (only 1: inversion 1).	1.16891694069	526
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	1.0.0.0.2.0.0.2.0.0.0	search with cache (only 1: intros m Hm x y e); (only 1: generalize Hm); (only 1: generalize Hm); (only 1: unfold PX.MapsTo); (only 1: functional induction remove x m); (only 1: auto); (only 1: auto); (only 1: inversion_clear 1); (only 1: inversion_clear 2); (only 1: auto); (only 1: auto).	22.2670922279	5069
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.4.0.2.2.0.0.10	search with cache (only 1: intros m Hm x y e); (only 1: functional induction remove x m); (only 1: auto); (only 1: auto); (only 1: inversion_clear 1); (only 1: auto); (only 1: inversion_clear Hm); (only 1: auto).	11.7422611713	5594
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0142369270325	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0134971141815	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0	search with cache (only 1: auto).	0.0133910179138	1
Coq.FSets.FMapWeakList.Raw.fold_1	40	0.1.0.11.13	search with cache (only 1: compute); (only 1: induction m); (only 1: auto); (only 1: destruct a); (only 1: auto).	1.06504511833	1236
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40	0.0.2.18.7	search with cache (only 1: intros); (only 1: apply InA_eqA with (x, e)); (only 1: intuition); (only 1: auto); (only 1: intuition).	15.2847669125	11319
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	7.5.41	search with cache (only 1: compute); (only 1: intros); (only 1: invlist InA).	0.939171075821	2829
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	12	search with cache (only 1: auto).	0.0551619529724	64
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m); (only 1: exact (Raw.elements_1 (m:=m))).	0.016270160675	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	8.73	search with cache (only 1: induction m); (only 1: auto).	1.4496819973	8185
Coq.FSets.FMapWeakList.Make.cardinal_1	40	24	search with cache (only 1: auto).	0.183497905731	544
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	27	search with cache (only 1: eauto with *).	0.102066040039	361
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40	134.0	search with cache (only 1: intuition); (only 1: eauto with *).	6.08615899086	36976
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	20.0.38	search with cache (only 1: simpl in *); (only 1: intuition); (only 1: eauto).	3.18324613571	8201
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	35.12.0	search with cache (only 1: intros); (only 1: simpl); (only 1: eauto).	2.28975701332	6915
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	4.2.1.0.0.4	search with cache (only 1: intros s x); (only 1: unfold equal); (only 1: case M.equal); (only 1: intuition); (only 1: intuition); (only 1: discriminate H).	2.0310561657	1530
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	3.1.1.0.0.4	search with cache (only 1: intros s s'); (only 1: unfold subset); (only 1: case M.subset); (only 1: intuition); (only 1: intuition); (only 1: inversion H).	1.73522996902	1041
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	1.0.2.0.0.1	search with cache (only 1: firstorder); (only 1: case (M.elements s)); (only 1: case (M.elements s)); (only 1: unfold elements); (only 1: case (M.elements s)); (only 1: firstorder).	0.758232831955	52
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold add); (only 1: case (M.add x s)); (only 1: unfold Add); (only 1: firstorder).	0.112706184387	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.8	search with cache (only 1: intros s x); (only 1: unfold add); (only 1: case (M.add x s)); (only 1: unfold Add); (only 1: firstorder).	4.01390385628	1008
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold remove); (only 1: case (M.remove x s)); (only 1: case (M.remove x s)); (only 1: case (M.remove x s)); (only 1: case (M.remove x s)); (only 1: case (M.remove x s)); (only 1: case (M.remove x s)); (only 1: firstorder).	0.0676279067993	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.4.1	search with cache (only 1: unfold remove); (only 1: intros s x y); (only 1: case (M.remove x s)); (only 1: firstorder).	1.22834706306	158
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y); (only 1: unfold singleton); (only 1: case (M.singleton x)); (only 1: case (M.singleton x)); (only 1: case (M.singleton x)); (only 1: case (M.singleton x)); (only 1: case (M.singleton x)); (only 1: case (M.singleton x)); (only 1: firstorder).	0.0461628437042	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold union); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: firstorder).	0.0652890205383	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold union); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: case (M.union s s')); (only 1: firstorder).	0.0636930465698	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold inter); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: firstorder).	0.0618488788605	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold inter); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: case (M.inter s s')); (only 1: firstorder).	0.0640001296997	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold diff); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: firstorder).	0.0683829784393	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x); (only 1: unfold diff); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: case (M.diff s s')); (only 1: firstorder).	0.0693619251251	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	6.4.6.32.0	search with cache (only 1: intros); (only 1: intros s x); (only 1: intuition); (only 1: rewrite (H _ _ H0)); (only 1: intuition).	3.0379550457	7160
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f); (only 1: unfold filter); (only 1: destruct M.filter as (x0, Hiff)); (only 1: intuition); (only 1: generalize (Hiff (compat_P_aux H))); (only 1: generalize (Hiff (compat_P_aux H))); (only 1: firstorder).	0.290499925613	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f); (only 1: unfold filter); (only 1: destruct M.filter as (x0, Hiff)); (only 1: intuition); (only 1: generalize (Hiff (compat_P_aux H))); (only 1: generalize (Hiff (compat_P_aux H))); (only 1: firstorder).	0.260925769806	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	10.1.0.0.0.2	search with cache (only 1: intros s x f); (only 1: unfold for_all); (only 1: case M.for_all); (only 1: intuition); (only 1: intuition); (only 1: inversion H).	9.67486095428	5635
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.1.1.0.0.0	search with cache (only 1: intros s f); (only 1: unfold exists_); (only 1: case M.exists_); (only 1: intuition); (only 1: intuition); (only 1: inversion H0).	0.0430970191956	10
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.Floats.FloatLemmas.shift_value	40	4	search with cache (only 1: auto).	0.0154349803925	5
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Peano.pred_Sn	40	3	search with cache (only 1: split).	0.00667500495911	4
Coq.Init.Peano.not_eq_S	40	28	search with cache (only 1: auto).	0.971928119659	5751
Coq.Init.Peano.O_S	40	11	search with cache (only 1: discriminate).	0.0779349803925	113
Coq.Init.Peano.n_Sn	40	0.0.1.8.0	search with cache (only 1: red); (only 1: intro n); (only 1: induction n); (only 1: discriminate); (only 1: auto).	0.0993399620056	165
Coq.Init.Peano.plus_n_O	40	2.9.1.0.5	search with cache (only 1: intro n); (only 1: induction n); (only 1: auto); (only 1: simpl); (only 1: auto).	1.63265681267	1917
Coq.Init.Peano.plus_O_n	40	4.1.0.0.0	search with cache (only 1: intro n); (only 1: induction n); (only 1: simpl); (only 1: auto); (only 1: auto).	0.0366849899292	24
Coq.Init.Peano.plus_n_Sm	40	5.6.0.0.1	search with cache (only 1: intro n); (only 1: induction n); (only 1: reflexivity); (only 1: simpl); (only 1: auto).	4.89452290535	4124
Coq.Init.Peano.plus_Sn_m	40	3.1.0.0.0	search with cache (only 1: intros n m); (only 1: induction n); (only 1: simpl); (only 1: auto); (only 1: auto).	0.029923915863	22
Coq.Init.Peano.mult_n_O	40	2.1.5	search with cache (only 1: induction n); (only 1: auto); (only 1: auto).	0.0525569915771	55
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.13	search with cache (only 1: induction n); (only 1: auto); (only 1: auto).	0.0477960109711	134
Coq.Init.Peano.le_n_S	40	6.5.3	search with cache (only 1: induction 1 as [| m _]); (only 1: auto); (only 1: auto).	0.686244010925	1538
Coq.Init.Peano.nat_case	40	4.9.6.5	search with cache (only 1: intro n); (only 1: induction n); (only 1: auto); (only 1: trivial).	0.715204000473	2499
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40
Coq.Init.Tactics.decide_left	40	6.2.3.1.3.2.9	search with cache (only 1: intro z); (only 1: intro H); (only 1: destruct H); (only 1: auto); (only 1: intro H); (only 1: induction n); (only 1: assumption).	4.4163839817	23526
Coq.Init.Tactics.decide_right	40	1.0.1.0	search with cache (only 1: intros C decide H P H0); (only 1: destruct decide); (only 1: contradiction); (only 1: apply H0).	0.0156500339508	6
Coq.Init.Specif.sigT_eta	40	4.0	search with cache (only 1: destruct p); (only 1: reflexivity).	0.00865602493286	6
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p); (only 1: reflexivity).	0.00660490989685	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p); (only 1: reflexivity).	0.00777196884155	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p); (only 1: reflexivity).	0.00807213783264	2
Coq.Init.Specif.exists_to_inhabited_sig	40	8.16.11.14	search with cache (only 1: destruct 1); (only 1: split); (only 1: exists x); (only 1: assumption).	0.320528030396	5078
Coq.Init.Specif.inhabited_sig_to_exists	40	4.9.0.77.100	search with cache (only 1: intro H1); (only 1: elim H1); (only 1: intros [x y]); (only 1: exists x); (only 1: auto).	4.86461687088	98493
Coq.Init.Specif.eq_existT_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]); (only 1: destruct q); (only 1: destruct p); (only 1: reflexivity).	0.0198791027069	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q); (only 1: destruct p); (only 1: reflexivity).	0.0155670642853	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q); (only 1: reflexivity).	0.0199890136719	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.43.6.8	search with cache (only 1: destruct r, q, p); (only 1: simpl in *); (only 1: destruct 1); (only 1: reflexivity).	10.7947468758	27620
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u); (only 1: reflexivity).	0.0158932209015	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.1	search with cache (only 1: destruct pq as [p q]); (only 1: destruct p, q); (only 1: reflexivity).	0.0167210102081	4
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.5	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]); (only 1: destruct pq as [p q]); (only 1: simpl in *); (only 1: destruct q); (only 1: destruct p); (only 1: reflexivity).	0.253518104553	143
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.4.14.5.2.4	search with cache (only 1: split); (only 1: intro p); (only 1: subst); (only 1: exists eq_refl); (only 1: reflexivity); (only 1: destruct u as [u1 u2], v as [v1 v2]); (only 1: simpl in *); (only 1: apply eq_exist_uncurried).	2.70720887184	8491
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u); (only 1: reflexivity).	0.0154850482941	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	2.0.0.4.7.11	search with cache (only 1: destruct pqr as [p q r]); (only 1: destruct u as [u1 u2], v as [v1 v2]); (only 1: simpl in *); (only 1: destruct r, q, p); (only 1: simpl); (only 1: reflexivity).	1.48708701134	1681
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.2.2.11.4.2.2	search with cache (only 1: split); (only 1: intro p); (only 1: destruct p); (only 1: exists eq_refl); (only 1: reflexivity); (only 1: reflexivity); (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]); (only 1: simpl in *); (only 1: apply eq_existT2_uncurried).	10.1649680138	16932
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u); (only 1: reflexivity).	0.0171849727631	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]); (only 1: destruct r, q, p); (only 1: simpl in *); (only 1: reflexivity).	0.0178928375244	4
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.4.0.13	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]); (only 1: destruct pqr as [p q r]); (only 1: simpl in *); (only 1: destruct r, q, p); (only 1: simpl); (only 1: reflexivity).	1.39895391464	1295
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.2.2.11.4.2.2	search with cache (only 1: split); (only 1: intro p); (only 1: destruct p); (only 1: exists eq_refl); (only 1: reflexivity); (only 1: reflexivity); (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]); (only 1: simpl in *); (only 1: apply eq_exist2_uncurried).	10.4523420334	16651
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u); (only 1: reflexivity).	0.0187680721283	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.1	search with cache (only 1: unfold not); (only 1: intros A C h1 h2); (only 1: destruct (h2 h1)).	0.0134799480438	13
Coq.Init.Wf.Acc_inv	40	3.10	search with cache (only 1: destruct 1); (only 1: auto).	0.0314021110535	142
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.1	search with cache (only 1: intros); (only 1: apply Acc_rect); (only 1: auto); (only 1: auto).	0.0164232254028	5
Coq.Init.Wf.well_founded_ind	40	0	search with cache (only 1: exact (fun P : A -> Set => well_founded_induction_type P)).	0.0105948448181	1
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Logic_Type.identity_sym	40	2.6	search with cache (only 1: destruct 1); (only 1: reflexivity).	0.00660395622253	10
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: trivial).	0.00687289237976	4
Coq.Init.Logic_Type.identity_congr	40	1.0	search with cache (only 1: destruct 1); (only 1: reflexivity).	0.00569796562195	3
Coq.Init.Logic_Type.not_identity_sym	40	1.15.2	search with cache (only 1: destruct 2); (only 1: destruct H); (only 1: trivial).	0.101709842682	869
Coq.Init.Logic_Type.identity_ind_r	40	5.19	search with cache (only 1: destruct 2); (only 1: assumption).	0.11306810379	885
Coq.Init.Logic_Type.identity_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0); (only 1: case identity_sym with (1 := H0)); (only 1: trivial).	0.0060670375824	4
Coq.Init.Logic_Type.identity_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0); (only 1: case identity_sym with (1 := H0)); (only 1: trivial).	0.00679302215576	4
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	3.67.15	search with cache (only 1: intros A P H); (only 1: destruct 1); (only 1: assumption).	0.937493085861	14960
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0); (only 1: destruct H0 in H); (only 1: assumption).	0.0104269981384	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	search with cache (only 1: intros P b H H0); (only 1: destruct H0 in H); (only 1: assumption).	0.011626958847	4
Coq.Init.Datatypes.surjective_pairing	40	2.1	search with cache (only 1: destruct p); (only 1: reflexivity).	0.013444185257	5
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H); (only 1: trivial).	0.0140919685364	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.0.3.0.1.1.3.1.0.1	search with cache (only 1: destruct c, c'); (only 1: reflexivity); (only 1: discriminate); (only 1: discriminate); (only 1: discriminate); (only 1: reflexivity); (only 1: discriminate); (only 1: discriminate); (only 1: discriminate); (only 1: reflexivity).	0.800091981888	2622
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	1.0	search with cache (only 1: destruct 1); (only 1: trivial).	0.00354313850403	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.1.2	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: split); (only 1: auto); (only 1: auto).	0.013543844223	71
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1); (only 1: split); (only 1: auto); (only 1: auto).	0.00566601753235	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1); (only 1: split); (only 1: destruct 1); (only 1: split); (only 1: auto); (only 1: auto); (only 1: destruct 1); (only 1: split); (only 1: auto); (only 1: auto).	0.042592048645	621
Coq.Init.Logic.and_iff_compat_r	40	2.3.1.0.2.2.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]); (only 1: split); (only 1: intros [? ?]); (only 1: split); (only 1: apply Hl); (only 1: assumption); (only 1: assumption); (only 1: intros [? ?]); (only 1: split); (only 1: auto); (only 1: assumption).	0.227024078369	4462
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	3.3.4.0.1.3.3.3.0.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]); (only 1: split); (only 1: intros [?| ?]); (only 1: left); (only 1: apply Hl); (only 1: assumption); (only 1: right); (only 1: assumption); (only 1: intros [?| ?]); (only 1: left); (only 1: auto); (only 1: right); (only 1: assumption).	0.605545043945	17201
Coq.Init.Logic.imp_iff_compat_l	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]); (only 1: split); (only 1: auto); (only 1: auto).	0.0241239070892	239
Coq.Init.Logic.imp_iff_compat_r	40	4.4.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]); (only 1: split); (only 1: auto); (only 1: auto).	0.0235440731049	232
Coq.Init.Logic.not_iff_compat	40	5.5.0.0	search with cache (only 1: intros A B [H1 H2]); (only 1: split); (only 1: auto); (only 1: auto).	0.0215611457825	196
Coq.Init.Logic.neg_false	40	6.10.10.6.3.3	search with cache (only 1: split); (only 1: split); (only 1: assumption); (only 1: destruct 1); (only 1: intros [? ?]); (only 1: assumption).	1.63983201981	27438
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.7.6.3.0.7.6.3.3	search with cache (only 1: split); (only 1: intros [HypL HypR]); (only 1: split); (only 1: assumption); (only 1: apply HypL); (only 1: intros [HypL HypR]); (only 1: split); (only 1: assumption); (only 1: apply HypL).	3.35361886024	30718
Coq.Init.Logic.and_assoc	40	7.7.0.6.6.3.5.0.6.0.6.3.1.0	search with cache (only 1: intros); (only 1: split); (only 1: intros [HypL HypR]); (only 1: split); (only 1: apply HypL); (only 1: split); (only 1: apply HypL); (only 1: assumption); (only 1: intros [HypL HypR]); (only 1: split); (only 1: split); (only 1: apply HypL); (only 1: apply HypR); (only 1: apply HypR).	20.2768130302	166827
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.2	search with cache (only 1: intros); (only 1: assumption).	0.00848817825317	4
Coq.Init.Logic.iff_to_and	40	0.6.0.6.4	search with cache (only 1: split); (only 1: intro H); (only 1: assumption); (only 1: intro H); (only 1: assumption).	0.574835062027	2102
Coq.Init.Logic.inst	40	25	search with cache (only 1: auto).	0.0461881160736	739
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all); (only 1: auto).	0.00822997093201	2
Coq.Init.Logic.absurd	40	21.0.12.2.3.2	search with cache (only 1: intro A); (only 1: unfold not); (only 1: intro H); (only 1: intros); (only 1: elim H1); (only 1: assumption).	1.01429414749	13810
Coq.Init.Logic.eq_sym	40	8.18	search with cache (only 1: destruct 1); (only 1: repeat split).	0.0874149799347	682
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: trivial).	0.0104179382324	4
Coq.Init.Logic.eq_trans_r	40	2.0	search with cache (only 1: destruct 2); (only 1: trivial).	0.00949501991272	4
Coq.Init.Logic.f_equal	40	1.0	search with cache (only 1: destruct 1); (only 1: trivial).	0.00897407531738	3
Coq.Init.Logic.not_eq_sym	40	1.4.0.10.16	search with cache (only 1: unfold not); (only 1: intro H1); (only 1: destruct 1); (only 1: elim H1); (only 1: trivial).	0.569181919098	3604
Coq.Init.Logic.eq_sind_r	40	1.6	search with cache (only 1: destruct 2); (only 1: auto).	0.0117249488831	16
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0); (only 1: elim eq_sym with (1 := H0)); (only 1: assumption).	0.0103511810303	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0); (only 1: elim eq_sym with (1 := H0)); (only 1: assumption).	0.0103299617767	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0); (only 1: elim eq_sym with (1 := H0)); (only 1: assumption).	0.0109148025513	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.2.0	search with cache (only 1: destruct H); (only 1: destruct 1); (only 1: reflexivity).	0.0129430294037	5
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H); (only 1: reflexivity).	0.0104250907898	2
Coq.Init.Logic.rew_opp_l	40	0.0	search with cache (only 1: destruct H); (only 1: reflexivity).	0.0106530189514	2
Coq.Init.Logic.f_equal2	40	1.3.9	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: reflexivity).	0.104169845581	339
Coq.Init.Logic.f_equal3	40	0.1.0.0	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: reflexivity).	0.0126760005951	5
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: reflexivity).	0.0145728588104	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: destruct 1); (only 1: reflexivity).	0.0157790184021	7
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.11	search with cache (only 1: destruct e); (only 1: reflexivity).	0.0150611400604	46
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e); (only 1: reflexivity).	0.00987911224365	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e); (only 1: reflexivity).	0.00987792015076	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e); (only 1: reflexivity).	0.0109131336212	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e); (only 1: reflexivity).	0.0101981163025	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2	search with cache (only 1: destruct H); (only 1: reflexivity).	0.0124890804291	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H); (only 1: reflexivity).	0.0111398696899	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H); (only 1: reflexivity).	0.0111050605774	2
Coq.Init.Logic.rew_swap	40	0.0	search with cache (only 1: destruct H, 1); (only 1: reflexivity).	0.0120248794556	2
Coq.Init.Logic.rew_compose	40	3.0	search with cache (only 1: destruct H2); (only 1: reflexivity).	0.0119321346283	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.0093879699707	1
Coq.Init.Logic.eq_trans_map_distr	40	0.0.2.2.9	search with cache (only 1: unfold f_equal); (only 1: destruct e); (only 1: rewrite eq_trans_refl_l); (only 1: rewrite eq_trans_refl_l); (only 1: reflexivity).	0.248047113419	372
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e); (only 1: reflexivity).	0.011696100235	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.2.0	search with cache (only 1: destruct e); (only 1: destruct e'); (only 1: reflexivity).	0.0128841400146	5
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	search with cache (only 1: destruct e, e'); (only 1: reflexivity).	0.0128161907196	4
Coq.Init.Logic.rew_const	40	0.7	search with cache (only 1: destruct e); (only 1: reflexivity).	0.0115120410919	9
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	10.10	search with cache (only 1: destruct 1); (only 1: auto).	0.266278982162	1009
Coq.Init.Logic.inhabited_covariant	40	0.2.9	search with cache (only 1: intros); (only 1: destruct H); (only 1: auto).	0.162575960159	66
Coq.Init.Logic.eq_stepl	40	1.4.2.12	search with cache (only 1: intros x' x'' Hx' Hx''); (only 1: symmetry); (only 1: destruct H); (only 1: auto).	0.201740026474	337
Coq.Init.Logic.iff_stepl	40	15.15.2.3	search with cache (only 1: intros A B C [H1 H2] [H3 H4]); (only 1: split); (only 1: auto); (only 1: auto).	4.38439011574	16980
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]); (only 1: destruct q); (only 1: destruct H); (only 1: destruct p); (only 1: reflexivity).	0.0222959518433	17
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u); (only 1: reflexivity).	0.0139539241791	2
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	4.4.3	search with cache (only 1: constructor); (only 1: intuition); (only 1: intuition).	0.41429901123	148
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	4.2.3.2	search with cache (only 1: intuition); (only 1: induction l); (only 1: intuition); (only 1: now apply permA_skip).	3.05487585068	1086
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	1.1.1.0.0.10	search with cache (only 1: induction 1); (only 1: easy); (only 1: now apply permA_skip); (only 1: rewrite <- !app_comm_cons); (only 1: now apply permA_swap); (only 1: do 2 (etransitivity; try eassumption)).	4.39326882362	1267
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	7.0.3.2.1.12	search with cache (only 1: induction l); (only 1: easy); (only 1: rewrite <- !app_comm_cons); (only 1: etransitivity); (only 1: now apply permA_swap); (only 1: intuition).	11.0461919308	5379
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0268130302429	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	1.1.13.3.9	search with cache (only 1: induction 1); (only 1: intuition); (only 1: intuition); (only 1: now apply permA_swap); (only 1: now transitivity l').	1.97890710831	1744
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.3.1	search with cache (only 1: induction 1); (only 1: constructor); (only 1: now constructor).	0.0286140441895	7
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	1.0.0.1.1.4.3.0	search with cache (only 1: split); (only 1: intros Hr); (only 1: inversion_clear Hr); (only 1: auto); (only 1: auto); (only 1: induction 1); (only 1: auto); (only 1: auto).	1.17315006256	789
Coq.Lists.SetoidList.InA_nil	40	2.0	search with cache (only 1: intuition); (only 1: invlist InA).	0.0314450263977	4
Coq.Lists.SetoidList.InA_alt	40	1.3.3.0.7.3.2.1.1	search with cache (only 1: split); (only 1: induction 1); (only 1: firstorder); (only 1: firstorder); (only 1: induction l); (only 1: firstorder); (only 1: firstorder); (only 1: subst); (only 1: auto).	22.601377964	13175
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	7.0.4.6	search with cache (only 1: induction l as [| a l IHl]); (only 1: intros l'); (only 1: intuition); (only 1: firstorder using Sorted_inv).	0.689462184906	647
Coq.Lists.SetoidList.eqlistA_altdef	40	0.0.1.0.0.1.7.27	search with cache (only 1: intros b Hb); (only 1: intuition); (only 1: elim H); (only 1: auto); (only 1: intuition); (only 1: elim H); (only 1: auto); (only 1: intuition).	13.5519509315	11415
Coq.Lists.SetoidList.equivlist_equiv	40	12	search with cache (only 1: firstorder).	0.0450670719147	46
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.1.11	search with cache (only 1: intros x y z H); (only 1: rewrite 2!InA_alt); (only 1: firstorder).	2.9873020649	342
Coq.Lists.SetoidList.In_InA	40	0.5.0	search with cache (only 1: intros); (only 1: rewrite InA_altdef, Exists_exists); (only 1: firstorder).	0.0270259380341	8
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.1.25	search with cache (only 1: rewrite InA_altdef, Exists_exists); (only 1: firstorder); (only 1: subst); (only 1: intuition).	3.30462789536	838
Coq.Lists.SetoidList.InA_double_head	40	1.2	search with cache (only 1: rewrite 2!InA_cons); (only 1: intuition).	0.0570120811462	5
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons); (only 1: tauto).	0.0691919326782	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.2.2	search with cache (only 1: constructor); (only 1: intro); (only 1: inv); (only 1: auto).	0.0269680023193	8
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red); (only 1: intros); (only 1: rewrite 2!InA_cons); (only 1: intuition).	0.0610311031342	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.3.0	search with cache (only 1: intro); (only 1: rewrite !InA_cons); (only 1: intuition).	0.249988079071	21
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.2.0.2.2	search with cache (only 1: red); (only 1: split); (only 1: rewrite InA_app_iff); (only 1: tauto); (only 1: rewrite InA_app_iff); (only 1: auto).	0.553359985352	182
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	1.1.7.5.21.0.8	search with cache (only 1: induction l); (only 1: auto); (only 1: simpl); (only 1: destruct IHl); (only 1: destruct (eqA_dec x a)); (only 1: auto); (only 1: auto).	29.7106220722	29042
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	11.1.0.0.1	search with cache (only 1: destruct l); (only 1: intros); (only 1: intuition); (only 1: intros); (only 1: intuition).	17.631360054	2381
Coq.Lists.SetoidList.InA_InfA	40	1.0.0.0.4	search with cache (only 1: simple induction l); (only 1: intros); (only 1: constructor); (only 1: intros); (only 1: eauto).	0.234923839569	18
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	5.0.6.0.4.1.4	search with cache (only 1: induction 1); (only 1: simpl in *); (only 1: congruence); (only 1: simpl); (only 1: constructor); (only 1: congruence); (only 1: auto).	29.7204449177	8938
Coq.Lists.SetoidList.eqlistA_app	40	7.0.1.0.0	search with cache (only 1: induction 1); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	1.49269509315	544
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.0.4.0.0.1	search with cache (only 1: induction 1); (only 1: auto); (only 1: simpl); (only 1: apply eqlistA_rev_app); (only 1: auto); (only 1: auto).	0.463757038116	276
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.Lists.List.nil_cons	40	49	search with cache (only 1: discriminate).	0.281426906586	1230
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	3.0.1.0.0	search with cache (only 1: destruct l as [| x xs]); (only 1: unfold hd_error, tl); (only 1: firstorder  discriminate); (only 1: intros); (only 1: inversion 1).	0.0271980762482	9
Coq.Lists.List.length_zero_iff_nil	40	0.0.0.4.4.0.0	search with cache (only 1: destruct l); (only 1: split); (only 1: reflexivity); (only 1: reflexivity); (only 1: split); (only 1: discriminate); (only 1: discriminate).	0.563080072403	496
Coq.Lists.List.hd_error_nil	40	1.0	search with cache (only 1: unfold hd_error, tl); (only 1: split).	0.0129411220551	3
Coq.Lists.List.hd_error_cons	40	0.1	search with cache (only 1: simpl); (only 1: reflexivity).	0.01424908638	3
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	4.0	search with cache (only 1: simpl); (only 1: now destruct l).	0.0330419540405	24
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40
Coq.Lists.List.app_assoc	40
Coq.Lists.List.app_assoc_reverse	40	0.4.2.0.0.1	search with cache (only 1: induction l); (only 1: simpl); (only 1: f_equal); (only 1: simpl); (only 1: f_equal); (only 1: auto).	0.748690128326	463
Coq.Lists.List.app_comm_cons	40	8	search with cache (only 1: split).	0.0492489337921	38
Coq.Lists.List.app_eq_nil	40	12	search with cache (only 1: now destruct l).	0.300086975098	194
Coq.Lists.List.app_eq_unit	40	0.2.3.8.12.4.0.0	search with cache (only 1: destruct x); (only 1: simpl); (only 1: firstorder  discriminate); (only 1: inversion 1); (only 1: subst); (only 1: destruct x); (only 1: auto); (only 1: discriminate H).	39.1087698936	47374
Coq.Lists.List.elt_eq_unit	40
Coq.Lists.List.app_inj_tail_iff	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40
Coq.Lists.List.last_length	40
Coq.Lists.List.app_inv_head_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.app_inv_tail_iff	40
Coq.Lists.List.in_eq	40	2.2	search with cache (only 1: left); (only 1: auto).	0.0171830654144	15
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl); (only 1: auto).	0.0128331184387	2
Coq.Lists.List.not_in_cons	40
Coq.Lists.List.in_nil	40	0	search with cache (only 1: intuition).	0.0112998485565	1
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	8.0.7.8.0.0.0	search with cache (only 1: intros l m a); (only 1: elim l); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: intros a0 y H H0); (only 1: intuition).	32.376377821	36449
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.in_split	40
Coq.Lists.List.in_elt	40	5.5.1.1.1.0	search with cache (only 1: intros x l); (only 1: induction l as [| a l IHl]); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: intuition).	0.531847000122	655
Coq.Lists.List.in_elt_inv	40
Coq.Lists.List.in_inv	40	0.0.2	search with cache (only 1: destruct 1 as [?| H]); (only 1: intuition); (only 1: intuition).	0.0251998901367	5
Coq.Lists.List.in_dec	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.1.1.0.0	search with cache (only 1: intros [| n]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	0.0390129089355	15
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.8.0.3	search with cache (only 1: induction l as [| a l IH]); (only 1: easy); (only 1: intros [| n]); (only 1: simpl); (only 1: auto with arith); (only 1: simpl); (only 1: auto with arith).	2.31905603409	1273
Coq.Lists.List.app_nth1	40
Coq.Lists.List.app_nth2	40
Coq.Lists.List.app_nth2_plus	40	5.2.0.0	search with cache (only 1: intro l); (only 1: induction l as [| ? ? IHl]); (only 1: auto); (only 1: auto with arith).	0.5433177948	223
Coq.Lists.List.nth_middle	40	5.2.7	search with cache (only 1: induction l as [| ? ? IHl]); (only 1: auto); (only 1: auto with arith).	0.827569961548	567
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_ext	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40
Coq.Lists.List.nth_error_app2	40	0.0.0.2.5.0.0.0.0.4.0	search with cache (only 1: revert l); (only 1: induction n as [| n IHn]); (only 1: intros [| a l] H); (only 1: auto); (only 1: simpl in *); (only 1: now auto with arith); (only 1: intros [| a l] H); (only 1: auto with arith); (only 1: simpl in *); (only 1: apply IHn); (only 1: auto with arith).	13.9329681396	6012
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40
Coq.Lists.List.last_last	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.removelast_last	40
Coq.Lists.List.remove_cons	40
Coq.Lists.List.remove_app	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.notin_remove	40
Coq.Lists.List.in_remove	40
Coq.Lists.List.in_in_remove	40
Coq.Lists.List.remove_remove_comm	40
Coq.Lists.List.remove_remove_eq	40	2.0.2.0.1.0.0.4.3.1.0.10	search with cache (only 1: induction l as [| z l IHl]); (only 1: simpl); (only 1: reflexivity); (only 1: symmetry); (only 1: simpl); (only 1: destruct (eq_dec x z)); (only 1: auto); (only 1: simpl); (only 1: destruct (eq_dec x z)); (only 1: tauto); (only 1: rewrite IHl); (only 1: tauto).	29.7370400429	18719
Coq.Lists.List.remove_length_le	40
Coq.Lists.List.remove_length_lt	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	7	search with cache (only 1: intuition).	0.0205299854279	14
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	4.4.0.31	search with cache (only 1: simpl); (only 1: destruct eq_dec as [->| Hneq]); (only 1: intuition); (only 1: intuition).	4.38337612152	4996
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H); (only 1: simpl); (only 1: now destruct (eq_dec x y)).	0.0270750522614	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	1.0.0.0.2.0.0.5	search with cache (only 1: intro x); (only 1: induction x as [| a l IHl]); (only 1: simpl); (only 1: auto); (only 1: intro y); (only 1: simpl); (only 1: rewrite (IHl y)); (only 1: trivial).	1.11115717888	541
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.rev_eq_app	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40	4.2.0.0.0.11.2.4	search with cache (only 1: induction l as [| a l IHl]); (only 1: easy); (only 1: simpl); (only 1: rewrite app_length); (only 1: simpl); (only 1: rewrite <- plus_n_Sm, plus_n_O); (only 1: simpl); (only 1: auto with arith).	6.00248098373	6783
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	12.1.1.32.2	search with cache (only 1: simpl); (only 1: induction l as [| a l IHl]); (only 1: trivial); (only 1: simpl); (only 1: firstorder).	35.3902330399	71851
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	9	search with cache (only 1: auto).	0.0121018886566	10
Coq.Lists.List.concat_cons	40	0	search with cache (only 1: reflexivity).	0.00988817214966	1
Coq.Lists.List.concat_app	40
Coq.Lists.List.in_concat	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	4	search with cache (only 1: auto).	0.0145149230957	5
Coq.Lists.List.in_map	40
Coq.Lists.List.in_map_iff	40
Coq.Lists.List.map_length	40	4.1.12.0.1.0	search with cache (only 1: intro l); (only 1: induction l); (only 1: firstorder  (subst; auto)); (only 1: simpl); (only 1: rewrite IHl); (only 1: reflexivity).	2.72104692459	2986
Coq.Lists.List.map_nth	40
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40
Coq.Lists.List.map_last	40	0.0.1.5.0.4	search with cache (only 1: induction l as [| a l IHl]); (only 1: auto); (only 1: simpl); (only 1: intros); (only 1: rewrite IHl); (only 1: auto).	1.13132405281	566
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	15.1.1	search with cache (only 1: induction l as [| a l IHl]); (only 1: reflexivity); (only 1: intros [=H1 H0]).	13.0708320141	9356
Coq.Lists.List.map_eq_cons	40
Coq.Lists.List.map_eq_app	40
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.flat_map_app	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	1.15.0.0.18	search with cache (only 1: induction l as [| a l IHl]); (only 1: reflexivity); (only 1: simpl); (only 1: rewrite IHl); (only 1: auto).	7.35898399353	12157
Coq.Lists.List.concat_map	40	1.0.11.3.0.0.2.0	search with cache (only 1: intros A B f l); (only 1: induction l as [| x l IH]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: rewrite map_app); (only 1: rewrite IH); (only 1: reflexivity).	5.15948081017	5121
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	6.8.1.2.4	search with cache (only 1: induction l as [| a l IHl]); (only 1: repeat split); (only 1: simpl); (only 1: rewrite IHl); (only 1: repeat split).	1.34705591202	1645
Coq.Lists.List.map_map	40	1.4.3.0.0.4	search with cache (only 1: induction l as [| x l IH]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: rewrite IH); (only 1: reflexivity).	0.931710004807	724
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	1.4.2	search with cache (only 1: intros A B C f g l); (only 1: apply map_ext_in); (only 1: auto).	0.089250087738	35
Coq.Lists.List.flat_map_ext	40	1.14.0.3.0.0.2.6	search with cache (only 1: intros); (only 1: induction l as [| x l IH]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: rewrite IH); (only 1: rewrite H by intuition); (only 1: reflexivity).	15.9916679859	20916
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.fold_left_app	40	2.0.1.5	search with cache (only 1: induction l as [| a l IHl]); (only 1: repeat split); (only 1: simpl); (only 1: auto).	0.172785043716	128
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.1.7.2.0.6.5	search with cache (only 1: intros A B f l); (only 1: induction l as [| a l IHl]); (only 1: reflexivity); (only 1: simpl); (only 1: intros); (only 1: rewrite IHl); (only 1: auto).	16.2962999344	17368
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	2.2.0.1.0.0.3	search with cache (only 1: induction l as [| a ? ?]); (only 1: simpl); (only 1: easy); (only 1: simpl); (only 1: case_eq (f a)); (only 1: intuition congruence); (only 1: intuition congruence).	4.70140695572	1145
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl); (only 1: now intros -> ->).	0.0209989547729	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	0.0.0.0.7.0.0.0.0.0.7.0.10	search with cache (only 1: split); (only 1: induction l as [| a l' Hrec]); (only 1: auto); (only 1: simpl); (only 1: destruct (f a), (partition l') as (left, right)); (only 1: intros [=<- <-]); (only 1: intros [=<- <-]); (only 1: induction l as [| a l' Hrec]); (only 1: auto); (only 1: simpl); (only 1: destruct (f a), (partition l') as (left, right)); (only 1: intros [=<- <-]); (only 1: intros [=<- <-]).	7.88159704208	8581
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	11.0.2	search with cache (only 1: intros f g l); (only 1: rewrite filter_map); (only 1: apply ext_in_map).	0.382493972778	346
Coq.Lists.List.filter_ext_in_iff	40	0.1.20.1.1	search with cache (only 1: intros f g l); (only 1: rewrite filter_map); (only 1: split); (only 1: apply ext_in_map); (only 1: apply map_ext_in).	0.697167873383	1088
Coq.Lists.List.filter_ext	40	2.2.0	search with cache (only 1: intros f g l H); (only 1: apply filter_ext_in); (only 1: auto).	0.0443439483643	12
Coq.Lists.List.remove_alt	40	4.0.0.14.0.0.0	search with cache (only 1: induction l as [| ? ? IHl]); (only 1: reflexivity); (only 1: simpl); (only 1: rewrite IHl); (only 1: destruct (eq_dec x a)); (only 1: reflexivity); (only 1: reflexivity).	7.61099791527	4948
Coq.Lists.List.count_occ_alt	40
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	1.0.0.1.3.4.1.0	search with cache (only 1: intro l); (only 1: induction l as [| a l IHl]); (only 1: auto); (only 1: simpl); (only 1: destruct a); (only 1: destruct (split l)); (only 1: simpl in *); (only 1: auto).	2.15371394157	1206
Coq.Lists.List.split_length_r	40	0.0.0.1.3.3.0.0.0	search with cache (only 1: intro l); (only 1: induction l as [| a l IHl]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: destruct a); (only 1: destruct (split l)); (only 1: simpl); (only 1: auto).	2.11204195023	1094
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	6	search with cache (only 1: left).	0.0151300430298	7
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	5.0.0	search with cache (only 1: unfold lel); (only 1: simpl in *); (only 1: auto with arith).	0.135822057724	8
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel); (only 1: simpl); (only 1: auto with arith).	0.0199270248413	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel); (only 1: simpl); (only 1: auto with arith).	0.0204000473022	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_nil_l	40	3.9.8	search with cache (only 1: intros Hnin); (only 1: intros Heq); (only 1: firstorder  (subst; auto)).	0.795305967331	932
Coq.Lists.List.incl_l_nil	40	9.2.3.4.7.1	search with cache (only 1: induction l as [| x l]); (only 1: auto); (only 1: intros H); (only 1: specialize (H x)); (only 1: simpl in H); (only 1: intuition).	7.39443993568	8036
Coq.Lists.List.incl_refl	40	1.0	search with cache (only 1: intros l a Hin); (only 1: auto).	0.0142078399658	3
Coq.Lists.List.incl_tl	40	0.0.9.20	search with cache (only 1: intros P ? ? l); (only 1: intros E); (only 1: simpl); (only 1: auto).	2.69047212601	4929
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto with datatypes).	0.0147151947021	1
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0170550346375	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.018098115921	1
Coq.Lists.List.incl_cons	40
Coq.Lists.List.incl_cons_inv	40	1	search with cache (only 1: auto with datatypes).	0.0348579883575	12
Coq.Lists.List.incl_app	40
Coq.Lists.List.incl_app_app	40	0	search with cache (only 1: auto with datatypes).	0.0223560333252	1
Coq.Lists.List.incl_app_inv	40	0.0.0.9	search with cache (only 1: intros l a Hin); (only 1: split); (only 1: auto with datatypes); (only 1: auto with datatypes).	0.434175014496	263
Coq.Lists.List.incl_filter	40
Coq.Lists.List.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.firstn_nil	40	6.7.18	search with cache (only 1: destruct n); (only 1: auto with arith); (only 1: auto).	0.45914888382	702
Coq.Lists.List.firstn_cons	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: induction n); (only 1: now simpl); (only 1: induction n); (only 1: now simpl); (only 1: induction n); (only 1: now simpl); (only 1: induction n); (only 1: now simpl); (only 1: auto).	0.149157047272	11
Coq.Lists.List.firstn_all	40	0.1.5.1.10	search with cache (only 1: induction l as [| y l IHl]); (only 1: now simpl); (only 1: simpl in *); (only 1: f_equal); (only 1: now simpl).	1.7988049984	1064
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0134961605072	1
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	3	search with cache (only 1: now reflexivity).	0.0304980278015	14
Coq.Lists.List.skipn_nil	40	2.0.15	search with cache (only 1: induction n); (only 1: reflexivity); (only 1: reflexivity).	0.259289979935	219
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.014683008194	1
Coq.Lists.List.skipn_all	40	11.1.21.13	search with cache (only 1: intro l'); (only 1: elim l'); (only 1: now simpl); (only 1: auto with arith).	39.3171508312	45489
Coq.Lists.List.skipn_all2	40	2.0.1.2.0.0.3.0.2	search with cache (only 1: induction n as [| k iHk]); (only 1: now intro l; induction l); (only 1: destruct l as [| x xs]); (only 1: simpl); (only 1: now reflexivity); (only 1: simpl); (only 1: intro H); (only 1: apply Peano.le_S_n in H); (only 1: apply iHk, H).	4.49148488045	1940
Coq.Lists.List.firstn_skipn	40	1.0.5.3.13.1.7	search with cache (only 1: induction n as [| k iHk]); (only 1: reflexivity); (only 1: destruct l as [| x xs]); (only 1: reflexivity); (only 1: simpl); (only 1: f_equal); (only 1: apply iHk).	5.49509716034	4913
Coq.Lists.List.firstn_length	40	1.2.0.0.0.1.0.3.3	search with cache (only 1: intro l); (only 1: induction l); (only 1: auto); (only 1: intro l'); (only 1: destruct l'); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	24.1226809025	12043
Coq.Lists.List.skipn_length	40
Coq.Lists.List.skipn_app	40
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.removelast_firstn_len	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2.0.0.0.2	search with cache (only 1: induction l as [| a l IHl]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	0.0353400707245	9
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40	0.2.0.0.0.2.1.0.4.3.0	search with cache (only 1: intro l); (only 1: induction l as [| x l IHl]); (only 1: destruct l' as [| x' l']); (only 1: reflexivity); (only 1: reflexivity); (only 1: destruct l' as [| x' l']); (only 1: reflexivity); (only 1: simpl); (only 1: specialize IHl with l'); (only 1: rewrite <- IHl); (only 1: reflexivity).	17.8369760513	10016
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40	10.26.23	search with cache (only 1: induction l1 as [| ? ? IHl1]); (only 1: now constructor); (only 1: now constructor).	2.9930768013	6744
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40	0.6.0.2.8	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	0.45067191124	356
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add); (only 1: apply Add_app).	0.0201029777527	2
Coq.Lists.List.NoDup_cons_iff	40	1.6.2.1	search with cache (only 1: split); (only 1: inversion_clear 1); (only 1: intuition); (only 1: now constructor).	0.481765031815	264
Coq.Lists.List.NoDup_rev	40
Coq.Lists.List.NoDup_filter	40
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.nodup_incl	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.cons_seq	40	3.0	search with cache (only 1: intro n); (only 1: auto with arith).	0.0179760456085	5
Coq.Lists.List.seq_length	40	1.1.0.4.10	search with cache (only 1: intro l); (only 1: induction l as [| a l' Hrec]); (only 1: reflexivity); (only 1: simpl); (only 1: auto).	3.06356501579	2608
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40	3.4.0.2.0.0.11.4	search with cache (only 1: intro len); (only 1: induction len as [| len IHlen]); (only 1: simpl); (only 1: auto with arith); (only 1: simpl seq); (only 1: intros); (only 1: rewrite IHlen, <- plus_n_Sm); (only 1: auto with arith).	9.78899693489	10709
Coq.Lists.List.seq_S	40	0.1.3.2.0.1.0.1	search with cache (only 1: intro len1); (only 1: induction len1 as [| len1' IHlen]); (only 1: intros); (only 1: simpl in *); (only 1: now rewrite Nat.add_0_r); (only 1: intros); (only 1: simpl in *); (only 1: now rewrite Nat.add_succ_r, IHlen).	1.98112106323	1119
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nth	40
Coq.Lists.List.Exists_nil	40	2.0	search with cache (only 1: firstorder); (only 1: inversion_clear H as [| ? H1]).	0.0209832191467	4
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_app	40
Coq.Lists.List.Exists_rev	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Exists_fold_right	40
Coq.Lists.List.incl_Exists	40
Coq.Lists.List.Forall_forall	40	1.5.0.5.0.1.0.0.1.0	search with cache (only 1: split); (only 1: induction 1); (only 1: firstorder); (only 1: firstorder); (only 1: subst); (only 1: auto); (only 1: induction l); (only 1: firstorder); (only 1: simpl); (only 1: auto).	10.948335886	7454
Coq.Lists.List.Forall_nth	40
Coq.Lists.List.Forall_inv	40	8	search with cache (only 1: abstract now inversion 1).	0.04603099823	30
Coq.Lists.List.Forall_inv_tail	40	0.1.0	search with cache (only 1: intros a l H); (only 1: inversion H); (only 1: trivial).	0.0218229293823	4
Coq.Lists.List.Forall_app	40
Coq.Lists.List.Forall_elt	40	0.15.0.6.0.1.0.1.7	search with cache (only 1: induction l1); (only 1: simpl); (only 1: intuition); (only 1: inversion H); (only 1: intuition); (only 1: simpl); (only 1: intuition); (only 1: inversion H); (only 1: intuition).	10.5967180729	11118
Coq.Lists.List.Forall_rev	40
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_fold_right	40
Coq.Lists.List.incl_Forall	40
Coq.Lists.List.map_ext_Forall	40
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Exists_or	40	0.0.11.0.0.0.12.0.5	search with cache (only 1: intuition); (only 1: induction H0 as [x l H0| x l H0 IHExists]); (only 1: left); (only 1: auto); (only 1: apply (Exists_cons_tl x IHExists)); (only 1: induction H0 as [x l H0| x l H0 IHExists]); (only 1: left); (only 1: auto); (only 1: apply (Exists_cons_tl x IHExists)).	20.9480171204	20825
Coq.Lists.List.Exists_or_inv	40
Coq.Lists.List.Forall_impl	40
Coq.Lists.List.Forall_and	40	0.0.5	search with cache (only 1: intros P Q l); (only 1: rewrite !Forall_forall); (only 1: firstorder).	0.413172960281	126
Coq.Lists.List.Forall_and_inv	40	6.6.0	search with cache (only 1: intros P Q l); (only 1: rewrite !Forall_forall); (only 1: firstorder).	1.70711803436	986
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.incl_Forall_in_iff	40
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2_refl	40	8	search with cache (only 1: constructor).	0.0148501396179	9
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.0.0.30	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]); (only 1: auto); (only 1: simpl); (only 1: auto).	8.82724499702	10257
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	4.0.0.6	search with cache (only 1: induction n); (only 1: now simpl); (only 1: simpl); (only 1: eauto with arith).	0.495168209076	385
Coq.Lists.List.repeat_spec	40	2.2.4.2.0.0	search with cache (only 1: induction n as [| k Hrec]); (only 1: simpl); (only 1: intuition); (only 1: destruct 1); (only 1: intuition); (only 1: intuition).	0.805603981018	599
Coq.Lists.List.repeat_cons	40	1.3.4.1.22	search with cache (only 1: induction n as [| k Hrec]); (only 1: auto with arith); (only 1: simpl); (only 1: f_equal); (only 1: auto with arith).	0.887315988541	825
Coq.Lists.List.repeat_app	40	1.0.5.0.0.2	search with cache (only 1: induction n as [| n IHn]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: f_equal); (only 1: apply IHn).	0.547651052475	359
Coq.Lists.List.repeat_eq_app	40
Coq.Lists.List.repeat_eq_cons	40	1.3.0.2.4.3	search with cache (only 1: revert n); (only 1: intros n Hr); (only 1: induction n as [| k Hrec]); (only 1: inversion Hr as [[Heq Hr0]]); (only 1: inversion Hr as [[Heq Hr0]]); (only 1: auto).	1.71914601326	1399
Coq.Lists.List.repeat_eq_elt	40
Coq.Lists.List.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	1.0.6.2.0.2	search with cache (only 1: induction n as [| n IHn]); (only 1: simpl); (only 1: now reflexivity); (only 1: simpl); (only 1: f_equal); (only 1: apply IHn).	0.471719026566	402
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.ListDec.In_decidable	40	3.2.1.6	search with cache (only 1: induction l as [| a l' Hrec]); (only 1: firstorder  auto with datatypes); (only 1: simpl); (only 1: intuition).	0.826371908188	359
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	0.0.8.5.0.0.1.0	search with cache (only 1: unfold set_In); (only 1: simple induction x); (only 1: auto); (only 1: intros a0 x0 Ha0); (only 1: simpl); (only 1: case (Aeq_dec a a0)); (only 1: auto with datatypes); (only 1: auto with datatypes).	8.0319890976	5509
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	1.0.2	search with cache (only 1: intros a0 l H [Ha0a| Hal]); (only 1: auto with datatypes); (only 1: auto with datatypes).	0.143368005753	70
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.1.0.0.0.0.0.0.0.0.1.0.2.1	search with cache (only 1: unfold set_In); (only 1: simple induction x); (only 1: simpl); (only 1: intros [H1| H2]); (only 1: auto with datatypes); (only 1: auto with datatypes); (only 1: simpl); (only 1: do 3 intro); (only 1: elim (Aeq_dec b a0)); (only 1: simpl); (only 1: auto with datatypes); (only 1: simpl); (only 1: intros H0 [| ]); (only 1: auto with datatypes); (only 1: auto with datatypes).	3.40553808212	1857
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40
Coq.Lists.ListSet.set_union_intro	40	0.0.1.0.0.0.1	search with cache (only 1: simple induction y); (only 1: simpl); (only 1: tauto); (only 1: intros); (only 1: elim H0); (only 1: auto with datatypes); (only 1: auto with datatypes).	0.0636029243469	20
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.4.1.0.8.0.0.13	search with cache (only 1: simple induction x); (only 1: simpl); (only 1: auto with datatypes); (only 1: simpl); (only 1: intros); (only 1: generalize (set_add_elim _ _ _ H0)); (only 1: intros [H1| H1]); (only 1: auto with datatypes); (only 1: auto with datatypes).	39.0850119591	14180
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H); (only 1: case (set_union_elim _ _ _ H)); (only 1: case (set_union_elim _ _ _ H)); (only 1: case (set_union_elim _ _ _ H)); (only 1: auto || contradiction); (only 1: auto || contradiction); (only 1: auto || contradiction); (only 1: auto || contradiction).	0.210954904556	40
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	4	search with cache (only 1: eauto with datatypes).	0.114872932434	5
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.Streams.unfold_Stream	40	0.0.0.40	search with cache (only 1: intro H); (only 1: destruct H); (only 1: destruct H); (only 1: Ltac.reflexivity).	35.6877219677	77551
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	4.19.0.2	search with cache (only 1: intros); (only 1: coinduction ltac:(EqSt_reflex)); (only 1: destruct H); (only 1: auto).	7.73229408264	10225
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	3.0.23	search with cache (only 1: coinduction ltac:(EqSt_reflex)); (only 1: auto); (only 1: auto).	0.384015798569	676
Coq.Lists.Streams.Str_nth_tl_map	40	13.0.0.0.0.1	search with cache (only 1: simple induction n); (only 1: simpl); (only 1: auto); (only 1: intros m hypind); (only 1: simpl); (only 1: auto).	1.16460108757	1816
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.5	search with cache (only 1: unfold Str_nth); (only 1: induction n); (only 1: reflexivity); (only 1: simpl); (only 1: intros s); (only 1: apply IHn).	0.153203010559	137
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	0.0.6.0.0	search with cache (only 1: induction n); (only 1: reflexivity); (only 1: intros); (only 1: simpl); (only 1: apply IHn).	0.351367950439	178
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.2.0.2.1	search with cache (only 1: unfold Str_nth); (only 1: induction n); (only 1: reflexivity); (only 1: intros [x xs] [y ys]); (only 1: simpl in *); (only 1: apply IHn).	0.334743976593	156
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1); (only 1: auto).	0.0159440040588	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	4.42	search with cache (only 1: compute); (only 1: eauto).	2.65588903427	9499
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.1.3.0.5	search with cache (only 1: intros D_epsilon A P H); (only 1: destruct H); (only 1: destruct D_epsilon with (P := P) as (x, H1)); (only 1: auto); (only 1: exists x); (only 1: apply H1).	0.222786903381	273
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.18.29	search with cache (only 1: intros AC_depfun A B R H); (only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf)); (only 1: exists f); (only 1: trivial).	25.4269461632	94305
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.2.3.4.6	search with cache (only 1: intros P notall); (only 1: intros n H); (only 1: apply notall); (only 1: exists n); (only 1: exact H).	0.882103919983	1239
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.2.3.3.9.12.7	search with cache (only 1: intros P notall); (only 1: intro n); (only 1: apply NNPP); (only 1: intro abs); (only 1: apply notall); (only 1: exists n); (only 1: apply abs).	39.5477900505	62043
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	7.2.15.11	search with cache (only 1: intros A); (only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1)); (only 1: intuition); (only 1: tauto).	1.95115303993	5926
Coq.Logic.Classical_Prop.not_imply_elim2	40	1	search with cache (only 1: auto).	0.0117869377136	2
Coq.Logic.Classical_Prop.imply_to_or	40	7.2.11.0	search with cache (only 1: intros A); (only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1)); (only 1: intuition); (only 1: tauto).	2.33234405518	2307
Coq.Logic.Classical_Prop.imply_to_and	40
Coq.Logic.Classical_Prop.or_to_imply	40	2.2.0	search with cache (only 1: intros A); (only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1)); (only 1: intuition).	0.0332779884338	15
Coq.Logic.Classical_Prop.not_and_or	40	0.8.15	search with cache (only 1: intros A); (only 1: intros HA); (only 1: tauto).	1.8720998764	2891
Coq.Logic.Classical_Prop.or_not_and	40	3	search with cache (only 1: tauto).	0.223326921463	84
Coq.Logic.Classical_Prop.not_or_and	40	1.1.0.2	search with cache (only 1: intros); (only 1: split); (only 1: auto); (only 1: auto).	0.210006952286	45
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0141818523407	1
Coq.Logic.Classical_Prop.imply_and_or	40	2.3.0	search with cache (only 1: intros A); (only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1)); (only 1: intuition).	0.0319681167603	14
Coq.Logic.Classical_Prop.imply_and_or2	40	2.3.0	search with cache (only 1: intros A); (only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1)); (only 1: intuition).	0.180881023407	33
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	23.4.0.8.11	search with cache (only 1: intros Ext EM A); (only 1: apply Ext); (only 1: split); (only 1: exact (fun _ => I)); (only 1: trivial).	0.656672954559	4786
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	68	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	2.23707509041	11075
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.Logic.JMeq.JMeq_sym	40	0.6.16	search with cache (only 1: intros n P IH0 IHS); (only 1: inversion 1); (only 1: Ltac.reflexivity).	0.094290971756	311
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros); (only 1: destruct H); (only 1: trivial).	0.0167369842529	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.0	search with cache (only 1: intros A x P H y H'); (only 1: case JMeq_eq with (1 := H')); (only 1: trivial).	0.0160958766937	4
Coq.Logic.JMeq.JMeq_rect	40	1.0.0	search with cache (only 1: intros A x P H y H'); (only 1: case JMeq_eq with (1 := H')); (only 1: trivial).	0.0174009799957	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: case JMeq_eq with (1 := H')); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: trivial).	0.0284669399261	13
Coq.Logic.JMeq.JMeq_rect_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: case JMeq_eq with (1 := H')); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: trivial).	0.0319170951843	13
Coq.Logic.JMeq.JMeq_congr	40	2.1.0.1.0.0	search with cache (only 1: intros A x P H y H'); (only 1: case JMeq_eq with (1 := H')); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: case JMeq_eq with (1 := H')); (only 1: case JMeq_eq with (1 := JMeq_sym H')); (only 1: trivial).	0.0340051651001	12
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	search with cache (only 1: intros); (only 1: destruct H); (only 1: apply eq_dep_intro).	0.0222239494324	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	4.0	search with cache (only 1: destruct 1); (only 1: trivial).	0.0154659748077	6
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1); (only 1: auto).	0.0133039951324	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.4.22.2	search with cache (only 1: destruct 1); (only 1: intro); (only 1: dependent rewrite H); (only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	1.86795902252	2984
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.1.0	search with cache (only 1: intros); (only 1: intros p q); (only 1: apply functional_extensionality_dep); (only 1: intro x); (only 1: apply H).	0.0210390090942	8
Coq.Logic.HLevels.false_hprop	40	0.1	search with cache (only 1: intros p q); (only 1: destruct p, q).	0.0134818553925	3
Coq.Logic.HLevels.true_hprop	40	4.0.1	search with cache (only 1: intros p q); (only 1: destruct p, q); (only 1: Ltac.reflexivity || destruct H).	0.0166831016541	8
Coq.Logic.HLevels.not_hprop	40	0.5.2.0	search with cache (only 1: intros p q); (only 1: intro x); (only 1: apply functional_extensionality_dep); (only 1: contradiction).	0.0787789821625	104
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.8.3.0	search with cache (only 1: intros * H); (only 1: apply eq_dep_eq); (only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H))); (only 1: elim H using eq_indd); (only 1: reflexivity).	0.530653953552	410
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	1.3.54	search with cache (only 1: intro H); (only 1: destruct H); (only 1: eauto).	0.504299879074	2118
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	1.28	search with cache (only 1: red); (only 1: eauto).	0.168529987335	452
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	3.3.3.0.3.3.3.2.3.1.4	search with cache (only 1: intros B); (only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _))); (only 1: auto); (only 1: exact bool); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto).	21.1509599686	32525
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.6.19	search with cache (only 1: intros); (only 1: destruct H); (only 1: Ltac.reflexivity).	0.138351917267	427
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1); (only 1: auto).	0.0137460231781	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	3.104.1	search with cache (only 1: destruct 1); (only 1: exists eq_refl); (only 1: Ltac.reflexivity).	5.99082708359	42580
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.37.27.23	search with cache (only 1: intro H); (only 1: intro n); (only 1: inversion 1); (only 1: Ltac.reflexivity).	24.5865368843	114356
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	search with cache (only 1: intros * H); (only 1: rewrite H); (only 1: Ltac.reflexivity).	0.0207939147949	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.16.1.0.17.4	search with cache (only 1: Ltac.split); (only 1: intros * H); (only 1: dependent rewrite H); (only 1: apply eq_dep_intro); (only 1: destruct 1); (only 1: reflexivity).	1.17163205147	3808
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.8	search with cache (only 1: intros * H); (only 1: dependent rewrite H); (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0579750537872	37
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	search with cache (only 1: intros * H); (only 1: rewrite H); (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0264730453491	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.14.1.0.15.2	search with cache (only 1: split); (only 1: intros * H); (only 1: dependent rewrite H); (only 1: apply eq_dep_intro); (only 1: destruct 1); (only 1: reflexivity).	1.54997491837	3342
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	5.0.1	search with cache (only 1: change x2 with (projT1 (existT P x2 H2))); (only 1: destruct H); (only 1: split).	0.0202400684357	13
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	2.17	search with cache (only 1: dependent rewrite H); (only 1: split).	2.81086587906	3920
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	15.3.0.37	search with cache (only 1: intros r s); (only 1: destruct 1); (only 1: rewrite H); (only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	1.52281904221	3708
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	12.0	search with cache (only 1: red); (only 1: auto).	0.257107973099	480
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	4.11.2.1.4	search with cache (only 1: intro); (only 1: intro UIP); (only 1: intros p2); (only 1: rewrite H); (only 1: apply UIP).	5.44648694992	17778
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro); (only 1: intro); (only 1: auto).	0.0191190242767	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0	search with cache (only 1: red); (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0192339420319	3
Coq.Logic.EqdepFacts.f_eq_dep	40	3.1	search with cache (only 1: destruct 1); (only 1: auto using eq_sig_eq_dep, eq_dep_eq_sig).	0.0330450534821	18
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	search with cache (only 1: destruct 1); (only 1: auto).	0.0273320674896	23
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1); (only 1: reflexivity).	0.0203590393066	12
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.Decidable.dec_not_not	40	6.2.19.1	search with cache (only 1: intros); (only 1: Ltac.reflexivity || destruct H); (only 1: auto); (only 1: contradiction).	3.7670340538	14056
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.012274980545	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0132620334625	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0291218757629	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0313770771027	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0163750648499	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0219120979309	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0315930843353	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.014979839325	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0150249004364	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0253720283508	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0245878696442	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0184409618378	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.110785007477	2
Coq.Logic.Decidable.not_true_iff	40	0.0.2	search with cache (only 1: Ltac.split); (only 1: auto); (only 1: auto).	0.0119190216064	5
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00764107704163	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0154600143433	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.018091917038	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0211908817291	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0218758583069	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0215468406677	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0227110385895	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0234289169312	2
Coq.Logic.Decidable.not_or_iff	40	1	search with cache (only 1: tauto).	0.0151569843292	2
Coq.Logic.Decidable.not_and_iff	40	8	search with cache (only 1: tauto).	0.0341670513153	29
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0359961986542	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable); (only 1: tauto).	0.0290260314941	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	4.8.11.25	search with cache (only 1: intro n); (only 1: intro m); (only 1: destruct m); (only 1: trivial).	1.3189060688	5686
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split); (only 1: trivial); (only 1: destruct b as (a1, a2, [])); (only 1: reflexivity).	0.0181889533997	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.0.3	search with cache (only 1: intros); (only 1: destruct H); (only 1: Ltac.reflexivity).	0.0186219215393	7
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.3	search with cache (only 1: intros); (only 1: rewrite H); (only 1: auto).	0.0200090408325	6
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	2.1.0	search with cache (only 1: apply functional_extensionality in H); (only 1: destruct H); (only 1: Ltac.reflexivity).	0.0181357860565	6
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	2.1.0	search with cache (only 1: apply functional_extensionality in H); (only 1: destruct H); (only 1: Ltac.reflexivity).	0.0173561573029	6
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0.0	search with cache (only 1: apply forall_eq_rect with (H := H)); (only 1: clear H g); (only 1: rewrite functional_extensionality_dep_good_refl); (only 1: Ltac.reflexivity).	0.0795030593872	86
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	7	search with cache (only 1: reflexivity).	0.0108358860016	8
Coq.Logic.FunctionalExtensionality.eta_expansion	40	8	search with cache (only 1: reflexivity).	0.00883984565735	9
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8	search with cache (only 1: auto).	0.0460269451141	59
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	10	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.728201150894	28
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	16	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.941681861877	556
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.StrictProp.Spr1_inj	40	11.9.27.5	search with cache (only 1: destruct a, b); (only 1: simpl in *); (only 1: subst); (only 1: Ltac.reflexivity).	1.9413921833	7962
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.1.1.0	search with cache (only 1: intros); (only 1: generalize (FM.mem_iff s x), (FM.mem_iff s y), (FM.In_eq_iff s H)); (only 1: destruct (mem y s)); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	1.43854498863	270
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	11.4.3	search with cache (only 1: intros); (only 1: apply <- mem_spec); (only 1: auto with set relations).	20.9564099312	12107
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0219490528107	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	4.6	search with cache (only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_iff s x y)); (only 1: intuition).	2.2573568821	899
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0.10	search with cache (only 1: rewrite <- not_mem_iff); (only 1: rewrite remove_spec); (only 1: intuition).	0.515887022018	190
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.1.0.1.1.1.0.1	search with cache (only 1: intros); (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H)); (only 1: destruct (mem y s)); (only 1: destruct (mem y (remove x s))); (only 1: intuition); (only 1: intuition); (only 1: destruct (mem y (remove x s))); (only 1: intuition); (only 1: intuition).	3.26721405983	779
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	2	search with cache (only 1: auto with set).	0.0298030376434	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.0402548313141	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros); (only 1: rewrite <- mem_spec); (only 1: destruct (mem x s)); (only 1: intuition); (only 1: intuition).	0.0701549053192	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	4	search with cache (only 1: auto with set).	0.0174651145935	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.3.0.2	search with cache (only 1: do 2 rewrite <- equal_iff); (only 1: intros); (only 1: apply <- equal_spec); (only 1: Dec.fsetdec).	0.124686002731	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.1.2	search with cache (only 1: intros); (only 1: rewrite (equal_2 H)); (only 1: auto).	0.0308520793915	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.1.3	search with cache (only 1: intros); (only 1: rewrite (equal_2 H)); (only 1: auto).	0.0331439971924	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	9.5	search with cache (only 1: apply subset_1); (only 1: Dec.fsetdec).	0.215721130371	176
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	12	search with cache (only 1: auto with set).	0.158859968185	86
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0175578594208	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	8	search with cache (only 1: auto with set relations).	0.166491985321	72
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0	search with cache (only 1: auto with set).	0.0180778503418	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	4.7	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y)); (only 1: intuition).	0.994520902634	435
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	1.1	search with cache (only 1: rewrite <- not_mem_iff); (only 1: intuition).	0.0745449066162	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	0.1.0.8	search with cache (only 1: rewrite <- not_mem_iff); (only 1: intros); (only 1: apply equal_1); (only 1: Dec.fsetdec).	1.03696799278	138
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.0.0.0.1.0.14.8	search with cache (only 1: apply eq_true_iff_eq); (only 1: rewrite <- is_empty_iff); (only 1: rewrite elements_Empty, cardinal_spec); (only 1: intuition); (only 1: destruct (elements s)); (only 1: intuition); (only 1: discriminate); (only 1: destruct (elements s)); (only 1: intuition); (only 1: discriminate).	29.1945438385	10766
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	3.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: intuition).	0.289223194122	48
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	1.1.1.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: destruct (mem y (singleton x))); (only 1: intuition); (only 1: intuition).	0.428931951523	71
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	3.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y)); (only 1: intuition).	0.654304027557	162
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1.1.1.0.0	search with cache (only 1: destruct (mem x (union s s'))); (only 1: destruct (mem x (union s s'))); (only 1: intuition); (only 1: intuition); (only 1: intuition).	1.31644105911	168
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0271260738373	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0199699401855	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0187890529633	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0173490047455	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0336718559265	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0160310268402	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0158610343933	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0166800022125	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff); (only 1: Dec.fsetdec).	0.168427944183	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: intuition).	0.030632019043	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0199949741364	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0175261497498	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.017804145813	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0156650543213	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0353779792786	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0162630081177	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0184619426727	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0124979019165	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0120489597321	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0255570411682	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0.4	search with cache (only 1: apply subset_1); (only 1: Dec.fsetdec).	0.0470309257507	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.015704870224	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1); (only 1: Dec.fsetdec).	0.108500957489	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.015554189682	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0158860683441	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b); (only 1: auto with set).	0.0276050567627	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	1.4.0.1.1.1.0.1	search with cache (only 1: symmetry); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto with set); (only 1: auto with set); (only 1: auto with set); (only 1: rewrite not_mem_iff); (only 1: auto with set); (only 1: auto with set).	3.83396315575	1584
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	2.0	search with cache (only 1: intros); (only 1: auto with set).	0.14643406868	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros); (only 1: do 2 rewrite cardinal_fold); (only 1: change S with ((fun _ => S) x)); (only 1: change S with ((fun _ => S) x)); (only 1: apply MP.fold_add with (eqA := Logic.eq)); (only 1: auto with *); (only 1: congruence); (only 1: auto); (only 1: auto).	0.211248874664	35
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	3.3.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: do 2 rewrite cardinal_fold); (only 1: change S with ((fun _ => S) x)); (only 1: apply MP.remove_fold_1 with (eqA := Logic.eq)); (only 1: auto with *); (only 1: congruence); (only 1: auto with set); (only 1: auto with set).	0.912631988525	499
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	5.0	search with cache (only 1: intros); (only 1: auto with set).	0.0233170986176	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	6.0	search with cache (only 1: intros); (only 1: auto with set).	0.0296778678894	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0189521312714	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	1.1.1.0.0.0.0.0.1	search with cache (only 1: unfold Equal); (only 1: intros); (only 1: set_iff); (only 1: repeat rewrite filter_spec); (only 1: set_iff); (only 1: intuition); (only 1: auto); (only 1: auto); (only 1: auto).	9.348706007	509
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	19.1.3.2.0	search with cache (only 1: intros); (only 1: apply for_all_1); (only 1: auto); (only 1: red); (only 1: auto with set).	8.75324678421	5431
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	2.26.6.0	search with cache (only 1: intros); (only 1: rewrite <- (for_all_iff s (f:=f)) in H); (only 1: intuition); (only 1: auto).	34.4952609539	21506
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.17	search with cache (only 1: repeat red); (only 1: intros); (only 1: f_equal); (only 1: auto).	0.228787183762	205
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	5.1	search with cache (only 1: intros s Hsame); (only 1: eauto with *).	0.155323982239	8
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	3.1	search with cache (only 1: compute); (only 1: auto).	0.0197298526764	6
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	8.0.1.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns); (only 1: intuition); (only 1: unfold Subset, Included, In, mkEns); (only 1: intro x); (only 1: Dec.fsetdec).	0.804568052292	610
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.2.0	search with cache (only 1: intros); (only 1: unfold Subset, Included, Same_set, In, mkEns); (only 1: intuition).	0.0377099514008	5
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	8	search with cache (only 1: intuition).	0.0283579826355	13
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	8	search with cache (only 1: intuition).	0.080668926239	19
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	18	search with cache (only 1: fsetdec).	12.7084929943	3243
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	2.3.1	search with cache (only 1: apply -> subset_spec); (only 1: apply <- subset_spec); (only 1: fsetdec).	0.0490300655365	11
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	5.2	search with cache (only 1: intuition); (only 1: fsetdec).	0.10267496109	9
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	13	search with cache (only 1: fsetdec).	0.222852945328	115
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0379278659821	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	2.3.1	search with cache (only 1: apply -> subset_spec); (only 1: apply <- subset_spec); (only 1: fsetdec).	0.0520870685577	11
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0506489276886	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0494530200958	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0857169628143	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0417761802673	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0389671325684	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	1.1.1.3	search with cache (only 1: intuition); (only 1: fsetdec); (only 1: fsetdec); (only 1: fsetdec).	0.344699859619	44
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	12	search with cache (only 1: fsetdec).	0.403192043304	128
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0448739528656	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0	search with cache (only 1: fsetdec).	0.0687489509583	1
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	4	search with cache (only 1: fsetdec).	0.148840904236	5
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	19.8	search with cache (only 1: intuition); (only 1: fsetdec).	1.25972485542	1251
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.128304004669	3
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.113580942154	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.121608018875	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0902090072632	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.213521957397	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0664019584656	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0986368656158	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0959680080414	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.14321398735	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0741050243378	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.150538921356	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.263958930969	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.246423959732	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0342590808868	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0337190628052	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0564529895782	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0604410171509	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0521819591522	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0665431022644	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0817930698395	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	5.2	search with cache (only 1: intuition); (only 1: fsetdec).	10.0290830135	816
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0666799545288	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0859820842743	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0838031768799	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.131695985794	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.166081905365	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.171257972717	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.167267799377	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.132480859756	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.047917842865	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0447239875793	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0329790115356	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0341360569	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0592460632324	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	8	search with cache (only 1: fsetdec).	1.94575190544	276
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0688848495483	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0388209819794	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.109749078751	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0855169296265	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.13547706604	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.13583111763	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	2.1.1.5	search with cache (only 1: red); (only 1: intros); (only 1: rewrite add_spec); (only 1: fsetdec).	0.197120904922	76
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.128302097321	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.1	search with cache (only 1: expAdd); (only 1: fsetdec).	0.233247041702	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.378158092499	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.300462007523	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd); (only 1: fsetdec).	0.239247083664	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	1.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep); (only 1: apply fold_rec); (only 1: auto); (only 1: auto).	0.128916025162	53
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	2.2.0.2.0.0	search with cache (only 1: intros); (only 1: apply fold_rec_bis); (only 1: fsetdec); (only 1: fsetdec); (only 1: intros); (only 1: fsetdec).	1.60435390472	243
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	7.5.14.6	search with cache (only 1: intros); (only 1: apply fold_1); (only 1: eauto with *); (only 1: eauto with *).	4.80282998085	4755
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	1.0.0.0.0.1.2	search with cache (only 1: intros); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: eauto with *).	0.490852117538	154
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	1.1.0.0.0.1.2	search with cache (only 1: symmetry); (only 1: apply fold_2 with (eqA := eqA)); (only 1: auto); (only 1: auto); (only 1: auto); (only 1: eauto with *); (only 1: eauto with *).	1.93023586273	337
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	7.11.0	search with cache (only 1: intros); (only 1: apply fold_equal); (only 1: auto with set).	13.1312339306	5575
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.3.0.1.0.0	search with cache (only 1: intros); (only 1: rewrite cardinal_spec in H); (only 1: generalize (elements_2 (s:=s))); (only 1: destruct (elements s)); (only 1: intuition); (only 1: exists e); (only 1: auto with relations).	0.427323102951	142
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1); (only 1: auto with set).	0.0166530609131	2
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	4.0.0	search with cache (only 1: intros); (only 1: rewrite <- union_inter_cardinal); (only 1: auto with arith).	0.0541379451752	20
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	1.0.0.0.0.1.0.0	search with cache (only 1: replace 0 with (cardinal empty)); (only 1: replace 0 with (cardinal empty)); (only 1: auto with set); (only 1: rewrite cardinal_fold); (only 1: apply fold_1); (only 1: auto with *); (only 1: auto with set); (only 1: auto with set).	0.399882793427	102
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.2.1.0	search with cache (only 1: intros); (only 1: apply cardinal_2 with x); (only 1: auto); (only 1: expAdd); (only 1: fsetdec).	0.15810418129	8
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.1.0.4.3	search with cache (only 1: intros); (only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x))); (only 1: auto with set relations); (only 1: rewrite remove_spec); (only 1: intuition); (only 1: expAdd); (only 1: fsetdec).	0.73860001564	249
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros); (only 1: auto with set relations).	0.0670440196991	23
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.0.10	search with cache (only 1: intros a b H); (only 1: unfold leb, gtb); (only 1: rewrite H); (only 1: auto).	0.93155002594	537
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros); (only 1: apply P.fold_equal); (only 1: auto with set).	0.0334579944611	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros); (only 1: apply P.fold_equal); (only 1: auto with set).	0.0321350097656	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0202050209045	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros); (only 1: push not in *); (only 1: tauto).	0.169471979141	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.0181331634521	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.0.8.7.97	search with cache (only 1: red); (only 1: intros); (only 1: rewrite <- mem_spec); (only 1: destruct (mem x s)); (only 1: auto); (only 1: auto).	19.6487631798	35817
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	5	search with cache (only 1: fsetdec).	0.264786958694	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0887939929962	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.21706199646	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0256199836731	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0605590343475	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.0660569667816	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0812408924103	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.134582996368	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.127038002014	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0807049274445	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.218842029572	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.256422996521	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	5	search with cache (only 1: fsetdec).	0.141675949097	38
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0838270187378	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0555839538574	1
Coq.MSets.MSetFacts.WFactsOn.In_1	40	9.43.0	search with cache (only 1: intro); (only 1: rewrite H); (only 1: auto).	3.87552714348	14061
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros); (only 1: apply <- add_spec); (only 1: auto with relations).	0.0193858146667	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros); (only 1: rewrite remove_spec); (only 1: intuition).	0.0274319648743	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	1.2	search with cache (only 1: rewrite remove_spec); (only 1: intuition).	0.0359590053558	14
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	6.0	search with cache (only 1: rewrite singleton_spec); (only 1: auto with relations).	0.0283999443054	13
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.0	search with cache (only 1: rewrite union_spec); (only 1: auto).	0.0232579708099	2
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec); (only 1: auto).	0.0225429534912	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec); (only 1: intuition).	0.0225441455841	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec); (only 1: intuition).	0.0274128913879	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec); (only 1: intuition).	0.0236158370972	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec); (only 1: intuition).	0.0293200016022	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	2.0.1.0	search with cache (only 1: intros P); (only 1: rewrite filter_spec); (only 1: intuition); (only 1: intuition).	0.0371429920197	7
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	2.0.1.0	search with cache (only 1: intros P); (only 1: rewrite filter_spec); (only 1: intuition); (only 1: intuition).	0.0924220085144	7
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	4.0.1	search with cache (only 1: intros E); (only 1: rewrite E); (only 1: auto with relations).	0.0247440338135	8
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	6	search with cache (only 1: intuition).	0.0359470844269	7
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	5.40	search with cache (only 1: Ndec.eqb2eq); (only 1: intuition).	3.89508700371	2548
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	8	search with cache (only 1: intuition).	0.0534820556641	13
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	9	search with cache (only 1: intuition).	0.0511710643768	13
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	8	search with cache (only 1: intuition).	0.0459461212158	12
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec); (only 1: intuition).	0.0233500003815	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec); (only 1: intuition).	0.0359411239624	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	6.5.1.0	search with cache (only 1: rewrite add_spec); (only 1: intuition); (only 1: elim H); (only 1: auto with relations).	1.99316000938	690
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	1.4	search with cache (only 1: rewrite remove_spec); (only 1: intuition).	0.0779359340668	13
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec); (only 1: intuition).	0.0332119464874	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	8.0	search with cache (only 1: intros); (only 1: intuition).	0.0523858070374	10
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	9	search with cache (only 1: intuition).	0.0796799659729	21
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	9	search with cache (only 1: intuition).	0.0268230438232	10
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	54	search with cache (only 1: firstorder).	2.91047501564	4980
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	0.7.6.0	search with cache (only 1: intros x x' Hx s s' Hs a); (only 1: rewrite union_spec); (only 1: rewrite Hs, Hx  at 1); (only 1: intuition).	5.78344416618	1087
Coq.MSets.MSetFacts.WFactsOn.inter_m	40	0.4.7.6.0	search with cache (only 1: intros x x' Hx s s' Hs a); (only 1: rewrite inter_spec); (only 1: rewrite inter_spec); (only 1: rewrite Hs, Hx  at 1); (only 1: intuition).	12.4821119308	4108
Coq.MSets.MSetFacts.WFactsOn.diff_m	40	0.10.5.7.0	search with cache (only 1: intros x x' Hx s s' Hs a); (only 1: rewrite diff_spec); (only 1: rewrite diff_spec); (only 1: rewrite Hs, Hx  at 1); (only 1: intuition).	20.6753470898	7195
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	9	search with cache (only 1: firstorder).	0.147363901138	70
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	24.4	search with cache (only 1: unfold Equal, Subset); (only 1: firstorder).	0.305387973785	710
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	0.0.1.0.1	search with cache (only 1: repeat red); (only 1: unfold Empty); (only 1: intros s s' E); (only 1: setoid_rewrite E); (only 1: auto).	0.145243883133	16
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a); (only 1: rewrite !add_iff, Hx, Hs); (only 1: intuition).	0.284991979599	26
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a); (only 1: rewrite !remove_iff, Hx, Hs); (only 1: intuition).	0.0597188472748	3
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a); (only 1: rewrite !union_spec, Hs1, Hs2); (only 1: intuition).	0.0731809139252	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a); (only 1: rewrite !inter_spec, Hs1, Hs2); (only 1: intuition).	0.0528900623322	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a); (only 1: rewrite !diff_spec, Hs1, Hs2); (only 1: intuition).	0.109513998032	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a); (only 1: rewrite !filter_spec, Hs by auto); (only 1: intuition).	0.0554599761963	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton); (only 1: intuition_in).	0.0203881263733	2
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	3.3.3.0.9	search with cache (only 1: constructor); (only 1: ok); (only 1: intuition eauto); (only 1: intuition eauto); (only 1: intuition eauto).	11.4905679226	1034
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	8.0.1	search with cache (only 1: destruct (@split_ok s x)); (only 1: auto); (only 1: auto).	0.168480873108	123
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	3.0.0.1	search with cache (only 1: destruct (@inter_spec_ok s1 s2)); (only 1: auto); (only 1: auto); (only 1: auto).	0.873770952225	160
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	3.0.0.1	search with cache (only 1: destruct (@diff_spec_ok s1 s2)); (only 1: auto); (only 1: auto); (only 1: auto with *).	0.976029872894	171
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.2.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: rewrite <- Hl, <- Hr); (only 1: now destruct (partition f l), (partition f r), (f x)).	0.0540359020233	8
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2	search with cache (only 1: tauto).	0.0189518928528	12
Coq.MSets.MSetList.MakeRaw.mem_spec	40
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	1	search with cache (only 1: auto).	0.0157940387726	2
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	1.1.0.15.1	search with cache (only 1: intros); (only 1: unfold singleton); (only 1: intuition); (only 1: inv); (only 1: auto).	1.24105596542	864
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	3.0.0	search with cache (only 1: repeat rewrite <- isok_iff); (only 1: revert s s'); (only 1: induction2).	0.133774995804	6
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	4	search with cache (only 1: auto).	0.0148959159851	5
Coq.MSets.MSetList.MakeRaw.empty_spec	40	1.0.55	search with cache (only 1: compute); (only 1: intros); (only 1: inv).	1.47133302689	2627
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	5	search with cache (only 1: intuition).	0.0443940162659	19
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	2.8.0	search with cache (only 1: intuition); (only 1: inv); (only 1: auto).	0.110157012939	103
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s); (only 1: repeat rewrite <- isok_iff); (only 1: auto).	0.0258359909058	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	3.0.0.0	search with cache (only 1: destruct s); (only 1: inversion 1); (only 1: inversion 1); (only 1: inversion 1).	0.0442659854889	15
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	2.3.0.8.0.1	search with cache (only 1: induction s as [| x s IH]); (only 1: inversion 1); (only 1: destruct s); (only 1: inversion 1); (only 1: auto); (only 1: auto).	5.64071679115	3287
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: intuition).	0.00871706008911	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0.0	search with cache (only 1: induction 1); (only 1: auto).	0.0109620094299	2
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'); (only 1: now rewrite Hxx', Hyy').	0.0255930423737	6
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy); (only 1: rewrite Hx, Hy); (only 1: intuition).	0.0744049549103	4
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0	search with cache (only 1: intuition).	0.0154988765717	1
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	1	search with cache (only 1: intuition).	0.0133240222931	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	2.1	search with cache (only 1: intros a b); (only 1: intuition).	0.0153501033783	5
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	5.0.1.16	search with cache (only 1: intros a b); (only 1: unfold In); (only 1: simpl); (only 1: intuition discriminate).	1.29533696175	1174
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.1.1.1.0	search with cache (only 1: intros [| ] [| ]); (only 1: intuition discriminate); (only 1: intuition discriminate); (only 1: intuition discriminate); (only 1: intuition discriminate).	0.0351178646088	8
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.017019033432	6
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	23.1.1.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	1.49420714378	3622
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	1.1.1.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0197200775146	7
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0191280841827	6
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	1.1.0.0	search with cache (only 1: destruct x); (only 1: constructor); (only 1: constructor); (only 1: constructor).	0.0188961029053	6
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	12.3.0.14	search with cache (only 1: induction s as [| l IHl o r IHr]); (only 1: unfold compare, equal); (only 1: reflexivity); (only 1: reflexivity).	11.2334649563	15857
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	2.10	search with cache (only 1: unfold lt); (only 1: solve_proper).	3.2996339798	403
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros); (only 1: rewrite partition_filter); (only 1: reflexivity).	0.0187339782715	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton); (only 1: intuition_in).	0.0191140174866	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	8.6.1.1	search with cache (only 1: destruct s); (only 1: intuition_in); (only 1: simpl); (only 1: intuition_in).	4.45765995979	2046
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	9.6.0.0.0	search with cache (only 1: destruct s); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: intuition_in).	4.23051691055	1369
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.3.1.1.0.1.1.0.0.0.0.0.3.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]); (only 1: simpl); (only 1: now constructor); (only 1: simpl); (only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: simpl); (only 1: now constructor).	3.58757185936	4034
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.0142829418182	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0154469013214	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add); (only 1: now autorew).	0.0402941703796	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	6.1	search with cache (only 1: unfold add); (only 1: intuition).	1.20266795158	68
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	13	search with cache (only 1: exact (rmatch _ _ _)).	0.775535106659	390
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0161769390106	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	2.0	search with cache (only 1: unfold remove); (only 1: auto_tc).	0.0823230743408	18
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	5.1.0.0.0	search with cache (only 1: unfold remove_min); (only 1: destruct s as [| c l y r]); (only 1: easy); (only 1: destruct delmin as (x0, s0)); (only 1: inversion_clear 1).	0.518202066422	184
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	0.7.26	search with cache (only 1: intros s Hs); (only 1: simpl); (only 1: auto).	0.349224090576	695
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	1.0.6.0.3.33	search with cache (only 1: intros s Hs); (only 1: induction s); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: auto).	1.19583201408	2441
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	0.2.0	search with cache (only 1: intros Hf); (only 1: unfold partition, filter); (only 1: now rewrite partition_aux_spec).	0.0284910202026	5
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0170249938965	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec); (only 1: now apply filter_ok).	0.0217139720917	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	10.6	search with cache (only 1: inversion_clear 1); (only 1: now inA).	0.321810007095	248
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	7.4.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right); (only 1: unfold elt in *); (only 1: induction (rev (elements s1))); (only 1: simpl); (only 1: auto); (only 1: unfold flip); (only 1: simpl); (only 1: auto_tc).	27.6499519348	13031
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	1.0.10.0.0	search with cache (only 1: destruct 1); (only 1: auto); (only 1: revert H); (only 1: destruct 1 as [l x r Hl Hr]); (only 1: invrb).	0.36315703392	436
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.2.1.0.0.0.0.1	search with cache (only 1: intros H); (only 1: apply Nat.log2_lt_pow2); (only 1: destruct s); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: intuition); (only 1: apply maxdepth_cardinal).	0.708368062973	242
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	14.0.141	search with cache (only 1: red); (only 1: unfold singleton); (only 1: ok).	10.0026640892	40648
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.11.2.2	search with cache (only 1: destruct t); (only 1: invrb); (only 1: invrb); (only 1: now subst).	1.88475799561	1867
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40	2.0.2.2.0.0.0.2.2.0.0.11	search with cache (only 1: case rbal_match); (only 1: intros); (only 1: desarb); (only 1: invrb); (only 1: invrb); (only 1: auto); (only 1: intros); (only 1: desarb); (only 1: invrb); (only 1: invrb); (only 1: auto); (only 1: auto).	31.4189860821	6770
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	3.3.2.2.3.0	search with cache (only 1: destruct s); (only 1: now constructor); (only 1: simpl); (only 1: descolor); (only 1: intuition); (only 1: intuition).	2.06113314629	1703
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	9	search with cache (only 1: auto).	0.0306429862976	24
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0	search with cache (only 1: intro); (only 1: simpl); (only 1: auto).	0.0241270065308	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.1.0.1	search with cache (only 1: intros [| x acc]); (only 1: simpl); (only 1: inversion 1); (only 1: simpl); (only 1: auto).	0.0881328582764	30
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	19.1	search with cache (only 1: unfold filter); (only 1: now auto_tc).	3.15287280083	2915
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.10.1.0	search with cache (only 1: rewrite partition_spec); (only 1: unfold partition, filter); (only 1: simpl); (only 1: auto_tc).	0.726403951645	427
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	1.0.0.2	search with cache (only 1: unfold partition); (only 1: destruct partition_aux); (only 1: simpl); (only 1: auto_tc).	0.0625131130219	30
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	3.4.2.0.0.0	search with cache (only 1: unfold inter); (only 1: destruct compare_height); (only 1: unfold linear_inter); (only 1: auto_tc); (only 1: auto_tc); (only 1: auto_tc).	2.28950190544	1460
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	8.5.1.1.0.0	search with cache (only 1: unfold diff); (only 1: destruct compare_height); (only 1: unfold linear_diff); (only 1: auto_tc); (only 1: auto_tc); (only 1: auto_tc).	19.199146986	12190
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	1	search with cache (only 1: intuition_in).	0.0846698284149	2
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0273191928864	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.1	search with cache (only 1: unfold lt_tree); (only 1: intuition_in).	0.0200529098511	3
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.1	search with cache (only 1: unfold gt_tree); (only 1: inversion 1).	0.0185151100159	3
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.6.0	search with cache (only 1: intuition_in); (only 1: unfold lt_tree); (only 1: intuition_in); (only 1: order).	0.0946547985077	19
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.6.0	search with cache (only 1: intuition_in); (only 1: unfold gt_tree); (only 1: intuition_in); (only 1: order).	0.0984308719635	26
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.0	search with cache (only 1: intuition_in); (only 1: order).	0.0542631149292	3
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	6.0.0	search with cache (only 1: unfold lt_tree); (only 1: intuition_in); (only 1: eauto).	0.0341548919678	9
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros); (only 1: intro); (only 1: order).	0.0211679935455	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	6.0.0	search with cache (only 1: unfold gt_tree); (only 1: intuition_in); (only 1: eauto).	0.030855178833	9
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.0.0.4.0.0	search with cache (only 1: apply proper_sym_impl_iff_2); (only 1: auto with *); (only 1: auto); (only 1: repeat red); (only 1: intros); (only 1: subst); (only 1: order).	0.437807798386	169
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.1.0.5.0.0	search with cache (only 1: apply proper_sym_impl_iff_2); (only 1: auto); (only 1: auto); (only 1: repeat red); (only 1: intros); (only 1: subst); (only 1: order).	1.32375502586	610
Coq.MSets.MSetGenTree.Props.empty_spec	40	0.58	search with cache (only 1: compute); (only 1: intuition_in).	0.456560134888	1785
Coq.MSets.MSetGenTree.Props.empty_ok	40	0.4	search with cache (only 1: apply <- isok_iff); (only 1: auto).	0.071366071701	6
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.1.0.0.0.0.1	search with cache (only 1: functional induction max_elt s); (only 1: red); (only 1: red); (only 1: inversion 2); (only 1: inversion 1); (only 1: intro H0); (only 1: destruct (IHo H0 _x3)); (only 1: auto).	0.565217018127	144
Coq.MSets.MSetGenTree.Props.choose_spec1	40	2.0.0.0.2.0.1.52	search with cache (only 1: intro); (only 1: functional induction min_elt s); (only 1: discriminate); (only 1: inversion 1); (only 1: auto); (only 1: rename _x0 into r); (only 1: rename _x2 into l1,_x3 into x1,_x4 into r1); (only 1: auto).	21.7222721577	34579
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	26.2.0.37	search with cache (only 1: constructor); (only 1: firstorder); (only 1: firstorder); (only 1: firstorder).	10.7276449203	17595
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.8.28	search with cache (only 1: intros); (only 1: rewrite elements_node); (only 1: now rewrite !app_assoc_reverse).	10.0998280048	9290
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.0.2.0	search with cache (only 1: intros x x' Hxx' l l' Hll'); (only 1: subst); (only 1: rewrite 2!InA_alt); (only 1: firstorder).	1.38409495354	23
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	1.1.1.1.1.0.1.0.0.0.0.15	search with cache (only 1: induction l); (only 1: intuition); (only 1: simpl); (only 1: rewrite andb_true_iff); (only 1: rewrite negb_true_iff); (only 1: intros H); (only 1: destruct H); (only 1: constructors); (only 1: rewrite <- mem_spec); (only 1: congruence); (only 1: auto); (only 1: auto).	9.26460599899	5080
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0.0.4.8	search with cache (only 1: right); (only 1: intuition); (only 1: inv); (only 1: auto).	0.213957071304	148
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	2	search with cache (only 1: left).	0.0162348747253	3
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.4.0	search with cache (only 1: unfold empty); (only 1: intro); (only 1: intuition); (only 1: inv).	0.047266960144	9
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	0.0.5.3.1.0.1	search with cache (only 1: induction s); (only 1: intros); (only 1: intuition); (only 1: intros); (only 1: split); (only 1: auto); (only 1: auto).	4.34344601631	1950
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.0.0.0	search with cache (only 1: unfold elements); (only 1: induction s); (only 1: auto); (only 1: auto).	0.0339388847351	4
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	0.0.0.0.0	search with cache (only 1: unfold elements); (only 1: induction s); (only 1: intros); (only 1: auto); (only 1: auto).	0.0445470809937	5
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	1.0.5.4.5.0.0.0	search with cache (only 1: destruct s); (only 1: simpl); (only 1: intros); (only 1: intro); (only 1: intro); (only 1: inv); (only 1: intros); (only 1: inversion H).	25.6071648598	10969
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1.0	search with cache (only 1: unfold elements); (only 1: auto).	0.0914480686188	3
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	44.53	search with cache (only 1: compute); (only 1: firstorder).	1.07736802101	5895
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	52.50	search with cache (only 1: compute); (only 1: firstorder).	31.2844688892	62499
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	53	search with cache (only 1: firstorder).	5.50135207176	7174
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.NArith.NArith.test	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0252718925476	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0259521007538	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0226590633392	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	8.0	search with cache (only 1: eqb2eq); (only 1: now intros <-).	0.0714800357819	24
Coq.NArith.Ndec.Ndiv2_neq	40	0.2.0.1	search with cache (only 1: intros); (only 1: eqb2eq); (only 1: contradict H); (only 1: now subst).	0.0992949008942	17
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.2.1.0	search with cache (only 1: eqb2eq); (only 1: intros H H'); (only 1: contradict H); (only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.167325019836	7
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.105999946594	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	1.2.0.2.1.0	search with cache (only 1: unfold Nleb); (only 1: rewrite !N2Nat.inj_succ_double); (only 1: intro); (only 1: apply leb_correct); (only 1: apply (mult_S_le_reg_l 1)); (only 1: now apply leb_complete).	0.439741849899	226
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0278451442719	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle); (only 1: rewrite N.min_le_iff); (only 1: auto).	0.0487289428711	4
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.27.0.0	search with cache (only 1: destruct a); (only 1: trivial); (only 1: simpl); (only 1: intros); (only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	3.77658390999	7076
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2	search with cache (only 1: now subst).	0.0122931003571	3
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0116829872131	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	8	search with cache (only 1: auto).	0.029510974884	28
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0152480602264	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.6.0.3.8	search with cache (only 1: induction n); (only 1: reflexivity); (only 1: rewrite Nshiftl_nat_S); (only 1: rewrite <- IHn); (only 1: reflexivity).	1.0928580761	1348
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.6.2.0.11.2.10.0.5	search with cache (only 1: induction n); (only 1: trivial); (only 1: simpl); (only 1: rewrite <- !Ptestbit_Pbit); (only 1: induction p as [p IH| p IH| ]); (only 1: simpl); (only 1: trivial); (only 1: trivial); (only 1: simpl); (only 1: constructor).	6.9962348938	15046
Coq.NArith.Ndigits.Ndouble_bit0	40	1.2.0.0.0.0	search with cache (only 1: destruct n); (only 1: trivial); (only 1: destruct p); (only 1: trivial); (only 1: trivial); (only 1: trivial).	0.0612189769745	18
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	1.1.0.0.0.0	search with cache (only 1: destruct n); (only 1: trivial); (only 1: destruct p); (only 1: trivial); (only 1: trivial); (only 1: trivial).	0.113353967667	33
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	3.4.0.3.0.0.1.1.0	search with cache (only 1: destruct n); (only 1: simpl); (only 1: intro H); (only 1: discriminate H); (only 1: destruct p); (only 1: reflexivity); (only 1: intros); (only 1: discriminate H); (only 1: reflexivity).	4.26079797745	3545
Coq.NArith.Ndigits.Ndiv2_correct	40	4.1.0.4.3.15	search with cache (only 1: destruct a); (only 1: trivial); (only 1: destruct p); (only 1: trivial); (only 1: reflexivity); (only 1: reflexivity).	1.89128804207	2070
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros); (only 1: apply Nneg_bit0); (only 1: rewrite H); (only 1: reflexivity).	0.0282289981842	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.2.0.0.0.0.0.1.0.0.0.0.0.0.4.0	search with cache (only 1: intros); (only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]); (only 1: unfold Nless); (only 1: rewrite H2); (only 1: destruct p); (only 1: simpl); (only 1: rewrite H, H0); (only 1: reflexivity); (only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity)); (only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1); (only 1: discriminate H1); (only 1: simpl); (only 1: rewrite H, H0); (only 1: reflexivity); (only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity)); (only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2); (only 1: discriminate H2).	6.08246302605	4099
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.3.1.1.0.3	search with cache (only 1: destruct a); (only 1: destruct a'); (only 1: reflexivity); (only 1: trivial); (only 1: destruct a'); (only 1: trivial); (only 1: unfold Nless); (only 1: simpl); (only 1: destruct (Pos.lxor p p0)); (only 1: reflexivity); (only 1: trivial).	13.2343270779	7997
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.1.2.1.1.0.1	search with cache (only 1: destruct a); (only 1: destruct a'); (only 1: reflexivity); (only 1: trivial); (only 1: destruct a'); (only 1: trivial); (only 1: unfold Nless); (only 1: simpl); (only 1: destruct (Pos.lxor p p0)); (only 1: reflexivity); (only 1: trivial).	7.71924901009	4180
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.1.4.1.3.2.3	search with cache (only 1: destruct a); (only 1: destruct a'); (only 1: reflexivity); (only 1: trivial); (only 1: destruct a'); (only 1: trivial); (only 1: unfold Nless); (only 1: simpl); (only 1: destruct (Pos.lxor p p0)); (only 1: reflexivity); (only 1: trivial).	19.4123978615	16220
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	3.1.0.1.1.0.1.0.0.1.7	search with cache (only 1: destruct a); (only 1: intuition); (only 1: induction p); (only 1: simpl in *); (only 1: rewrite IHp); (only 1: auto); (only 1: simpl in *); (only 1: rewrite IHp); (only 1: auto); (only 1: simpl in *); (only 1: auto).	12.9081790447	5433
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	1.1.0.1.0.0.0.1.0.0.0.5.0.0.0	search with cache (only 1: apply Vector.rectS); (only 1: intros); (only 1: simpl); (only 1: destruct a); (only 1: reflexivity); (only 1: trivial); (only 1: intros); (only 1: simpl); (only 1: destruct a, (Bv2N v)); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: reflexivity); (only 1: intuition); (only 1: intuition).	4.6168179512	3951
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	0.1.0.0.3.1.0.0.3.0.2.0.0.9	search with cache (only 1: induction n); (only 1: simpl); (only 1: auto); (only 1: induction p); (only 1: simpl in *); (only 1: unfold Bcons); (only 1: f_equal); (only 1: auto); (only 1: simpl); (only 1: unfold Bcons); (only 1: f_equal); (only 1: auto); (only 1: simpl); (only 1: auto).	21.0738580227	15911
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.1.1.0.4.1.0.4.6.0.0.0	search with cache (only 1: destruct a); (only 1: simpl); (only 1: f_equal); (only 1: induction p); (only 1: simpl); (only 1: f_equal); (only 1: auto); (only 1: simpl); (only 1: f_equal); (only 1: auto); (only 1: simpl); (only 1: f_equal).	16.7126908302	15041
Coq.NArith.Ndist.Nplength_infty	40	0.1.3.3.6	search with cache (only 1: induction a as [| p]); (only 1: auto); (only 1: intros); (only 1: exfalso); (only 1: discriminate || simpl).	1.31118893623	1018
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.12	search with cache (only 1: simple induction d); (only 1: trivial); (only 1: trivial).	0.270178079605	259
Coq.NArith.Ndist.ni_min_O_r	40	1.0.2.3.0.0	search with cache (only 1: simple induction d); (only 1: trivial); (only 1: unfold ni_min); (only 1: simple induction n); (only 1: trivial); (only 1: trivial).	0.253384828568	126
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.0131578445435	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d); (only 1: trivial); (only 1: trivial).	0.0194611549377	5
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.1.0.0.0.1.0.0.0.87	search with cache (only 1: red); (only 1: simple induction d); (only 1: trivial); (only 1: unfold ni_min); (only 1: simple induction n); (only 1: trivial); (only 1: intros); (only 1: simpl); (only 1: inversion H); (only 1: rewrite H1); (only 1: rewrite H1); (only 1: reflexivity).	37.5162470341	47031
Coq.NArith.Ndist.ni_le_antisym	40	22.2.1.5.11	search with cache (only 1: intros); (only 1: inversion H0); (only 1: rewrite ni_min_comm); (only 1: unfold ni_min); (only 1: auto).	27.4357688427	37787
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.0.0	search with cache (only 1: unfold ni_le); (only 1: intros); (only 1: rewrite ni_min_assoc); (only 1: rewrite ni_min_idemp); (only 1: reflexivity).	0.270915985107	145
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.BinNat.N.eq_dec	40
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	1	search with cache (only 1: auto).	0.0132138729095	2
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.011029958725	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.4.0.1.1	search with cache (only 1: destruct n); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: now rewrite Pos.peano_rect_succ).	0.0870959758759	48
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0123219490051	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0120642185211	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0114321708679	1
Coq.NArith.BinNat.N.pred_0	40	1	search with cache (only 1: auto).	0.0118651390076	2
Coq.NArith.BinNat.N.pos_pred_spec	40	0	search with cache (only 1: reflexivity).	0.0117650032043	1
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n as [| p]); (only 1: reflexivity); (only 1: reflexivity).	0.019721031189	4
Coq.NArith.BinNat.N.pos_pred_succ	40
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	6.0.8	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: apply Pos.pred_N_succ).	1.15360498428	661
Coq.NArith.BinNat.N.pred_sub	40	0.0.3	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: now destruct p).	0.0204927921295	6
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0268239974976	1
Coq.NArith.BinNat.N.add_0_l	40	1.1.0	search with cache (only 1: destruct n as [| p]); (only 1: auto); (only 1: auto).	0.0194020271301	5
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0129678249359	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0126910209656	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	1.1.0.0.2	search with cache (only 1: unfold ltb, lt); (only 1: destruct compare); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.854240894318	264
Coq.NArith.BinNat.N.compare_le_iff	40	1	search with cache (only 1: reflexivity).	0.550146102905	95
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.0.0.0	search with cache (only 1: unfold max, le); (only 1: rewrite compare_antisym); (only 1: case compare_spec); (only 1: auto); (only 1: now destruct 2); (only 1: auto).	0.0348801612854	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	10	search with cache (only 1: split).	0.0163011550903	21
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.016037940979	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.016270160675	2
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	2.2.2	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: reflexivity).	0.0243990421295	15
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0132701396942	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: unfold lt in *); (only 1: easy).	0.0317840576172	13
Coq.NArith.BinNat.N.double_le_mono	40	1	search with cache (only 1: now destruct n, m).	0.0184760093689	2
Coq.NArith.BinNat.N.succ_double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: unfold lt in *); (only 1: simpl in *); (only 1: easy).	0.0358529090881	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: easy).	0.0242478847504	5
Coq.NArith.BinNat.N.compare_0_r	40	17.5.20	search with cache (only 1: intro H1); (only 1: eapply Private_Tac.lt_irrefl); (only 1: now apply lt_lt_0 with n).	2.40213799477	5483
Coq.NArith.BinNat.N.pow_0_r	40	13	search with cache (only 1: split).	0.0319669246674	60
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	1.5.0.6.1	search with cache (only 1: destruct n, p); (only 1: order); (only 1: reflexivity); (only 1: easy); (only 1: easy).	1.10243201256	1357
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	3.0.4.5.1.0.0	search with cache (only 1: destruct n as [| [n| n| ]]); (only 1: discriminate || intros _); (only 1: trivial); (only 1: easy); (only 1: easy); (only 1: simpl); (only 1: order').	3.47556304932	4074
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b)); (only 1: unfold div, modulo); (only 1: now destruct div_eucl).	0.0219731330872	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0.0.0.0	search with cache (only 1: destruct n as [| p]); (only 1: reflexivity); (only 1: unfold sqrtrem, sqrt, Pos.sqrt); (only 1: destruct (Pos.sqrtrem p) as (s, r)); (only 1: now destruct r).	0.0405561923981	5
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	6.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd); (only 1: destruct ggcd as (g, (aa, bb))); (only 1: simpl); (only 1: apply le_0_l).	0.0338370800018	17
Coq.NArith.BinNat.N.testbit_even_0	40	1.1.0.38.8	search with cache (only 1: simpl); (only 1: destruct a as [| a]); (only 1: easy); (only 1: change (pos a~0) with (double (pos a))); (only 1: easy).	1.32401680946	4212
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.0130069255829	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H); (only 1: rewrite testbit_succ_r_div2 by trivial); (only 1: f_equal); (only 1: now destruct a).	0.026603937149	5
Coq.NArith.BinNat.N.testbit_neg_r	40	15	search with cache (only 1: now destruct n).	1.38040590286	705
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.1	search with cache (only 1: simpl); (only 1: trivial).	0.0155279636383	3
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0191080570221	2
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0105528831482	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	0.0	search with cache (only 1: unfold le, ge); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0215468406677	2
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0105538368225	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	0.2.11.6.0.1	search with cache (only 1: destruct n); (only 1: simpl); (only 1: solve_proper); (only 1: symmetry); (only 1: simpl); (only 1: now apply Pos.iter_swap_gen).	3.13831710815	4481
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	1.2.0.1.0.0.0.0.0	search with cache (only 1: intro n); (only 1: destruct n); (only 1: intros); (only 1: simpl); (only 1: trivial); (only 1: intros); (only 1: simpl); (only 1: rewrite Pos.iter_succ); (only 1: now apply Pos.iter_swap_gen).	1.49121403694	1044
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	3.1.0.6.0	search with cache (only 1: intros); (only 1: induction n using peano_ind); (only 1: trivial); (only 1: rewrite iter_succ); (only 1: auto).	1.95362710953	1716
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.2.0.0.0.1.4	search with cache (only 1: split); (only 1: intro H); (only 1: rewrite <- (id a), <- (id a')); (only 1: now f_equal); (only 1: rewrite <- (id a), <- (id a')); (only 1: intro H); (only 1: now f_equal).	2.93426179886	696
Coq.NArith.Nnat.N2Nat.inj_double	40	0.1.1.6.30.4.0.17.3	search with cache (only 1: simpl); (only 1: destruct a as [| p]); (only 1: now rewrite Nat.add_0_r); (only 1: simpl); (only 1: unfold Pos.to_nat); (only 1: simpl); (only 1: rewrite Pmult_nat_mult, Nat.mul_comm); (only 1: simpl); (only 1: f_equal).	10.8826930523	19558
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	0.4.0.3.3.0.1.0.0	search with cache (only 1: destruct a); (only 1: simpl N.to_nat); (only 1: trivial); (only 1: simpl N.to_nat); (only 1: simpl); (only 1: unfold Pos.to_nat); (only 1: simpl); (only 1: rewrite Pmult_nat_mult, Nat.mul_comm); (only 1: f_equal).	2.05473613739	1729
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.2.0.0.0	search with cache (only 1: destruct a); (only 1: simpl N.to_nat); (only 1: reflexivity); (only 1: simpl); (only 1: unfold Pos.to_nat); (only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.031457901001	10
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.8.2.3.3	search with cache (only 1: unfold N.div2, N.to_nat); (only 1: destruct n); (only 1: simpl); (only 1: now subst); (only 1: simpl); (only 1: apply SuccNat2Pos.id_succ).	0.405627012253	535
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.7	search with cache (only 1: split); (only 1: intros H); (only 1: rewrite <- (id n), <- (id n')); (only 1: now f_equal); (only 1: intros H); (only 1: now f_equal).	2.07988715172	749
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0325469970703	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.028235912323	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	4	search with cache (only 1: nat2N).	0.0305049419403	5
Coq.NArith.Nnat.Nat2N.inj_add	40	7	search with cache (only 1: nat2N).	0.0922429561615	12
Coq.NArith.Nnat.Nat2N.inj_sub	40	4	search with cache (only 1: nat2N).	0.0339751243591	5
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0314781665802	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	4	search with cache (only 1: nat2N).	0.029639005661	5
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	4	search with cache (only 1: nat2N).	0.0344278812408	5
Coq.NArith.Nnat.Nat2N.inj_max	40	4	search with cache (only 1: nat2N).	0.0332610607147	5
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40
Coq.Numbers.DecimalR.to_decimal_surj	40
Coq.Numbers.DecimalR.of_decimal_dnorm	40
Coq.Numbers.DecimalR.of_inj	40
Coq.Numbers.DecimalR.of_iff	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40
Coq.Numbers.HexadecimalR.of_iff	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40	7.7.11.4.19	search with cache (only 1: destruct z); (only 1: intros [=]); (only 1: now intros [=<-]); (only 1: now intros [=<-]); (only 1: now intros [=<-]).	3.67988085747	8107
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40	0.1.0.1.0.5.3.0.0.0.0.2	search with cache (only 1: destruct d as [i f| i f e]); (only 1: now simpl); (only 1: simpl); (only 1: set (m := match norm e with | Pos Nil | _ => _ end)); (only 1: unfold m); (only 1: set (i' := match i with | Pos _ | _ => _ end)); (only 1: case (norm e)); (only 1: clear m e); (only 1: intro e); (only 1: now case e; clear e; [ idtac | intro e; case e | .. ]); (only 1: clear m e); (only 1: now simpl).	19.4120459557	4590
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40	6.6.5.7	search with cache (only 1: case z); (only 1: now simpl); (only 1: now simpl); (only 1: now simpl).	5.76476788521	4686
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40	5.5.7.3.1	search with cache (only 1: destruct z); (only 1: intros [=]); (only 1: now intros [=<-]); (only 1: now intros [=<-]); (only 1: now intros [=<-]).	1.13363599777	1665
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	6.6.4.7	search with cache (only 1: case z); (only 1: now simpl); (only 1: now simpl); (only 1: now simpl).	2.71171879768	2853
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.0.2.0	search with cache (only 1: intro E); (only 1: assert (E' : Some n = Some n')); (only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E); (only 1: now injection E').	0.0265328884125	6
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40	0.0.2.0	search with cache (only 1: intro E); (only 1: assert (E' : Some n = Some n')); (only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E); (only 1: now injection E').	0.0276589393616	6
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	31.26.5.7	search with cache (only 1: destruct n); (only 1: auto); (only 1: simpl); (only 1: now rewrite Unsigned.of_to).	24.4069361687	49084
Coq.Numbers.DecimalN.Unsigned.to_of	40	2.33	search with cache (only 1: rewrite <- Unsigned.to_of); (only 1: now f_equal).	7.906208992	7546
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	10	search with cache (only 1: now induction d).	0.0281119346619	28
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1	search with cache (only 1: apply Unsigned.of_inj).	0.0205240249634	2
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	5.0.4.0.3	search with cache (only 1: unfold N.to_int); (only 1: simpl); (only 1: exists (N.of_uint d)); (only 1: rewrite <- DecimalPos.Unsigned.to_of); (only 1: now f_equal).	3.85678005219	2307
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40	31.24.2.8	search with cache (only 1: destruct n); (only 1: now f_equal); (only 1: simpl); (only 1: now rewrite Unsigned.of_to).	21.4122700691	45264
Coq.Numbers.HexadecimalN.Unsigned.to_of	40	2.36	search with cache (only 1: rewrite <- Unsigned.to_of); (only 1: now f_equal).	8.98309898376	7140
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	8	search with cache (only 1: now induction d).	0.0219039916992	9
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	8	search with cache (only 1: apply Unsigned.of_inj).	0.0634980201721	21
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	5.1.4.0.3	search with cache (only 1: unfold N.to_hex_int); (only 1: simpl); (only 1: exists (N.of_hex_uint d)); (only 1: rewrite <- HexadecimalPos.Unsigned.to_of); (only 1: now f_equal).	5.20665597916	3311
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	3	search with cache (only 1: reflexivity).	0.0129249095917	4
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	6.5.1.1.6	search with cache (only 1: apply to_list_inj); (only 1: revert d); (only 1: induction n as [| n IHn]); (only 1: now simpl); (only 1: now simpl).	2.67876815796	1607
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.0.3.2	search with cache (only 1: simpl); (only 1: unfold Nat.to_int); (only 1: exists (Nat.of_uint d)); (only 1: rewrite Unsigned.to_of); (only 1: f_equal).	0.0392119884491	10
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	4	search with cache (only 1: apply of_lu_double_gen).	0.0409009456635	22
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	search with cache (only 1: trivial).	0.0168349742889	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0153958797455	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E); (only 1: generalize (of_to p)); (only 1: now rewrite E).	0.0283551216125	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	0.0.0.2.2.4.0	search with cache (only 1: simpl norm); (only 1: destruct (Pos.of_uint d) eqn:E); (only 1: rewrite <- Unsigned.to_of); (only 1: now rewrite E); (only 1: exists p); (only 1: rewrite <- Unsigned.to_of); (only 1: now rewrite E).	2.6262319088	1652
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	3	search with cache (only 1: reflexivity).	0.014858007431	4
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40	5.4.1.1.2	search with cache (only 1: apply to_list_inj); (only 1: revert d); (only 1: induction n as [| n IHn]); (only 1: now simpl); (only 1: now simpl).	1.92153692245	720
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40	0.0.0.3.2	search with cache (only 1: simpl); (only 1: unfold Nat.to_hex_int); (only 1: exists (Nat.of_hex_uint d)); (only 1: rewrite Unsigned.to_of); (only 1: f_equal).	0.0333731174469	10
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	5	search with cache (only 1: apply of_lu_double_gen).	0.0612440109253	29
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	2	search with cache (only 1: trivial).	0.0164539813995	3
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0135991573334	1
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E); (only 1: generalize (of_to p)); (only 1: now rewrite E).	0.021665096283	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40	0.1.4.3.1.14	search with cache (only 1: generalize (to_of d)); (only 1: rewrite of_uint_alt); (only 1: unfold double); (only 1: rewrite of_uint_alt); (only 1: rewrite <- !rev_lnorm_rev, !rev_rev, <- !to_of_lu, of_lu_double); (only 1: now case of_lu; [ now simpl |  ]; intro p; induction p).	6.32668089867	3253
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40	0.0.0.2.2.4.0	search with cache (only 1: simpl norm); (only 1: destruct (Pos.of_hex_uint d) eqn:E); (only 1: rewrite <- Unsigned.to_of); (only 1: now rewrite E); (only 1: exists p); (only 1: rewrite <- Unsigned.to_of); (only 1: now rewrite E).	2.7161128521	1659
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40	1	search with cache (only 1: now induction u; [ idtac | simpl; rewrite IHu.. ]).	0.0285511016846	2
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40	2.33	search with cache (only 1: compute); (only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	0.345793008804	661
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	5.1	search with cache (only 1: set (f' := fix aux (l_rev : list digits) : list digits * nat := match l_rev with | (d0 :: l_rev)%list => let (r, n) := aux l_rev in (r, S n) | _ => (l_rev, 0) end)); (only 1: now simpl).	0.0659430027008	12
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40	0.3.0.0.1.1	search with cache (only 1: revert d); (only 1: induction n as [| n IHn]); (only 1: intro d); (only 1: now simpl); (only 1: intro d); (only 1: now case d; [ idtac | intros d' H; apply IHn, le_S_n.. ]).	0.250042200089	74
Coq.Numbers.DecimalFacts.nb_digits_0	40	1	search with cache (only 1: now case d).	0.0747239589691	2
Coq.Numbers.DecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d)); (only 1: now case d).	0.207967042923	3
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	4.1.5	search with cache (only 1: unfold unorm); (only 1: simpl); (only 1: now unfold unorm; case nzhead).	0.47563791275	205
Coq.Numbers.DecimalFacts.app_nil_l	40	4.0	search with cache (only 1: unfold app); (only 1: now simpl).	0.020546913147	6
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40	10	search with cache (only 1: now case d).	0.142692089081	54
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40	1.0.0.0.0.1.0.1	search with cache (only 1: intro Hl); (only 1: apply to_list_inj); (only 1: revert Hl); (only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec); (only 1: induction (to_list d) as [| h t IHl]); (only 1: now simpl); (only 1: rewrite <- List.app_comm_cons); (only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.347965955734	75
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	7	search with cache (only 1: reflexivity).	0.0219240188599	8
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0	search with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.019003868103	1
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	22	search with cache (only 1: now unfold unorm; case nzhead).	1.10406494141	1251
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0188081264496	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	2.1.0.17.4.3	search with cache (only 1: apply to_list_inj); (only 1: rewrite !nzhead_spec, app_spec); (only 1: rewrite !nzhead_spec, app_spec); (only 1: induction (to_list d) as [| h t IHl]); (only 1: now simpl); (only 1: now rewrite <- List.app_comm_cons; case h).	21.1781229973	9638
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40	1	search with cache (only 1: now induction u; [ idtac | simpl; rewrite IHu.. ]).	0.05934882164	2
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40	1.33	search with cache (only 1: compute); (only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	0.391520023346	622
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	5.2.0	search with cache (only 1: set (f' := fix aux (l_rev : list digits) : list digits * nat := match l_rev with | (d0 :: l_rev)%list => let (r, n) := aux l_rev in (r, S n) | _ => (l_rev, 0) end)); (only 1: set (f := fix aux d_rev := match d_rev with | D0 d_rev => let (r, n) := aux d_rev in (r, S n) | _ => (d_rev, 0) end)); (only 1: now simpl).	0.120903968811	10
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40	0.3.0.0.1.1	search with cache (only 1: revert d); (only 1: induction n as [| n IHn]); (only 1: intro d); (only 1: now simpl); (only 1: intro d); (only 1: now case d; [ idtac | intros d' H; apply IHn, le_S_n.. ]).	0.291416883469	77
Coq.Numbers.HexadecimalFacts.nb_digits_0	40	1	search with cache (only 1: now case d).	0.165269136429	2
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d)); (only 1: now case d).	0.3079829216	3
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40
Coq.Numbers.HexadecimalFacts.length_lnzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	3.1.3	search with cache (only 1: unfold unorm); (only 1: simpl); (only 1: now unfold unorm; case nzhead).	0.0441429615021	10
Coq.Numbers.HexadecimalFacts.app_nil_l	40	4.0	search with cache (only 1: unfold app); (only 1: now simpl).	0.0215620994568	6
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40	10	search with cache (only 1: now case d).	0.0962409973145	49
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40	1.0.0.0.1.0.0.1	search with cache (only 1: intro Hl); (only 1: apply to_list_inj); (only 1: revert Hl); (only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec); (only 1: induction (to_list d) as [| h t IHl]); (only 1: now simpl); (only 1: rewrite <- List.app_comm_cons); (only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.365039825439	78
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40	2.10.0.10.7	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d)); (only 1: induction (to_list d) as [| h t IHl]); (only 1: now destruct (to_list d) as [| h t]; [  | rewrite to_list_of_list ]); (only 1: revert d); (only 1: now case h; [ simpl; intro Hl; apply IHl | .. ]).	23.4511139393	14333
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	7	search with cache (only 1: reflexivity).	0.0206151008606	8
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	0	search with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.01811003685	1
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40	22	search with cache (only 1: now unfold unorm; case nzhead).	1.79645109177	2012
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.018098115921	1
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	2.1.0.19.5.3	search with cache (only 1: apply to_list_inj); (only 1: rewrite !nzhead_spec, app_spec); (only 1: rewrite !nzhead_spec, app_spec); (only 1: induction (to_list d) as [| h t IHl]); (only 1: now simpl); (only 1: now rewrite <- List.app_comm_cons; case h).	34.0072720051	14010
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	2.6	search with cache (only 1: simpl); (only 1: intuition subst; simpl; f_equal; auto).	0.0252850055695	10
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.0	search with cache (only 1: simpl); (only 1: auto).	0.0155389308929	2
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0113971233368	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	2.6	search with cache (only 1: simpl); (only 1: intuition subst; simpl; f_equal; auto).	0.0156078338623	10
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.0	search with cache (only 1: simpl); (only 1: auto).	0.015823841095	2
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.0118141174316	1
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	0.0.2.22	search with cache (only 1: unfold base); (only 1: apply Z.pow_gt_1); (only 1: lia); (only 1: auto with zarith).	2.92260193825	372
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	2.0	search with cache (only 1: unfold base); (only 1: auto with zarith).	0.0262999534607	4
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	2.0.5.12.1	search with cache (only 1: zify); (only 1: pose proof gt_wB_1); (only 1: rewrite Zmod_small); (only 1: lia); (only 1: lia).	25.3632321358	3999
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	4	search with cache (only 1: firstorder  auto with crelations).	0.274488925934	42
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	6	search with cache (only 1: firstorder  auto with crelations).	0.0311908721924	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.3.1.0	search with cache (only 1: intro n); (only 1: zify); (only 1: apply Zmod_small); (only 1: apply ZnZ.spec_to_Z).	0.104294061661	28
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.1.3.2.6.10.0	search with cache (only 1: intro n); (only 1: zify); (only 1: apply Zmod_small); (only 1: split); (only 1: lia); (only 1: pose proof gt_wB_1); (only 1: lia).	15.0912280083	4119
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	17.24.0.0	search with cache (only 1: intros); (only 1: zify); (only 1: unfold base); (only 1: now rewrite Z.mul_comm).	9.62264919281	9822
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.2.2.0.0.1.53	search with cache (only 1: intros f w); (only 1: unfold eqb, eq); (only 1: rewrite ZnZ.spec_compare); (only 1: case Z.compare_spec); (only 1: easy || lia); (only 1: easy || lia); (only 1: easy || lia).	30.4758579731	32672
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold eqb31); (only 1: intros x y); (only 1: rewrite spec_compare); (only 1: case Z.compare_spec); (only 1: intuition); (only 1: apply Int31_canonic); (only 1: auto); (only 1: easy); (only 1: easy).	0.157809972763	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	4.2.0	search with cache (only 1: destruct x); (only 1: simpl); (only 1: reflexivity).	0.0239191055298	9
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x); (only 1: auto).	0.017361164093	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	2.0.1.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: simpl in *); (only 1: auto).	0.0298118591309	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	1.1.0.0.0.0	search with cache (only 1: intros n); (only 1: elim n); (only 1: simpl); (only 1: destruct x); (only 1: auto); (only 1: reflexivity).	0.0573210716248	14
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	2.5.3.0.2.2	search with cache (only 1: intros n); (only 1: elim n); (only 1: reflexivity); (only 1: simpl); (only 1: intros); (only 1: now f_equal).	19.4972829819	7199
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	1.5.3.1.4	search with cache (only 1: induction n); (only 1: auto); (only 1: simpl); (only 1: rewrite IHn); (only 1: reflexivity).	34.9171841145	12074
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.0.1.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: simpl in *); (only 1: auto).	0.0355730056763	5
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x); (only 1: simpl); (only 1: auto).	0.0313518047333	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	3.6.0.0.1	search with cache (only 1: destruct x); (only 1: simpl); (only 1: intros); (only 1: rewrite H); (only 1: auto).	4.56129693985	1504
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	3.6.3.0.9.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: simpl in *); (only 1: compute); (only 1: rewrite H); (only 1: auto).	4.97918200493	1337
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	2.4	search with cache (only 1: apply recrbis_aux_equiv); (only 1: auto).	0.0232288837433	8
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	0.0.1.0	search with cache (only 1: destruct x); (only 1: split); (only 1: auto); (only 1: auto).	0.037201166153	5
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	6	search with cache (only 1: auto).	0.0177040100098	7
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.3.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: auto).	0.0296058654785	6
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x); (only 1: compute); (only 1: auto).	0.0318999290466	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0170199871063	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.0167980194092	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.0237309932709	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.0156188011169	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.0162451267242	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0	search with cache (only 1: auto with zarith).	0.0174558162689	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2	search with cache (only 1: auto).	0.0162320137024	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	1.1	search with cache (only 1: intros); (only 1: apply phi_phi_inv).	0.097795009613	53
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	5.1	search with cache (only 1: intros); (only 1: apply phi_phi_inv).	0.261588096619	88
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	4.0.0.14	search with cache (only 1: unfold sub31carryc, sub31, interp_carry); (only 1: intros); (only 1: repeat rewrite phi_phi_inv); (only 1: apply Zplus_mod_idemp_l).	20.1579642296	11281
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros); (only 1: apply phi_phi_inv).	0.105619907379	46
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros); (only 1: apply spec_sub_c).	0.0194299221039	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	1.1	search with cache (only 1: intros); (only 1: apply phi_phi_inv).	0.200684070587	75
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.4	search with cache (only 1: intros); (only 1: apply phi_phi_inv).	0.0238800048828	7
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.1.2.0.0.3.0	search with cache (only 1: intros); (only 1: generalize (phi_inv_phi x)); (only 1: rewrite H); (only 1: simpl phi_inv); (only 1: intros H'); (only 1: rewrite <- H'); (only 1: auto).	0.396683931351	155
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	4.13	search with cache (only 1: assert (Hb : 0 <= wB) by (red; intros HH; discriminate)); (only 1: auto).	0.60114812851	420
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros n p a H); (only 1: rewrite Zmod_eq by auto with zarith); (only 1: unfold Z.sub at 1); (only 1: rewrite Z_div_plus_full_l by auto with zarith); (only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia)); (only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith); (only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc); (only 1: rewrite Zopp_mult_distr_l); (only 1: rewrite Z_div_mult by auto with zarith); (only 1: symmetry); (only 1: apply Zmod_eq); (only 1: auto with zarith).	14.5465648174	1688
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	4.1.2	search with cache (only 1: intros); (only 1: apply Z.lt_gt); (only 1: now apply Z.pow_pos_nonneg).	0.0393481254578	10
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	7.7	search with cache (only 1: intros h); (only 1: now Z.nzsimpl).	0.243177175522	118
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	24	search with cache (only 1: now apply Z.le_succ_l).	0.462693929672	280
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	7	search with cache (only 1: auto).	0.0224409103394	8
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0208559036255	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	200	search with cache (only 1: congruence).	8.27125406265	28498
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	1.0.0	search with cache (only 1: intros); (only 1: rewrite <- not_true_iff_false, eqb_spec); (only 1: trivial).	0.0362269878387	4
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	2.0.1	search with cache (only 1: intros x y); (only 1: rewrite eqb_false_spec); (only 1: trivial).	0.0408689975739	15
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	2.3.1.0.3	search with cache (only 1: unfold eqo); (only 1: intros); (only 1: generalize (eqb_correct i j)); (only 1: rewrite H); (only 1: trivial).	3.97630000114	1197
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.11.6.0.1	search with cache (only 1: split); (only 1: auto using eqb_correct, eqb_complete); (only 1: intros); (only 1: rewrite H); (only 1: auto using eqb_correct, eqb_complete).	1.35293698311	1392
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	1	search with cache (only 1: apply subc_spec).	0.0195469856262	2
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	3	search with cache (only 1: apply sub_spec).	0.0269050598145	4
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0222668647766	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	6.4.19	search with cache (only 1: intros k); (only 1: subst y); (only 1: reflexivity).	1.89178800583	980
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h); (only 1: apply int_eqm in h); (only 1: rewrite !add_spec in h); (only 1: apply eqm_mod, eqm_sub in h); (only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia); (only 1: rewrite <- eqm_subE in h); (only 1: apply eqmI, h).	0.0489239692688	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	19.0.0	search with cache (only 1: apply to_Z_inj); (only 1: rewrite lsr_spec); (only 1: auto with zarith).	5.59499692917	3704
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	15.0.0	search with cache (only 1: unfold bit); (only 1: rewrite lsr_1); (only 1: now case eqbP).	0.88144993782	697
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	5.1	search with cache (only 1: rewrite is_even_bit); (only 1: auto).	0.0736730098724	42
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	3.1.0.0.0	search with cache (only 1: apply bit_ext); (only 1: intros n); (only 1: rewrite land_spec, bit_0); (only 1: rewrite andb_false_r); (only 1: auto).	0.0367980003357	19
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	4	search with cache (only 1: lia).	0.03049492836	5
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z); (only 1: intros); (only 1: destruct (Z_mod_lt x wB wB_pos)); (only 1: auto).	0.0345981121063	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z); (only 1: intros); (only 1: destruct (Z_mod_lt x wB wB_pos)); (only 1: auto).	0.0378959178925	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	1.2.0.0	search with cache (only 1: unfold to_Z, zdigits); (only 1: apply Zmod_small); (only 1: unfold wB, base); (only 1: auto with zarith).	0.0399777889252	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.8.0.0	search with cache (only 1: unfold to_Z, zdigits); (only 1: apply Zmod_small); (only 1: generalize wB_pos); (only 1: lia).	0.542950153351	265
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.0165121555328	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	1.9.0.0	search with cache (only 1: intros); (only 1: unfold opp, to_Z); (only 1: rewrite Zplus_mod_idemp_l); (only 1: auto).	5.23117589951	486
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	3.3.10.0.0	search with cache (only 1: intros); (only 1: unfold pred, to_Z, Z.pred); (only 1: rewrite <- Zminus_mod_idemp_r); (only 1: rewrite <- Zminus_mod_idemp_l); (only 1: lia).	18.1919310093	6651
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	7	search with cache (only 1: split).	0.031200170517	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40	0.0.0.0.8	search with cache (only 1: intros); (only 1: destruct x); (only 1: trivial); (only 1: apply two_power_pos_equiv); (only 1: lia).	0.357638120651	141
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.20	search with cache (only 1: intros a0); (only 1: apply b2z_inj); (only 1: rewrite testbit_spec' by order); (only 1: nzsimpl); (only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.415433168411	330
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	1.22.0	search with cache (only 1: intros a); (only 1: rewrite testbit_spec' by order); (only 1: now nzsimpl).	27.9302978516	16527
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.1.6.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: rewrite mul_pow2_bits by trivial); (only 1: destruct (le_gt_cases n m)); (only 1: now apply shiftl_spec_high); (only 1: rewrite shiftl_spec_low, testbit_neg_r); (only 1: trivial); (only 1: now apply lt_sub_0); (only 1: order).	1.72777295113	664
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	0.0.3.8.0.0.15	search with cache (only 1: intros f Hf H0); (only 1: rewrite div2_spec, shiftr_div_pow2); (only 1: rewrite div2_spec, shiftr_div_pow2); (only 1: f_equiv); (only 1: order); (only 1: order'); (only 1: order').	4.31994009018	1348
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.160330057144	28
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.0919668674469	28
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.0966739654541	28
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply xorb_false_l).	0.0282080173492	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	25.0.9	search with cache (only 1: intros); (only 1: bitwise); (only 1: now nzsimpl).	3.85355210304	3450
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply xorb_false_r).	0.0287821292877	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	15.0.11	search with cache (only 1: intros); (only 1: bitwise); (only 1: trivial).	1.31880903244	906
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.11	search with cache (only 1: intros); (only 1: bitwise); (only 1: trivial).	0.243370056152	80
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply andb_comm).	0.0251331329346	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: unfold setbit); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.225135803223	43
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: unfold clearbit); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.225709199905	44
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	24.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.649563074112	894
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	33.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.37888503075	1843
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	3.0.1	search with cache (only 1: intros); (only 1: bitwise); (only 1: now rewrite lnot_spec, bits_m1).	0.0473530292511	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	3.2.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: now rewrite lnot_spec, bits_m1).	0.0478579998016	11
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40	3.9.7	search with cache (only 1: intros); (only 1: unfold ones); (only 1: now rewrite shiftl_1_l).	0.892403841019	658
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.5.0	search with cache (only 1: intros a n); (only 1: rewrite <- shiftl_opp_r); (only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0803439617157	17
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	search with cache (only 1: intros); (only 1: rewrite div2_spec); (only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0266559123993	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	0.5.0.5.4	search with cache (only 1: split); (only 1: unfold lnot); (only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l); (only 1: unfold lnot); (only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	0.89807510376	552
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4.1	search with cache (only 1: intros a b g NZ EQ); (only 1: rewrite EQ); (only 1: rewrite !quot_div_exact); (only 1: rewrite gcd_div_factor); (only 1: now rewrite <- EQ, div_same); (only 1: generalize (gcd_nonneg a b)); (only 1: order); (only 1: apply gcd_divide_l); (only 1: apply gcd_divide_r); (only 1: generalize (gcd_nonneg a b)); (only 1: order); (only 1: apply gcd_divide_r); (only 1: generalize (gcd_nonneg a b)); (only 1: order); (only 1: apply gcd_divide_l).	8.71367192268	2332
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.5.15	search with cache (only 1: symmetry); (only 1: apply divide_div_mul_exact); (only 1: generalize (gcd_nonneg a b)); (only 1: order); (only 1: apply gcd_divide_r).	20.5845940113	369
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	2.3.0.5.5.1.0.0	search with cache (only 1: intros); (only 1: apply lcm_unique); (only 1: trivial using divide_1_l, le_0_1, divide_refl); (only 1: apply divide_refl); (only 1: exists n); (only 1: now nzsimpl); (only 1: intros q); (only 1: trivial).	8.73438501358	5990
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	1.0.1.1.2.0	search with cache (only 1: intros); (only 1: apply divide_antisym_nonneg); (only 1: apply lcm_nonneg); (only 1: trivial using divide_1_l, le_0_1, divide_refl); (only 1: now apply lcm_least); (only 1: apply divide_lcm_r).	0.18558382988	106
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.0.11.1.0.2	search with cache (only 1: intros); (only 1: apply divide_antisym_nonneg); (only 1: apply lcm_nonneg); (only 1: apply H); (only 1: now apply lcm_least); (only 1: apply divide_lcm_r).	1.48391485214	1160
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros); (only 1: apply lcm_unique_alt); (only 1: apply lcm_nonneg); (only 1: intros); (only 1: rewrite divide_opp_l); (only 1: apply lcm_divide_iff).	0.0325031280518	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0	search with cache (only 1: intros a b ?); (only 1: apply div_small); (only 1: auto).	0.25377202034	58
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	7.0	search with cache (only 1: intros); (only 1: auto using mod_small).	0.251273155212	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.1.2.0.1.2.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply div_unique with 0); (only 1: split); (only 1: order); (only 1: now rewrite abs_pos); (only 1: now nzsimpl).	0.397890090942	183
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.0.1.1	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with a); (only 1: pose proof lt_0_1 as H); (only 1: rewrite abs_pos); (only 1: intuition); (only 1: order); (only 1: now nzsimpl).	0.0677831172943	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.div_small); (only 1: split); (only 1: apply le_0_1); (only 1: auto).	0.0283620357513	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.mod_small); (only 1: split); (only 1: apply le_0_1); (only 1: auto).	0.0254979133606	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.5.3.1.0.1.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with a); (only 1: split); (only 1: order); (only 1: now rewrite abs_pos); (only 1: nzsimpl); (only 1: apply mul_comm).	3.18640184402	1277
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	5.5.5.5	search with cache (only 1: intros a b ? ?); (only 1: apply div_pos); (only 1: auto); (only 1: auto).	10.1412470341	3677
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.10.0	search with cache (only 1: intros a b (Hb, Hab)); (only 1: apply div_str_pos); (only 1: auto).	2.76590299606	793
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	2.2.5.21.0	search with cache (only 1: intros); (only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order); (only 1: rewrite <- (add_0_r a)  at 1); (only 1: rewrite <- add_le_mono_l); (only 1: now apply mod_always_pos).	5.3547680378	3266
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros); (only 1: rewrite (div_mod a b)  at 1 by order); (only 1: rewrite <- (add_0_r (b * (a / b)))  at 2); (only 1: apply add_cancel_l).	0.0366361141205	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.0.0.1.2.0.1	search with cache (only 1: intros); (only 1: rewrite (mul_lt_mono_pos_l b) by order); (only 1: apply le_lt_trans with a); (only 1: apply Private_NZDiv.mul_div_le); (only 1: intuition); (only 1: order); (only 1: auto).	0.528724193573	102
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.3.1.3.4	search with cache (only 1: intros); (only 1: rewrite (mul_le_mono_pos_l _ _ b) by order); (only 1: apply le_trans with a); (only 1: apply Private_NZDiv.mul_div_le); (only 1: order); (only 1: auto).	4.62043595314	1491
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	4.0.0.1.0	search with cache (only 1: intros); (only 1: rewrite <- (div_mul q b) by order); (only 1: apply Private_NZDiv.div_le_mono); (only 1: auto); (only 1: now rewrite mul_comm).	0.159122943878	42
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	2.0.0.0.1.3	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with (a / c + b)); (only 1: now apply mod_always_pos); (only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order); (only 1: now rewrite mul_comm).	0.553034067154	153
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.0.0.0.2.1.4	search with cache (only 1: intros); (only 1: apply (mul_cancel_l _ _ c)); (only 1: order); (only 1: apply (add_cancel_r _ _ ((a + b * c) mod c))); (only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order); (only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order); (only 1: now rewrite mul_comm).	0.99613904953	328
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.0.2.0	search with cache (only 1: intros); (only 1: rewrite (add_comm _ c), (add_comm a)); (only 1: apply Private_NZDiv.div_add); (only 1: intros EQ); (only 1: order).	0.0361020565033	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	search with cache (only 1: intros a b c); (only 1: rewrite !(mul_comm c)); (only 1: apply Private_NZDiv.div_mul_cancel_r).	8.5883769989	1371
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros); (only 1: rewrite !(mul_comm _ c)); (only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	10.1876060963	1289
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.2.0.1.0.0.0.0	search with cache (only 1: intros a b c ? ? ?); (only 1: apply Private_NZDiv.div_le_lower_bound); (only 1: auto); (only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc); (only 1: apply mul_le_mono_nonneg_l); (only 1: auto); (only 1: apply Private_NZDiv.mul_div_le); (only 1: order).	1.41791582108	273
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	1.1.2.0	search with cache (only 1: intros); (only 1: apply div_unique with r); (only 1: auto); (only 1: auto).	0.0958139896393	47
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	1.1.1.0	search with cache (only 1: intros); (only 1: apply mod_unique with q); (only 1: auto); (only 1: auto).	0.0359778404236	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	search with cache (only 1: intros a b ?); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique with a); (only 1: left); (only 1: auto); (only 1: now nzsimpl).	0.0481419563293	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with 0); (only 1: left); (only 1: auto); (only 1: now nzsimpl).	0.112262010574	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.3.9.0.0.1.1	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with a); (only 1: left); (only 1: intuition); (only 1: apply lt_0_1); (only 1: now nzsimpl).	2.35180306435	2726
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.div_small); (only 1: split); (only 1: apply le_0_1); (only 1: order).	0.0263819694519	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.mod_small); (only 1: split); (only 1: apply le_0_1); (only 1: order).	0.0252401828766	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	5.9.0.1.0.0.11.2.8.8	search with cache (only 1: symmetry); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique with 0); (only 1: destruct (lt_ge_cases 0 b)); (only 1: left); (only 1: intuition order); (only 1: right); (only 1: intuition order); (only 1: nzsimpl); (only 1: intuition order).	17.936396122	12671
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	4.4.14.0	search with cache (only 1: intros a b ? ?); (only 1: apply mod_le); (only 1: order); (only 1: order).	31.3373658657	10184
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	2.4.4.6.5	search with cache (only 1: intros a b ? ?); (only 1: apply div_le_lower_bound); (only 1: order); (only 1: order); (only 1: now nzsimpl).	31.1089699268	7898
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.11.0	search with cache (only 1: intros a b (Hb, Hab)); (only 1: apply div_str_pos); (only 1: auto).	0.8880879879	282
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros); (only 1: rewrite (div_mod a b)  at 1 by order); (only 1: rewrite <- (add_0_r (b * (a / b)))  at 2); (only 1: apply add_cancel_l).	0.0347630977631	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.2.0.1	search with cache (only 1: intros); (only 1: rewrite (mul_lt_mono_pos_l b) by order); (only 1: apply le_lt_trans with a); (only 1: apply Private_NZDiv.mul_div_le); (only 1: auto); (only 1: auto).	0.0374300479889	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	1.1.1.4.1.3	search with cache (only 1: intros); (only 1: rewrite (mul_le_mono_pos_l _ _ b) by order); (only 1: apply le_trans with a); (only 1: apply Private_NZDiv.mul_div_le); (only 1: order); (only 1: order).	20.9569029808	4503
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	4.0.4.0.1.1	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with (a / c + b)); (only 1: now apply mod_bound_or); (only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order); (only 1: now rewrite mul_comm).	3.30210399628	1520
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	1.0.0.0.0.1.2	search with cache (only 1: intros); (only 1: apply (mul_cancel_l _ _ c)); (only 1: order); (only 1: apply (add_cancel_r _ _ ((a + b * c) mod c))); (only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order); (only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order); (only 1: now rewrite mul_comm).	0.420083999634	84
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	3.1.2.0	search with cache (only 1: intros); (only 1: rewrite (add_comm _ c), (add_comm a)); (only 1: apply Private_NZDiv.div_add); (only 1: order).	0.0398161411285	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros); (only 1: rewrite !(mul_comm _ c)); (only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	26.6552860737	3286
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	3.0.4.3.7	search with cache (only 1: intros a b Hb H); (only 1: rewrite !(add_comm a)); (only 1: apply Private_NZDiv.add_mod_idemp_l); (only 1: intros EQ); (only 1: order).	37.2042040825	12805
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	3.1.2.1.0.2.1	search with cache (only 1: intros); (only 1: apply add_cancel_l with (b * c * (a / (b * c)))); (only 1: rewrite <- div_mod by (apply neq_mul_0; split; order)); (only 1: rewrite <- Private_NZDiv.div_div by trivial); (only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l); (only 1: rewrite <- div_mod by order); (only 1: now rewrite <- div_mod).	37.7191171646	3437
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c ? ? ?); (only 1: apply Private_NZDiv.div_le_lower_bound); (only 1: auto); (only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc); (only 1: apply mul_le_mono_nonneg_l); (only 1: auto); (only 1: apply Private_NZDiv.mul_div_le); (only 1: auto).	0.147004127502	9
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: apply gcd_unique_alt); (only 1: apply gcd_nonneg); (only 1: intros); (only 1: rewrite divide_opp_r); (only 1: rewrite and_comm); (only 1: rewrite and_comm); (only 1: apply gcd_divide_iff).	0.0592279434204	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	6.1.0.1.15.2.0	search with cache (only 1: intros); (only 1: rewrite <- gcd_abs_r); (only 1: apply gcd_unique); (only 1: apply abs_nonneg); (only 1: now apply divide_abs_l); (only 1: now apply divide_abs_l, divide_abs_r); (only 1: easy).	28.2855219841	14725
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	7.3.0.0	search with cache (only 1: intros); (only 1: rewrite <- (abs_eq p)  at 3); (only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm); (only 1: apply H).	1.44638180733	514
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.3.1.1.0	search with cache (only 1: intros); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: symmetry); (only 1: apply eq_iff_eq_true); (only 1: rewrite even_spec, odd_spec); (only 1: apply Odd_succ).	0.411126852036	150
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	2.7.1.6	search with cache (only 1: intros n m); (only 1: rewrite abs_neq); (only 1: auto with relations); (only 1: now rewrite (opp_le_mono n 0), opp_0).	6.122797966	3211
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	4.4.4.1.0	search with cache (only 1: intros); (only 1: destruct_max n); (only 1: auto); (only 1: rewrite opp_nonneg_nonpos); (only 1: auto).	2.08314585686	1075
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.14.0.8	search with cache (only 1: rewrite abs_neq); (only 1: now nzsimpl); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_mono).	0.727200984955	969
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	5.3.9.5.0	search with cache (only 1: intros); (only 1: destruct_max n); (only 1: now left); (only 1: right); (only 1: reflexivity).	14.7955389023	9058
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	22.4.0.0.0	search with cache (only 1: intros); (only 1: destruct_max n); (only 1: auto with relations); (only 1: right); (only 1: now rewrite opp_involutive).	9.89871287346	8686
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.7.5.0	search with cache (only 1: intros); (only 1: assert (LE : 0 <= abs n) by apply abs_nonneg); (only 1: apply abs_eq); (only 1: apply abs_nonneg).	1.26888895035	969
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	1.1.0.0	search with cache (only 1: intros); (only 1: destruct_max n); (only 1: auto); (only 1: auto).	0.0348641872406	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	8.1.0.1	search with cache (only 1: intros); (only 1: destruct_max n); (only 1: apply eq_refl); (only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.470464944839	215
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.11.1.3.0.11.1.3.1	search with cache (only 1: rewrite sgn_null); (only 1: rewrite <- abs_0_iff); (only 1: apply abs_eq); (only 1: apply opp_nonpos_nonneg); (only 1: now nzsimpl); (only 1: rewrite <- abs_0_iff); (only 1: apply abs_eq); (only 1: apply opp_nonpos_nonneg); (only 1: now nzsimpl).	6.89312410355	12462
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	7.16.0	search with cache (only 1: intros n m Hn Hm); (only 1: rewrite <- (mul_0_r n)  at 1); (only 1: now apply mul_le_mono_nonpos_l).	12.6836500168	7825
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.5.0	search with cache (only 1: intros n m Hn Hm); (only 1: rewrite <- (mul_0_l m)); (only 1: now apply mul_le_mono_nonpos_r).	0.0682170391083	25
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	8.17.0	search with cache (only 1: intros n m Hn Hm); (only 1: rewrite <- (mul_0_r n)  at 1); (only 1: now apply mul_le_mono_nonpos_l).	16.6874480247	9884
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.4.0.0	search with cache (only 1: intros n m H1 H2); (only 1: apply (mul_lt_mono_neg_r m) in H1); (only 1: rewrite mul_1_l in H1); (only 1: apply lt_le_pred in H2); (only 1: setoid_replace (P 0) with (-1) in H2); (only 1: now apply lt_le_trans with m); (only 1: apply eq_opp_r); (only 1: now rewrite one_succ, opp_pred, opp_0); (only 1: assumption).	10.9120049477	4671
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.11.3	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_lt_mono).	2.21454882622	1000
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_lt_le_mono).	0.0272409915924	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.1.0	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_lt_mono).	0.0290241241455	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.1.2	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_mono).	0.210165023804	35
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40	0.7.6	search with cache (only 1: intro m); (only 1: intro n); (only 1: now rewrite (add_le_mono_r _ _ n), add_0_l, sub_simpl_r).	0.686304092407	365
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	14.24.0	search with cache (only 1: intros); (only 1: rewrite <- 2!add_opp_r); (only 1: now apply add_le_mono_r).	36.4481909275	15845
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.15.4.13	search with cache (only 1: intro p); (only 1: intros n m); (only 1: rewrite (add_comm p m)); (only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	17.5849621296	7521
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.18.4.5	search with cache (only 1: intro p); (only 1: intros n m); (only 1: rewrite (add_comm p m)); (only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	15.6647670269	5255
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.1.1.1.51.8	search with cache (only 1: split); (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]); (only 1: intuition order); (only 1: intuition order); (only 1: intuition order); (only 1: intuition order).	9.88426184654	10828
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.22.17.6	search with cache (only 1: intro); (only 1: rewrite lt_eq_cases); (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]); (only 1: intuition); (only 1: intuition); (only 1: intuition).	2.18365097046	2921
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	0.0.0.22.25.0	search with cache (only 1: intro); (only 1: rewrite lt_eq_cases); (only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]); (only 1: intuition); (only 1: intuition); (only 1: intuition).	2.46751594543	3472
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro); (only 1: apply add_le_cases); (only 1: now nzsimpl).	0.0491528511047	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	22.7.6	search with cache (only 1: intro n); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: apply lt_succ_diag_r).	1.48289012909	1637
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	37.6.7	search with cache (only 1: intro n); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: now apply le_le_succ_r).	3.18358111382	4251
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40	4.5.17.4.0.0	search with cache (only 1: intro); (only 1: intro); (only 1: symmetry); (only 1: rewrite <- (succ_pred m)  at 2); (only 1: symmetry); (only 1: apply lt_succ_r).	6.3769929409	5713
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.6.1	search with cache (only 1: intro); (only 1: rewrite nle_gt); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: apply lt_succ_diag_r).	0.0675859451294	49
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	4.1.6.2	search with cache (only 1: intros m H1 H2); (only 1: apply lt_le_incl); (only 1: apply le_succ_l); (only 1: now rewrite succ_pred).	16.8498709202	4972
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	1.1.5.1.1.1	search with cache (only 1: intros); (only 1: rewrite <- (succ_pred m)); (only 1: apply lt_succ_r); (only 1: apply lt_le_incl); (only 1: rewrite <- (succ_pred m)); (only 1: now rewrite pred_succ).	7.83611798286	2118
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	3.0.1.0.3.0	search with cache (only 1: intros); (only 1: apply lt_le_incl); (only 1: rewrite <- (succ_pred m)); (only 1: apply lt_succ_r); (only 1: rewrite <- (succ_pred m)); (only 1: now rewrite pred_succ).	5.77800297737	1236
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.9.1.0	search with cache (only 1: intros n m); (only 1: symmetry); (only 1: rewrite <- lt_le_pred); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: symmetry); (only 1: apply le_succ_l).	8.6829829216	2838
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.0.0	search with cache (only 1: intros); (only 1: rewrite lt_le_pred); (only 1: apply le_succ_l).	0.10480093956	19
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros); (only 1: rewrite <- lt_pred_le); (only 1: rewrite pred_succ); (only 1: rewrite <- (succ_pred m)); (only 1: rewrite pred_succ); (only 1: apply lt_succ_r).	0.051586151123	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.3.1.1.3.0	search with cache (only 1: intros n m); (only 1: symmetry); (only 1: rewrite lt_le_pred); (only 1: symmetry); (only 1: rewrite pred_succ); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: symmetry); (only 1: apply le_succ_l).	5.57918691635	1832
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	7.1.3.0	search with cache (only 1: intros n m); (only 1: symmetry); (only 1: rewrite <- lt_pred_le); (only 1: apply lt_succ_r).	4.43757295609	1490
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	3.4.18.6	search with cache (only 1: intro); (only 1: apply lt_gt_cases); (only 1: rewrite lt_pred_le); (only 1: intuition order).	2.91198396683	3278
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.16.0	search with cache (only 1: intros n m); (only 1: apply opp_inj); (only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.52829194069	863
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	3.5.3.0.2	search with cache (only 1: intro n); (only 1: intro m); (only 1: rewrite <- add_opp_r); (only 1: rewrite <- add_opp_r); (only 1: now nzsimpl).	5.95789909363	1524
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.2.3	search with cache (only 1: intros n m); (only 1: rewrite <- 2!add_opp_r); (only 1: rewrite <- (succ_pred n)  at 2); (only 1: now rewrite add_succ_l, pred_succ).	0.206018924713	30
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	0.0.5.0.0.1.13.3	search with cache (only 1: intro m); (only 1: nzinduct m); (only 1: rewrite <- add_opp_r); (only 1: now nzsimpl); (only 1: intro m); (only 1: rewrite sub_succ_r); (only 1: rewrite sub_succ_l); (only 1: now rewrite pred_succ).	16.916975975	7352
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.10.1.0.7.2	search with cache (only 1: intro m); (only 1: nzinduct m); (only 1: now nzsimpl); (only 1: intro n); (only 1: split); (only 1: now rewrite add_comm, add_opp_r, sub_diag); (only 1: now rewrite add_comm, add_opp_r, sub_diag).	4.54662299156	1766
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	7.0.4.4.1	search with cache (only 1: intro m); (only 1: intro n); (only 1: rewrite <- add_opp_r); (only 1: rewrite add_comm); (only 1: now nzsimpl).	30.7471559048	7157
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.1	search with cache (only 1: intros n m); (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0496289730072	16
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0.0	search with cache (only 1: intros n m p); (only 1: rewrite <- 2!add_opp_r); (only 1: rewrite <- add_opp_r, opp_add_distr); (only 1: now rewrite add_assoc).	0.0337929725647	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.7.2.0	search with cache (only 1: intros n m p); (only 1: rewrite <- 2!add_opp_r); (only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc); (only 1: now rewrite opp_involutive).	2.48733901978	614
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	9.0.0.0.0	search with cache (only 1: intro n); (only 1: intro m); (only 1: rewrite <- add_opp_r); (only 1: rewrite <- add_opp_r); (only 1: now rewrite add_comm).	3.0460319519	738
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0.0	search with cache (only 1: intros n m); (only 1: rewrite <- add_opp_r); (only 1: now rewrite opp_involutive).	0.0251679420471	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	4.17.0	search with cache (only 1: intros n m); (only 1: rewrite add_comm); (only 1: now rewrite add_move_l, sub_0_l).	6.69538283348	2310
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0.0.1	search with cache (only 1: intro n); (only 1: intro m); (only 1: rewrite <- (add_opp_r n m)); (only 1: now rewrite add_move_l, sub_0_l).	0.0328299999237	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0.1	search with cache (only 1: intros n m); (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0253930091858	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.3.0	search with cache (only 1: intros); (only 1: rewrite add_comm); (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.236859083176	65
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.3	search with cache (only 1: nzinduct m); (only 1: now nzsimpl); (only 1: intro m); (only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.201531171799	31
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4.0	search with cache (only 1: intros); (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.032909154892	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	3.9.0.4	search with cache (only 1: intro m); (only 1: intros); (only 1: rewrite add_comm); (only 1: apply add_add_simpl_l_l).	11.7198829651	3634
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.17.0	search with cache (only 1: intros n m p); (only 1: rewrite (add_comm p m)); (only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.53922700882	782
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	9.0	search with cache (only 1: intros a b c0); (only 1: Z.order').	0.0640621185303	51
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	2.0	search with cache (only 1: intro n); (only 1: auto).	0.0148429870605	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.25.2.0.1	search with cache (only 1: unfold Z.succ, Z.eq); (only 1: intros n m H); (only 1: simpl); (only 1: nzsimpl); (only 1: now rewrite H).	21.3702318668	17160
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.7.0.11.0.2	search with cache (only 1: unfold Z.pred, Z.eq); (only 1: simpl); (only 1: destruct n as [n m]); (only 1: simpl); (only 1: rewrite add_succ_r); (only 1: now rewrite add_succ_l).	2.10557198524	2121
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq); (only 1: intro n); (only 1: simpl); (only 1: now nzsimpl).	0.188042879105	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	17.7.3.2	search with cache (only 1: unfold Z.zero, Z.succ, Z.eq in *); (only 1: simpl); (only 1: nzsimpl); (only 1: now rewrite <- one_succ).	36.0908961296	15427
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq); (only 1: simpl); (only 1: now nzsimpl').	0.0759391784668	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0	search with cache (only 1: now do 2 f_equiv).	0.0426018238068	1
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq); (only 1: intro n); (only 1: simpl); (only 1: now nzsimpl).	0.191338062286	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	4.0.4.2	search with cache (only 1: intro n); (only 1: unfold Z.eq, Z.add); (only 1: simpl); (only 1: now nzsimpl).	1.02304697037	358
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.12.0.1.0	search with cache (only 1: intro n); (only 1: unfold Z.add, Z.eq); (only 1: simpl); (only 1: intro H1); (only 1: now nzsimpl).	9.73422002792	2340
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.1.1	search with cache (only 1: intro n); (only 1: unfold Z.add, Z.eq); (only 1: simpl); (only 1: now nzsimpl).	0.14638710022	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.6	search with cache (only 1: intros n m); (only 1: unfold Z.sub, Z.eq); (only 1: simpl); (only 1: now nzsimpl).	0.767163991928	78
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	1.0.3.3	search with cache (only 1: unfold Z.mul, Z.eq); (only 1: intro n); (only 1: simpl); (only 1: now nzsimpl).	0.214704990387	61
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	1.15.11.0	search with cache (only 1: intros); (only 1: destruct n as [n m]); (only 1: compute); (only 1: order).	2.96226906776	2757
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	37	search with cache (only 1: now repeat split).	0.33559513092	696
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0	search with cache (only 1: reflexivity).	0.0135130882263	1
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.5.0.9.0.6.0	search with cache (only 1: induction n); (only 1: unfold ofnat); (only 1: intros); (only 1: symmetry); (only 1: apply add_0_l); (only 1: intros); (only 1: rewrite ofnat_succ, add_succ_l); (only 1: simpl); (only 1: now f_equiv).	10.4532129765	7484
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	3.1.1.0.1.0.0.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ); (only 1: destruct (div_mod_unique b q (a / b) r (a mod b))); (only 1: auto); (only 1: apply mod_bound_pos); (only 1: auto); (only 1: order); (only 1: rewrite <- div_mod); (only 1: order); (only 1: order); (only 1: auto).	6.6128590107	2838
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.4.1.1	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply div_unique with 0); (only 1: order); (only 1: intuition); (only 1: now nzsimpl).	0.647890090942	281
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	0.1.0.2.1.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply mod_unique with 0); (only 1: order); (only 1: intuition); (only 1: now nzsimpl).	0.205523967743	57
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.1.1.1.2.4	search with cache (only 1: symmetry); (only 1: apply div_unique with 0); (only 1: auto); (only 1: intuition); (only 1: rewrite succ_lt_mono, <- one_succ); (only 1: apply lt_succ_diag_r); (only 1: now nzsimpl).	0.661473989487	441
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.8.0.2.0	search with cache (only 1: intros); (only 1: apply div_small); (only 1: split); (only 1: apply lt_le_incl, lt_0_1); (only 1: order).	1.00838804245	829
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.4.0	search with cache (only 1: intros a ?); (only 1: apply mod_small); (only 1: split); (only 1: apply le_0_1); (only 1: auto).	0.121784925461	53
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	4.4.0.12.0	search with cache (only 1: intros a b Ha Hb); (only 1: apply mod_small); (only 1: apply mod_bound_pos); (only 1: auto); (only 1: auto).	5.72646903992	2916
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.30.0.0	search with cache (only 1: unfold divide); (only 1: intro n); (only 1: exists n); (only 1: now nzsimpl').	22.2219388485	11666
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	5.14.1	search with cache (only 1: unfold divide); (only 1: exists 0); (only 1: now nzsimpl).	2.86907291412	2161
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.38.0	search with cache (only 1: intros n m p (q, Hq)); (only 1: rewrite (mul_comm n p), (mul_comm m p)); (only 1: exists q); (only 1: now rewrite mul_shuffle3, Hq).	21.8141429424	17707
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.6.0	search with cache (only 1: intros n m p Hp); (only 1: rewrite (mul_comm n p), (mul_comm m p)); (only 1: split); (only 1: intros (q, Hq)); (only 1: exists q); (only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq); (only 1: apply mul_divide_mono_l).	1.4529299736	758
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	1.2.6.24.5	search with cache (only 1: intros n); (only 1: intros H); (only 1: apply divide_mul_l); (only 1: exists 1); (only 1: now nzsimpl).	2.1668279171	2717
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	4.8.1	search with cache (only 1: intros); (only 1: rewrite mul_comm); (only 1: apply divide_mul_l, divide_refl).	0.24125289917	218
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	1.13.5.4.0.1.16.5	search with cache (only 1: intro); (only 1: intro); (only 1: apply gcd_unique); (only 1: apply gcd_nonneg); (only 1: apply gcd_divide_r); (only 1: apply gcd_divide_l); (only 1: intros); (only 1: now apply gcd_greatest).	34.3499140739	35106
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	9.0.0.1.0.0.0	search with cache (only 1: intros); (only 1: apply gcd_unique); (only 1: rewrite <- (add_0_l 0)); (only 1: now nzsimpl); (only 1: apply divide_refl); (only 1: apply divide_0_r); (only 1: trivial).	4.55058813095	1963
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	1.0.1.0.3.0	search with cache (only 1: intros); (only 1: apply gcd_unique_alt); (only 1: rewrite <- (add_0_l 0)); (only 1: now nzsimpl); (only 1: intros); (only 1: now split).	0.526093006134	188
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	2.4.0.0.0.1.2.4.10	search with cache (only 1: apply log2_unique); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_mono_l); (only 1: nzsimpl); (only 1: split); (only 1: order); (only 1: order'); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_mono_l).	11.6415970325	4194
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	1.0.0.2.4.2.2.12	search with cache (only 1: apply log2_unique' with 0); (only 1: order'); (only 1: split); (only 1: rewrite <- (add_0_l 0)); (only 1: now apply add_le_mono_l); (only 1: nzsimpl); (only 1: order'); (only 1: now nzsimpl).	3.58076310158	1491
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha); (only 1: unfold log2_up); (only 1: case compare_spec); (only 1: order); (only 1: order); (only 1: order).	0.0393772125244	7
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.15.0.0.0.0	search with cache (only 1: intros a Ha); (only 1: unfold log2_up); (only 1: case compare_spec); (only 1: order); (only 1: order'); (only 1: order).	5.5839600563	2669
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	search with cache (only 1: unfold log2_up); (only 1: case compare_spec); (only 1: order); (only 1: order); (only 1: order).	0.0255289077759	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	0.1.1.0.0.7.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2); (only 1: le_elim H2); (only 1: le_elim H1); (only 1: apply lt_le_incl); (only 1: rewrite (mul_comm n p), (mul_comm m p)); (only 1: now apply mul_lt_mono_pos_l); (only 1: apply eq_le_incl); (only 1: rewrite <- H1); (only 1: now nzsimpl); (only 1: apply eq_le_incl); (only 1: now rewrite H2).	30.8148090839	8906
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0	search with cache (only 1: intros n m p H); (only 1: rewrite (mul_comm n p), (mul_comm m p)); (only 1: do 2 rewrite lt_eq_cases); (only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption); (only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.136750936508	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	11.2.1.0.2.0.0	search with cache (only 1: intros n m p H); (only 1: rewrite (mul_comm n p), (mul_comm m p)); (only 1: do 2 rewrite lt_eq_cases); (only 1: rewrite (mul_lt_mono_neg_l p n m)); (only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)); (only 1: now setoid_replace (n == m) with (m == n) by split; now intro); (only 1: order).	7.51219582558	3234
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.3.4	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (mul_0_l m)); (only 1: now apply mul_lt_mono_neg_r).	0.0380048751831	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	2.3.4	search with cache (only 1: intros n m H1 H2); (only 1: rewrite <- (mul_0_l m)); (only 1: now apply mul_lt_mono_pos_r).	0.252729177475	106
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.8.10.2	search with cache (only 1: intros n m); (only 1: intro H1); (only 1: apply eq_mul_0 in H1); (only 1: tauto).	3.77338290215	2749
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	1.8.2	search with cache (only 1: intros n m H1 H2); (only 1: apply eq_mul_0 in H1); (only 1: tauto).	0.590265989304	351
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	1.4	search with cache (only 1: intros n m Hn Hm); (only 1: now apply mul_lt_mono_nonneg).	0.0308699607849	13
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.1.1.0.1.6	search with cache (only 1: intros n m H1 H2); (only 1: le_elim H2); (only 1: apply lt_le_incl); (only 1: now apply mul_lt_mono_nonneg); (only 1: rewrite H2); (only 1: now apply eq_le_incl).	0.870192050934	642
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m); (only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2)); (only 1: rewrite two_succ); (only 1: nzsimpl); (only 1: now rewrite le_succ_l); (only 1: order').	0.185863018036	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros n); (only 1: generalize (Even_or_Odd n), (Even_Odd_False n)); (only 1: rewrite <- even_spec, <- odd_spec); (only 1: destruct (odd n), (even n)); (only 1: simpl); (only 1: intuition); (only 1: intuition); (only 1: simpl); (only 1: intuition); (only 1: intuition).	2.49246501923	520
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40	0.0.0.0.0	search with cache (only 1: split); (only 1: rewrite <- even_spec, <- odd_spec); (only 1: now rewrite <- negb_odd, odd_succ, negb_even); (only 1: rewrite <- even_spec, <- odd_spec); (only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.0508549213409	5
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.14.0	search with cache (only 1: intros); (only 1: rewrite eq_iff_eq_true, 2!even_spec); (only 1: now rewrite Even_succ, Odd_succ).	4.92576289177	1341
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.15.0	search with cache (only 1: intros); (only 1: rewrite eq_iff_eq_true, 2!odd_spec); (only 1: now rewrite Odd_succ, Even_succ).	5.14179301262	2626
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.2	search with cache (only 1: intros n m Hm); (only 1: rewrite <- !negb_even); (only 1: apply even_spec in Hm); (only 1: rewrite even_add); (only 1: now destruct (even n), (even m)).	0.194113969803	49
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.3.1.0.2.2	search with cache (only 1: intros n m p Hm); (only 1: rewrite <- !negb_even); (only 1: apply even_spec in Hm); (only 1: rewrite even_add); (only 1: rewrite even_mul); (only 1: now destruct (even n), (even m)).	1.69942307472	650
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	1.3.2.0.1	search with cache (only 1: intros n m); (only 1: apply even_add_even); (only 1: exists m); (only 1: apply succ_inj); (only 1: now f_equiv).	0.18309211731	97
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	1.3.2.1.1	search with cache (only 1: intros n m); (only 1: apply odd_add_even); (only 1: exists m); (only 1: apply succ_inj); (only 1: now f_equiv).	0.290608882904	176
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	12.8	search with cache (only 1: intro n); (only 1: now nzsimpl').	0.401988983154	286
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.17.7	search with cache (only 1: apply sqrt_unique' with 0); (only 1: now nzsimpl'); (only 1: now nzsimpl).	1.19015908241	844
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.0	search with cache (only 1: intros a Ha); (only 1: unfold sqrt_up); (only 1: case compare_spec); (only 1: order); (only 1: order); (only 1: order).	0.0363478660583	7
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	11	search with cache (only 1: now rewrite sqrt_up_eqn0).	0.211530208588	163
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p); (only 1: nzinduct p); (only 1: now nzsimpl); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite <- succ_lt_mono).	0.125168085098	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p); (only 1: nzinduct p); (only 1: now nzsimpl); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite <- succ_le_mono).	0.164540052414	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.0.0.3.12.5.9	search with cache (only 1: intro n); (only 1: intro p); (only 1: nzinduct p); (only 1: rewrite <- (add_0_l 0)); (only 1: now nzsimpl); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite <- succ_lt_mono).	6.86146116257	3885
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H); (only 1: apply add_lt_cases); (only 1: now nzsimpl).	0.0321400165558	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H); (only 1: apply add_le_cases); (only 1: now nzsimpl).	0.0836689472198	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.0.0.1.1	search with cache (only 1: intro n); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro); (only 1: now nzsimpl).	0.180516958237	11
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.1	search with cache (only 1: intros n m); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro n); (only 1: nzsimpl); (only 1: now rewrite add_cancel_r).	0.288936853409	61
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	8.0	search with cache (only 1: intro n); (only 1: now nzsimpl').	0.166471004486	31
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n); (only 1: now nzsimpl').	0.0307469367981	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	10.4.2.4.0	search with cache (only 1: intro); (only 1: intro); (only 1: apply (lt_irrefl (S n))); (only 1: rewrite lt_succ_r); (only 1: tauto).	17.2935080528	7993
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.2.0.7	search with cache (only 1: intros n H); (only 1: intros LT EQ); (only 1: rewrite EQ in LT); (only 1: false_hyp LT lt_irrefl).	0.639667034149	299
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0	search with cache (only 1: intuition order).	0.0132541656494	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0	search with cache (only 1: intuition order).	0.0151529312134	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	search with cache (only 1: intuition order).	0.0143179893494	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	search with cache (only 1: intuition order).	0.0142331123352	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	search with cache (only 1: intuition order).	0.0138580799103	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: intuition order).	0.0641448497772	50
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	4.0	search with cache (only 1: intro n); (only 1: intuition order).	0.0346260070801	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0	search with cache (only 1: intuition order).	0.0133578777313	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	3.17.5.1.2	search with cache (only 1: intro m); (only 1: intro n); (only 1: intro p); (only 1: apply le_succ_l); (only 1: now apply lt_le_incl).	2.43236494064	7193
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	5.12.0.3	search with cache (only 1: intro m); (only 1: intro n); (only 1: rewrite lt_succ_r); (only 1: now apply lt_le_incl).	2.87757611275	3364
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	10.3.0.1.0	search with cache (only 1: intros n m); (only 1: symmetry); (only 1: rewrite lt_eq_cases); (only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases); (only 1: now rewrite succ_inj_wd).	27.0243680477	9019
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.21.0	search with cache (only 1: rewrite one_succ); (only 1: apply lt_le_incl); (only 1: apply lt_succ_diag_r).	0.525590896606	487
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.28.0	search with cache (only 1: rewrite two_succ); (only 1: rewrite lt_succ_r); (only 1: apply lt_le_incl, lt_0_1).	1.2227230072	1235
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.22.1.0.1	search with cache (only 1: transitivity 1); (only 1: apply lt_le_incl, lt_0_1); (only 1: rewrite two_succ); (only 1: apply lt_le_incl); (only 1: apply lt_succ_diag_r).	3.40166306496	4127
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.2.1	search with cache (only 1: intros n m); (only 1: rewrite lt_eq_cases); (only 1: generalize (le_gt_cases n m)); (only 1: rewrite lt_eq_cases); (only 1: intuition).	0.151051044464	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.1	search with cache (only 1: intros n m); (only 1: destruct (le_gt_cases m n)); (only 1: intuition order); (only 1: intuition order).	0.152770996094	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.4.0	search with cache (only 1: intros); (only 1: generalize (le_gt_cases n m)); (only 1: intuition order).	1.57274103165	275
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.1.0	search with cache (only 1: intros); (only 1: destruct (lt_trichotomy n m)); (only 1: intuition order); (only 1: intuition order).	0.0404758453369	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	3	search with cache (only 1: intuition order).	0.0673649311066	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0150120258331	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.0.1.1	search with cache (only 1: intros n m); (only 1: destruct (lt_trichotomy n m)); (only 1: intuition order); (only 1: intuition order).	0.0513341426849	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0164098739624	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0162818431854	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.3	search with cache (only 1: intros n m); (only 1: rewrite lt_eq_cases); (only 1: destruct (lt_trichotomy n m)); (only 1: intuition order); (only 1: intuition order).	0.237887144089	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	8.0.5.2	search with cache (only 1: intro m); (only 1: symmetry); (only 1: rewrite <- le_succ_l); (only 1: intuition order).	6.420981884	3816
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	41.12	search with cache (only 1: intros RS' n); (only 1: order).	2.18207502365	5042
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	5.0	search with cache (only 1: intro n); (only 1: apply right_induction).	0.0157339572906	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.1.0.0.2.3.2.0	search with cache (only 1: intro); (only 1: intro); (only 1: nzinduct n); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd); (only 1: intro); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	2.13639497757	950
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m); (only 1: nzsimpl); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	0.071671962738	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.1	search with cache (only 1: intros n m); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	0.229292154312	61
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n); (only 1: now nzsimpl').	0.0287439823151	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.0.1.4.1	search with cache (only 1: intros n m); (only 1: intro); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	6.79956579208	1399
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intro); (only 1: nzinduct p); (only 1: now nzsimpl); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	0.398776054382	39
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.1	search with cache (only 1: intros n m p); (only 1: nzinduct p); (only 1: now nzsimpl); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	1.62657785416	262
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.2.4.7.1	search with cache (only 1: intros n m p q); (only 1: nzinduct p); (only 1: nzsimpl); (only 1: apply add_shuffle0); (only 1: intro p); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	38.3899681568	7430
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.2	search with cache (only 1: intros n m p); (only 1: nzinduct n); (only 1: now nzsimpl); (only 1: intro); (only 1: nzsimpl); (only 1: now rewrite succ_inj_wd).	0.509104967117	81
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	1.1	search with cache (only 1: intro n); (only 1: now nzsimpl').	0.0309720039368	4
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.0.8	search with cache (only 1: compute); (only 1: intros); (only 1: intuition).	0.114765167236	29
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	5.0	search with cache (only 1: intros); (only 1: CRelationClasses.simpl_crelation).	0.0257830619812	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.0.0.0	search with cache (only 1: intros); (only 1: unfold if_zero); (only 1: rewrite recursion_0); (only 1: auto).	0.0218250751495	4
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.0.1.2.0.0	search with cache (only 1: unfold if_zero); (only 1: intros); (only 1: rewrite recursion_succ); (only 1: auto); (only 1: auto); (only 1: f_equiv').	0.0450308322906	9
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40	3.1.1.0	search with cache (only 1: unfold def_add); (only 1: intros); (only 1: rewrite recursion_0); (only 1: reflexivity).	0.0256910324097	9
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40	1.3.0	search with cache (only 1: unfold def_mul); (only 1: intro y); (only 1: now rewrite recursion_0).	0.021861076355	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	9.7.6.0	search with cache (only 1: intro n); (only 1: rewrite ltb_base); (only 1: unfold if_zero); (only 1: now rewrite recursion_succ).	4.25325608253	3860
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.18	search with cache (only 1: unfold even); (only 1: now rewrite recursion_0).	0.0753579139709	187
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	6.0.3	search with cache (only 1: intro n); (only 1: unfold even); (only 1: now rewrite recursion_succ).	0.19885802269	101
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	6.0.0	search with cache (only 1: unfold half); (only 1: rewrite half_aux_0); (only 1: f_equiv).	0.0947148799896	27
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	9.4	search with cache (only 1: intros a a' Ha); (only 1: now rewrite ?Ha).	0.735930919647	363
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.19	search with cache (only 1: intros a0); (only 1: apply b2n_inj); (only 1: rewrite testbit_spec'); (only 1: nzsimpl); (only 1: now rewrite mod_small by (destruct a0; order')).	0.377727031708	294
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.0.0.4.5	search with cache (only 1: intros a0); (only 1: apply b2n_inj); (only 1: rewrite testbit_spec'); (only 1: nzsimpl); (only 1: now nzsimpl); (only 1: order'); (only 1: order_nz).	0.343883991241	150
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	4.1.0.1.1.0.0.1.0	search with cache (only 1: intros a); (only 1: destruct (exists_div2 a) as (a', (b, H))); (only 1: rewrite H  at 1); (only 1: rewrite testbit_0_r); (only 1: apply mod_unique with a'); (only 1: destruct b); (only 1: order'); (only 1: order'); (only 1: trivial).	2.30594491959	1146
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros); (only 1: apply testbit_even_succ, le_0_l).	0.0170428752899	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	2.1.0.6.2.0.2	search with cache (only 1: repeat red); (only 1: intros a Ha); (only 1: revert a); (only 1: intros); (only 1: apply b2n_inj); (only 1: rewrite H  at 1); (only 1: order').	5.85116410255	1933
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.3.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: rewrite shiftr_spec'); (only 1: now nzsimpl).	0.0600800514221	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.1.0.14.0.1.4.0	search with cache (only 1: intros); (only 1: rewrite shiftl_mul_pow2); (only 1: bitwise as m); (only 1: apply testbit_false); (only 1: nzsimpl); (only 1: generalize (lt_succ_diag_r 0)); (only 1: order); (only 1: order'); (only 1: order_nz).	13.3461899757	7566
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.1.0.0.3.0	search with cache (only 1: intros); (only 1: rewrite shiftr_div_pow2); (only 1: nzsimpl); (only 1: generalize (lt_succ_diag_r 0)); (only 1: order); (only 1: order_nz).	0.257923841476	43
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	1.4.0.0.1.5.6	search with cache (only 1: repeat red); (only 1: intros a n); (only 1: intros); (only 1: rewrite div2_spec, shiftr_div_pow2); (only 1: rewrite div2_spec, shiftr_div_pow2); (only 1: f_equiv); (only 1: now order).	4.80051994324	1731
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.3.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.0911009311676	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.3.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.0904071331024	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.3.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.0998768806458	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply xorb_false_l).	0.0615360736847	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	9.0.2	search with cache (only 1: intro n); (only 1: bitwise); (only 1: trivial).	0.552323102951	273
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply xorb_false_r).	0.028263092041	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	10.0.7	search with cache (only 1: intros n); (only 1: bitwise); (only 1: trivial).	1.12120294571	822
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.6	search with cache (only 1: intros); (only 1: bitwise); (only 1: trivial).	0.113256931305	17
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros); (only 1: bitwise); (only 1: apply andb_comm).	0.105360031128	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: unfold setbit); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.129693984985	26
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.4.1	search with cache (only 1: intros a a' Ha b b' Hb); (only 1: unfold clearbit); (only 1: bitwise); (only 1: now rewrite Ha, Hb).	0.132975101471	26
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40	2.0.11	search with cache (only 1: intros H); (only 1: unfold ones); (only 1: now rewrite shiftl_1_l).	0.429522037506	323
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.3.10.2	search with cache (only 1: intros); (only 1: unfold lnot); (only 1: bitwise); (only 1: apply xorb_false_r).	3.66495990753	1650
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.0.0.1.0.1.0	search with cache (only 1: intros); (only 1: bitwise as m); (only 1: destruct (le_gt_cases n m)); (only 1: unfold lnot); (only 1: now rewrite lxor_spec, ones_spec_high, xorb_false_r); (only 1: unfold lnot); (only 1: now rewrite lxor_spec, ones_spec_low).	0.0533878803253	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	2.2.0.0.1.1.0.0.0.1.0.0	search with cache (only 1: intros a n H); (only 1: bitwise as m); (only 1: destruct (le_gt_cases n m)); (only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2); (only 1: trivial); (only 1: now apply lt_le_trans with n); (only 1: trivial); (only 1: trivial); (only 1: rewrite lnot_spec_low, ones_spec_low); (only 1: now destruct a.[m]); (only 1: now apply lt_le_trans with n); (only 1: now apply lt_le_trans with n).	10.5237250328	6352
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.6.7	search with cache (only 1: intros a n H); (only 1: unfold lnot); (only 1: bitwise); (only 1: apply xorb_assoc_reverse).	6.77155518532	3652
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	6.2.9	search with cache (only 1: intros n); (only 1: intros); (only 1: now apply divide_mul_l).	1.03635311127	1105
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.7.3	search with cache (only 1: intros); (only 1: unfold lcm); (only 1: now nzsimpl).	0.278547048569	142
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	5.22.2.0	search with cache (only 1: intros); (only 1: apply divide_antisym); (only 1: apply divide_0_r); (only 1: apply divide_lcm_r).	2.48738098145	3006
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	9.7.0.2.0.5.21.0.0	search with cache (only 1: intros); (only 1: apply lcm_unique); (only 1: trivial using divide_1_l, le_0_l, divide_refl); (only 1: exists 1); (only 1: now nzsimpl); (only 1: exists n); (only 1: now nzsimpl); (only 1: intros); (only 1: apply H).	25.8788039684	23195
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	4.1.3.0	search with cache (only 1: intros); (only 1: apply divide_antisym); (only 1: now apply lcm_least); (only 1: trivial using divide_lcm_l).	0.217217922211	123
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	6.0.1.2	search with cache (only 1: intros); (only 1: apply divide_antisym); (only 1: now apply lcm_least); (only 1: apply divide_lcm_r).	0.561115026474	292
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.1.0	search with cache (only 1: intros a Ha); (only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]); (only 1: now rewrite pow_neg_r); (only 1: now apply pow_0_l); (only 1: now apply pow_0_l).	0.0829060077667	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	9.8.4.54	search with cache (only 1: intro H); (only 1: nzsimpl); (only 1: now nzsimpl); (only 1: apply le_0_l).	18.4734899998	20290
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	3.3.3.1.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros a b c); (only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]); (only 1: rewrite !(pow_neg_r _ _ Hc)); (only 1: now nzsimpl); (only 1: apply le_ind with (4 := Hc)); (only 1: solve_proper); (only 1: now nzsimpl); (only 1: clear c Hc); (only 1: intros c Hc IH); (only 1: nzsimpl); (only 1: rewrite IH); (only 1: apply mul_shuffle1); (only 1: trivial); (only 1: trivial); (only 1: trivial).	30.6896719933	8278
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	7.3.26.6	search with cache (only 1: intros a b ? ?); (only 1: apply pow_le_mono_r); (only 1: generalize (le_0_l b)); (only 1: auto').	28.2704470158	31041
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.0.1.1.0.0.7	search with cache (only 1: intros a b ? ?); (only 1: transitivity (a ^ d)); (only 1: apply Private_NZPow.pow_le_mono_r); (only 1: intuition order); (only 1: intuition order); (only 1: apply Private_NZPow.pow_le_mono_l); (only 1: intuition order).	1.33951711655	791
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.4.6.0.5.15.5	search with cache (only 1: intros a b ? ?); (only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]); (only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial)); (only 1: order); (only 1: auto'); (only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial)); (only 1: order).	13.6948480606	13178
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.1.0.3.4.4	search with cache (only 1: intros); (only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]); (only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial)); (only 1: order); (only 1: trivial); (only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial)); (only 1: order).	0.739476919174	588
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	6.0.2.2.0.11	search with cache (only 1: split); (only 1: now apply Private_NZPow.pow_lt_mono_r); (only 1: destruct (le_gt_cases c b) as [LE| GT]); (only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order')); (only 1: order); (only 1: trivial).	20.0978460312	12582
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.2.0.3.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique_exact); (only 1: auto'); (only 1: now nzsimpl).	0.0398828983307	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.28.1.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with 1); (only 1: auto'); (only 1: now nzsimpl).	6.81741189957	10685
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.1.4.8.1	search with cache (only 1: intros a b ?); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique with a); (only 1: auto); (only 1: now nzsimpl).	1.42881703377	1117
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	5.2.1	search with cache (only 1: intros); (only 1: apply mod_small); (only 1: auto').	0.0700500011444	42
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.div_small); (only 1: auto').	0.0200228691101	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.mod_small); (only 1: auto').	0.021054983139	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.5.0.1.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique_exact); (only 1: order'); (only 1: now nzsimpl).	0.109215974808	67
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.4.0.1.1	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.mod_unique with a); (only 1: apply lt_0_1); (only 1: now nzsimpl).	0.100965023041	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.div_small); (only 1: auto).	0.0188589096069	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.mod_small); (only 1: auto).	0.0178759098053	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	10.1.0.2.0	search with cache (only 1: intros); (only 1: symmetry); (only 1: apply Private_NZDiv.div_unique_exact); (only 1: intuition); (only 1: apply mul_comm).	1.1408469677	898
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	6.2.12.0	search with cache (only 1: intros); (only 1: apply mod_mul); (only 1: auto'); (only 1: auto').	16.1705870628	12156
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	7.2.16.0	search with cache (only 1: intros); (only 1: apply mod_le); (only 1: auto'); (only 1: auto').	3.99962592125	3371
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.8.0	search with cache (only 1: intros a b (Hb, Hab)); (only 1: apply div_str_pos); (only 1: auto).	0.141344070435	60
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	11.2.7.0	search with cache (only 1: intros); (only 1: apply mul_div_le); (only 1: auto'); (only 1: auto').	3.33111095428	2184
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	12.2.0.2.0.0.1	search with cache (only 1: intros); (only 1: rewrite (div_mod a b)  at 1 by order); (only 1: rewrite mul_succ_r); (only 1: rewrite <- add_lt_mono_l); (only 1: apply mod_bound_pos); (only 1: auto'); (only 1: auto').	12.0617821217	4855
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros); (only 1: rewrite (div_mod a b)  at 1 by order); (only 1: rewrite <- (add_0_r (b * (a / b)))  at 2); (only 1: apply add_cancel_l).	0.0439100265503	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.13.0.0.1.0	search with cache (only 1: intros); (only 1: rewrite <- (Private_NZDiv.div_mul q b)); (only 1: apply Private_NZDiv.div_le_mono); (only 1: auto'); (only 1: rewrite mul_comm); (only 1: auto'); (only 1: auto').	10.8936359882	5316
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.1.14.1.1.2.0	search with cache (only 1: intros); (only 1: rewrite <- (Private_NZDiv.div_mul q b)); (only 1: apply Private_NZDiv.div_le_mono); (only 1: auto'); (only 1: rewrite mul_comm); (only 1: auto'); (only 1: auto').	24.4508810043	14664
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	2.0.0.0.0.0.4	search with cache (only 1: intros); (only 1: apply (mul_cancel_l _ _ c)); (only 1: intuition); (only 1: apply (add_cancel_r _ _ ((a + b * c) mod c))); (only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order); (only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order); (only 1: now rewrite mul_comm).	0.860100984573	234
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	2.1.2	search with cache (only 1: intros a b c); (only 1: rewrite (add_comm _ c), (add_comm a)); (only 1: apply Private_NZDiv.div_add).	0.316937923431	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.2.3.4.0	search with cache (only 1: intros); (only 1: apply div_mul_cancel_r); (only 1: auto'); (only 1: auto'); (only 1: auto').	1.48713612556	753
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.5.0	search with cache (only 1: intros); (only 1: rewrite !(mul_comm c)); (only 1: apply Private_NZDiv.div_mul_cancel_r); (only 1: intuition); (only 1: intuition).	0.0676629543304	15
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	1.1.0.0.0.1.1.0.0	search with cache (only 1: intros); (only 1: rewrite !(mul_comm _ c)); (only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b))))); (only 1: rewrite <- div_mod by (apply neq_mul_0; split; order)); (only 1: rewrite Private_NZDiv.div_mul_cancel_l); (only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order); (only 1: now apply div_mod); (only 1: intuition); (only 1: intuition).	2.43082404137	494
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.2.0.0.0.1.2.0	search with cache (only 1: intros); (only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b))))); (only 1: rewrite <- div_mod by (apply neq_mul_0; split; order)); (only 1: rewrite Private_NZDiv.div_mul_cancel_l); (only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order); (only 1: now apply div_mod); (only 1: intuition); (only 1: intuition).	3.06278300285	765
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	0.0.1.9.3.8.7	search with cache (only 1: intro n); (only 1: intros a ?); (only 1: apply Private_NZDiv.mod_small_iff); (only 1: auto'); (only 1: apply mod_bound_pos); (only 1: auto'); (only 1: auto').	6.3584549427	7630
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	10.6.0.0.7.0	search with cache (only 1: intros); (only 1: apply mul_mod_idemp_l); (only 1: auto'); (only 1: auto'); (only 1: apply neq_0_lt_0); (only 1: assumption).	24.3216588497	8957
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	11.0.3.0	search with cache (only 1: intros); (only 1: rewrite !(mul_comm a)); (only 1: apply Private_NZDiv.mul_mod_idemp_l); (only 1: assumption).	1.82788109779	657
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	13.0.2.0	search with cache (only 1: intros); (only 1: rewrite !(add_comm a)); (only 1: apply Private_NZDiv.add_mod_idemp_l); (only 1: assumption).	4.36275911331	1366
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.1.0.0.0.1	search with cache (only 1: intros); (only 1: apply add_cancel_l with (b * c * (a / (b * c)))); (only 1: rewrite <- div_mod by (apply neq_mul_0; split; order)); (only 1: rewrite <- Private_NZDiv.div_div by trivial); (only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l); (only 1: rewrite <- div_mod by order); (only 1: now apply div_mod).	0.331970930099	20
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	10.0.0.1.0.10.0.0	search with cache (only 1: intros); (only 1: apply Private_NZDiv.div_le_lower_bound); (only 1: intuition); (only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc); (only 1: apply mul_le_mono_nonneg_l); (only 1: auto'); (only 1: apply Private_NZDiv.mul_div_le); (only 1: intuition).	5.27905297279	3497
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.1.0.0.0.0.0.1.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m)); (only 1: rewrite 2!max_r); (only 1: order); (only 1: order); (only 1: apply mul_le_mono_nonneg_r); (only 1: apply le_0_l); (only 1: order); (only 1: rewrite 2!max_l); (only 1: order); (only 1: order); (only 1: apply mul_le_mono_nonneg_r); (only 1: apply le_0_l); (only 1: order).	5.42369008064	3225
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	3.0.0.1.3.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m)); (only 1: rewrite 2!min_l); (only 1: order); (only 1: order); (only 1: now apply mul_le_mono_l); (only 1: rewrite 2!min_r); (only 1: order); (only 1: order); (only 1: now apply mul_le_mono_l).	7.12898206711	4006
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m)); (only 1: rewrite 2!min_l); (only 1: order); (only 1: order); (only 1: now apply mul_le_mono_r); (only 1: rewrite 2!min_r); (only 1: order); (only 1: order); (only 1: now apply mul_le_mono_r).	0.930620193481	443
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	2.0.0.8.2.0.0.7.2	search with cache (only 1: destruct (le_ge_cases n m)); (only 1: rewrite 2!min_l); (only 1: order); (only 1: order); (only 1: now apply sub_le_mono_r); (only 1: rewrite 2!min_r); (only 1: order); (only 1: order); (only 1: now apply sub_le_mono_r).	35.5124568939	16513
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.0.5.1.2.0	search with cache (only 1: intros); (only 1: rewrite <- (succ_pred n)  at 2 by trivial); (only 1: symmetry); (only 1: apply eq_iff_eq_true); (only 1: rewrite even_spec, odd_spec); (only 1: apply Odd_succ).	1.16617012024	445
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	16.4.5	search with cache (only 1: intros EQ); (only 1: apply sqrt_square); (only 1: now apply le_0_l).	2.07595396042	1351
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	6.0	search with cache (only 1: intro n); (only 1: auto).	0.0361061096191	17
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.0.2.3.0	search with cache (only 1: intros); (only 1: rewrite strong_rec_alt, strong_rec0_succ); (only 1: apply step_good); (only 1: intros m Hm); (only 1: destruct (nlt_0_r _ Hm)).	0.0457899570465	16
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.0	search with cache (only 1: intros n m p LE); (only 1: destruct (le_ge_cases n p) as [LE'| GE]); (only 1: rewrite <- sub_0_le in LE'); (only 1: rewrite LE'); (only 1: apply le_0_l); (only 1: apply le_add_le_sub_r); (only 1: now rewrite sub_add).	7.61126089096	2709
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	2.1.0.7.1.3.4	search with cache (only 1: intros n m H1 H2); (only 1: le_elim H2); (only 1: apply mul_le_mono_nonneg_r); (only 1: apply le_0_l); (only 1: now apply lt_le_incl); (only 1: rewrite H2); (only 1: now apply eq_le_incl).	10.8046379089	6081
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	7.13.8	search with cache (only 1: intros H); (only 1: intro p); (only 1: apply lt_lt_add_r).	13.5754220486	5659
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	8.4.3.4.6.2	search with cache (only 1: intros n m H); (only 1: rewrite add_comm); (only 1: rewrite <- (add_0_l 0)); (only 1: apply add_lt_le_mono); (only 1: order); (only 1: now apply le_0_l).	16.5084421635	7251
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	7.9.2	search with cache (only 1: intros); (only 1: rewrite nlt_ge); (only 1: apply le_0_l).	0.639120817184	728
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	7.6.23.0	search with cache (only 1: intro n); (only 1: rewrite nle_gt); (only 1: apply lt_succ_r); (only 1: apply le_0_l).	2.88033103943	5696
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	7.6.23	search with cache (only 1: intros); (only 1: apply lt_succ_r); (only 1: apply le_0_l).	1.33504199982	1502
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.2.8.23.15	search with cache (only 1: intuition); (only 1: cases n); (only 1: now left); (only 1: right); (only 1: apply lt_0_succ).	6.51982784271	9342
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.8	search with cache (only 1: intros); (only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE))); (only 1: rewrite EQ); (only 1: now rewrite pred_succ).	0.107688903809	46
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	9.4.1.21.0.3.16	search with cache (only 1: intro n); (only 1: cases n); (only 1: rewrite pred_0); (only 1: apply le_0_l); (only 1: intro n); (only 1: rewrite pred_succ); (only 1: now apply le_le_succ_r).	8.35035514832	17306
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.5.1.1.0.0.5	search with cache (only 1: intro n); (only 1: cases n); (only 1: intros H); (only 1: now elim H); (only 1: intros n _); (only 1: rewrite pred_succ); (only 1: now apply lt_succ_diag_r).	2.87651205063	1537
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.9	search with cache (only 1: intros z n H); (only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE))); (only 1: rewrite EQ); (only 1: now rewrite pred_succ).	0.854144096375	555
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	0.0.5.1.2.1.0.0	search with cache (only 1: intro n); (only 1: cases ltac:(n)); (only 1: intro H); (only 1: rewrite pred_0); (only 1: apply lt_le_incl); (only 1: intros m IH); (only 1: rewrite pred_succ); (only 1: now apply le_succ_l).	2.38681101799	1601
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	8.2.2.8.2.0.2	search with cache (only 1: intros n m); (only 1: cases m); (only 1: rewrite pred_0); (only 1: auto); (only 1: intros m IH); (only 1: rewrite pred_succ in IH); (only 1: now apply lt_lt_succ_r).	34.2042069435	37614
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	4.0.12.1.2.1.2	search with cache (only 1: intros n m); (only 1: cases m); (only 1: rewrite pred_0); (only 1: auto); (only 1: intro H); (only 1: rewrite pred_succ); (only 1: apply le_le_succ_r).	17.9699869156	19361
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	0.0.0.0.1.1.0.3.2.0.0.2.0.7.3	search with cache (only 1: intro n); (only 1: cases ltac:(n)); (only 1: intro n); (only 1: rewrite pred_0); (only 1: split); (only 1: apply le_le_succ_r); (only 1: intro H); (only 1: apply le_succ_r in H); (only 1: destruct H as [H| H]); (only 1: auto); (only 1: symmetry in H); (only 1: false_hyp H neq_succ_0); (only 1: intros); (only 1: rewrite pred_succ); (only 1: now rewrite <- succ_le_mono).	21.9149680138	16325
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.5.0.0.0.14.1.0	search with cache (only 1: unfold natural_isomorphism); (only 1: repeat red); (only 1: intuition); (only 1: now rewrite N1.recursion_0); (only 1: rewrite N1.recursion_succ); (only 1: auto with *); (only 1: auto with *); (only 1: repeat red); (only 1: intros); (only 1: now f_equiv).	1.42293810844	1625
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n); (only 1: apply right_induction with 0); (only 1: auto); (only 1: auto); (only 1: intros); (only 1: auto); (only 1: apply le_0_l).	0.0430319309235	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	9.5	search with cache (only 1: intro n); (only 1: now apply (neq_succ_diag_l 0)).	0.088268995285	130
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.0.3.2	search with cache (only 1: cases n); (only 1: order); (only 1: intro n); (only 1: now rewrite pred_succ).	0.207288980484	56
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.0	search with cache (only 1: unfold to_nat); (only 1: trivial).	0.0145189762115	3
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.14.0.3.0.4.15	search with cache (only 1: red); (only 1: induction p as [| p IHp] using peano_ind); (only 1: reflexivity); (only 1: unfold to_nat); (only 1: rewrite iter_op_succ); (only 1: auto); (only 1: apply Nat.add_assoc).	4.77211999893	6813
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	9.0.0.0.1.0.12	search with cache (only 1: induction n as [| n H]); (only 1: trivial); (only 1: simpl Pos.of_nat); (only 1: destruct n); (only 1: trivial); (only 1: rewrite Pos2Nat.inj_succ); (only 1: now rewrite H).	0.980895996094	1313
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	3.1.1.0.0	search with cache (only 1: destruct n); (only 1: now destruct 1); (only 1: destruct n); (only 1: trivial); (only 1: trivial).	0.0481700897217	12
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	8.0.1.0.1.11	search with cache (only 1: induction n as [| n IHn]); (only 1: reflexivity); (only 1: simpl); (only 1: rewrite Pos2Nat.inj_succ); (only 1: f_equal); (only 1: now rewrite IHn).	1.6306810379	2170
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	5.0.4.2.3.2	search with cache (only 1: rewrite Pos.of_nat_succ); (only 1: simpl Pos.of_nat); (only 1: destruct n); (only 1: trivial); (only 1: rewrite Pos2Nat.inj_succ); (only 1: now apply Nat2Pos.id).	1.21184682846	1036
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	6.4.1.0.0.0.1.4	search with cache (only 1: split); (only 1: intro H); (only 1: apply (f_equal Pos.to_nat) in H); (only 1: rewrite !id_succ in H); (only 1: now injection H); (only 1: intro H); (only 1: f_equal); (only 1: now subst).	1.92290401459	1860
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	search with cache (only 1: simpl); (only 1: f_equal).	0.0154669284821	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40
Coq.PArith.BinPos.Pos.xI_succ_xO	40	41	search with cache (only 1: auto).	1.10598611832	3683
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.0135769844055	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.2.1.4	search with cache (only 1: induction p); (only 1: simpl); (only 1: now f_equal); (only 1: reflexivity); (only 1: reflexivity).	0.132041931152	56
Coq.PArith.BinPos.Pos.double_succ	40	0	search with cache (only 1: reflexivity).	0.0127050876617	1
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	4	search with cache (only 1: now destruct p).	0.369719028473	78
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0272378921509	1
Coq.PArith.BinPos.Pos.pred_succ	40	1.0.1.0.0.1.0.1.2	search with cache (only 1: induction p); (only 1: induction p); (only 1: simpl); (only 1: now f_equal); (only 1: reflexivity); (only 1: simpl); (only 1: reflexivity); (only 1: now destruct p); (only 1: reflexivity).	2.51822400093	845
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.5.1.4	search with cache (only 1: destruct p); (only 1: simpl); (only 1: f_equal); (only 1: apply pred_double_succ); (only 1: reflexivity); (only 1: auto).	1.24034905434	686
Coq.PArith.BinPos.Pos.add_1_r	40	2	search with cache (only 1: now destruct p).	0.0342810153961	16
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.01358294487	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40	5.7.6	search with cache (only 1: rewrite add_carry_spec, <- add_succ_r); (only 1: rewrite add_carry_spec, <- add_succ_r); (only 1: apply add_reg_r).	2.39353299141	1720
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.1	search with cache (only 1: simpl); (only 1: f_equal).	0.0168340206146	3
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40	1.4.2.11.0.2.1.1.2.8	search with cache (only 1: induction p as [p IHp| p IHp| ]); (only 1: simpl); (only 1: f_equal); (only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double); (only 1: rewrite IHp); (only 1: reflexivity); (only 1: simpl); (only 1: f_equal); (only 1: auto); (only 1: reflexivity).	16.1880469322	15761
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	3.0.0.0.0.0	search with cache (only 1: revert P a f); (only 1: intros); (only 1: revert P a f); (only 1: intros); (only 1: revert P a f); (only 1: trivial).	0.0544619560242	21
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: auto).	0.0127048492432	1
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.3.3.0.4.0.1	search with cache (only 1: induction p); (only 1: simpl); (only 1: rewrite IHp); (only 1: now destruct p, q); (only 1: simpl); (only 1: now f_equal); (only 1: reflexivity).	5.29074692726	1355
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.3.0	search with cache (only 1: split); (only 1: rewrite 2!(mul_comm r)); (only 1: apply mul_reg_r); (only 1: congruence).	0.0518991947174	30
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.181327104568	1
Coq.PArith.BinPos.Pos.square_xO	40	0.8	search with cache (only 1: rewrite mul_xO_r); (only 1: auto).	0.0525598526001	26
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	1.1.3.0.1.0.0.2	search with cache (only 1: induction p as [p IHp| p IHp| ]); (only 1: simpl); (only 1: intros); (only 1: now rewrite ?H, ?IHp); (only 1: intros); (only 1: simpl); (only 1: now rewrite ?H, ?IHp); (only 1: now rewrite ?H, ?IHp).	1.43421602249	855
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40	2.10.0	search with cache (only 1: unfold pow); (only 1: rewrite iter_succ); (only 1: now destruct p, q).	0.645743131638	464
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	2.0.5.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]); (only 1: simpl); (only 1: now rewrite ?IHp); (only 1: simpl); (only 1: now rewrite ?IHp); (only 1: now rewrite ?IHp).	0.45201587677	169
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	4.1.3	search with cache (only 1: unfold leb, le); (only 1: rewrite compare_cont_spec); (only 1: now destruct (p ?= q)).	1.18329787254	197
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	4.2.3	search with cache (only 1: unfold ltb, lt); (only 1: rewrite compare_cont_spec); (only 1: now destruct (p ?= q)).	2.18513894081	397
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	1.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec); (only 1: unfold gt); (only 1: destruct (p ?= q)); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.240922927856	42
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	1.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec); (only 1: unfold le); (only 1: destruct (p ?= q)); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.169394016266	42
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec); (only 1: unfold ge); (only 1: destruct (p ?= q)); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.172880172729	42
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	1.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec); (only 1: unfold lt); (only 1: destruct (p ?= q)); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.237543106079	41
Coq.PArith.BinPos.Pos.compare_xO_xO	40	8	search with cache (only 1: auto).	0.137629032135	79
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.0119698047638	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.1.10.2.7	search with cache (only 1: unfold compare); (only 1: simpl); (only 1: rewrite compare_cont_spec); (only 1: unfold compare); (only 1: now destruct (compare_cont Eq p q)).	17.3596668243	9679
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.1.10.2.7	search with cache (only 1: unfold compare); (only 1: simpl); (only 1: rewrite compare_cont_spec); (only 1: unfold compare); (only 1: now destruct (compare_cont Eq p q)).	6.21770691872	4091
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	6.6.7.4.1.0	search with cache (only 1: rewrite compare_cont_spec); (only 1: unfold compare); (only 1: induction p as [p IHp| p IHp| ]); (only 1: trivial); (only 1: trivial); (only 1: trivial).	2.27089715004	3760
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.6.0.1.0	search with cache (only 1: unfold lt); (only 1: destruct compare); (only 1: now split); (only 1: now split); (only 1: easy').	0.822449922562	376
Coq.PArith.BinPos.Pos.compare_le_iff	40	4.1.0.0.1	search with cache (only 1: unfold le); (only 1: destruct compare); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.681051969528	200
Coq.PArith.BinPos.Pos.gt_lt_iff	40	7.3	search with cache (only 1: unfold gt); (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	1.08949613571	333
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.725299119949	132
Coq.PArith.BinPos.Pos.lt_gt	40	1.0	search with cache (only 1: unfold lt, gt); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.61884188652	111
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.1.2	search with cache (only 1: unfold ge); (only 1: unfold le); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0639960765839	22
Coq.PArith.BinPos.Pos.ge_le	40	1.0	search with cache (only 1: unfold le, ge); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.275143146515	40
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0124661922455	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	14.2.0	search with cache (only 1: apply ge_le_iff); (only 1: unfold le, ge); (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	10.891463995	5838
Coq.PArith.BinPos.Pos.nlt_1_r	40	22	search with cache (only 1: now destruct p).	2.40319991112	1830
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0318200588226	19
Coq.PArith.BinPos.Pos.le_nlt	40	3.0	search with cache (only 1: unfold lt, le); (only 1: now rewrite compare_antisym, CompOpp_iff).	1.4005651474	215
Coq.PArith.BinPos.Pos.lt_nle	40	2.8	search with cache (only 1: unfold ltb, lt); (only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	5.03392004967	977
Coq.PArith.BinPos.Pos.lt_le_incl	40	7.0.2	search with cache (only 1: unfold lt, le); (only 1: generalize (compare_succ_r p q)); (only 1: now do 2 destruct compare).	1.77185893059	410
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.3	search with cache (only 1: unfold lt, le); (only 1: now rewrite compare_succ_succ).	0.0175230503082	5
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	18	search with cache (only 1: intuition).	2.87895512581	1627
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.8	search with cache (only 1: apply le_lteq); (only 1: intuition).	0.354186058044	116
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.3.3.0.0.1.0.0	search with cache (only 1: unfold lt); (only 1: revert q r); (only 1: induction p using peano_ind); (only 1: intros q r); (only 1: rewrite 2!add_1_l); (only 1: now rewrite compare_succ_succ); (only 1: intros q r); (only 1: now rewrite 2!add_succ_l, compare_succ_succ).	4.25577998161	1865
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.2.0	search with cache (only 1: unfold lt); (only 1: rewrite 2!(add_comm _ p)); (only 1: rewrite add_compare_mono_l); (only 1: apply iff_refl).	0.0402069091797	23
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.3	search with cache (only 1: unfold lt, le); (only 1: rewrite add_compare_mono_l); (only 1: reflexivity).	0.108249902725	21
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.2.0	search with cache (only 1: unfold le); (only 1: rewrite add_compare_mono_r); (only 1: apply iff_refl).	0.0197198390961	6
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt); (only 1: rewrite 2!(mul_comm _ p)); (only 1: rewrite mul_compare_mono_l); (only 1: apply iff_refl).	0.226964950562	93
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le); (only 1: rewrite mul_compare_mono_l); (only 1: apply iff_refl).	0.0188341140747	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le); (only 1: rewrite mul_compare_mono_r); (only 1: apply iff_refl).	0.0135798454285	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.3	search with cache (only 1: rewrite lt_iff_add); (only 1: now exists q).	0.0162789821625	5
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.1.0	search with cache (only 1: destruct p); (only 1: simpl); (only 1: now rewrite ?add_carry_spec, ?IHp); (only 1: reflexivity); (only 1: reflexivity).	0.119209051132	6
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00942492485046	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.0.0.0	search with cache (only 1: rewrite lt_iff_add); (only 1: intros (r, Hr)); (only 1: exists r); (only 1: now apply sub_mask_pos_iff).	0.040246963501	16
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.3.1.0	search with cache (only 1: unfold sub); (only 1: simpl); (only 1: intros H); (only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0260119438171	8
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.4.0.0	search with cache (only 1: unfold sub); (only 1: simpl); (only 1: intros H); (only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0263669490814	9
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.12	search with cache (only 1: rewrite lt_iff_add); (only 1: split); (only 1: case sub_mask_spec); (only 1: discriminate); (only 1: discriminate); (only 1: intros r Hr _); (only 1: now exists r); (only 1: intros (r, <-)); (only 1: apply sub_mask_add_diag_r).	27.2560999393	17362
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add); (only 1: apply sub_mask_neg_iff).	0.0340008735657	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40	1.0.1.0.9.0.6.2	search with cache (only 1: unfold le, sub); (only 1: case sub_mask_spec); (only 1: auto); (only 1: intros r H); (only 1: contradict H); (only 1: rewrite add_comm); (only 1: apply add_no_neutral); (only 1: auto).	6.7001850605	6885
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.3.0.0.0.0	search with cache (only 1: intros x y H); (only 1: unfold max); (only 1: case compare_spec); (only 1: auto); (only 1: constructor); (only 1: intros H'); (only 1: apply le_nlt in H); (only 1: now elim H).	1.07416081429	386
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	3.0.0.1.0.0.8.1	search with cache (only 1: intros x y H); (only 1: unfold le, min); (only 1: case compare_spec); (only 1: auto); (only 1: intros H'); (only 1: apply le_nlt in H); (only 1: now elim H); (only 1: constructor).	8.46053719521	5464
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	1.14	search with cache (only 1: apply max_l); (only 1: apply le_1_l).	1.70562195778	1611
Coq.PArith.BinPos.Pos.min_1_l	40	1.34	search with cache (only 1: apply min_r || apply min_l); (only 1: apply le_1_l).	0.887206077576	1722
Coq.PArith.BinPos.Pos.min_1_r	40	1.9	search with cache (only 1: apply min_r); (only 1: apply le_1_l).	0.417766809464	336
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.2	search with cache (only 1: rewrite 3!(add_comm _ p)); (only 1: apply min_monotone); (only 1: intros x x'); (only 1: apply add_le_mono_l).	0.026251077652	6
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.26	search with cache (only 1: apply min_monotone); (only 1: intros x x'); (only 1: apply mul_le_mono_l).	2.59242987633	1264
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p)); (only 1: apply min_monotone); (only 1: intros x x'); (only 1: apply mul_le_mono_l).	0.0267429351807	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.2.1.4.2.2.5.2	search with cache (only 1: destruct n); (only 1: simpl); (only 1: easy'); (only 1: simpl); (only 1: induction n as [| n IHn]); (only 1: trivial); (only 1: simpl); (only 1: now rewrite IHn).	1.98150420189	2358
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	3	search with cache (only 1: apply iff_refl).	0.0121610164642	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	0.0.0.1.0.15	search with cache (only 1: intros); (only 1: apply Pos.gt_lt in H); (only 1: unfold Pos.sub); (only 1: destruct (Pos.sub_mask_pos p q H) as (r, U)); (only 1: rewrite U); (only 1: now apply Pos.sub_mask_pos_iff).	1.09319281578	1664
Coq.PArith.BinPos.Dcompare	40	1.1.1.36.7	search with cache (only 1: intros H); (only 1: destruct H); (only 1: now auto); (only 1: now auto); (only 1: now auto).	2.68297410011	3094
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	2.8.4.11.10.25	search with cache (only 1: intros r s); (only 1: intros H x0); (only 1: intro n); (only 1: induction n); (only 1: subst); (only 1: Ltac.reflexivity).	7.78794503212	31005
Coq.Program.Equality.JMeq_eq_refl	40	6	search with cache (only 1: apply UIP).	0.0141050815582	7
Coq.Program.Equality.UIP_refl_refl	40	8	search with cache (only 1: apply UIP).	0.0381128787994	26
Coq.Program.Equality.inj_pairT2_refl	40	22	search with cache (only 1: apply UIP).	0.394639015198	470
Coq.Program.Equality.solution_left	40	12.47	search with cache (only 1: destruct 2); (only 1: trivial).	0.829918146133	3858
Coq.Program.Equality.solution_right	40	1.5.0	search with cache (only 1: intros); (only 1: destruct H); (only 1: assumption).	0.0228309631348	17
Coq.Program.Equality.deletion	40	3.0	search with cache (only 1: intros); (only 1: assumption).	0.0136470794678	5
Coq.Program.Equality.simplification_heq	40	2.7.35.11	search with cache (only 1: intros h1 h2); (only 1: subst); (only 1: apply h1); (only 1: Ltac.reflexivity).	1.11707901955	5004
Coq.Program.Equality.simplification_existT2	40	0.0.50.7.31	search with cache (only 1: intro H); (only 1: intros); (only 1: apply H); (only 1: apply eq_dep_eq); (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	9.12782001495	34539
Coq.Program.Equality.simplification_existT1	40	0.4.5.8.13.65	search with cache (only 1: intro eq_dep_eq); (only 1: intros); (only 1: apply eq_dep_eq); (only 1: dependent rewrite H); (only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT); (only 1: assumption).	14.6981890202	54476
Coq.Program.Equality.simplification_K	40	17.5.9	search with cache (only 1: intros); (only 1: rewrite UIP_refl); (only 1: assumption).	1.05987405777	2504
Coq.Program.Wf.Fix_F_eq	40	0.4.2	search with cache (only 1: intros); (only 1: destruct r using Acc_inv_dep); (only 1: auto).	0.0266270637512	9
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x); (only 1: unfold Fix_sub); (only 1: rewrite <- Fix_F_eq); (only 1: apply F_ext); (only 1: intros); (only 1: apply Fix_F_inv).	0.0340170860291	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep); (only 1: auto).	0.0233769416809	3
Coq.Program.Wf.Fix_F_sub_rect	40	0.9.7.1	search with cache (only 1: intros); (only 1: induction (Rwf x)); (only 1: rewrite <- Fix_F_eq); (only 1: auto).	0.614379167557	617
Coq.Program.Wf.eq_Fix_F_sub	40	0.3.0.5	search with cache (only 1: induction (Rwf x)); (only 1: rewrite F_unfold); (only 1: rewrite F_unfold); (only 1: auto).	0.381285905838	142
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Combinators.compose_id_left	40	13	search with cache (only 1: Ltac.reflexivity).	0.0233929157257	60
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0136640071869	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0126209259033	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0156450271606	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0152068138123	2
Coq.Program.Combinators.prod_curry_uncurry	40	0.36.1.25.1.24.0.10	search with cache (only 1: intro H); (only 1: intros); (only 1: apply functional_extensionality_dep_good); (only 1: intros); (only 1: apply functional_extensionality_dep_good); (only 1: intros); (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end); (only 1: reflexivity).	26.8180029392	138613
Coq.QArith.Qreals.IZR_nz	40	1.4	search with cache (only 1: intros n); (only 1: auto with real).	0.0977258682251	45
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	2.0.0.3.0.0.0.0	search with cache (only 1: induction n); (only 1: simpl); (only 1: rewrite IHn); (only 1: reflexivity); (only 1: simpl); (only 1: rewrite IHn); (only 1: reflexivity); (only 1: reflexivity).	2.38779997826	400
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40	6.0.0.0.0.0.0.0.4.0.0	search with cache (only 1: destruct x as [[| a| a] d]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: destruct (Pos.ggcd a d) as [x [y z]]); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: destruct (Pos.ggcd a d) as [x [y z]]); (only 1: simpl); (only 1: congruence).	35.7636549473	15924
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	6.0.1.2.8.1.0.5	search with cache (only 1: Qc_unfolds); (only 1: fold (this x)); (only 1: repeat rewrite Qred_correct); (only 1: set (a := x)  at 1); (only 1: apply Qabs_case); (only 1: subst a); (only 1: auto); (only 1: apply Qopp_le_compat).	33.7317881584	17278
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.0.0.8	search with cache (only 1: Qc_unfolds); (only 1: fold (this x)); (only 1: repeat rewrite Qred_correct); (only 1: apply Qabs_triangle).	0.226496934891	53
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	5.1.2.0.5	search with cache (only 1: Qc_unfolds); (only 1: fold (this x) (this y) (this (- x)) (this (- y))); (only 1: repeat rewrite Qred_correct); (only 1: rewrite Qabs_Qle_condition); (only 1: intuition).	1.84977388382	939
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	2.3.3.0.0.0.1.1.1	search with cache (only 1: intros x H); (only 1: apply Qabs_case); (only 1: intros H0); (only 1: setoid_replace x with 0); (only 1: reflexivity); (only 1: apply Qle_antisym); (only 1: assumption); (only 1: assumption); (only 1: reflexivity).	10.4096961021	7253
Coq.QArith.Qabs.Qabs_nonneg	40	2.2.2.2	search with cache (only 1: destruct x as [[| xn| xn] xd]); (only 1: abstract (compute; discriminate)); (only 1: abstract (compute; discriminate)); (only 1: abstract (compute; discriminate)).	0.242901086807	132
Coq.QArith.Qabs.Zabs_Qabs	40	4.0.0.0	search with cache (only 1: simpl); (only 1: unfold Qeq in *); (only 1: simpl in *); (only 1: congruence).	0.0283229351044	8
Coq.QArith.Qabs.Qabs_opp	40	4.4.4.1.6	search with cache (only 1: intros x); (only 1: destruct x as [[| xn| xn] xd]); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	8.18426680565	5856
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	2.3.0.1.0.10	search with cache (only 1: intros [xn xd] [yn yd]); (only 1: simpl); (only 1: unfold Qeq in *); (only 1: simpl in *); (only 1: repeat rewrite <- Z.abs_mul); (only 1: congruence).	12.3889081478	6439
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	5.1.0.1.4.1.3	search with cache (only 1: intros x); (only 1: destruct x as [[| xn| xn] xd]); (only 1: abstract (compute; discriminate)); (only 1: unfold Qle); (only 1: simpl); (only 1: auto with *); (only 1: abstract (compute; discriminate)).	6.61074781418	4791
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.2.0.0	search with cache (only 1: intros (q, hq) (q', hq') H); (only 1: simpl in *); (only 1: subst q'); (only 1: f_equal); (only 1: apply eq_proofs_unicity); (only 1: intros); (only 1: repeat decide equality).	0.0847799777985	9
Coq.QArith.Qcanon.Qred_involutive	40	12.4.4	search with cache (only 1: intros); (only 1: apply Qred_complete); (only 1: apply Qred_correct).	9.21383309364	7022
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.1.4	search with cache (only 1: split); (only 1: auto); (only 1: auto).	0.236461877823	81
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	3.3.3.0.2	search with cache (only 1: unfold Qccompare); (only 1: intros); (only 1: split); (only 1: auto); (only 1: auto).	0.900216817856	660
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	47.2	search with cache (only 1: intro H); (only 1: discriminate).	2.23699712753	4685
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	2.2.0.8.0	search with cache (only 1: intros); (only 1: apply Qc_is_canon); (only 1: unfold Q2Qc); (only 1: simpl in *); (only 1: auto with qarith).	1.85362696648	969
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros); (only 1: qc); (only 1: rewrite Qmult_comm); (only 1: apply Qmult_1_l).	0.0412030220032	5
Coq.QArith.Qcanon.Qcmult_comm	40	6.5.1.0	search with cache (only 1: intros); (only 1: qc); (only 1: rewrite Qmult_comm); (only 1: split).	0.558289051056	312
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.2.0.0	search with cache (only 1: intros); (only 1: qc); (only 1: rewrite Qmult_comm); (only 1: apply Qmult_inv_r); (only 1: auto).	0.0472638607025	7
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	4.66.0	search with cache (only 1: intros); (only 1: red); (only 1: auto with qarith).	1.95322299004	8532
Coq.QArith.Qcanon.Qcle_antisym	40	7.0.1	search with cache (only 1: unfold Qcle); (only 1: intros); (only 1: auto with qarith).	0.0974729061127	86
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	3.2.2	search with cache (only 1: unfold Qcle); (only 1: unfold Qclt); (only 1: auto with qarith).	0.0882329940796	81
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.5.0.0	search with cache (only 1: intros); (only 1: eapply Qle_lt_trans); (only 1: apply Qlt_le_weak); (only 1: eauto); (only 1: eauto).	0.533364057541	330
Coq.QArith.Qcanon.Qcnot_lt_le	40	10.0	search with cache (only 1: unfold Qcle, Qclt); (only 1: auto with qarith).	0.317020893097	304
Coq.QArith.Qcanon.Qcnot_le_lt	40	9.1	search with cache (only 1: unfold Qclt); (only 1: auto with qarith).	0.398099899292	335
Coq.QArith.Qcanon.Qclt_not_le	40	1.0.1.1.1	search with cache (only 1: unfold Qclt); (only 1: intros); (only 1: intro); (only 1: destruct (Qlt_not_eq _ _ H)); (only 1: auto with qarith).	0.0654878616333	39
Coq.QArith.Qcanon.Qcle_not_lt	40	11.1	search with cache (only 1: unfold Qclt); (only 1: auto with qarith).	0.558547019958	556
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.14.0	search with cache (only 1: induction n); (only 1: tauto); (only 1: auto with qarith).	1.22825193405	1071
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.4.3.0.0	search with cache (only 1: unfold Qcdiv); (only 1: intros); (only 1: rewrite <- Qcmult_assoc); (only 1: rewrite Qcmult_inv_l); (only 1: apply Qcmult_1_r); (only 1: auto).	0.954112052917	459
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	40.111	search with cache (only 1: simpl in *); (only 1: auto with zarith).	7.63194513321	39208
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.2.2.0.0	search with cache (only 1: intros x); (only 1: apply Qle_trans with (- - x)); (only 1: rewrite Qopp_involutive); (only 1: auto with *); (only 1: change (Qceiling x : Q) with (- Qfloor (- x))); (only 1: auto with *).	0.0629868507385	10
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.1.3	search with cache (only 1: intros x y H); (only 1: apply Z.le_antisymm); (only 1: auto with *); (only 1: symmetry in H); (only 1: auto with *).	2.02543783188	781
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros); (only 1: apply Qred_correct).	0.0141880512238	3
Coq.QArith.Qreduction.Qminus'_correct	40	1.0	search with cache (only 1: intros); (only 1: apply Qred_correct).	0.0134081840515	3
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.1.5.0	search with cache (only 1: intros); (only 1: unfold Qmult'); (only 1: rewrite H, H0); (only 1: auto with qarith).	0.0558559894562	10
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.1.1.1	search with cache (only 1: unfold Qminus'); (only 1: intros); (only 1: rewrite H, H0); (only 1: auto with qarith).	0.0799160003662	18
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.2	search with cache (only 1: intros); (only 1: now rewrite !Qred_correct).	0.819393873215	203
Coq.QArith.Qreduction.Qred_le	40	16	search with cache (only 1: now rewrite !Qred_correct).	5.78281116486	1615
Coq.QArith.Qreduction.Qred_lt	40	17	search with cache (only 1: now rewrite !Qred_correct).	2.76383399963	981
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	3.1.2.0.0.0.0	search with cache (only 1: constructor); (only 1: intros); (only 1: destruct n); (only 1: simpl); (only 1: auto with *); (only 1: simpl); (only 1: reflexivity).	2.89102196693	771
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0100209712982	1
Coq.QArith.Qfield.ex2	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0291209220886	2
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0324680805206	2
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: ring).	0.061812877655	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0168359279633	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0171499252319	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros); (only 1: ring).	0.0311360359192	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro); (only 1: ring).	0.03080701828	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro); (only 1: ring).	0.0313911437988	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.0.0.0	search with cache (only 1: red); (only 1: simpl); (only 1: intro); (only 1: intro); (only 1: ring).	0.0748510360718	6
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red); (only 1: simpl); (only 1: intros); (only 1: ring).	0.0526058673859	4
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	6.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros); (only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p)); (only 1: apply min_monotone); (only 1: intros x x' Hx); (only 1: rewrite Hx); (only 1: auto with qarith); (only 1: intros x x' Hx); (only 1: apply Qplus_le_compat); (only 1: q_order); (only 1: q_order).	28.7862360477	8633
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'); (only 1: rewrite 2!Qlt_alt, H, H'); (only 1: auto with *).	0.0377488136292	3
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	2.1.1.1	search with cache (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: reflexivity).	0.046569108963	11
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: reflexivity).	0.0470519065857	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare); (only 1: now constructor).	0.016261100769	2
Coq.QArith.QArith_base.Qeq_sym	40	1	search with cache (only 1: auto with qarith).	0.0392558574677	19
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	search with cache (only 1: apply Zeq_is_eq_bool).	0.0123610496521	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.012079000473	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0121359825134	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.3	search with cache (only 1: unfold Qeq, Qlt, Qcompare); (only 1: auto with qarith).	0.155735969543	21
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	2.0.0.0.0.0.0.0	search with cache (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: apply Qeq_bool_iff); (only 1: now symmetry).	0.175352096558	14
Coq.QArith.QArith_base.Qeq_bool_sym	40	2.1.2	search with cache (only 1: rewrite !Qeq_bool_iff); (only 1: unfold Qeq, Qlt, Qcompare); (only 1: auto with qarith).	0.142647027969	8
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.1.3.0.2	search with cache (only 1: rewrite !Qeq_bool_iff); (only 1: unfold Qeq); (only 1: intros XY YZ); (only 1: apply Z.mul_reg_r with (QDen y)); (only 1: auto with qarith); (only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.335548877716	95
Coq.QArith.QArith_base.Qmake_Qdiv	40	5.0.0.0	search with cache (only 1: unfold Qeq); (only 1: simpl); (only 1: rewrite !Z.mul_1_r); (only 1: auto with qarith).	0.0351340770721	13
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0	search with cache (only 1: now subst).	0.0214018821716	1
Coq.QArith.QArith_base.Qplus_assoc	40	3.0.0.0.4.2	search with cache (only 1: unfold Qeq, Qplus); (only 1: intros (p1, p2) (q1, q2) EQ); (only 1: simpl in *); (only 1: simpl_mult); (only 1: ring_simplify); (only 1: ring).	4.47800016403	591
Coq.QArith.QArith_base.Qplus_0_l	40	7.27.1.0	search with cache (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: intros); (only 1: ring).	11.7527699471	5513
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: simpl_mult); (only 1: ring).	0.0506529808044	5
Coq.QArith.QArith_base.Qplus_comm	40	0.0.24.0.0.1	search with cache (only 1: intros (x1, x2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: intros); (only 1: simpl_mult); (only 1: ring).	14.5708930492	4930
Coq.QArith.QArith_base.Qopp_involutive	40	3.0.0.1	search with cache (only 1: intros (x1, x2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: ring).	0.362509965897	8
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: ring).	0.0444569587708	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.8	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: simpl_mult); (only 1: ring).	2.38029384613	337
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red); (only 1: simpl in *); (only 1: now subst).	0.0227098464966	3
Coq.QArith.QArith_base.Qmult_0_r	40	4.0.2.0	search with cache (only 1: intros); (only 1: red); (only 1: simpl in *); (only 1: ring).	0.0582180023193	18
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	2.2.5.0.0.0	search with cache (only 1: intro); (only 1: red); (only 1: simpl); (only 1: rewrite Pos.mul_comm); (only 1: simpl); (only 1: ring).	4.41469812393	1422
Coq.QArith.QArith_base.Qmult_comm	40	2.1.0.2.0	search with cache (only 1: intros); (only 1: red); (only 1: simpl); (only 1: rewrite Pos.mul_comm); (only 1: ring).	0.250884056091	18
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.3	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2)); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: simpl_mult); (only 1: ring).	1.71010899544	106
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2)); (only 1: unfold Qeq, Qmult, Qplus); (only 1: simpl); (only 1: simpl_mult); (only 1: ring).	0.0807721614838	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	2.26.1.7.1.0	search with cache (only 1: generalize x, y); (only 1: intros); (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: rewrite !Z.mul_1_r); (only 1: now subst).	20.323264122	23039
Coq.QArith.QArith_base.inject_Z_mult	40	0.3.0	search with cache (only 1: unfold Qplus, inject_Z); (only 1: compute); (only 1: f_equal).	0.0720090866089	6
Coq.QArith.QArith_base.inject_Z_opp	40	4.0	search with cache (only 1: unfold Qplus, inject_Z); (only 1: now subst).	0.019021987915	6
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.1.0.0.0	search with cache (only 1: unfold Qeq, Qplus); (only 1: simpl); (only 1: intros); (only 1: simpl_mult); (only 1: ring).	0.0608739852905	7
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Qeq); (only 1: simpl); (only 1: rewrite Pos2Z.inj_mul); (only 1: ring).	0.0525190830231	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.32	search with cache (only 1: apply Z.ge_le_iff); (only 1: auto with zarith).	0.964112043381	1561
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	0.0.0.0.16	search with cache (only 1: unfold Qle); (only 1: simpl); (only 1: f_equal); (only 1: ring); (only 1: ring).	0.785631895065	768
Coq.QArith.QArith_base.Zlt_Qlt	40	1.0.6	search with cache (only 1: unfold Qeq, Qlt, Qcompare); (only 1: simpl); (only 1: now rewrite !Z.mul_1_r).	0.0554001331329	20
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	15	search with cache (only 1: apply Z.ge_le_iff).	0.218789815903	145
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0136501789093	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.0129730701447	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	1.1.3.1.0.1.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y)); (only 1: split); (only 1: intro); (only 1: now apply Qmult_lt_0_le_reg_r with z); (only 1: intro); (only 1: apply Qmult_le_compat_r); (only 1: auto with qarith); (only 1: auto with qarith).	9.35474085808	3437
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40	6.0.0.1.0.1.0.1	search with cache (only 1: unfold Qle, Qlt); (only 1: simpl); (only 1: intro); (only 1: rewrite Z.mul_1_r); (only 1: intro); (only 1: rewrite Z.mul_1_r); (only 1: rewrite Z.mul_1_r); (only 1: now apply Z.mul_nonneg_nonneg).	13.9208300114	5543
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.5	search with cache (only 1: intros [[| n| n] d] Ha); (only 1: assumption); (only 1: assumption); (only 1: assumption).	0.028881072998	9
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	4.0	search with cache (only 1: intros f a b); (only 1: split).	0.0232920646667	6
Coq.Reals.NewtonInt.NewtonInt_P1	40	14	search with cache (only 1: shelve).	4.89732885361	592
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	16	search with cache (only 1: shelve).	6.49129700661	2024
Coq.Reals.NewtonInt.NewtonInt_P4	40	24	search with cache (only 1: shelve).	8.15713000298	8137
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40	14	search with cache (only 1: shelve).	0.716471910477	832
Coq.Reals.NewtonInt.NewtonInt_P8	40	27	search with cache (only 1: shelve).	4.73412489891	3015
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Machin.atan_sub_correct	40	90	search with cache (only 1: shelve).	28.8447179794	30576
Coq.Reals.Machin.tech	40	46	search with cache (only 1: shelve).	6.60031986237	4969
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	6.0.9	search with cache (only 1: intros); (only 1: unfold Rdiv); (only 1: lra).	0.94702911377	778
Coq.Reals.Ratan.pos_opp_lt	40	4.0	search with cache (only 1: intros x h); (only 1: lra).	0.0185060501099	6
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.tan_atan	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_eq0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.atan_tan	40
Coq.Reals.Ratan.atan_inv	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	2.0.0	search with cache (only 1: intros x n); (only 1: unfold Datan_seq); (only 1: apply pow_lt).	0.0160250663757	5
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.1.0.4.0.15	search with cache (only 1: symmetry); (only 1: unfold Ratan_seq, PI_tg); (only 1: rewrite pow1); (only 1: unfold Rdiv); (only 1: rewrite Rmult_1_l); (only 1: ring).	5.79303693771	3254
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ratan.sin_atan	40
Coq.Reals.Ratan.cos_atan	40
Coq.Reals.Ratan.asin_atan	40
Coq.Reals.Ratan.asin_0	40
Coq.Reals.Ratan.asin_1	40	3.0.1.0.7	search with cache (only 1: unfold asin); (only 1: repeat case Rle_dec); (only 1: lra); (only 1: lra); (only 1: lra).	3.64032411575	2112
Coq.Reals.Ratan.asin_inv_sqrt2	40
Coq.Reals.Ratan.asin_opp	40
Coq.Reals.Ratan.asin_bound	40
Coq.Reals.Ratan.asin_bound_lt	40	0.2.0.0.0.0.0	search with cache (only 1: intros x); (only 1: unfold asin); (only 1: repeat case Rle_dec); (only 1: lra); (only 1: lra); (only 1: pose proof (atan_bound (x / sqrt (1 - x²)))); (only 1: lra).	0.072093963623	9
Coq.Reals.Ratan.sin_asin	40
Coq.Reals.Ratan.asin_sin	40
Coq.Reals.Ratan.cos_asin	40
Coq.Reals.Ratan.tan_asin	40
Coq.Reals.Ratan.derivable_pt_asin	40
Coq.Reals.Ratan.derive_pt_asin	40
Coq.Reals.Ratan.acos_atan	40
Coq.Reals.Ratan.acos_asin	40	15	search with cache (only 1: shelve).	0.390774965286	232
Coq.Reals.Ratan.asin_acos	40	0.0.0.0.2.1.3.0	search with cache (only 1: intros x); (only 1: pose proof (asin_bound x)); (only 1: unfold acos, asin); (only 1: pose proof (atan_bound (x / sqrt (1 - x²)))); (only 1: repeat case Rle_dec); (only 1: lra); (only 1: lra); (only 1: lra).	1.9588701725	879
Coq.Reals.Ratan.acos_0	40
Coq.Reals.Ratan.acos_1	40	6.11.0.0.0	search with cache (only 1: unfold acos); (only 1: repeat case Rle_dec); (only 1: lra); (only 1: reflexivity); (only 1: lra).	1.11968398094	1409
Coq.Reals.Ratan.acos_opp	40
Coq.Reals.Ratan.acos_inv_sqrt2	40
Coq.Reals.Ratan.acos_bound	40
Coq.Reals.Ratan.acos_bound_lt	40	3	search with cache (only 1: shelve).	0.749197006226	187
Coq.Reals.Ratan.cos_acos	40
Coq.Reals.Ratan.acos_cos	40
Coq.Reals.Ratan.sin_acos	40
Coq.Reals.Ratan.tan_acos	40
Coq.Reals.Ratan.derivable_pt_acos	40
Coq.Reals.Ratan.derive_pt_acos	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	7.15	search with cache (only 1: intros eps0 eps0_pos); (only 1: intuition).	0.379878044128	550
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	7.15	search with cache (only 1: intros eps0 eps0_pos); (only 1: intuition).	0.464205026627	550
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	58	search with cache (only 1: auto with real).	1.54576802254	4325
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	12	search with cache (only 1: reflexivity).	0.048840045929	88
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40
Coq.Reals.Rtrigo_facts.sin_pi_plus	40
Coq.Reals.Rtrigo_facts.cos_pi_minus	40
Coq.Reals.Rtrigo_facts.cos_pi_plus	40
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40	0.1.5.2.6.0.0	search with cache (only 1: intros x H); (only 1: unfold tan); (only 1: rewrite sin_plus, cos_PI, sin_PI); (only 1: rewrite cos_plus, cos_PI, sin_PI); (only 1: field); (only 1: pose proof (Rle_0_sqr (tan x))); (only 1: lra).	16.1851899624	9637
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	5.2.16.1	search with cache (only 1: apply exp_inv); (only 1: rewrite exp_0); (only 1: apply exp_ln); (only 1: apply Rlt_0_1).	1.78900003433	2640
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	6.16.13.1	search with cache (only 1: unfold Rpower); (only 1: intros H1); (only 1: rewrite Rmult_1_l); (only 1: apply exp_ln).	3.3541932106	6447
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	0.1.2.0.1	search with cache (only 1: intros x Hx); (only 1: apply exp_inv); (only 1: unfold Rpower); (only 1: rewrite ln_exp); (only 1: auto).	0.0586240291595	25
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.4.0.3.2.1.0.4.5.0.0	search with cache (only 1: intros f g D l x H); (only 1: unfold limit1_in, limit_in); (only 1: intros H0 eps H1); (only 1: case (H0 eps)); (only 1: auto); (only 1: intros x0 [H2 H3]); (only 1: exists x0); (only 1: split); (only 1: auto); (only 1: intros x1 [H4 H5]); (only 1: auto).	18.3851499557	22061
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.1.5.0.0	search with cache (only 1: intros f g D D1 x H); (only 1: unfold D_in); (only 1: unfold limit1_in, limit_in); (only 1: rewrite <- H); (only 1: auto).	0.248292922974	156
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	1.2.0.0.0.3.0.2.0	search with cache (only 1: intro); (only 1: induction N as [| N HrecN]); (only 1: reflexivity); (only 1: replace (2 * S N)%nat with (S (S (2 * N)))); (only 1: simpl); (only 1: simpl in HrecN); (only 1: rewrite HrecN); (only 1: reflexivity); (only 1: ring).	4.08269691467	2600
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.1.0.0.0.1.1.15.0	search with cache (only 1: intros); (only 1: intro); (only 1: unfold derivable_pt); (only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H); (only 1: induction N as [| N HrecN]); (only 1: exists 0); (only 1: apply H); (only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N)))); (only 1: apply H).	20.6906249523	9695
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.3	search with cache (only 1: intro x); (only 1: unfold derivable_pt); (only 1: exists (exp x)); (only 1: apply derivable_pt_lim_exp).	0.0216119289398	7
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.4	search with cache (only 1: intro); (only 1: unfold derivable_pt); (only 1: exists (sinh x)); (only 1: apply derivable_pt_lim_cosh).	0.211066007614	43
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.3	search with cache (only 1: intro); (only 1: unfold derivable_pt); (only 1: exists (cosh x)); (only 1: apply derivable_pt_lim_sinh).	0.20848107338	62
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	2.2.0	search with cache (only 1: intros); (only 1: apply derive_pt_eq_0); (only 1: apply derivable_pt_lim_cosh).	1.01219987869	210
Coq.Reals.Ranalysis4.derive_pt_sinh	40	3.0.0	search with cache (only 1: intro); (only 1: apply derive_pt_eq_0); (only 1: apply derivable_pt_lim_sinh).	0.563410997391	111
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x); (only 1: rewrite <- (sin2_cos2 x)); (only 1: ring).	0.127793073654	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.10.0	search with cache (only 1: unfold PI); (only 1: destruct pi2_int); (only 1: lra).	6.29742789268	1049
Coq.Reals.Rtrigo1.PI_4	40	0.3.1.1.0	search with cache (only 1: unfold PI); (only 1: generalize cos_pi2); (only 1: generalize cos_pi2); (only 1: destruct pi2_int); (only 1: lra).	0.112061023712	14
Coq.Reals.Rtrigo1.PI_neq0	40	0.2.1.1.0.0	search with cache (only 1: unfold PI); (only 1: generalize cos_pi2); (only 1: generalize cos_pi2); (only 1: generalize cos_pi2); (only 1: destruct pi2_int); (only 1: lra).	0.120525121689	12
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.4.0.0.0	search with cache (only 1: intro x); (only 1: rewrite cos_plus); (only 1: rewrite sin_PI2); (only 1: rewrite cos_PI2); (only 1: ring).	0.0471079349518	9
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	5.3.9.0.0	search with cache (only 1: intro x); (only 1: rewrite double); (only 1: unfold Rminus); (only 1: rewrite cos_plus); (only 1: ring).	0.886008024216	1069
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	2.0.1.0.2.4.4.0.5	search with cache (only 1: unfold Rminus); (only 1: intro x); (only 1: rewrite double); (only 1: rewrite cos_plus); (only 1: generalize (sin2_cos2 x)); (only 1: rewrite double); (only 1: intro H1); (only 1: rewrite <- H1); (only 1: ring_Rsqr).	23.0935578346	13263
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	4.13.0	search with cache (only 1: intro x); (only 1: rewrite sin_antisym); (only 1: ring).	32.6059889793	9001
Coq.Reals.Rtrigo1.cos_neg	40	13.1.3	search with cache (only 1: intro x); (only 1: rewrite <- cos_sym); (only 1: reflexivity).	38.5363559723	13265
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.0.1	search with cache (only 1: rewrite double); (only 1: rewrite sin_plus); (only 1: rewrite sin_PI); (only 1: ring).	0.0895118713379	6
Coq.Reals.Rtrigo1.cos_2PI	40	0.2.0.0.2	search with cache (only 1: repeat rewrite double); (only 1: rewrite cos_plus); (only 1: rewrite sin_PI); (only 1: rewrite cos_PI); (only 1: ring).	0.327222824097	112
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.4.0	search with cache (only 1: intro x); (only 1: rewrite sin_plus); (only 1: rewrite sin_PI); (only 1: rewrite cos_PI); (only 1: ring).	0.100358009338	27
Coq.Reals.Rtrigo1.sin_PI_x	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Rminus); (only 1: rewrite sin_plus); (only 1: rewrite sin_PI); (only 1: rewrite cos_PI); (only 1: rewrite <- cos_sym); (only 1: rewrite sin_antisym); (only 1: ring).	0.0523099899292	9
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40	4.1.0.0.12.2	search with cache (only 1: intro x); (only 1: rewrite sin_minus); (only 1: rewrite sin_PI2); (only 1: rewrite cos_PI2); (only 1: rewrite Rmult_1_l); (only 1: ring).	11.8384768963	6741
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro x); (only 1: rewrite (sin_cos (PI / 2 + x))); (only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI)); (only 1: rewrite cos_plus); (only 1: rewrite sin_PI); (only 1: rewrite cos_PI); (only 1: ring); (only 1: pattern PI at 1); (only 1: rewrite (double_var PI)); (only 1: ring).	1.29611086845	321
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.3	search with cache (only 1: unfold PI); (only 1: destruct pi2_int); (only 1: lra).	0.207548141479	36
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.1.3.47	search with cache (only 1: prove_sup); (only 1: destruct pi2_int); (only 1: lra); (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.560608148575	1620
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.3.44.5	search with cache (only 1: change 4 with 2²); (only 1: pose proof PI_RGT_0 as H); (only 1: unfold Rsqr); (only 1: lra).	2.36965107918	7467
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.5	search with cache (only 1: pose proof PI_RGT_0 as H); (only 1: lra).	0.0228068828583	15
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros p q); (only 1: pattern p at 1); (only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field); (only 1: rewrite <- (cos_neg q)); (only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field); (only 1: rewrite cos_plus); (only 1: rewrite cos_minus); (only 1: ring).	0.123506784439	13
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40	12.3.1.9	search with cache (only 1: rewrite sin_PI3_cos_PI6); (only 1: rewrite cos_PI6); (only 1: unfold Rdiv); (only 1: ring).	23.8290381432	14454
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.4.2.0.0.5.1.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field); (only 1: rewrite sin_plus); (only 1: rewrite cos_PI4); (only 1: rewrite sin_PI); (only 1: rewrite cos_PI); (only 1: rewrite sin_PI4); (only 1: unfold Rdiv); (only 1: ring).	9.8277258873	3302
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.0.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field); (only 1: rewrite neg_cos); (only 1: rewrite cos_PI4); (only 1: rewrite neg_sin); (only 1: rewrite sin_PI4); (only 1: unfold Rdiv); (only 1: ring).	0.0507199764252	7
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	1.18.8	search with cache (only 1: apply Rmult_lt_0_compat); (only 1: prove_sup); (only 1: apply PI_RGT_0).	7.36257100105	5693
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.2.14.41	search with cache (only 1: set (r := {| pos := _; cond_pos := Rlt_0_1 |})); (only 1: intro); (only 1: unfold derivable_pt); (only 1: exists (cos x)); (only 1: apply derivable_pt_lim_sin).	1.00753903389	2422
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable); (only 1: unfold derivable_pt); (only 1: intro); (only 1: exists (- sin x)); (only 1: apply derivable_pt_lim_cos).	0.0317678451538	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.0.5.0.0.36.31.20	search with cache (only 1: intro); (only 1: intro X); (only 1: elim X); (only 1: simpl); (only 1: ring); (only 1: intros); (only 1: simpl); (only 1: ring).	10.6209280491	28857
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.1.0.10.0	search with cache (only 1: intro); (only 1: apply Rmult_integral_contrapositive_currified); (only 1: apply pow_nonzero); (only 1: discrR); (only 1: apply Rinv_neq_0_compat); (only 1: apply INR_fact_neq_0).	5.34186387062	2175
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.3.0.5.1.0.0	search with cache (only 1: intro); (only 1: unfold sin_n); (only 1: unfold Rdiv); (only 1: apply Rmult_integral_contrapositive_currified); (only 1: apply pow_nonzero); (only 1: discrR); (only 1: apply Rinv_neq_0_compat); (only 1: apply INR_fact_neq_0).	5.02771306038	1813
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.4.0.0.0	search with cache (only 1: intros x); (only 1: unfold sqrt); (only 1: destruct (Rcase_abs x) as [H| H]); (only 1: auto with real); (only 1: intros); (only 1: apply Rsqrt_positivity).	0.239317893982	153
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros); (only 1: apply (sqrt_sqrt x H)).	0.0246608257294	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold Rsqr); (only 1: intros); (only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H)); (only 1: unfold Rsqr); (only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0393919944763	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.12.0.1	search with cache (only 1: simpl); (only 1: intros); (only 1: rewrite Rmult_1_r); (only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H)); (only 1: unfold Rsqr); (only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	1.49636697769	999
Coq.Reals.R_sqrt.pow2_sqrt	40	1.20.0.1	search with cache (only 1: intros); (only 1: simpl); (only 1: rewrite Rmult_1_r); (only 1: apply (sqrt_sqrt x H)).	15.7731120586	9007
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr); (only 1: intros); (only 1: apply (sqrt_sqrt x H)).	0.0287070274353	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	6.0.6.2.35	search with cache (only 1: intros); (only 1: apply Rmult_lt_0_compat); (only 1: auto with real); (only 1: apply Rinv_0_lt_compat); (only 1: auto with real).	2.08083200455	3292
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	1.0.41	search with cache (only 1: intros); (only 1: apply pow_nonzero); (only 1: discrR).	0.460760831833	1028
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	2.1.2.1.3.0.2.5.3	search with cache (only 1: intros); (only 1: induction n as [| n Hrecn]); (only 1: assumption); (only 1: simpl); (only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]); (only 1: rewrite Heq); (only 1: assumption); (only 1: rewrite Heq); (only 1: assumption).	6.17059397697	3568
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros); (only 1: assumption || ring).	0.0408868789673	2
Coq.Reals.Ranalysis2.quadruple_var	40	28.1	search with cache (only 1: intro); (only 1: field).	5.85694217682	2622
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	14.1	search with cache (only 1: unfold included); (only 1: auto).	0.609705924988	1332
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	2.3.3	search with cache (only 1: unfold included); (only 1: intros P exnot allP); (only 1: auto).	0.15972495079	190
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	3.3.1.20.4.2.0	search with cache (only 1: intros); (only 1: unfold intersection_domain); (only 1: intro); (only 1: elim H); (only 1: intros); (only 1: apply H0); (only 1: apply H0).	8.96765899658	19736
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	8.0.3.2	search with cache (only 1: unfold open_set, complementary, point_adherent); (only 1: intro); (only 1: intro); (only 1: elim H).	0.342568159103	639
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	4.1.4.1.0.0.0.0.2.1.4	search with cache (only 1: intros eps H9); (only 1: intros M H7); (only 1: unfold is_lub in H7); (only 1: elim H7); (only 1: elim H7); (only 1: elim H7); (only 1: elim H7); (only 1: clear H7); (only 1: intros); (only 1: elim H7); (only 1: auto with real).	13.4526751041	11863
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: elim (Nat.lt_irrefl _ H)); (only 1: reflexivity).	0.405745029449	215
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: ring); (only 1: do 3 rewrite tech5); (only 1: rewrite HrecN); (only 1: ring).	0.0874381065369	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.1.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct); (only 1: unfold continue_in); (only 1: intros); (only 1: apply limit_plus); (only 1: assumption); (only 1: apply limit_Ropp); (only 1: assumption).	0.049968957901	10
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	7.1.1.0	search with cache (only 1: unfold continuity_pt, mult_fct); (only 1: unfold inv_fct); (only 1: intros); (only 1: auto).	4.19494795799	330
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.4.0.3.0	search with cache (only 1: intros); (only 1: apply limit_mul); (only 1: assumption); (only 1: apply limit_inv); (only 1: assumption); (only 1: assumption).	0.894098043442	192
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.3.0.0.1.0.4.0	search with cache (only 1: intros); (only 1: pose proof (proj2_sig pr) as H1); (only 1: unfold derivable_pt_abs in H1); (only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2); (only 1: unfold derive_pt); (only 1: unfold derivable_pt_abs); (only 1: symmetry); (only 1: assumption).	4.63857722282	1329
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.6.0	search with cache (only 1: intros); (only 1: pose proof (proj2_sig pr) as H1); (only 1: unfold derive_pt in H); (only 1: rewrite H in H1); (only 1: assumption).	0.269116163254	164
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	3.4.1.2	search with cache (only 1: unfold derivable_pt); (only 1: intros f1 f2 x X X0); (only 1: elim X); (only 1: assumption).	0.848331928253	797
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	3.0.3.0.1.11.1.0.0.0	search with cache (only 1: intros f x H); (only 1: unfold derivable_pt in H); (only 1: destruct H as [l H]); (only 1: exists (- l)); (only 1: apply derivable_pt_lim_ext with (f := fun x => - - f x)); (only 1: intros); (only 1: rewrite Ropp_involutive); (only 1: reflexivity); (only 1: apply derivable_pt_lim_opp); (only 1: assumption).	5.79157590866	8277
Coq.Reals.Ranalysis1.derivable_pt_mirr	40	2.2.2.1.1.2.16.1	search with cache (only 1: intros); (only 1: destruct H as [l H]); (only 1: exists (- l)); (only 1: apply derivable_pt_lim_opp_rev); (only 1: apply derivable_pt_lim_opp); (only 1: apply derivable_pt_lim_mirr_fwd); (only 1: rewrite Ropp_involutive); (only 1: assumption).	13.4558780193	13636
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	4.1.0.3.0.0.0.12.1.0.0.0	search with cache (only 1: intros f x H); (only 1: unfold derivable_pt in H); (only 1: destruct H as [l H]); (only 1: exists (- l)); (only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x))); (only 1: intros); (only 1: unfold mirr_fct); (only 1: rewrite Ropp_involutive); (only 1: reflexivity); (only 1: apply derivable_pt_lim_mirr_fwd); (only 1: rewrite Ropp_involutive); (only 1: assumption).	20.2201430798	23073
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros f x H); (only 1: unfold derivable_pt in H); (only 1: destruct H as [l H]); (only 1: exists (- l)); (only 1: apply derivable_pt_lim_mirr_rev); (only 1: rewrite Ropp_involutive); (only 1: rewrite Ropp_involutive); (only 1: assumption).	0.0284869670868	9
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity); (only 1: unfold derivable_pt); (only 1: intro); (only 1: exists 1); (only 1: apply derivable_pt_lim_id).	0.0149641036987	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.2.0	search with cache (only 1: intros); (only 1: exists 0); (only 1: apply derivable_pt_lim_const).	0.0120859146118	5
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.3	search with cache (only 1: intro); (only 1: unfold derivable_pt); (only 1: exists (2 * x)); (only 1: apply derivable_pt_lim_Rsqr).	0.0216619968414	19
Coq.Reals.Ranalysis1.derive_pt_id	40	6.66.4	search with cache (only 1: intro); (only 1: apply derive_pt_eq_0); (only 1: apply derivable_pt_lim_id).	12.7071859837	41572
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40	5.13.1.0.4.0	search with cache (only 1: intros); (only 1: apply derive_pt_eq_0); (only 1: apply derivable_pt_lim_opp_fwd); (only 1: pose proof (proj2_sig pr1) as H3); (only 1: rewrite Ropp_involutive); (only 1: assumption).	7.33517694473	9595
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40	1.0.0.5.0.0	search with cache (only 1: intros); (only 1: apply derive_pt_eq_0); (only 1: apply derivable_pt_lim_mirr_fwd); (only 1: rewrite Ropp_involutive); (only 1: apply (derive_pt_eq_1 _ _ _ pr1)); (only 1: reflexivity).	0.387778043747	292
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	2.0.0.0.0.0.0.0.0.0.1.17.2.0	search with cache (only 1: intros); (only 1: unfold mult_real_fct, mult_fct, fct_cte); (only 1: apply derive_pt_eq_0); (only 1: unfold fct_cte, derivable_pt_lim); (only 1: intros); (only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}); (only 1: intros); (only 1: unfold Rminus); (only 1: rewrite Rplus_opp_r); (only 1: unfold Rdiv); (only 1: rewrite Rmult_0_l); (only 1: rewrite Rplus_opp_r); (only 1: rewrite Rabs_R0); (only 1: assumption).	10.5474379063	11195
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.14.7	search with cache (only 1: intros); (only 1: intro); (only 1: unfold derivable_pt); (only 1: exists (INR n * x ^ Init.Nat.pred n)); (only 1: apply derivable_pt_lim_pow).	0.657184839249	1188
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	3.9	search with cache (only 1: simpl); (only 1: lia).	0.103672027588	107
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.1.1.0	search with cache (only 1: intros low high k H1 H2); (only 1: symmetry); (only 1: symmetry); (only 1: rewrite (sigma_split H1 H2)); (only 1: ring).	0.101459980011	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.2.0.0.0.0.3	search with cache (only 1: intros); (only 1: unfold sigma); (only 1: rewrite <- minus_n_n); (only 1: simpl); (only 1: replace (low + 0)%nat with low); (only 1: reflexivity); (only 1: ring).	0.157387971878	98
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0230441093445	3
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	6.0	search with cache (only 1: intros); (only 1: assumption).	0.0249619483948	8
Coq.Reals.PartSum.scal_sum	40	9.4.0.0.0.0.0.1.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: ring); (only 1: rewrite tech5); (only 1: rewrite Rmult_plus_distr_l); (only 1: rewrite tech5); (only 1: rewrite HrecN); (only 1: ring).	1.86857414246	1676
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.3.3.3.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: ring); (only 1: do 3 rewrite tech5); (only 1: rewrite HrecN); (only 1: ring).	1.11288404465	753
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.1.0.1.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: unfold Rminus, SeqProp.opp_seq); (only 1: reflexivity); (only 1: do 3 rewrite tech5); (only 1: rewrite HrecN); (only 1: ring).	0.822778940201	282
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	2.1.1.8.5.11.0.0.4.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: ring); (only 1: rewrite tech5); (only 1: rewrite HrecN); (only 1: simpl); (only 1: rewrite Rmult_plus_distr_l); (only 1: rewrite Rmult_1_r); (only 1: ring).	15.934898138	8405
Coq.Reals.PartSum.sum_growing	40	5.2.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: apply H); (only 1: do 2 rewrite tech5); (only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N))); (only 1: apply Rplus_le_compat_l); (only 1: apply H); (only 1: do 2 rewrite <- (Rplus_comm (Bn (S N)))); (only 1: apply Rplus_le_compat_l); (only 1: assumption).	11.0164070129	3508
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: induction N as [| N HrecN]); (only 1: simpl); (only 1: right); (only 1: reflexivity); (only 1: do 2 rewrite tech5); (only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N)))); (only 1: apply Rabs_triang); (only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N))))); (only 1: apply Rplus_le_compat_l); (only 1: apply HrecN).	10.8862140179	4314
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.6.8.6.4.0	search with cache (only 1: intro); (only 1: intros Eq1); (only 1: red); (only 1: apply Rmult_lt_0_compat); (only 1: auto with real); (only 1: apply Rinv_0_lt_compat); (only 1: auto with real).	3.40682816505	4272
Coq.Reals.Rlimit.eps2	40	0.0	search with cache (only 1: intros); (only 1: lra).	0.0253629684448	2
Coq.Reals.Rlimit.eps4	40	4.0	search with cache (only 1: intro esp); (only 1: lra).	0.027134180069	6
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros); (only 1: lra).	0.0262589454651	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros); (only 1: lra).	0.0262398719788	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	1.0.0.1.0.2.0.7.2.5.0	search with cache (only 1: intros); (only 1: elim H); (only 1: intros); (only 1: exists x); (only 1: unfold is_upper_bound); (only 1: intros); (only 1: apply H0); (only 1: elim H1); (only 1: intros); (only 1: exists (k + x1)%nat); (only 1: assumption).	4.24940705299	4060
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	3.1.2.12.2	search with cache (only 1: intros); (only 1: elim H); (only 1: auto with real); (only 1: intros n0); (only 1: auto with real).	1.38183188438	1124
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	1.11.3.12.5.0.3.1	search with cache (only 1: simple induction l); (only 1: reflexivity); (only 1: intros); (only 1: simpl); (only 1: apply INR_eq); (only 1: simpl); (only 1: rewrite H); (only 1: ring).	10.7048201561	20211
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	1.8.0	search with cache (only 1: intros); (only 1: elim H); (only 1: reflexivity).	0.141315937042	113
Coq.Reals.RList.RList_P22	40	1.2.3.9.0	search with cache (only 1: intros); (only 1: induction l1 as [| r l1 Hrecl1]); (only 1: elim H); (only 1: reflexivity); (only 1: reflexivity).	0.380244016647	473
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40	2.2.6.2	search with cache (only 1: unfold EUn); (only 1: intros N); (only 1: exists N); (only 1: trivial).	1.12191581726	846
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	6.6.1.2.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep); (only 1: destruct (cvfk eps ep) as [N Pn]); (only 1: exists (N + k)%nat); (only 1: intros n nN); (only 1: apply Pn); (only 1: apply Nat.le_trans with (N + k)%nat); (only 1: auto with arith); (only 1: auto with arith).	2.12097907066	2095
Coq.Reals.Rseries.Un_growing_shift	40	6.7.11.26.19	search with cache (only 1: intros N); (only 1: intros H5); (only 1: intros n nN); (only 1: simpl); (only 1: now ring_simplify).	4.25208592415	10248
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.2.17	search with cache (only 1: simpl); (only 1: intro); (only 1: ring).	0.414129972458	526
Coq.Reals.Rfunctions.simpl_fact	40	4.50	search with cache (only 1: fix ind_0_1_SS 1); (only 1: assumption).	4.0264852047	7896
Coq.Reals.Rfunctions.pow_O	40	37	search with cache (only 1: split).	0.341392993927	849
Coq.Reals.Rfunctions.pow_1	40	18.2	search with cache (only 1: intro); (only 1: ring).	0.263763904572	394
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	0.0.3.5.5	search with cache (only 1: intros x n); (only 1: elim n); (only 1: auto with real); (only 1: simpl); (only 1: auto with real).	6.59474992752	603
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.1	search with cache (only 1: simpl); (only 1: auto with real).	0.0183069705963	4
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.0.1.2.10.13	search with cache (only 1: intros x y n); (only 1: induction n); (only 1: simpl); (only 1: ring); (only 1: simpl); (only 1: ring).	11.5062501431	7980
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	2.3.1.0.2.0.3	search with cache (only 1: simple induction n); (only 1: simpl); (only 1: auto with real rorders); (only 1: intros); (only 1: simpl); (only 1: rewrite H); (only 1: ring).	2.13489294052	1061
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.38.4.0	search with cache (only 1: intros); (only 1: simpl); (only 1: rewrite Rmult_1_r); (only 1: reflexivity).	5.50048899651	7435
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	3	search with cache (only 1: auto with real).	0.0169489383698	4
Coq.Reals.Rfunctions.powerRZ_1	40	0.7	search with cache (only 1: simpl); (only 1: auto with real).	0.0463848114014	22
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.7.3.6.3.1.1	search with cache (only 1: destruct z); (only 1: simpl); (only 1: auto with real); (only 1: simpl); (only 1: auto with real); (only 1: simpl); (only 1: auto with real).	19.3575899601	14682
Coq.Reals.Rfunctions.powerRZ_le	40	1.2.1.2.0.1.0.0.0	search with cache (only 1: intros x z); (only 1: case z); (only 1: simpl); (only 1: left); (only 1: auto with real); (only 1: simpl); (only 1: auto with real); (only 1: simpl); (only 1: auto with real).	6.78532505035	3183
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.0.0.0.2.0.15	search with cache (only 1: case n); (only 1: simpl); (only 1: auto with real rorders); (only 1: simpl); (only 1: intros m2); (only 1: rewrite SuccNat2Pos.id_succ); (only 1: auto).	0.702889919281	329
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	5.9.0.0.0	search with cache (only 1: unfold R_dist); (only 1: intros); (only 1: split_Rabs); (only 1: ring); (only 1: ring).	0.92900800705	1151
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rminmax.Rmax_l	40	1.1.2.0.0.0	search with cache (only 1: intros); (only 1: apply Rmax_case_strong); (only 1: destruct H); (only 1: auto); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.109613895416	15
Coq.Reals.Rminmax.Rmax_r	40	1.1.2.0.0.0	search with cache (only 1: intros); (only 1: apply Rmax_case_strong); (only 1: destruct H); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0520598888397	15
Coq.Reals.Rminmax.Rmin_l	40	1.2.1.0.0	search with cache (only 1: intros); (only 1: apply Rmin_case_strong); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: intros); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0804669857025	38
Coq.Reals.Rminmax.Rmin_r	40	1.1.2.0.0	search with cache (only 1: intros); (only 1: apply Rmin_case_strong); (only 1: intros); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0695340633392	26
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.3.0	search with cache (only 1: intros); (only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p)); (only 1: apply min_monotone); (only 1: intros x y); (only 1: apply Rplus_le_compat_l).	0.0314888954163	8
Coq.Reals.Rminmax.R.opp_max_distr	40	0.1.0.0	search with cache (only 1: intros x y); (only 1: apply Rmax_case_strong); (only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]); (only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0321781635284	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y); (only 1: apply Rmin_case_strong); (only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]); (only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0342240333557	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.ArithProp.minus_neq_O	40	1.22	search with cache (only 1: fix even_odd_double 1); (only 1: auto with arith).	1.32625699043	1934
Coq.Reals.ArithProp.le_minusni_n	40	13.20	search with cache (only 1: fix even_equiv 1); (only 1: assumption).	18.5406320095	34385
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	6.25	search with cache (only 1: fix ind_0_1_SS 1); (only 1: auto with arith).	0.854980945587	1917
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	9.17	search with cache (only 1: fix ind_0_1_SS 1); (only 1: assumption).	32.1785960197	42028
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	0.0	search with cache (only 1: intros); (only 1: ring_Rsqr).	0.116461038589	2
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros); (only 1: ring_Rsqr).	0.0346150398254	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros); (only 1: ring_Rsqr).	0.0348088741302	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros); (only 1: ring_Rsqr).	0.0296258926392	2
Coq.Reals.R_sqr.Rsqr_1	40	1	search with cache (only 1: ring_Rsqr).	0.0224039554596	2
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	6.0.0	search with cache (only 1: intros); (only 1: unfold Rminus); (only 1: ring_Rsqr).	0.0394060611725	9
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros); (only 1: ring_Rsqr).	0.0333681106567	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	1.0.1	search with cache (only 1: unfold Rsqr); (only 1: intros p q r H); (only 1: auto with real).	0.100365161896	28
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	9.0.0.4.1	search with cache (only 1: intros); (only 1: unfold Rabs); (only 1: destruct (Rcase_abs x) as [Hltx| Hgex]); (only 1: ring_Rsqr); (only 1: ring_Rsqr).	12.984236002	8962
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.0.6.2	search with cache (only 1: unfold Rsqr); (only 1: intros); (only 1: rewrite Rinv_mult_distr); (only 1: apply Rmult_eq_compat_l); (only 1: auto); (only 1: auto); (only 1: auto).	0.413316965103	452
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.2.0.0.0.2.0	search with cache (only 1: intros); (only 1: destruct (total_order_T r1 r2) as [[H| ]| H]); (only 1: right); (only 1: auto with real); (only 1: left); (only 1: auto with real); (only 1: right); (only 1: auto with real).	3.22599697113	352
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	4	search with cache (only 1: auto with *).	0.0363531112671	5
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	3.1.1	search with cache (only 1: intuition eauto); (only 1: auto with real); (only 1: auto with real).	0.0374608039856	17
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Rmin); (only 1: case (Rle_dec x y)); (only 1: auto with real); (only 1: auto with real).	0.0297610759735	5
Coq.Reals.Rbasic_fun.Rmin_left	40	0.0.0.0.1	search with cache (only 1: intros); (only 1: unfold Rmin); (only 1: case (Rle_dec x y)); (only 1: reflexivity); (only 1: auto with real).	0.0357730388641	6
Coq.Reals.Rbasic_fun.Rmin_right	40	1.2.0.0	search with cache (only 1: intros); (only 1: apply Rmin_case_strong); (only 1: auto using Rle_antisym); (only 1: reflexivity).	0.0286359786987	7
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros); (only 1: do 2 (apply Rmin_case_strong; intro)); (only 1: eauto using Rle_trans, Rle_refl); (only 1: eauto using Rle_trans, Rle_refl); (only 1: eauto using Rle_trans, Rle_refl); (only 1: eauto using Rle_trans, Rle_refl).	0.0354859828949	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.1.0.1.0.0.0.0	search with cache (only 1: intros); (only 1: apply Rmin_case_strong); (only 1: apply Rmin_case_strong); (only 1: auto using Rle_antisym); (only 1: reflexivity); (only 1: apply Rmin_case_strong); (only 1: auto using Rle_antisym); (only 1: auto using Rle_antisym).	0.0451769828796	10
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	4.0.3.0.3.3	search with cache (only 1: intros r1 r2 r); (only 1: unfold Rmin); (only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]); (only 1: auto with real); (only 1: intro); (only 1: assumption).	5.26599192619	3098
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.1.1.0	search with cache (only 1: intros); (only 1: unfold Rmin); (only 1: case (Rle_dec x y)); (only 1: eauto using Rle_trans, Rle_refl); (only 1: eauto using Rle_trans, Rle_refl).	0.403822898865	48
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.1.0.2.0	search with cache (only 1: intros); (only 1: apply Rmin_case_strong); (only 1: intro); (only 1: assumption); (only 1: intro); (only 1: assumption).	0.288969993591	96
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	2.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2); (only 1: unfold Rmax); (only 1: case (Rle_dec r1 r2)); (only 1: auto with real); (only 1: auto with real).	0.296075105667	52
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40	0.2.0.0.0.0.0.1.6.4	search with cache (only 1: unfold Rmax); (only 1: intros); (only 1: case (Rle_dec x y)); (only 1: case (Rle_dec y x)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: case (Rle_dec y x)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: intros); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	22.1703600883	11933
Coq.Reals.Rbasic_fun.Rmax_l	40	2.0.0.0.2	search with cache (only 1: intros p q); (only 1: unfold Rmax); (only 1: case (Rle_dec p q)); (only 1: auto with real); (only 1: auto with real).	0.213012933731	50
Coq.Reals.Rbasic_fun.Rmax_r	40	1.1.1.0.0	search with cache (only 1: intros); (only 1: unfold Rmax); (only 1: case (Rle_dec x y)); (only 1: auto with real); (only 1: auto with real).	0.217087984085	58
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.1.0.2	search with cache (only 1: intros); (only 1: unfold Rmax); (only 1: case (Rle_dec x y)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.3389980793	117
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros); (only 1: apply Rmax_case_strong); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)); (only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.125067949295	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	1.3.1.3.0.0	search with cache (only 1: intros); (only 1: do 2 (apply Rmax_case_strong; intro)); (only 1: eauto using Rle_trans, Rle_refl); (only 1: assumption); (only 1: eauto using Rle_trans, Rle_refl); (only 1: assumption).	5.98882102966	2482
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	1.0.1.0.2.0	search with cache (only 1: intros); (only 1: apply Rmax_case_strong); (only 1: intro); (only 1: assumption); (only 1: intro); (only 1: assumption).	0.15965795517	70
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.1	search with cache (only 1: intros p q); (only 1: unfold Rmax); (only 1: case (Rle_dec p q)); (only 1: auto with real); (only 1: auto with real).	0.10532617569	46
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	6.0.1	search with cache (only 1: intros x y z); (only 1: apply Rmax_lub_lt); (only 1: assumption).	0.143363952637	59
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	2.0.1.0	search with cache (only 1: intros a H); (only 1: rewrite Rabs_right); (only 1: auto with real); (only 1: auto with real).	0.0314998626709	7
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	1.1.1.3.1.1	search with cache (only 1: intros x y); (only 1: unfold Rmin); (only 1: unfold Rmax); (only 1: case (Rle_dec x y)); (only 1: auto with real); (only 1: auto with real).	2.78097701073	1351
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	28	search with cache (only 1: auto with real).	0.253034114838	394
Coq.Reals.DiscrR.IZR_eq	40	9.5.0	search with cache (only 1: intros); (only 1: elim H); (only 1: auto with zarith real).	1.45669698715	1177
Coq.Reals.RIneq.Rle_refl	40	12.1.0	search with cache (only 1: intros); (only 1: right); (only 1: reflexivity).	2.83222794533	1306
Coq.Reals.RIneq.Rge_refl	40	4.0.0	search with cache (only 1: intros); (only 1: right); (only 1: reflexivity).	0.0351960659027	11
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	5.0.0.1.2	search with cache (only 1: unfold Rgt); (only 1: intros r H); (only 1: eapply Rlt_asym); (only 1: eauto); (only 1: eauto).	1.48866200447	724
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.6.0	search with cache (only 1: intuition eauto  3); (only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse); (only 1: unfold not); (only 1: intuition eauto  3).	0.0551149845123	10
Coq.Reals.RIneq.Rdichotomy	40	0.1.0.0	search with cache (only 1: unfold not); (only 1: intuition eauto  3); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	0.0458509922028	5
Coq.Reals.RIneq.Rlt_le	40	1.0.0	search with cache (only 1: intros); (only 1: left); (only 1: auto with real).	0.0222709178925	4
Coq.Reals.RIneq.Rgt_ge	40	0.8.0	search with cache (only 1: intuition eauto  3); (only 1: left); (only 1: auto with real).	0.160874843597	72
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	search with cache (only 1: destruct 1); (only 1: red); (only 1: tauto); (only 1: red); (only 1: intuition eauto  3).	0.0352349281311	5
Coq.Reals.RIneq.Rlt_gt	40	0	search with cache (only 1: intuition eauto  3).	0.0190861225128	1
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: intuition eauto  3).	0.0181941986084	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.3.0.0	search with cache (only 1: intros r1 r2); (only 1: unfold Rle); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	0.0391380786896	7
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros); (only 1: apply Rnot_le_lt); (only 1: auto with real).	0.0233941078186	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.2.0.1.0	search with cache (only 1: intros r1 r2); (only 1: generalize (Rtotal_order r1 r2)); (only 1: unfold Rle); (only 1: generalize (total_order_T r1 r2)); (only 1: intuition eauto  3).	0.0891451835632	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.1.0	search with cache (only 1: intros); (only 1: red); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	0.0401320457458	8
Coq.Reals.RIneq.Rnot_gt_ge	40	2.3.0.0	search with cache (only 1: intros); (only 1: red); (only 1: generalize (total_order_T r1 r2)); (only 1: intuition eauto  3).	0.0498080253601	9
Coq.Reals.RIneq.Rnot_lt_ge	40	0.3.1.0	search with cache (only 1: intros); (only 1: red); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	0.0413510799408	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	2.0	search with cache (only 1: intros); (only 1: auto with real).	0.127752065659	36
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	2.0	search with cache (only 1: intros); (only 1: auto with real).	0.0344860553741	12
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.3	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse); (only 1: unfold Rle); (only 1: unfold not); (only 1: intuition eauto  3).	0.461536169052	118
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red); (only 1: intros); (only 1: eapply Rlt_not_le); (only 1: eauto with real); (only 1: auto with real).	0.0348651409149	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.9	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse); (only 1: unfold Rle); (only 1: unfold not); (only 1: intuition eauto  3).	4.81211495399	416
Coq.Reals.RIneq.Rge_not_gt	40	0.4.1.0	search with cache (only 1: intros); (only 1: red); (only 1: apply Rle_not_lt); (only 1: auto with real).	0.0334739685059	9
Coq.Reals.RIneq.Req_le	40	0.0	search with cache (only 1: unfold Rle); (only 1: intuition eauto  3).	0.0220520496368	2
Coq.Reals.RIneq.Req_ge	40	0.0	search with cache (only 1: red); (only 1: intuition eauto  3).	0.0234451293945	2
Coq.Reals.RIneq.Req_le_sym	40	0.0	search with cache (only 1: unfold Rle); (only 1: intuition eauto  3).	0.0234489440918	2
Coq.Reals.RIneq.Req_ge_sym	40	0.0	search with cache (only 1: unfold Rge); (only 1: intuition eauto  3).	0.0225989818573	2
Coq.Reals.RIneq.Rgt_asym	40	0.0.0	search with cache (only 1: intros); (only 1: apply Rle_not_lt); (only 1: auto with real).	0.0252950191498	3
Coq.Reals.RIneq.Rle_antisym	40	0.0.8.5	search with cache (only 1: intros r1 r2); (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: unfold Rle); (only 1: intuition).	4.62062001228	1369
Coq.Reals.RIneq.Rge_antisym	40	0.1.0	search with cache (only 1: unfold Rge); (only 1: intuition eauto  3); (only 1: auto with real).	0.0364460945129	4
Coq.Reals.RIneq.Rle_le_eq	40	1.1.1.0	search with cache (only 1: intros r1 r2); (only 1: unfold Rle); (only 1: intuition eauto  3); (only 1: auto with real).	0.0439691543579	7
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0314600467682	1
Coq.Reals.RIneq.Rlt_eq_compat	40	5.14.1	search with cache (only 1: intuition eauto  3); (only 1: subst); (only 1: auto with real).	4.71348905563	2404
Coq.Reals.RIneq.Rgt_eq_compat	40	2.3.1.0.10	search with cache (only 1: intros x x' y y'); (only 1: intros); (only 1: replace y with y'); (only 1: replace x with x'); (only 1: assumption).	6.66897392273	2891
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.6	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat); (only 1: unfold Rle); (only 1: intuition eauto  2).	0.364904165268	121
Coq.Reals.RIneq.Rlt_le_trans	40	1.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat); (only 1: unfold Rle); (only 1: intuition eauto  2).	0.167001008987	71
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.11.2	search with cache (only 1: intros); (only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	28.1591801643	12373
Coq.Reals.RIneq.Rle_dec	40	0.11.1	search with cache (only 1: intros); (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: intuition).	32.7844409943	1244
Coq.Reals.RIneq.Rgt_dec	40	0.14.0	search with cache (only 1: intros); (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: intuition).	12.873388052	804
Coq.Reals.RIneq.Rge_dec	40	0.9.1	search with cache (only 1: intros); (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: intuition).	0.958526849747	91
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intuition eauto  4 with real); (only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2)); (only 1: intuition eauto  4 with real).	0.0673351287842	4
Coq.Reals.RIneq.Rgt_ge_dec	40	1.2.1.0.2.5.0	search with cache (only 1: intros); (only 1: edestruct Rle_dec); (only 1: eauto with rorders); (only 1: intuition eauto  4 with real); (only 1: left); (only 1: red); (only 1: auto with real).	7.26204395294	2215
Coq.Reals.RIneq.Rle_lt_dec	40	0.2.0	search with cache (only 1: intros); (only 1: generalize (total_order_T r1 r2)); (only 1: intuition).	0.153374910355	5
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.1.1.2.0	search with cache (only 1: intros); (only 1: edestruct Rlt_le_dec); (only 1: right); (only 1: eauto with rorders); (only 1: left); (only 1: auto with real).	1.00036096573	235
Coq.Reals.RIneq.Rlt_or_le	40	1.2.0.0	search with cache (only 1: unfold Rle); (only 1: intros); (only 1: generalize (total_order_T r1 r2)); (only 1: intuition eauto  3).	0.0439321994781	7
Coq.Reals.RIneq.Rgt_or_ge	40	1.2.0.3.0	search with cache (only 1: intros); (only 1: edestruct Rlt_le_dec); (only 1: left); (only 1: eauto with rorders); (only 1: intuition eauto  4 with real).	0.314895153046	120
Coq.Reals.RIneq.Rle_or_lt	40	0.2.0.1	search with cache (only 1: unfold Rle); (only 1: intros); (only 1: generalize (total_order_T r1 r2)); (only 1: tauto).	0.194478988647	53
Coq.Reals.RIneq.Rge_or_gt	40	0.2.2.1.0.0	search with cache (only 1: intros); (only 1: edestruct Rlt_or_le); (only 1: right); (only 1: eauto with rorders); (only 1: left); (only 1: auto with real).	1.06244206429	334
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.11.0	search with cache (only 1: intuition eauto  3); (only 1: generalize (total_order_T r1 r2)); (only 1: intuition).	5.68947601318	461
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	1.1.27	search with cache (only 1: constructor); (only 1: ring); (only 1: ring).	6.45048308372	3748
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40
Coq.Reals.RIneq.Rplus_eq_compat_r	40
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H); (only 1: replace y with (- x + x + y) by ring); (only 1: rewrite Rplus_assoc); (only 1: rewrite H); (only 1: ring).	0.0463321208954	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros a b H [H0| H0] H1); (only 1: absurd (0 < a + b)); (only 1: rewrite H1); (only 1: auto with real); (only 1: apply Rle_lt_trans with (a + 0)); (only 1: rewrite Rplus_0_r); (only 1: auto with real); (only 1: auto using Rplus_lt_compat_l with real); (only 1: rewrite <- H0, Rplus_0_r in H1); (only 1: auto with real).	4.18781304359	466
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	5.0.0	search with cache (only 1: intros); (only 1: field); (only 1: trivial).	0.0411100387573	8
Coq.Reals.RIneq.Rinv_r_sym	40	5.0.0	search with cache (only 1: intros); (only 1: field); (only 1: trivial).	0.0401511192322	8
Coq.Reals.RIneq.Rmult_0_r	40	2.0	search with cache (only 1: intros); (only 1: field).	0.478652954102	12
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro); (only 1: ring).	0.0265820026398	2
Coq.Reals.RIneq.Rmult_ne	40	9.0.0	search with cache (only 1: intros); (only 1: rewrite Rmult_comm); (only 1: auto with real).	0.908633947372	281
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: rewrite Rmult_comm); (only 1: rewrite Rmult_comm); (only 1: rewrite Rmult_comm); (only 1: rewrite Rmult_comm); (only 1: rewrite Rmult_comm); (only 1: rewrite Rmult_comm); (only 1: ring).	0.106544017792	14
Coq.Reals.RIneq.Rmult_eq_compat_l	40
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0	search with cache (only 1: intros); (only 1: auto with real).	0.0240681171417	2
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0175249576569	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	4.0.0.21	search with cache (only 1: intros a b); (only 1: split); (only 1: auto with real); (only 1: auto with real).	4.75851917267	2696
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	1.1.0.0.2.0	search with cache (only 1: red); (only 1: intros); (only 1: case (Rmult_integral r1 r2)); (only 1: auto with real); (only 1: auto with real); (only 1: auto with real).	0.155328989029	17
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.1.0.0.0	search with cache (only 1: intros x y H); (only 1: replace y with (- x + x + y) by ring); (only 1: rewrite Rplus_assoc); (only 1: rewrite H); (only 1: ring).	0.0468738079071	8
Coq.Reals.RIneq.Ropp_0	40	2	search with cache (only 1: ring).	0.0229699611664	3
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.2	search with cache (only 1: intros); (only 1: rewrite H); (only 1: ring).	0.542668819427	19
Coq.Reals.RIneq.Ropp_involutive	40	6.2	search with cache (only 1: intros); (only 1: ring).	0.0421109199524	15
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	3.1	search with cache (only 1: intros); (only 1: ring).	0.0296959877014	6
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.3	search with cache (only 1: intros); (only 1: ring).	0.0319600105286	5
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0291991233826	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.028557062149	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0280191898346	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0277450084686	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0.12	search with cache (only 1: unfold Rminus); (only 1: intros); (only 1: ring).	0.606538772583	208
Coq.Reals.RIneq.Rminus_0_l	40	0.1	search with cache (only 1: intro); (only 1: ring).	0.0282201766968	3
Coq.Reals.RIneq.Ropp_minus_distr	40	1.0.0	search with cache (only 1: intro); (only 1: intro); (only 1: ring).	0.0315971374512	4
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0280680656433	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.1.6	search with cache (only 1: intros x y H); (only 1: unfold Rminus, CReal_minus); (only 1: rewrite H); (only 1: ring).	2.87653279305	325
Coq.Reals.RIneq.Rminus_eq_0	40	0.3	search with cache (only 1: unfold Rminus); (only 1: ring).	0.0277650356293	5
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0.1	search with cache (only 1: unfold Rminus); (only 1: intros); (only 1: ring).	0.0344429016113	5
Coq.Reals.RIneq.Rminus_eq_contra	40	5.0	search with cache (only 1: intros); (only 1: auto with real).	0.129118919373	47
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red); (only 1: intros r1 r2 H H0); (only 1: apply H); (only 1: auto with real).	0.0351831912994	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0	search with cache (only 1: red); (only 1: intros); (only 1: elim H); (only 1: auto with real).	0.0344321727753	4
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.1	search with cache (only 1: intros); (only 1: ring).	2.60205602646	16
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	search with cache (only 1: intros); (only 1: ring).	0.0357151031494	2
Coq.Reals.RIneq.Rinv_1	40	1	search with cache (only 1: field).	0.0321369171143	2
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	1.3.1	search with cache (only 1: intros); (only 1: field); (only 1: auto with real).	0.0848989486694	16
Coq.Reals.RIneq.Rinv_mult_distr	40	0.0.0.2.0.15	search with cache (only 1: intro Hnotz); (only 1: intros); (only 1: field); (only 1: split); (only 1: auto with real); (only 1: auto with real).	17.3446090221	4473
Coq.Reals.RIneq.Ropp_inv_permute	40	1.1.1	search with cache (only 1: intros); (only 1: field); (only 1: auto with real).	0.0487711429596	6
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros); (only 1: field); (only 1: auto with real).	1.86564016342	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros); (only 1: transitivity (1 * r2)); (only 1: field); (only 1: auto with real); (only 1: auto with real).	0.102463960648	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros); (only 1: transitivity (r2 * 1)); (only 1: field); (only 1: auto with real); (only 1: auto with real).	0.252739906311	39
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	9	search with cache (only 1: intuition).	0.199965000153	24
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	10	search with cache (only 1: intuition).	0.17189002037	46
Coq.Reals.RIneq.Rplus_le_compat_l	40	6.3.4	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat); (only 1: unfold Rle); (only 1: intuition).	5.64641094208	783
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.3.2.1.6	search with cache (only 1: destruct 1); (only 1: left); (only 1: auto with real); (only 1: elim H); (only 1: auto with zarith real).	11.1791341305	3182
Coq.Reals.RIneq.Rplus_le_compat_r	40	1.5.1.1.0.6.0	search with cache (only 1: unfold Rle); (only 1: intuition eauto  2); (only 1: left); (only 1: auto with real); (only 1: right); (only 1: rewrite <- H0); (only 1: auto with zarith real).	33.4893510342	13267
Coq.Reals.RIneq.Rplus_ge_compat_r	40	6	search with cache (only 1: intuition).	0.214156866074	76
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.1.0	search with cache (only 1: do 3 intro); (only 1: red); (only 1: auto with real).	0.0175950527191	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.3.2.3	search with cache (only 1: intros); (only 1: apply Rle_lt_trans with (r2 + r3)); (only 1: auto with real); (only 1: auto with real).	1.03170895576	402
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.5.0.4	search with cache (only 1: intros); (only 1: apply Rlt_le_trans with (r2 + r3)); (only 1: auto with real); (only 1: auto with real).	0.984062194824	383
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.16.1	search with cache (only 1: intros a b); (only 1: intros); (only 1: apply Rle_lt_trans with (a + 0)); (only 1: rewrite Rplus_0_r); (only 1: auto with real); (only 1: auto using Rplus_lt_compat_l with real).	25.8982760906	20192
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.0.0	search with cache (only 1: intros n m p q); (only 1: generalize (Rlt_le_dec m q)); (only 1: intuition).	0.0779612064362	3
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	6.0	search with cache (only 1: intros); (only 1: intuition).	0.0137820243835	8
Coq.Reals.RIneq.Ropp_lt_contravar	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: rewrite Rlt_def); (only 1: rewrite Rrepr_opp, Rrepr_opp); (only 1: apply CRealLtForget); (only 1: apply CReal_opp_gt_lt_contravar); (only 1: rewrite Rlt_def in H); (only 1: apply CRealLtEpsilon); (only 1: exact H).	0.0318739414215	9
Coq.Reals.RIneq.Ropp_gt_contravar	40	5.2.0	search with cache (only 1: intros); (only 1: unfold Rgt); (only 1: auto with real).	0.385372877121	27
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	1.1.0.0.3	search with cache (only 1: red); (only 1: unfold Rle); (only 1: intuition eauto  3); (only 1: auto with real); (only 1: auto with real).	0.0776419639587	44
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.2.0.0	search with cache (only 1: unfold Rge); (only 1: intros r1 r2 [H| H]); (only 1: auto with real); (only 1: auto with real).	0.0168769359589	6
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle); (only 1: intros r1 r2 [H| H]); (only 1: auto with real); (only 1: auto with real).	0.0263750553131	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge); (only 1: intros r1 r2 [H| H]); (only 1: auto with real); (only 1: auto with real).	0.025985956192	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros); (only 1: replace 0 with (- 0)); (only 1: auto with real); (only 1: auto with real).	0.0159239768982	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros); (only 1: replace 0 with (- 0)); (only 1: auto with real); (only 1: auto with real).	0.0161571502686	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros); (only 1: replace 0 with (- 0)); (only 1: auto with real); (only 1: auto with real).	0.0165839195251	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.2.0.0.3.6.0	search with cache (only 1: unfold Rge); (only 1: unfold Rle); (only 1: intuition eauto  3); (only 1: rewrite <- Ropp_0); (only 1: auto with real); (only 1: rewrite <- Ropp_0); (only 1: auto with real).	2.79600191116	1191
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros); (only 1: replace 0 with (- 0)); (only 1: auto with real); (only 1: auto with real).	0.0154209136963	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.3.1	search with cache (only 1: intros); (only 1: unfold Rgt); (only 1: auto with real).	0.012727022171	7
Coq.Reals.RIneq.Ropp_le_cancel	40	0.1.1.8	search with cache (only 1: intros x y H); (only 1: rewrite <- (Ropp_involutive x)); (only 1: rewrite <- (Ropp_involutive y)); (only 1: auto with real).	4.68501091003	2514
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	0.0.1	search with cache (only 1: unfold Rgt); (only 1: intros); (only 1: auto with real).	0.0239510536194	15
Coq.Reals.RIneq.Rmult_gt_compat_l	40	0.0.2	search with cache (only 1: unfold Rgt); (only 1: intros); (only 1: auto with real).	0.0208451747894	13
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0	search with cache (only 1: auto with real rorders).	0.0666599273682	1
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.1.1.15.2	search with cache (only 1: intros); (only 1: replace r with (- - r)); (only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r))); (only 1: auto with real); (only 1: auto with real).	8.8806450367	6826
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.0.2.0	search with cache (only 1: intros); (only 1: apply Rmult_lt_reg_l with r); (only 1: auto with real); (only 1: auto with real).	0.0155279636383	6
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.0.0.4	search with cache (only 1: red); (only 1: intros); (only 1: apply (Rplus_lt_reg_l r2)); (only 1: replace (r2 + (r1 - r2)) with r1 by ring); (only 1: now rewrite Rplus_0_r).	0.130926847458	91
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40
Coq.Reals.RIneq.Rge_minus	40	0.0.0.0.4.6.0.7	search with cache (only 1: red); (only 1: intros); (only 1: elim H); (only 1: left); (only 1: apply (Rplus_lt_reg_l r2)); (only 1: replace (r2 + (r1 - r2)) with r1 by ring); (only 1: now rewrite Rplus_0_r); (only 1: auto with real).	18.3447511196	17706
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.2.7.2	search with cache (only 1: unfold Rle); (only 1: intuition eauto  2); (only 1: replace r1 with (r1 - r2 + r2)); (only 1: pattern r2 at 3); (only 1: replace r2 with (0 + r2)); (only 1: auto with real); (only 1: ring); (only 1: ring); (only 1: auto with real).	16.3431949615	9846
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.5.5	search with cache (only 1: replace 1 with (0 + 1)); (only 1: apply Rlt_n_Sn); (only 1: apply Rplus_0_l).	0.0780160427094	92
Coq.Reals.RIneq.Rle_0_1	40	4	search with cache (only 1: auto with real).	0.03187084198	24
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.1.0.0	search with cache (only 1: intros); (only 1: apply Rnot_le_lt); (only 1: red); (only 1: intros); (only 1: absurd (1 <= 0)); (only 1: auto with real); (only 1: replace 1 with (r * / r)); (only 1: replace 0 with (r * 0)); (only 1: auto with real); (only 1: auto with real); (only 1: auto with real).	2.92114281654	1295
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	2.0.3.2	search with cache (only 1: intros); (only 1: replace 0 with (0 + 0)); (only 1: auto with real); (only 1: auto with real).	0.111978054047	109
Coq.Reals.RIneq.Rlt_plus_1	40	16	search with cache (only 1: apply Rlt_n_Sn).	2.82488799095	3986
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	4.0.4.0.29	search with cache (only 1: destruct n); (only 1: simpl); (only 1: rewrite Rplus_0_l); (only 1: auto with real); (only 1: auto with real).	5.86977314949	8614
Coq.Reals.RIneq.S_O_plus_INR	40	1.0.0.0.0.3	search with cache (only 1: simpl); (only 1: intro); (only 1: case n); (only 1: auto with real); (only 1: intro); (only 1: auto with real).	0.343253135681	71
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	1.3.0.13.1	search with cache (only 1: intro); (only 1: induction n as [| n Hrecn]); (only 1: auto with real); (only 1: rewrite S_INR); (only 1: auto with real).	7.59992384911	6897
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	4.0.0.0.3	search with cache (only 1: apply le_elim_rel); (only 1: apply pos_INR); (only 1: intros); (only 1: repeat rewrite S_INR); (only 1: auto with real).	0.730531930923	477
Coq.Reals.RIneq.INR_not_0	40	0.0.0.1.2	search with cache (only 1: intro); (only 1: case n); (only 1: auto with real); (only 1: intro); (only 1: auto with real).	0.061283826828	28
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	18.3	search with cache (only 1: intros); (only 1: now apply not_INR in H).	22.6451089382	7166
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	0	search with cache (only 1: auto with real).	0.00767397880554	1
Coq.Reals.RIneq.IZR_POS_xO	40	12.8.8.7	search with cache (only 1: induction p as [p| p| ]); (only 1: easy); (only 1: easy); (only 1: ring).	1.94024991989	3420
Coq.Reals.RIneq.IZR_POS_xI	40	0.0.6.5.3.0.0.0.0	search with cache (only 1: intro); (only 1: unfold IZR, IPR); (only 1: destruct p); (only 1: simpl); (only 1: trivial); (only 1: trivial); (only 1: simpl); (only 1: rewrite Rmult_1_r); (only 1: trivial).	5.699903965	7329
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	1.2.0.0.0.6.1.0.1	search with cache (only 1: intro t); (only 1: destruct t); (only 1: auto with real); (only 1: simpl); (only 1: unfold IZR); (only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add); (only 1: apply plus_INR); (only 1: rewrite Rplus_comm); (only 1: apply plus_IZR_NEG_POS).	2.72426700592	3356
Coq.Reals.RIneq.opp_IZR	40	12.5.0.0.0.4	search with cache (only 1: intro t); (only 1: case t); (only 1: auto with real); (only 1: reflexivity); (only 1: unfold IZR); (only 1: auto with real).	6.00365304947	8546
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.3.0.1.1.0.8	search with cache (only 1: intro n); (only 1: intros z H); (only 1: red); (only 1: intros H0); (only 1: case H); (only 1: apply eq_IZR); (only 1: auto).	30.6998729706	26202
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.0.0.0.16.2	search with cache (only 1: intros r r1 r2 H); (only 1: replace 0 with (r * 0)); (only 1: replace r with (- - r)); (only 1: auto with real); (only 1: auto with real); (only 1: replace r with (- - r)); (only 1: auto with real); (only 1: auto with real).	26.6723179817	17445
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	2.0.0.4	search with cache (only 1: intros r H H0); (only 1: unfold Rdiv); (only 1: field); (only 1: auto with real).	0.380041837692	83
Coq.Reals.RIneq.double	40	1.10.1.13	search with cache (only 1: unfold IZR, IPR); (only 1: intros); (only 1: simpl IPR_2); (only 1: ring).	0.645838022232	832
Coq.Reals.RIneq.double_var	40	24.4.14.0	search with cache (only 1: intro); (only 1: unfold IZR, IPR); (only 1: simpl); (only 1: field).	2.92690610886	5966
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	1.0.2.0	search with cache (only 1: intros); (only 1: apply Rle_lt_trans with (r2 * r3)); (only 1: auto with real); (only 1: auto with real).	0.156399965286	56
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	2.2.4	search with cache (only 1: unfold Rdiv); (only 1: intros); (only 1: ring).	0.801820993423	240
Coq.Reals.RIneq.Rdiv_minus_distr	40	5.0.2.1	search with cache (only 1: intros x y); (only 1: intros); (only 1: unfold Rdiv); (only 1: ring).	0.650027990341	226
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.RIneq.pos_half_prf	40	0	search with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.00673222541809	1
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40	0.0.0.3.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x q n H); (only 1: unfold DRealAbstr, proj1_sig in H); (only 1: match type of H with | context [ if ?a then _ else _ ] => destruct a as [H'| H'] end); (only 1: discriminate); (only 1: destruct (Z_le_gt_dec n 0) as [Hdec| Hdec]); (only 1: specialize (H' (Z.to_nat (- n)))); (only 1: rewrite (Z2Nat.id (- n) _), Z.opp_involutive in H'); (only 1: pose proof (Qpower_pos_lt 2 n)); (only 1: lra); (only 1: specialize (H' (Z.to_nat 0))); (only 1: cbn in H'); (only 1: pose proof (cauchy x n 0%Z n _ _) as Hxbnd); (only 1: apply Qabs_Qlt_condition in Hxbnd); (only 1: pose proof (Qpower_le_1_increasing' 2 n _ _)); (only 1: lra).	14.5931890011	3418
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	13.9.5.0.0.0.1	search with cache (only 1: induction n); (only 1: simpl); (only 1: reflexivity); (only 1: simpl); (only 1: rewrite <- (Rmul_comm (CRisRing R))); (only 1: rewrite CRmult_1_r); (only 1: apply IHn).	18.5875501633	6914
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	0.0.0.0.4.8	search with cache (only 1: intros); (only 1: apply CRmult_morph); (only 1: unfold CRminus); (only 1: rewrite H, H0); (only 1: reflexivity); (only 1: reflexivity).	0.849610090256	173
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.0.0.0.0.0.0	search with cache (only 1: intros R x y H z t H0); (only 1: unfold CRmax); (only 1: apply CRmult_morph); (only 1: unfold CRminus); (only 1: rewrite H, H0); (only 1: reflexivity); (only 1: reflexivity).	0.111145973206	7
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	0.0.0.0.0.1.13	search with cache (only 1: intros); (only 1: apply CRmult_morph); (only 1: unfold CRminus); (only 1: rewrite CRplus_0_l); (only 1: rewrite CRopp_0, CRplus_0_r); (only 1: reflexivity); (only 1: reflexivity).	0.787556886673	228
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40	2.0.0.4.13	search with cache (only 1: intros); (only 1: rewrite <- CRplus_0_r, CRplus_assoc); (only 1: apply CRplus_le_compat_l); (only 1: rewrite CRplus_0_l); (only 1: auto).	1.19732308388	385
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	1.0.0	search with cache (only 1: intros); (only 1: destruct (series_cv_abs u cau)); (only 1: exact s).	0.0504739284515	4
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	7.1	search with cache (only 1: intros); (only 1: apply CRmorph_rat).	0.207836866379	22
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.9.2.4	search with cache (only 1: intros); (only 1: intro abs); (only 1: apply CRmorph_increasing_inv in abs); (only 1: contradiction).	0.272609949112	460
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.15	search with cache (only 1: intros); (only 1: apply CRmorph_rat).	0.331752061844	336
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.0	search with cache (only 1: intros); (only 1: apply CRmorph_rat).	0.0218110084534	2
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.1.3.7	search with cache (only 1: intros); (only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]); (only 1: apply H1); (only 1: apply CRle_refl).	0.245995998383	122
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40	7.13.7	search with cache (only 1: intro); (only 1: destruct (CRltLinear R), p); (only 1: apply c).	6.52581000328	8746
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	1.3.1.3.10.16.6	search with cache (only 1: intros); (only 1: destruct (CRltLinear R), p); (only 1: split); (only 1: intro); (only 1: exact (f x x H H)); (only 1: intro); (only 1: exact (f x x H H)).	4.16544699669	9430
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	1.0.9.5.0.9.0	search with cache (only 1: split); (only 1: intro abs); (only 1: destruct H, H0); (only 1: assumption); (only 1: intro abs); (only 1: destruct H, H0); (only 1: contradiction).	6.04168105125	8617
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	7.7	search with cache (only 1: intros H1 H2); (only 1: apply H1).	0.22519493103	222
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.1.1	search with cache (only 1: intros); (only 1: destruct (CRisRing R)); (only 1: apply Ropp_def).	0.0181589126587	5
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	22.4.18.0.2	search with cache (only 1: intros); (only 1: intros abs); (only 1: apply H); (only 1: apply CRplus_lt_compat_l); (only 1: exact abs).	20.0698130131	15578
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	3.6.4.26	search with cache (only 1: intros); (only 1: destruct (CRisRing R)); (only 1: apply CReq_sym); (only 1: apply Radd_assoc).	1.30220603943	1260
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	14.6.7	search with cache (only 1: intros); (only 1: destruct (CRisRing R)); (only 1: apply Radd_comm).	4.08139801025	2169
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	9.4	search with cache (only 1: destruct (CRisRingExt R)); (only 1: apply Radd_ext).	0.245769023895	205
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	49	search with cache (only 1: apply (CRisRingExt R)).	2.51193714142	2909
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	9.5.8	search with cache (only 1: intros); (only 1: destruct (CRisRingExt R)); (only 1: apply Radd_ext).	10.5036611557	3153
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	26.7	search with cache (only 1: intros); (only 1: apply (CRisRingExt R)).	0.786783218384	1106
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	0.0.0.0	search with cache (only 1: intros R x y H x0 y0 H0); (only 1: unfold CRminus); (only 1: rewrite H, H0); (only 1: reflexivity).	0.0451431274414	4
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	46	search with cache (only 1: apply CRisRing).	0.526694059372	1086
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	21.0.10	search with cache (only 1: intros); (only 1: destruct (CRisRing R)); (only 1: apply Rmul_comm).	5.98742485046	2131
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	2.1.11	search with cache (only 1: intros); (only 1: destruct (CRisRing R)); (only 1: apply Rdistr_l).	0.280169963837	140
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.6	search with cache (only 1: split); (only 1: apply CR_of_Q_le); (only 1: rewrite H); (only 1: apply Qle_refl); (only 1: apply CR_of_Q_le); (only 1: rewrite H); (only 1: apply Qle_refl).	0.325741052628	103
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	14.1.72	search with cache (only 1: intros [n d]); (only 1: simpl); (only 1: intuition).	37.7455308437	23493
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	10.1	search with cache (only 1: intros r q n Hapart); (only 1: lra).	0.0547289848328	73
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	11.2.4	search with cache (only 1: intros); (only 1: apply (Qmult_le_l _ _ 2 _) in H); (only 1: lra).	1.12611794472	1273
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	6.0.0.27	search with cache (only 1: intros x n); (only 1: unfold CReal_abs, CReal_abs_seq); (only 1: rewrite CReal_red_seq); (only 1: lra).	1.25569796562	3352
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	1	search with cache (only 1: lia).	0.0225701332092	2
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos_log2floor_plus1_spec_Qpower	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.sumbool_or_not_or	40	8	search with cache (only 1: intuition).	0.134957075119	41
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	4.1	search with cache (only 1: intros x y); (only 1: lra).	0.0252821445465	7
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	12.0	search with cache (only 1: intros x y); (only 1: lra).	0.509468793869	231
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	6	search with cache (only 1: reflexivity).	0.02512383461	7
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40	4.11.2.0.0.55.11.26	search with cache (only 1: intros [p pmaj]); (only 1: simpl); (only 1: destruct p); (only 1: rewrite Z.abs_0, Qzero_eq); (only 1: rewrite Z.abs_0, Qzero_eq); (only 1: lra); (only 1: reflexivity); (only 1: reflexivity).	30.3504369259	48426
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	0	search with cache (only 1: reflexivity).	0.0173089504242	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40	4	search with cache (only 1: apply CReal_isRingExt).	25.7680220604	149
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0	search with cache (only 1: apply CReal_isRingExt).	6.77443695068	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.3.1	search with cache (only 1: intros x y Hxeqy x0 y0 Hx0eqy0); (only 1: rewrite Hxeqy, Hx0eqy0); (only 1: unfold CReal_minus); (only 1: reflexivity).	0.16108083725	19
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	6.2.1	search with cache (only 1: intros r); (only 1: rewrite CReal_mult_comm); (only 1: apply CReal_mult_1_l).	7.00416588783	510
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	4.2	search with cache (only 1: intros x y Hyeq0); (only 1: apply CReal_mult_proper_l).	0.986809015274	64
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.3.1	search with cache (only 1: intros); (only 1: rewrite H); (only 1: reflexivity).	0.754886865616	60
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40	0.10.22.2	search with cache (only 1: intros); (only 1: destruct H as [p H]); (only 1: pose proof (Qpower_pos_lt 2 p _)); (only 1: lra).	2.5788629055	3864
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	4.9.4.9.3	search with cache (only 1: split); (only 1: intro abs); (only 1: exact (CRealLt_asym x x abs abs)); (only 1: intro abs); (only 1: exact (CRealLt_asym x x abs abs)).	13.5584030151	11326
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	2.2.4.0.2	search with cache (only 1: intros H n); (only 1: destruct H as [Hyx Hxy]); (only 1: split); (only 1: apply H); (only 1: apply H).	1.87537407875	1361
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	5.1.4.29.10	search with cache (only 1: intros x y z [n inf]); (only 1: intro contra); (only 1: destruct (CRealLt_dec _ _ y contra)); (only 1: contradiction); (only 1: assumption).	20.0499579906	34615
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	4.1.3.11.0	search with cache (only 1: intros x y z Hxeqy Hxltz); (only 1: destruct Hxeqy as [Hylex Hxley]); (only 1: apply (CReal_lt_le_trans _ x)); (only 1: exact Hxltz); (only 1: assumption).	4.7580947876	1999
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	6.6.3.3.5	search with cache (only 1: intros x y z Hxley Hylez contra); (only 1: apply Hylez); (only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y)); (only 1: assumption); (only 1: assumption).	11.8436799049	10341
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	9.0.2.5.9.0	search with cache (only 1: intros x y z Hxeqy Hxlez); (only 1: intro contra); (only 1: apply Hxlez); (only 1: apply (CRealLt_morph x y Hxeqy z z)); (only 1: apply CRealEq_refl); (only 1: assumption).	15.7000699043	12901
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.2.0.0.0.2.0.0.0.1	search with cache (only 1: intros x y Heq); (only 1: split); (only 1: intros [n Hapart]); (only 1: cbn in Hapart); (only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra)); (only 1: lra); (only 1: intros [n Hapart]); (only 1: cbn in Hapart); (only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra)); (only 1: lra).	4.16989707947	851
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	2.8	search with cache (only 1: intros n); (only 1: now Z.nzsimpl).	0.0802509784698	57
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x); (only 1: apply CRealEq_diff); (only 1: intros n); (only 1: unfold CReal_plus, CReal_plus_seq, inject_Q); (only 1: do 2 rewrite CReal_red_seq); (only 1: rewrite Qred_correct); (only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd); (only 1: apply Qlt_le_weak); (only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *); (only 1: lra).	0.0986371040344	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z Hlt); (only 1: apply CRealLt_above in Hlt); (only 1: destruct Hlt as [n Hapart]); (only 1: exists n); (only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *); (only 1: do 2 rewrite CReal_red_seq); (only 1: do 2 rewrite Qred_correct); (only 1: specialize (Hapart (n - 1)%Z _)); (only 1: lra).	0.151694059372	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.0.3.0.0	search with cache (only 1: intros x y z Hlt contra); (only 1: apply Hlt); (only 1: do 2 rewrite <- (CReal_plus_comm x)); (only 1: apply CReal_plus_lt_compat_l); (only 1: exact contra).	0.655545949936	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x); (only 1: apply CRealEq_diff); (only 1: intros n); (only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q); (only 1: do 3 rewrite CReal_red_seq); (only 1: rewrite Qred_correct); (only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd); (only 1: apply Qlt_le_weak); (only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *); (only 1: lra).	0.358151912689	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros); (only 1: split); (only 1: intro abs); (only 1: apply CReal_plus_lt_reg_l in abs); (only 1: destruct H); (only 1: contradiction); (only 1: intro abs); (only 1: apply CReal_plus_lt_reg_l in abs); (only 1: destruct H); (only 1: contradiction).	4.74227690697	1218
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	1	search with cache (only 1: reflexivity).	0.0195319652557	2
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.2.0.0.7	search with cache (only 1: intros x y Heq); (only 1: intros [n Hapart]); (only 1: cbn in Hapart); (only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra)); (only 1: lra).	1.06186413765	607
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Cauchy.QExtra.Q_factorDenom	40
Coq.Reals.Cauchy.QExtra.Q_factorNum_l	40	3.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Qeq); (only 1: simpl); (only 1: destruct a); (only 1: reflexivity); (only 1: now rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc); (only 1: now rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc).	0.0441851615906	10
Coq.Reals.Cauchy.QExtra.Q_factorNum	40	0.0.0.0	search with cache (only 1: intros); (only 1: unfold Qeq); (only 1: simpl); (only 1: lia).	0.0315809249878	4
Coq.Reals.Cauchy.QExtra.Q_reduce_fl	40	0.1.1.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Qeq); (only 1: simpl); (only 1: destruct a); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	0.266355037689	46
Coq.Reals.Cauchy.QExtra.Qle_neq	40
Coq.Reals.Cauchy.QExtra.Qplus_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qgt_lt	40	8.1.0	search with cache (only 1: intros p q); (only 1: intros H); (only 1: assumption).	0.264364957809	151
Coq.Reals.Cauchy.QExtra.Qlt_gt	40	1.2.0	search with cache (only 1: intros p q); (only 1: intros H); (only 1: assumption).	0.14835691452	14
Coq.Reals.Cauchy.QExtra.Qmult_lt_0_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_le_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_le_compat_nonneg	40	0.0.0.0.7.3.2.0.0	search with cache (only 1: intros [xn xd] [yn yd] [zn zd] [tn td] [H0lex Hxlty] [H0lez Hzltt]); (only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *); (only 1: setoid_replace (xn * zn * (Z.pos yd * Z.pos td))%Z with (xn * Z.pos yd * (zn * Z.pos td))%Z by ring); (only 1: setoid_replace (yn * tn * (Z.pos xd * Z.pos zd))%Z with (yn * Z.pos xd * (tn * Z.pos zd))%Z by ring); (only 1: apply Z.mul_le_mono_nonneg); (only 1: lia); (only 1: lia); (only 1: lia); (only 1: lia).	21.3898448944	5438
Coq.Reals.Cauchy.QExtra.Qinv_swap_pos	40	0.0.0.0	search with cache (only 1: intros a b); (only 1: unfold Qeq); (only 1: cbn); (only 1: lia).	0.0321400165558	4
Coq.Reals.Cauchy.QExtra.Qinv_swap_neg	40	0.0	search with cache (only 1: intros a b); (only 1: reflexivity).	0.019446849823	2
Coq.Reals.Cauchy.QExtra.Qabs_Qlt_condition	40
Coq.Reals.Cauchy.QExtra.Qabs_gt	40	6.0.0.7.17.1	search with cache (only 1: intros (H, H')); (only 1: intros p q); (only 1: apply Qabs_case); (only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *); (only 1: lia); (only 1: lra).	18.7738540173	9857
Coq.Reals.Cauchy.QExtra.Qpower_0_r	40	0.0.1	search with cache (only 1: unfold Qeq); (only 1: cbn); (only 1: lia).	0.0241160392761	4
Coq.Reals.Cauchy.QExtra.Qpower_1_r	40	0.0	search with cache (only 1: intros q); (only 1: reflexivity).	0.0181400775909	2
Coq.Reals.Cauchy.QExtra.Qpower_not_0	40
Coq.Reals.Cauchy.QExtra.Qpower_pos_lt	40
Coq.Reals.Cauchy.QExtra.Qpower_minus	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_pos	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_neg	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qzero_eq	40	21	search with cache (only 1: split).	0.16764497757	325
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_decomp'	40
Coq.Reals.Cauchy.QExtra.QarchimedeanExp2_Pos	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	0.19	search with cache (only 1: cbn in *); (only 1: lia).	0.133945941925	186
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	search with cache (only 1: reflexivity).	0.0193049907684	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	search with cache (only 1: reflexivity).	0.0193421840668	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	search with cache (only 1: reflexivity).	0.0190799236298	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40	9.9.8.0.0.1	search with cache (only 1: destruct q as [n d]); (only 1: unfold Qlowbound_ltabs_ZExp2, Qbound_ltabs_ZExp2, Qbound_lt_ZExp2, Qnum); (only 1: destruct n); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	14.8585500717	12044
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.4.2.4.4.2.2.0.0.4	search with cache (only 1: intros); (only 1: split); (only 1: red); (only 1: Ltac.reflexivity); (only 1: red); (only 1: destruct 1); (only 1: trivial); (only 1: red); (only 1: destruct 1); (only 1: Ltac.reflexivity).	3.60045194626	7410
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.8.30.0	search with cache (only 1: red); (only 1: intros); (only 1: destruct H); (only 1: auto with sets); (only 1: auto with sets).	0.533643007278	1836
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	1.0.0.1.8.1.8	search with cache (only 1: constructor); (only 1: auto with sets); (only 1: constructor); (only 1: apply rst_trans with y); (only 1: auto with sets); (only 1: auto with sets); (only 1: auto with sets).	1.71702718735	1084
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	2.1.2.4.2.1.27	search with cache (only 1: induction 1 as [? ?| ]); (only 1: left); (only 1: auto); (only 1: right with y); (only 1: auto); (only 1: left); (only 1: auto).	2.97148299217	6887
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	5.0.1.0.1	search with cache (only 1: intro y0); (only 1: intros); (only 1: right with y); (only 1: auto); (only 1: left).	0.105880022049	151
Coq.Relations.Operators_Properties.clos_rtn1_step	40	5.0.2.2	search with cache (only 1: intro y0); (only 1: right with y0); (only 1: auto); (only 1: left).	0.251505851746	285
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	2.0.2.0.12	search with cache (only 1: induction 1 as [? ?| ]); (only 1: auto with sets); (only 1: apply rt_trans with y); (only 1: auto with sets); (only 1: auto with sets).	0.457103013992	765
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	8.3.4.0.2.22	search with cache (only 1: induction 1 as [? ?| ]); (only 1: apply clos_rt1n_rt); (only 1: left); (only 1: constructor 3 with y); (only 1: auto); (only 1: auto with sets).	11.150906086	31704
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Setoids.Setoid.Seq_refl	40	41.14	search with cache (only 1: Tactics.program_simpl); (only 1: firstorder).	0.999480009079	3696
Coq.Setoids.Setoid.Seq_sym	40	16.0.0	search with cache (only 1: unfold Setoid_Theory in s); (only 1: intros); (only 1: now transitivity y).	0.522673130035	697
Coq.Setoids.Setoid.Seq_trans	40	0.0.6.0.0	search with cache (only 1: unfold Setoid_Theory in s); (only 1: intros); (only 1: transitivity y); (only 1: assumption); (only 1: assumption).	0.119036912918	100
Coq.Setoids.Setoid.gen_st	40	10	search with cache (only 1: CRelationClasses.simpl_crelation).	0.0224261283875	21
Coq.Sets.Integers.le_reflexive	40	3.1	search with cache (only 1: intro E); (only 1: trivial with sets).	0.0109219551086	6
Coq.Sets.Integers.le_antisym	40	10.1	search with cache (only 1: intro E); (only 1: auto with arith).	0.258510112762	119
Coq.Sets.Integers.le_trans	40	2.0.1.11.4.1	search with cache (only 1: intro H'4); (only 1: intro n'); (only 1: intro H'1); (only 1: intro E); (only 1: rewrite E); (only 1: trivial with sets).	2.35655498505	2758
Coq.Sets.Integers.le_Order	40	0.0.0.0.0.0.0.0.1.8.0.1.0.182	search with cache (only 1: split); (only 1: red); (only 1: trivial with sets); (only 1: red); (only 1: intros); (only 1: apply PeanoNat.Nat.le_trans with y); (only 1: auto); (only 1: auto); (only 1: red); (only 1: intros x y H H'); (only 1: rewrite (PeanoNat.Nat.le_antisymm x y)); (only 1: auto); (only 1: auto); (only 1: auto).	9.92371821404	36567
Coq.Sets.Integers.triv_nat	40	62	search with cache (only 1: split).	1.69446706772	9534
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.2.3.1.0.0.0.9	search with cache (only 1: intro H'3); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: red); (only 1: intros x0 H'); (only 1: elim H'); (only 1: destruct 1); (only 1: auto with sets).	1.82722592354	1613
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.6.4.3	search with cache (only 1: intros x0 H'0); (only 1: destruct 1); (only 1: exists x); (only 1: auto using Im_def with sets).	1.07612991333	718
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	2.2.4.8.8	search with cache (only 1: intros u H'2); (only 1: intro H'0); (only 1: elim H'0); (only 1: auto with sets); (only 1: auto with sets).	1.55353093147	2018
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.45.108	search with cache (only 1: intros); (only 1: rewrite <- (Empty_set_zero' U x)); (only 1: auto with sets).	13.1556859016	87129
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.1.0.11	search with cache (only 1: intro); (only 1: intros A x y H'); (only 1: elim H'); (only 1: auto with sets).	1.21491789818	814
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.5	search with cache (only 1: intros X Y I NI); (only 1: red); (only 1: intros x0 H'0); (only 1: elim H'0); (only 1: auto with sets).	1.1963300705	208
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.0.1.1	search with cache (only 1: red); (only 1: red); (only 1: intros x YX); (only 1: auto  7 using Inhabited_Setminus with sets).	0.0317311286926	9
Coq.Sets.Classical_sets.Subtract_inv	40
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.3.3.8	search with cache (only 1: intros x H'); (only 1: red in H'); (only 1: elim H'); (only 1: auto with sets).	0.411519050598	472
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Multiset.meq_refl	40	0	search with cache (only 1: split).	0.0121209621429	1
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	0.1.0.0	search with cache (only 1: destruct x); (only 1: unfold meq); (only 1: destruct y); (only 1: auto).	0.0282740592957	5
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x); (only 1: unfold meq); (only 1: auto).	0.0237538814545	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq); (only 1: unfold munion); (only 1: simpl); (only 1: auto).	0.0247659683228	5
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.0.1.0.0.0	search with cache (only 1: unfold meq); (only 1: unfold munion); (only 1: simpl); (only 1: destruct x); (only 1: destruct y); (only 1: auto with arith).	0.0419659614563	7
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq); (only 1: unfold munion); (only 1: unfold multiplicity); (only 1: destruct z); (only 1: destruct y); (only 1: auto with arith).	0.0377588272095	8
Coq.Sets.Multiset.meq_right	40	3.1.0.0.0.0	search with cache (only 1: unfold meq); (only 1: unfold munion); (only 1: unfold multiplicity); (only 1: destruct z); (only 1: destruct y); (only 1: auto with arith).	0.0508420467377	13
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq); (only 1: unfold munion); (only 1: unfold multiplicity); (only 1: destruct z); (only 1: destruct y); (only 1: auto).	0.0497789382935	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	60.9	search with cache (only 1: intro H'1); (only 1: auto  6 with sets).	5.72110509872	11798
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0191929340363	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1); (only 1: auto  6 with sets).	0.0501301288605	23
Coq.Sets.Powerset_facts.less_than_empty	40	1.0	search with cache (only 1: intro); (only 1: auto with sets).	0.0243570804596	3
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0219240188599	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0209989547729	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  6 with sets).	0.0244770050049	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	1.0.0.0.0.0.1.0.0.0.0.0.0.1	search with cache (only 1: intros x y); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: red); (only 1: intros x1 H'0); (only 1: elim H'0); (only 1: auto with sets); (only 1: auto with sets); (only 1: red); (only 1: intros x1 H'0); (only 1: elim H'0); (only 1: auto with sets); (only 1: auto with sets); (only 1: auto with sets).	2.83936905861	2130
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	9.1.1	search with cache (only 1: unfold Add at 1); (only 1: unfold Add at 1); (only 1: auto  9 with sets).	1.94067907333	926
Coq.Sets.Powerset_facts.Non_disjoint_union	40	1.0.1.0.0.0.1.0.0.0.0.2.1	search with cache (only 1: unfold Add); (only 1: intros x y z); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: red); (only 1: intros x1 H'0); (only 1: elim H'0); (only 1: intros x2 H'1); (only 1: auto with sets); (only 1: intros x2 H'1); (only 1: elim H'1); (only 1: auto with sets); (only 1: auto with sets).	3.33032989502	2001
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	1.0.0.0.1.2.1	search with cache (only 1: unfold Add at 1); (only 1: intros x y H'); (only 1: elim H'); (only 1: intros x1 H'0); (only 1: elim H'0); (only 1: intros x1 H'0); (only 1: auto with sets).	0.305959939957	156
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add); (only 1: auto with sets).	0.0161211490631	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add); (only 1: auto  9 with sets).	0.179824113846	47
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.0104720592499	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	2.2.0.0.0	search with cache (only 1: intros); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: intuition); (only 1: intuition).	0.0478880405426	27
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros); (only 1: auto with sets).	0.0185570716858	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.1.0.1.0.0.0.5	search with cache (only 1: intros X H'); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: red); (only 1: intros x0 H'0); (only 1: elim H'0); (only 1: auto with sets); (only 1: red); (only 1: intros x0 H'0); (only 1: elim H'0).	5.41537880898	3792
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: intros x H1); (only 1: destruct H1); (only 1: unfold In in *); (only 1: assumption); (only 1: intuition).	0.041825056076	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	1.0.1.0.0.1.0.0.1.0	search with cache (only 1: intros); (only 1: apply Extensionality_Ensembles); (only 1: split); (only 1: intros x H1); (only 1: inversion_clear H1); (only 1: intuition); (only 1: contradict H); (only 1: intuition); (only 1: intros x H1); (only 1: inversion_clear H1).	0.718632936478	441
Coq.Sets.Powerset.Empty_set_minimal	40	14.27.3	search with cache (only 1: intro H'6); (only 1: intros H'3 H'4); (only 1: elim H'4).	4.02526593208	15917
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40	24	search with cache (only 1: auto  10 with sets).	0.821773052216	889
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0148241519928	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	6	search with cache (only 1: auto  6 with sets).	0.0134828090668	7
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.5.0.0.0.14.1.3.23	search with cache (only 1: split); (only 1: red); (only 1: red); (only 1: split); (only 1: red); (only 1: intros x H'); (only 1: elim H'); (only 1: simpl); (only 1: auto with sets).	29.2059919834	36221
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.1.0	search with cache (only 1: intros x y z H' H'0); (only 1: intros H'1 H'2); (only 1: auto with sets).	0.0251340866089	6
Coq.Sets.Powerset.Union_increases_l	40	0.0.1	search with cache (only 1: red); (only 1: intros x H'1); (only 1: auto with sets).	0.018317937851	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.0133521556854	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.2.2.5.6	search with cache (only 1: intros H'1 H'2); (only 1: red); (only 1: intros x H'); (only 1: elim H'); (only 1: auto with sets).	1.77730917931	1397
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b); (only 1: red); (only 1: intros x H'); (only 1: elim H'); (only 1: auto with sets).	0.0241661071777	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.7.0.6.1.3.7	search with cache (only 1: intros x0 H'0); (only 1: generalize Rstar_transitive); (only 1: intro T1); (only 1: red); (only 1: red in T1); (only 1: intros x1 y0 H'1); (only 1: exists y0); (only 1: auto with sets).	6.75127887726	10545
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.2.0.0	search with cache (only 1: induction 1); (only 1: auto); (only 1: exists x); (only 1: auto with sets).	0.0271902084351	10
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.0129771232605	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: intuition).	0.0127279758453	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.6.1.0.5.2	search with cache (only 1: unfold contains); (only 1: intros U R S H' x y H'0); (only 1: elim H'0); (only 1: auto with sets); (only 1: intros x0 y0 z H'1 H'2 H'3); (only 1: apply Rstar_n with y0); (only 1: auto with sets); (only 1: auto with sets).	20.9140708447	20347
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Constructive_sets.Extension	40	3.9.2.3.9.2.5.11	search with cache (only 1: red); (only 1: Ltac.split); (only 1: destruct H); (only 1: red); (only 1: auto); (only 1: destruct H); (only 1: red); (only 1: auto).	9.2387740612	38110
Coq.Sets.Constructive_sets.Noone_in_empty	40	9.9	search with cache (only 1: intro n); (only 1: inversion 1).	0.337322950363	695
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red); (only 1: red); (only 1: destruct 1).	0.0148448944092	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.15.5	search with cache (only 1: intros B C H'); (only 1: Ltac.left); (only 1: auto with sets).	1.85554885864	4028
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1); (only 1: auto with sets).	0.0134439468384	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.50.3.2.0	search with cache (only 1: unfold Add at 1); (only 1: intro); (only 1: intro); (only 1: exists x); (only 1: auto with sets).	7.28439998627	50798
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40	1.7.14.2.2.0	search with cache (only 1: intros A x); (only 1: red); (only 1: intro H'1); (only 1: elim (Noone_in_empty x)); (only 1: rewrite H'1); (only 1: auto using Add_intro2 with sets).	4.6021490097	13428
Coq.Sets.Constructive_sets.Singleton_inv	40	0.4	search with cache (only 1: destruct 1); (only 1: auto with sets).	0.0399959087372	29
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'); (only 1: elim H'); (only 1: trivial with sets).	0.0173630714417	4
Coq.Sets.Constructive_sets.Union_inv	40	0.0.12	search with cache (only 1: destruct 1); (only 1: auto with sets); (only 1: auto with sets).	0.301632165909	373
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.1.0	search with cache (only 1: intros B C x H'); (only 1: elim H'); (only 1: auto with sets).	0.0184609889984	4
Coq.Sets.Constructive_sets.Couple_inv	40	1.2.3.0.0.0	search with cache (only 1: intros A x y H'); (only 1: induction H'); (only 1: left); (only 1: trivial with sets); (only 1: right); (only 1: trivial with sets).	0.297311067581	284
Coq.Sets.Constructive_sets.Setminus_intro	40	0	search with cache (only 1: auto with sets).	0.0116419792175	1
Coq.Sets.Constructive_sets.Strict_Included_intro	40	3.0.0.0	search with cache (only 1: intro); (only 1: intros x H'0); (only 1: red); (only 1: auto with sets).	0.0176360607147	7
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.6.5	search with cache (only 1: intros X H'); (only 1: elim H'); (only 1: auto with sets).	0.215342998505	447
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.1	search with cache (only 1: intros); (only 1: apply cong_right); (only 1: trivial).	0.0512402057648	43
Coq.Sets.Permut.comm_left	40	3.2.1	search with cache (only 1: intros); (only 1: apply cong_left); (only 1: apply op_comm).	0.0483479499817	31
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.16.32	search with cache (only 1: intros); (only 1: intros n P IH0 IHS); (only 1: auto).	1.0854818821	4551
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	7.1.0	search with cache (only 1: intros U R H'); (only 1: elim H'); (only 1: auto  10 with sets).	0.291266918182	166
Coq.Sets.Relations_1_facts.contains_is_preorder	40	10	search with cache (only 1: auto  10 with sets).	0.0284290313721	30
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.4.9.0	search with cache (only 1: unfold same_relation at 1); (only 1: intros x y z h); (only 1: elim h); (only 1: auto  10 with sets).	0.969273805618	1314
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0.0	search with cache (only 1: unfold Symmetric, Complement); (only 1: unfold same_relation at 1); (only 1: intuition).	0.0197949409485	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.1	search with cache (only 1: unfold same_relation at 1); (only 1: intuition).	0.0304589271545	20
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Uniset.le_refl	40	0	search with cache (only 1: destr_bool).	0.0166778564453	1
Coq.Sets.Uniset.incl_left	40	2.9.13.18	search with cache (only 1: intros); (only 1: intro z); (only 1: destruct (H z)); (only 1: auto).	3.83076190948	8978
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl); (only 1: intros s1 s2 E a); (only 1: elim (E a)); (only 1: auto).	0.020201921463	4
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.0141820907593	3
Coq.Sets.Uniset.seq_trans	40	0.1.2.15.0.0	search with cache (only 1: destruct x); (only 1: unfold seq); (only 1: intro H); (only 1: intros s1 s2 E a); (only 1: elim (E a)); (only 1: auto).	2.30387187004	3271
Coq.Sets.Uniset.seq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x); (only 1: unfold seq); (only 1: destruct y); (only 1: simpl); (only 1: auto).	0.0265491008759	7
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x); (only 1: unfold seq); (only 1: auto).	0.0182869434357	3
Coq.Sets.Uniset.union_empty_right	40	0.0.0.11.1.0.0.0.2	search with cache (only 1: destruct x); (only 1: unfold seq); (only 1: unfold union); (only 1: simpl); (only 1: intros); (only 1: destruct b); (only 1: auto); (only 1: simpl); (only 1: auto).	5.46941804886	8561
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq); (only 1: unfold charac); (only 1: unfold union); (only 1: simpl); (only 1: destruct x); (only 1: destruct y); (only 1: auto with bool).	0.0581059455872	19
Coq.Sets.Uniset.seq_left	40	0.1.2.0.1.1.0.1.0	search with cache (only 1: unfold seq); (only 1: unfold union); (only 1: unfold charac); (only 1: destruct x); (only 1: destruct y); (only 1: destruct z); (only 1: intros); (only 1: rewrite H); (only 1: auto).	7.99729394913	4162
Coq.Sets.Uniset.seq_right	40	0.0.1.1.0.0.1.0	search with cache (only 1: unfold seq); (only 1: unfold union); (only 1: unfold charac); (only 1: destruct z); (only 1: destruct y); (only 1: intros); (only 1: elim H); (only 1: auto).	0.999044895172	418
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	3.27	search with cache (only 1: red); (only 1: auto with datatypes).	0.645596027374	489
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl); (only 1: auto with datatypes).	0.0222179889679	2
Coq.Sorting.Heap.invert_heap	40	1.13.11	search with cache (only 1: intros l1 l2 e); (only 1: inversion 1); (only 1: auto with datatypes).	1.25079298019	858
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	0.0.1.4	search with cache (only 1: intros x x' Hxx' y y' Hyy'); (only 1: red); (only 1: simpl in *); (only 1: auto).	0.113130092621	27
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	0.16	search with cache (only 1: fix merge 1); (only 1: auto with datatypes).	1.08336210251	645
Coq.Sorting.Heap.list_to_heap	40	0.3	search with cache (only 1: fix merge 1); (only 1: auto with datatypes).	0.0303158760071	5
Coq.Sorting.Heap.heap_to_list	40	0.43	search with cache (only 1: fix merge 1); (only 1: auto with datatypes).	4.54762482643	8471
Coq.Sorting.Heap.treesort	40	0.5	search with cache (only 1: fix merge 1); (only 1: auto with datatypes).	0.0344319343567	7
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	1.3.1	search with cache (only 1: intros l a); (only 1: rewrite multiplicity_In); (only 1: eauto with typeclass_instances).	0.219902038574	61
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40	0.44	search with cache (only 1: apply permut_length_1); (only 1: auto with typeclass_instances).	4.71519517899	6995
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	0.7	search with cache (only 1: red); (only 1: auto with datatypes).	0.0441699028015	23
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation); (only 1: auto with datatypes).	0.0240211486816	2
Coq.Sorting.PermutSetoid.permut_trans	40	0.10.0.0	search with cache (only 1: unfold permutation, meq); (only 1: intros); (only 1: rewrite H); (only 1: trivial).	1.76680898666	756
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation); (only 1: simpl); (only 1: intros); (only 1: auto with datatypes).	0.0425491333008	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	6.0.4.0.1	search with cache (only 1: unfold permutation, meq in *); (only 1: intros); (only 1: repeat rewrite list_contents_app in *); (only 1: simpl in *); (only 1: auto with arith).	2.09445214272	561
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40	0.0.0.3.0.3	search with cache (only 1: unfold permutation, meq in *); (only 1: intros); (only 1: generalize (H a)); (only 1: do 2 rewrite list_contents_app); (only 1: simpl); (only 1: lia).	1.15102100372	333
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.0.1.0.1.1.0.1	search with cache (only 1: intros l l1 l2); (only 1: unfold permutation, meq); (only 1: intros H a); (only 1: generalize (H a)); (only 1: clear H); (only 1: do 2 rewrite list_contents_app); (only 1: simpl); (only 1: lia).	1.44617819786	364
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.0.2.1	search with cache (only 1: unfold permutation, meq); (only 1: intros); (only 1: specialize H with a0); (only 1: rewrite list_contents_app in *); (only 1: simpl in *); (only 1: destruct (eqA_dec a _) as [Ha| Ha]); (only 1: lia); (only 1: lia).	1.00712299347	217
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40	48.0.1.0.0	search with cache (only 1: intros); (only 1: destruct eqA_dec as [_| NEQ]); (only 1: auto); (only 1: contradict NEQ); (only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	35.9851160049	50094
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.7.7	search with cache (only 1: intros l a); (only 1: rewrite multiplicity_InA); (only 1: auto with *).	3.06983590126	603
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.1.1.3.0.0	search with cache (only 1: induction 1); (only 1: apply permut_refl); (only 1: apply permut_cons_eq); (only 1: auto using Equivalence_Reflexive); (only 1: auto using Equivalence_Reflexive); (only 1: auto using Equivalence_Reflexive).	0.221378087997	88
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation_refl'	40
Coq.Sorting.CPermutation.CPermutation_sym	40	5.0.6	search with cache (only 1: intros l a HC); (only 1: inversion HC as [l1 l2 Heq]); (only 1: constructor).	0.801807165146	343
Coq.Sorting.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_app	40	30.0	search with cache (only 1: intros); (only 1: eauto using Add_app).	5.69570708275	6365
Coq.Sorting.CPermutation.CPermutation_app_comm	40	0.2	search with cache (only 1: intros); (only 1: now transitivity (l1 ++ l2)).	0.0209510326385	4
Coq.Sorting.CPermutation.CPermutation_app_rot	40	18.6	search with cache (only 1: intros); (only 1: now rewrite (app_assoc l2)).	1.31384801865	1090
Coq.Sorting.CPermutation.CPermutation_cons_append	40	45.14	search with cache (only 1: intros); (only 1: eauto using Add_head, Add_app).	10.1511700153	13296
Coq.Sorting.CPermutation.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.1.1.3.0.8.3.2.0	search with cache (only 1: induction stack as [| [| ]]); (only 1: simpl); (only 1: constructor); (only 1: intros); (only 1: destruct H); (only 1: apply Sorted_merge); (only 1: auto); (only 1: auto); (only 1: auto).	4.77901697159	4655
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	12.5.53	search with cache (only 1: induction l as [| a l IH]); (only 1: discriminate || auto); (only 1: now constructor).	3.04121184349	10126
Coq.Sorting.Permutation.Permutation_refl'	40	10.5.8.0.9	search with cache (only 1: intros l x HF); (only 1: induction HF); (only 1: induction l); (only 1: constructor); (only 1: now constructor).	35.6073360443	29156
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	1.0	search with cache (only 1: intros l l' Hperm); (only 1: apply perm_trans with (l' := l')).	0.0129492282867	3
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	3.2.20.1	search with cache (only 1: intros x y Heq); (only 1: rewrite Heq); (only 1: repeat constructor); (only 1: assumption).	1.31422495842	2396
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.5	search with cache (only 1: intros); (only 1: rewrite app_comm_cons, Permutation_cons_append); (only 1: now rewrite <- app_assoc).	0.0565061569214	8
Coq.Sorting.Permutation.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_rev	40	0.1.8.0.10	search with cache (only 1: induction l); (only 1: auto); (only 1: simpl); (only 1: rewrite <- IHl); (only 1: auto).	4.92075300217	997
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40
Coq.Sorting.Permutation.Permutation_Forall	40
Coq.Sorting.Permutation.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	13.1.2.12.1.0.0.2	search with cache (only 1: repeat red); (only 1: induction 1); (only 1: simpl); (only 1: eauto); (only 1: simpl); (only 1: auto); (only 1: repeat constructor); (only 1: eauto).	36.471462965	28136
Coq.Sorting.Permutation.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_image	40
Coq.Sorting.Permutation.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_ind_transp	40
Coq.Sorting.Sorted.HdRel_inv	40	0.4.6.21	search with cache (only 1: intros P Q l); (only 1: firstorder); (only 1: inversion H); (only 1: auto).	3.32507801056	5014
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1); (only 1: auto).	0.0214838981628	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.13	search with cache (only 1: inversion 1); (only 1: auto).	0.599586963654	455
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l); (only 1: firstorder using StronglySorted_inv); (only 1: firstorder using StronglySorted_inv).	0.0241711139679	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	14	search with cache (only 1: now subst).	0.0364348888397	75
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	14	search with cache (only 1: now subst).	0.0269780158997	75
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	14	search with cache (only 1: now subst).	0.0368630886078	75
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: decide equality); (only 1: decide equality); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec); (only 1: apply bool_dec).	0.357715845108	59
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0174450874329	1
Coq.Strings.String.eqb_eq	40	1	search with cache (only 1: t_eqb).	0.0214672088623	11
Coq.Strings.String.eqb_neq	40	1	search with cache (only 1: t_eqb).	0.0246748924255	11
Coq.Strings.String.eqb_compat	40	0	search with cache (only 1: <Coq.Strings.Ascii.t_eqb>).	0.0122621059418	1
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.3.2	search with cache (only 1: induction s as [| ? ? IHs]); (only 1: reflexivity); (only 1: cbn); (only 1: apply f_equal, IHs).	0.0267419815063	15
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0201940536499	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0410480499268	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0215148925781	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.0160479545593	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40	1.3.1	search with cache (only 1: destruct x); (only 1: simpl); (only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.04554510117	14
Coq.Strings.Ascii.byte_of_ascii_via_nat	40	0.3.4	search with cache (only 1: destruct x); (only 1: simpl); (only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	3.15806388855	218
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.7	search with cache (only 1: cbv[of_N]); (only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.87212896347	19
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	35	search with cache (only 1: now subst).	0.274145126343	1215
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	6.6.2.3	search with cache (only 1: unfold eq); (only 1: intuition); (only 1: eauto); (only 1: eauto).	29.6436228752	14470
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.65	search with cache (only 1: intros ? ? LT ->); (only 1: auto).	28.4324169159	66749
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	71.8	search with cache (only 1: intros Heq); (only 1: now subst).	4.91800999641	12670
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.2.5.8	search with cache (only 1: intros x y H); (only 1: destruct H); (only 1: red); (only 1: auto with ordered_type).	0.707966089249	1406
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	1.1.3.3	search with cache (only 1: unfold eq, lt); (only 1: intuition); (only 1: MO1.order); (only 1: MO2.order).	2.16301512718	629
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.0.0.5.2	search with cache (only 1: intuition); (only 1: induction x); (only 1: intuition); (only 1: intuition); (only 1: eauto).	0.500357866287	198
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	5	search with cache (only 1: now apply N.gt_lt).	0.0210001468658	6
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	28	search with cache (only 1: now apply Ascii_as_OT.cmp_eq).	2.53758096695	3288
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	0	search with cache (only 1: solve_proper).	0.162727832794	1
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.1.0	search with cache (only 1: intros); (only 1: subst); (only 1: auto).	0.0237240791321	5
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	3.2	search with cache (only 1: intros); (only 1: now rewrite H).	0.0541291236877	7
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	3.4.5.5	search with cache (only 1: simple induction l); (only 1: auto); (only 1: simpl); (only 1: auto).	0.788771867752	662
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	23.6.10	search with cache (only 1: simple induction l); (only 1: auto); (only 1: intuition).	14.4375178814	8448
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	10	search with cache (only 1: eauto with *).	0.277370929718	53
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	8	search with cache (only 1: firstorder).	0.159034967422	19
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	2.0.0	search with cache (only 1: intros LT EQ); (only 1: rewrite EQ in LT); (only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0363268852234	5
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.0163741111755	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: firstorder).	0.0140950679779	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0137708187103	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0180139541626	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.0153079032898	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.0127968788147	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0132279396057	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0172951221466	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	1.2	search with cache (only 1: do 2 rewrite InA_alt); (only 1: firstorder).	0.0590581893921	14
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0.6.0.22.0	search with cache (only 1: induction 1); (only 1: exists y); (only 1: firstorder); (only 1: left); (only 1: firstorder); (only 1: reflexivity); (only 1: firstorder).	2.28227615356	2597
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.0.0	search with cache (only 1: rewrite In_alt); (only 1: firstorder); (only 1: now compute).	0.0320360660553	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	31	search with cache (only 1: now intros <-).	6.83518600464	3701
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	3	search with cache (only 1: now intros <-).	0.212074995041	38
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons); (only 1: intuition).	0.0566909313202	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.6.45.5	search with cache (only 1: intuition); (only 1: invlist InA); (only 1: intuition); (only 1: intuition).	32.4470539093	20420
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	0.2.0.0	search with cache (only 1: unfold eq); (only 1: intros); (only 1: rewrite H); (only 1: discriminate).	0.294054985046	16
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	1.4.2	search with cache (only 1: intros x y L E); (only 1: rewrite E); (only 1: auto).	0.0235979557037	10
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.3.9.7	search with cache (only 1: compute); (only 1: intros); (only 1: destruct H); (only 1: auto).	0.810281991959	451
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.0194201469421	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.0207359790802	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.0144259929657	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.030179977417	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.2.5.0.8.1	search with cache (only 1: unfold eqke); (only 1: compute); (only 1: intuition); (only 1: eauto); (only 1: subst b); (only 1: intuition).	13.9318139553	4748
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.0.0.25	search with cache (only 1: split); (only 1: auto); (only 1: auto); (only 1: eauto).	0.642179012299	1080
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	5.0.0.0	search with cache (only 1: split); (only 1: eauto); (only 1: auto); (only 1: eauto).	0.259218931198	18
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	2.3.0	search with cache (only 1: inversion 1); (only 1: intuition); (only 1: eauto).	0.181167840958	11
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	1.0.5.0	search with cache (only 1: unfold eqke); (only 1: inversion_clear 1); (only 1: intuition); (only 1: intuition).	2.30038309097	45
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	6.12.27.14.27.0.128	search with cache (only 1: constructor); (only 1: red); (only 1: eauto with *); (only 1: red); (only 1: eauto with *); (only 1: intros x l' H H0); (only 1: eauto with *).	9.81556582451	58610
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.23	search with cache (only 1: split); (only 1: auto); (only 1: auto).	1.55547595024	1796
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.0167989730835	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	4	search with cache (only 1: order).	0.169447898865	5
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0188429355621	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.017765045166	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0154738426208	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.0183410644531	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0171980857849	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.0161719322205	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0162210464478	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.016184091568	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0163300037384	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0154740810394	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0160341262817	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0155589580536	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.1.0.2.2.0.2.2	search with cache (only 1: intros); (only 1: case (compare x y)); (only 1: intros H'); (only 1: exists H'); (only 1: auto); (only 1: intros H'); (only 1: exfalso); (only 1: order); (only 1: intros H'); (only 1: exfalso); (only 1: order).	2.26555299759	2076
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	1.1.3.0.0.1.0.0.3.1.1	search with cache (only 1: intros); (only 1: case (compare x y)); (only 1: intros H'); (only 1: exfalso); (only 1: order); (only 1: intros H'); (only 1: exfalso); (only 1: order); (only 1: intros H'); (only 1: exists H'); (only 1: auto).	7.76316308975	5011
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	2.1.2.11.0	search with cache (only 1: intros); (only 1: case (compare x y)); (only 1: auto with ordered_type); (only 1: auto with ordered_type); (only 1: auto with ordered_type).	1.33731102943	1173
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	0.24.0	search with cache (only 1: intros); (only 1: rewrite <- H); (only 1: auto with ordered_type).	3.21893692017	3175
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	1.2	search with cache (only 1: intros); (only 1: now rewrite H).	0.0530090332031	5
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	2.4.5.5	search with cache (only 1: simple induction l); (only 1: auto); (only 1: simpl); (only 1: auto).	0.71440911293	519
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	25.8.11	search with cache (only 1: simple induction l); (only 1: auto); (only 1: auto with ordered_type).	11.2012081146	9129
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.3.9.7	search with cache (only 1: compute); (only 1: intros); (only 1: destruct H); (only 1: auto with ordered_type).	0.593159914017	442
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.134321928024	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0132241249084	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.136193037033	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.0214371681213	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0127840042114	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke); (only 1: intuition).	0.0321910381317	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40	0.2.6.0.8.1	search with cache (only 1: unfold eqke); (only 1: compute); (only 1: intuition); (only 1: eauto with ordered_type); (only 1: subst b); (only 1: intuition).	10.7094340324	4212
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	3	search with cache (only 1: eauto with ordered_type).	0.0240659713745	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0246419906616	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	8.5.14.0.4.0	search with cache (only 1: unfold eqk, ltk); (only 1: unfold eqke); (only 1: intuition); (only 1: simpl in *); (only 1: subst b); (only 1: order).	17.5812799931	13201
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	2.0.0.30	search with cache (only 1: split); (only 1: auto with ordered_type); (only 1: auto with ordered_type); (only 1: eauto with ordered_type).	0.909268856049	2151
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	7.0.0.0	search with cache (only 1: constructor); (only 1: eauto with ordered_type); (only 1: auto with ordered_type); (only 1: eauto with ordered_type).	0.643158912659	199
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	2.15.20.7	search with cache (only 1: constructor); (only 1: compute); (only 1: order); (only 1: eauto with ordered_type).	5.51685786247	12102
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk); (only 1: auto with ordered_type).	0.0205390453339	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.1.0	search with cache (only 1: unfold eqk, ltk); (only 1: intuition); (only 1: eauto with ordered_type).	0.0294089317322	5
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.1.0	search with cache (only 1: unfold eqk, ltk); (only 1: intuition); (only 1: eauto with ordered_type).	0.030081987381	5
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	41.8	search with cache (only 1: firstorder); (only 1: now rewrite H).	25.2180900574	36643
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	1.3.0	search with cache (only 1: inversion_clear 1); (only 1: intuition); (only 1: eauto with ordered_type).	0.0395698547363	7
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	1.0.4.2	search with cache (only 1: inversion_clear 1); (only 1: compute in H0); (only 1: intuition); (only 1: eauto with *).	6.46685290337	191
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	9.0.0.1.0.1.0.0	search with cache (only 1: unfold min, gmin); (only 1: case compare_spec); (only 1: auto with relations); (only 1: intros); (only 1: elim (ge_not_lt x y)); (only 1: auto); (only 1: auto); (only 1: auto with relations).	9.6250231266	9671
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	7.10	search with cache (only 1: apply max_r); (only 1: order).	0.103703975677	173
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	7.6.2.11	search with cache (only 1: pose proof (max_spec n m) as Hm); (only 1: intuition); (only 1: order); (only 1: order).	6.35995197296	3716
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0189051628113	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	19	search with cache (only 1: solve_max).	1.61947202682	1140
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0262229442596	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	search with cache (only 1: solve_max).	0.0207159519196	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	2	search with cache (only 1: solve_max).	0.0200090408325	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.0206520557404	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2.2.0	search with cache (only 1: split); (only 1: solve_max); (only 1: solve_max).	0.0406761169434	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition); (only 1: destruct (max_spec n m)); (only 1: intuition); (only 1: order || (right; order) || (left; order)); (only 1: intuition); (only 1: order).	0.037456035614	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m)); (only 1: intuition); (only 1: order || (right; order) || (left; order)); (only 1: order || (right; order) || (left; order)); (only 1: order || (right; order) || (left; order)); (only 1: intuition); (only 1: order); (only 1: order); (only 1: order).	0.196021080017	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros); (only 1: apply max_lub_iff); (only 1: solve_max).	0.0866630077362	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	1.5.4	search with cache (only 1: intros); (only 1: apply max_lub_iff); (only 1: solve_max).	0.286227941513	66
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	18.3	search with cache (only 1: apply min_l); (only 1: order).	0.218554973602	387
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	8.7.3.5	search with cache (only 1: pose proof (min_spec n m) as Hm); (only 1: intuition); (only 1: order); (only 1: order).	5.92168402672	3296
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0176742076874	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	22	search with cache (only 1: solve_min).	3.84594106674	2027
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0233840942383	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	1	search with cache (only 1: solve_min).	0.0790278911591	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0197370052338	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0198521614075	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	2.2.0	search with cache (only 1: split); (only 1: solve_min); (only 1: solve_min).	0.0410740375519	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.1.0.0.2.1	search with cache (only 1: intuition); (only 1: destruct (min_spec n m)); (only 1: intuition); (only 1: order || (right; order) || (left; order)); (only 1: intuition); (only 1: order).	0.0512290000916	12
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m)); (only 1: intuition); (only 1: order || (right; order) || (left; order)); (only 1: order || (right; order) || (left; order)); (only 1: order || (right; order) || (left; order)); (only 1: intuition); (only 1: order); (only 1: order); (only 1: order).	0.113943815231	35
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros); (only 1: apply min_glb_iff); (only 1: solve_min).	0.0315899848938	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros); (only 1: apply min_glb_iff); (only 1: solve_min).	0.0840299129486	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	1.3	search with cache (only 1: apply max_l); (only 1: solve_min).	0.023628950119	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	4.14	search with cache (only 1: apply min_l); (only 1: solve_max).	3.115639925	1701
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	10.49	search with cache (only 1: apply max_mono); (only 1: eauto with *).	10.4638888836	14820
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	3.51	search with cache (only 1: apply min_mono); (only 1: congruence).	6.42481207848	8795
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	1.3.3.11.2	search with cache (only 1: intros Compat Hl Hr); (only 1: apply max_case_strong); (only 1: intros); (only 1: rewrite <- H); (only 1: auto).	0.593967914581	871
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	2.2.2.0	search with cache (only 1: intros); (only 1: apply Private_Dec.max_case_strong); (only 1: auto); (only 1: auto).	0.0170819759369	10
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	5.2.0.0.9	search with cache (only 1: intros); (only 1: apply Private_Dec.max_case); (only 1: left); (only 1: auto); (only 1: auto with relations).	0.668461084366	779
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	3.12.3	search with cache (only 1: intros Compat Hl Hr); (only 1: apply min_case_strong); (only 1: congruence).	1.20200705528	1278
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	2.2.3.0	search with cache (only 1: intros); (only 1: apply Private_Dec.min_case_strong); (only 1: auto); (only 1: auto).	0.0594770908356	55
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	5.2.0.0.1	search with cache (only 1: intros); (only 1: apply Private_Dec.min_case); (only 1: left); (only 1: auto); (only 1: auto with relations).	0.23660492897	173
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.1.1.0	search with cache (only 1: case compare_spec); (only 1: easy); (only 1: easy); (only 1: easy).	0.0281147956848	6
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: apply compare_eq_iff); (only 1: easy).	0.0126030445099	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	0.4.0.4.30	search with cache (only 1: split); (only 1: repeat red); (only 1: iorder); (only 1: repeat red); (only 1: iorder).	0.46720790863	1019
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.2.2	search with cache (only 1: repeat red); (only 1: compute); (only 1: iorder).	0.0347640514374	7
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.0	search with cache (only 1: compute); (only 1: iorder).	0.01371717453	2
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	11	search with cache (only 1: iorder).	0.171516180038	85
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0153348445892	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	1.1.3.0.0.0	search with cache (only 1: intros x y); (only 1: rewrite le_lteq); (only 1: destruct (compare_spec x y)); (only 1: intuition); (only 1: auto); (only 1: auto).	0.709718942642	209
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0174889564514	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.0	search with cache (only 1: rewrite compare_gt_iff); (only 1: iorder).	0.0182671546936	3
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	1.0.0	search with cache (only 1: rewrite le_not_gt_iff); (only 1: rewrite compare_lt_iff); (only 1: intuition).	0.0225398540497	4
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.2	search with cache (only 1: intro H); (only 1: order).	0.0172278881073	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	3	search with cache (only 1: order).	0.0140390396118	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: order).	0.0127739906311	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	search with cache (only 1: order).	0.0128300189972	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0129880905151	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	3	search with cache (only 1: order).	0.0186960697174	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0132868289948	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.0120959281921	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0123579502106	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.012069940567	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	search with cache (only 1: order).	0.0135431289673	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2	search with cache (only 1: order).	0.014955997467	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	3	search with cache (only 1: order).	0.0145378112793	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.0119760036469	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2	search with cache (only 1: order).	0.0129590034485	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0118269920349	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0111420154572	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	search with cache (only 1: order).	0.0106608867645	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	5.5.5.2	search with cache (only 1: intuition); (only 1: order); (only 1: order); (only 1: order).	2.52445101738	1691
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H); (only 1: now apply compare_eq_iff).	0.0135569572449	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff); (only 1: apply compare_eq_iff); (only 1: apply compare_eq_iff); (only 1: apply compare_eq_iff); (only 1: apply compare_eq_iff); (only 1: apply compare_eq_iff); (only 1: now apply compare_eq_iff).	0.0381739139557	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0162389278412	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	3	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0222160816193	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.2.1.3	search with cache (only 1: rewrite <- compare_le_iff); (only 1: rewrite compare_gt_iff); (only 1: case leb_spec0); (only 1: now rewrite <- compare_le_iff, compare_ngt_iff); (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.883347034454	169
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	1.5.3	search with cache (only 1: case leb_spec0); (only 1: now rewrite <- compare_le_iff, compare_ngt_iff); (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.653924942017	149
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	3.5.3	search with cache (only 1: case ltb_spec0); (only 1: intuition); (only 1: intuition).	0.792398929596	371
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.8	search with cache (only 1: rewrite <- compare_le_iff); (only 1: rewrite compare_gt_iff); (only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.611440896988	135
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	2.0.11.0	search with cache (only 1: apply leb_le); (only 1: rewrite <- compare_le_iff); (only 1: rewrite compare_gt_iff); (only 1: now rewrite <- compare_lt_iff, compare_refl).	1.40847182274	939
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	0.0.3.0.8	search with cache (only 1: case ltb_spec0); (only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff); (only 1: case leb_spec0); (only 1: now rewrite <- compare_le_iff, compare_ngt_iff); (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.648460865021	277
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	0.0.3.0.11	search with cache (only 1: case leb_spec0); (only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff); (only 1: case ltb_spec0); (only 1: now rewrite <- compare_lt_iff, compare_nge_iff); (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.15559792519	722
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.2.0.0.1.3.2.24	search with cache (only 1: case leb_spec0); (only 1: rewrite <- compare_le_iff); (only 1: now destruct compare); (only 1: rewrite <- compare_le_iff); (only 1: destruct compare); (only 1: easy || now destruct 1); (only 1: easy || now destruct 1); (only 1: easy || now destruct 1).	16.1271021366	11850
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.2.0.0	search with cache (only 1: Bool.destr_bool); (only 1: Ltac.split); (only 1: auto); (only 1: auto).	0.0223460197449	17
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.2.1.0.0	search with cache (only 1: intros); (only 1: unfold eq, lt, le in *); (only 1: case leb); (only 1: case leb); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.298498868942	35
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	27	search with cache (only 1: now symmetry).	0.190005064011	361
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	15.53.6.1	search with cache (only 1: intros); (only 1: intuition); (only 1: elim (CRelationClasses.StrictOrder_Irreflexive x)); (only 1: auto).	11.1916840076	29207
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	20	search with cache (only 1: apply (@CRelationClasses.symmetry _ _ _ _)).	0.221935987473	363
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	1	search with cache (only 1: auto with *).	0.0123400688171	2
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0192968845367	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.1.2.3.2.0	search with cache (only 1: intros x y H); (only 1: destruct (P.lt_total x y)); (only 1: rewrite P.le_lteq); (only 1: intuition); (only 1: rewrite P.le_lteq); (only 1: intuition).	2.32813096046	2044
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.1.1.1	search with cache (only 1: intros x y); (only 1: rewrite P.le_lteq); (only 1: generalize (P.lt_total x y)); (only 1: intuition).	0.104614019394	26
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	11.0.7.3	search with cache (only 1: apply eq_true_iff_eq); (only 1: intuition); (only 1: apply eqb_eq); (only 1: reflexivity).	15.9328811169	14347
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	9.1.6	search with cache (only 1: intros); (only 1: subst); (only 1: auto).	1.30390787125	893
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40	0.0.1.16	search with cache (only 1: intros H v); (only 1: apply caseS with (v := v)); (only 1: intros); (only 1: reflexivity).	0.514487981796	464
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.0	search with cache (only 1: refine (@rectS _ _ _ _)); (only 1: now simpl); (only 1: now simpl).	0.0234401226044	3
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40	0.1.5.1.0.0.0.0.0	search with cache (only 1: induction p); (only 1: intros); (only 1: rewrite 2!(eta v)); (only 1: simpl); (only 1: auto); (only 1: intros); (only 1: rewrite 2!(eta v)); (only 1: simpl); (only 1: now rewrite IHp).	2.41124391556	1197
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	0.0.20.8	search with cache (only 1: generalize dependent n); (only 1: induction p); (only 1: now simpl); (only 1: now simpl).	0.767038106918	1049
Coq.Vectors.VectorSpec.map_id	40	4.2.11.1.12.20	search with cache (only 1: intros n k1); (only 1: induction k1); (only 1: reflexivity); (only 1: simpl); (only 1: f_equal); (only 1: auto).	11.7865049839	18704
Coq.Vectors.VectorSpec.map_map	40	3.0.14.0.0.0	search with cache (only 1: induction v); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: rewrite IHv); (only 1: f_equal).	2.84270095825	2072
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	1.2.1.6.0.0.0	search with cache (only 1: induction v); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: rewrite H by constructor); (only 1: rewrite IHv); (only 1: intuition).	1.7042028904	865
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	1.0	search with cache (only 1: intros); (only 1: reflexivity).	0.0161600112915	3
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.6.0.0.2	search with cache (only 1: induction p); (only 1: intros n v le le'); (only 1: auto); (only 1: intros n v le le'); (only 1: destruct v); (only 1: inversion le); (only 1: simpl); (only 1: apply f_equal); (only 1: apply IHp).	33.5686070919	12479
Coq.Vectors.VectorSpec.uncons_cons	40	2.0	search with cache (only 1: intros); (only 1: now constructor).	0.0166840553284	4
Coq.Vectors.VectorSpec.append_comm_cons	40	3.3.0	search with cache (only 1: simpl); (only 1: intros m w le); (only 1: reflexivity).	0.0222449302673	9
Coq.Vectors.VectorSpec.splitat_append	40	3.6.4.0.0.5	search with cache (only 1: induction v); (only 1: reflexivity); (only 1: simpl); (only 1: intros); (only 1: rewrite IHv); (only 1: reflexivity).	3.61476898193	2333
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	8.2.0.0.3.2.11	search with cache (only 1: destruct n); (only 1: auto); (only 1: destruct m); (only 1: simpl); (only 1: destruct (to_nat (L n p))); (only 1: now destruct (to_nat p)); (only 1: left).	4.71580505371	4504
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	17.13.11.5	search with cache (only 1: intros m n p); (only 1: intro H); (only 1: subst p); (only 1: congruence).	19.7846448421	40710
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	7.2.4.1.0	search with cache (only 1: intro); (only 1: intros a b x); (only 1: case x); (only 1: intros); (only 1: auto with sets).	3.69937705994	2864
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	1.24.6.29.21	search with cache (only 1: red); (only 1: intro H); (only 1: intro n); (only 1: constructor); (only 1: auto).	3.83879089355	20080
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.8.2.5.14	search with cache (only 1: intro x); (only 1: intros y H2); (only 1: induction H2); (only 1: intros); (only 1: apply Acc_inv with y); (only 1: auto with sets); (only 1: auto with sets); (only 1: auto with sets).	12.2387800217	23414
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.1	search with cache (only 1: red); (only 1: auto with sets).	0.0146141052246	3
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Inclusion.Acc_incl	40	3.21.1.23.3	search with cache (only 1: intro z); (only 1: apply Acc_rect); (only 1: intro H); (only 1: Ltac.split); (only 1: auto).	13.3305840492	60736
Coq.Wellfounded.Inclusion.wf_incl	40	0.6.14	search with cache (only 1: intros); (only 1: intro z); (only 1: auto with sets).	0.319474935532	705
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	1.1.5.3.5.1	search with cache (only 1: intros y0 H1); (only 1: apply Acc_intro); (only 1: intros x H); (only 1: apply (Acc_lemma (f x))); (only 1: trivial); (only 1: trivial).	0.807987928391	1597
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.ZArith.Zdigits.binary_value	40
Coq.ZArith.Zdigits.two_compl_value	40	0.0.2.3.2.3	search with cache (only 1: refine (nat_rect _ _ _)); (only 1: intros); (only 1: exact 0%Z); (only 1: intros); (only 1: inversion H0); (only 1: exact (bit_value h + 2 * H H2)%Z).	0.29745721817	285
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	3	search with cache (only 1: reflexivity).	0.0270121097565	12
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.2.1.0	search with cache (only 1: destruct b); (only 1: simpl); (only 1: auto); (only 1: auto).	0.039332151413	7
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	2.2	search with cache (only 1: simpl); (only 1: auto).	0.153840065002	49
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.2.0.0.0.0.1	search with cache (only 1: destruct z as [| p| p]); (only 1: auto); (only 1: auto); (only 1: destruct p as [p| p| ]); (only 1: auto); (only 1: auto); (only 1: auto).	0.108608961105	20
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	1.1.0.0.0.2.0.0.5.0.2	search with cache (only 1: unfold bit_value); (only 1: destruct z as [| p| p]); (only 1: tauto || (intro H; elim H)); (only 1: destruct p); (only 1: auto); (only 1: tauto || (intro H; elim H)); (only 1: auto); (only 1: destruct p); (only 1: tauto || (intro H; elim H)); (only 1: tauto || (intro H; elim H)); (only 1: tauto || (intro H; elim H)).	31.0233922005	11826
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.1.2.2.1	search with cache (only 1: intros n z); (only 1: rewrite (two_power_nat_S n)); (only 1: generalize (Zmod2_twice z)); (only 1: destruct (Zeven_odd_dec z) as [H| H]); (only 1: rewrite (Zeven_bit_value z H)); (only 1: lia); (only 1: rewrite (Zodd_bit_value z H)); (only 1: lia).	0.706346035004	308
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	1.56.0	search with cache (only 1: intros); (only 1: apply Z.lt_le_incl); (only 1: now apply Z.pow_gt_lin_r).	4.44502592087	7619
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	5.1.3.0.1.43	search with cache (only 1: destruct a); (only 1: simpl); (only 1: lia); (only 1: compute); (only 1: lia); (only 1: easy).	4.11293101311	3205
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	26	search with cache (only 1: now destruct a).	0.21302485466	333
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0151789188385	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0158429145813	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.2.1.1	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b)); (only 1: intros); (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b)); (only 1: lia).	0.0469269752502	8
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.2.1	search with cache (only 1: intros); (only 1: generalize (Zrem_lt_pos a b)); (only 1: lia).	0.0321700572968	6
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.2.1	search with cache (only 1: intros); (only 1: generalize (Zrem_lt_pos a b)); (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b)); (only 1: lia).	0.0521500110626	8
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.2.1	search with cache (only 1: intros); (only 1: generalize (Zrem_lt_pos a b)); (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b)); (only 1: lia).	0.0844111442566	15
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	5.0.0.3.2	search with cache (only 1: intros); (only 1: destruct (Zquot_mod_unique_full a b q r)); (only 1: auto); (only 1: auto); (only 1: lia).	1.63215494156	697
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	2.2.2.0.8.3.0.5	search with cache (only 1: intros [| p| p]); (only 1: rewrite Zrem_odd, Zodd_even_bool); (only 1: simpl); (only 1: auto); (only 1: rewrite Zrem_odd, Zodd_even_bool); (only 1: now destruct Z.even); (only 1: rewrite Zrem_odd, Zodd_even_bool); (only 1: now destruct Z.even).	11.8675107956	10933
Coq.ZArith.Zquot.Zodd_rem	40	0.2.0.0.0.0.0	search with cache (only 1: intros a); (only 1: rewrite Zrem_even); (only 1: destruct a as [| p| p]); (only 1: trivial); (only 1: now destruct p); (only 1: simpl); (only 1: now destruct p).	0.0634429454803	14
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0137248039246	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0112888813019	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0139801502228	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	7.1.17.10	search with cache (only 1: intros b Hb a); (only 1: rewrite Z.mod_divide); (only 1: trivial); (only 1: auto).	6.11967396736	7100
Coq.ZArith.Znumtheory.Zdivide_mod	40	5.6.9.1.0.1	search with cache (only 1: intros a b); (only 1: intros (c, Hc)); (only 1: zero_or_not b); (only 1: subst); (only 1: apply Z.mod_mul); (only 1: auto).	19.231058836	14820
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	43	search with cache (only 1: Z.order).	13.1345369816	9307
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	16.8.0	search with cache (only 1: intros Hb); (only 1: intros a b q); (only 1: now apply Z.divide_pos_le).	15.5649359226	5791
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.2.7.1	search with cache (only 1: constructor); (only 1: auto with zarith); (only 1: apply Z.divide_0_r); (only 1: intuition).	0.137612819672	221
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.13.35.1	search with cache (only 1: constructor); (only 1: auto with zarith); (only 1: easy); (only 1: auto).	19.2454791069	26286
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.7.7.1	search with cache (only 1: constructor); (only 1: auto with zarith); (only 1: auto with zarith); (only 1: intuition).	0.309985876083	540
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	1.1.1.0.0	search with cache (only 1: induction 1); (only 1: constructor); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0519528388977	8
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1); (only 1: constructor); (only 1: intuition); (only 1: intuition); (only 1: intuition).	0.0828619003296	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]); (only 1: apply Z.divide_antisym); (only 1: auto); (only 1: auto).	0.0292630195618	4
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	29.0	search with cache (only 1: intros a b); (only 1: now apply Zis_gcd_sym).	7.80080294609	4124
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.2.2.0.2	search with cache (only 1: red); (only 1: constructor); (only 1: apply Z.divide_1_l); (only 1: apply Z.divide_1_l); (only 1: auto).	0.162964820862	119
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	22.3	search with cache (only 1: intros [q Hq]); (only 1: discriminate).	1.41283297539	1161
Coq.ZArith.Znumtheory.not_prime_1	40	0.37.12	search with cache (only 1: destruct 1); (only 1: contradict H); (only 1: apply Z.lt_irrefl).	6.45588612556	6430
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.16	search with cache (only 1: intros n Hn Hnp); (only 1: apply Z.gcd_greatest).	0.13879108429	126
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	1.0.1.0.0.0.0.1.1.0.2.0.0	search with cache (only 1: unfold Z.modulo); (only 1: intros Hb); (only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b)); (only 1: unfold Z.modulo); (only 1: destruct Z.div_eucl as (q, r)); (only 1: intros EQ POS NEG); (only 1: red); (only 1: destruct b); (only 1: now destruct Hb); (only 1: left); (only 1: now apply POS); (only 1: right); (only 1: now apply NEG).	29.5549190044	11515
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	1.10.5.2.0	search with cache (only 1: intros); (only 1: rewrite Z.mul_comm); (only 1: unfold Z.modulo); (only 1: assert (Hb' : b <> 0) by now destruct b); (only 1: now apply Z.mod_eq).	27.8390769958	11629
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	1.5.0	search with cache (only 1: intros); (only 1: unfold Z.modulo); (only 1: auto).	0.0440561771393	19
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a); (only 1: auto); (only 1: auto); (only 1: auto).	0.0300061702728	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	8.0	search with cache (only 1: intros); (only 1: auto).	0.0203399658203	10
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a); (only 1: auto); (only 1: auto); (only 1: auto).	0.0294361114502	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	1.0.0.0.8.0	search with cache (only 1: intros); (only 1: Z.swap_greater); (only 1: apply Z.div_pos); (only 1: intros Hb); (only 1: auto with zarith); (only 1: auto).	1.12976908684	614
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	1.0.0.0	search with cache (only 1: intros); (only 1: apply Z.div_le_mono); (only 1: auto using Z.gt_lt, Z.ge_le); (only 1: auto using Z.gt_lt, Z.ge_le).	0.0314939022064	5
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.1.0	search with cache (only 1: intros a b); (only 1: intros); (only 1: rewrite Z.div_exact); (only 1: auto); (only 1: auto).	0.142416954041	55
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	1.2.1.0.0	search with cache (only 1: intros); (only 1: zero_or_not n); (only 1: zero_or_not n); (only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod); (only 1: auto).	0.0869798660278	16
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.0	search with cache (only 1: intros); (only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod); (only 1: auto).	0.134052991867	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros); (only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod); (only 1: auto).	0.0248370170593	3
Coq.ZArith.Zdiv.eqm_refl	40	12.2	search with cache (only 1: intros Hb); (only 1: intuition try easy).	0.122620820999	187
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm); (only 1: auto).	0.0179288387299	2
Coq.ZArith.Zdiv.eqm_trans	40
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	0.2.2.1	search with cache (only 1: repeat red); (only 1: intros); (only 1: repeat rewrite Zmod_mod); (only 1: auto).	0.0275628566742	9
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.2.0	search with cache (only 1: intros a); (only 1: rewrite Zmod_odd, Zodd_even_bool); (only 1: now destruct Z.even).	0.0294859409332	5
Coq.ZArith.Zdiv.Zeven_mod	40	0.1.0	search with cache (only 1: intros a); (only 1: rewrite Zmod_odd, Zodd_even_bool); (only 1: now destruct Z.even).	0.0400819778442	12
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.21.3	search with cache (only 1: intros); (only 1: rewrite Z.mod_divide); (only 1: reflexivity); (only 1: now intros ->).	3.55816984177	4420
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.1.2	search with cache (only 1: intros); (only 1: zero_or_not c); (only 1: apply Z.mod_add); (only 1: auto).	0.0526659488678	27
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.2.0.4.0.0	search with cache (only 1: intros a b); (only 1: intros Hb); (only 1: zero_or_not b); (only 1: rewrite Z.div_exact); (only 1: now intros ->); (only 1: now intros ->).	0.63628911972	219
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.9.1.5	search with cache (only 1: intros b Hb a); (only 1: rewrite Z.div_exact); (only 1: auto); (only 1: now intros ->).	3.77805900574	2166
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	5.5.1.0.0	search with cache (only 1: intros); (only 1: zero_or_not b); (only 1: apply Z.mod_opp_l_z); (only 1: auto); (only 1: auto).	1.10689711571	719
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zcomplements.floor_gt0	40	0.0.0	search with cache (only 1: intros); (only 1: Z.swap_greater); (only 1: easy).	0.021791934967	3
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0.0	search with cache (only 1: unfold Zlength); (only 1: auto with zarith).	0.0138227939606	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40	4.0.0.0.3.0.0.0.0.0.0.3.2.3	search with cache (only 1: assert (H : forall l acc, Zlength_aux acc A l = acc + Z.of_nat (length l))); (only 1: clear l); (only 1: induction l); (only 1: auto with zarith); (only 1: intros); (only 1: simpl length); (only 1: simpl Zlength_aux); (only 1: rewrite IHl, Nat2Z.inj_succ, Z.add_succ_comm); (only 1: auto); (only 1: induction l); (only 1: unfold Zlength); (only 1: now rewrite H); (only 1: unfold Zlength); (only 1: now rewrite H).	27.8272669315	21670
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0104458332062	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.00881505012512	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	4.6.11.2.1	search with cache (only 1: induction n); (only 1: trivial); (only 1: intros); (only 1: apply Pos2Nat.inj_iter); (only 1: now f_equal).	7.20643281937	5014
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	2	search with cache (only 1: let rec add_permut := repeat reflexivity || match goal with | |- req ?t _ => <Coq.setoid_ring.Ring_polynom.add_permut_rec> t end in add_permut).	0.0119860172272	3
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.0107350349426	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	4	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0129971504211	5
Coq.ZArith.Zpower.two_p_equiv	40	2.0.1.40	search with cache (only 1: destruct x); (only 1: trivial); (only 1: now apply Pos.iter_swap_gen); (only 1: trivial).	0.82683801651	1257
Coq.ZArith.Zpower.two_power_nat_S	40	2.1.1	search with cache (only 1: induction n); (only 1: trivial); (only 1: trivial).	0.0478961467743	13
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	4	search with cache (only 1: apply Pos2Nat.inj_iter).	0.012088060379	5
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0117650032043	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.0.13.5.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: red); (only 1: auto with zarith); (only 1: now destruct 1).	3.13256287575	3521
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: exists (Z.to_nat x)); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: symmetry); (only 1: now apply Z2Nat.id).	0.0405139923096	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	3.1.1.1.6.0.25	search with cache (only 1: intros P Hrec); (only 1: induction x as [x IH] using (well_founded_induction_type R_wf)); (only 1: apply Hrec); (only 1: intros y (Hy, Hy')); (only 1: apply IH); (only 1: now split); (only 1: trivial).	19.4549951553	12959
Coq.ZArith.Wf_Z.Z_lt_rec	40
Coq.ZArith.Wf_Z.Z_lt_induction	40	1.4.12.4	search with cache (only 1: intros); (only 1: apply Zlt_0_rec); (only 1: auto); (only 1: now apply Zlt_0_rec).	1.2127430439	1315
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.5.0	search with cache (only 1: case Z.leb_spec); (only 1: now destruct Hn || easy); (only 1: discriminate).	0.0405490398407	17
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0136139392853	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	3.0.1	search with cache (only 1: rewrite !Z.leb_le); (only 1: intros); (only 1: Z.order).	0.0432121753693	7
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	10	search with cache (only 1: now destruct Hn || easy).	0.014240026474	21
Coq.ZArith.Zbool.Zone_min_pos	40	5.11	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1); (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.720782995224	277
Coq.ZArith.Zbool.Zle_is_le_bool	40	5.1	search with cache (only 1: rewrite !Z.leb_le); (only 1: now Z.swap_greater).	0.0242500305176	8
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.2.1.1	search with cache (only 1: symmetry); (only 1: symmetry); (only 1: rewrite !Z.leb_le); (only 1: now Z.swap_greater).	0.0489318370819	16
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.3.1.0	search with cache (only 1: rewrite Z.gtb_ltb); (only 1: symmetry); (only 1: Z.swap_greater); (only 1: apply Z.ltb_lt).	0.0809998512268	27
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le); (only 1: Z.swap_greater); (only 1: apply Z.lt_le_pred).	0.0212869644165	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	9.5.0.1.0.0.7.85	search with cache (only 1: intros H); (only 1: destruct H); (only 1: left); (only 1: left); (only 1: auto); (only 1: left); (only 1: auto); (only 1: auto with arith).	26.4456040859	115859
Coq.ZArith.ZArith_dec.Zcompare_rect	40	3.3.3.0	search with cache (only 1: destruct (n ?= m)); (only 1: auto); (only 1: auto); (only 1: auto).	0.672280073166	387
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3); (only 1: destruct (n ?= m)); (only 1: auto); (only 1: auto); (only 1: auto).	0.0282671451569	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40	0.0.1.0.30	search with cache (only 1: unfold Z.gt, Z.lt); (only 1: case Z.compare); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || (right; tauto)).	15.2891981602	8564
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.3.0	search with cache (only 1: unfold Z.ge); (only 1: unfold Z.lt); (only 1: case Z.compare); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	0.442863941193	110
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.3.0	search with cache (only 1: unfold Z.gt); (only 1: unfold Z.le); (only 1: case Z.compare); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	0.283301115036	90
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.2.6	search with cache (only 1: unfold Z.le); (only 1: unfold Z.gt); (only 1: case Z.compare); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	5.82634091377	1509
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	0.0.0.0.3.2	search with cache (only 1: unfold Z.ge); (only 1: unfold Z.lt); (only 1: case Z.compare); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	0.913377046585	246
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	2.5.0.1.0.5.0	search with cache (only 1: intros x y H); (only 1: destruct x); (only 1: right); (only 1: easy || now destruct y); (only 1: right); (only 1: easy || now destruct y); (only 1: now left).	4.92352294922	2216
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	4.4.1.1.0.0.0.0	search with cache (only 1: intros); (only 1: unfold Z.gt, Z.lt); (only 1: generalize (Z.compare_eq n m)); (only 1: destruct (n ?= m)); (only 1: right); (only 1: auto); (only 1: auto); (only 1: auto).	33.450797081	14608
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	5.0	search with cache (only 1: intros); (only 1: now destruct n).	0.0225939750671	7
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.9	search with cache (only 1: unfold Z.max, Pos.max); (only 1: now case Z.compare_spec).	0.259076118469	113
Coq.ZArith.Zmax.Zpos_max_1	40	0.0.0.11.8	search with cache (only 1: unfold Z.max, Pos.max); (only 1: destruct p); (only 1: reflexivity); (only 1: reflexivity); (only 1: now case Z.compare_spec).	1.08117890358	862
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	3.3.1.0.1.11	search with cache (only 1: unfold Z.min, Pos.min); (only 1: generalize (Z.compare_eq n m)); (only 1: destruct (n ?= m)); (only 1: auto); (only 1: auto); (only 1: auto).	3.64760994911	2297
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.11.0	search with cache (only 1: unfold Z.min, Pos.min); (only 1: destruct p); (only 1: reflexivity); (only 1: reflexivity); (only 1: now case Z.compare_spec).	1.46433401108	788
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0191068649292	1
Coq.ZArith.auxiliary.Zle_left	40	74	search with cache (only 1: apply Z.le_0_sub).	3.6741039753	5494
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0141711235046	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	33	search with cache (only 1: apply Z.lt_0_sub).	27.6741480827	14070
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.0136399269104	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.10	search with cache (only 1: Z.swap_greater); (only 1: apply Z.le_0_sub).	0.105864048004	52
Coq.ZArith.auxiliary.Zgt_left	40	0.2.2.1.0	search with cache (only 1: intros); (only 1: rewrite Z.add_shuffle0); (only 1: change (-1) with (- Z.succ 0)); (only 1: Z.swap_greater); (only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.108644962311	24
Coq.ZArith.auxiliary.Zgt_left_gt	40	1.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_0_sub).	0.0306479930878	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_0_sub).	0.0303678512573	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	6	search with cache (only 1: Z.order).	0.0181710720062	7
Coq.ZArith.Zorder.Zlt_not_le	40	7	search with cache (only 1: Z.order).	0.0191848278046	8
Coq.ZArith.Zorder.Zle_not_gt	40	0.4	search with cache (only 1: Z.swap_greater); (only 1: apply Z.le_ngt).	0.0960178375244	16
Coq.ZArith.Zorder.Zgt_not_le	40	0.6	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_nge).	0.052649974823	12
Coq.ZArith.Zorder.Znot_ge_lt	40	0.2	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_nge).	0.0233500003815	4
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.le_ngt).	0.0246231555939	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0138590335846	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.nle_gt).	0.0256400108337	2
Coq.ZArith.Zorder.not_Zne	40	10.1.0.4	search with cache (only 1: destruct (Z.eq_decidable n m)); (only 1: subst); (only 1: auto); (only 1: now Z.swap_greater).	0.77988910675	617
Coq.ZArith.Zorder.Zgt_asym	40	7.2.1.11	search with cache (only 1: intros); (only 1: Z.swap_greater); (only 1: apply Z.le_ngt); (only 1: Z.order).	38.3888449669	15173
Coq.ZArith.Zorder.Zgt_irrefl	40	0.4.0	search with cache (only 1: Z.swap_greater); (only 1: intros Ha'); (only 1: Z.order).	0.0488111972809	19
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.0.0	search with cache (only 1: Z.swap_greater); (only 1: intros); (only 1: now transitivity m).	0.0505521297455	4
Coq.ZArith.Zorder.Zle_gt_trans	40	8.0	search with cache (only 1: Z.swap_greater); (only 1: Z.order).	0.0405218601227	10
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: Z.order).	0.0541000366211	2
Coq.ZArith.Zorder.Zge_trans	40	1.1	search with cache (only 1: Z.swap_greater); (only 1: Z.order).	0.0410468578339	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.6	search with cache (only 1: Z.swap_greater); (only 1: apply Z.succ_lt_mono).	0.1420981884	31
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.succ_lt_mono).	0.0280230045319	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.0153470039368	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0129098892212	1
Coq.ZArith.Zorder.Zgt_succ	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.succ_lt_mono); (only 1: apply Z.lt_succ_diag_r).	0.0436282157898	11
Coq.ZArith.Zorder.Znot_le_succ	40	1.21	search with cache (only 1: apply Z.nle_gt); (only 1: apply Z.lt_succ_diag_r).	0.113504886627	257
Coq.ZArith.Zorder.Zgt_le_succ	40	14.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.le_succ_l).	0.584708929062	245
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.013170003891	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.0144319534302	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_succ_r).	0.0222899913788	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0150260925293	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.le_succ_l).	0.0229229927063	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0147838592529	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater); (only 1: apply Z.lt_le_pred).	0.0235319137573	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.111341953278	1
Coq.ZArith.Zorder.Zgt_pos_0	40	5.1	search with cache (only 1: symmetry); (only 1: reflexivity).	0.0219299793243	11
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.108577013016	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.0137529373169	1
Coq.ZArith.Zorder.Zle_0_nat	40	3.3.41.56.7	search with cache (only 1: intros n Hn); (only 1: apply (Z.lt_irrefl 0)); (only 1: destruct n); (only 1: discriminate); (only 1: discriminate).	9.76522302628	20622
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0160732269287	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0163538455963	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.015368938446	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	0	search with cache (only 1: apply Z.add_le_mono_r).	0.0135719776154	1
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0143210887909	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0148420333862	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.add_lt_mono_l).	0.029424905777	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.add_lt_mono_r).	0.0310299396515	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.12	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_r).	1.1703209877	768
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.3	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_r).	0.125168085098	28
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.3.0.6.0	search with cache (only 1: intros); (only 1: destruct p); (only 1: discriminate); (only 1: now apply Z.mul_le_mono_nonneg_r); (only 1: discriminate).	0.729803800583	334
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0117042064667	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.012501001358	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_l).	0.0362479686737	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.0	search with cache (only 1: Z.swap_greater); (only 1: intros); (only 1: now apply Z.mul_le_mono_nonneg_r).	0.0393450260162	4
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	2.0.0	search with cache (only 1: Z.swap_greater); (only 1: intros); (only 1: now apply Z.mul_le_mono_nonneg_l).	0.0392649173737	5
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	1.0	search with cache (only 1: intros); (only 1: now apply Z.mul_le_mono_nonneg).	0.0168311595917	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_r).	0.0250380039215	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0728230476379	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_le_mono_pos_r).	0.0257339477539	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0140900611877	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_le_mono_pos_r).	0.039605140686	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_r).	0.0413110256195	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	2.0.31	search with cache (only 1: rewrite Z.mul_comm); (only 1: Z.swap_greater); (only 1: apply Z.mul_lt_mono_pos_r).	13.8926308155	10819
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_le_mono_pos_r).	0.0248029232025	2
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	3.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.mul_pos_cancel_r).	0.0225219726562	5
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	1.0	search with cache (only 1: Z.swap_greater); (only 1: apply Z.square_lt_simpl_nonneg).	0.0389070510864	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0101609230042	1
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	0.1.3.0.0	search with cache (only 1: intros); (only 1: case Z.compare_spec); (only 1: Z.order); (only 1: now Z.swap_greater); (only 1: Z.order).	0.0382928848267	9
Coq.ZArith.Zcompare.Zge_compare	40	4.0.2.2.0.1	search with cache (only 1: intros); (only 1: case Z.compare_spec); (only 1: trivial); (only 1: Z.swap_greater); (only 1: Z.order); (only 1: now Z.swap_greater).	2.99371194839	996
Coq.ZArith.Zcompare.Zgt_compare	40	0.1	search with cache (only 1: intros x y H); (only 1: now rewrite H).	0.0959961414337	24
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.1.2.0.0.0.1.2.0.0.0	search with cache (only 1: destruct n as [| p| p]); (only 1: simpl); (only 1: now left || now right); (only 1: simpl); (only 1: destruct p); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right); (only 1: simpl); (only 1: destruct p); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	14.8230400085	6315
Coq.ZArith.Zeven.Zodd_dec	40	0.1.0.1.2.0.1.0.1.2.0.0.0	search with cache (only 1: destruct n as [| p| p]); (only 1: simpl); (only 1: now left || now right); (only 1: simpl); (only 1: destruct p); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right); (only 1: simpl); (only 1: destruct p); (only 1: now left || now right); (only 1: now left || now right); (only 1: now left || now right).	30.1870889664	13292
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd); (only 1: rewrite <- Z.negb_odd); (only 1: destruct Z.odd); (only 1: intuition); (only 1: discriminate).	0.0420439243317	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0206959247589	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0287868976593	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.1.0	search with cache (only 1: intros Hn Hn'); (only 1: apply Zodd_bool_iff in Hn'); (only 1: rewrite (Zquot2_odd_eqn n)  at 1); (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.31741809845	28
Coq.ZArith.Zeven.Zquot2_opp	40	8	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0911979675293	25
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	1.1.3	search with cache (only 1: intros Hn); (only 1: exists (Z.div2 n)); (only 1: exact (Zeven_div2 n Hn)).	0.163011789322	23
Coq.ZArith.Zeven.Zodd_ex	40	1.1.9	search with cache (only 1: intros Hn); (only 1: exists (Z.div2 n)); (only 1: exact (Zodd_div2 n Hn)).	7.75036811829	595
Coq.ZArith.Zeven.Zeven_2p	40	1.5.0.2.3.17.4	search with cache (only 1: boolify_even_odd); (only 1: simpl); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: destruct p); (only 1: now destruct Hn || easy); (only 1: reflexivity); (only 1: reflexivity).	5.49916505814	4378
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.0	search with cache (only 1: boolify_even_odd); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: intros Ha Hb); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: now rewrite Z.odd_add, Ha, Hb).	0.27073097229	86
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: intros Ha Hb); (only 1: now rewrite Z.odd_add, Ha, Hb).	0.0578210353851	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd); (only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff); (only 1: intros Ha Hb); (only 1: now rewrite Z.odd_add, Ha, Hb).	0.0558791160583	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Znat.nat_N_Z	40	1.1.3.1	search with cache (only 1: induction n); (only 1: reflexivity); (only 1: simpl); (only 1: f_equal).	0.0322730541229	17
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.2.1.2.1.3.34	search with cache (only 1: induction n); (only 1: trivial); (only 1: unfold N.div2, N.to_nat); (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: apply Pos2Nat.inj); (only 1: rewrite H); (only 1: apply SuccNat2Pos.id_succ).	2.02610778809	2885
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H)); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv).	0.030827999115	5
Coq.ZArith.Znat.positive_N_Z	40	1.0	search with cache (only 1: simpl); (only 1: f_equal).	0.017578125	3
Coq.ZArith.Znat.positive_N_nat	40	0.2	search with cache (only 1: simpl); (only 1: f_equal).	0.016811132431	4
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv).	0.02973985672	5
Coq.ZArith.Znat.Z_N_nat	40	1.1.4.2	search with cache (only 1: induction n); (only 1: now subst); (only 1: reflexivity); (only 1: reflexivity).	0.180598974228	78
Coq.ZArith.Znat.Z_nat_N	40	0.2.0.0.0.0.1.0.0.21	search with cache (only 1: induction n); (only 1: now subst); (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: simpl); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv); (only 1: simpl); (only 1: trivial).	1.61793684959	1046
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0167109966278	1
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.1	search with cache (only 1: destruct n); (only 1: simpl); (only 1: trivial); (only 1: apply positive_nat_N); (only 1: apply positive_nat_N).	0.029433965683	6
Coq.ZArith.Znat.N2Z.id	40	0.0.1.0	search with cache (only 1: destruct n); (only 1: simpl); (only 1: trivial); (only 1: reflexivity).	0.0206589698792	5
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40
Coq.ZArith.Znat.N2Z.is_nonneg	40	3	search with cache (only 1: now destruct n).	0.0268638134003	4
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.0127458572388	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0133450031281	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.1.1.0.0.2	search with cache (only 1: destruct n, m); (only 1: simpl); (only 1: trivial); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	0.0396718978882	16
Coq.ZArith.Znat.N2Z.inj_le	40	1.0.1.0.0	search with cache (only 1: split); (only 1: intros); (only 1: now destruct n, m); (only 1: intros); (only 1: now destruct n, m).	0.0330889225006	7
Coq.ZArith.Znat.N2Z.inj_lt	40	1.0.1.0.1	search with cache (only 1: split); (only 1: intros); (only 1: now destruct n, m); (only 1: intros); (only 1: now destruct n, m).	0.0301020145416	8
Coq.ZArith.Znat.N2Z.inj_ge	40	1.0.1.0.2	search with cache (only 1: split); (only 1: intros); (only 1: now destruct n, m); (only 1: intros); (only 1: now destruct n, m).	0.0323419570923	9
Coq.ZArith.Znat.N2Z.inj_gt	40	1.0.1.0.3	search with cache (only 1: split); (only 1: intros); (only 1: now destruct n, m); (only 1: intros); (only 1: now destruct n, m).	0.0274300575256	10
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.0.0.1	search with cache (only 1: destruct n, m); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	0.0292370319366	6
Coq.ZArith.Znat.N2Z.inj_mul	40	1	search with cache (only 1: now destruct n, m).	0.0160341262817	2
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.6	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: simpl); (only 1: now rewrite Pos.add_1_r).	0.0538878440857	27
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.4.3.4.31.5.13	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: destruct p); (only 1: reflexivity); (only 1: reflexivity); (only 1: simpl); (only 1: trivial).	9.32743787766	19554
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.0.0.0.7.0.0.10	search with cache (only 1: destruct n); (only 1: unfold Z.pred); (only 1: now rewrite N.pred_sub, inj_sub_max); (only 1: destruct p); (only 1: unfold Z.pred); (only 1: now rewrite N.pred_sub, inj_sub_max); (only 1: unfold Z.pred); (only 1: now rewrite N.pred_sub, inj_sub_max); (only 1: unfold Z.pred); (only 1: now rewrite N.pred_sub, inj_sub_max).	4.65539193153	3386
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.63.3.0.18	search with cache (only 1: destruct n); (only 1: trivial); (only 1: simpl); (only 1: destruct p); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	35.7404789925	84261
Coq.ZArith.Znat.N2Z.inj_quot2	40	0.0.0	search with cache (only 1: destruct n as [| p]); (only 1: trivial); (only 1: now destruct p).	0.0228488445282	3
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40
Coq.ZArith.Znat.Z2N.id	40	2	search with cache (only 1: now destruct n).	0.0190839767456	3
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split); (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: now f_equal); (only 1: intros); (only 1: now f_equal).	1.47221899033	343
Coq.ZArith.Znat.Z2N.inj_0	40	2.0	search with cache (only 1: simpl); (only 1: congruence).	0.0150189399719	4
Coq.ZArith.Znat.Z2N.inj_pos	40	0.2	search with cache (only 1: simpl); (only 1: f_equal).	0.016853094101	4
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0126030445099	1
Coq.ZArith.Znat.Z2N.inj_add	40	8.3.2	search with cache (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: now destruct n, m).	0.586193084717	219
Coq.ZArith.Znat.Z2N.inj_mul	40	9.3.2	search with cache (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: now destruct n, m).	5.38269805908	1528
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.2.0.7	search with cache (only 1: destruct n); (only 1: trivial); (only 1: simpl); (only 1: now rewrite Pos.add_1_r); (only 1: now destruct 1 || now destruct 2).	0.433021068573	149
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	1.1.1.0.5.0.8	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: destruct p); (only 1: easy || now destruct 1); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	1.35879898071	738
Coq.ZArith.Znat.Z2N.inj_compare	40	2	search with cache (only 1: now destruct n, m).	0.225917100906	43
Coq.ZArith.Znat.Z2N.inj_le	40	12.1.4.0	search with cache (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: unfold Z.le); (only 1: now destruct n, m).	18.9348258972	6428
Coq.ZArith.Znat.Z2N.inj_lt	40	8.0.8.0	search with cache (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: unfold Z.lt); (only 1: now destruct n, m).	9.32320785522	3212
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	2.20.0.11	search with cache (only 1: destruct n); (only 1: Nat2N.nat2N); (only 1: now destruct p); (only 1: now case Pos.compare).	2.45720696449	2426
Coq.ZArith.Znat.Z2N.inj_quot2	40	0.0.0.0	search with cache (only 1: destruct n as [| p| p]); (only 1: trivial); (only 1: now destruct p); (only 1: now destruct p).	0.0263140201569	4
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.1.2.0.0	search with cache (only 1: destruct n); (only 1: simpl); (only 1: congruence); (only 1: simpl); (only 1: f_equal); (only 1: now case Pos.compare).	0.0302031040192	9
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0	search with cache (only 1: now destruct n).	0.018972158432	1
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.0138871669769	2
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.013377904892	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: trivial).	0.0136938095093	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	1	search with cache (only 1: easy).	0.0135548114777	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	1	search with cache (only 1: reflexivity).	0.012286901474	2
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0	search with cache (only 1: now destruct n).	0.0142347812653	1
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.12.0.1	search with cache (only 1: destruct n); (only 1: trivial); (only 1: simpl); (only 1: now rewrite Pos.add_1_r); (only 1: now destruct 1).	4.20664095879	3073
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.1.1.1.1.0.0	search with cache (only 1: destruct n, m); (only 1: trivial); (only 1: reflexivity); (only 1: now destruct 1 || now destruct 2); (only 1: reflexivity); (only 1: reflexivity); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1 || now destruct 2).	5.40320897102	1807
Coq.ZArith.Znat.Zabs2N.inj_mul	40	11	search with cache (only 1: now destruct n, m).	1.96916699409	854
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.0.0.0.2.0.3.3	search with cache (only 1: destruct n); (only 1: simpl); (only 1: easy); (only 1: destruct p); (only 1: easy || now destruct 1); (only 1: reflexivity); (only 1: reflexivity); (only 1: easy).	8.10177206993	5328
Coq.ZArith.Znat.Zabs2N.inj_compare	40	5.2	search with cache (only 1: intros Hn Hm); (only 1: now destruct n, m).	0.0405521392822	12
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.1.0	search with cache (only 1: unfold Z.le, N.le); (only 1: intros); (only 1: now rewrite Z2N.inj_compare).	0.028361082077	4
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.1.0	search with cache (only 1: unfold Z.lt, N.lt); (only 1: intros); (only 1: now rewrite inj_compare).	0.0265288352966	4
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.4.0.2.0.2.11.4	search with cache (only 1: unfold Z.succ); (only 1: destruct n); (only 1: rewrite Z2N.inj_add by easy); (only 1: apply N.add_1_r); (only 1: rewrite Z2N.inj_add by easy); (only 1: apply N.add_1_r); (only 1: rewrite Z2N.inj_add by easy); (only 1: apply N.add_1_r).	14.8110511303	9533
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	4	search with cache (only 1: now destruct n, m).	0.0898928642273	49
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.017884016037	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	3	search with cache (only 1: trivial).	0.0130209922791	4
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.4	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: simpl); (only 1: now rewrite Pos.add_1_r).	0.0415329933167	18
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0180439949036	1
Coq.ZArith.Znat.Nat2Z.id	40	0.0.1.1	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: simpl); (only 1: apply SuccNat2Pos.id_succ).	0.0235829353333	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.3.9.8	search with cache (only 1: intros); (only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial); (only 1: rewrite H); (only 1: now rewrite <- nat_N_Z, <- Z_N_nat, N2Z.id, Nat2N.id).	1.73471188545	1607
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.4	search with cache (only 1: split); (only 1: intros H); (only 1: now rewrite <- (id n), <- (id m), H); (only 1: intros H); (only 1: now rewrite <- (id n), <- (id m), H).	0.0842659473419	34
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	1.0.0.0.0.1.0.10.4.1.2	search with cache (only 1: destruct n); (only 1: reflexivity); (only 1: intros); (only 1: now destruct Hn || now destruct Hm || clear); (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: simpl); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv); (only 1: now destruct 1).	15.7996530533	17471
Coq.ZArith.Znat.Z2Nat.inj	40	8.6.1	search with cache (only 1: intros); (only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial); (only 1: now f_equal).	0.815881967545	311
Coq.ZArith.Znat.Z2Nat.inj_iff	40	2.0.0.1.0.3	search with cache (only 1: split); (only 1: intros); (only 1: rewrite <- (id n), <- (id m) by trivial); (only 1: now f_equal); (only 1: intros); (only 1: now f_equal).	1.17515802383	249
Coq.ZArith.Znat.Z2Nat.inj_0	40	1	search with cache (only 1: now subst).	0.0134661197662	2
Coq.ZArith.Znat.Z2Nat.inj_pos	40	1	search with cache (only 1: now subst).	0.0126988887787	2
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.0122399330139	1
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.0.0.0.2.4.5.0.0.0.7	search with cache (only 1: destruct n, m); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity); (only 1: now subst); (only 1: intros Hn Hm); (only 1: apply Pos2Nat.inj_add); (only 1: now destruct 1 || now destruct 2); (only 1: reflexivity); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1 || now destruct 2).	20.2099359035	11576
Coq.ZArith.Znat.Z2Nat.inj_mul	40	0.0.0.0.1.1.2.4.0.0.0.7	search with cache (only 1: destruct n, m); (only 1: reflexivity); (only 1: reflexivity); (only 1: now destruct 1 || now destruct 2); (only 1: now subst); (only 1: intros Hn Hm); (only 1: now destruct Hn || now destruct Hm || clear); (only 1: apply Pos2Nat.inj_mul); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1 || now destruct 2).	11.4658260345	7308
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0121240615845	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0160858631134	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.1.0.0.0.0.0.1.2.3	search with cache (only 1: destruct n); (only 1: trivial); (only 1: simpl); (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv); (only 1: simpl); (only 1: destruct (Pos2Nat.is_succ p) as (n, H)); (only 1: rewrite H); (only 1: simpl); (only 1: f_equal); (only 1: now apply SuccNat2Pos.inv).	3.41190910339	2670
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.3.1	search with cache (only 1: destruct n); (only 1: trivial); (only 1: simpl); (only 1: apply SuccNat2Pos.id_succ).	0.0205981731415	8
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.00896692276001	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0.2	search with cache (only 1: simpl); (only 1: f_equal).	0.0125119686127	4
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	1	search with cache (only 1: reflexivity).	0.00901794433594	2
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	0.0.0.0.1.2.3.1.1.0.0.5	search with cache (only 1: destruct n, m); (only 1: trivial); (only 1: reflexivity); (only 1: reflexivity); (only 1: trivial); (only 1: intros Hn Hm); (only 1: now destruct Hn || now destruct Hm || clear); (only 1: apply Pos2Nat.inj_add); (only 1: now destruct 1 || now destruct 2); (only 1: now destruct 1); (only 1: now destruct 1); (only 1: now destruct 1).	25.7836158276	15273
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	3.3.2.3.1.1.1.0.0.8	search with cache (only 1: destruct n, m); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity); (only 1: trivial); (only 1: apply Pos2Nat.inj_mul); (only 1: apply Pos2Nat.inj_mul); (only 1: trivial); (only 1: apply Pos2Nat.inj_mul); (only 1: apply Pos2Nat.inj_mul).	6.41041016579	6780
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.6.0	search with cache (only 1: unfold Z.le); (only 1: intros); (only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.130213022232	9
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.4.0	search with cache (only 1: unfold Z.lt); (only 1: intros); (only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.12920498848	7
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	1.1.1.3	search with cache (only 1: destruct n); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0464239120483	10
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	1.1.1.1.1.1.1.1.1.7	search with cache (only 1: destruct n, m); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add); (only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	16.0290379524	5466
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	1.1.1.0.2.1.1.0.1.6	search with cache (only 1: induction p); (only 1: simpl); (only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp); (only 1: simpl); (only 1: trivial); (only 1: trivial).	1.48852109909	1110
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	9.12.1.186	search with cache (only 1: destruct n); (only 1: trivial); (only 1: trivial); (only 1: trivial).	6.71963000298	24223
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	4	search with cache (only 1: now destruct n).	0.0154922008514	5
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0153260231018	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	2.1.2.1.4.0.7	search with cache (only 1: destruct n); (only 1: simpl); (only 1: trivial using pos_sub_opp); (only 1: simpl); (only 1: now rewrite pos_sub_spec, Pos.compare_refl); (only 1: simpl); (only 1: now rewrite pos_sub_spec, Pos.compare_refl).	1.30003118515	1054
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	5.2	search with cache (only 1: simpl); (only 1: f_equal).	0.0176620483398	9
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.0128290653229	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0133771896362	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	5.0	search with cache (only 1: simpl); (only 1: trivial using pos_sub_opp).	0.0186529159546	7
Coq.ZArith.BinInt.Z.opp_succ	40	11.5.1	search with cache (only 1: unfold succ); (only 1: rewrite !opp_add_distr); (only 1: now destruct n).	2.54382300377	2118
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred); (only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.118557929993	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0146629810333	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0154910087585	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	2.1.0.0.2	search with cache (only 1: unfold ltb, lt); (only 1: destruct compare); (only 1: easy'); (only 1: easy'); (only 1: easy').	0.761190891266	227
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	search with cache (only 1: easy').	0.432218074799	52
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	1.1.0.1.1.0	search with cache (only 1: unfold le, min); (only 1: rewrite (compare_antisym n m)); (only 1: case compare_spec); (only 1: intuition); (only 1: intuition); (only 1: intuition).	1.26282405853	247
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40
Coq.ZArith.BinInt.Z.abs_neq	40	2.0.0.0	search with cache (only 1: destruct n); (only 1: trivial); (only 1: now destruct 1); (only 1: trivial).	0.029501914978	6
Coq.ZArith.BinInt.Z.sgn_null	40
Coq.ZArith.BinInt.Z.sgn_pos	40
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0204610824585	1
Coq.ZArith.BinInt.Z.pow_0_r	40	6	search with cache (only 1: now destruct n).	0.0155050754547	7
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1.0	search with cache (only 1: unfold pow_pos); (only 1: reflexivity).	0.0179870128632	3
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0.0.0.0.0.0.4.0.0.0	search with cache (only 1: destruct n); (only 1: now repeat split); (only 1: unfold sqrt); (only 1: generalize (Pos.sqrtrem_spec p)); (only 1: destruct 1); (only 1: subst); (only 1: now repeat split); (only 1: subst); (only 1: now repeat split); (only 1: now destruct 1).	1.87272691727	659
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0.0.1.6.0.0	search with cache (only 1: destruct n as [| [p| p| ]| ]); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: easy).	1.33099603653	743
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.017110824585	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	9	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.174216032028	85
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0146670341492	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm); (only 1: rewrite mul_comm); (only 1: rewrite mul_comm); (only 1: rewrite mul_comm); (only 1: rewrite mul_comm); (only 1: generalize (quotrem_eq a b)); (only 1: unfold quot, rem); (only 1: now destruct quotrem).	0.121842861176	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.1.0.1.0.1.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: trivial); (only 1: simpl); (only 1: now destruct a); (only 1: simpl); (only 1: now destruct a); (only 1: simpl); (only 1: now destruct a).	4.134526968	2580
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.2.0.0.0.0.1	search with cache (only 1: intro Hn); (only 1: rewrite <- testbit_of_N); (only 1: f_equal); (only 1: destruct n); (only 1: trivial); (only 1: trivial); (only 1: now destruct Hn).	0.114836931229	47
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	18	search with cache (only 1: easy).	0.117458105087	241
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.1.0.0.0.0.3	search with cache (only 1: destruct n as [| n| n]); (only 1: unfold testbit); (only 1: easy); (only 1: simpl); (only 1: trivial); (only 1: unfold testbit); (only 1: trivial).	0.11617898941	95
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0179450511932	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0127742290497	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0190351009369	2
Coq.ZArith.BinInt.Z.lt_gt	40	0.0	search with cache (only 1: unfold lt, gt); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0174241065979	2
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	0.0	search with cache (only 1: unfold le, ge); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0221700668335	2
Coq.ZArith.BinInt.Z.le_ge	40	0.0	search with cache (only 1: unfold le, ge); (only 1: now rewrite compare_antisym, CompOpp_iff).	0.0202341079712	2
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.2.1.13	search with cache (only 1: unfold lt, gt); (only 1: unfold gtb, ltb); (only 1: rewrite compare_antisym); (only 1: now case compare).	12.1087508202	3478
Coq.ZArith.BinInt.Z.geb_le	40	1.2.1.21	search with cache (only 1: unfold le, ge); (only 1: unfold geb, leb); (only 1: rewrite compare_antisym); (only 1: now case compare).	31.4610979557	14987
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	24	search with cache (only 1: now nzsimpl').	3.07794690132	704
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.1.0.0.1	search with cache (only 1: destruct (ltb_spec i n)); (only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto); (only 1: trivial); (only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto); (only 1: trivial).	0.344014883041	73
Coq.ZArith.BinInt.Pos2Z.id	40	23	search with cache (only 1: now Z.nzsimpl').	0.123051166534	255
Coq.ZArith.BinInt.Pos2Z.inj	40
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	1.26.5.0.8	search with cache (only 1: split); (only 1: now injection 1); (only 1: intros); (only 1: rewrite ?Z.add_0_l, ?Z.add_0_r, ?H); (only 1: reflexivity).	2.76122403145	3288
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2	search with cache (only 1: reflexivity).	0.0180261135101	3
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	5	search with cache (only 1: now f_equal).	0.0557780265808	6
Coq.ZArith.BinInt.Pos2Z.inj_1	40	3	search with cache (only 1: now Z.nzsimpl').	0.0527880191803	4
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	3	search with cache (only 1: split).	0.0152630805969	4
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	1	search with cache (only 1: reflexivity).	0.139605998993	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40
Coq.ZArith.BinInt.Pos2Z.inj_add	40	4	search with cache (only 1: split).	0.0113739967346	5
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0139679908752	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0146579742432	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	2	search with cache (only 1: reflexivity).	0.0141160488129	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	6	search with cache (only 1: reflexivity).	0.0372500419617	24
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	2	search with cache (only 1: reflexivity).	0.0134890079498	3
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.0138800144196	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.0141079425812	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	4	search with cache (only 1: reflexivity).	0.0153748989105	5
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	4	search with cache (only 1: reflexivity).	0.0150208473206	5
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1).	0.0155220031738	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	5.1.0.1	search with cache (only 1: split); (only 1: now injection 1); (only 1: intros); (only 1: now f_equal).	0.111703157425	55
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0148191452026	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	4.1.0.0	search with cache (only 1: split); (only 1: now injection 1); (only 1: intros); (only 1: now f_equal).	0.0267350673676	9
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	3	search with cache (only 1: split).	0.0147881507874	4
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	5	search with cache (only 1: now f_equal).	0.0212018489838	6
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0152540206909	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0197730064392	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0204260349274	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.014505147934	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.0	search with cache (only 1: intros); (only 1: easy).	0.0669331550598	20
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	2.0	search with cache (only 1: intros); (only 1: now destruct (p - q)%positive).	0.0176241397858	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0141031742096	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.0143821239471	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0147058963776	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0143940448761	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	search with cache (only 1: reflexivity).	0.0135161876678	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0141561031342	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.014034986496	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.200748205185	34
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0135688781738	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0143821239471	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0152962207794	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0.1.0.1.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: easy); (only 1: easy); (only 1: easy).	0.031769990921	7
Coq.ZArith.BinInt.Z2Pos.inj_1	40	1	search with cache (only 1: reflexivity).	0.0129051208496	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.2.0.0.1.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: simpl); (only 1: easy); (only 1: reflexivity); (only 1: easy).	0.0365271568298	9
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0.2.0.0.1.0	search with cache (only 1: intros); (only 1: destruct x); (only 1: simpl); (only 1: easy || now destruct 1); (only 1: reflexivity); (only 1: easy).	0.0354361534119	9
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.3.1.0.1	search with cache (only 1: destruct x); (only 1: simpl); (only 1: easy); (only 1: simpl); (only 1: now rewrite Pos.add_1_r); (only 1: easy).	0.299690008163	118
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.1.1.0.0.0.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: destruct p); (only 1: easy || now destruct 1); (only 1: easy || now destruct 1); (only 1: easy || now destruct 1); (only 1: easy).	0.533728122711	119
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.3.0.0.0.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: destruct y); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: easy).	0.991636037827	312
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1.1.3.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: destruct y); (only 1: easy); (only 1: reflexivity); (only 1: easy); (only 1: easy).	0.756124019623	357
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.1.1.1.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: destruct y); (only 1: easy); (only 1: reflexivity); (only 1: easy); (only 1: easy).	0.470458030701	147
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.1.1.1.0	search with cache (only 1: destruct x); (only 1: easy || now destruct y); (only 1: destruct y); (only 1: easy); (only 1: reflexivity); (only 1: easy); (only 1: easy).	0.0592839717865	10
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.1.1.1.0	search with cache (only 1: destruct x); (only 1: easy || now destruct y); (only 1: destruct y); (only 1: easy); (only 1: reflexivity); (only 1: easy); (only 1: easy).	0.0595049858093	10
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.1	search with cache (only 1: destruct x); (only 1: reflexivity); (only 1: reflexivity); (only 1: easy).	0.0230448246002	5
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.3.0.0.0.1	search with cache (only 1: destruct x); (only 1: easy); (only 1: destruct y); (only 1: easy); (only 1: easy); (only 1: easy); (only 1: easy).	0.831647872925	313
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	5.2	search with cache (only 1: intros); (only 1: now f_equal).	0.0185441970825	9
Coq.ZArith.BinInt.ZL0	40	19	search with cache (only 1: auto).	0.0441389083862	165
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	2.0	search with cache (only 1: change 2 with (1 + 1)); (only 1: now Z.nzsimpl').	0.149245023727	4
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	13	search with cache (only 1: now f_equal).	0.108386039734	105
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: trivial).	0.0135009288788	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0139119625092	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.0139729976654	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.0142118930817	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.0137610435486	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	search with cache (only 1: reflexivity).	0.0141980648041	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.0304100513458	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0135049819946	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0140058994293	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0141968727112	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0144801139832	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0140299797058	1
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0577459335327	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0127971172333	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.014417886734	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.4.0.3	search with cache (only 1: intros Hb); (only 1: destruct b as [| b| b]); (only 1: now elim Hb); (only 1: now elim Hb); (only 1: now elim Hb).	1.48736405373	693
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	1	search with cache (only 1: auto).	0.01979804039	2
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.0.0.5.0.19.2.6	search with cache (only 1: induction n using Pos.peano_rect); (only 1: reflexivity); (only 1: intros); (only 1: rewrite list_nth_succ); (only 1: unfold make_last); (only 1: rewrite Pos.peano_rect_succ); (only 1: fold (make_last n x def)); (only 1: apply IHn).	16.612498045	21745
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.btauto.Algebra.Decidable_sound	40	1.2.0.2.0	search with cache (only 1: intros P H Hp); (only 1: apply -> Decidable_spec); (only 1: apply <- Decidable_spec); (only 1: apply -> Decidable_spec); (only 1: assumption).	0.051088809967	11
Coq.btauto.Algebra.Decidable_complete	40	1.2.0	search with cache (only 1: intros P H Hp); (only 1: apply <- Decidable_spec); (only 1: assumption).	0.0319061279297	6
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.2	search with cache (only 1: intros P [wit spec] Hd); (only 1: simpl); (only 1: destruct wit); (only 1: tauto); (only 1: tauto).	0.0621891021729	19
Coq.btauto.Algebra.Decidable_complete_alt	40	3.2.0	search with cache (only 1: intros P [wit spec] Hd); (only 1: simpl in *); (only 1: intuition congruence).	0.0778357982635	26
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.4.0.0.0	search with cache (only 1: intros k l p H Hl); (only 1: induction H); (only 1: constructor); (only 1: constructor); (only 1: now eapply Pos.lt_le_trans; eassumption); (only 1: eauto); (only 1: eauto); (only 1: eauto).	0.557811021805	208
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	1.3	search with cache (only 1: inversion 1); (only 1: trivial).	0.0266699790955	6
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.funind.Recdef.le_lt_SS	40	14	search with cache (only 1: auto with arith).	0.0733089447021	78
Coq.funind.Recdef.Splus_lt	40	33	search with cache (only 1: auto with arith).	0.814342021942	939
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.2.1.4.26	search with cache (only 1: intros); (only 1: apply Rmult_lt_0_compat); (only 1: auto with real); (only 1: apply Rinv_0_lt_compat); (only 1: auto with real).	1.21417617798	2189
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.5.0.5.1.0	search with cache (only 1: intros x H); (only 1: rewrite Rplus_comm); (only 1: left); (only 1: apply Rle_lt_0_plus_1); (only 1: red); (only 1: auto with real).	2.27132296562	1388
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.5.0.0	search with cache (only 1: intros x y H H0); (only 1: replace 0 with (x * 0)); (only 1: apply Rmult_le_compat_l); (only 1: auto with real); (only 1: auto with real); (only 1: ring).	0.543184995651	294
Coq.micromega.RMicromega.Rsrt	40
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	8.2	search with cache (only 1: intros); (only 1: field).	0.143736124039	57
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	4.0.0	search with cache (only 1: unfold Qinv, Q2R, Qeq); (only 1: unfold Qnum, Qden); (only 1: field).	0.0530481338501	7
Coq.micromega.RMicromega.Q2R_1	40	2.0.1	search with cache (only 1: unfold Qinv, Q2R, Qeq); (only 1: unfold Qnum, Qden); (only 1: field).	0.0502891540527	6
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40
Coq.micromega.RMicromega.Reval_op2_hold	40
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40	0.0.1.1.0	search with cache (only 1: intros); (only 1: destruct f); (only 1: simpl); (only 1: rewrite Reval_op2_hold); (only 1: apply Reval_pop2_eval_op2).	0.0364317893982	7
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.micromega.ZifyInt63.to_Z_bounded	40
Coq.micromega.ZifyInt63.ltb_lt	40
Coq.micromega.ZifyInt63.leb_le	40
Coq.micromega.ZifyInt63.eqb_eq	40
Coq.micromega.ZifyInt63.eq_int_inj	40	3.2.0.2.6	search with cache (only 1: split); (only 1: intro H); (only 1: now subst; reflexivity); (only 1: intro H); (only 1: now apply to_Z_inj in H).	12.4557609558	344
Coq.micromega.ZifyInt63.is_evenE	40
Coq.micromega.ZifyBool.xorb_eq	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40	0.0.25	search with cache (only 1: destruct x); (only 1: intuition subst); (only 1: intuition subst).	0.671029090881	951
Coq.micromega.ZifyBool.b2z_spec	40	0.0.0.53	search with cache (only 1: zify); (only 1: intuition subst); (only 1: intuition subst); (only 1: intuition subst).	2.70758390427	5823
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.ZMicromega.eq_le_iff	40
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	0.0.0	search with cache (only 1: split); (only 1: now rewrite Z.le_0_sub); (only 1: now rewrite Z.le_0_sub).	0.0492680072784	3
Coq.micromega.ZMicromega.le_neg	40	16.16.1.10.3	search with cache (only 1: intros); (only 1: rewrite ?Z.opp_pos_neg); (only 1: split); (only 1: Z.order); (only 1: Z.order).	12.7945930958	20321
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40	0.0.5.1.0.0	search with cache (only 1: destruct k); (only 1: simpl); (only 1: reflexivity); (only 1: destruct f); (only 1: simpl); (only 1: apply pop2_bop2).	0.345777988434	241
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	12	search with cache (only 1: eauto).	0.0691778659821	92
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	6.2.1.0.0	search with cache (only 1: destruct x); (only 1: simpl); (only 1: intuition congruence); (only 1: intuition congruence); (only 1: intuition congruence).	0.908293008804	303
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.5.0.0.62.0.11	search with cache (only 1: induction p); (only 1: constructor); (only 1: intuition); (only 1: constructor); (only 1: easy); (only 1: constructor); (only 1: easy); (only 1: easy).	12.6170451641	22750
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	search with cache (only 1: intros); (only 1: rewrite xnnormalise_correct); (only 1: simpl); (only 1: auto).	0.0472769737244	4
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40	10.2.10.0.0.1	search with cache (only 1: unfold agree_env); (only 1: intros); (only 1: apply H); (only 1: apply Pos.add_le_mono); (only 1: eauto); (only 1: apply Pos.le_refl).	29.3003938198	11861
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	44.2.3.0	search with cache (only 1: intros); (only 1: unfold eval_pol in *); (only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon))); (only 1: reflexivity).	22.2414259911	14559
Coq.micromega.RingMicromega.eval_pol_mul	40	45.5.4.0	search with cache (only 1: intros); (only 1: unfold eval_pol in *); (only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon))); (only 1: reflexivity).	26.6842718124	17726
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.ZifyInst.eq_pos_inj	40
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.pow_pos_strict	40
Coq.micromega.Ztac.eq_incl	40	5.5.5	search with cache (only 1: split); (only 1: now subst); (only 1: now subst).	0.479099988937	328
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	14.0	search with cache (only 1: intros); (only 1: Z.order).	1.36991500854	1021
Coq.micromega.Ztac.elim_concl_lt	40	15.0	search with cache (only 1: intros); (only 1: Z.order).	4.20694112778	2724
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	17	search with cache (only 1: Z.order_pos).	0.167528867722	145
Coq.micromega.Ztac.mul_le	40	6.1.0	search with cache (only 1: intros); (only 1: change 0 with (0 + 0)); (only 1: Z.order_pos).	0.124232053757	19
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	16.21.14.29.35	search with cache (only 1: intros); (only 1: intros H0); (only 1: apply H); (only 1: rewrite <- H0); (only 1: reflexivity).	17.7783339024	42277
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro); (only 1: ring).	0.0212550163269	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	3.6	search with cache (only 1: intro); (only 1: ring).	0.0315539836884	24
Coq.micromega.OrderedRing.Rplus_comm	40	0.1.0	search with cache (only 1: intro); (only 1: intro); (only 1: ring).	0.0278289318085	4
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro); (only 1: ring).	0.0240759849548	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.1.0	search with cache (only 1: intro); (only 1: intro); (only 1: ring).	0.0283379554749	4
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	5.7.2.1	search with cache (only 1: intros n m); (only 1: rewrite Rlt_le_neq); (only 1: intro H); (only 1: now destruct H).	0.685668945312	628
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.6.2.0	search with cache (only 1: intros n m p); (only 1: rewrite (Rplus_comm m p)); (only 1: rewrite (Rplus_comm n p)); (only 1: do 2 rewrite Rlt_le_neq); (only 1: rewrite Rplus_cancel_l); (only 1: now rewrite <- Rplus_le_mono_l).	2.27567505836	910
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.EnvRing.radd_ext_Proper	40	34	search with cache (only 1: exact (Radd_ext Reqe)).	1.0917069912	1274
Coq.micromega.EnvRing.rmul_ext_Proper	40	35	search with cache (only 1: exact (Rmul_ext Reqe)).	1.14249491692	1313
Coq.micromega.EnvRing.ropp_ext_Proper	40	36	search with cache (only 1: exact (Ropp_ext Reqe)).	1.07560992241	1380
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.26	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey); (only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.814671039581	822
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph); (only 1: intros); (only 1: rewrite jump_pred_double); (only 1: now jump_simpl).	0.0760459899902	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.1.3	search with cache (only 1: apply Mphi_morph); (only 1: intros); (only 1: rewrite <- jump_add); (only 1: f_equal); (only 1: apply Pos.add_comm).	0.0964739322662	9
Coq.micromega.EnvRing.mkZmon_ok	40	8.8.4.0.2	search with cache (only 1: induction M); (only 1: simpl); (only 1: add_permut); (only 1: now jump_simpl); (only 1: now jump_simpl).	2.96860814095	1366
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	0.0.0.7.0.1	search with cache (only 1: unfold tail); (only 1: rewrite <- ?jump_add); (only 1: destruct j); (only 1: f_equal); (only 1: f_equal); (only 1: f_equal).	0.726672887802	554
Coq.micromega.Env.jump_succ	40	0.0.0.9.0	search with cache (only 1: rewrite <- !jump_add); (only 1: destruct j); (only 1: f_equal); (only 1: f_equal); (only 1: f_equal).	0.540244102478	515
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	3.0.0	search with cache (only 1: unfold hd, nth, tail, jump); (only 1: f_equal); (only 1: apply Pos.add_comm).	0.0282349586487	13
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump); (only 1: f_equal); (only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0223290920258	3
Coq.micromega.Tauto.eval_f_rew	40
Coq.micromega.Tauto.eiff_refl	40	1.0.6.4	search with cache (only 1: intro n); (only 1: induction n); (only 1: reflexivity); (only 1: reflexivity).	0.236531019211	150
Coq.micromega.Tauto.eiff_sym	40	5.2.0.0.0	search with cache (only 1: destruct k); (only 1: simpl); (only 1: tauto); (only 1: simpl); (only 1: intuition).	0.197026014328	102
Coq.micromega.Tauto.eiff_trans	40	0.9.2.2.0.0.0.0	search with cache (only 1: destruct k); (only 1: simpl); (only 1: intros); (only 1: intuition); (only 1: simpl); (only 1: intros); (only 1: subst); (only 1: reflexivity).	6.85719895363	4419
Coq.micromega.Tauto.hold_eiff	40
Coq.micromega.Tauto.eiff_eq	40	6.2.1.0.1	search with cache (only 1: destruct k); (only 1: simpl); (only 1: intuition); (only 1: simpl); (only 1: intuition).	0.258935928345	251
Coq.micromega.Tauto.eAnd_morph_Proper	40	2.2.0.0.0.6	search with cache (only 1: destruct k); (only 1: simpl); (only 1: intros); (only 1: intuition); (only 1: simpl); (only 1: intuition congruence).	1.1879029274	282
Coq.micromega.Tauto.eOR_morph_Proper	40	2.0.0.0.0.0	search with cache (only 1: intros); (only 1: destruct k); (only 1: simpl in *); (only 1: intuition congruence); (only 1: simpl in *); (only 1: intuition congruence).	0.0630600452423	8
Coq.micromega.Tauto.eIMPL_morph_Proper	40	2.0.0.0.0.0	search with cache (only 1: intros); (only 1: destruct k); (only 1: simpl in *); (only 1: intuition congruence); (only 1: simpl in *); (only 1: intuition congruence).	0.0485479831696	8
Coq.micromega.Tauto.eIFF_morph_Proper	40	2.0.0.0.0.0	search with cache (only 1: intros); (only 1: destruct k); (only 1: simpl in *); (only 1: intuition congruence); (only 1: simpl in *); (only 1: intuition congruence).	0.126925945282	8
Coq.micromega.Tauto.eNOT_morph_Proper	40	0.1.0.0.0.0	search with cache (only 1: intros); (only 1: destruct k); (only 1: simpl in *); (only 1: intuition); (only 1: simpl in *); (only 1: intuition congruence).	0.0392360687256	7
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.15	search with cache (only 1: induction l as [| a l IHl]); (only 1: reflexivity); (only 1: constructor).	0.473062038422	469
Coq.micromega.Tauto.is_bool_inv	40
Coq.micromega.Tauto.is_X_inv	40	1.1.1.2.1.1.1.0.1.0.1.0.3	search with cache (only 1: intros); (only 1: destruct f); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: reflexivity); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H); (only 1: inversion H).	8.52366495132	6361
Coq.micromega.Tauto.if_same	40	1.1.35.26.29	search with cache (only 1: intro Ha); (only 1: intros H); (only 1: induction H as [| a l Hal Hl IH]); (only 1: congruence); (only 1: congruence).	18.6910698414	39874
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0115170478821	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0113492012024	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.4.0.37.28	search with cache (only 1: intros H); (only 1: induction H as [| a l Hal Hl IH]); (only 1: reflexivity); (only 1: simpl); (only 1: congruence).	21.7231061459	37840
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.3.0.0.7.0	search with cache (only 1: unfold cnf_tt); (only 1: destruct f); (only 1: simpl); (only 1: congruence); (only 1: simpl); (only 1: congruence).	0.431061029434	317
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.4.0.11.1.2.11.0	search with cache (only 1: unfold cnf_ff); (only 1: destruct f); (only 1: reflexivity); (only 1: destruct c); (only 1: destruct f); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	26.0177240372	27874
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.3.0.0.8.0.2.1	search with cache (only 1: intros); (only 1: unfold or_cnf_opt); (only 1: rewrite is_cnf_tt_cnf_ff); (only 1: destruct (is_cnf_tt f) eqn:EQ); (only 1: simpl); (only 1: apply is_cnf_tt_inv in EQ); (only 1: auto); (only 1: simpl); (only 1: congruence).	5.03030896187	4043
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.and_cnf_opt_cnf_ff_r	40	1.2.3.8	search with cache (only 1: unfold and_cnf_opt); (only 1: intros); (only 1: rewrite orb_comm); (only 1: reflexivity).	0.432035923004	326
Coq.micromega.Tauto.and_cnf_opt_cnf_ff	40	0.0.0.0	search with cache (only 1: intros); (only 1: unfold and_cnf_opt); (only 1: rewrite is_cnf_ff_cnf_ff); (only 1: reflexivity).	0.0256807804108	4
Coq.micromega.Tauto.and_cnf_opt_cnf_tt	40
Coq.micromega.Tauto.is_bool_abst_simpl	40
Coq.micromega.Tauto.abst_simpl_correct	40
Coq.micromega.Tauto.or_is_X_inv	40
Coq.micromega.Tauto.mk_iff_is_bool	40
Coq.micromega.Tauto.abst_iff_correct	40
Coq.micromega.Tauto.abst_eq_correct	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_and_xcnf	40
Coq.micromega.Tauto.rxcnf_or_xcnf	40
Coq.micromega.Tauto.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40
Coq.micromega.Tauto.eval_cnf_tt	40	3.0.0	search with cache (only 1: unfold eval_cnf); (only 1: intros); (only 1: tauto).	0.0369491577148	6
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.2.13.9.6	search with cache (only 1: unfold eval_cnf); (only 1: intros); (only 1: unfold eval_clause); (only 1: rewrite !make_conj_cons in *); (only 1: tauto).	15.898649931	3966
Coq.micromega.Tauto.eval_cnf_cons_iff	40	3.0.0.0.0.0	search with cache (only 1: intros); (only 1: unfold eval_cnf in *); (only 1: rewrite make_conj_cons); (only 1: unfold eval_clause at 2); (only 1: unfold eval_clause at 2); (only 1: tauto).	0.0977160930634	9
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.hold_eTT	40
Coq.micromega.Tauto.hold_eFF	40	0.2.0.0.1	search with cache (only 1: destruct k); (only 1: simpl); (only 1: auto); (only 1: simpl); (only 1: auto).	0.0596499443054	8
Coq.micromega.Tauto.hold_eAND	40
Coq.micromega.Tauto.hold_eOR	40
Coq.micromega.Tauto.hold_eNOT	40
Coq.micromega.Tauto.hold_eIMPL	40
Coq.micromega.Tauto.hold_eIFF	40	0.0.0.1.0.0.0.1.0.0.0.0	search with cache (only 1: destruct k); (only 1: simpl); (only 1: intros); (only 1: apply iff_refl); (only 1: simpl); (only 1: intros); (only 1: unfold is_true); (only 1: destruct e1, e2); (only 1: intuition congruence); (only 1: intuition congruence); (only 1: intuition congruence); (only 1: intuition congruence).	2.60461187363	620
Coq.micromega.Tauto.xcnf_impl	40
Coq.micromega.Tauto.hold_eIFF_IMPL	40	0.0.0.0.0.0.1.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct k); (only 1: simpl); (only 1: intros); (only 1: apply iff_refl); (only 1: simpl); (only 1: intros); (only 1: unfold is_true); (only 1: rewrite eqb_true_iff); (only 1: destruct e1, e2); (only 1: simpl); (only 1: intuition congruence); (only 1: simpl); (only 1: intuition congruence); (only 1: simpl); (only 1: intuition congruence); (only 1: simpl); (only 1: intuition congruence).	11.8974041939	2860
Coq.micromega.Tauto.hold_eEQ	40	5.0.1.0.2	search with cache (only 1: simpl); (only 1: intros); (only 1: unfold is_true); (only 1: rewrite eqb_true_iff); (only 1: tauto).	3.30350017548	648
Coq.micromega.Tauto.xcnf_iff	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.Refl.make_impl_true	40	10.2.1	search with cache (only 1: induction l); (only 1: split); (only 1: now repeat constructor).	0.504567861557	461
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	6.2.0	search with cache (only 1: intros); (only 1: rewrite make_conj_cons); (only 1: tauto).	0.160325050354	72
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.ZifyClasses.mkapp2	40	36.17	search with cache (only 1: subst); (only 1: auto).	0.655733108521	2161
Coq.micromega.ZifyClasses.mkapp	40	38.0	search with cache (only 1: subst); (only 1: auto).	0.481353998184	1670
Coq.micromega.ZifyClasses.mkrel	40	23.0	search with cache (only 1: subst); (only 1: auto).	0.401792049408	921
Coq.micromega.ZifyClasses.and_morph	40
Coq.micromega.ZifyClasses.or_morph	40	0.0	search with cache (only 1: intros ? ? ? Fl Fr); (only 1: tauto).	0.0340609550476	2
Coq.micromega.ZifyClasses.impl_morph	40	0.1	search with cache (only 1: intros); (only 1: tauto).	0.0236480236053	3
Coq.micromega.ZifyClasses.iff_morph	40	0.0	search with cache (only 1: intros); (only 1: tauto).	0.0435829162598	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	search with cache (only 1: intros); (only 1: tauto).	0.01886510849	2
Coq.micromega.ZifyClasses.eq_iff	40	23.9	search with cache (only 1: intros A B []); (only 1: tauto).	1.71109986305	5910
Coq.micromega.ZifyClasses.rew_iff	40	47	search with cache (only 1: tauto).	0.419256925583	1538
Coq.nsatz.Nsatz.Rsth	40
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	21	search with cache (only 1: Lra.lra).	0.12100481987	208
Coq.nsatz.Nsatz.Rcri	40
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.NsatzTactic.psos_r1b	40
Coq.nsatz.NsatzTactic.psos_r1	40	1.0.1.0.0.0	search with cache (only 1: intros x y H); (only 1: setoid_replace x with (x - y + y)); (only 1: setoid_rewrite H); (only 1: cring); (only 1: setoid_rewrite H); (only 1: cring).	0.31609416008	8
Coq.nsatz.NsatzTactic.nsatzR_diff	40
Coq.nsatz.NsatzTactic.P0Z_correct	40	3	search with cache (only 1: auto).	0.0239510536194	4
Coq.nsatz.NsatzTactic.Rext	40
Coq.nsatz.NsatzTactic.Rset	40	5	search with cache (only 1: apply ring_setoid).	0.0223989486694	6
Coq.nsatz.NsatzTactic.Rtheory	40
Coq.nsatz.NsatzTactic.PolZadd_correct	40
Coq.nsatz.NsatzTactic.PolZmul_correct	40
Coq.nsatz.NsatzTactic.R_power_theory	40
Coq.nsatz.NsatzTactic.norm_correct	40
Coq.nsatz.NsatzTactic.PolZeq_correct	40
Coq.nsatz.NsatzTactic.mult_l_correct	40
Coq.nsatz.NsatzTactic.compute_list_correct	40
Coq.nsatz.NsatzTactic.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	21	search with cache (only 1: discriminate).	0.137773036957	208
Coq.nsatz.NsatzTactic.Qcri	40	10.7.17.7.0.20	search with cache (only 1: red); (only 1: intros); (only 1: apply Q_Setoid); (only 1: unfold Qeq); (only 1: simpl); (only 1: auto with zarith).	31.3552718163	21668
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	search with cache (only 1: lia).	0.0198938846588	1
Coq.nsatz.NsatzTactic.Zcri	40	0.0	search with cache (only 1: red); (only 1: exact Z.mul_comm).	0.023912191391	2
Coq.nsatz.NsatzTactic.Zdi	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	1.6.0.5.1.0	search with cache (only 1: intro); (only 1: subst); (only 1: destruct x); (only 1: trivial); (only 1: trivial); (only 1: trivial).	0.897181987762	900
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40	6.0.3.4.1.0	search with cache (only 1: intro); (only 1: subst); (only 1: destruct x); (only 1: trivial); (only 1: trivial); (only 1: trivial).	1.3586101532	1328
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.379014968872	20
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l); (only 1: now Z.nzsimpl).	0.092826128006	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.089152097702	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0602231025696	1
Coq.omega.OmegaLemmas.new_var	40	0.1.19	search with cache (only 1: intros); (only 1: exists x); (only 1: trivial).	0.265748977661	556
Coq.omega.OmegaLemmas.OMEGA1	40	2	search with cache (only 1: now destruct 1 || trivial).	0.0155558586121	3
Coq.omega.OmegaLemmas.OMEGA2	40	1	search with cache (only 1: now apply Z.add_nonneg_nonneg).	0.3002409935	2
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	20.2	search with cache (only 1: intros Hx Hxy); (only 1: now subst).	1.67201209068	635
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc); (only 1: rewrite <- !Z.add_assoc); (only 1: f_equal).	0.163916110992	19
Coq.omega.OmegaLemmas.OMEGA12	40	3.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc); (only 1: apply Z.add_shuffle3).	0.0585310459137	12
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite Z.add_shuffle1); (only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r); (only 1: now Z.nzsimpl).	0.108639955521	13
Coq.omega.OmegaLemmas.OMEGA15	40	2.0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc); (only 1: rewrite <- !Z.add_assoc); (only 1: f_equal); (only 1: apply Z.add_shuffle3).	0.156773090363	27
Coq.omega.OmegaLemmas.OMEGA16	40	0.4	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc); (only 1: f_equal).	0.123301029205	19
Coq.omega.OmegaLemmas.OMEGA17	40	0.1	search with cache (only 1: intros H ->); (only 1: now Z.nzsimpl).	0.115041971207	3
Coq.omega.OmegaLemmas.OMEGA18	40	2.3.8.0	search with cache (only 1: unfold Zne, not); (only 1: intros); (only 1: subst); (only 1: now Z.nzsimpl).	0.707315921783	518
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.1.0.0	search with cache (only 1: unfold Zne, not); (only 1: intros NE EQ); (only 1: subst); (only 1: now Z.nzsimpl).	0.0702300071716	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	7.3.1.1.2.8.0.3	search with cache (only 1: induction F); (only 1: intro i); (only 1: unfold push, empty); (only 1: simpl); (only 1: auto); (only 1: intro i); (only 1: simpl); (only 1: eauto).	19.837692976	24855
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40
Coq.rtauto.Rtauto.compose3	40
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40
Coq.rtauto.Bintree.length_map	40	0.2.0.0.0	search with cache (only 1: induction l); (only 1: reflexivity); (only 1: simpl); (only 1: apply f_equal); (only 1: apply IHl).	0.0234000682831	7
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	1.0.1.6.1.0.4.5	search with cache (only 1: induction l); (only 1: induction i); (only 1: trivial); (only 1: trivial); (only 1: induction i); (only 1: auto); (only 1: simpl); (only 1: auto).	11.8587539196	9414
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	1.2.2.2.0.1	search with cache (only 1: induction p as [p IHp| p IHp| ]); (only 1: simpl); (only 1: trivial); (only 1: simpl in *); (only 1: trivial); (only 1: auto).	0.509505987167	418
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	1.4.4.3	search with cache (only 1: destruct i); (only 1: reflexivity); (only 1: reflexivity); (only 1: reflexivity).	0.291237831116	240
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.1.9.9.34	search with cache (only 1: unfold empty, get); (only 1: intros); (only 1: unfold get, push); (only 1: pose proof (Pos.succ_not_1 (index S)) as h); (only 1: congruence).	24.4274668694	49810
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.setoid_ring.Rings_R.Rsth	40
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	32.0.0.3.37	search with cache (only 1: red); (only 1: unfold equality); (only 1: unfold eq_notation in *); (only 1: intros); (only 1: auto with real).	38.6313340664	67262
Coq.setoid_ring.Rings_R.R_one_zero	40	23	search with cache (only 1: Lra.lra).	0.317243099213	570
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red); (only 1: exact Z.mul_comm).	0.0255270004272	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	4	search with cache (only 1: discriminate).	0.0197169780731	5
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	23	search with cache (only 1: discriminate).	0.435250043869	570
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.0.3.8.20	search with cache (only 1: intros x y H7); (only 1: apply Zsth); (only 1: pose proof (Zeq_bool_eq x y H7) as H10); (only 1: rewrite H10); (only 1: reflexivity).	2.54837799072	1630
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Ncring_initial.Zsth	40
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	2.7.0	search with cache (only 1: intros x y H7); (only 1: subst); (only 1: reflexivity).	1.1589448452	200
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.Ncring_polynom.cO	40	68	search with cache (only 1: auto).	1.76650214195	2370
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0174219608307	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	35.6.2	search with cache (only 1: intro P2); (only 1: intros); (only 1: Esimpl2).	19.1795837879	3715
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	15.0.0	search with cache (only 1: intros); (only 1: unfold norm_subst); (only 1: apply norm_aux_spec).	8.29392409325	668
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.017235994339	2
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0122799873352	2
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0123338699341	3
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0148539543152	4
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	8	search with cache (only 1: auto).	0.031152009964	9
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	4	search with cache (only 1: eauto).	0.0529160499573	5
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	17	search with cache (only 1: eauto).	1.05792784691	243
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	3.0.4.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]); (only 1: simpl); (only 1: now rewrite !IH, ?H); (only 1: simpl); (only 1: now rewrite !IH, ?H); (only 1: trivial).	1.55857515335	213
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l); (only 1: simpl); (only 1: now rewrite E, E').	0.244030952454	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l); (only 1: simpl); (only 1: now rewrite E, E').	0.196218013763	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	6.0.0.0	search with cache (only 1: intros l); (only 1: simpl); (only 1: rewrite phi_1); (only 1: eauto).	0.21054983139	10
Coq.setoid_ring.Field_theory.PEpow_0_r	40	6.0	search with cache (only 1: intros l); (only 1: eauto).	0.391556024551	29
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l); (only 1: simpl); (only 1: now rewrite !rpow_pow).	0.150246143341	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	4.3.3.0.0	search with cache (only 1: destruct l1); (only 1: simpl); (only 1: trivial); (only 1: destruct 1); (only 1: trivial).	26.155121088	704
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.1.0.0	search with cache (only 1: destruct l1); (only 1: simpl); (only 1: split); (only 1: simpl); (only 1: now destruct 1).	2.23021411896	29
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5	search with cache (only 1: now destruct 1).	0.237574100494	6
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40	0.0.14.0.4.0.9.8.0	search with cache (only 1: intro n); (only 1: intro m); (only 1: induction n as [| n IHn]); (only 1: destruct m); (only 1: auto); (only 1: auto); (only 1: destruct m); (only 1: auto); (only 1: auto).	22.0133490562	61295
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	7	search with cache (only 1: reflexivity).	0.0436160564423	12
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	3.0.1.17	search with cache (only 1: intro x); (only 1: rewrite (ring_add_comm x)); (only 1: rewrite ring_add_0_l); (only 1: reflexivity).	1.08998084068	364
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.9.5	search with cache (only 1: intros); (only 1: rewrite (ring_add_comm y)); (only 1: rewrite <- (ring_add_assoc x)); (only 1: rewrite (ring_add_comm x)); (only 1: reflexivity).	1.40438389778	349
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0184760093689	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0194621086121	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.019721031189	3
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0245020389557	1
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0231909751892	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.7.0	search with cache (only 1: intros x y H); (only 1: rewrite H); (only 1: rrefl).	0.307389974594	68
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0206999778748	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	2	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0235769748688	3
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0169129371643	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0167620182037	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0168838500977	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0230729579926	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	1.0.0.0.3.1.0.0.0.0	search with cache (only 1: induction w); (only 1: destruct n); (only 1: simpl); (only 1: norm); (only 1: simpl); (only 1: norm); (only 1: intros); (only 1: destruct n); (only 1: norm); (only 1: norm).	11.966504097	1890
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.2.19	search with cache (only 1: induction x); (only 1: norm); (only 1: norm).	0.782234191895	412
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0283279418945	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0308430194855	4
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	34	search with cache (only 1: exact (Radd_ext Reqe)).	1.20508885384	1306
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	35	search with cache (only 1: exact (Rmul_ext Reqe)).	1.28284716606	1313
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	36	search with cache (only 1: exact (Ropp_ext Reqe)).	1.10377693176	1380
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.26	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey); (only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.91411614418	822
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.1.1.2.1.0.1.2.0.0.1.0	search with cache (only 1: revert l); (only 1: induction P); (only 1: simpl); (only 1: intros); (only 1: Esimpl); (only 1: simpl); (only 1: easy); (only 1: intros H); (only 1: simpl); (only 1: rsimpl); (only 1: rewrite IHP2); (only 1: rsimpl).	27.644659996	5245
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	2.0.1.0.0.1.0.3.1.6	search with cache (only 1: destruct p); (only 1: simpl); (only 1: rewrite !mkmult_pow_ok); (only 1: Esimpl); (only 1: Esimpl); (only 1: rewrite mkmult_pow_ok); (only 1: Esimpl); (only 1: change x with (x ^ 1)  at 1); (only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double); (only 1: Esimpl).	35.7375280857	2321
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0164940357208	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	41.7.5.75	search with cache (only 1: split); (only 1: intros n); (only 1: intros m H); (only 1: discriminate).	6.8580801487	28333
Coq.setoid_ring.Ring_theory.IDmorph	40
Coq.setoid_ring.Ring_theory.Eqsth	40	9.5.12.0.9.5.0.0.12	search with cache (only 1: split); (only 1: congruence); (only 1: intros a b); (only 1: intros EQ); (only 1: now rewrite EQ); (only 1: intros a b); (only 1: intro H); (only 1: intros EQ); (only 1: now rewrite EQ).	19.4861600399	49741
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	11.11.59	search with cache (only 1: split); (only 1: solve_proper); (only 1: solve_proper).	1.29920291901	3941
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.11.0.1	search with cache (only 1: constructor); (only 1: solve_proper); (only 1: solve_proper); (only 1: solve_proper).	0.390887975693	211
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	27	search with cache (only 1: auto).	0.267772197723	434
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.3.2.5	search with cache (only 1: constructor); (only 1: exact (SRadd_ext SReqe)); (only 1: exact (SRmul_ext SReqe)); (only 1: intros x y H); (only 1: exact H).	0.206574201584	169
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	10	search with cache (only 1: reflexivity).	0.0224611759186	21
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.0145900249481	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.014564037323	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0600881576538	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	3	search with cache (only 1: mrewrite).	0.0253450870514	4
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.ssr.ssrbool.prop_congr	40	6	search with cache (only 1: Bool.destr_bool).	0.0463478565216	40
Coq.ssr.ssrbool.is_true_true	40	7	search with cache (only 1: exact (erefl _)).	0.010281085968	8
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: by [  ]).	0.0158920288086	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock); (only 1: by [  ]).	0.0139880180359	2
Coq.ssr.ssrbool.negbT	40	1	search with cache (only 1: Bool.destr_bool).	0.0146899223328	2
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.0147800445557	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.0148198604584	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.0146260261536	1
Coq.ssr.ssrbool.negbK	40	0.18	search with cache (only 1: intro H); (only 1: Bool.destr_bool).	0.0685970783234	165
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.0123188495636	1
Coq.ssr.ssrbool.negb_inj	40	0.0.0.0.0.1	search with cache (only 1: intros b b'); (only 1: destruct b, b'); (only 1: trivial); (only 1: Bool.destr_bool); (only 1: Bool.destr_bool); (only 1: Bool.destr_bool).	0.0299060344696	7
Coq.ssr.ssrbool.negbLR	40	10	search with cache (only 1: Bool.destr_bool).	0.0459101200104	21
Coq.ssr.ssrbool.negbRL	40	11	search with cache (only 1: Bool.destr_bool).	0.0617191791534	33
Coq.ssr.ssrbool.contra	40	2.2.2.3.10	search with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end); (only 1: by [  ]); (only 1: by [  ]); (only 1: by [  ]); (only 1: by [  ]).	0.748608112335	456
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0189371109009	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0188760757446	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0193481445312	1
Coq.ssr.ssrbool.contraT	40	6.13	search with cache (only 1: Bool.destr_bool); (only 1: auto).	0.512031078339	213
Coq.ssr.ssrbool.wlog_neg	40	4	search with cache (only 1: by case : b  =>// ->).	0.0305728912354	5
Coq.ssr.ssrbool.contraFT	40	6.13	search with cache (only 1: Bool.destr_bool); (only 1: auto).	0.918920040131	210
Coq.ssr.ssrbool.contraFN	40	7.14	search with cache (only 1: Bool.destr_bool); (only 1: auto).	1.039894104	265
Coq.ssr.ssrbool.contraTF	40	7.16	search with cache (only 1: Bool.destr_bool); (only 1: intuition).	1.04259896278	339
Coq.ssr.ssrbool.contraNF	40	7.17	search with cache (only 1: Bool.destr_bool); (only 1: intuition).	1.24237704277	365
Coq.ssr.ssrbool.contraFF	40	1.10.23	search with cache (only 1: destruct c); (only 1: by case : b  =>// ->); (only 1: by move /contra =>notb_notc /negbT).	3.905834198	2914
Coq.ssr.ssrbool.contra_not	40	2	search with cache (only 1: auto).	0.01380610466	3
Coq.ssr.ssrbool.contraPnot	40	2	search with cache (only 1: by auto).	0.0141201019287	3
Coq.ssr.ssrbool.contraTnot	40	2.23	search with cache (only 1: Bool.destr_bool); (only 1: auto).	0.929883956909	336
Coq.ssr.ssrbool.contraNnot	40	0	search with cache (only 1: by case : b ; auto).	0.012894153595	1
Coq.ssr.ssrbool.contraPT	40
Coq.ssr.ssrbool.contra_notT	40
Coq.ssr.ssrbool.contra_notN	40	1	search with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.0258758068085	2
Coq.ssr.ssrbool.contraPN	40	6.1	search with cache (only 1: rewrite -{+1}[b]negbK); (only 1: by case : b  =>//= /(_ isT) nP /nP).	0.0528659820557	15
Coq.ssr.ssrbool.contraFnot	40	4	search with cache (only 1: by case : b ; auto).	0.0258169174194	5
Coq.ssr.ssrbool.contraPF	40	4	search with cache (only 1: by case : b  =>//=; move /(_ isT) =>HP /HP).	0.0267069339752	5
Coq.ssr.ssrbool.contra_notF	40	0	search with cache (only 1: by case : b  =>// /(_ isT)).	0.0192940235138	1
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0113749504089	1
Coq.ssr.ssrbool.ifT	40	3	search with cache (only 1: by case : b  =>// /(_ isT)).	0.0173618793488	4
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move ->).	0.0113151073456	2
Coq.ssr.ssrbool.ifN	40	4	search with cache (only 1: by case : b ).	0.017590045929	5
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.0113050937653	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0114068984985	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.010244846344	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.0104479789734	1
Coq.ssr.ssrbool.ifE	40	5	search with cache (only 1: Ltac.reflexivity).	0.0165200233459	6
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.0162169933319	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0154149532318	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0153591632843	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.7	search with cache (only 1: intuition); (only 1: by case Hb; auto); (only 1: by case Hb; auto).	0.0419311523438	13
Coq.ssr.ssrbool.introTFn	40	0.8	search with cache (only 1: rewrite -{+1}[b]negbK); (only 1: by case c; case Hb).	0.0372381210327	10
Coq.ssr.ssrbool.elimTFn	40	1.9	search with cache (only 1: rewrite -{+1}[b]negbK); (only 1: by case c; case Hb).	0.0910098552704	34
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40	0.13	search with cache (only 1: rewrite -{+1}[b]negbK); (only 1: by <ssreflect_plugin::ssrtclintros@0> case Hb =>[? _ H ?|? H _]; case : H ).	0.188264846802	85
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	1.22	search with cache (only 1: intuition); (only 1: by case : Pb ; constructor; auto).	0.28580904007	281
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40	16	search with cache (only 1: by case : Pb ; constructor; auto).	0.150728940964	108
Coq.ssr.ssrbool.rwP	40	10	search with cache (only 1: by case Pb).	0.0328707695007	21
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	18.17.47	search with cache (only 1: intro p); (only 1: destruct p); (only 1: Ltac.assumption).	1.50223302841	5350
Coq.ssr.ssrbool.impliesPn	40	2.93	search with cache (only 1: destruct 1); (only 1: by auto).	3.25579094887	6275
Coq.ssr.ssrbool.unlessL	40	24.9.16	search with cache (only 1: repeat Ltac.split); (only 1: intros); (only 1: by move  =>fK injf' x; apply : injf' ).	0.898081064224	3357
Coq.ssr.ssrbool.unlessR	40	23.43.17	search with cache (only 1: repeat Ltac.split); (only 1: intros H ?); (only 1: auto).	3.39041399956	15963
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.28	search with cache (only 1: red); (only 1: by move  =>b b' ->).	0.178038835526	420
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	1.0.35.1.0.35.59	search with cache (only 1: repeat Ltac.split); (only 1: intro z); (only 1: destruct (H z)); (only 1: auto); (only 1: intro z); (only 1: destruct (H z)); (only 1: auto).	37.4398751259	99011
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0156779289246	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0182240009308	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0201930999756	1
Coq.ssr.ssrbool.pair_andP	40	16	search with cache (only 1: intuition).	0.066447019577	144
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00958204269409	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00978207588196	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0129270553589	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00967884063721	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00994515419006	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0193290710449	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0330760478973	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0129959583282	1
Coq.ssr.ssrbool.andTb	40	2	search with cache (only 1: repeat Ltac.split).	0.0106871128082	3
Coq.ssr.ssrbool.andFb	40	2.5	search with cache (only 1: intro b1); (only 1: reflexivity).	0.0192670822144	11
Coq.ssr.ssrbool.andbT	40	2.0.0.15	search with cache (only 1: intro b1); (only 1: destruct b1); (only 1: repeat Ltac.split); (only 1: reflexivity).	0.113322019577	206
Coq.ssr.ssrbool.andbF	40	4.6	search with cache (only 1: intro b1); (only 1: Bool.destr_bool).	0.0474469661713	47
Coq.ssr.ssrbool.andbb	40	14	search with cache (only 1: by case).	0.0425810813904	78
Coq.ssr.ssrbool.andbC	40	1.1.0.12	search with cache (only 1: intro b1); (only 1: destruct b1); (only 1: Bool.destr_bool); (only 1: Bool.destr_bool).	0.107368946075	144
Coq.ssr.ssrbool.andbA	40	1.12	search with cache (only 1: intro b1); (only 1: Bool.destr_bool).	0.0587980747223	77
Coq.ssr.ssrbool.andbCA	40	6	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0164968967438	7
Coq.ssr.ssrbool.andbAC	40	6	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0166389942169	7
Coq.ssr.ssrbool.andbACA	40	6	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0183341503143	7
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0105068683624	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00958204269409	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.013090133667	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0104207992554	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0102508068085	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0115571022034	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0154979228973	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0161020755768	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0165870189667	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0248601436615	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.0124819278717	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0115988254547	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.0127041339874	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0106480121613	1
Coq.ssr.ssrbool.andb_orl	40	8	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.018394947052	9
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0161650180817	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0158379077911	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.111196994781	1
Coq.ssr.ssrbool.andb_idl	40	0.0.1.0.1.0.0	search with cache (only 1: destruct a, b); (only 1: repeat Ltac.split); (only 1: simpl); (only 1: by [  ]); (only 1: simpl); (only 1: auto); (only 1: reflexivity).	0.0274848937988	9
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0190711021423	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0203819274902	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.025801897049	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0193371772766	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0180909633636	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0202569961548	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0244801044464	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.0145750045776	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : a ; case : b ).	0.0162341594696	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0129399299622	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0133008956909	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0127689838409	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0129728317261	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.0123069286346	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: Bool.destr_bool).	0.0129570960999	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0104579925537	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.0106558799744	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : b ).	0.010153055191	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0138719081879	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.014251947403	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0130059719086	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0129430294037	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0130779743195	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : a ; case : b  =>// ->).	0.13547205925	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0187380313873	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0221879482269	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.010635137558	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.010950088501	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0144429206848	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0120680332184	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0152478218079	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.015547990799	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0160870552063	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0225830078125	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0164551734924	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0163218975067	1
Coq.ssr.ssrbool.addKb	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.020092010498	4
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.012727022171	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0210030078888	2
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0208690166473	2
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0122289657593	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.014307975769	2
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.017951965332	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.013151884079	1
Coq.ssr.ssrbool.addbP	40	1.3.2.7.3.29	search with cache (only 1: destruct a, b); (only 1: now constructor); (only 1: now constructor); (only 1: now constructor); (only 1: Bool.destr_bool); (only 1: now constructor).	2.8080868721	2118
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	44	search with cache (only 1: by unlock).	0.457225084305	990
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.0116310119629	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  =>_ /= ->).	0.0129101276398	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.012195110321	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.00944089889526	3
Coq.ssr.ssrbool.mem_simpl	40	1	search with cache (only 1: by [  ]).	0.0105199813843	2
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	search with cache (only 1: by [  ]).	0.0104742050171	1
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	5	search with cache (only 1: Ltac.reflexivity).	0.011834859848	6
Coq.ssr.ssrbool.in1W	40	0.19	search with cache (only 1: intros b b'); (only 1: by [  ]).	0.1767141819	186
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0125598907471	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0140900611877	1
Coq.ssr.ssrbool.in1T	40	20	search with cache (only 1: auto).	0.182417869568	186
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0192930698395	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.020555973053	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0191128253937	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0192420482635	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  =>? ?; auto).	0.021989107132	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.0141031742096	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0127668380737	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0122640132904	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0184948444366	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0187830924988	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0189230442047	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.01935505867	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0199000835419	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0203738212585	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.020115852356	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0145668983459	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0161900520325	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0155849456787	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0218358039856	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0201799869537	1
Coq.ssr.ssrbool.sub_in_bij	40	0.121	search with cache (only 1: intro b1); (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	9.80195903778	15029
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0327429771423	6
Coq.ssr.ssrbool.sub_in2	40	28.37	search with cache (only 1: red); (only 1: by move  =>? ?; auto).	2.17996811867	2860
Coq.ssr.ssrbool.sub_in3	40	28.38	search with cache (only 1: red); (only 1: by move  =>? ?; auto).	2.73844099045	2928
Coq.ssr.ssrbool.sub_in12	40	13.39	search with cache (only 1: red); (only 1: by move  =>? ?; auto).	2.21598100662	1541
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0153958797455	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	140	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	9.34068894386	18744
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0112450122833	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0148799419403	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.014564037323	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.138980150223	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrbool.homo_sym	40	4	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0181519985199	5
Coq.ssr.ssrbool.mono_sym	40	10	search with cache (only 1: by move  =>fR y x; apply : fR ).	0.0263638496399	21
Coq.ssr.ssrbool.homo_sym_in	40	0	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0183758735657	1
Coq.ssr.ssrbool.mono_sym_in	40	2	search with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.0185959339142	3
Coq.ssr.ssrbool.homo_sym_in11	40	1	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0219659805298	2
Coq.ssr.ssrbool.mono_sym_in11	40	1	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0149519443512	2
Coq.ssr.ssrbool.onW_can	40	10	search with cache (only 1: by move  =>? ?).	0.0259819030762	21
Coq.ssr.ssrbool.onW_can_in	40	11	search with cache (only 1: by move  =>hf x hx ax; rewrite hf).	0.0434861183167	33
Coq.ssr.ssrbool.in_onW_can	40	0	search with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.0130040645599	1
Coq.ssr.ssrbool.onS_can	40	52	search with cache (only 1: by move  =>fK injf' x; apply : injf' ).	0.968484163284	1386
Coq.ssr.ssrbool.onS_can_in	40	78.23	search with cache (only 1: move  =>mf mg x y); (only 1: auto).	6.32146000862	9791
Coq.ssr.ssrbool.in_onS_can	40	7	search with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0174670219421	8
Coq.ssr.ssrbool.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: firstorder).	0.0108621120453	1
Coq.ssr.ssreflect.master_key	40	3	search with cache (only 1: Ltac.reflexivity || destruct H).	0.0114119052887	4
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock); (only 1: destr_bool).	0.0346591472626	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.0123920440674	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	18.3.32	search with cache (only 1: intros); (only 1: Ltac.reflexivity || destruct H); (only 1: auto).	0.74277305603	3657
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.014790058136	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.0122399330139	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: intuition).	0.0258870124817	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.013002872467	1
Coq.ssr.ssreflect.abstract_context	40	5.133.73	search with cache (only 1: intro H); (only 1: apply H); (only 1: auto).	14.3500089645	124025
Coq.ssr.ssrfun.unitE	40	10.3.62	search with cache (only 1: intro H); (only 1: destruct H); (only 1: auto).	0.690074920654	4476
Coq.ssr.ssrfun.frefl	40	26	search with cache (only 1: Ltac.split).	0.0665857791901	333
Coq.ssr.ssrfun.fsym	40	0.11	search with cache (only 1: intros); (only 1: by [  ]).	0.043074131012	46
Coq.ssr.ssrfun.ftrans	40	1.45.29.12	search with cache (only 1: intros); (only 1: intro n); (only 1: rewrite H); (only 1: by [  ]).	5.89296913147	20571
Coq.ssr.ssrfun.rrefl	40	16	search with cache (only 1: repeat Ltac.split).	0.0388550758362	108
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.1.0	search with cache (only 1: intro H); (only 1: exists (fun z => projT1 (H z))); (only 1: intro z); (only 1: destruct (H z)); (only 1: Ltac.assumption).	0.0255570411682	6
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0226111412048	1
Coq.ssr.ssrfun.svalP	40	26	search with cache (only 1: apply proj2_sig).	0.191498041153	333
Coq.ssr.ssrfun.s2valP	40	13	search with cache (only 1: by case : u ).	0.0355560779572	60
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0118341445923	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0161380767822	1
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.026771068573	2
Coq.ssr.ssrfun.can_pcan	40	2.21.88.42	search with cache (only 1: intros); (only 1: intro b1); (only 1: rewrite H); (only 1: Ltac.reflexivity).	18.4617519379	109167
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0159480571747	2
Coq.ssr.ssrfun.canLR	40	19.13.42	search with cache (only 1: intros); (only 1: elim eq_sym with (1 := H0)); (only 1: trivial).	1.7991540432	8902
Coq.ssr.ssrfun.canRL	40	35.23	search with cache (only 1: destruct 2); (only 1: auto).	1.21430301666	4620
Coq.ssr.ssrfun.Some_inj	40	3.2.0.70	search with cache (only 1: intros n m); (only 1: revert m); (only 1: inversion 1); (only 1: trivial).	1.90170192719	5182
Coq.ssr.ssrfun.of_voidK	40	14.74	search with cache (only 1: intro H); (only 1: destruct H).	1.25453901291	5470
Coq.ssr.ssrfun.esymK	40	0.3.83.9	search with cache (only 1: red); (only 1: intro H); (only 1: destruct H); (only 1: Ltac.reflexivity).	3.02314901352	14429
Coq.ssr.ssrfun.etrans_id	40	5.28	search with cache (only 1: rewrite eq_trans_refl_l); (only 1: Ltac.reflexivity).	0.244388103485	600
Coq.ssr.ssrfun.inj_id	40	2	search with cache (only 1: by move  =>x y []).	0.0161008834839	3
Coq.ssr.ssrfun.inj_can_sym	40	40.74	search with cache (only 1: red); (only 1: auto).	6.66847586632	20859
Coq.ssr.ssrfun.inj_comp	40	34.73	search with cache (only 1: red); (only 1: auto).	8.90166401863	23424
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	6.21.75	search with cache (only 1: red); (only 1: simpl); (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	5.03184986115	13842
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	33.33.92.35	search with cache (only 1: set (Hfsymf := fun a => eq_sym (Hf a))); (only 1: exists f); (only 1: trivial); (only 1: trivial).	6.62830877304	45087
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	7.7	search with cache (only 1: intros n P IH0 IHS); (only 1: auto).	0.0662469863892	125
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.0117478370667	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.0115988254547	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.0130457878113	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.0107448101044	1