
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	23	synth with cache (only 1: firstorder).	0.300763130188	255
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	10.23	synth with cache (only 1: intros f g H l; only 1: firstorder).	0.718193054199	773
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	28	synth with cache (only 1: firstorder).	0.648093938828	950
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	11.16	synth with cache (only 1: intro H; only 1: firstorder).	1.00659990311	1325
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	84.5	synth with cache (only 1: intros; only 1: firstorder).	3.97848391533	13915
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	1.0	synth with cache (only 1: intro; only 1: ring).	0.0352461338043	3
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.4	synth with cache (only 1: intro; only 1: ring).	0.0354402065277	6
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	9.10	synth with cache (only 1: intros; only 1: ring).	0.295274019241	397
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0332999229431	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0357429981232	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40	4.1.4.0.0.0.1.1.0	synth with cache (only 1: intros n m; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: rewrite Rlt_le_neq in H; only 1: split; only 1: now destruct H; only 1: now destruct H; only 1: intuition; only 1: rewrite Rlt_le_neq in H; only 1: intuition).	15.4269189835	5546
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	1.0.0.0.1.1	synth with cache (only 1: intros n m; only 1: intro H; only 1: rewrite Rlt_le_neq in H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.0632371902466	12
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.2.4.3.0	synth with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm n p); only 1: rewrite (Rplus_comm m p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	3.9410340786	1282
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.0.0	synth with cache (only 1: intros x y; only 1: intro EQ; only 1: now rewrite EQ).	0.0386629104614	3
Coq.micromega.Ztac.elim_concl_eq	40	4.9	synth with cache (only 1: intuition; only 1: Z.order).	1.27118897438	689
Coq.micromega.Ztac.elim_concl_le	40	3.0	synth with cache (only 1: intros; only 1: Z.order).	0.0287759304047	5
Coq.micromega.Ztac.elim_concl_lt	40	3.0	synth with cache (only 1: intros; only 1: Z.order_pos).	0.0540289878845	12
Coq.micromega.Ztac.Zlt_le_add_1	40	0.2	synth with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.701601982117	31
Coq.micromega.Ztac.add_le	40	3.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0247390270233	5
Coq.micromega.Ztac.mul_le	40	0.0.11.0	synth with cache (only 1: intros; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.427977085114	355
Coq.micromega.ZifyInst.PropAnd	40	16	synth with cache (only 1: firstorder).	0.844542980194	506
Coq.micromega.ZifyInst.PropOr	40	0.4	synth with cache (only 1: constructor; only 1: tauto).	0.0729851722717	6
Coq.micromega.ZifyInst.PropArrow	40	0.28	synth with cache (only 1: constructor; only 1: tauto).	0.132428884506	420
Coq.micromega.ZifyInst.PropIff	40	0.6	synth with cache (only 1: constructor; only 1: tauto).	0.0573379993439	8
Coq.micromega.ZifyInst.PropNot	40	1.7	synth with cache (only 1: constructor; only 1: intuition).	0.0393030643463	11
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.1.12	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	0.894320011139	378
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40	9.3	synth with cache (only 1: intro n; only 1: firstorder).	1.45135998726	256
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	synth with cache (only 1: exact (SORplus_wd sor)).	0.0298299789429	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	synth with cache (only 1: exact (SORtimes_wd sor)).	0.0299870967865	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	synth with cache (only 1: exact (SORopp_wd sor)).	0.0294709205627	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	synth with cache (only 1: exact (SORle_wd sor)).	0.0302119255066	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	1	synth with cache (only 1: exact (SORlt_wd sor)).	0.0315079689026	2
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	1.0.0.3.2	synth with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.351004838943	43
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	0.0.0.5	synth with cache (only 1: constructor; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper; only 1: Morphisms.solve_proper).	0.0691621303558	9
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.0685410499573	9
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	0.0.0.0.0.2.0.0.0	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with 1; only 1: auto with real; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: pattern 1 at 1; only 1: rewrite <- a; only 1: clear a b; only 1: auto with real).	1.16130280495	209
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.1.0	synth with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.0922009944916	16
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	7.0.1.0	synth with cache (only 1: intros x y H H0; only 1: rewrite <- (Rmult_0_l x); only 1: rewrite <- (Rmult_comm x); only 1: auto with real).	1.77893400192	457
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	5.0.0.8.0.0	synth with cache (only 1: split; only 1: intro EQ; only 1: split; only 1: Z.order; only 1: Z.order; only 1: now destruct x).	7.07347488403	3081
Coq.micromega.ZMicromega.lt_le_iff	40	8.2.3.0	synth with cache (only 1: intro n; only 1: split; only 1: apply Z.lt_le_pred; only 1: apply Z.lt_le_pred).	2.48267698288	1327
Coq.micromega.ZMicromega.le_0_iff	40	0.0.6	synth with cache (only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.154326200485	35
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40	0.1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Z.pow_pos; only 1: rewrite <- (Z.mul_1_r (pow_pos _ _ _)); only 1: generalize 1; only 1: induction p; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?IHp, ?Z.mul_assoc; only 1: trivial; only 1: intro n; only 1: trivial).	35.3365008831	11827
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0392160415649	2
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.4.2.3	synth with cache (only 1: intro n; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: destruct n; only 1: easy; only 1: easy; only 1: destr_eq H; only 1: reflexivity).	1.15622019768	546
Coq.micromega.ZMicromega.isZ0_n0	40	0.1.0.1.0.1.5	synth with cache (only 1: destruct x; only 1: <Coq.Strings.String.t_eqb>; only 1: discriminate; only 1: <Coq.Strings.String.t_eqb>; only 1: trivial; only 1: <Coq.Strings.String.t_eqb>; only 1: trivial).	2.99967694283	1321
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40	0.0.8.0.10.0.16.5	synth with cache (only 1: induction p; only 1: constructor; only 1: auto with zarith; only 1: constructor; only 1: trivial; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith).	4.76257610321	6923
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40	0.0.8.3	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	1.31199598312	737
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0710830688477	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	25.10	synth with cache (only 1: intro n; only 1: now destruct n).	12.8935279846	9297
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.0.3.0.0.3.3.20	synth with cache (only 1: destruct x; only 1: now repeat split; only 1: intuition; only 1: destr_eq H; only 1: destr_eq H; only 1: intuition; only 1: destr_eq H; only 1: destr_eq H).	23.9030580521	14221
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40	68.0.0	synth with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: now rewrite Pos.add_comm).	31.6825339794	60129
Coq.micromega.Env.S.jump_succ	40	8.1	synth with cache (only 1: rewrite <- ?jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.124447107315	79
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	0.0.5.0	synth with cache (only 1: unfold tail; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0412030220032	9
Coq.micromega.Env.S.nth_pred_double	40	0.0.1.0	synth with cache (only 1: unfold tail; only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0650460720062	22
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.3	synth with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0345618724823	17
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	4	synth with cache (only 1: destr_bool).	0.0158100128174	5
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	0	synth with cache (only 1: reflexivity).	0.00783395767212	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	1	synth with cache (only 1: reflexivity).	0.00771379470825	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	2.38	synth with cache (only 1: fix even_spec 1; only 1: auto).	2.50046610832	5230
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40	5.28	synth with cache (only 1: fix even_spec 1; only 1: auto).	24.6604590416	21712
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	16	synth with cache (only 1: now intros []).	0.178446054459	296
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.2.1.1.4.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: simpl; only 1: reflexivity).	1.54410791397	1483
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40	1.41.4	synth with cache (only 1: intros l1; only 1: fix le_div2 1; only 1: auto).	5.59878897667	11650
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	6.1.3	synth with cache (only 1: unfold eval_cnf; only 1: simpl; only 1: firstorder).	0.508640050888	324
Coq.micromega.Tauto.S.eval_cnf_tt	40	1.0.0	synth with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0164790153503	4
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40	2.26.14	synth with cache (only 1: intros a n; only 1: fix even_spec 1; only 1: tauto).	28.3452248573	25371
Coq.micromega.Tauto.S.no_middle_eval_tt	40	31	synth with cache (only 1: eauto).	1.89552402496	1196
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	1.6.1.6.1.0.0	synth with cache (only 1: unfold eval_cnf; only 1: intros; only 1: split; only 1: rewrite make_conj_cons; only 1: auto; only 1: repeat rewrite make_conj_cons in *; only 1: auto).	5.61521410942	3087
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0346028804779	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	1.1.1.7.16.28	synth with cache (only 1: intros H; only 1: compute; only 1: destruct H; only 1: easy || now destruct 1; only 1: now subst; only 1: now subst).	29.5072789192	29859
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	14.5.2	synth with cache (only 1: intros H; only 1: intro LS'; only 1: firstorder).	0.777866125107	1062
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	13.6.4	synth with cache (only 1: intros H; only 1: intro LS'; only 1: firstorder).	1.06157493591	1199
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	13	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.162490129471	123
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.1.0.0.1.0.0.0.0.0.1.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	17.0508918762	2937
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	5.88064789772	1332
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.0.0.0	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0393319129944	4
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.6	synth with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.234445095062	27
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	1.1.1.20	synth with cache (only 1: induction M; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	2.06422615051	906
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40	3.18.12	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	3.11894607544	1559
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	9	synth with cache (only 1: exact (SORtimes_wd sor)).	0.201261997223	10
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	43	synth with cache (only 1: exact (SORopp_wd sor)).	3.71258687973	3122
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	9	synth with cache (only 1: exact (SORle_wd sor)).	0.0456969738007	15
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40	7.54.0	synth with cache (only 1: intros; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	8.64152312279	7927
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40	15.25.16.0	synth with cache (only 1: intros; only 1: unfold eval_pol; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: let rec mul_permut := let rec mul_permut_rec := let rec mul_push := gen_mul_push rmul Rsth Reqe ARth in fun t => match t with | rmul ?x ?y => mul_permut_rec y || mul_permut_rec x | _ => mul_push t; apply (Rmul_ext Reqe); [  | reflexivity ] end in repeat reflexivity || match goal with | |- ?t == _ => mul_permut_rec t end in mul_permut).	7.43739891052	6195
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.6.2.8.8	synth with cache (only 1: intuition; only 1: induction l; only 1: firstorder; only 1: simpl; only 1: auto).	1.06491994858	1468
Coq.micromega.Refl.make_impl_map	40	2.4.4	synth with cache (only 1: induction l as [| a l IH]; only 1: firstorder; only 1: firstorder).	0.34995007515	142
Coq.micromega.Refl.make_conj_cons	40	2.2.2.10	synth with cache (only 1: intros q; only 1: destruct l as [| x xs]; only 1: firstorder; only 1: firstorder).	4.05578804016	4338
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	2.15.10	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: rewrite make_conj_cons; only 1: intuition).	37.2114810944	12834
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0532138347626	6
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	2	synth with cache (only 1: exact RTheory).	0.580264806747	80
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.1.5	synth with cache (only 1: unfold IZR; only 1: vm_compute; only 1: auto with real).	0.139991998672	33
Coq.micromega.RMicromega.Q2R_1	40	6.13	synth with cache (only 1: vm_compute; only 1: intuition subst; try ring; auto with real).	1.85576891899	334
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40	4.18	synth with cache (only 1: fix odd_spec 1; only 1: auto).	0.488989114761	575
Coq.micromega.RMicromega.is_neg_false	40	0.3.0.0.2.2.3.2.4.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: destruct z; only 1: discriminate; only 1: intros; only 1: easy; only 1: congruence; only 1: simpl; only 1: intros; only 1: now induction n).	4.86233186722	2823
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0731799602509	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40	10.0.7	synth with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: tauto).	3.85815405846	2060
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.1.1.5.0.1.3.3	synth with cache (only 1: induction p; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: trivial).	3.30788588524	2980
Coq.rtauto.Bintree.map_app	40	0.1.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0413739681244	9
Coq.rtauto.Bintree.length_map	40	0.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.032331943512	7
Coq.rtauto.Bintree.Lget_map	40	0.0.0.0.3.2.0.0.2.7.3	synth with cache (only 1: intros A B f l; only 1: induction l as [| a l' Hrec]; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	18.1653409004	26470
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	2	synth with cache (only 1: now intros []).	0.0206508636475	3
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	3	synth with cache (only 1: now intros []).	0.0201709270477	4
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	1.0.7.11.0	synth with cache (only 1: intros; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: intro H; only 1: destr_eq H; only 1: auto).	2.4626750946	2303
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40	2.28	synth with cache (only 1: fix sqrtrem_spec 1; only 1: auto).	4.72474598885	9291
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.with_env.compose0	40	0.4.2.9.23	synth with cache (only 1: intros S W; only 1: induction W; only 1: trivial; only 1: simpl; only 1: auto).	4.26712393761	8176
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40	5.4.2.0.0.1.0	synth with cache (only 1: induction F; only 1: intros x y z; only 1: intros H; only 1: auto; only 1: intros A H; only 1: intros; only 1: firstorder).	5.07614278793	4123
Coq.rtauto.Rtauto.with_env.compose3	40	3.1.6.4.0	synth with cache (only 1: induction F; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: firstorder).	4.21114301682	2231
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40	4.10.2	synth with cache (only 1: intros A H; only 1: fix sqrtrem_spec 1; only 1: auto).	3.02710199356	1921
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	1.7.2	synth with cache (only 1: intros x y z; only 1: fix even_spec 1; only 1: trivial).	0.125466108322	120
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.nsatz.Nsatz.nsatz1.psos_r1b	40
Coq.nsatz.Nsatz.nsatz1.psos_r1	40	5.4.1	synth with cache (only 1: intros; only 1: setoid_rewrite H; only 1: cring).	1.97866916656	235
Coq.nsatz.Nsatz.nsatz1.nsatzR_diff	40
Coq.nsatz.Nsatz.nsatz1.P0Z_correct	40	1.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0386919975281	3
Coq.nsatz.Nsatz.nsatz1.Rext	40	0.0.0.4	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.10724902153	8
Coq.nsatz.Nsatz.nsatz1.Rset	40	1.0	synth with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.0397770404816	3
Coq.nsatz.Nsatz.nsatz1.Rtheory	40
Coq.nsatz.Nsatz.nsatz1.PolZadd_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZmul_correct	40
Coq.nsatz.Nsatz.nsatz1.R_power_theory	40
Coq.nsatz.Nsatz.nsatz1.norm_correct	40
Coq.nsatz.Nsatz.nsatz1.PolZeq_correct	40
Coq.nsatz.Nsatz.nsatz1.mult_l_correct	40
Coq.nsatz.Nsatz.nsatz1.compute_list_correct	40
Coq.nsatz.Nsatz.nsatz1.check_correct	40
Coq.nsatz.Nsatz.Rsth	40	1.0.0.0.2	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: congruence).	0.138169050217	15
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	1	synth with cache (only 1: exact R1_neq_R0).	0.0803561210632	22
Coq.nsatz.Nsatz.Rcri	40	8.8.5.4	synth with cache (only 1: red; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: exact Rmult_comm).	2.93952393532	1830
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40	0	synth with cache (only 1: discriminate).	0.0589361190796	1
Coq.nsatz.Nsatz.Qcri	40	0.1.0.2.1.1.1.20	synth with cache (only 1: red; only 1: intros; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	4.1099820137	1231
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	1	synth with cache (only 1: discriminate).	0.0578939914703	2
Coq.nsatz.Nsatz.Zcri	40	0.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0676231384277	2
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40	1	synth with cache (only 1: now Z.nzsimpl').	0.0828959941864	2
Coq.omega.OmegaLemmas.Zred_factor1	40	2.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	0.621939182281	62
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	5	synth with cache (only 1: now Z.nzsimpl).	1.3987300396	77
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	2	synth with cache (only 1: now Z.nzsimpl).	0.138318061829	3
Coq.omega.OmegaLemmas.Zred_factor6	40	0	synth with cache (only 1: now destruct n).	0.027547121048	1
Coq.omega.OmegaLemmas.new_var	40	1.14	synth with cache (only 1: intro n; only 1: now exists n).	0.118083953857	145
Coq.omega.OmegaLemmas.OMEGA1	40	0.0	synth with cache (only 1: intros EQ; only 1: now rewrite EQ).	0.0324599742889	2
Coq.omega.OmegaLemmas.OMEGA2	40	4.10	synth with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.163537979126	149
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	6.6.3.11	synth with cache (only 1: intro H; only 1: intros EQ; only 1: rewrite EQ; only 1: now Z.nzsimpl).	1.51074004173	1079
Coq.omega.OmegaLemmas.OMEGA6	40	0.2.15.6.42	synth with cache (only 1: intros GT; only 1: intros EQ; only 1: rewrite EQ; only 1: Z.nzsimpl; only 1: trivial).	15.1332299709	13313
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.3.2	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.347896099091	27
Coq.omega.OmegaLemmas.OMEGA12	40	1.0	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0477879047394	3
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.166128158569	13
Coq.omega.OmegaLemmas.OMEGA15	40	1.0.0.3.0	synth with cache (only 1: rewrite <- !Z.add_assoc; only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.287188053131	24
Coq.omega.OmegaLemmas.OMEGA16	40	6.7	synth with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: now Z.nzsimpl).	0.556550979614	95
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	synth with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.230839014053	2
Coq.omega.OmegaLemmas.OMEGA18	40	1.8.8.8	synth with cache (only 1: unfold Zne, not; only 1: intros; only 1: rewrite H1 in H; only 1: tauto).	2.92120718956	1693
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	synth with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.250874996185	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.1.1.0	synth with cache (only 1: intros; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0776591300964	14
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.9.2.1	synth with cache (only 1: intros EQ; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.05685710907	1005
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.1.0	synth with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0529170036316	7
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40	0.0.26	synth with cache (only 1: fix gcd_divide 1; only 1: intros Ha Hb; only 1: intuition).	6.60499310493	5152
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.03848695755	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	synth with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0371029376984	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	synth with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0498142242432	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	synth with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0405321121216	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.4.2	synth with cache (only 1: symmetry; only 1: rewrite Pos.eqb_eq; only 1: auto with relations).	0.300065040588	122
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40	1.0.1.0.4.3.0.5.18	synth with cache (only 1: destruct p; only 1: destruct b; only 1: intuition; only 1: discriminate; only 1: inversion H; only 1: intuition; only 1: split; only 1: discriminate; only 1: easy).	7.27274513245	6357
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	0.0.0.2.0.0.0.1	synth with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.339231967926	147
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.0.27.19	synth with cache (only 1: intros a H; only 1: inversion 1; only 1: simpl; only 1: trivial).	17.7357180119	25810
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	0	synth with cache (only 1: reflexivity).	0.0347809791565	1
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	1.1.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0249309539795	5
Coq.funind.Recdef.Splus_lt	40	1.2.3	synth with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.0254738330841	9
Coq.funind.Recdef.SSplus_lt	40	6.0.0	synth with cache (only 1: apply Nat.lt_succ_r; only 1: apply Nat.lt_succ_r; only 1: auto with arith).	0.341267108917	47
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	synth with cache (only 1: red; only 1: exact Z.mul_comm).	0.0487940311432	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	0.0	synth with cache (only 1: intro EQ; only 1: discriminate).	0.0395939350128	2
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	0	synth with cache (only 1: assumption).	0.0243420600891	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	synth with cache (only 1: exact ring0).	0.0244300365448	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	48.0.0	synth with cache (only 1: simpl; only 1: intros; only 1: CRelationClasses.simpl_crelation).	16.9345839024	8863
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	50.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: firstorder).	17.2217278481	11085
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40	0.1.4.0.0.1.0.0.0	synth with cache (only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1; only 1: rewrite IHP2; only 1: Esimpl).	37.3090798855	944
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40	0.2.2	synth with cache (only 1: intro P; only 1: elim (PaddX_ok2 P); only 1: auto).	0.654747962952	107
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	6.1.0	synth with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	4.90482497215	154
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.892700910568	290
Coq.setoid_ring.Ring.bool_eq_ok	40	0	synth with cache (only 1: destr_bool).	0.0240840911865	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.028657913208	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0289251804352	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40	1	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0271139144897	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	5	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0347578525543	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	4	synth with cache (only 1: trivial).	0.0702228546143	5
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40	7.0	synth with cache (only 1: red; only 1: now intros l l' <- P Q H).	11.5058751106	83
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	3	synth with cache (only 1: eauto).	0.0632557868958	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	5	synth with cache (only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	1.08097887039	12
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	22	synth with cache (only 1: eauto).	1.54999494553	525
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40	24.12	synth with cache (only 1: rewrite rdiv_def; only 1: eauto).	15.2009789944	1476
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40	1.3.2.2.2.3	synth with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	0.769595861435	395
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	0.3.1.3.1.3	synth with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	1.2567691803	384
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40	4	synth with cache (only 1: apply (pow_pos_add Rsth (Rmul_ext Reqe) (ARmul_assoc ARth))).	0.0444619655609	5
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40	1.0.0.1.0.0.1.0.1.6.2	synth with cache (only 1: intros; only 1: induction p; only 1: apply field_is_integral_domain; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: apply field_is_integral_domain; only 1: trivial; only 1: trivial; only 1: trivial).	5.00776195526	3283
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	2.14964103699	49
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.1	synth with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	2.17682290077	61
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	4.0.0.0	synth with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	0.0742399692535	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	1.1.0.0	synth with cache (only 1: red; only 1: intros l; only 1: simpl; only 1: eauto).	0.0935370922089	6
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	3.0.0.0	synth with cache (only 1: red; only 1: intros l; only 1: simpl; only 1: eauto).	0.119495868683	7
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40	0.17	synth with cache (only 1: Bool.destr_bool; only 1: auto).	0.781147003174	611
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	6.1.1.3	synth with cache (only 1: destruct l1; only 1: trivial; only 1: simpl; only 1: now f_equiv).	2.14982819557	601
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.0.4.1	synth with cache (only 1: simpl; only 1: destruct l1; only 1: reflexivity; only 1: now destruct 1).	0.0673110485077	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	6	synth with cache (only 1: now destruct 1).	0.0894989967346	22
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0333631038666	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0349791049957	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0324990749359	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.0.0.0.2	synth with cache (only 1: constructor; only 1: congruence; only 1: red; only 1: auto with *; only 1: congruence).	0.049213886261	7
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	0.0.0.24	synth with cache (only 1: destruct x; only 1: auto; only 1: auto; only 1: auto).	10.7764248848	1127
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.0.0.0	synth with cache (only 1: intros x y H7; only 1: subst; only 1: repeat rewrite same_genZ; only 1: norm).	0.0822291374207	4
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.1.0.0.0.0.1	synth with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto with *; only 1: unfold Transitive; only 1: intros x y z H1 H2; only 1: subst; only 1: reflexivity).	0.119489192963	14
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	5.3.3.10.3	synth with cache (only 1: red; only 1: red; only 1: unfold eq_notation in *; only 1: intros; only 1: intuition).	6.3697488308	3980
Coq.setoid_ring.Rings_R.R_one_zero	40	0	synth with cache (only 1: exact R1_neq_R0).	0.0602040290833	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	2	synth with cache (only 1: reflexivity).	0.0214519500732	3
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	10.1	synth with cache (only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	0.116609096527	73
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	34	synth with cache (only 1: now N.nzsimpl).	0.619688034058	978
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	17	synth with cache (only 1: intuition).	0.127986192703	126
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	28	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.703881025314	591
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.1	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0916929244995	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	18	synth with cache (only 1: firstorder).	0.272683143616	192
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	16	synth with cache (only 1: firstorder).	0.126158952713	129
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	8	synth with cache (only 1: auto).	0.02463722229	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	0.0.0.8	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0986349582672	37
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	5	synth with cache (only 1: solve_proper).	0.0227229595184	6
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0	synth with cache (only 1: reflexivity).	0.0208082199097	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	synth with cache (only 1: reflexivity).	0.0208249092102	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	1.2.2.1.2.2.2.6	synth with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	0.950117111206	993
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	3	synth with cache (only 1: firstorder).	0.238882064819	28
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	13	synth with cache (only 1: firstorder).	0.153726100922	85
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	15	synth with cache (only 1: firstorder).	0.145766973495	120
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	19	synth with cache (only 1: firstorder).	0.520402908325	324
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	3.2	synth with cache (only 1: intros; only 1: firstorder).	0.0500018596649	7
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	3	synth with cache (only 1: firstorder).	0.0486698150635	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	3	synth with cache (only 1: firstorder).	0.0369489192963	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	4	synth with cache (only 1: firstorder).	0.0253069400787	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	11.35.17	synth with cache (only 1: elim ARth; only 1: intros n m p q H1 H2 H3 H4; only 1: firstorder).	6.97489213943	7009
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	synth with cache (only 1: mrewrite).	0.0361309051514	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	synth with cache (only 1: mrewrite).	0.038153886795	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	synth with cache (only 1: exact (Radd_ext Reqe)).	0.026967048645	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	1	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0280711650848	2
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0264918804169	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.12	synth with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.387481927872	124
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	3	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0302588939667	4
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.9	synth with cache (only 1: destruct 1; only 1: norm).	0.130855083466	58
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40	1	synth with cache (only 1: exact (SRadd_ext SReqe)).	0.028557062149	2
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	2	synth with cache (only 1: exact (SRmul_ext SReqe)).	0.0298709869385	3
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	1	synth with cache (only 1: exact (Radd_ext Reqe)).	0.028235912323	2
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	2	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0283348560333	3
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0263590812683	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0272178649902	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.1.0.1.0.0.1	synth with cache (only 1: induction w; only 1: destruct n; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm).	1.64481496811	146
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	0.1.6	synth with cache (only 1: induction x; only 1: norm; only 1: norm).	0.0838968753815	22
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	12	synth with cache (only 1: exact (Radd_ext Reqe)).	0.0776720046997	64
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	5	synth with cache (only 1: exact (Rmul_ext Reqe)).	0.0319781303406	6
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	7	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0313761234283	8
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	10	synth with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.044349193573	21
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40	0.0.0.2	synth with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.54790520668	6
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.38	synth with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	3.73206090927	817
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	0.15.2	synth with cache (only 1: intros x y; only 1: apply Ncring_initial.Zsth; only 1: intuition).	0.68705701828	280
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	12.4	synth with cache (only 1: intros H; only 1: firstorder).	0.917182922363	435
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40	12.4	synth with cache (only 1: intros H; only 1: firstorder).	0.78800201416	316
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	10	synth with cache (only 1: exact (Ropp_ext Reqe)).	0.0709109306335	36
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	15.1	synth with cache (only 1: red; only 1: simpl_relation).	2.65839004517	1692
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	0.14.2.1.2.2	synth with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: now intros l l' <- P Q H).	11.1283152103	5067
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.1.0.0.0.0.0.0	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	23.7390189171	5041
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	0.2.0.0.0.0.0.0.0.0.0.0.1	synth with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP; only 1: rsimpl; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	4.27178907394	1361
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40	2.17	synth with cache (only 1: fix odd_spec 1; only 1: auto).	2.50278997421	1522
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40	1.0.3.0.11	synth with cache (only 1: destruct n; only 1: intros; only 1: Esimpl; only 1: intros; only 1: Esimpl).	17.5823149681	4073
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	2.0.2	synth with cache (only 1: intro x; only 1: intros; only 1: reflexivity).	0.027135848999	7
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.1.0.0	synth with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0427958965302	5
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	2.7.22.2	synth with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite ring_add_comm; only 1: reflexivity).	16.1490721703	8395
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	2.1.0.24.0	synth with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	7.69289302826	3823
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	1.16	synth with cache (only 1: intros a b; only 1: apply Zeq_is_eq_bool).	1.17216706276	677
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	1.0.0.0.0.3.7	synth with cache (only 1: intros H1; only 1: intro; only 1: apply Qeq_sym; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	0.7985060215	220
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	synth with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0390779972076	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	synth with cache (only 1: tauto).	0.00990986824036	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.13	synth with cache (only 1: unlock; only 1: discriminate).	0.205269098282	153
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	2	synth with cache (only 1: by case : k ).	0.0112969875336	3
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.0.2	synth with cache (only 1: destruct 1; only 1: intros; only 1: assumption).	0.0180008411407	20
Coq.ssr.ssreflect.ApplyIff.iffLR	40	10	synth with cache (only 1: tauto).	0.0397539138794	103
Coq.ssr.ssreflect.ApplyIff.iffRL	40	2	synth with cache (only 1: by case : eqPQ ).	0.0201330184937	19
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	9.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: tauto).	0.173903942108	151
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	synth with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.012405872345	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40	0	synth with cache (only 1: Bool.destr_bool).	0.0554299354553	1
Coq.ssr.ssrbool.is_true_true	40	1	synth with cache (only 1: exact (erefl _)).	0.226279020309	2
Coq.ssr.ssrbool.not_false_is_true	40	2	synth with cache (only 1: by [  ]).	0.317723035812	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.27	synth with cache (only 1: unlock; only 1: by [  ]).	3.98574113846	390
Coq.ssr.ssrbool.negbT	40	0.0.2	synth with cache (only 1: intro; only 1: subst; only 1: by [  ]).	0.407490968704	5
Coq.ssr.ssrbool.negbTE	40	3	synth with cache (only 1: Bool.destr_bool).	0.01185297966	4
Coq.ssr.ssrbool.negbF	40	0	synth with cache (only 1: by case : b ).	0.0106949806213	1
Coq.ssr.ssrbool.negbFE	40	1	synth with cache (only 1: by case : b ).	0.0110859870911	2
Coq.ssr.ssrbool.negbK	40	2	synth with cache (only 1: by case).	0.20836186409	3
Coq.ssr.ssrbool.negbNE	40	18	synth with cache (only 1: by case : b ).	2.62754797935	151
Coq.ssr.ssrbool.negb_inj	40	0.40	synth with cache (only 1: red; only 1: Bool.destr_bool).	9.20469808578	942
Coq.ssr.ssrbool.negbLR	40	9.1	synth with cache (only 1: intros; only 1: Bool.destr_bool).	0.24528503418	105
Coq.ssr.ssrbool.negbRL	40	3.5	synth with cache (only 1: destruct 1; only 1: by case : b ).	0.123597145081	27
Coq.ssr.ssrbool.contra	40	2.17	synth with cache (only 1: Bool.destr_bool; only 1: tauto).	3.02762699127	189
Coq.ssr.ssrbool.contraL	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.144214868546	1
Coq.ssr.ssrbool.contraR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.116670846939	1
Coq.ssr.ssrbool.contraLR	40	0	synth with cache (only 1: by case : b  => //; case : c ).	0.0969591140747	1
Coq.ssr.ssrbool.contraT	40	2.16	synth with cache (only 1: Bool.destr_bool; only 1: auto with bool).	3.34829592705	213
Coq.ssr.ssrbool.wlog_neg	40	0	synth with cache (only 1: by case : b  => // ->).	0.191226005554	1
Coq.ssr.ssrbool.contraFT	40	1.8	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.12042093277	22
Coq.ssr.ssrbool.contraFN	40	1.10	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	5.62012290955	47
Coq.ssr.ssrbool.contraTF	40	4.4	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.772715091705	10
Coq.ssr.ssrbool.contraNF	40	4.5	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	4.39579892159	25
Coq.ssr.ssrbool.contraFF	40	0.0.6.3	synth with cache (only 1: Bool.destr_bool; only 1: reflexivity || destruct H; only 1: by [  ]; only 1: assumption).	4.98986387253	69
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	2	synth with cache (only 1: by case  def_b: b ; constructor).	0.286816120148	3
Coq.ssr.ssrbool.BoolIf.ifT	40	10	synth with cache (only 1: by move ->).	0.697276115417	40
Coq.ssr.ssrbool.BoolIf.ifF	40	2	synth with cache (only 1: by move ->).	0.287431001663	12
Coq.ssr.ssrbool.BoolIf.ifN	40	13	synth with cache (only 1: by case : b ).	1.478058815	115
Coq.ssr.ssrbool.BoolIf.if_same	40	3	synth with cache (only 1: by case  def_b: b ; constructor).	0.47044801712	4
Coq.ssr.ssrbool.BoolIf.if_neg	40	0	synth with cache (only 1: by case b).	0.558261871338	1
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	synth with cache (only 1: by case b).	0.483825922012	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	synth with cache (only 1: by case b).	0.313899040222	1
Coq.ssr.ssrbool.BoolIf.ifE	40	3	synth with cache (only 1: trivial).	0.402181148529	4
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	synth with cache (only 1: by case c; case Hb).	0.105157136917	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	1	synth with cache (only 1: by case c; case Hb).	0.105031013489	2
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	synth with cache (only 1: by move <-; case Hb).	0.0998930931091	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	4.4.1	synth with cache (only 1: intros [?| ?]; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.12453603745	58
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	8.0	synth with cache (only 1: intros [Hl Hr]; only 1: by case : Pb ; constructor; auto).	0.453505992889	10
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40
Coq.ssr.ssrbool.Reflect.rwP	40	10	synth with cache (only 1: by case : Pb ; constructor; auto).	0.841422080994	22
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	39	synth with cache (only 1: by case).	23.0098347664	1549
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	27	synth with cache (only 1: by move  =>b b' ->).	22.5742928982	627
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40
Coq.ssr.ssrbool.AllAnd.all_and3	40	2	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.779016017914	3
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.601634979248	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	synth with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.516588926315	1
Coq.ssr.ssrbool.pair_andP	40	3	synth with cache (only 1: intuition).	18.1898767948	42
Coq.ssr.ssrbool.ReflectConnectives.idP	40
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	synth with cache (only 1: by case b1; constructor).	0.321939945221	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	synth with cache (only 1: by case b1; constructor).	0.102827072144	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	synth with cache (only 1: by case b1; constructor).	0.104893922806	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	synth with cache (only 1: by case b1; constructor).	0.145905971527	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	29	synth with cache (only 1: by case b1; constructor; auto).	13.0123240948	420
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	1	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.112130880356	2
Coq.ssr.ssrbool.ReflectConnectives.norP	40	1	synth with cache (only 1: by case b1; case b2; constructor => //; case).	0.0271370410919	2
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	3	synth with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0167050361633	4
Coq.ssr.ssrbool.andTb	40	0	synth with cache (only 1: by [  ]).	0.168359994888	1
Coq.ssr.ssrbool.andFb	40	0	synth with cache (only 1: by [  ]).	0.43025803566	1
Coq.ssr.ssrbool.andbT	40	24	synth with cache (only 1: by case  =>// undecP; apply /undecP ; right => notP; apply /notF/undecP ; left).	1.3260140419	280
Coq.ssr.ssrbool.andbF	40	1	synth with cache (only 1: by case).	0.345810174942	2
Coq.ssr.ssrbool.andbb	40	0	synth with cache (only 1: by case).	0.192891836166	1
Coq.ssr.ssrbool.andbC	40	4.2.48	synth with cache (only 1: case  =>// undecP; only 1: intuition; only 1: Bool.destr_bool).	5.71036314964	1647
Coq.ssr.ssrbool.andbA	40	0	synth with cache (only 1: by case).	0.213241100311	1
Coq.ssr.ssrbool.andbCA	40	0	synth with cache (only 1: by do 2!case).	0.015144109726	1
Coq.ssr.ssrbool.andbAC	40	1	synth with cache (only 1: by do 3!case).	0.0897159576416	2
Coq.ssr.ssrbool.andbACA	40	1	synth with cache (only 1: by do 3!case).	0.0468640327454	2
Coq.ssr.ssrbool.orTb	40	0	synth with cache (only 1: by unlock).	0.0371260643005	1
Coq.ssr.ssrbool.orFb	40	0	synth with cache (only 1: by case).	0.0130460262299	1
Coq.ssr.ssrbool.orbT	40	2	synth with cache (only 1: by case).	0.0413429737091	3
Coq.ssr.ssrbool.orbF	40	1	synth with cache (only 1: by case).	0.083016872406	2
Coq.ssr.ssrbool.orbb	40	0	synth with cache (only 1: by case).	0.0597360134125	1
Coq.ssr.ssrbool.orbC	40	0	synth with cache (only 1: by do 2!case).	0.0148379802704	1
Coq.ssr.ssrbool.orbA	40	0	synth with cache (only 1: by do 3!case).	0.0429251194	1
Coq.ssr.ssrbool.orbCA	40	0	synth with cache (only 1: by do 3!case).	0.0187828540802	1
Coq.ssr.ssrbool.orbAC	40	0	synth with cache (only 1: by do 3!case).	0.0189549922943	1
Coq.ssr.ssrbool.orbACA	40	0	synth with cache (only 1: by do 4!case).	0.026801109314	1
Coq.ssr.ssrbool.andbN	40	1	synth with cache (only 1: by case : b ).	0.343336105347	2
Coq.ssr.ssrbool.andNb	40	1	synth with cache (only 1: by case : b ).	0.342831134796	2
Coq.ssr.ssrbool.orbN	40	1	synth with cache (only 1: Bool.destr_bool).	0.0815958976746	2
Coq.ssr.ssrbool.orNb	40	0	synth with cache (only 1: by case : b ).	0.013160943985	1
Coq.ssr.ssrbool.andb_orl	40	2	synth with cache (only 1: by do 3!case).	0.0242431163788	3
Coq.ssr.ssrbool.andb_orr	40	1	synth with cache (only 1: by case).	0.0159091949463	2
Coq.ssr.ssrbool.orb_andl	40	0	synth with cache (only 1: by do 3!case).	0.0193819999695	1
Coq.ssr.ssrbool.orb_andr	40	0	synth with cache (only 1: by do 3!case).	0.0194079875946	1
Coq.ssr.ssrbool.andb_idl	40	4.1	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.767269134521	7
Coq.ssr.ssrbool.andb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.608673095703	1
Coq.ssr.ssrbool.andb_id2l	40	17	synth with cache (only 1: by case : a ; case : b  => // ->).	14.2470309734	215
Coq.ssr.ssrbool.andb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	1.47274804115	1
Coq.ssr.ssrbool.orb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.520084142685	1
Coq.ssr.ssrbool.orb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.368502855301	1
Coq.ssr.ssrbool.orb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	1.36891412735	1
Coq.ssr.ssrbool.orb_id2r	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	1.11866807938	1
Coq.ssr.ssrbool.negb_and	40	3	synth with cache (only 1: Bool.destr_bool).	0.257942199707	4
Coq.ssr.ssrbool.negb_or	40	0	synth with cache (only 1: Bool.destr_bool).	0.170340061188	1
Coq.ssr.ssrbool.andbK	40	1	synth with cache (only 1: by case : a ; case : b ).	0.476295948029	2
Coq.ssr.ssrbool.andKb	40	1	synth with cache (only 1: by case : a ; case : b ).	0.257769107819	2
Coq.ssr.ssrbool.orbK	40	1	synth with cache (only 1: by case : a ; case : b ).	0.301438808441	2
Coq.ssr.ssrbool.orKb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.257367134094	1
Coq.ssr.ssrbool.implybT	40	1	synth with cache (only 1: by case : b  => // ->).	0.0374388694763	2
Coq.ssr.ssrbool.implybF	40	0	synth with cache (only 1: exact (erefl _)).	0.0799989700317	1
Coq.ssr.ssrbool.implyFb	40	0	synth with cache (only 1: by case : b ).	0.0550289154053	1
Coq.ssr.ssrbool.implyTb	40	0	synth with cache (only 1: exact (erefl _)).	0.0118389129639	1
Coq.ssr.ssrbool.implybb	40	0	synth with cache (only 1: by case : b ).	0.0940899848938	1
Coq.ssr.ssrbool.negb_imply	40	1	synth with cache (only 1: by case : a ; case : b ).	0.105932950974	2
Coq.ssr.ssrbool.implybE	40	1	synth with cache (only 1: by case : a ; case : b ).	0.36753320694	2
Coq.ssr.ssrbool.implyNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.192487001419	1
Coq.ssr.ssrbool.implybN	40	2	synth with cache (only 1: by case : a ; case : b ).	0.236352205276	3
Coq.ssr.ssrbool.implybNN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.170878171921	1
Coq.ssr.ssrbool.implyb_idl	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.304620027542	1
Coq.ssr.ssrbool.implyb_idr	40	0	synth with cache (only 1: by case : a ; case : b  => // ->).	0.332601070404	1
Coq.ssr.ssrbool.implyb_id2l	40	0	synth with cache (only 1: by case : a ; case : b ; case : c  => // ->).	1.23487186432	1
Coq.ssr.ssrbool.addFb	40	0	synth with cache (only 1: by [  ]).	0.0123178958893	1
Coq.ssr.ssrbool.addbF	40	0	synth with cache (only 1: by case).	0.0133159160614	1
Coq.ssr.ssrbool.addbb	40	0	synth with cache (only 1: by case).	0.0130460262299	1
Coq.ssr.ssrbool.addbC	40	0	synth with cache (only 1: by do 2!case).	0.0151150226593	1
Coq.ssr.ssrbool.addbA	40	0	synth with cache (only 1: by do 3!case).	0.0201890468597	1
Coq.ssr.ssrbool.addbCA	40	0	synth with cache (only 1: by do 3!case).	0.0862860679626	1
Coq.ssr.ssrbool.addbAC	40	0	synth with cache (only 1: by do 3!case).	0.0190999507904	1
Coq.ssr.ssrbool.addbACA	40	0	synth with cache (only 1: by do 4!case).	0.026957988739	1
Coq.ssr.ssrbool.andb_addl	40	0	synth with cache (only 1: by do 3!case).	0.019868850708	1
Coq.ssr.ssrbool.andb_addr	40	0	synth with cache (only 1: by do 3!case).	0.019641160965	1
Coq.ssr.ssrbool.addKb	40	1	synth with cache (only 1: by do 2!case).	0.0179970264435	2
Coq.ssr.ssrbool.addbK	40	0	synth with cache (only 1: by do 2!case).	0.0153148174286	1
Coq.ssr.ssrbool.addIb	40	2	synth with cache (only 1: by do 3!case).	0.0937149524689	3
Coq.ssr.ssrbool.addbI	40	0	synth with cache (only 1: by do 3!case).	0.130779981613	1
Coq.ssr.ssrbool.addTb	40	0	synth with cache (only 1: exact (erefl _)).	0.0567691326141	1
Coq.ssr.ssrbool.addbT	40	2	synth with cache (only 1: by case : b ).	0.0159401893616	3
Coq.ssr.ssrbool.addbN	40	0	synth with cache (only 1: by case : a ; case : b ).	0.408766031265	1
Coq.ssr.ssrbool.addNb	40	0	synth with cache (only 1: by case : a ; case : b ).	0.323557853699	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.21	synth with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	9.15116596222	316
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40	0.32	synth with cache (only 1: intro; only 1: auto).	8.20364904404	550
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	8	synth with cache (only 1: by case : pT pp ).	0.238103866577	9
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	1	synth with cache (only 1: by case : msp  => _ /= ->).	0.115068912506	2
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	2	synth with cache (only 1: by rewrite -mem_topred).	0.114099025726	3
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	0	synth with cache (only 1: by [  ]).	0.306118011475	1
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	1	synth with cache (only 1: exact (erefl _)).	0.216521978378	2
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	0	synth with cache (only 1: by rewrite -mem_topred).	0.0755949020386	1
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	0	synth with cache (only 1: reflexivity).	0.183013916016	1
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.5.2	synth with cache (only 1: Bool.destr_bool; only 1: intro H1; only 1: by do 3!case).	0.0742001533508	10
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	synth with cache (only 1: by move  =>? ?).	0.0829119682312	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	synth with cache (only 1: by move  =>? ?).	0.0162758827209	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	25	synth with cache (only 1: auto).	1.95771694183	714
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.0864119529724	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	1	synth with cache (only 1: by move  =>? ?; auto).	0.021919965744	2
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.0787379741669	1
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	0	synth with cache (only 1: by move  =>? ?; auto).	0.327470779419	1
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	2	synth with cache (only 1: by move  =>? ?; auto).	1.14970993996	3
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	synth with cache (only 1: by move  =>? ?).	1.50560498238	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	synth with cache (only 1: by move  =>? ?).	1.46820902824	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	synth with cache (only 1: by move  =>? ?).	1.16078305244	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	synth with cache (only 1: by move  =>? ?; auto).	1.4020409584	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	0	synth with cache (only 1: by move  =>? ?; auto).	1.40819406509	1
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	synth with cache (only 1: by move  =>? ?; auto).	1.34326601028	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	synth with cache (only 1: by move  =>? ?; auto).	1.78926086426	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	synth with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	2.00773000717	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	synth with cache (only 1: by move  =>? ?; auto).	2.55967903137	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	4.3.1	synth with cache (only 1: intuition; only 1: subst; only 1: intuition).	4.55108809471	33
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	synth with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	2.3735730648	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	0	synth with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.966007947922	1
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	synth with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.940948963165	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.92834591866	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	1	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.52397418022	2
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	synth with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	1.1651301384	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	synth with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	2.49845790863	1
Coq.ssr.ssrbool.sub_in2	40	0.14.2	synth with cache (only 1: intros; only 1: intro; only 1: auto).	12.9543898106	250
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	0	synth with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	1.5552611351	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	29	synth with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	25.8134889603	876
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	synth with cache (only 1: by move  =>hf x ax; rewrite hf).	0.315626859665	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	synth with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	1.22320389748	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	28.2	synth with cache (only 1: unfold all; only 1: by move  =>hf x y axy; rewrite hf).	38.4264252186	1413
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	synth with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	1.371104002	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0108630657196	2
Coq.ssr.ssrfun.unitE	40	0.29.17.22	synth with cache (only 1: red; only 1: intro H; only 1: reflexivity || destruct H; only 1: exact (erefl _)).	7.55218911171	8754
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	synth with cache (only 1: constructor).	0.00577402114868	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.1	synth with cache (only 1: intros H; only 1: by [  ]).	0.0120007991791	3
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	synth with cache (only 1: constructor).	0.00565505027771	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	3.8.7.13.0	synth with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: auto).	17.6266629696	3377
Coq.ssr.ssrfun.all_tag2	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.03262591362	1
Coq.ssr.ssrfun.Sig.svalP	40	41	synth with cache (only 1: apply proj2_sig).	8.56597995758	858
Coq.ssr.ssrfun.Sig.s2valP	40	1	synth with cache (only 1: by case : u ).	0.217680931091	2
Coq.ssr.ssrfun.Sig.s2valP'	40	0	synth with cache (only 1: by case : u ).	0.153162956238	1
Coq.ssr.ssrfun.all_sig	40	0	synth with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.689525127411	1
Coq.ssr.ssrfun.all_sig2	40	0	synth with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	2.11210083961	1
Coq.ssr.ssrfun.Injections.can_pcan	40	3.21.6.0	synth with cache (only 1: intros; only 1: intro z; only 1: rewrite H; only 1: trivial).	4.8595700264	2708
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	6	synth with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.696777105331	21
Coq.ssr.ssrfun.Injections.canLR	40	4.27.1	synth with cache (only 1: intros; only 1: subst; only 1: trivial).	29.5511879921	1925
Coq.ssr.ssrfun.Injections.canRL	40	10.8	synth with cache (only 1: destruct 2; only 1: auto).	5.91685819626	358
Coq.ssr.ssrfun.Some_inj	40	0.37	synth with cache (only 1: inversion 1; only 1: exact (erefl _)).	4.61423206329	1019
Coq.ssr.ssrfun.of_voidK	40	19	synth with cache (only 1: by case).	5.98129796982	165
Coq.ssr.ssrfun.esymK	40	0.3.22	synth with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	4.16260480881	371
Coq.ssr.ssrfun.etrans_id	40	0.12	synth with cache (only 1: subst; only 1: reflexivity).	0.444891929626	60
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0	synth with cache (only 1: by [  ]).	0.00579214096069	1
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	5.1	synth with cache (only 1: intros A C h1 h2; only 1: auto).	0.0141429901123	8
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	synth with cache (only 1: exact eq_refl).	0.0103709697723	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0126848220825	3
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	1	synth with cache (only 1: now trivial).	0.0106511116028	2
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	1	synth with cache (only 1: now unfold Over_rel).	0.0107719898224	2
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	1.3.0	synth with cache (only 1: intros x y z; only 1: intros; only 1: congruence).	0.0351369380951	7
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.2.5	synth with cache (only 1: refine (@rectS _ _ _ _); only 1: reflexivity; only 1: now simpl).	0.205660820007	112
Coq.Vectors.VectorSpec.const_nth	40	0.3.4.19	synth with cache (only 1: induction p; only 1: generalize dependent n; only 1: now simpl; only 1: now simpl).	3.27993083	4142
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.0	synth with cache (only 1: intros; only 1: now f_equal).	0.0224649906158	2
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	3.4.3.3.0.5.19	synth with cache (only 1: intros a b n H; only 1: induction n; only 1: auto; only 1: simpl; only 1: generalize dependent n; only 1: intros; only 1: now f_equal).	26.9142041206	21500
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0479779243469	10
Coq.Vectors.VectorSpec.uncons_cons	40	5	synth with cache (only 1: reflexivity).	0.0178709030151	6
Coq.Vectors.VectorSpec.append_comm_cons	40	0.0	synth with cache (only 1: intros n v le le'; only 1: now simpl).	0.0216989517212	2
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	8.7.10	synth with cache (only 1: intros a n; only 1: fix even_spec 1; only 1: Bool.destr_bool).	33.4261591434	27273
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	0.8.0	synth with cache (only 1: intros x y z; only 1: intros <-; only 1: trivial).	0.0857691764832	60
Coq.Setoids.Setoid.Seq_refl	40	0	synth with cache (only 1: firstorder).	0.013081073761	1
Coq.Setoids.Setoid.Seq_sym	40	0	synth with cache (only 1: firstorder).	0.0141310691833	1
Coq.Setoids.Setoid.Seq_trans	40	0	synth with cache (only 1: firstorder).	0.139293909073	1
Coq.Setoids.Setoid.gen_st	40	2	synth with cache (only 1: CRelationClasses.simpl_crelation).	0.0161008834839	3
Coq.Bool.IfProp.Iftrue_inv	40	0.1.2.1	synth with cache (only 1: intros; only 1: subst; only 1: inversion_clear H; only 1: assumption).	0.0256469249725	26
Coq.Bool.IfProp.Iffalse_inv	40	0.0.1.2.0.1	synth with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: assumption).	0.0182600021362	10
Coq.Bool.IfProp.IfProp_true	40	0.3.6	synth with cache (only 1: intuition; only 1: inversion_clear H; only 1: assumption).	0.0874388217926	89
Coq.Bool.IfProp.IfProp_false	40	0.1.0	synth with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.0138728618622	4
Coq.Bool.IfProp.IfProp_or	40	0.0.0.1.6	synth with cache (only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: assumption).	0.165014028549	164
Coq.Bool.IfProp.IfProp_sum	40	0.1.0.0.0.3.4	synth with cache (only 1: destr_bool; only 1: left; only 1: inversion H; only 1: assumption; only 1: right; only 1: inversion H; only 1: assumption).	0.538941860199	619
Coq.Bool.Zerob.zerob_true_intro	40	0.0.0.8	synth with cache (only 1: induction n; only 1: simpl; only 1: easy; only 1: easy).	0.172148942947	94
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	0.0402400493622	7
Coq.Bool.Zerob.zerob_false_intro	40	0.0.2.0.3	synth with cache (only 1: destruct n; only 1: simpl; only 1: intro H; only 1: intuition; only 1: easy).	0.0843698978424	55
Coq.Bool.Zerob.zerob_false_elim	40	1.0.1.1.2	synth with cache (only 1: destruct n; only 1: intro H; only 1: intro; only 1: now apply Nat.lt_irrefl with 0; only 1: easy).	0.102418899536	39
Coq.Bool.DecBool.ifdec_left	40	0.26.5.2.1.2	synth with cache (only 1: unfold not; only 1: destruct H; only 1: auto; only 1: intros; only 1: destruct H; only 1: assumption).	19.2435941696	99453
Coq.Bool.DecBool.ifdec_right	40
Coq.Bool.Sumbool.sumbool_of_bool	40	3.0.2.29.7	synth with cache (only 1: intro H; only 1: destruct H; only 1: constructor; only 1: exact eq_refl; only 1: auto).	2.23014211655	12189
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.3	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0178608894348	8
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	synth with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.0150852203369	3
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.1	synth with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0225930213928	8
Coq.Bool.Sumbool.connectives.sumbool_not	40	1.1.9	synth with cache (only 1: case H1; only 1: auto; only 1: auto).	0.217294931412	330
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	0	synth with cache (only 1: discriminate).	0.00603103637695	1
Coq.Bool.Bool.diff_false_true	40	0	synth with cache (only 1: discriminate).	0.00675296783447	1
Coq.Bool.Bool.eq_true_false_abs	40	7.19.12	synth with cache (only 1: intros h1 h2; only 1: subst; only 1: discriminate).	1.21333479881	6960
Coq.Bool.Bool.not_true_is_false	40	0.2.9	synth with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: exact eq_refl).	0.170381069183	151
Coq.Bool.Bool.not_false_is_true	40	2.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00992512702942	4
Coq.Bool.Bool.not_true_iff_false	40	6.1.3.1	synth with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.561010122299	929
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0121672153473	3
Coq.Bool.Bool.leb_implb	40	2.2.9	synth with cache (only 1: destruct b1; only 1: intuition; only 1: intuition).	0.562765836716	843
Coq.Bool.Bool.eqb_subst	40	2	synth with cache (only 1: destr_bool).	0.00970888137817	3
Coq.Bool.Bool.eqb_reflx	40	5	synth with cache (only 1: destr_bool).	0.00777721405029	6
Coq.Bool.Bool.eqb_prop	40	0.0.0.0.3	synth with cache (only 1: destruct a, b; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0174119472504	15
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.4	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0353260040283	35
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0287370681763	16
Coq.Bool.Bool.negb_orb	40	10	synth with cache (only 1: destr_bool).	0.0538280010223	69
Coq.Bool.Bool.negb_andb	40	1	synth with cache (only 1: destr_bool).	0.00881910324097	2
Coq.Bool.Bool.negb_involutive	40	3	synth with cache (only 1: destr_bool).	0.00673198699951	4
Coq.Bool.Bool.negb_involutive_reverse	40	1	synth with cache (only 1: destr_bool).	0.00732588768005	2
Coq.Bool.Bool.negb_sym	40	2	synth with cache (only 1: destr_bool).	0.00935292243958	3
Coq.Bool.Bool.no_fixpoint_negb	40	3	synth with cache (only 1: destr_bool).	0.00822591781616	4
Coq.Bool.Bool.eqb_negb1	40	2	synth with cache (only 1: destr_bool).	0.00695395469666	3
Coq.Bool.Bool.eqb_negb2	40	1	synth with cache (only 1: destr_bool).	0.00771999359131	2
Coq.Bool.Bool.if_negb	40	14	synth with cache (only 1: destr_bool).	0.0485148429871	153
Coq.Bool.Bool.negb_true_iff	40	0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.017049074173	13
Coq.Bool.Bool.negb_false_iff	40	0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0112590789795	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0398180484772	23
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0179738998413	6
Coq.Bool.Bool.orb_true_elim	40	0.0.0.3	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0366570949554	37
Coq.Bool.Bool.orb_prop	40	1.1.1.1.0	synth with cache (only 1: destruct a, b; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.014979839325	9
Coq.Bool.Bool.orb_true_intro	40	2.1.0.0.1.0	synth with cache (only 1: destruct b1; only 1: intuition; only 1: destruct b2; only 1: simpl; only 1: intuition; only 1: intuition).	0.112255811691	93
Coq.Bool.Bool.orb_false_intro	40	3.0	synth with cache (only 1: intros; only 1: destr_bool).	0.0103499889374	5
Coq.Bool.Bool.orb_false_elim	40	0.6	synth with cache (only 1: destr_bool; only 1: intuition).	0.158509016037	86
Coq.Bool.Bool.orb_diag	40	1	synth with cache (only 1: destr_bool).	0.00670289993286	2
Coq.Bool.Bool.orb_true_r	40	3	synth with cache (only 1: destr_bool).	0.00778603553772	4
Coq.Bool.Bool.orb_true_l	40	1	synth with cache (only 1: destr_bool).	0.00694680213928	2
Coq.Bool.Bool.orb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00664305686951	2
Coq.Bool.Bool.orb_false_l	40	1	synth with cache (only 1: destr_bool).	0.0073721408844	2
Coq.Bool.Bool.orb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.00666999816895	2
Coq.Bool.Bool.orb_comm	40	1	synth with cache (only 1: destr_bool).	0.00848388671875	2
Coq.Bool.Bool.orb_assoc	40	3.1	synth with cache (only 1: intros; only 1: destr_bool).	0.0136799812317	6
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0187408924103	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.040335893631	16
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0167109966278	9
Coq.Bool.Bool.andb_false_intro1	40	0	synth with cache (only 1: destr_bool).	0.0080680847168	1
Coq.Bool.Bool.andb_false_intro2	40	0.1.0	synth with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00941205024719	4
Coq.Bool.Bool.andb_false_r	40	2	synth with cache (only 1: destr_bool).	0.00675797462463	3
Coq.Bool.Bool.andb_false_l	40	1	synth with cache (only 1: destr_bool).	0.00759601593018	2
Coq.Bool.Bool.andb_diag	40	1	synth with cache (only 1: destr_bool).	0.00759696960449	2
Coq.Bool.Bool.andb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00679183006287	2
Coq.Bool.Bool.andb_true_l	40	1	synth with cache (only 1: destr_bool).	0.00688409805298	2
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0164539813995	5
Coq.Bool.Bool.andb_negb_r	40	1	synth with cache (only 1: destr_bool).	0.00690102577209	2
Coq.Bool.Bool.andb_comm	40	1	synth with cache (only 1: destr_bool).	0.00840401649475	2
Coq.Bool.Bool.andb_assoc	40	1	synth with cache (only 1: destr_bool).	0.01083111763	2
Coq.Bool.Bool.andb_orb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0115580558777	2
Coq.Bool.Bool.andb_orb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0113627910614	2
Coq.Bool.Bool.orb_andb_distrib_r	40	1	synth with cache (only 1: destr_bool).	0.0112550258636	2
Coq.Bool.Bool.orb_andb_distrib_l	40	1	synth with cache (only 1: destr_bool).	0.0106558799744	2
Coq.Bool.Bool.absorption_andb	40	1	synth with cache (only 1: destr_bool).	0.008376121521	2
Coq.Bool.Bool.absorption_orb	40	1	synth with cache (only 1: destr_bool).	0.0083339214325	2
Coq.Bool.Bool.xorb_false_r	40	1	synth with cache (only 1: destr_bool).	0.00716209411621	2
Coq.Bool.Bool.xorb_false_l	40	1	synth with cache (only 1: destr_bool).	0.00697016716003	2
Coq.Bool.Bool.xorb_true_r	40	1	synth with cache (only 1: destr_bool).	0.00708293914795	2
Coq.Bool.Bool.xorb_true_l	40	1	synth with cache (only 1: reflexivity).	0.00715398788452	2
Coq.Bool.Bool.xorb_nilpotent	40	1	synth with cache (only 1: destr_bool).	0.00751399993896	2
Coq.Bool.Bool.xorb_comm	40	1	synth with cache (only 1: destr_bool).	0.0100269317627	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	synth with cache (only 1: destr_bool).	0.0109601020813	2
Coq.Bool.Bool.xorb_eq	40	0	synth with cache (only 1: destr_bool).	0.00863218307495	1
Coq.Bool.Bool.xorb_move_l_r_1	40	10	synth with cache (only 1: destr_bool).	0.0451741218567	62
Coq.Bool.Bool.xorb_move_l_r_2	40	0	synth with cache (only 1: destr_bool).	0.0115561485291	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	synth with cache (only 1: destr_bool).	0.011479139328	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	synth with cache (only 1: destr_bool).	0.0111041069031	1
Coq.Bool.Bool.negb_xorb_l	40	1	synth with cache (only 1: destr_bool).	0.00849103927612	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.1	synth with cache (only 1: destruct b, b'; only 1: exact eq_refl; only 1: exact eq_refl; only 1: exact eq_refl; only 1: exact eq_refl).	0.0136210918427	6
Coq.Bool.Bool.xorb_negb_negb	40	1	synth with cache (only 1: destr_bool).	0.008220911026	2
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0729258060455	47
Coq.Bool.Bool.eq_true_iff_eq	40	2.2.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0346550941467	28
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.0106611251831	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	synth with cache (only 1: destr_bool; only 1: intuition).	0.00945901870728	3
Coq.Bool.Bool.absurd_eq_bool	40	4.4.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0576648712158	108
Coq.Bool.Bool.absurd_eq_true	40	4.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.00938200950623	8
Coq.Bool.Bool.trans_eq_bool	40	0.4.1	synth with cache (only 1: intuition; only 1: subst; only 1: exact eq_refl).	0.0909278392792	8
Coq.Bool.Bool.Is_true_eq_true	40	4.2	synth with cache (only 1: destr_bool; only 1: intuition).	0.0104029178619	8
Coq.Bool.Bool.Is_true_eq_left	40	1	synth with cache (only 1: destr_bool).	0.00806498527527	2
Coq.Bool.Bool.Is_true_eq_right	40	1.0.0	synth with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.0101809501648	4
Coq.Bool.Bool.eqb_refl	40	8	synth with cache (only 1: destr_bool).	0.0164768695831	19
Coq.Bool.Bool.eqb_eq	40	1.1.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0124928951263	6
Coq.Bool.Bool.orb_prop_elim	40	2.2.0.4.3.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: constructor; only 1: constructor; only 1: intuition).	1.10825109482	1678
Coq.Bool.Bool.orb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0106451511383	2
Coq.Bool.Bool.andb_prop_intro	40	0.0.2.2.1	synth with cache (only 1: destruct b1; only 1: tauto; only 1: destr_bool; only 1: tauto; only 1: tauto).	0.161464929581	74
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0169389247894	6
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0138139724731	4
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0127580165863	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0118370056152	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.0107522010803	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	synth with cache (only 1: destr_bool; only 1: tauto).	0.00990915298462	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	synth with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0111198425293	3
Coq.Bool.Bool.andb_if	40	4	synth with cache (only 1: destr_bool).	0.00993800163269	5
Coq.Bool.Bool.negb_if	40	1	synth with cache (only 1: destr_bool).	0.00804400444031	2
Coq.Bool.Bool.andb_lazy_alt	40	1	synth with cache (only 1: destr_bool).	0.00865197181702	2
Coq.Bool.Bool.orb_lazy_alt	40	2	synth with cache (only 1: reflexivity).	0.00710821151733	3
Coq.Bool.Bool.reflect_iff	40	0.0.0.2	synth with cache (only 1: intros A B []; only 1: intuition; only 1: intuition; only 1: inversion_clear H).	0.0625479221344	62
Coq.Bool.Bool.iff_reflect	40	9.1.2	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.209733963013	338
Coq.Bool.Bool.reflect_dec	40	0.1.2.0	synth with cache (only 1: unfold not; only 1: induction 1; only 1: tauto; only 1: tauto).	0.0158610343933	7
Coq.Bool.Bool.eqb_spec	40	2.2.2.1.9	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.213895082474	317
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	0.10.0	synth with cache (only 1: intro p; only 1: destruct 1; only 1: auto).	0.13387799263	191
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	10.0.0.1.0.3.0	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: firstorder).	13.5697720051	9100
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40	5.0.0.0.0.0.0	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	0.5776720047	291
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40	5.5.0.0.0.0.1	synth with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intuition; only 1: intuition).	6.27586317062	3032
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40	0.0.0.7.0.0.8.0.0.1.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: destruct 1; only 1: auto with datatypes; only 1: right; only 1: auto).	15.4345369339	15034
Coq.Lists.ListSet.first_definitions.set_add_intro	40	13	synth with cache (only 1: intuition).	1.73368501663	828
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	2.3.0.1.0.0.0.0.1.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: auto; only 1: simpl; only 1: tauto).	11.3877849579	6485
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.1.1.1.5.2.0.2.4	synth with cache (only 1: simple induction x; only 1: discriminate; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros; only 1: discriminate; only 1: intros; only 1: discriminate).	5.11537504196	4775
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40	0.0.0.0.1.2.2.0.2.1.1	synth with cache (only 1: induction l as [| x l IH]; only 1: auto; only 1: simpl; only 1: destruct (Aeq_dec b x) as [<-| Hbx]; only 1: intuition; only 1: now subst; only 1: destruct 1; only 1: left; only 1: assumption; only 1: right; only 1: auto).	16.8639800549	13938
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	6.1.5.0.0	synth with cache (only 1: simple induction y; only 1: simpl; only 1: destruct 1; only 1: simpl; only 1: intuition).	1.45890784264	899
Coq.Lists.ListSet.first_definitions.set_union_intro	40	1.1.2	synth with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.170916080475	67
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40	0.0.0.10.1.0.1.4	synth with cache (only 1: simple induction x; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H2]; only 1: auto; only 1: auto).	27.9708180428	13761
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0	synth with cache (only 1: intros a x H; only 1: auto || contradiction).	0.0182898044586	2
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	1.2.3.1.0.0.1	synth with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros a0 l Hrec y; only 1: generalize (set_mem_correct1 a0 y); only 1: intros; only 1: eauto with datatypes).	4.76127815247	2004
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.3.0.6.3	synth with cache (only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	12.9414620399	5576
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.45	synth with cache (only 1: intros [? ?]; only 1: exact eq_refl).	0.666155099869	3242
Coq.Lists.Streams.Streams.tl_nth_tl	40
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.1.7	synth with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto with datatypes).	0.0950450897217	154
Coq.Lists.Streams.Streams.trans_EqSt	40	0.2.5.10.3.3	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: coinduction ltac:(EqSt_reflex); only 1: reflexivity || destruct H; only 1: case H; only 1: assumption; only 1: assumption).	24.7093589306	31734
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	0.0.8.17	synth with cache (only 1: intros [x y]; only 1: coinduction ltac:(Eq_trans); only 1: auto; only 1: auto).	0.64219212532	1469
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.6.0.7	synth with cache (only 1: simple induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.259896039963	488
Coq.Lists.Streams.Map.Str_nth_map	40	4.3.0.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0617060661316	99
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	7.7.1.9	synth with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	2.09646987915	4462
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	3.0.1.3	synth with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: apply IHn).	0.0618500709534	63
Coq.Lists.List.Facts.nil_cons	40	0	synth with cache (only 1: congruence).	0.0474288463593	1
Coq.Lists.List.Facts.destruct_list	40	3.0.79.21	synth with cache (only 1: intro H; only 1: elim H; only 1: auto; only 1: eauto).	30.2154171467	85440
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	1.1.0.2	synth with cache (only 1: induction l as [| a tail]; only 1: intro H; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	0.180531978607	22
Coq.Lists.List.Facts.length_zero_iff_nil	40	0.0.0.1.1.4	synth with cache (only 1: induction l as [| a tail]; only 1: split; only 1: trivial; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.171862125397	112
Coq.Lists.List.Facts.hd_error_nil	40	0	synth with cache (only 1: reflexivity).	0.0154619216919	1
Coq.Lists.List.Facts.hd_error_cons	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0178420543671	2
Coq.Lists.List.Facts.in_eq	40	0.1	synth with cache (only 1: intros; only 1: firstorder  discriminate).	0.0180490016937	3
Coq.Lists.List.Facts.in_cons	40	0.2	synth with cache (only 1: simpl; only 1: auto).	0.0194051265717	4
Coq.Lists.List.Facts.not_in_cons	40	0.0.4.1.0.4.1	synth with cache (only 1: simpl; only 1: split; only 1: auto; only 1: induction 1; only 1: induction 1; only 1: auto; only 1: auto).	1.02650094032	612
Coq.Lists.List.Facts.in_nil	40	2.0	synth with cache (only 1: simpl; only 1: tauto).	0.0186588764191	4
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_inv	40	0	synth with cache (only 1: auto).	0.0150480270386	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Facts.app_cons_not_nil	40	6.0.0.18.4	synth with cache (only 1: intro n; only 1: induction n; only 1: intros; only 1: discriminate; only 1: discriminate).	9.27874493599	18118
Coq.Lists.List.Facts.app_nil_l	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0182440280914	2
Coq.Lists.List.Facts.app_nil_r	40	34.3.0.4	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: congruence).	7.90346312523	21641
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.029807806015	7
Coq.Lists.List.Facts.app_assoc	40	1.0.3.2.0.1	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	0.67417383194	302
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0.0	synth with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0345659255981	7
Coq.Lists.List.Facts.app_comm_cons	40	1.0	synth with cache (only 1: intros l m n; only 1: auto).	0.0181148052216	3
Coq.Lists.List.Facts.app_eq_nil	40	0.0.2	synth with cache (only 1: destruct l; only 1: auto; only 1: firstorder  discriminate).	0.0321049690247	14
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	0.1.1.1.7	synth with cache (only 1: intros; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	1.08101677895	979
Coq.Lists.List.Facts.in_app_or	40	13.1.1.10	synth with cache (only 1: induction l as [| a0 l IHl]; only 1: simpl; only 1: tauto; only 1: firstorder).	5.64550685883	8767
Coq.Lists.List.Facts.in_or_app	40	5.0.5.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.927524089813	1058
Coq.Lists.List.Facts.in_app_iff	40	2.1.3.5.0.0.0	synth with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: intro H; only 1: intros; only 1: firstorder).	7.01938295364	6411
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0229151248932	2
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40	3.3.1.0.4.3.0.1.6	synth with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: easy; only 1: destruct n; only 1: auto; only 1: simpl; only 1: intros; only 1: auto with arith).	15.6714241505	19531
Coq.Lists.List.Elts.app_nth1	40	2.1.0.9.0.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto with arith).	3.00965380669	3107
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40	4.8.6	synth with cache (only 1: revert n; only 1: fix even_spec 1; only 1: auto).	4.0437130928	3644
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	0.0.1.0.0.3.0.0.1.0.0.0	synth with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	3.29472208023	2276
Coq.Lists.List.Elts.nth_error_nth	40
Coq.Lists.List.Elts.nth_error_nth'	40	0.0.0.0.1.0.7.0	synth with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: auto; only 1: simpl; only 1: intros; only 1: apply IHl; only 1: auto with arith).	5.02351713181	3665
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	1	synth with cache (only 1: trivial).	0.0154252052307	2
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	2.4.1.3.0	synth with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto; only 1: intro HF; only 1: intuition).	0.782510995865	521
Coq.Lists.List.Elts.count_occ_cons_neq	40	4.1.1	synth with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0415189266205	12
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.14.0.2.0.6	synth with cache (only 1: induction l; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	18.3252739906	22314
Coq.Lists.List.ListOps.rev_involutive	40	0.31	synth with cache (only 1: fix le_div2 1; only 1: auto).	4.97927999496	11051
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	1.1.3.9	synth with cache (only 1: intros a H; only 1: induction l; only 1: auto; only 1: auto).	0.953859090805	797
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40	1.41.7	synth with cache (only 1: intros l m a; only 1: fix le_div2 1; only 1: auto).	17.418571949	48548
Coq.Lists.List.ListOps.concat_nil	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.0184030532837	2
Coq.Lists.List.ListOps.concat_cons	40	0.0.0.0.0	synth with cache (only 1: induction x as [| a l IHl]; only 1: simpl; only 1: intros; only 1: auto; only 1: auto).	0.0288450717926	5
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.list_eq_dec	40	0	synth with cache (only 1: decide equality).	0.118350028992	1
Coq.Lists.List.Map.map_cons	40	0	synth with cache (only 1: auto).	0.014573097229	1
Coq.Lists.List.Map.in_map	40	1.7.1.4.1.3.13	synth with cache (only 1: intros H H'; only 1: elim H; only 1: auto; only 1: CRelationClasses.simpl_crelation; only 1: firstorder; only 1: subst; only 1: auto).	8.66843700409	14109
Coq.Lists.List.Map.in_map_iff	40	3.3.2.3.0	synth with cache (only 1: red; only 1: induction l; only 1: firstorder  (subst; auto); only 1: CRelationClasses.simpl_crelation; only 1: firstorder  (subst; auto)).	1.5449450016	777
Coq.Lists.List.Map.map_length	40	1.1.1.2	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.022901058197	9
Coq.Lists.List.Map.map_nth	40
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	5.2.4.4	synth with cache (only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	0.622376918793	490
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	10.0.6.0	synth with cache (only 1: firstorder  (subst; auto); only 1: induction l; only 1: auto; only 1: CRelationClasses.simpl_crelation).	1.07480502129	1224
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.7.0.0.0.7.6	synth with cache (only 1: intros x y; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	1.78693199158	2203
Coq.Lists.List.concat_map	40	0.5.11.1.0.0.2.0	synth with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IHl; only 1: auto).	10.7709999084	15233
Coq.Lists.List.map_id	40	0.2.0.0.0.8	synth with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.454113960266	313
Coq.Lists.List.map_map	40	0.4.0.0.15	synth with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	1.08113884926	1736
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40	8.1.11.1.0.6.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: destruct 2; only 1: simpl; only 1: intros; only 1: CRelationClasses.simpl_crelation; only 1: firstorder; only 1: CRelationClasses.simpl_crelation).	35.7901041508	40472
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.5.2	synth with cache (only 1: intros A x P H y H0; only 1: apply map_ext_in; only 1: auto).	0.0537371635437	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.0.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0309510231018	14
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	11.0.0.7.3	synth with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: Tactics.program_simpl).	10.2384450436	18150
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40	0.0.4.0.0.0.0	synth with cache (only 1: induction l1; only 1: intros l2; only 1: auto; only 1: simpl; only 1: case (f a); only 1: auto; only 1: auto).	0.337615013123	232
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40	0.0.2.0.9.0.0.0.4	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	2.82856106758	3269
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40	4.5.8.0.2.8	synth with cache (only 1: induction l; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: firstorder  discriminate).	35.3036460876	30433
Coq.Lists.List.Bool.find_none	40
Coq.Lists.List.Bool.partition_cons1	40
Coq.Lists.List.Bool.partition_cons2	40	0.0	synth with cache (only 1: simpl; only 1: now intros -> ->).	0.0210721492767	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40	2.2.2.4.1.0.0.7.0	synth with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	22.5675628185	26022
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40	0.0.6.4.2.0.1.10	synth with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	21.7621769905	23527
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.2.0.1.0.5.2	synth with cache (only 1: split; only 1: intros H; only 1: rewrite filter_map in H; only 1: apply ext_in_map; only 1: auto; only 1: intros H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	6.899518013	3342
Coq.Lists.List.Filtering.filter_ext	40	2.4.3.0	synth with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.225013971329	160
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	0.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	4.19400382042	2959
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.1.18.11.0.0.0.1	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	39.0177240372	70543
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0405080318451	9
Coq.Lists.List.ListPairs.split_combine	40	0.3.1.7.0.0.0.2	synth with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: subst; only 1: auto).	1.83304619789	2436
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40	0.0.3.2.3.0.0.0.0.1	synth with cache (only 1: induction l, l'; only 1: intros; only 1: auto; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: simpl in *; only 1: injection H; only 1: auto).	14.5982580185	10472
Coq.Lists.List.ListPairs.in_combine_r	40	0.0.6.0.0.0.0.3.0.0	synth with cache (only 1: induction l; only 1: simpl; only 1: firstorder  (subst; auto); only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder; only 1: injection H; only 1: auto).	12.607749939	8590
Coq.Lists.List.ListPairs.combine_length	40	0.0.0.0.7.0.2	synth with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.788360118866	634
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	1.3.2.0.0.1	synth with cache (only 1: induction l; only 1: contradiction; only 1: intros; only 1: firstorder; only 1: subst; only 1: firstorder).	0.847636938095	480
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	0.51	synth with cache (only 1: compute; only 1: auto).	1.05086803436	1579
Coq.Lists.List.length_order.lel_trans	40	1.1.21.0.25.1	synth with cache (only 1: unfold lel; only 1: inversion 1; only 1: auto; only 1: elim H1; only 1: auto with arith; only 1: auto with arith).	34.7807450294	50555
Coq.Lists.List.length_order.lel_cons_cons	40	2.1.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0351340770721	7
Coq.Lists.List.length_order.lel_cons	40	0.0.1	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.022490978241	4
Coq.Lists.List.length_order.lel_tail	40	0.0.0	synth with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0229630470276	3
Coq.Lists.List.length_order.lel_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	synth with cache (only 1: auto).	0.0168330669403	2
Coq.Lists.List.SetIncl.incl_tl	40	12	synth with cache (only 1: intuition).	0.175967216492	148
Coq.Lists.List.SetIncl.incl_tran	40	1	synth with cache (only 1: auto).	0.0179488658905	2
Coq.Lists.List.SetIncl.incl_appl	40	1	synth with cache (only 1: auto with datatypes).	0.0188698768616	2
Coq.Lists.List.SetIncl.incl_appr	40	0	synth with cache (only 1: auto with datatypes).	0.0186200141907	1
Coq.Lists.List.SetIncl.incl_cons	40	0.0.1.5.0.24.9	synth with cache (only 1: intros n m p H H'; only 1: intro H0; only 1: simpl; only 1: intros [Hc1| Hc2]; only 1: subst; only 1: auto; only 1: auto with arith).	8.97490406036	8683
Coq.Lists.List.SetIncl.incl_app	40	0.4	synth with cache (only 1: fix gcd_greatest 1; only 1: auto with datatypes).	0.0509419441223	13
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.6	synth with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.062784910202	28
Coq.Lists.List.Cutting.firstn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0198140144348	2
Coq.Lists.List.Cutting.firstn_all	40	0.3.0.0.0.19	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.682260036469	605
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0211699008942	2
Coq.Lists.List.Cutting.firstn_le_length	40	0.2.5.3	synth with cache (only 1: intro H; only 1: revert n; only 1: fix le_div2 1; only 1: auto).	0.264481067657	111
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40	1.7.0.0.2.0.5	synth with cache (only 1: induction n; only 1: auto; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	8.51326704025	5691
Coq.Lists.List.Cutting.firstn_app_2	40	12.3.0.0.0.3.4	synth with cache (only 1: intros l1; only 1: induction l1 as [| x l1 IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: now rewrite IH).	37.1999120712	35316
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0	synth with cache (only 1: reflexivity).	0.0164458751678	1
Coq.Lists.List.Cutting.skipn_nil	40	6	synth with cache (only 1: now induction n).	0.0276570320129	13
Coq.Lists.List.Cutting.skipn_cons	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.020320892334	2
Coq.Lists.List.Cutting.skipn_none	40	0.0.0.0.3	synth with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0461618900299	16
Coq.Lists.List.Cutting.skipn_all2	40	3.0.1.0.0.0.1.2.0.2	synth with cache (only 1: induction n; only 1: simpl; only 1: intro; only 1: inversion 1 as [H1| ?]; only 1: rewrite (length_zero_iff_nil l) in H1; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: now reflexivity; only 1: auto with arith).	5.25222992897	3779
Coq.Lists.List.Cutting.firstn_skipn	40	1.3.0.0.0.3.0.5	synth with cache (only 1: induction n as [| k iHk]; only 1: auto; only 1: destruct l as [| x xs]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	11.3136229515	8449
Coq.Lists.List.Cutting.firstn_length	40	0.0.0.0.5.0.7	synth with cache (only 1: induction n; only 1: auto; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.60924601555	2546
Coq.Lists.List.Cutting.skipn_length	40	0.0.0.0.0.3.1.7	synth with cache (only 1: induction n; only 1: simpl; only 1: now induction l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.76978588104	2291
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.0.2	synth with cache (only 1: induction l as [| ? ? H]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0334620475769	7
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.0.2.0.0.0.0.0	synth with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	0.960972070694	391
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.0.3	synth with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0267670154572	6
Coq.Lists.List.Combining.combine_firstn_l	40	0.2.1.0.3.1.3	synth with cache (only 1: induction l; only 1: auto; only 1: destruct l'; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	2.17897510529	1518
Coq.Lists.List.Combining.combine_firstn_r	40
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	4.1.3.0.11.7	synth with cache (only 1: intro H; only 1: elim H; only 1: simpl; only 1: intros; only 1: tauto; only 1: firstorder).	29.0513050556	25001
Coq.Lists.List.Add.Add_length	40	0.0.0.0.12	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.348259210587	134
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	1.1	synth with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0232090950012	4
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0449180603027	4
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.seq_length	40	0.0.0.1.0.15.5	synth with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.06949687004	5110
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40	4.1.0.10.8	synth with cache (only 1: intro n; only 1: Nat.induct n; only 1: auto; only 1: simpl; only 1: congruence).	14.3809511662	9850
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	9	synth with cache (only 1: easy).	0.0646789073944	28
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	7.0.0.4.1	synth with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: intuition).	0.900168895721	579
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	0.0.0.4.1.2.1.0.0.3.1	synth with cache (only 1: split; only 1: induction 1; only 1: simpl; only 1: inversion 1; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	6.506305933	8015
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.2	synth with cache (only 1: inversion 1; only 1: assumption).	0.0258140563965	4
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.Forall_inv_tail	40	0.3	synth with cache (only 1: inversion 1; only 1: auto).	0.02774310112	5
Coq.Lists.List.Exists_Forall.Exists_impl	40	5.0.5.5.5	synth with cache (only 1: intros f g H l; only 1: induction 1; only 1: constructor; only 1: auto; only 1: now constructor).	1.42547798157	2117
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.3	synth with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	11.1076331139	823
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	0.0.8.2.0.0	synth with cache (only 1: intros P Q H xs H0; only 1: induction H0; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	0.355270147324	396
Coq.Lists.List.Forall2.Forall2_refl	40	1	synth with cache (only 1: auto).	0.0198299884796	2
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	0.0.0.20	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	1.91661000252	1514
Coq.Lists.List.Repeat.repeat_spec	40	2.0.4.1.6	synth with cache (only 1: induction n; only 1: simpl; only 1: easy; only 1: simpl; only 1: intuition).	0.478674173355	306
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	0	synth with cache (only 1: firstorder).	0.019385099411	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.2.1.1.2	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: constructor; only 1: reflexivity; only 1: auto).	1.15785098076	420
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	1.0.0.0.2.2	synth with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: simpl; only 1: auto; only 1: do 2 (etransitivity; try eassumption)).	0.742125988007	244
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40	4.20.1.1	synth with cache (only 1: intro; only 1: rewrite H; only 1: rewrite !app_comm_cons; only 1: now rewrite PermutationA_cons_append, <- app_assoc).	25.96002388	5392
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	synth with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0228559970856	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	0.0.0.0.1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: constructor; only 1: reflexivity; only 1: auto; only 1: eauto; only 1: eauto).	0.0429699420929	8
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: eauto).	0.0290229320526	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.9.2	synth with cache (only 1: intuition; only 1: inversion_clear H; only 1: auto; only 1: auto).	0.899883985519	600
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	0.2	synth with cache (only 1: intuition; only 1: inversion_clear H).	0.0521771907806	19
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	0.2.1.1.6.1.2.2.0	synth with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	5.98960208893	6485
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	0.6.8	synth with cache (only 1: intro Dec; only 1: rewrite InA_alt; only 1: firstorder).	0.219910860062	273
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.0.5.0.0.5.0	synth with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	6.04627895355	2406
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	8	synth with cache (only 1: firstorder).	0.174804925919	85
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	6.6.2	synth with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.796866178513	329
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	0.1.1.0.15	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	3.19689297676	1075
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.1.0.6.7.2	synth with cache (only 1: split; only 1: intuition; only 1: invlist InA; only 1: auto; only 1: constructor; only 1: auto).	3.94072508812	673
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.3	synth with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.138246059418	16
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	6.5	synth with cache (only 1: rewrite !InA_cons; only 1: intuition).	0.770752906799	199
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.2.1	synth with cache (only 1: constructor; only 1: intro; only 1: invlist InA; only 1: constructor).	0.096461057663	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.7	synth with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.091500043869	16
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40	0.0.1.6	synth with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.285962820053	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.4	synth with cache (only 1: intro; only 1: rewrite InA_app_iff; only 1: tauto).	0.0285160541534	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40	0.6.0.15.1.0.4	synth with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: f_equal; only 1: auto).	15.0257601738	15757
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	1.15.2	synth with cache (only 1: intro; only 1: rewrite <- H; only 1: auto).	2.26636505127	1112
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	0.0.0.0	synth with cache (only 1: destruct l; only 1: constructor; only 1: simpl; only 1: auto).	0.0284450054169	4
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.1.0.1.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0324101448059	7
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	3.15	synth with cache (only 1: fix gcd_greatest 1; only 1: auto with datatypes).	0.678848981857	704
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40	0.0.0.0.14	synth with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.23918700218	781
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40	0.1.4.0.13	synth with cache (only 1: repeat red; only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto).	5.54559493065	1708
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.5.1.0	synth with cache (only 1: induction 1; only 1: intuition; only 1: simpl; only 1: eauto).	0.067596912384	34
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.0.0.16	synth with cache (only 1: intros x y H; only 1: rewrite <- (app_nil_r (rev x)), <- (app_nil_r (rev y)); only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	9.8133687973	1667
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	2.1	synth with cache (only 1: decide equality; only 1: decide equality).	0.475021839142	99
Coq.NArith.BinNat.N.discr	40	14.4.0.4	synth with cache (only 1: induction n; only 1: auto; only 1: revert p; only 1: eauto with *).	2.89624595642	2595
Coq.NArith.BinNat.N.peano_rect_base	40	0	synth with cache (only 1: trivial).	0.0165939331055	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	synth with cache (only 1: reflexivity).	0.0145120620728	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.221393108368	6
Coq.NArith.BinNat.N.bi_induction	40	3.0.0.8.1	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply Pos.peano_ind; only 1: assumption; only 1: intros; only 1: now apply -> AS).	2.21525406837	2124
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	synth with cache (only 1: trivial).	0.0151798725128	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0169270038605	1
Coq.NArith.BinNat.N.two_succ	40	0	synth with cache (only 1: trivial).	0.0174269676208	1
Coq.NArith.BinNat.N.pred_0	40	0	synth with cache (only 1: trivial).	0.0176110267639	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.0432710647583	7
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.5	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.0309941768646	9
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.2.1.0.2.0.2	synth with cache (only 1: destruct n; only 1: exact eq_refl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial; only 1: trivial).	17.6129369736	6944
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.0237469673157	3
Coq.NArith.BinNat.N.pred_sub	40	1.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0970449447632	5
Coq.NArith.BinNat.N.succ_0_discr	40	5	synth with cache (only 1: now destruct n).	0.0405399799347	23
Coq.NArith.BinNat.N.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0173971652985	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	1	synth with cache (only 1: now destruct n).	0.0164620876312	2
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	synth with cache (only 1: reflexivity).	0.015331029892	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	7.7.11	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	12.1827030182	8968
Coq.NArith.BinNat.N.ltb_lt	40	1.7.1.25	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	27.8694350719	28552
Coq.NArith.BinNat.N.leb_le	40	1.7.1.23	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	11.9006240368	11713
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.0157699584961	1
Coq.NArith.BinNat.N.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0774390697479	1
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	1.0.0.0.1	synth with cache (only 1: unfold max, le; only 1: case compare; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0893950462341	44
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	synth with cache (only 1: reflexivity).	0.108392000198	2
Coq.NArith.BinNat.N.succ_double_spec	40	5	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.148936033249	6
Coq.NArith.BinNat.N.double_add	40	1.0.0.0.0.0.0.1.2	synth with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: simpl; only 1: trivial; only 1: trivial).	6.86703801155	1012
Coq.NArith.BinNat.N.succ_double_add	40	0	synth with cache (only 1: now destruct n, m).	0.0218591690063	1
Coq.NArith.BinNat.N.double_mul	40	7	synth with cache (only 1: now destruct n, m).	1.23528599739	183
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.0.1.3	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0322768688202	8
Coq.NArith.BinNat.N.div2_succ_double	40	0	synth with cache (only 1: now destruct n).	0.0192627906799	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: auto).	2.42081284523	530
Coq.NArith.BinNat.N.double_le_mono	40	1.0.0.0.0.0.0.0.4	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	2.68017482758	606
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.6596159935	177
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0543739795685	9
Coq.NArith.BinNat.N.compare_0_r	40	0.0.5.1	synth with cache (only 1: intro H; only 1: apply le_succ_l in H; only 1: apply le_succ_l in H; only 1: false_hyp H nlt_0_r).	0.0381679534912	14
Coq.NArith.BinNat.N.pow_0_r	40	2	synth with cache (only 1: now destruct n as [| [p| p| ]]).	0.0229029655457	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	6.0.5.0.0.2.0	synth with cache (only 1: intro; only 1: destruct n, p; only 1: now nzsimpl; only 1: easy; only 1: easy; only 1: simpl; only 1: now subst).	12.0915031433	4742
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.0.0.3	synth with cache (only 1: destruct n; only 1: intro; only 1: reflexivity; only 1: intro H; only 1: easy).	0.107789993286	72
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.12.0	synth with cache (only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	1.21985387802	562
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.463152170181	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.8.3.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	5.51369404793	3359
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2.0.0.0.0.0.0	synth with cache (only 1: rewrite <- (add_0_l 0); only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: apply le_0_l).	0.0495429039001	9
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	5	synth with cache (only 1: now destruct a).	0.0250339508057	6
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.1.1.0.1	synth with cache (only 1: intros H; only 1: simpl; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.522519111633	153
Coq.NArith.BinNat.N.testbit_neg_r	40	6	synth with cache (only 1: now induction n).	0.04944896698	23
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	1	synth with cache (only 1: now nzsimpl').	0.0669229030609	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	9	synth with cache (only 1: apply Pos.gt_lt_iff).	0.244472026825	45
Coq.NArith.BinNat.N.lt_gt	40	1	synth with cache (only 1: apply gt_lt_iff).	0.0325748920441	11
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	6	synth with cache (only 1: apply Pos.ge_le_iff).	0.176500797272	66
Coq.NArith.BinNat.N.le_ge	40	2	synth with cache (only 1: apply ge_le_iff).	0.0379998683929	12
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	0.3.2.7	synth with cache (only 1: destruct p; only 1: apply Pos.pred_N_succ; only 1: now destruct p; only 1: reflexivity).	0.607390880585	208
Coq.NArith.Ndec.Peqb_complete	40	0	synth with cache (only 1: apply Pos.eqb_eq).	0.0203340053558	1
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	4	synth with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0291450023651	5
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	4	synth with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0259139537811	5
Coq.NArith.Ndec.Neqb_complete	40	0.0.9	synth with cache (only 1: intros; only 1: apply N.eqb_eq in H; only 1: auto).	0.167636871338	44
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	10.2.0.27.0.0.0	synth with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: discriminate; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0).	10.7773070335	13444
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.0.0.3.1.2.5.0.9	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: eqb2eq; only 1: intro; only 1: subst; only 1: now apply H; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	7.62654805183	6046
Coq.NArith.Ndec.Ndiv2_eq	40	2.0.7.7	synth with cache (only 1: intros H; only 1: apply N.eqb_eq in H; only 1: subst; only 1: apply N.eqb_refl).	0.514820814133	465
Coq.NArith.Ndec.Ndiv2_neq	40	1.3.0.0	synth with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0517580509186	16
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.9.0.10	synth with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	5.97526693344	4208
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	3.10.7	synth with cache (only 1: rewrite !Nleb_Nle; only 1: intros; only 1: N.Private_Tac.order).	0.907024860382	800
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.8.3.1.0.0	synth with cache (only 1: unfold Nleb; only 1: intros H; only 1: eqb2eq; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	5.98777389526	3505
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40	0.0.0.0.9.3.0.2	synth with cache (only 1: unfold Nleb; only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite !N2Nat.inj_double; only 1: apply leb_correct; only 1: apply mult_le_compat_l; only 1: now apply leb_complete).	34.2711110115	18441
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.22.2.0.1.1	synth with cache (only 1: intros H; only 1: elim (sumbool_of_bool (Nleb a b)); only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le; only 1: trivial).	30.574835062	22269
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40	0.1	synth with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0348508358002	3
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.0427010059357	2
Coq.NArith.Ndec.Nmin_le_5	40	0.0	synth with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.049535036087	2
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	synth with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0462048053741	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.0.0.0.0	synth with cache (only 1: induction a as [| p]; only 1: intro; only 1: trivial; only 1: simpl; only 1: congruence).	0.0971119403839	5
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	2.2.10.0.7.1.14	synth with cache (only 1: vm_compute; only 1: intros; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	5.96106886864	11311
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	2.0.2.23.4	synth with cache (only 1: intros n; only 1: unfold ni_min; only 1: induction n; only 1: reflexivity; only 1: reflexivity).	6.3638150692	10220
Coq.NArith.Ndist.ni_min_O_r	40	0.0.4.1.0.0	synth with cache (only 1: simple induction d; only 1: trivial; only 1: simpl in *; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.222759008408	132
Coq.NArith.Ndist.ni_min_inf_l	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.031368970871	2
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.3	synth with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0562000274658	17
Coq.NArith.Ndist.ni_le_refl	40	2.2.10.0.16.2.18	synth with cache (only 1: vm_compute; only 1: intros; only 1: destruct x; only 1: easy; only 1: f_equal; only 1: apply Nat.min_l; only 1: Nat.Private_Tac.order).	5.46562504768	11738
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.2.1.1.0	synth with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.086455821991	27
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40	1.18.9	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	5.51955795288	5859
Coq.NArith.Ndist.ni_le_le	40	0.19.13	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	31.524889946	27875
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40	1.11.1.1.1.5	synth with cache (only 1: destruct a; only 1: intros; only 1: easy; only 1: simpl; only 1: fix odd_spec 1; only 1: auto with arith).	11.6693291664	9813
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.0.4.0.1	synth with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.339797973633	123
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0	synth with cache (only 1: intros n m; only 1: now simpl).	0.055144071579	4
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.025759935379	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.0	synth with cache (only 1: intros; only 1: now rewrite ?Pos.max_1_r, <- ?BinInt.Pos2Z.inj_max).	0.0316469669342	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	synth with cache (only 1: reflexivity).	0.0261149406433	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.1.0.2.0.2.0.1.2	synth with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: auto; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: auto; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	3.79207801819	1774
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	7.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.lor_spec).	0.0926070213318	29
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	11.0	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite <- N.land_spec).	1.95162916183	666
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	9.1	synth with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec, andb_comm).	0.535593032837	209
Coq.NArith.Ndigits.Pbit_faithful_0	40	4.1.34	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	21.0531899929	24905
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40
Coq.NArith.Ndigits.Ndouble_bit0	40	2.0.5	synth with cache (only 1: intros [| n]; only 1: exact eq_refl; only 1: reflexivity).	0.0580389499664	37
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.9	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.0876698493958	55
Coq.NArith.Ndigits.Ndiv2_double	40	0.3.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: destruct n; only 1: exact eq_refl; only 1: vm_compute in H; only 1: destruct p; only 1: discriminate; only 1: trivial; only 1: discriminate).	3.11827802658	873
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.0.0.3.0.0.0.8.2.0	synth with cache (only 1: destruct n; only 1: intros Hn; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: intro H; only 1: vm_compute in H; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: discriminate; only 1: tauto).	29.4329018593	6870
Coq.NArith.Ndigits.Ndiv2_correct	40
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.1.0.1	synth with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0429689884186	6
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	1.1.1.0.1.0.1.1.0.0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: trivial; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	18.9764990807	13014
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: destruct a'; only 1: simpl; only 1: reflexivity; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	5.98649287224	1824
Coq.NArith.Ndigits.Nless_def_3	40	8.4.20	synth with cache (only 1: fix odd_spec 1; only 1: intros m Hm; only 1: trivial).	9.62953686714	9585
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.0.2.4.11.56	synth with cache (only 1: intros n; only 1: destruct n; only 1: discriminate; only 1: intros Hn; only 1: exists p; only 1: auto).	22.2420620918	62707
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40	6.2.16.0	synth with cache (only 1: intros s1; only 1: fix even_spec 1; only 1: intro n; only 1: auto).	13.9210891724	10765
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.TestOrder.test	40	1	synth with cache (only 1: N.order).	0.0665340423584	15
Coq.NArith.Nnat.N2Nat.id	40	4.34.26.0.17.11	synth with cache (only 1: N.bitwise; only 1: f_equal; only 1: N.bitwise; only 1: revert a m; only 1: fix even_spec 1; only 1: trivial).	15.0051820278	29468
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	1.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: symmetry; only 1: now subst).	0.0457611083984	8
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.2.0.4	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.331403017044	62
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	0.0.0.1.0.0	synth with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros; only 1: now subst).	0.0536289215088	7
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	5	synth with cache (only 1: nat2N).	0.275022983551	90
Coq.NArith.Nnat.Nat2N.inj_succ	40	1.0.0.1	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0413739681244	6
Coq.NArith.Nnat.Nat2N.inj_pred	40	2	synth with cache (only 1: nat2N).	0.29878282547	105
Coq.NArith.Nnat.Nat2N.inj_add	40
Coq.NArith.Nnat.Nat2N.inj_sub	40	2	synth with cache (only 1: nat2N).	0.200588941574	57
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	synth with cache (only 1: nat2N).	0.0440139770508	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	synth with cache (only 1: nat2N).	0.0449550151825	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	1	synth with cache (only 1: nat2N).	0.297488212585	51
Coq.NArith.Nnat.Nat2N.inj_max	40	0	synth with cache (only 1: nat2N).	0.0436191558838	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	13.1	synth with cache (only 1: destruct x; only 1: destr_bool).	1.25315093994	466
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, Pos.eqb_eq).	0.0243670940399	1
Coq.Strings.Ascii.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!N.eqb_eq, Exx', Eyy').	0.0375158786774	3
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.9.1	synth with cache (only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec).	2.26498103142	936
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	synth with cache (only 1: now rewrite <- not_true_iff_false, BinNat.N.eqb_eq).	0.0285909175873	1
Coq.Strings.String.eqb_compat	40	0.0.0	synth with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinPos.Pos.eqb_eq, Exx', Eyy').	0.0407149791718	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40	2.34	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	17.2578508854	20018
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	2	synth with cache (only 1: trivial).	0.0324048995972	3
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.0296490192413	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	synth with cache (only 1: trivial).	0.0349321365356	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	38	synth with cache (only 1: constructor).	0.291524887085	840
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	0.0.0	synth with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.088357925415	3
Coq.Reals.Ratan.pos_half_prf	40	0.0	synth with cache (only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.0679569244385	2
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	0.0.1.0.0.0.1.0	synth with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intro; only 1: simpl; only 1: ring; only 1: intro; only 1: reflexivity).	0.154533863068	10
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	4.0.3	synth with cache (only 1: unfold Rdiv; only 1: intros; only 1: lra).	0.151627779007	31
Coq.Reals.Ratan.pos_opp_lt	40	19.0	synth with cache (only 1: intros; only 1: lra).	4.61361193657	2153
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.7.1	synth with cache (only 1: intros; only 1: apply pow_lt; only 1: auto).	0.609321117401	226
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	0.3.0.2.1.1.1.8	synth with cache (only 1: induction l; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: intuition; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: auto with real).	14.2250299454	4784
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.1.14.1	synth with cache (only 1: intros z n H; only 1: inversion H; only 1: trivial; only 1: trivial).	2.51076102257	1141
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40	3.23	synth with cache (only 1: fix odd_equiv 1; only 1: auto).	18.7706320286	10250
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	0.0.0.0.6.0.0.10.1	synth with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.34617900848	2626
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.0.12	synth with cache (only 1: induction l; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: auto).	1.66199207306	1009
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	3.0.0.0.0.0	synth with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.0629529953003	9
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	3.1.1	synth with cache (only 1: intros; only 1: rewrite H; only 1: now subst).	0.0476090908051	8
Coq.Reals.RList.RList_P22	40	0.0.0.10.1	synth with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	1.14008998871	537
Coq.Reals.RList.RList_P23	40	2.0.0.0.0.0	synth with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: auto).	0.155394077301	17
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.1.0.0.0.0.0.0.1.0.0	synth with cache (only 1: intros s1; only 1: elim s1; only 1: simpl; only 1: intros s2 n H; only 1: inversion H; only 1: intros; only 1: induction i as [| i Hreci]; only 1: auto; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	8.46955394745	2338
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40	0.1.2.1	synth with cache (only 1: intros a Ha; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sqrt; only 1: assumption).	0.073380947113	8
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.157818078995	20
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40	0.1.3.1.0.43.1	synth with cache (only 1: intro; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: rewrite Nat.add_comm; only 1: simpl; only 1: trivial).	5.56133699417	8665
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: generalize (Rtotal_order r1 r2); only 1: intuition).	0.150755167007	15
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	2.1.0.0.0	synth with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: now destruct 1; only 1: now destruct 1).	0.0745620727539	18
Coq.Reals.Rbasic_fun.Rmin_Rgt	40	2.1.0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.1	synth with cache (only 1: split; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intros; only 1: split; only 1: assumption; only 1: unfold Rgt; only 1: exact (Rlt_le_trans r r1 r2 H Hle); only 1: intros; only 1: split; only 1: generalize (Rnot_le_lt r1 r2 Hnle); only 1: intro; only 1: exact (Rgt_trans r1 r2 r H0 H); only 1: assumption; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: now destruct 1; only 1: now destruct 1).	29.3027458191	19813
Coq.Reals.Rbasic_fun.Rmin_l	40	0.1.0.0.10.1.1	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: edestruct Rle_dec; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	3.43070602417	1495
Coq.Reals.Rbasic_fun.Rmin_r	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: red; only 1: tauto; only 1: intro H1; only 1: auto with real).	0.0736119747162	9
Coq.Reals.Rbasic_fun.Rmin_left	40
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0498249530792	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0633399486542	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.1.0.0.0.1.16.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym; only 1: intros H; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	23.9789180756	10201
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	1.0.0.0.3.0	synth with cache (only 1: intros x y; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: assumption; only 1: auto).	0.197952985764	57
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.1.0.2.3.1.3	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros; only 1: eauto using Rle_trans, Rle_refl; only 1: intro H1; only 1: assumption).	6.35462403297	942
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.080176115036	13
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.064964056015	6
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.2.0.3.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto; only 1: intro H1; only 1: auto with real).	0.481827020645	149
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: reflexivity; only 1: intro H1; only 1: auto with real).	0.175808906555	9
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.0.2.0.0.0.0.2.11.0	synth with cache (only 1: intros; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with real; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro H1; only 1: auto with real).	6.70336794853	3197
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.049427986145	5
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0641210079193	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0688860416412	10
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0673661231995	8
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0.0.0.4.0	synth with cache (only 1: intros x y; only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	1.29658985138	441
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.0.2.0.1.0.4.0	synth with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	7.40282893181	2108
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.740032911301	95
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	3.0.2.0.0.0.3.0.0	synth with cache (only 1: split; only 1: red; only 1: vm_compute; only 1: intros x abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with rorders; only 1: red; only 1: eauto using Rlt_trans with rorders).	2.03786301613	742
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0.0.3.0	synth with cache (only 1: repeat red; only 1: intros; only 1: subst; only 1: tauto).	0.105357885361	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0.0.0.0.2.0	synth with cache (only 1: intros n m; only 1: intuition try easy; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0855839252472	8
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	1.11.1.3	synth with cache (only 1: simple induction 1; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.35202693939	1867
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.5.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.381044864655	186
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.4.0	synth with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.104176044464	29
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	0	synth with cache (only 1: reflexivity).	0.063747882843	1
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.0.7.2	synth with cache (only 1: intros a b c d; only 1: fix even_odd_double 1; only 1: intros; only 1: auto).	0.894508838654	522
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	11.45.0	synth with cache (only 1: induction 1; only 1: fix even_equiv 1; only 1: trivial).	27.4270980358	50762
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40	1.3.9.0	synth with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: intros; only 1: trivial).	2.19376587868	722
Coq.Reals.Runcountable.split_lt_succ	40	4.0.1	synth with cache (only 1: intros n m; only 1: intro; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0523300170898	8
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	0.0.0	synth with cache (only 1: intros; only 1: simpl; only 1: now Nat.nzsimpl).	0.0788419246674	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0410151481628	2
Coq.Reals.Rfunctions.pow_1	40	0.0.5	synth with cache (only 1: simpl; only 1: intros; only 1: ring).	0.105643987656	48
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.162306070328	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0413949489594	2
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40	0.0.8	synth with cache (only 1: fix even_equiv 1; only 1: intros n0 H' H'0; only 1: auto with arith).	1.34017920494	236
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.4.2.1.0.1.3	synth with cache (only 1: intro n; only 1: induction n as [| n H]; only 1: intro H; only 1: now elim H; only 1: intros _; only 1: simpl; only 1: auto with real).	3.88654994965	2651
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.124811887741	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.3.0.0.0.1.0.3.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	9.42198514938	2365
Coq.Reals.Rfunctions.pow_Rabs	40	3.1.1	synth with cache (only 1: intro n; only 1: fix odd_equiv 1; only 1: auto with arith real).	0.0785391330719	21
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	synth with cache (only 1: reflexivity).	0.0402500629425	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.7.0	synth with cache (only 1: intro; only 1: simpl; only 1: ring).	0.0940330028534	16
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40	1.4.1.2.2.0.0.0	synth with cache (only 1: intros x n; only 1: elim n; only 1: intros; only 1: auto with real; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: auto with *).	10.1378040314	2753
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.105401992798	9
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40	0.0.0.0.0.0.0.1.0.1.6.13	synth with cache (only 1: intros n m; only 1: destruct m as [| m| m]; only 1: trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: induction (Pos.to_nat m); only 1: easy; only 1: unfold Zpower_nat; only 1: simpl; only 1: rewrite mult_IZR; only 1: now rewrite <- IHn0; only 1: now destruct 1 || intros _).	27.8687009811	9239
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40	0.6.1.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: reflexivity).	1.84184813499	469
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	1.3.0	synth with cache (only 1: intros; only 1: apply Rle_ge; only 1: apply Rabs_pos).	0.0570788383484	7
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.0610420703888	6
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_double).	0.260352134705	57
Coq.Reals.Exp_prop.div2_S_double	40	1.0	synth with cache (only 1: intro n; only 1: apply Nat.div2_succ_double).	0.31440615654	80
Coq.Reals.Exp_prop.div2_not_R0	40	2.2.0.0.4.0.2.7	synth with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: destruct n; only 1: inversion 1; only 1: Nat.order; only 1: intros _; only 1: apply Nat.lt_0_succ).	5.74701309204	3606
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: auto).	0.078428030014	7
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	1.0.0.0.1.3.0.1.1.1.2	synth with cache (only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	29.7559220791	11398
Coq.Reals.Rpower.Rinv_Rdiv	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: auto).	0.0791327953339	3
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.0.1.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0487909317017	12
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40
Coq.Reals.RIneq.Rge_refl	40	0.0.0	synth with cache (only 1: intros; only 1: right; only 1: reflexivity).	0.0380210876465	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	2.0.0.1	synth with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0509450435638	16
Coq.Reals.RIneq.Rlt_not_eq	40	2.0.0.2.2.4	synth with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.873262166977	440
Coq.Reals.RIneq.Rgt_not_eq	40	2.7.0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply (Rlt_irrefl r1); only 1: pattern r1 at 2; only 1: subst; only 1: eauto).	2.07000613213	1029
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40	0.2.0.0.1.0.0.1	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct s; only 1: left; only 1: trivial; only 1: contradiction; only 1: right; only 1: trivial).	0.935067892075	346
Coq.Reals.RIneq.Rlt_le	40	1.2.0	synth with cache (only 1: intros; only 1: left; only 1: auto with real).	0.0406970977783	6
Coq.Reals.RIneq.Rgt_ge	40	0.0.0	synth with cache (only 1: intros; only 1: red; only 1: tauto).	0.0394718647003	3
Coq.Reals.RIneq.Rle_ge	40	0.1.3.0.0.0.4	synth with cache (only 1: simple induction 1; only 1: left; only 1: auto; only 1: intros E; only 1: right; only 1: subst; only 1: reflexivity).	1.94316506386	1058
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	synth with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: right; only 1: auto).	0.0501749515533	6
Coq.Reals.RIneq.Rlt_gt	40	2.0.0	synth with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0361998081207	5
Coq.Reals.RIneq.Rgt_lt	40	0.0	synth with cache (only 1: intros; only 1: auto with real).	0.0313370227814	2
Coq.Reals.RIneq.Rnot_le_lt	40	0.0.0.0.0.0.2.6.0	synth with cache (only 1: intros x y H; only 1: destruct (total_order_T x y); only 1: destruct H; only 1: destruct s; only 1: red; only 1: tauto; only 1: right; only 1: exact e; only 1: auto).	2.09508609772	1152
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.1.0.0	synth with cache (only 1: intros x y H; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0414409637451	5
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	synth with cache (only 1: intros x y H; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0364627838135	3
Coq.Reals.RIneq.Rnot_lt_le	40	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intuition).	0.141520023346	39
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.0.0.1	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.101469039917	32
Coq.Reals.RIneq.Rnot_gt_ge	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: red; only 1: auto with real; only 1: subst; only 1: auto with rorders; only 1: contradiction).	0.0591750144958	10
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0	synth with cache (only 1: intros x y H; only 1: eauto using Rnot_lt_le with rorders).	0.0314559936523	3
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	5.0	synth with cache (only 1: intros n m; only 1: auto with real).	0.0367059707642	7
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	8.0	synth with cache (only 1: intros n m; only 1: auto with real).	0.0406701564789	10
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto).	0.103872060776	27
Coq.Reals.RIneq.Rge_not_lt	40	7.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	1.90348505974	333
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.299147129059	5
Coq.Reals.RIneq.Rge_not_gt	40	1.0.4	synth with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	1.10344004631	45
Coq.Reals.RIneq.Req_le	40	0.0.3	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.0468561649323	6
Coq.Reals.RIneq.Req_ge	40	0.0.7	synth with cache (only 1: intros * ->; only 1: right; only 1: reflexivity).	0.0470638275146	10
Coq.Reals.RIneq.Req_le_sym	40	1.0	synth with cache (only 1: unfold Rle; only 1: auto with *).	0.0362029075623	3
Coq.Reals.RIneq.Req_ge_sym	40	1.0	synth with cache (only 1: unfold Rge; only 1: auto).	0.0340600013733	3
Coq.Reals.RIneq.Rgt_asym	40	2.2.0	synth with cache (only 1: do 2 intro; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition try easy).	0.0484409332275	7
Coq.Reals.RIneq.Rle_antisym	40	0.1.0.0.0.8.3.5	synth with cache (only 1: intros; only 1: destruct H; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto; only 1: subst; only 1: reflexivity).	14.3540329933	4130
Coq.Reals.RIneq.Rge_antisym	40	2.0.1	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: intuition).	0.0588328838348	15
Coq.Reals.RIneq.Rle_le_eq	40	5.0	synth with cache (only 1: intros n m; only 1: intuition).	0.116760015488	35
Coq.Reals.RIneq.Rge_ge_eq	40	0	synth with cache (only 1: intuition).	0.0450539588928	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.4.1.4	synth with cache (only 1: intros A B f g <- H; only 1: intro eq; only 1: subst; only 1: auto with real).	1.01736187935	370
Coq.Reals.RIneq.Rgt_eq_compat	40	1.2.0.0.0	synth with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0504138469696	8
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	27.1	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: firstorder).	27.9074790478	19253
Coq.Reals.RIneq.Rle_lt_trans	40	1.0.2	synth with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.102885961533	33
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.1	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0630400180817	13
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	1.1.1.6.1.4.4	synth with cache (only 1: intros; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: generalize (Rtotal_order r1 r2); only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition try easy).	22.1366870403	4946
Coq.Reals.RIneq.Rle_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.24413394928	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0854079723358	3
Coq.Reals.RIneq.Rge_dec	40	0.1.0	synth with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.109932899475	4
Coq.Reals.RIneq.Rlt_le_dec	40	1.2.0.0.7.0	synth with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: intuition).	1.75322699547	274
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0759229660034	3
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.685222864151	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.101418972015	25
Coq.Reals.RIneq.Rlt_or_le	40	0.0.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.132666826248	34
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.2.1.0	synth with cache (only 1: intros n m; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.439604997635	76
Coq.Reals.RIneq.Rle_or_lt	40	0.2.1	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	1.20150899887	136
Coq.Reals.RIneq.Rge_or_gt	40	0.2.0.2.0.0	synth with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.319065093994	83
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.0.3.0.4.5	synth with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	8.01608800888	3502
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.1.0	synth with cache (only 1: intro; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	1.12403202057	22
Coq.Reals.RIneq.Rplus_ne	40	0.2.3.0	synth with cache (only 1: intro; only 1: split; only 1: ring; only 1: apply Rplus_0_l).	1.2708029747	14
Coq.Reals.RIneq.Rplus_opp_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.07090187073	6
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	8.0	synth with cache (only 1: intros x y z; only 1: intuition).	0.0462169647217	18
Coq.Reals.RIneq.Rplus_eq_compat_r	40	14.0	synth with cache (only 1: intros r r1 r2; only 1: congruence).	1.86611199379	666
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	1.3.1.0.0	synth with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	1.18195080757	46
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.6607170105	38
Coq.Reals.RIneq.Rinv_r_sym	40	0.1.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	1.62244391441	34
Coq.Reals.RIneq.Rmult_0_r	40	0.1	synth with cache (only 1: intros; only 1: ring).	0.0428500175476	3
Coq.Reals.RIneq.Rmult_0_l	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0410118103027	2
Coq.Reals.RIneq.Rmult_ne	40	0.1.0.1.0	synth with cache (only 1: split; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: ring; only 1: apply Rmult_1_l).	1.0937640667	7
Coq.Reals.RIneq.Rmult_1_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0392050743103	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	synth with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0303931236267	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	1.5.2	synth with cache (only 1: intros; only 1: rewrite <- H; only 1: reflexivity).	0.13525390625	78
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	2.3.2.3.5.0	synth with cache (only 1: intros; only 1: destruct H; only 1: rewrite H; only 1: ring; only 1: rewrite H; only 1: ring).	6.99023890495	1589
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0413990020752	3
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	synth with cache (only 1: auto with real).	0.0284018516541	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	3.0	synth with cache (only 1: intro H; only 1: intuition).	0.0576479434967	5
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.1	synth with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.18798708916	76
Coq.Reals.RIneq.Rmult_plus_distr_r	40
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	synth with cache (only 1: congruence).	0.0267391204834	1
Coq.Reals.RIneq.Ropp_0	40	6	synth with cache (only 1: ring).	0.0535027980804	11
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.3.5	synth with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.0980491638184	33
Coq.Reals.RIneq.Ropp_involutive	40	0.0	synth with cache (only 1: intros a; only 1: ring).	0.0405929088593	2
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	4.1.4.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intro H; only 1: ring).	10.0644171238	353
Coq.Reals.RIneq.Ropp_mult_distr_l	40	1.0	synth with cache (only 1: intros a b; only 1: ring).	1.79146981239	17
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0452179908752	2
Coq.Reals.RIneq.Rmult_opp_opp	40	1.0	synth with cache (only 1: intros; only 1: ring).	1.84109687805	28
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0442907810211	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.121831893921	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.040048122406	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	synth with cache (only 1: intro n; only 1: ring).	0.0420138835907	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0449049472809	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0451760292053	2
Coq.Reals.RIneq.Rminus_diag_eq	40
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0	synth with cache (only 1: intros a n; only 1: ring).	1.03404092789	3
Coq.Reals.RIneq.Rminus_eq_contra	40	1.0.1.1	synth with cache (only 1: red; only 1: intros; only 1: apply H; only 1: auto with real).	0.0796158313751	29
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	synth with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0459780693054	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0446178913116	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.0	synth with cache (only 1: intros; only 1: ring).	1.89706993103	22
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.1.1	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.133913993835	36
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.115475893021	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.5.0	synth with cache (only 1: intros; only 1: field; only 1: trivial).	0.1118080616	12
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.1.4.1.0	synth with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	1.14549899101	88
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.1.5.0.0	synth with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	1.70388698578	187
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	30	synth with cache (only 1: intuition).	3.63708400726	2309
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.2.0.1	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0513758659363	10
Coq.Reals.RIneq.Rplus_le_compat_l	40	0.2.0.6	synth with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros n m p q; only 1: intuition).	0.900015115738	157
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	3.2.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	1.89495897293	383
Coq.Reals.RIneq.Rplus_ge_compat_r	40	3.2.0.2	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.201127052307	54
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0473830699921	6
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.4.2	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.118812084198	26
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.3.3	synth with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.112030029297	22
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.0.0.0.1	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto with *).	0.0767059326172	15
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.4.4.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: apply Rplus_lt_compat_l; only 1: assumption).	37.9230148792	9274
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	6.0.0	synth with cache (only 1: intros n m p q; only 1: intros; only 1: intuition).	0.0502550601959	9
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	1.2	synth with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: intuition).	0.10267496109	27
Coq.Reals.RIneq.Ropp_lt_contravar	40	1.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0953431129456	11
Coq.Reals.RIneq.Ropp_gt_contravar	40	1	synth with cache (only 1: auto with real).	1.61263298988	94
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.0.0.6.3	synth with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	1.4824180603	425
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0	synth with cache (only 1: auto with real).	0.030531167984	1
Coq.Reals.RIneq.Ropp_le_contravar	40	0	synth with cache (only 1: auto with real).	0.120402097702	1
Coq.Reals.RIneq.Ropp_ge_contravar	40	0	synth with cache (only 1: auto with real).	0.0284690856934	1
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0524201393127	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0518369674683	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	synth with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0510900020599	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0413298606873	3
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- Ropp_0; only 1: auto with real).	0.0438330173492	3
Coq.Reals.RIneq.Ropp_lt_cancel	40	4.0.1.1.3.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto; only 1: auto with real).	5.84450101852	1074
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.049852848053	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.1.1	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.378163099289	65
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.0	synth with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.0587120056152	4
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	7	synth with cache (only 1: auto using Rplus_lt_compat with rorders).	0.108471870422	58
Coq.Reals.RIneq.Rmult_gt_compat_l	40	3.2.3.12	synth with cache (only 1: intros x y; only 1: red; only 1: intros; only 1: auto with real).	2.53588795662	1657
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	1.5	synth with cache (only 1: intros n m p q; only 1: intuition).	0.124361038208	38
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.2.1.1.1	synth with cache (only 1: intros r r1 r2 H H0; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.179531097412	48
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.0.7.0	synth with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.602438211441	220
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	4.0.1.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto).	0.0575258731842	9
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0581111907959	4
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.5	synth with cache (only 1: unfold Rle; only 1: intros; only 1: intuition).	0.44483089447	66
Coq.Reals.RIneq.Rge_minus	40	0.0.0.3.0.0.10	synth with cache (only 1: unfold Rge; only 1: intros; only 1: intuition; only 1: left; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	6.58507299423	1570
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.1.1.0.0	synth with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.0813708305359	8
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40	0.0.2.0.2.0	synth with cache (only 1: intros; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: apply Rplus_le_lt_0_compat; only 1: assumption; only 1: assumption).	0.170538902283	67
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	synth with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0545098781586	4
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.2	synth with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0870261192322	20
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	2.5290350914	499
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40	11.0	synth with cache (only 1: intro; only 1: apply Rlt_n_Sn).	0.515439033508	239
Coq.Reals.RIneq.tech_Rgt_minus	40	0.2.0.0.4	synth with cache (only 1: intros x y H; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: auto with real).	0.22466802597	103
Coq.Reals.RIneq.S_INR	40	0.0.1.3.1.1.0	synth with cache (only 1: simpl; only 1: intros; only 1: symmetry; only 1: induction n; only 1: apply Rplus_0_l; only 1: simpl; only 1: auto).	0.922666072845	324
Coq.Reals.RIneq.S_O_plus_INR	40	3.0.3.3.1.0	synth with cache (only 1: simpl; only 1: intros; only 1: induction n; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.21906208992	1239
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.2.3.2.1.12	synth with cache (only 1: Nat.induct ltac:(n); only 1: simpl; only 1: auto with real rorders; only 1: fix le_div2 1; only 1: intro n; only 1: auto).	36.0038771629	21972
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	3.0.0.4.6	synth with cache (only 1: unfold Rle; only 1: induction 1; only 1: right; only 1: reflexivity; only 1: intuition).	2.35037016869	1203
Coq.Reals.RIneq.INR_not_0	40	2.0.1.3.3.0	synth with cache (only 1: red; only 1: intro n; only 1: induction n as [| n H]; only 1: intro H; only 1: auto; only 1: discriminate).	2.93045711517	1143
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	4.0.0.1	synth with cache (only 1: red; only 1: intros r H H0; only 1: apply H; only 1: now apply not_INR in H).	0.238682031631	133
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40	0.12.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.sub, Rminus; only 1: rewrite <- opp_IZR; only 1: symmetry; only 1: apply plus_IZR).	16.7490661144	5429
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.1.2.1	synth with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.389878034592	110
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.044399023056	2
Coq.Reals.RIneq.double_var	40	15.0	synth with cache (only 1: intros; only 1: field).	2.30914998055	451
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.184433937073	35
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40
Coq.Reals.RIneq.Req_EM_T	40	0.0.2.2	synth with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0645589828491	8
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	8.0	synth with cache (only 1: intros n m; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ).	0.855867862701	59
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	4.2.0	synth with cache (only 1: intro n; only 1: simpl; only 1: auto with arith).	0.08624792099	33
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.3.0.2.1.0	synth with cache (only 1: intro; only 1: apply Rinv_0_lt_compat; only 1: case n; only 1: simpl; only 1: auto with real; only 1: auto with arith real).	0.857239961624	288
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	0	synth with cache (only 1: reflexivity).	0.0601260662079	1
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40	0.0.0.7.16	synth with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: auto).	13.7226979733	9934
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40	47.3.2	synth with cache (only 1: intros f1 f2 x X X0; only 1: intro; only 1: auto using Rplus_lt_compat with rorders).	35.5203549862	44059
Coq.Reals.Ranalysis2.quadruple	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.0617599487305	2
Coq.Reals.Ranalysis2.quadruple_var	40	1.1	synth with cache (only 1: intro esp; only 1: field).	0.075364112854	4
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	7.0.0	synth with cache (only 1: intros; only 1: unfold included; only 1: auto).	0.0851430892944	32
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	4.0.0	synth with cache (only 1: intros x y z; only 1: unfold included; only 1: auto).	0.0603320598602	14
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	0.0.2	synth with cache (only 1: intro; only 1: intro; only 1: elim H).	0.0628669261932	14
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	6.6.3	synth with cache (only 1: intros Ext A a; only 1: unfold eq_Dom; only 1: firstorder using PropExtensionalityFacts.PredExt_imp_PropExt, PropExtensionalityFacts.PredExt_imp_PropFunExt, PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt).	7.10142397881	2366
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40	0.9	synth with cache (only 1: intros r z x [H1 H2] [H3 H4]; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	1.34105110168	319
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40	0.4.0.0.1.0.0	synth with cache (only 1: intros; only 1: apply Rquot1; only 1: repeat rewrite Rrepr_plus; only 1: repeat rewrite Rrepr_mult; only 1: repeat rewrite Rrepr_plus; only 1: rewrite CReal_mult_plus_distr_l; only 1: reflexivity).	20.6040539742	358
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40	5.13.3	synth with cache (only 1: unfold EUn; only 1: intros; only 1: now exists n).	3.04545807838	2785
Coq.Reals.Rseries.sequence.Un_bound_imp	40
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.1.1.0	synth with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: auto with arith).	0.142786979675	30
Coq.Reals.Rseries.Un_growing_shift	40	4.0.4.1	synth with cache (only 1: intros; only 1: intros p; only 1: simpl; only 1: auto).	0.491983890533	320
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	20.1.31.11	synth with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto).	24.3910369873	38991
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	1.0.2.8.3.10	synth with cache (only 1: intro Hyp'; only 1: unfold increasing; only 1: unfold continuity_pt, opp_fct; only 1: intros A B H; only 1: intro H1; only 1: auto with real).	13.0055608749	5642
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	9.6.2	synth with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros f0 X H0 H; only 1: auto with real).	2.7816259861	1181
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.1.0.1.1.2.0	synth with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.992874860764	288
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	synth with cache (only 1: reflexivity).	0.0436010360718	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40	4.0.0.10.4	synth with cache (only 1: red; only 1: unfold continuity_pt, opp_fct; only 1: intros; only 1: apply limit_Ropp; only 1: apply H).	7.67629694939	3182
Coq.Reals.Ranalysis1.continuity_minus	40	2.5.0.0.0.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	3.9862101078	1156
Coq.Reals.Ranalysis1.continuity_mult	40	3.5.0.0.0.0.0	synth with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	4.96988511086	1469
Coq.Reals.Ranalysis1.continuity_const	40	0.1.0.1.0.0.0.0.0.1.4.1.0	synth with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	14.4107689857	5588
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.2.0.0.0.0.0.2	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.784002065659	198
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0777740478516	6
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	12.8.10	synth with cache (only 1: vm_compute; only 1: intros Heqb; only 1: intuition eauto  3).	11.5445299149	7645
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.3.0	synth with cache (only 1: intro; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0968191623688	18
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.10	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.280752897263	251
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0651268959045	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.18.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	8.27820587158	3596
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	3.9	synth with cache (only 1: fix even_equiv 1; only 1: auto with real).	3.25168204308	1208
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	4.2.5.3	synth with cache (only 1: intros r1 r2; only 1: intros (x1, x2) (y1, y2); only 1: apply derive_pt_eq_0; only 1: assumption).	2.76759600639	1276
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.1.0.0.0.0.1.0.0.2.0	synth with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	2.08149409294	953
Coq.Reals.SeqProp.Wn_decreasing	40	3.0.17.2.0	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: intro n; only 1: auto with arith).	10.2063949108	8521
Coq.Reals.SeqProp.Vn_growing	40	4.0.11.3.0	synth with cache (only 1: intros; only 1: unfold Un_growing, opp_seq, Un_decreasing; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	7.29998111725	5370
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	0.0.1.9.0.0	synth with cache (only 1: intros r1 r2 r; only 1: intro; only 1: unfold Rle; only 1: revert n; only 1: fix even_odd_double 1; only 1: intuition).	3.9386138916	1331
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0716381072998	8
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40	2.25.3	synth with cache (only 1: intro H; only 1: fix even_odd_double 1; only 1: firstorder).	39.6529090405	15307
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40	8.1.0.2	synth with cache (only 1: intros x y z; only 1: intros; only 1: apply Rge_le; only 1: now apply growing_prop).	2.17097401619	752
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	1.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.192373991013	22
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0711710453033	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	2.0.1.0.0.0.0	synth with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: prove_sup).	0.136193990707	13
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	3.11	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	6.03687810898	1087
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	1.0.3.1	synth with cache (only 1: destruct pi2_int; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.131806135178	19
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	2.7	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.113860845566	36
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40	0.0	synth with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.072429895401	2
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.1.2.0	synth with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.922287940979	301
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0734930038452	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0725388526917	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0729458332062	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	0.19.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	7.42515206337	2504
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	1.16368293762	115
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	synth with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	1.20054984093	116
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.168749094009	21
Coq.Reals.DiscrR.IZR_eq	40	0.0.0	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.0488851070404	3
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.0.0.0.4.12	synth with cache (only 1: red; only 1: firstorder; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	4.24648404121	1559
Coq.Reals.ConstructiveReals.CReq_sym	40	7.6	synth with cache (only 1: intros x y; only 1: firstorder).	2.4766201973	690
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.3.4.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.775418996811	235
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40	0.1.4.0.0.1.1.0.0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: intro abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs; only 1: intro abs; only 1: apply H0; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	18.2697601318	5485
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40	1.3.0.0.1	synth with cache (only 1: intros; only 1: intro abs; only 1: apply lt_CR_of_Q in abs; only 1: contradict H; only 1: auto with *).	0.305480003357	10
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	6.6.1.24	synth with cache (only 1: apply lt_wf_rec; only 1: auto with arith; only 1: intros H; only 1: firstorder).	4.22609090805	6634
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	18	synth with cache (only 1: auto).	1.74951910973	1050
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	3	synth with cache (only 1: apply CReal_isRingExt).	6.29177093506	123
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	1.0.0.0	synth with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0786998271942	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40	5.1.0	synth with cache (only 1: intros; only 1: ring_simplify; only 1: easy || now destruct 1).	1.0912771225	9
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	synth with cache (only 1: intro; only 1: ring).	0.0464839935303	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	3.2	synth with cache (only 1: intro; only 1: ring).	2.67797088623	126
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	6.3.1	synth with cache (only 1: intros x y; only 1: destruct x as [xn limx]; only 1: ring).	6.96438980103	887
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	synth with cache (only 1: intros; only 1: ring).	0.051558971405	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40	1.1.6.2.0	synth with cache (only 1: intros [xn limx]; only 1: intros; only 1: intro H; only 1: intros a b Ha; only 1: auto with arith).	2.36914205551	1025
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	21	synth with cache (only 1: trivial).	0.573907852173	573
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	2.1.0	synth with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.406178951263	92
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.RiemannInt_SF.IZN_var	40	1.0.0.38	synth with cache (only 1: intros x H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	6.735476017	11536
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40	0.5.2.7.0	synth with cache (only 1: intros a b f; only 1: red; only 1: destruct (projT2 (pre f)) as (x, H); only 1: apply existT with x; only 1: apply H).	2.24277615547	838
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40	1.3.0.3.4.0.0.2	synth with cache (only 1: intros a n; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: replace (2 * S n)%nat with (2 + 2 * n)%nat by ring; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring).	12.6156201363	4926
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	2.0.0.7	synth with cache (only 1: unfold derivable_pt; only 1: intros; only 1: exists 1; only 1: apply derivable_pt_lim_id).	1.7165119648	561
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	0.0.2.0.0.1.0.0.0.0.1	synth with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: split; only 1: rewrite <- Left_inv with (x := lb); only 1: intuition; only 1: intuition; only 1: rewrite <- Left_inv; only 1: intuition; only 1: intuition).	25.1306219101	2411
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40	3.1.24	synth with cache (only 1: fix even_odd_double 1; only 1: simpl; only 1: auto with arith).	11.6007070541	5652
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0566561222076	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0535078048706	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.052805185318	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0525550842285	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.0.0.0.0.3.0	synth with cache (only 1: intros m n p; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.169694185257	19
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.804971933365	8
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.1.0.5.0	synth with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.879773139954	59
Coq.Reals.Rminmax.R.opp_max_distr	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.713365077972	5
Coq.Reals.Rminmax.R.opp_min_distr	40	3.0.0.0	synth with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0645401477814	7
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40
Coq.Reals.Rlimit.eps2	40	0.1.0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.121226072311	13
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	synth with cache (only 1: intros a Ha; only 1: lra).	0.0490748882294	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	5.0	synth with cache (only 1: intros; only 1: lra).	0.0913751125336	16
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40	0.0.0.0.0.2.0	synth with cache (only 1: intros; only 1: subst; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.104780197144	9
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0912351608276	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0651450157166	4
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.0.4.0	synth with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.081346988678	10
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	synth with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0560867786407	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.6.0	synth with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.318284988403	104
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	9.0.1.0	synth with cache (only 1: intros x y H H0; only 1: apply Rmult_le_pos; only 1: assumption; only 1: auto with real).	3.78989100456	897
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40	33.5	synth with cache (only 1: intros; only 1: firstorder).	9.29913306236	3305
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.1.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: simpl; only 1: ring).	0.254601955414	45
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0971450805664	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	synth with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.075423002243	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.1.1.1.2.0.0.0	synth with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	4.68108987808	1019
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	synth with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: ring_Rsqr).	0.269056081772	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: ring_Rsqr).	0.11482000351	5
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.4.0	synth with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.113006830215	9
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.3.0.0.1.0	synth with cache (only 1: destruct pi2_int; only 1: destruct pi2_int; only 1: destruct pi2_int; only 1: destruct pi2_int; only 1: unfold PI; only 1: lra).	0.201237201691	20
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.0.9.4.1	synth with cache (only 1: unfold Rdiv; only 1: destruct pi2_int; only 1: prove_sup; only 1: lra; only 1: lra).	10.5003609657	2543
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.0.2.0.1	synth with cache (only 1: unfold PI; only 1: pose proof PI_RGT_0 as H; only 1: field_simplify; only 1: destruct pi2_int; only 1: lra).	0.540296077728	31
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.17865896225	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.1.0.0.1.0.0	synth with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	14.5095450878	2182
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40	1.1.1.0.0.0.0.0.4.1.1.1	synth with cache (only 1: intros r1 r2 [H| H]; only 1: rewrite H; only 1: apply cos_PI2; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end; only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI2; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	33.4452831745	8409
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0449969768524	2
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	0.1.0	synth with cache (only 1: intros Un pr; only 1: intros; only 1: assumption).	0.0568988323212	4
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	4.5.0.0.10.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: simpl; only 1: rewrite HrecN; only 1: ring).	4.05962705612	2019
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.164180994034	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	0.3.8.0.0.0.1.3	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: simpl; only 1: rewrite HrecN; only 1: simpl; only 1: ring).	11.0898771286	4803
Coq.Reals.PartSum.sum_growing	40	1.0.2.1.0.1.3.1.0.0.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	5.49973201752	2785
Coq.Reals.PartSum.Rabs_triang_gen	40	0.2.0.0.0.0.0.0.0.0.1	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	5.37298107147	1631
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	0.0.2.8.5.5.2.0.0.1.0	synth with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: apply H; only 1: apply le_n; only 1: simpl; only 1: rewrite (H (S N)); only 1: rewrite HrecN; only 1: auto with real; only 1: intro; only 1: auto; only 1: apply le_n).	17.2209358215	19132
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	6.4.0.1.4	synth with cache (only 1: intros a b; only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	6.9214849472	2551
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40	3.0.4.0.9.11	synth with cache (only 1: intros n m; only 1: Nat.induct ltac:(p); only 1: trivial; only 1: simpl; only 1: intro p; only 1: Nat.solve_max).	8.89077711105	4774
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	2.58462309837	1492
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.7	synth with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0734531879425	33
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.1.0.1.8	synth with cache (only 1: constructor; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	1.01163196564	302
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	3.4.2.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: split; only 1: tauto; only 1: apply H).	2.15849590302	673
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40	0.0.8.19.1	synth with cache (only 1: intros; only 1: destruct H; only 1: apply (CReal_lt_le_trans _ x); only 1: trivial; only 1: trivial).	35.1061439514	10036
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	11	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.458345890045	267
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	8	synth with cache (only 1: now unfold Zdiv.eqm; intros a b c ->).	0.124952793121	49
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.1.0.0.0.0.0.1.0.0.0.1	synth with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	3.83827400208	1170
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	3	synth with cache (only 1: trivial).	0.0340509414673	4
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40	0.24.1	synth with cache (only 1: simpl; only 1: intros (a, b) (c, d); only 1: auto).	19.6275589466	3220
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	4	synth with cache (only 1: auto with *).	0.0353569984436	5
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	3.1.0.4	synth with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.614454984665	337
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40	2.0.32	synth with cache (only 1: fix le_div2 1; only 1: intros (x1, x2); only 1: auto).	19.500002861	17786
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	0.2.7.5.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: trivial).	2.76239013672	1841
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	0.299435138702	10
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.3.0	synth with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	5.31536507607	1046
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.1.0.0.0.0.0.0.0.2.0.5	synth with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: assumption).	18.151473999	5796
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	0.0.0.0.2.0.0.0.0.2.10	synth with cache (only 1: constructor; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	16.7047917843	5698
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	1	synth with cache (only 1: reflexivity).	0.0358970165253	2
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.0.2.0.0.0.2.1.6	synth with cache (only 1: simpl; only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	2.77014303207	1336
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	3.0.0.0.0.0.0	synth with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: pose proof derivable_pt_lim_sin_0 as H0; only 1: pose proof derivable_pt_lim_cos_0 as H; only 1: apply derivable_pt_lim_sin).	0.107143878937	13
Coq.Reals.Rtrigo_reg.derivable_cos	40	1.0.0.0.3.0	synth with cache (only 1: set (fn := fun (N : nat) (x : R) => (-1) ^ N / INR (fact (2 * N)) * x ^ (2 * N)); only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.874658107758	133
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	1.15.1	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sin).	2.39450502396	715
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.7.0	synth with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.235658884048	84
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.1.0.0	synth with cache (only 1: intro; only 1: intro; only 1: split; only 1: eauto with real; only 1: eauto with real).	0.0831160545349	6
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.10.0	synth with cache (only 1: intro; only 1: apply pow_nonzero; only 1: now apply not_0_IZR).	2.57406592369	726
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	4.1.6.8.5	synth with cache (only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	3.29086685181	2191
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	2.1.0.1.0.0.1.0.0	synth with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	1.79638195038	637
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	0	synth with cache (only 1: auto).	0.0387358665466	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	0.0	synth with cache (only 1: unfold empty, Empty; only 1: auto).	0.0402739048004	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.0.3	synth with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.302587985992	30
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0	synth with cache (only 1: auto).	0.0379889011383	1
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.0.10	synth with cache (only 1: induction m; only 1: auto; only 1: auto).	0.125778913498	83
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.2	synth with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto).	0.0523619651794	6
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	1.2.5.2	synth with cache (only 1: intros m; only 1: intro; only 1: intuition; only 1: inversion_clear H).	0.402350902557	138
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	0.1.1.6	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.180881977081	137
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40	17.3.0.1.26.21.3.1	synth with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion H).	15.0450179577	49209
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40	1.39.13.0	synth with cache (only 1: intros m; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	3.3023750782	9792
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40	2	synth with cache (only 1: exact (fun m : Raw.t elt => elements_aux_cardinal nil)).	0.0460188388824	3
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40	0.0.0.1.1.1.0	synth with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.160390853882	31
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0643219947815	2
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.0639660358429	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40	0.0.0.0.0.0.0.1.3.6.3.7.2	synth with cache (only 1: compute; only 1: constructor; only 1: induction 1; only 1: eauto; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	15.1240370274	19438
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.21.10.9	synth with cache (only 1: intros m x y e; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	16.9355950356	21655
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	2.0	synth with cache (only 1: intuition; only 1: intuition_in).	0.110869169235	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	23.0	synth with cache (only 1: intuition; only 1: inversion_clear 1).	2.17616605759	1330
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	28.2	synth with cache (only 1: intuition; only 1: easy).	3.55750012398	2503
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	2.3.7.2	synth with cache (only 1: intuition; only 1: compute; only 1: intuition_in; only 1: eauto with ordered_type).	2.05053400993	509
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40	0.0.8	synth with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	1.55570197105	65
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	0	synth with cache (only 1: intuition).	0.033942937851	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	synth with cache (only 1: intuition_in).	0.0336990356445	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0	synth with cache (only 1: intuition_in).	0.0332961082458	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	synth with cache (only 1: intuition_in).	0.0332911014557	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0.0.4.2	synth with cache (only 1: intuition_in; only 1: induction m; only 1: auto; only 1: eauto with ordered_type).	0.168496131897	21
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0411088466644	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.126960039139	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	0	synth with cache (only 1: auto).	0.0291349887848	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	38	synth with cache (only 1: inversion 1).	16.3604209423	2581
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	5.0.0.1.3.1.5	synth with cache (only 1: destruct m; only 1: simpl; only 1: intros; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: easy).	5.23807501793	3958
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40	0.1.0.1.0.1.1.3.4	synth with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: easy; only 1: intros; only 1: eauto with ordered_type; only 1: intros; only 1: auto; only 1: intros; only 1: eauto with ordered_type).	18.1091160774	5228
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	1.0.4.3.1.0.3.2.0	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: intros e' eqfind; only 1: inversion eqfind; only 1: auto; only 1: auto).	7.09878396988	4627
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40	1.2.1.0.5.4	synth with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: now destruct 1; only 1: auto; only 1: auto; only 1: auto).	2.90025877953	1265
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.0.0.0.4.5.7	synth with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.07621097565	1913
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40	6.1.1	synth with cache (only 1: compute; only 1: intuition; only 1: intuition_in).	0.724499940872	116
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	1.2.1.0.0.1	synth with cache (only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.32301902771	92
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	2.9.0.5	synth with cache (only 1: red; only 1: simpl; only 1: destruct 1; only 1: auto).	6.98416996002	2851
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	0.0.13.11	synth with cache (only 1: intros n m Hn; only 1: fix even_spec 1; only 1: intros; only 1: intuition).	21.7607741356	15074
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.2.1.10.4	synth with cache (only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: inversion 1; only 1: auto; only 1: auto; only 1: auto).	2.48088908195	3906
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	0.0.0.1.3.0.2	synth with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.519303798676	159
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.2.2.2	synth with cache (only 1: induction m; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.53503203392	164
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40	0.52	synth with cache (only 1: fix odd_spec 1; only 1: auto).	3.58836603165	10411
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40	3.2.10.26.1	synth with cache (only 1: intros m; only 1: red; only 1: intros; only 1: simpl; only 1: eauto using add_2, add_3).	16.1240999699	33707
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.29.2.12.1	synth with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intuition; only 1: apply find_2; only 1: auto).	4.70045804977	13996
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40	0.1.1.6	synth with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	0.195248126984	171
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40	15.3.0.1.49.2	synth with cache (only 1: intros; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion H).	5.76208209991	23828
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40	0.41.0	synth with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	1.58238387108	4447
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40	10	synth with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.110163927078	44
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40	0.0.0.6.2.0.0	synth with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: rewrite equal_Equivb; only 1: auto using map_option_bst; only 1: auto using map_option_bst; only 1: auto using map_option_bst).	1.49687409401	713
Coq.FSets.FMapAVL.IntMake.map_1	40	0.1.0.1.0.1.18.3.1.6.6	synth with cache (only 1: intuition; only 1: red; only 1: simpl; only 1: induction m; only 1: elim H; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	24.3378381729	54663
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	5.0.1.6	synth with cache (only 1: destruct e2; only 1: simpl; only 1: auto; only 1: constructor).	0.602920055389	310
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	0.0	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.0622959136963	2
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	0.1	synth with cache (only 1: intros; only 1: Raw.Proofs.intuition_in).	0.0621211528778	3
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	3	synth with cache (only 1: intuition).	0.0540981292725	4
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40	3.1.7.9.16.2.7	synth with cache (only 1: split; only 1: intros n; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intro H; only 1: intuition).	8.72488903999	13493
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	4	synth with cache (only 1: intuition).	0.231034994125	21
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	7	synth with cache (only 1: intuition).	0.063549041748	22
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	5	synth with cache (only 1: intuition).	0.0588669776917	17
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	0	synth with cache (only 1: intuition).	0.0364208221436	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40	0.2.34.1.1	synth with cache (only 1: intro n; only 1: intuition; only 1: destruct (eq_dec x y) as [E| E]; only 1: intuition; only 1: exact (add_3 E H)).	11.2422568798	12850
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.0.1	synth with cache (only 1: intro n; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.0732879638672	14
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	1	synth with cache (only 1: intuition).	0.171169042587	52
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40	2.0	synth with cache (only 1: intro n; only 1: intuition).	0.0631940364838	11
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	3.1	synth with cache (only 1: intro n; only 1: intuition).	0.122109889984	32
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0	synth with cache (only 1: intuition).	0.0348100662231	1
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.1.0.3.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.735419034958	76
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	4.0.4.3.0.0.3.1	synth with cache (only 1: constructor; only 1: red; only 1: intros; only 1: auto; only 1: auto; only 1: red; only 1: intros x y z; only 1: eauto).	5.08608603477	3413
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	1.23.1	synth with cache (only 1: unfold Equal; only 1: unfold Empty; only 1: solve_proper).	16.8776249886	11547
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	10	synth with cache (only 1: congruence).	0.0719480514526	72
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0.1.13	synth with cache (only 1: intros Base Step; only 1: red; only 1: intros y z H1 H2; only 1: eauto).	1.142318964	695
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	11.7.11	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: rewrite <- Ha; only 1: firstorder).	28.0671579838	5661
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	10	synth with cache (only 1: firstorder).	0.787431955338	157
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	2.7.2.0.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: rewrite H; only 1: do 2 rewrite remove_iff; only 1: intuition).	2.67104887962	731
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	2.16.1.0	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	5.38072299957	2543
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	6.7.1	synth with cache (only 1: unfold Subset; only 1: intros n m p q H1 H2; only 1: eauto with set).	3.13915610313	1014
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.11.1.2	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	2.13043403625	773
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.4.9.3	synth with cache (only 1: intros; only 1: intro; only 1: repeat rewrite filter_iff; only 1: intuition; only 1: auto; only 1: auto).	2.9243311882	1329
Coq.FSets.FSetPositive.PositiveSet.In_1	40	2.5.7	synth with cache (only 1: intros; only 1: inversion H; only 1: now subst).	1.08731794357	474
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.7	synth with cache (only 1: split; only 1: trivial; only 1: trivial).	0.0631449222565	34
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	12.0	synth with cache (only 1: intros; only 1: now rewrite <- ?BinInt.Z.succ_le_mono).	0.232779026031	176
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	5	synth with cache (only 1: trivial).	0.0480558872223	26
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	4	synth with cache (only 1: trivial).	0.0325419902802	5
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0	synth with cache (only 1: intros n; only 1: reflexivity).	0.0343151092529	2
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	16	synth with cache (only 1: firstorder).	0.0690038204193	108
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	15.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	1.35886096954	618
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	0.0.32	synth with cache (only 1: fix even_spec 1; only 1: intros m H; only 1: auto with arith).	12.4795691967	11439
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.2.6	synth with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.630820035934	41
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	37	synth with cache (only 1: easy).	1.09429097176	2296
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	15.3.9	synth with cache (only 1: intros s1; only 1: fix even_spec 1; only 1: tauto).	9.10394501686	9931
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	14.5.19.24.3	synth with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: firstorder).	23.0743770599	48625
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.0.0.0.0.1.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.792309045792	405
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.0.0.0.0.0.0.0.0.1.12.0.1	synth with cache (only 1: intros n m; only 1: split; only 1: destruct n; only 1: auto; only 1: split; only 1: reflexivity || destruct H; only 1: reflexivity; only 1: discriminate; only 1: split; only 1: reflexivity || destruct H; only 1: trivial; only 1: discriminate; only 1: intros (EQ, EQ'); only 1: now subst).	26.5215950012	25933
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split).	0.0606958866119	5
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	4.4.4.12	synth with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	1.18583416939	1570
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0484220981598	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.7	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0795397758484	35
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0452859401703	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0444068908691	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.043487071991	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.19	synth with cache (only 1: intros [| ] [| ] [| ]; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct; only 1: ct).	0.87305688858	751
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.6.5	synth with cache (only 1: intros q; only 1: destruct q; only 1: reflexivity; only 1: reflexivity).	0.267884969711	135
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	4.8.5.18	synth with cache (only 1: intros y z H1 H2; only 1: inversion H2; only 1: apply <- add_spec; only 1: auto).	8.25588107109	6700
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	3.11.0	synth with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	1.39396309853	700
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.3.6	synth with cache (only 1: intros n m LE; only 1: apply <- add_spec; only 1: left; only 1: auto).	0.522572994232	140
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.0.1.0.0	synth with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: auto).	0.138216018677	26
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0571300983429	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	1.6.1	synth with cache (only 1: intros a b c Ha Hb; only 1: rewrite inter_spec; only 1: auto).	0.102504968643	40
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.0	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0538349151611	3
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.1	synth with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.15493106842	13
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.2.1.1	synth with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0657532215118	8
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.11.2.0	synth with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	1.12052798271	1200
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.5.6.0	synth with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.691815137863	583
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.2	synth with cache (only 1: intros s f _; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0512862205505	5
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40	0.0.0.6.0.0.6.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: now f_equal; only 1: intros; only 1: simpl; only 1: f_equal).	24.8863451481	10355
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0597319602966	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	15	synth with cache (only 1: now intros []).	0.248080015182	217
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct i; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0573699474335	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.0.0.1	synth with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: reflexivity).	0.0676229000092	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct o; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	18.730312109	7192
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.1.1.0.1	synth with cache (only 1: intros n m; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.728714942932	148
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	3	synth with cache (only 1: congruence).	0.0393440723419	4
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0	synth with cache (only 1: auto).	0.0386960506439	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.1	synth with cache (only 1: unfold MapsTo; only 1: auto).	0.0411529541016	3
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40	6.8	synth with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.152695894241	122
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40	0.0.6.10.7.1	synth with cache (only 1: unfold MapsTo; only 1: intro H; only 1: destruct 1; only 1: rewrite gso; only 1: auto; only 1: auto).	8.11692404747	7805
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.0.0.0.5.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: unfold map; only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	2.42495799065	1767
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	14.858839035	8353
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.067262172699	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	2.14.1.14.1	synth with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	3.10377502441	5816
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	6.0	synth with cache (only 1: intros; only 1: intuition).	0.417091846466	25
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	5	synth with cache (only 1: intuition).	0.0566160678864	26
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.17.0.1	synth with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	7.32658720016	4165
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	1.2	synth with cache (only 1: intros; only 1: intuition).	0.06387591362	14
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.0.2.2	synth with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto with map).	0.0693290233612	18
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40	0.0.0.5.0.0.0.0.5.0.0.1	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_3 with x e; only 1: auto; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply add_2; only 1: auto; only 1: auto).	5.40514302254	5714
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.4.1	synth with cache (only 1: intros; only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.172717809677	65
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: unfold In; only 1: split; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e0, H0); only 1: exists e0; only 1: apply remove_2; only 1: auto; only 1: auto).	1.0206360817	495
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40	5.4.0.0.0.1.1.1.0	synth with cache (only 1: split; only 1: intros (e, H); only 1: exists e; only 1: apply elements_1; only 1: auto; only 1: intros (e, H); only 1: exists e; only 1: apply elements_2; only 1: auto).	9.3065969944	8685
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40	0.0.1.6.0.0.0.2.1	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: split; only 1: intros; only 1: rewrite empty_mapsto_iff in H; only 1: intuition; only 1: easy).	4.66759490967	2576
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	1.2	synth with cache (only 1: intros; only 1: auto with map).	0.0395641326904	5
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	0.2.0.0.1.4.6.9.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply add_3; only 1: auto; only 1: apply add_2; only 1: auto).	20.6872301102	8807
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40	3.1.14.2	synth with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: auto with map; only 1: auto with map).	5.65214896202	3755
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.0.0.0.0.0.4.2	synth with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: split; only 1: apply remove_3; only 1: apply remove_2; only 1: auto).	0.701128005981	200
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	0.0.0.0.0.0.0.1.0.0.2	synth with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro n; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_neq_mapsto_iff; only 1: now intuition; only 1: auto).	2.03767585754	521
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40	0.0.1.0.1.0.0.6.2.0	synth with cache (only 1: intros; only 1: do 2 rewrite mem_find_b; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite remove_eq_o; only 1: auto; only 1: auto; only 1: rewrite remove_neq_o; only 1: auto; only 1: auto).	8.71130013466	4137
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	1	synth with cache (only 1: split).	0.0334010124207	2
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.0.1.2	synth with cache (only 1: red; only 1: vm_compute; only 1: intros; only 1: auto).	0.0579261779785	8
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	2.4.3.5.0	synth with cache (only 1: unfold Equal; only 1: intro a'; only 1: intros m1 m2; only 1: intros Hiff; only 1: congruence).	2.81798887253	1209
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	synth with cache (only 1: intros a; only 1: auto).	0.0412170886993	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.0.3.3.0.2.1	synth with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: split; only 1: auto; only 1: auto).	2.59415197372	924
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40	0.0.0.0.0.1	synth with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0472919940948	7
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	0.8.19	synth with cache (only 1: intros e'; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	2.1002779007	1537
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40	1.1.20	synth with cache (only 1: intros e'; only 1: rewrite <- cardinal_Empty; only 1: auto).	1.55423402786	1127
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40	0.2.1.1.0.3.0.3.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	5.64048790932	4078
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	4.12	synth with cache (only 1: compute; only 1: firstorder).	2.98676681519	1962
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	6.6	synth with cache (only 1: intros; only 1: firstorder).	0.149513959885	115
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	6.3	synth with cache (only 1: compute; only 1: firstorder).	0.943264007568	50
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.1.0	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.442445993423	186
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	2.3.20	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: auto).	13.9950089455	10917
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40	1.1.1.1.1.3.2.1.0.1.2.3	synth with cache (only 1: unfold min_elt, Below; only 1: intros; only 1: rewrite elements_mapsto_iff; only 1: induction (elements m); only 1: discriminate; only 1: destruct a; only 1: injection H; only 1: intros; only 1: subst; only 1: constructor; only 1: red; only 1: auto with ordered_type).	35.3139429092	11299
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	7	synth with cache (only 1: inversion_clear 1).	0.0191688537598	8
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	0.4	synth with cache (only 1: unfold Empty, empty; only 1: constructor).	0.0197072029114	6
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	2.4.4.2	synth with cache (only 1: intros; only 1: induction 1; only 1: discriminate H; only 1: inversion_clear H).	0.952429056168	374
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: clear Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.0808248519897	9
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0172390937805	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto).	0.0177040100098	1
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	1	synth with cache (only 1: auto).	0.0163791179657	2
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	1.2.1.0.17	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: destruct a; only 1: auto).	0.87104511261	1067
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	6.3.1	synth with cache (only 1: intros m; only 1: intuition; only 1: inversion_clear H).	0.336255073547	133
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40	1.50	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	4.01994419098	16038
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40	1.41	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	2.72807979584	5745
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.018707036972	1
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0230619907379	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	37	synth with cache (only 1: now intros []).	0.790704011917	2427
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	1	synth with cache (only 1: auto).	0.0194289684296	2
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	1.0	synth with cache (only 1: intro n; only 1: intuition).	0.0282020568848	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0300691127777	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	5.2	synth with cache (only 1: compute; only 1: firstorder).	0.683803796768	94
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	4.0.17	synth with cache (only 1: vm_compute; only 1: intuition; only 1: Dec.fsetdec).	4.74184918404	2910
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	2.1.17	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	5.45263385773	2718
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.2.0.0.3.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: now destruct 1; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	4.52777290344	817
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	3.3.0.0.1.1.1.0.0.0.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: split; only 1: intuition; only 1: intuition; only 1: intro; only 1: set_iff; only 1: destruct 1; only 1: intuition).	17.1500179768	3953
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.737554073334	79
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40	27.9	synth with cache (only 1: intros Ha Hb; only 1: eauto with set).	12.965490818	14457
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	2.2	synth with cache (only 1: intro H; only 1: auto with set).	0.0378720760345	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	synth with cache (only 1: auto with set).	0.033989906311	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	1.13	synth with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.114232778549	92
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.323964834213	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40	1.2	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.536983966827	106
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.377446889877	36
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set).	0.033460855484	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40	0.0.1.0.0.0.1.0.0.0	synth with cache (only 1: generalize (mem_iff (inter s s') x), (mem_iff s x), (mem_iff s' x), (inter_iff s s' x); only 1: destruct (mem x s); only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (inter s s')); only 1: intuition; only 1: intuition).	8.70970106125	1243
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.2.0	synth with cache (only 1: intro; only 1: rewrite <- not_mem_iff; only 1: auto).	0.455785989761	84
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.065701007843	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	2	synth with cache (only 1: auto with set).	0.032958984375	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	3.4.0.3.4.0.0.3	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	9.35601711273	4072
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	1.0.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0447270870209	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.1.3	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.042986869812	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0318169593811	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	13	synth with cache (only 1: intuition).	0.166254997253	156
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40	16.2.2.3.1	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros; only 1: eauto with set).	10.8184211254	5040
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	4.3.0	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0465610027313	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0379140377045	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0378749370575	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40	0.2	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0961961746216	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	1.3.0.1.16.6.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: split; only 1: apply subset_2; only 1: auto with set; only 1: Dec.fsetdec).	8.46435284615	3111
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set).	0.0342419147491	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0476970672607	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	2	synth with cache (only 1: auto with set).	0.0344018936157	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	4.2.0	synth with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.10383605957	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.039400100708	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.033262014389	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	1	synth with cache (only 1: auto with set).	0.0336239337921	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.033851146698	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set).	0.0339090824127	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0336239337921	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.0333189964294	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: auto with set).	0.0480890274048	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.034343957901	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0411639213562	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0340371131897	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0329749584198	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.0332238674164	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0333459377289	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0334169864655	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0326268672943	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0332229137421	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0333771705627	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	2.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0920081138611	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0326948165894	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0407140254974	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0337619781494	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.0336489677429	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0334520339966	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.0383679866791	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	0.0.0.0.8.11	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto; only 1: auto with set; only 1: auto with set; only 1: auto with set).	16.6888670921	610
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40	0.0.3.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	0.406558990479	201
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	0.0.0.0.0.5.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	7.71139001846	399
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	12	synth with cache (only 1: intuition).	0.278038978577	91
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.1.0.4.2	synth with cache (only 1: destr_bool; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.32979393005	510
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.1.0.2.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.411998033524	115
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	1.0.0.0.1.2.8.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: assumption).	1.38175988197	851
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	8	synth with cache (only 1: auto with set fset).	0.0681431293488	18
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	2	synth with cache (only 1: solve_proper).	0.0477221012115	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	1.0.1.0.0.1	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).	0.0718479156494	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).	0.080148935318	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	1.1.0.2.0.1.0	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: revert H; only 1: intuition).	0.514171123505	153
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.1.4.0.13.1	synth with cache (only 1: intros; only 1: apply filter_2 with s; only 1: auto; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: auto with set; only 1: auto).	10.132778883	5455
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40	0.1.0.3.6	synth with cache (only 1: red; only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.302104949951	115
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40	74	synth with cache (only 1: eauto with *).	0.655336856842	3036
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	8.2	synth with cache (only 1: simpl; only 1: eauto with set).	0.168937921524	108
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	23.3.0	synth with cache (only 1: simpl; only 1: intro n; only 1: eauto with set).	1.47024393082	2334
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.1.0.3.1.0	synth with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.355489015579	105
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.4.2.0	synth with cache (only 1: intros s x; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.556782960892	257
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.1.0.1.0.2.2	synth with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.25826883316	190
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.0.10	synth with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.340558052063	291
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.5.2	synth with cache (only 1: unfold elements; only 1: intros; only 1: case (M.elements s); only 1: firstorder).	0.0652911663055	33
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0.0.0	synth with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: intuition).	0.0527131557465	18
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.1.2.1.0	synth with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.379133939743	198
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.3.0	synth with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	22.9374690056	1263
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.3.4.0	synth with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.62719988823	702
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0365691184998	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.4.10	synth with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.935873985291	426
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.1.1.1.0	synth with cache (only 1: intros s x y; only 1: case (M.add x s); only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0612711906433	20
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.5.4	synth with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.587669849396	183
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.0320749282837	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.3.10.0	synth with cache (only 1: intros; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	3.4271440506	1512
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	synth with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0318601131439	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.1.0	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0330309867859	5
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.3	synth with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0517120361328	37
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.1.0.0	synth with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.786159992218	17
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.2.3.0	synth with cache (only 1: intros; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0499918460846	14
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	synth with cache (only 1: decide equality).	0.0190029144287	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	2.11.2.1.0	synth with cache (only 1: intros; only 1: intros s s'; only 1: intros; only 1: destruct 1; only 1: auto with ordered_type).	1.55312609673	1182
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.0.0.0.0	synth with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.335291862488	6
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	11.0.0.0.0	synth with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: destr_bool).	1.4571480751	1265
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	synth with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0435879230499	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	15	synth with cache (only 1: solve_proper).	2.00712800026	594
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40	0.27	synth with cache (only 1: compute; only 1: intuition).	2.32311010361	2467
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	0.14.2	synth with cache (only 1: intuition; only 1: vm_compute; only 1: eauto with set).	0.750849962234	542
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0978012084961	6
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	0.0.0.0.0.4	synth with cache (only 1: unfold Equal; only 1: split; only 1: apply In_1; only 1: auto; only 1: apply In_1; only 1: auto).	0.0667250156403	10
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	2	synth with cache (only 1: intuition).	0.307307958603	24
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0811879634857	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0398569107056	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0654470920563	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0639998912811	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0545041561127	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	1	synth with cache (only 1: fsetdec).	0.051854133606	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0752189159393	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.0713608264923	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.0956699848175	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0625360012054	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.057608127594	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	1.3.3.1	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	1.20798492432	213
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.176790952682	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0682921409607	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.0938129425049	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.21843791008	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	2	synth with cache (only 1: fsetdec).	0.247179985046	24
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.143359899521	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.149149894714	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.194954872131	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.105085134506	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.341437101364	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	1	synth with cache (only 1: fsetdec).	0.103272199631	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0925550460815	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.122915029526	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.124963998795	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.197062015533	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.110033035278	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.183712005615	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.363381147385	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.32541680336	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	1	synth with cache (only 1: fsetdec).	0.0545189380646	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0540099143982	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.09547996521	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0749640464783	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0736939907074	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.090793132782	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.174294948578	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	0	synth with cache (only 1: fsetdec).	0.0744118690491	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.0962040424347	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0874350070953	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.111248970032	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.155024051666	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.180980920792	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.236030101776	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.22946190834	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.239160060883	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.163947105408	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0674650669098	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0652060508728	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0528190135956	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0545520782471	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0742809772491	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.0765562057495	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.110224962234	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0567698478699	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.12341594696	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.196431159973	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.211122989655	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.195173978806	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	2.0.7	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).	0.340189933777	46
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.5	synth with cache (only 1: expAdd; only 1: fsetdec).	0.19731593132	7
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40	0.3	synth with cache (only 1: expAdd; only 1: fsetdec).	0.314240932465	5
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.495935916901	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.53800702095	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	0.3	synth with cache (only 1: expAdd; only 1: fsetdec).	0.599400997162	15
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40	0.25.18.24.4.54.12	synth with cache (only 1: apply length_zero_iff_nil; only 1: PeanoNat.Nat.bitwise; only 1: unfold PeanoNat.Nat.testbit, PeanoNat.Nat.odd; only 1: Ndec.eqb2eq; only 1: red; only 1: fix odd_spec 1; only 1: auto).	35.948433876	92772
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40	1.12	synth with cache (only 1: fix le_div2 1; only 1: auto).	5.11227488518	1507
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40	0.0.7.3	synth with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	0.229937076569	126
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	16.4.5.0.3.3	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: auto with *; only 1: intro; only 1: intro; only 1: fsetdec).	32.449639082	26677
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40	0.3.0.1.1.2	synth with cache (only 1: intros x y z; only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: auto with *; only 1: auto with *).	0.967594146729	194
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40	5.0.0.0.0.5.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with *).	4.60794401169	1035
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.0.0.0.0.2.9.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.3740401268	2592
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.2.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0410261154175	5
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	1.24.16.5.13.1	synth with cache (only 1: intros; only 1: PeanoNat.Nat.bitwise; only 1: Ndec.eqb2eq; only 1: red; only 1: fix even_spec 1; only 1: auto).	39.2403218746	68353
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.1.1.2	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: fsetdec).	0.0569469928741	8
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	3.5.5.26.3	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: intros; only 1: auto with arith).	19.4276759624	16267
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	27.1	synth with cache (only 1: intros a b H; only 1: intuition).	10.8526411057	9548
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	3.0.0.0.0.0.0.1.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: auto with set).	1.55321121216	471
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	3.2.7.15	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: intuition).	21.9117498398	17329
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	2	synth with cache (only 1: auto with set fset).	0.0705358982086	24
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	0.0.0.0.0.0.5.1.31	synth with cache (only 1: vm_compute; only 1: intuition; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial; only 1: ME.elim_comp; only 1: trivial).	14.2350478172	9677
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0397078990936	4
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0398278236389	4
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	synth with cache (only 1: unfold decidable; only 1: auto).	0.0375480651855	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.277375936508	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	synth with cache (only 1: split; only 1: eauto; only 1: eauto).	0.0498030185699	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	7.3	synth with cache (only 1: intro H; only 1: fsetdec).	0.992640972137	114
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	2.3	synth with cache (only 1: intro H; only 1: fsetdec).	0.0989611148834	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	7.10	synth with cache (only 1: vm_compute; only 1: fsetdec).	3.63078689575	1181
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	22	synth with cache (only 1: fsetdec).	0.583970069885	920
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1	synth with cache (only 1: fsetdec).	0.0787041187286	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	17.0	synth with cache (only 1: intros; only 1: fsetdec).	1.28616309166	602
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	4	synth with cache (only 1: fsetdec).	0.332504034042	20
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	2	synth with cache (only 1: fsetdec).	0.433861970901	12
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	1	synth with cache (only 1: fsetdec).	0.174911022186	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	8.1.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: intuition; only 1: fsetdec).	4.04936790466	571
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	2	synth with cache (only 1: fsetdec).	0.260022163391	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	5	synth with cache (only 1: fsetdec).	0.393618106842	19
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.3.1	synth with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0679988861084	9
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	6	synth with cache (only 1: fsetdec).	0.250195026398	32
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	9.10	synth with cache (only 1: intros x y; only 1: fsetdec).	5.56664609909	2379
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	1	synth with cache (only 1: fsetdec).	0.10841178894	2
Coq.FSets.FMapList.Raw.Elt.empty_1	40	10	synth with cache (only 1: inversion 1).	0.0245718955994	21
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	1	synth with cache (only 1: constructor).	0.0151610374451	2
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	0.17	synth with cache (only 1: fix odd_spec 1; only 1: auto).	6.31504416466	489
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40	3.3.9.2	synth with cache (only 1: intros; only 1: induction 1; only 1: discriminate H; only 1: inversion_clear H).	2.8845140934	1712
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40
Coq.FSets.FMapList.Raw.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0177299976349	1
Coq.FSets.FMapList.Raw.Elt.elements_2	40	0	synth with cache (only 1: eauto with ordered_type).	0.0181109905243	1
Coq.FSets.FMapList.Raw.Elt.elements_3	40	3	synth with cache (only 1: auto).	0.0166800022125	4
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	3.0.0.29	synth with cache (only 1: induction m; only 1: auto; only 1: simpl; only 1: intuition).	4.14225196838	6537
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	0.2.2.0.0.1.2.3	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	0.951889038086	760
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.2.2.0.1.0.2.3	synth with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	4.29320597649	3611
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.2.1.0.0.0.1	synth with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: auto).	0.380131006241	202
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40	0.27	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	7.66149711609	1972
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	5.3.7.2	synth with cache (only 1: intros m; only 1: unfold not; only 1: intuition; only 1: inversion_clear H).	0.693599224091	611
Coq.FSets.FMapList.Make.Elt.is_empty_1	40
Coq.FSets.FMapList.Make.Elt.is_empty_2	40
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40	0.24	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.78478884697	1234
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0	synth with cache (only 1: auto).	0.0198538303375	1
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	synth with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.02339220047	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	0.19.10	synth with cache (only 1: intros a; only 1: destruct a; only 1: auto).	0.584892034531	1422
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	1.1	synth with cache (only 1: intros m; only 1: auto).	0.0236401557922	4
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	1.4.1.6.0	synth with cache (only 1: destr_bool; only 1: revert m; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	1.77852511406	1479
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40	1.24.11	synth with cache (only 1: unfold eq; only 1: fix gcd_divide 1; only 1: eauto using Raw.PX.MO.OrderTac.eq_trans, Raw.PX.MO.OrderTac.eq_sym).	6.89657115936	9524
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	0.22.0	synth with cache (only 1: intros (m3, Hm3); only 1: fix le_div2 1; only 1: auto).	5.63790297508	5484
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	1.14.39.11	synth with cache (only 1: intro; only 1: induction 1; only 1: split; only 1: auto).	6.35272407532	35812
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	1.15	synth with cache (only 1: split; only 1: auto).	0.156237125397	252
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	0.0.4	synth with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with sets).	0.059161901474	23
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.9.4.9.20	synth with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	3.21709990501	17326
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	2.8	synth with cache (only 1: constructor; only 1: trivial).	0.0221521854401	36
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	2.1.5.21.5	synth with cache (only 1: induction 1; only 1: intros; only 1: apply H0; only 1: auto with sets; only 1: auto with sets).	0.878231048584	3433
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	3.1	synth with cache (only 1: red; only 1: auto with sets).	0.0126161575317	6
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	0.8.6.3	synth with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: exact eq_refl).	0.864813089371	882
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40	0.0.0.0.0.0.0.0.0.1.0.21	synth with cache (only 1: induction d; only 1: discriminate; only 1: trivial; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: discriminate).	9.46716594696	10769
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.1.5	synth with cache (only 1: induction d; only 1: discriminate; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.50746488571	829
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.10	synth with cache (only 1: induction d; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	2.30284309387	1877
Coq.Numbers.DecimalFacts.unorm_invol	40	2	synth with cache (only 1: now induction d).	0.0158998966217	3
Coq.Numbers.DecimalFacts.norm_invol	40	4.4.33	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.42698597908	3499
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40	2	synth with cache (only 1: now induction d).	0.0446929931641	3
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.0.0.0.25	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.34744286537	767
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40	6.6	synth with cache (only 1: intuition; only 1: now induction d).	0.91669511795	328
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	synth with cache (only 1: apply of_lu_double_gen).	0.0344278812408	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40	2	synth with cache (only 1: now induction d).	0.0392258167267	3
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	0	synth with cache (only 1: trivial).	0.0297319889069	1
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0.0	synth with cache (only 1: simpl; only 1: auto).	0.0317258834839	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.1	synth with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0462031364441	4
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	13	synth with cache (only 1: now induction d).	13.3722190857	4921
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40	1.2.6	synth with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	0.264086008072	115
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0.0.2	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.0494019985199	6
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40	1	synth with cache (only 1: now induction d).	0.0469539165497	2
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	18	synth with cache (only 1: now induction d).	4.32406997681	2211
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	3.1.0.0.0.32	synth with cache (only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: f_equal; only 1: apply unorm_invol; only 1: now induction d).	4.79428911209	3822
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	18.1.0.8	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Unsigned.of_to).	21.3603129387	9789
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	0	synth with cache (only 1: now induction d).	0.0372898578644	1
Coq.Numbers.DecimalN.Unsigned.of_inj	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.0494108200073	4
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.0.1.0.0.0	synth with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.068384885788	8
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.0.1.4.9	synth with cache (only 1: unfold N.to_int; only 1: unfold norm; only 1: exists (N.of_uint d); only 1: f_equal; only 1: exact (DecimalPos.Unsigned.to_of d)).	7.03218793869	2644
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0416719913483	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.0.7.6.2.7.0	synth with cache (only 1: unfold Z.succ, Z.eq; only 1: intro; only 1: intro m; only 1: simpl; only 1: nzsimpl; only 1: symmetry; only 1: now rewrite H).	36.6858098507	18532
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.0.0.10	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: now nzsimpl).	0.347223043442	204
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.249360084534	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	3.5	synth with cache (only 1: compute; only 1: now nzsimpl).	0.117511034012	18
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.147228002548	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	5.0.0	synth with cache (only 1: unfold Z.eq; only 1: simpl; only 1: reflexivity).	0.0450010299683	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0.0	synth with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.236474990845	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.1.0.0	synth with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.294219970703	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	15.0.0	synth with cache (only 1: intros (n1, n2) (m1, m2); only 1: compute; only 1: now nzsimpl').	5.51418089867	1597
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.1.0.0	synth with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.289144992828	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.374659061432	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.4.0.0	synth with cache (only 1: unfold Z.mul, Z.eq; only 1: simpl; only 1: intro; only 1: now nzsimpl).	0.244785070419	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	2.3.1.0	synth with cache (only 1: intros; only 1: intro H; only 1: apply (neq_succ_0 0); only 1: false_hyp H lt_irrefl).	0.0712170600891	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.4.0	synth with cache (only 1: intros n m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	0.0878789424896	23
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0211479663849	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0188732147217	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0190949440002	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0187299251556	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	1.1.14.0.0	synth with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite even_spec, odd_spec; only 1: now rewrite <- even_spec, even_succ, odd_spec).	21.5840930939	10318
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.1.2.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0933039188385	19
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	1.1.0	synth with cache (only 1: intros; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0483798980713	16
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	2.0.0.0.0.0.2.0.0	synth with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	1.03181791306	447
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0273549556732	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.27.0	synth with cache (only 1: intro n; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl').	14.6114881039	5131
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40	0.2.6.0.0.0.0.0.1.0.1	synth with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply bits_inj; only 1: intros n; only 1: destruct (le_gt_cases 0 n); only 1: now apply H; only 1: now rewrite 2!testbit_neg_r; only 1: intros Ha; only 1: intros; only 1: now rewrite Ha).	5.73007893562	4817
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.2.0.1.0.0.12.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	19.9395489693	8841
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.1.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.407040119171	48
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.428879976273	51
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	1.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0831589698792	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0342218875885	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.2.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: reflexivity).	0.0350880622864	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0341417789459	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.5.1	synth with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0364139080048	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	1.4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0421237945557	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40	0.0.15.0.1	synth with cache (only 1: intros n m p; only 1: bitwise; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: intuition).	2.95450997353	2018
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.2.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0348680019379	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	1.1.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply orb_false_r).	0.0975019931793	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40	5.5.19.13.0	synth with cache (only 1: rewrite <- (pow_0_r 2); only 1: unfold lnot; only 1: nzsimpl; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0).	25.5461969376	15711
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40	0.2.26.3.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	24.4062819481	28975
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	20.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	13.6024339199	7612
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.0.4.0.0	synth with cache (only 1: intro n; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0486538410187	10
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.0.4.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.412010908127	94
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.2.0	synth with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.15789604187	24
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	26.2.0	synth with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	4.63217520714	4606
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	2.0.2.0.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: symmetry; only 1: now f_equiv).	0.741660833359	269
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	0.0670239925385	20
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	2.0.0.0.0.0.2.0.5.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	19.447633028	9315
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.4.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	2.13094091415	905
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.4.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.114071130753	22
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	22.0	synth with cache (only 1: intros n m; only 1: apply abs_nonneg).	6.15169000626	4515
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order || apply lt_0_1; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.172307014465	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.2.0.0.1.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial).	0.15761089325	74
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.7.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial using divide_refl).	0.151693105698	127
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.10.0.0.11.1	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: trivial; only 1: intuition; only 1: trivial).	38.6039597988	19912
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	2.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: unfold lcm; only 1: apply abs_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0709369182587	14
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	3.0.0.0.3.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	8.99891614914	3260
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	6.0.0.0.7.0	synth with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	21.8716790676	8262
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.8.0.0	synth with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.923535823822	304
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.1.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	2.43112397194	763
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	4.48447108269	1236
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	4.0.0.3.4.0.0.2.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	31.2458469868	13475
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.6.0.0.0.4.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	8.74037218094	3512
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.2.0.0.1.0.2.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	25.496325016	5227
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.86960911751	259
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	2.0.1.0.2.0.0.1.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: order; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).	3.1118979454	1290
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	2.2.4.0.0.0.5.1.6.1	synth with cache (only 1: intro n; only 1: split; only 1: intro H; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: tauto; only 1: tauto; only 1: tauto; only 1: intros [H| H]; only 1: order; only 1: order).	34.3524661064	16086
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.1.0.2.0.3	synth with cache (only 1: nzinduct n; only 1: left; only 1: order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.521402835846	264
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.4.0	synth with cache (only 1: intro n; only 1: apply add_le_cases; only 1: now nzsimpl).	0.118860006332	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	0.4.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.0453100204468	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.0.0.0	synth with cache (only 1: intro; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.102344989777	4
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.12.1	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	2.63645195961	2016
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.1.10.0	synth with cache (only 1: intros n m LE; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	1.08947205544	653
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.1.0	synth with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.335072994232	69
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.4.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.370741128922	66
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.5.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	1.05470108986	311
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.2.4	synth with cache (only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.410140991211	91
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	0.11.0	synth with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	1.17997217178	673
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.1.0.1	synth with cache (only 1: unfold sgn; only 1: intro n; only 1: intro H; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0626649856567	20
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.1	synth with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0601658821106	18
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.7.0	synth with cache (only 1: intro; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.498821973801	208
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	2.11	synth with cache (only 1: apply abs_eq; only 1: order).	0.11887717247	78
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	8.3.8.0.4	synth with cache (only 1: pose proof lt_m1_0 as F; only 1: intro; only 1: destruct_max n; only 1: now left; only 1: now right).	16.1501340866	11111
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.18.0	synth with cache (only 1: intro n; only 1: apply abs_eq; only 1: apply abs_nonneg).	4.97077608109	3322
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	synth with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0319671630859	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.3.1.0	synth with cache (only 1: intro n; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0553991794586	9
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	2.2.19	synth with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.460681915283	325
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	1.0.0.1.3.2.0	synth with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: apply opp_neg_pos, lt_0_1).	0.625236988068	295
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.5.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (Quot2Div.mod_bound_pos a b); only 1: auto; only 1: auto; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	1.60456991196	728
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0455021858215	7
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.4.0.0.0.0.0.0.3.2	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: auto).	14.7204370499	7277
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: order).	0.0277760028839	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.1.1.0.0.0.1.0.1.0.0	synth with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	14.9334349632	7200
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.2.1.1.1.4.2.0.2.0	synth with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition; only 1: order; only 1: auto).	30.8660387993	18295
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0250182151794	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0501461029053	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0504529476166	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	0.0.0.0.0.3.5.3	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order || apply lt_0_1; only 1: order || apply lt_0_1; only 1: now nzsimpl).	1.00272488594	862
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.027095079422	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0270750522614	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.1.2.2.3.2.1.0.2.7	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: auto).	19.6868188381	10855
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	synth with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.192744970322	67
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).	0.778491973877	196
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.3.1.0.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: apply div_str_pos; only 1: auto).	0.0752608776093	18
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.3.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: trivial).	0.386070013046	90
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0541179180145	11
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.192283153534	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0360338687897	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.2.1.1.0	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: now apply mul_div_le; only 1: auto).	0.0328729152679	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0434839725494	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	1.2.8.1.2.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	15.285025835	9515
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.1.2.1.1.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	3.82555294037	1684
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.4.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	4.50081396103	1065
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.2.1.1.0.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: rewrite <- neq_mul_0; only 1: intuition).	4.64809298515	1123
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.708842992783	156
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.537060022354	57
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.2.3.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0857241153717	30
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.3.1.1.0.0	synth with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	3.12607312202	924
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.1.2.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.05864906311	413
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.1.0	synth with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0398080348969	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	1.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: symmetry; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: symmetry; only 1: now f_equiv).	0.0497310161591	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	synth with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0228388309479	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	10.0.0.0.6.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	25.3759701252	5991
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.2.8.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	5.73540592194	1568
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	2.0.3.0	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.105864048004	15
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	1.0.1	synth with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.754287004471	101
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.3.0.0	synth with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.157806158066	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	synth with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0297660827637	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.16.0	synth with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	4.5742058754	1244
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.129410982132	41
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.0.2.0.2.0.1.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: rewrite abs_eq; only 1: order; only 1: order; only 1: intuition; only 1: now nzsimpl).	3.87983608246	2186
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	9.0	synth with cache (only 1: intros; only 1: auto using mod_small).	0.742186069489	309
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	3.0.0.0.6.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	5.93625712395	4500
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	0.0.0.0.0.4.1.4	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	1.50716400146	942
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0277919769287	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0278339385986	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.0.1.7.5	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: auto).	1.46160006523	724
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	5.0.0.1.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: auto using div_pos).	0.97905087471	249
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: apply div_str_pos; only 1: auto).	0.134986162186	30
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.4.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.262459993362	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.1.1.0	synth with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.039715051651	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.1.6.0	synth with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: auto).	1.22696900368	473
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	2.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.0455288887024	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.2.0.2.1.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.842922925949	342
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.1.0.1.3.0	synth with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: now nzsimpl; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.89675617218	648
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.2.9.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: auto).	6.60518097878	2845
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.2.1.1.7.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: order; only 1: auto; only 1: rewrite <- neq_mul_0; only 1: split; only 1: order; only 1: order).	7.7080450058	3039
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.2.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.503797054291	43
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.0.9.0	synth with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	2.53945708275	819
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.2.4.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.217772006989	73
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.1.2.1.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	4.33294415474	1025
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40	7.1.0.8.3.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with (a mod b); only 1: now apply mod_always_pos; only 1: nzsimpl; only 1: apply eq_refl).	30.6145942211	13388
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.986338853836	379
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	4.2.0	synth with cache (only 1: intros x y; only 1: intros; only 1: BinInt.Z.order).	0.076593875885	18
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.1.23.0	synth with cache (only 1: intros; only 1: apply Int31_canonic; only 1: apply Zeq_bool_eq; only 1: auto).	2.07221412659	2219
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.4.27	synth with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	2.45674085617	2769
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).	0.0440061092377	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	0	synth with cache (only 1: reflexivity).	0.0332388877869	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40	1.0.0.3.1	synth with cache (only 1: intros n m; only 1: induction n; only 1: trivial; only 1: simpl; only 1: now f_equal).	0.0577700138092	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	0.3.2.3.0.20	synth with cache (only 1: Nat.induct ltac:(n); only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: auto).	39.3518929482	33523
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	0.9	synth with cache (only 1: destruct x; only 1: reflexivity).	7.10253000259	48
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	synth with cache (only 1: reflexivity).	0.0333020687103	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	0.1.0.0.0.0.0	synth with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0623550415039	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.1.0.0.0	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0610580444336	6
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).	0.0448548793793	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40	0.6	synth with cache (only 1: destruct x; only 1: reflexivity).	2.05094003677	12
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0	synth with cache (only 1: destruct x; only 1: reflexivity).	0.0435390472412	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40	5.1.0.4	synth with cache (only 1: destruct x; only 1: intro H; only 1: injection H; only 1: auto).	12.4755671024	243
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40	0.14.2	synth with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: reflexivity).	2.09735989571	591
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	0.1.2.1	synth with cache (only 1: split; only 1: auto; only 1: intros E; only 1: trivial).	0.0548570156097	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.0.0	synth with cache (only 1: simpl; only 1: intro; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.05157995224	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	0.4.4	synth with cache (only 1: Bool.destr_bool; only 1: destruct x; only 1: reflexivity).	0.107497930527	43
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40	1.0.1	synth with cache (only 1: destruct x; only 1: simpl; only 1: auto).	1.05853819847	5
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	3	synth with cache (only 1: auto with zarith).	0.102508068085	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	0	synth with cache (only 1: reflexivity).	0.0391759872437	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0	synth with cache (only 1: auto with zarith).	0.0416939258575	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	0	synth with cache (only 1: reflexivity).	0.0384638309479	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	synth with cache (only 1: reflexivity).	0.0385439395905	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	0.0	synth with cache (only 1: simpl; only 1: reflexivity).	0.061203956604	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	1	synth with cache (only 1: trivial).	0.0539889335632	17
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	7.7	synth with cache (only 1: destruct x; only 1: apply phi_phi_inv).	1.45326781273	659
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0457630157471	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.0.2	synth with cache (only 1: unfold sub31c, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.0944488048553	18
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	16.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	31.9634840488	8183
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.5.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply spec_sub_c).	0.462997913361	27
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	synth with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0985589027405	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	synth with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0462970733643	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.1.0.0.0.0	synth with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.072674036026	8
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	8.3	synth with cache (only 1: destruct x; only 1: apply Zeq_is_eq_bool).	0.987551927567	495
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40	4.12.9	synth with cache (only 1: red; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.900743961334	582
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	synth with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0508041381836	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0	synth with cache (only 1: auto with zarith).	0.0333769321442	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.1.0.0.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: Z.order; only 1: auto with zarith).	0.0628440380096	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.3.0.0	synth with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.219713926315	26
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	0.0	synth with cache (only 1: intros x y; only 1: trivial).	0.0390779972076	2
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.8.0.0	synth with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.408557891846	179
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	4.1.0.0	synth with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0773530006409	15
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40	16.9.7.0.0	synth with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	24.1868197918	23419
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	0.0	synth with cache (only 1: intros; only 1: trivial).	0.0440368652344	2
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	1.2.7.12	synth with cache (only 1: intros x; only 1: rewrite !two_p_equiv; only 1: symmetry; only 1: auto).	7.61276197433	7039
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40	0.0.6	synth with cache (only 1: compute; only 1: intros x ->; only 1: apply spec_zdigits).	1.28413820267	13
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	2	synth with cache (only 1: tauto).	0.0339210033417	3
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	9.41016197205	1652
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	0.0719480514526	12
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.0	synth with cache (only 1: intros LT; only 1: Z.order_nz).	0.0472540855408	2
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1	synth with cache (only 1: discriminate).	0.0405900478363	2
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.0	synth with cache (only 1: red; only 1: reflexivity).	0.0398051738739	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	synth with cache (only 1: reflexivity).	0.0361258983612	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	synth with cache (only 1: exact eq_refl).	0.0361671447754	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	19	synth with cache (only 1: congruence).	0.385703086853	165
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.13.0	synth with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	1.6145298481	705
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	1.0.0.0.0.0.45	synth with cache (only 1: compute; only 1: intros; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	8.93228912354	15632
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.12.0	synth with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	1.34125900269	690
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	17.4.3.2	synth with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: now rewrite H).	3.31765699387	3200
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	4	synth with cache (only 1: apply sub_spec).	0.0394630432129	5
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	synth with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0386071205139	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.1	synth with cache (only 1: intros E; only 1: now rewrite E).	0.0478999614716	3
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	1.0.0.0.0.0.0	synth with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0846080780029	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	synth with cache (only 1: reflexivity).	0.0362050533295	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.1.1	synth with cache (only 1: intro; only 1: subst; only 1: apply negb_involutive).	0.0511608123779	5
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	synth with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.049546957016	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	synth with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0496680736542	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0608079433441	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	2.0.0.0	synth with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0611169338226	6
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.11	synth with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.359014034271	229
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40	2.9.16.6.12	synth with cache (only 1: assert (R : forall n, 0 = n <-> n = 0) by (intros; split; apply Z.eq_sym); only 1: intros n m; only 1: generalize 1%positive as acc; only 1: fix sqrtrem_spec 1; only 1: auto).	23.5936701298	20052
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: zify; only 1: Z.nzsimpl; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	0.167442083359	10
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	12.1.0.0.0.0.2	synth with cache (only 1: split; only 1: red; only 1: intros; only 1: now reflexivity; only 1: red; only 1: easy; only 1: congruence).	10.705083847	5970
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.0.0.1.0.2.3.7	synth with cache (only 1: unfold base; only 1: transitivity 1; only 1: Z.order'; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	1.6701169014	844
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	5.0.2.0.0.0.23	synth with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: now Z.nzsimpl; only 1: split; only 1: intros H1; only 1: discriminate; only 1: apply gt_wB_1).	7.03748607635	3371
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.0	synth with cache (only 1: zify; only 1: reflexivity).	0.0607318878174	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	synth with cache (only 1: auto).	0.0342471599579	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.0.0.0	synth with cache (only 1: intro; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0777430534363	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.0.0	synth with cache (only 1: intros a; only 1: zify; only 1: reflexivity).	0.0634560585022	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	synth with cache (only 1: reflexivity).	0.0305600166321	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	synth with cache (only 1: reflexivity).	0.0313639640808	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	synth with cache (only 1: reflexivity).	0.0319340229034	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	10.15.0	synth with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	24.5292570591	22025
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.2.15.0	synth with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	10.3029069901	8453
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.2.0	synth with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.012757062912	5
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40	0.0.8.0.0.2.0.1.4	synth with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: apply le_0_l; only 1: intro H; only 1: apply neq_succ_0).	13.8553669453	7590
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.2.0.4.9	synth with cache (only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	4.11110305786	3242
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40	10.1.3.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: apply lt_0_succ).	3.69893407822	1840
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.1.0.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0285491943359	6
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	2.2.0.0.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	0.0431950092316	11
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	1.1.4.0	synth with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.089653968811	50
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.2.1.0.2.7.13	synth with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: order).	38.222976923	39152
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.1.0.1.0.6.2	synth with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite lt_succ_r; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	4.34588694572	3254
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	0.1.0.0.2.0.1	synth with cache (only 1: intro n; only 1: intro H; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H1; only 1: now apply H; only 1: now nzsimpl').	0.25882101059	119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.2.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0528881549835	17
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.16.2	synth with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: apply le_0_l; only 1: assumption).	14.1728749275	10481
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.9.1	synth with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	1.17153787613	689
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0233609676361	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0198330879211	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.12.1.3.0.1.2.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: apply (lt_irrefl n); only 1: order'; only 1: now nzsimpl').	12.4370479584	12249
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.0.11.2.4	synth with cache (only 1: intro; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	2.61786484718	2119
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0185270309448	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	synth with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0185739994049	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.20.1	synth with cache (only 1: intros x y H; only 1: apply mod_mul; only 1: auto'; only 1: auto').	32.4788811207	12379
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.2.0.0	synth with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.10586810112	38
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.22.0.0	synth with cache (only 1: intros n m; only 1: intro H; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	24.0450780392	22844
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.2.0.5.0	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	1.77442193031	819
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.1.0.2	synth with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.666520118713	83
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	2.1.1.1.2.2.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	8.45663094521	4831
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.14.0	synth with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	5.45730400085	2874
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	3.3.2.0.0.1	synth with cache (only 1: intros n m p Hp; only 1: intro H; only 1: apply div_mul_cancel_r; only 1: apply le_0_l; only 1: auto'; only 1: auto').	1.78662395477	1036
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: order; only 1: order).	0.0415470600128	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.0.0.0.0.1.0.1.2.3.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	4.59096002579	2549
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.0.1.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: order; only 1: order; only 1: order; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	2.86602306366	1313
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	4.0.0.4.0	synth with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	1.51870894432	657
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.10.0	synth with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.42217612267	825
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.0.7.0	synth with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.522320985794	246
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.5.5.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.81329393387	1676
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.17.0	synth with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	7.85799002647	4270
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.5.0	synth with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0358378887177	11
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.1.4.7.0	synth with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	2.63814401627	1450
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.0.1.4.1.4.0	synth with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	2.45799994469	1161
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	synth with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0216090679169	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	0.2.7.3.2.2.2	synth with cache (only 1: intro n; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: now apply eq_le_incl; only 1: apply lt_1_2).	1.65021300316	2074
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.4.0.10.10	synth with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: now exists n).	3.44514489174	4073
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.2.0.2	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.294641017914	143
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	0.0.1.1.0.0.0	synth with cache (only 1: intros H1 H2 H3; only 1: induct ltac:(n); only 1: auto; only 1: intros n IH; only 1: induct ltac:(m); only 1: auto; only 1: auto).	0.0442991256714	15
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.21	synth with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.295809984207	271
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	0.0.1.6.2.10	synth with cache (only 1: unfold even; only 1: intro; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	1.54761695862	1720
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	8.24	synth with cache (only 1: compute in *; only 1: now rewrite recursion_0).	28.2628779411	586
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.2.5.14	synth with cache (only 1: unfold half; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	5.03382706642	3040
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	1.0.0.0.0.12.2	synth with cache (only 1: intro n; only 1: unfold pow; only 1: intro; only 1: rewrite recursion_succ; only 1: auto with *; only 1: auto with *; only 1: f_equiv').	32.1694040298	3914
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.7.0	synth with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.407524824142	180
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.2.2.0.2.0.2.0.5.0	synth with cache (only 1: intros n m p q H1 H2; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: now apply le_0_l; only 1: now apply lt_le_incl; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	8.42173314095	6468
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	7	synth with cache (only 1: simpl_relation).	0.0264391899109	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	1.0.1.0.0.1.3.1.0	synth with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now constructor).	2.32246899605	1351
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	2.2.0	synth with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0206370353699	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.3.2.4.1	synth with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	2.39390993118	371
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0463798046112	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	synth with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0145559310913	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	1.7.2	synth with cache (only 1: intro H; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.468800067902	209
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.3.8.0	synth with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.887387990952	446
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0502889156342	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0516910552979	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	1.0.0	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0584299564362	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0238611698151	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.0	synth with cache (only 1: intros; only 1: bitwise; only 1: reflexivity).	0.0244998931885	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0243549346924	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.10.0	synth with cache (only 1: intros; only 1: bitwise; only 1: destr_bool).	0.533409833908	170
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.4.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	0.0280148983002	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.025074005127	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.0.0	synth with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0239109992981	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40	1.24.0.2	synth with cache (only 1: intro n; only 1: bitwise; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: intuition).	33.8996181488	21275
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.0.2.0	synth with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.101392030716	31
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.1.0.0.0.1.1.1.0.0	synth with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: assumption; only 1: assumption).	3.7410941124	1789
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.2.0.0.8	synth with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.831162929535	703
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	0.1.0.0.0.0	synth with cache (only 1: intro n; only 1: apply sqrt_unique' with 0; only 1: split; only 1: now apply eq_le_incl; only 1: apply le_0_l; only 1: now nzsimpl).	0.0491011142731	7
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	0.6.0.0.1.1.0.0	synth with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.68389320374	1942
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	1.0.1.0.0.0.1.0.0	synth with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite pred_succ; only 1: now rewrite <- even_spec, even_succ, odd_spec).	1.73853588104	580
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.1.3.0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.269829034805	58
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40	0.4.0.1.7.0.0	synth with cache (only 1: intro n; only 1: intro H; only 1: nzinduct n; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	16.1532158852	6117
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.9.0	synth with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	5.30729579926	1783
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	17.1	synth with cache (only 1: intros n m; only 1: apply lt_lt_add_r).	32.4537510872	11052
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	0.0.0.1.0	synth with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.0460457801819	19
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.1.0.0.0.0.2.5.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l; only 1: apply le_0_l).	19.8791120052	3588
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0490670204163	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.1.9.1	synth with cache (only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	0.964997768402	223
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.53736495972	1267
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40	3.4.5.2	synth with cache (only 1: intros a b Ha Hb; only 1: apply pow_eq_0 with b; only 1: apply le_0_l; only 1: order).	3.02198910713	2121
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.21.0	synth with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: assumption).	16.0600829124	12933
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.3.2.7	synth with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	8.83085203171	6093
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40	0.2.0.7.0.1.0	synth with cache (only 1: intros; only 1: assert (H' : b <= c) by order; only 1: destruct (le_exists_sub _ _ H') as (d, (EQ, Hd)); only 1: apply pow_lt_mono_r; only 1: trivial; only 1: apply le_0_l; only 1: trivial).	5.7197701931	2379
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	1.5.0.1.6.3.3	synth with cache (only 1: intros a b c Ha H; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	13.5531980991	8410
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	5.45972108841	1568
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.2.0.0.1.0.0.2.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order).	36.4935131073	12065
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	0.0.0.3.0.0.0.2.0.0	synth with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	9.2793700695	1618
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	2.02697396278	293
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	0.0.0.4.0.0.0.3.0.0	synth with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	15.1678440571	2928
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	2	synth with cache (only 1: firstorder).	0.0146450996399	3
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	1.1.1.3.0.0	synth with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: rewrite strong_rec0_0; only 1: destruct (nlt_0_r _ Hm)).	7.13070106506	97
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1.0	synth with cache (only 1: intro n; only 1: intro H; only 1: apply divide_mul_l, divide_refl).	0.0209951400757	4
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	32.2	synth with cache (only 1: intro n; only 1: apply mul_0_l).	3.02871894836	4991
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.2.0.0.1.0.2	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.703735113144	264
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.0.0.14.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists n; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1).	3.02137899399	1642
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.052521944046	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intro n; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: exists 1; only 1: now nzsimpl'; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_refl).	0.159425973892	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	1.0.8.1.0.4.0	synth with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: auto; only 1: exists 1; only 1: now nzsimpl'; only 1: trivial using divide_refl).	6.24740505219	3641
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40	8.2.2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: rewrite add_comm; only 1: apply add_sub).	4.04524588585	1376
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40	8.2.1	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: apply add_sub).	16.9746479988	3520
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40	0.5.13.13	synth with cache (only 1: intro E; only 1: assert (E' : Some n = Some n'); only 1: now rewrite <- (Signed.of_to n), <- (Signed.of_to n'), E; only 1: now injection E').	4.43964600563	4157
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40	8.0.0.4	synth with cache (only 1: destruct d; only 1: simpl; only 1: now induction d; only 1: now induction d).	2.0636279583	652
Coq.Numbers.DecimalZ.of_inj	40	2.1.11.0	synth with cache (only 1: intros H; only 1: rewrite <- !Unsigned.to_of; only 1: f_equal; only 1: auto).	1.34161615372	921
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.8.1.3.18	synth with cache (only 1: apply sqrt_unique; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: apply lt_succ_diag_r).	1.29383206367	822
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.7.8.1	synth with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	3.33583211899	1776
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.1.21.0	synth with cache (only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn0; only 1: order'; only 1: now nzsimpl).	2.48883104324	1337
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.0.0	synth with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.586345911026	229
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.3.0.25.9.0	synth with cache (only 1: intro n; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: now nzsimpl').	12.4695031643	11459
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	2.0.1.2.5.3.1	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	2.40240216255	1588
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.0.3.2.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl').	0.634299993515	156
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	1.0.0.0	synth with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: apply lt_le_incl, lt_0_1).	0.0232131481171	5
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.0.0	synth with cache (only 1: intros; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0236480236053	6
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.3.7.0.0.0.0.0	synth with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	20.2896008492	11732
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0743060112	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	2.1.0.0.1.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.543778896332	109
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0347700119019	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.5.5.1	synth with cache (only 1: Bool.destr_bool; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.63403010368	1115
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0991950035095	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.11.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	6.88729906082	1697
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.113379955292	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0367698669434	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40	30.3.7	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: firstorder).	21.4110400677	19187
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.21.1.0	synth with cache (only 1: intro; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	11.3533668518	9769
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.2.0	synth with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	1.65883302689	449
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.5.0.0.0	synth with cache (only 1: intros n m; only 1: intros LT EQ; only 1: eapply Private_OrderTac.Tac.lt_irrefl; only 1: rewrite EQ in LT; only 1: eauto).	0.0277059078217	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	1.1.0	synth with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto).	0.0224571228027	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0228168964386	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0248761177063	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0227210521698	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0247118473053	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	synth with cache (only 1: order).	0.0616998672485	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	synth with cache (only 1: order).	0.0415539741516	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	6	synth with cache (only 1: order).	0.163697004318	90
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.8.0	synth with cache (only 1: intros; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.080803155899	47
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	0.5.6.0	synth with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	1.6739988327	631
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.6.0	synth with cache (only 1: intros n m LE; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0241079330444	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.0	synth with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0274720191956	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.15.1	synth with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.349408864975	358
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.5.1.0.1	synth with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.158778905869	106
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	4.0.0.8.0	synth with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	5.97707605362	3005
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	1.0.1.0	synth with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.308948993683	83
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.2.1.4.0	synth with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intros [?| ?]; only 1: intuition order; only 1: intuition order).	3.49456906319	1404
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	1.6.8.0	synth with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	8.58051300049	8434
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	2.1.0	synth with cache (only 1: intro n; only 1: Bool.destr_bool; only 1: intuition order).	0.542750835419	112
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	synth with cache (only 1: intuition order).	0.0166831016541	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.029657125473	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	1.3.8.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	5.11387705803	3298
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	synth with cache (only 1: intuition order).	0.0166671276093	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	synth with cache (only 1: intuition order).	0.0175819396973	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.0.0	synth with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0326211452484	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.1.1.0.0	synth with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.243835926056	32
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.4.0.0.2.0.1	synth with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	8.21667790413	5145
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40	41.2	synth with cache (only 1: intros RS' n; only 1: order).	1.1443939209	4083
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	4.17.2	synth with cache (only 1: intro H; only 1: compute; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	22.2652180195	5443
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	0.1.0.7.7	synth with cache (only 1: intros P z Hz IH x Hxz; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	1.03297805786	555
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	10	synth with cache (only 1: solve_proper).	0.0343890190125	22
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	0.0.2	synth with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	0.0312879085541	14
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.6	synth with cache (only 1: fix le_div2 1; only 1: now unfold ofnat).	0.0691220760345	29
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40	1.3.6.6	synth with cache (only 1: intro n; only 1: fix even_spec 1; only 1: intro m; only 1: trivial).	29.5474610329	5053
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40	1.0.10	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: trivial).	0.159087181091	214
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40	0.1.14	synth with cache (only 1: fix gcd_divide 1; only 1: intros a b; only 1: auto).	2.31018996239	1263
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0576708316803	2
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	1.0.0.1.0.8.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro H; only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	10.9459769726	7146
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0287668704987	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.5.0.9.0	synth with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	2.0083770752	1061
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.101994037628	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	synth with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0289487838745	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.24408698082	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	1.1.1.1.1.0.0.0	synth with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	4.50687503815	1182
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.11.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	3.35602021217	1174
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.2.0	synth with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0723750591278	19
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.0.6.0	synth with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.397028207779	126
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.178219079971	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	1.0.0.0.0.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.120929956436	7
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.2.3.0.0.6.5.5	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl'; only 1: intro; only 1: rewrite <- le_succ_l; only 1: rewrite <- le_succ_l; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	19.3616712093	10533
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40	0.2.3.0.0.6.4.5	synth with cache (only 1: intros z n H; only 1: nzinduct n; only 1: now nzsimpl'; only 1: intro; only 1: rewrite <- le_succ_l; only 1: rewrite <- le_succ_l; only 1: nzsimpl; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	32.7766749859	15150
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0360250473022	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	synth with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.160501003265	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	2.3.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.119666814804	10
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	4.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.122624158859	11
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.1.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0657460689545	6
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0.0.0.0	synth with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0930449962616	5
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.0.0.9.0	synth with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	10.7626919746	2375
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.11.0.1.0.13.15	synth with cache (only 1: rewrite one_succ; only 1: apply log2_unique' with 0; only 1: order; only 1: split; only 1: order; only 1: order_pos; only 1: now nzsimpl).	3.28985881805	2633
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	5.2.10.0.1.0.22.4	synth with cache (only 1: rewrite two_succ; only 1: apply log2_unique' with 0; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl').	39.2771120071	24119
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.1.9.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.794929027557	537
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.4.0.0.0.0	synth with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order_pos; only 1: order).	0.0482091903687	17
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	1.20	synth with cache (only 1: apply log2_up_eqn0; only 1: order).	2.02552986145	1096
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.0.1.0.0	synth with cache (only 1: split; only 1: intros; only 1: firstorder; only 1: intros; only 1: firstorder).	0.0238790512085	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	4.1	synth with cache (only 1: intros; only 1: firstorder).	0.0192859172821	7
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	1.0.1.0.1.1	synth with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: symmetry; only 1: now f_equiv).	0.103399991989	54
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	6.14646983147	1403
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.11.0.0.0	synth with cache (only 1: intros n m p H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	7.18926692009	2753
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.1.0.7.0.1	synth with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intro; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	12.3529520035	4770
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0367259979248	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0310878753662	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	synth with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.028815984726	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	23.0	synth with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	3.48907184601	2186
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	6.0	synth with cache (only 1: Bool.destr_bool; only 1: intuition).	0.0176680088043	8
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	4	synth with cache (only 1: now symmetry).	0.022745847702	12
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	synth with cache (only 1: auto with *).	0.012748003006	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	4	synth with cache (only 1: eauto using eq_trans, eq_sym).	5.89662504196	40
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.1.5.2.0	synth with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: auto; only 1: intuition).	1.26172709465	777
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.0.2	synth with cache (only 1: intros x y; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.295292854309	150
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	2.25.10	synth with cache (only 1: intros (y, H); only 1: fix sqrtrem_spec 1; only 1: auto).	13.6957468987	17059
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.0.4	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.0665509700775	37
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	10	synth with cache (only 1: intuition).	0.673923969269	191
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	4.17.2	synth with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	3.10473608971	1626
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	6.6.4	synth with cache (only 1: intros n m H1 H2; only 1: apply (Z.lt_irrefl 0); only 1: Nat.order).	1.55315995216	940
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	2.0	synth with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0592141151428	12
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	synth with cache (only 1: Z.order).	0.034558057785	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	0.18.11	synth with cache (only 1: induction x; only 1: compute; only 1: intuition).	1.16466903687	2245
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.4.2	synth with cache (only 1: induction 1; only 1: red; only 1: auto with ordered_type).	0.0768530368805	23
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	3.7.0.31.0	synth with cache (only 1: intros x y z; only 1: unfold eq; only 1: intuition auto; MO2.OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: MO1.order; only 1: MO2.order).	20.9947459698	22536
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40	0.6.3	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: vm_compute; only 1: intuition eauto with ordered_type).	0.463376998901	193
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40	0.35.1	synth with cache (only 1: intros (x1, x2); only 1: fix sqrtrem_spec 1; only 1: intuition).	39.9721848965	12706
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	0.31.8	synth with cache (only 1: intros n; only 1: fix sqrtrem_spec 1; only 1: eauto).	19.6512238979	23888
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	synth with cache (only 1: apply Pos.eq_dec).	0.0308759212494	1
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	4.0.2	synth with cache (only 1: split; only 1: tauto; only 1: Bool.destr_bool).	0.0421669483185	25
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.0.15	synth with cache (only 1: constructor; only 1: eauto; only 1: eauto).	0.491704940796	494
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.2.1	synth with cache (only 1: induction 1; only 1: red; only 1: auto).	0.0812430381775	28
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40	2.3.6.1.0.3.2	synth with cache (only 1: induction x; only 1: induction y; only 1: destruct z; only 1: unfold eq; only 1: intuition; only 1: eauto; only 1: eauto).	34.0920228958	10597
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	17.2.2.1	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	1.9503660202	2420
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	3.6	synth with cache (only 1: apply eqb_eq; only 1: firstorder).	0.123988866806	59
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	9.19.7.10.22.5	synth with cache (only 1: constructor; only 1: repeat red; only 1: firstorder; only 1: auto with *; only 1: repeat red; only 1: apply Logic.eq_trans).	11.5394420624	27990
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	5.0.0.0.1.14.1	synth with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.875535011292	1134
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.0	synth with cache (only 1: split; only 1: auto; only 1: auto).	0.0241889953613	3
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	2	synth with cache (only 1: order).	1.01792001724	3
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0229737758636	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.025141954422	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	2	synth with cache (only 1: order).	0.0763211250305	22
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	1	synth with cache (only 1: order).	0.01802277565	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.2.1.1	synth with cache (only 1: destruct (compare x y); only 1: order; only 1: order; only 1: auto).	0.0478219985962	12
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	1	synth with cache (only 1: order).	0.0191140174866	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	synth with cache (only 1: order).	0.0184719562531	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	synth with cache (only 1: order).	0.0177590847015	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	4.0	synth with cache (only 1: intro H; only 1: order).	0.0379199981689	18
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	synth with cache (only 1: order).	0.0179679393768	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	synth with cache (only 1: order).	0.0179550647736	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	synth with cache (only 1: order).	0.0175709724426	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	synth with cache (only 1: order).	0.0171399116516	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.943662881851	264
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.12775397301	314
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40	3.5.0.4.8	synth with cache (only 1: intros; only 1: destruct (compare x y); only 1: auto; only 1: auto with ordered_type; only 1: auto with ordered_type).	1.72592282295	865
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	3.38	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	29.5844509602	31955
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	0.2.1.0.0.0.1	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto with ordered_type).	0.266007900238	93
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	0.0.1.0.3	synth with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0429201126099	17
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	2.4.1.3	synth with cache (only 1: simple induction l; only 1: auto; only 1: intros x y z; only 1: auto with ordered_type).	0.909644842148	261
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.1	synth with cache (only 1: induction 1; only 1: auto).	0.0207140445709	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0	synth with cache (only 1: auto).	0.0158228874207	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	synth with cache (only 1: auto).	0.0154421329498	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	2	synth with cache (only 1: firstorder).	0.0187029838562	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	1	synth with cache (only 1: auto with ordered_type).	0.0153880119324	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	3.4.0	synth with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: intuition).	0.029669046402	10
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	2.0	synth with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0306980609894	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	9.2.5.1	synth with cache (only 1: intros x y z; only 1: unfold eqk, eqke; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.60029411316	1362
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	0	synth with cache (only 1: eauto with ordered_type).	0.0213639736176	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	3.1	synth with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0231440067291	6
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	2.3.3.4.0	synth with cache (only 1: unfold eqk, ltk; only 1: intros x y H; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	1.55475711823	895
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.5.1.1.2	synth with cache (only 1: constructor; only 1: auto with ordered_type; only 1: firstorder; only 1: red; only 1: eauto with ordered_type).	0.659384965897	210
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.1	synth with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.192728996277	5
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.3.10.14.16.1	synth with cache (only 1: split; only 1: red; only 1: compute; only 1: intros; only 1: order; only 1: eauto with ordered_type).	4.95897603035	7902
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	synth with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0198061466217	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0182490348816	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	synth with cache (only 1: eauto with ordered_type).	0.0182018280029	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.0.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	0.0331768989563	6
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	5.6.0.0.1	synth with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	2.07395982742	1218
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	5.6.0.0.5	synth with cache (only 1: destruct l; only 1: auto; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	4.97185897827	1617
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.0.9.1	synth with cache (only 1: inversion_clear 1; only 1: destruct 1; only 1: auto; only 1: auto).	0.605767965317	255
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.1.0.5	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.104846000671	52
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.7	synth with cache (only 1: case compare_spec; only 1: easy; only 1: discriminate; only 1: intro H; only 1: easy).	0.155246973038	124
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	0.0.0.0.0.1.0.0.0.0.0.1.2.1.0.0.0.0.0.4	synth with cache (only 1: apply imp_iff_compat_r; only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: easy).	30.4069139957	24767
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	synth with cache (only 1: apply compare_eq_iff; only 1: intuition).	0.0164980888367	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	5.4.2.2.2	synth with cache (only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	38.0493750572	894
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	9.0	synth with cache (only 1: compute; only 1: iorder).	0.192898035049	127
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	6.2	synth with cache (only 1: repeat red; only 1: iorder).	0.065758228302	48
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	synth with cache (only 1: iorder).	0.0175650119781	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.5.1.0.0	synth with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	1.39049601555	206
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	7	synth with cache (only 1: iorder).	0.0682060718536	48
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	3.2	synth with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0398061275482	14
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.2	synth with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0236518383026	5
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.0	synth with cache (only 1: intro H; only 1: order).	0.0487148761749	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0238261222839	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0211341381073	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	5.2	synth with cache (only 1: intro H; only 1: order).	1.88502788544	20
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	2	synth with cache (only 1: order).	1.01442623138	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	synth with cache (only 1: order).	1.01390600204	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	2	synth with cache (only 1: order).	1.01362299919	3
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0218749046326	5
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	2.1	synth with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0228850841522	5
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	5.2	synth with cache (only 1: intro H; only 1: order).	1.88182616234	17
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	5	synth with cache (only 1: order).	0.102464914322	61
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	synth with cache (only 1: order).	0.0148420333862	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	synth with cache (only 1: intuition).	0.0161318778992	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	synth with cache (only 1: order).	0.0139129161835	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	synth with cache (only 1: order).	0.0141100883484	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	synth with cache (only 1: order).	0.0141639709473	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	synth with cache (only 1: order).	0.0138909816742	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	synth with cache (only 1: order).	0.013396024704	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	1.1.0.6.3.3.1.4	synth with cache (only 1: split; only 1: repeat split; only 1: order; only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: intuition; only 1: intuition).	12.3408858776	10779
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	1.2	synth with cache (only 1: unfold lt; only 1: auto with *).	0.0804929733276	49
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	1.0	synth with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0160698890686	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	9.5	synth with cache (only 1: apply compare_eq_iff; only 1: firstorder).	0.0971369743347	130
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	1.7	synth with cache (only 1: apply imp_iff_compat_r; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0525670051575	27
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	1.9	synth with cache (only 1: apply imp_iff_compat_r; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.137518882751	89
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.1.0.19	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: intuition; only 1: now constructor).	27.2618770599	18899
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.3.17	synth with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	1.53966379166	953
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.3.12.7	synth with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: destr_bool; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	1.81271004677	2604
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.1.3.0.0.8.6	synth with cache (only 1: case leb_spec0; only 1: destr_bool; only 1: apply ltb_ge; only 1: trivial; only 1: destr_bool; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	14.2884428501	9119
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.4.3	synth with cache (only 1: intros l x y H H'; only 1: subst; only 1: auto).	0.145382165909	24
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	6.2.1.0.1.2	synth with cache (only 1: simple induction l; only 1: firstorder; only 1: simpl; only 1: intuition; only 1: subst; only 1: firstorder).	2.17687106133	1391
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	1.22	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	6.80058097839	4185
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	0.2.17	synth with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: trivial).	2.3026740551	1790
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.1.0.2	synth with cache (only 1: simple induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0396690368652	8
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	12.1.8	synth with cache (only 1: induction l; only 1: auto; only 1: intuition).	2.34469795227	1859
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40	0.22	synth with cache (only 1: fix le_div2 1; only 1: auto).	2.11620092392	2335
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	21	synth with cache (only 1: eauto with *).	5.64707303047	4123
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	9	synth with cache (only 1: eauto with *).	0.0293049812317	10
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	1.0.0	synth with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0368571281433	4
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	synth with cache (only 1: now intros <-).	0.0328800678253	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	3	synth with cache (only 1: firstorder).	0.0205059051514	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	synth with cache (only 1: auto).	0.0167701244354	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	1	synth with cache (only 1: auto).	0.0175790786743	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	0.8	synth with cache (only 1: destruct 1; only 1: auto).	0.0360279083252	17
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0.2	synth with cache (only 1: destruct 1; only 1: auto).	0.0227570533752	4
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	synth with cache (only 1: auto).	0.0166699886322	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	synth with cache (only 1: auto).	0.0178928375244	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	0	synth with cache (only 1: auto).	0.0164449214935	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.3.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	0.0371849536896	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	1.2.0	synth with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0366868972778	6
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.10.3	synth with cache (only 1: firstorder; only 1: rewrite <- H; only 1: auto).	0.50211596489	238
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.7	synth with cache (only 1: firstorder; only 1: inversion_clear H).	0.256300926208	73
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	8	synth with cache (only 1: now intros <-).	0.039057970047	12
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	synth with cache (only 1: now intros <-).	0.0311110019684	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	1.1.8.10	synth with cache (only 1: induction 1; only 1: inversion_clear H; only 1: eauto; only 1: eauto).	3.75774097443	1889
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	0.1.3.4	synth with cache (only 1: intro; only 1: invlist InA; only 1: now destruct 1; only 1: eauto).	0.3314640522	50
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.1.3.3	synth with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder; only 1: auto).	0.311199903488	43
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	1.22.11	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: auto).	7.47881221771	7824
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40	1.20.10	synth with cache (only 1: intro n; only 1: fix le_div2 1; only 1: auto).	2.7363409996	3511
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	0.0	synth with cache (only 1: induction 1; only 1: auto).	0.0223798751831	2
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	0	synth with cache (only 1: auto).	0.0165379047394	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	synth with cache (only 1: auto).	0.016891002655	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	1.0	synth with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0202059745789	3
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	0.2.0	synth with cache (only 1: unfold eqk, eqke; only 1: induction 1; only 1: auto).	0.0273640155792	5
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	9.10	synth with cache (only 1: intuition; only 1: eauto).	1.07673406601	801
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	8.0.0.2	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: eauto).	0.74406003952	272
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.1	synth with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0469131469727	5
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.1.2.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	0.646856784821	7
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.2.5	synth with cache (only 1: intuition; only 1: rewrite <- H; only 1: auto).	0.0745000839233	18
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	0.41	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	12.1576390266	21862
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.6.2	synth with cache (only 1: inversion 1; only 1: intuition; only 1: auto).	0.264282226562	41
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.1.2.3	synth with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto).	0.0744099617004	27
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	6.12.3.17	synth with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: now transitivity m).	1.84991002083	2517
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40	1.0.1.0.1.0.0.0.1.2.20.2.1.0.1	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: compute; only 1: pose proof (compare_sym x x) as H; only 1: destruct (x ?= x); only 1: simpl in *; only 1: easy; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: easy; only 1: red; only 1: apply compare_trans).	22.640707016	35894
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	0.2	synth with cache (only 1: unfold eq, lt, compare; only 1: decide equality).	0.0257411003113	4
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.5.0.0.0.0.1.3.0.0.1.0.0	synth with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	22.4797241688	13499
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.133807182312	105
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	2.35471010208	1444
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	6.6	synth with cache (only 1: apply max_r; only 1: order).	0.0749130249023	79
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	0.1.0.1.25	synth with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	4.45229005814	3621
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	synth with cache (only 1: solve_max).	0.0180501937866	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	0.3.6.2	synth with cache (only 1: repeat red; only 1: destruct (max_spec n m); only 1: intuition order; only 1: intuition).	1.4798309803	821
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	synth with cache (only 1: solve_max).	0.0748999118805	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.7.0.3.2.6	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	12.8995158672	4396
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	1.4.8	synth with cache (only 1: pose proof (max_spec n m) as Hm; only 1: repeat red; only 1: intuition order).	4.17843294144	1261
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	1.1.1.0.1.1.0.1.0	synth with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	2.00716900826	687
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	9	synth with cache (only 1: solve_max).	0.13271689415	41
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	synth with cache (only 1: solve_max).	0.0198941230774	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	3	synth with cache (only 1: solve_max).	0.0961470603943	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2	synth with cache (only 1: solve_max).	0.129480838776	48
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	2	synth with cache (only 1: solve_max).	0.0217390060425	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0	synth with cache (only 1: solve_max).	0.0352468490601	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.1	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0329968929291	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	1.2.4	synth with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0964951515198	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.16	synth with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	23.2074410915	13894
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	1.8	synth with cache (only 1: apply min_l; only 1: order).	0.0235040187836	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	synth with cache (only 1: solve_min).	0.0187220573425	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	5	synth with cache (only 1: solve_min).	0.262479066849	46
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	1	synth with cache (only 1: solve_min).	0.0226759910583	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	1.1.0.0.1.0.0.0.0.7	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: order).	7.49260187149	4348
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.0.0.0.0.0.9	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	12.1641850471	6107
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.0.8	synth with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	14.1893491745	2462
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	5	synth with cache (only 1: solve_min).	0.0474829673767	22
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	synth with cache (only 1: solve_min).	0.0205190181732	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	3.3	synth with cache (only 1: intros Hnm Hpq; only 1: solve_min).	0.0285539627075	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	5	synth with cache (only 1: solve_min).	0.235445022583	61
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	3	synth with cache (only 1: solve_min).	0.0222039222717	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1	synth with cache (only 1: solve_min).	0.0361151695251	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	1.0.0	synth with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0335130691528	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.4.0.0.1	synth with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.0481190681458	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	2.0.1.0.2	synth with cache (only 1: destruct (min_spec m n) as [(H, E)| (H, E)]; only 1: apply max_r || apply max_l; only 1: solve_min; only 1: apply max_r || apply max_l; only 1: solve_min).	0.0737102031708	34
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.1.0.1.1	synth with cache (only 1: destruct (min_spec n m) as [(C, E)| (C, E)]; only 1: apply min_r || apply min_l; only 1: solve_max; only 1: apply min_r || apply min_l; only 1: solve_max).	0.0419988632202	8
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	2.3.0.0.0.0.2.3.0.0.1.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	12.3512980938	8008
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40	1.1.0.1.0.0.1.1.1.0.1.0	synth with cache (only 1: intros Eqf Lef x y; only 1: destruct (max_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (min_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	6.98655080795	4051
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.0.7.0	synth with cache (only 1: intros x y z; only 1: apply max_mono; only 1: eauto with *; only 1: auto).	0.105979204178	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.21	synth with cache (only 1: apply min_mono; only 1: eauto with *).	1.02069783211	1176
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.8.6.11	synth with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: induction 1; only 1: auto with relations).	5.40597701073	5814
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0215380191803	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0224859714508	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.8.9	synth with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	0.792922019958	805
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.2.0	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0210919380188	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	synth with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.0224850177765	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	14.2	synth with cache (only 1: intros n m; only 1: congruence).	0.995315074921	862
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.0	synth with cache (only 1: unfold eq, lt; only 1: decide equality).	0.0315299034119	3
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.0.0.1.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct n as [| [| n]]; only 1: trivial; only 1: trivial; only 1: trivial).	0.0576560497284	11
Coq.ZArith.Znat.N_nat_Z	40	0.1.0.0.0.0.6.0.0.19	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	2.6250679493	1953
Coq.ZArith.Znat.positive_nat_Z	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0482420921326	8
Coq.ZArith.Znat.positive_N_Z	40	0	synth with cache (only 1: now destruct p).	0.0254590511322	1
Coq.ZArith.Znat.positive_N_nat	40	0	synth with cache (only 1: trivial).	0.0220410823822	1
Coq.ZArith.Znat.positive_nat_N	40	0.1.0.0.0.0.0	synth with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.047278881073	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.9	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.083554983139	50
Coq.ZArith.Znat.Z_nat_N	40	0.0.1.0.0.0.0.0.0.0.12	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	1.55183696747	913
Coq.ZArith.Znat.Zabs_N_nat	40	0	synth with cache (only 1: now destruct n).	0.0253438949585	1
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.2.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.394853115082	184
Coq.ZArith.Znat.N2Z.id	40	1	synth with cache (only 1: now destruct n).	0.024974822998	2
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	2.0.4.0	synth with cache (only 1: split; only 1: apply N2Nat.inj; only 1: symmetry; only 1: now Morphisms.f_equiv).	0.357460975647	154
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.12.83	synth with cache (only 1: destruct n; only 1: discriminate; only 1: easy).	16.4525129795	37155
Coq.ZArith.Znat.N2Z.inj_0	40	2	synth with cache (only 1: reflexivity).	0.0241231918335	3
Coq.ZArith.Znat.N2Z.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0225780010223	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.1.0.0.1	synth with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0761258602142	21
Coq.ZArith.Znat.N2Z.inj_le	40	3.0.2.2.0.0.6	synth with cache (only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: easy'; only 1: easy'; only 1: easy'; only 1: simpl; only 1: intuition).	36.0074858665	15038
Coq.ZArith.Znat.N2Z.inj_lt	40
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40	8.17	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	8.17861413956	3192
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0	synth with cache (only 1: now destruct n, m).	0.0273458957672	1
Coq.ZArith.Znat.N2Z.inj_mul	40	0	synth with cache (only 1: now destruct n, m).	0.0275189876556	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.7	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0845079421997	24
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.0.5.0.1.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	0.488943099976	244
Coq.ZArith.Znat.N2Z.inj_pred	40	12.0.5.14.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p).	16.0798308849	9488
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.0.11.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial).	2.71510696411	1670
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	synth with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.04021692276	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0597169399261	10
Coq.ZArith.Znat.Z2N.id	40	1.0.0.1	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.042680978775	6
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0	synth with cache (only 1: split; only 1: now apply Z2Pos.inj; only 1: intros; only 1: now f_equal).	0.0388839244843	4
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0278840065002	2
Coq.ZArith.Znat.Z2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0241599082947	1
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.028510093689	2
Coq.ZArith.Znat.Z2N.inj_add	40	1.3	synth with cache (only 1: intros; only 1: now destruct n, m).	0.308786869049	6
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.1	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	3.69755005836	568
Coq.ZArith.Znat.Z2N.inj_succ	40	5.0.1.0.0.0.0.0	synth with cache (only 1: intro H; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	7.48343706131	1788
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.3.0.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.0607178211212	9
Coq.ZArith.Znat.Z2N.inj_compare	40	4	synth with cache (only 1: now destruct n, m).	0.226446151733	60
Coq.ZArith.Znat.Z2N.inj_le	40	3.1.1	synth with cache (only 1: intros; only 1: unfold N.le, N.ge; only 1: now rewrite N2Z.inj_compare).	0.0776379108429	36
Coq.ZArith.Znat.Z2N.inj_lt	40	1.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold N.lt, N.gt; only 1: now rewrite N2Z.inj_compare).	0.0369539260864	4
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.0.0.0.2.0.0.1	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: trivial).	3.49973106384	896
Coq.ZArith.Znat.Z2N.inj_quot2	40	2.2.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0575940608978	17
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0533509254456	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	6.2	synth with cache (only 1: intros; only 1: now destruct n).	0.0748980045319	17
Coq.ZArith.Znat.Zabs2N.id_abs	40	0.0.0.1.15	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial).	1.02369499207	396
Coq.ZArith.Znat.Zabs2N.id	40	0	synth with cache (only 1: now destruct n).	0.0266699790955	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0242490768433	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	synth with cache (only 1: trivial).	0.0226860046387	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.022243976593	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0526549816132	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.0.0.1.0.2.0	synth with cache (only 1: unfold Z.succ; only 1: destruct n; only 1: trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: now destruct 1).	0.763807058334	192
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	3.66888809204	714
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	3.2.0.6.2.1	synth with cache (only 1: destruct n; only 1: easy; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: now destruct p; only 1: easy).	37.9160370827	11978
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	synth with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.108790159225	44
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0372769832611	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0355131626129	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.1.0.0.0.2	synth with cache (only 1: destruct n; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct p).	0.178056955338	46
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	9	synth with cache (only 1: now destruct n, m).	1.15978693962	158
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	synth with cache (only 1: now destruct n, m).	0.031121969223	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0238127708435	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	5.0.0.3	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.367208957672	130
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0.1.2.6.0.1.1.0	synth with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: clear IHn; only 1: induction n; only 1: Z.order'; only 1: trivial).	1.35002207756	823
Coq.ZArith.Znat.Nat2Z.id	40	0.0.0.0	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0358111858368	4
Coq.ZArith.Znat.Nat2Z.inj	40	19.1	synth with cache (only 1: intros H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	1.4272608757	882
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros; only 1: now subst).	0.0388860702515	5
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	7.16	synth with cache (only 1: unfold Z.le; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	9.55224394798	7464
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40	6.19	synth with cache (only 1: unfold Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	3.04165911674	2075
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.1.0.5.0.0	synth with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	4.3467900753	1688
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0395669937134	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0.0	synth with cache (only 1: split; only 1: apply N2Nat.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: now f_equal).	0.0479300022125	6
Coq.ZArith.Znat.Z2Nat.inj_0	40	1	synth with cache (only 1: trivial).	0.023225069046	2
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0234179496765	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.023148059845	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	synth with cache (only 1: now destruct n).	0.0256941318512	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0	synth with cache (only 1: intros; only 1: now destruct n).	0.0306198596954	2
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.1.0.0.0.0.0.1.0.0.0.15	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	6.46211886406	3889
Coq.ZArith.Znat.Zabs2Nat.id	40	0.0.0.1	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0367338657379	5
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	synth with cache (only 1: reflexivity).	0.0230531692505	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	synth with cache (only 1: reflexivity).	0.0227379798889	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	synth with cache (only 1: reflexivity).	0.0227961540222	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0344250202179	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	synth with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0337331295013	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	2.2.0.0.20	synth with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	1.77559304237	757
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	2.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0838091373444	13
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	0.0.3.2.5.0.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	7.33753299713	2889
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40	1.0.0.1.0.1.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: discriminate; only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: intros Hx; only 1: now destruct Hx).	16.5446698666	6299
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	synth with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0406908988953	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	36.188254118	8341
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.4.3.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.42876791954	212
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.143688201904	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	synth with cache (only 1: intros x y H; only 1: now rewrite H).	0.041748046875	2
Coq.ZArith.Zquot.Zquot_0_r	40	0.0.0.20.22	synth with cache (only 1: compute; only 1: destruct a; only 1: trivial; only 1: trivial; only 1: trivial).	4.64813899994	4049
Coq.ZArith.Zquot.Zrem_0_r	40	10	synth with cache (only 1: now destruct a).	0.129595041275	44
Coq.ZArith.Zquot.Zrem_0_l	40	0	synth with cache (only 1: now destruct a).	0.0304300785065	1
Coq.ZArith.Zquot.Zquot_0_l	40	1	synth with cache (only 1: now destruct a).	0.0295870304108	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.0.2.0	synth with cache (only 1: intros Ha Hb; only 1: apply Z.rem_bound_pos; only 1: auto; only 1: auto).	0.785446882248	118
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0.0.0.0	synth with cache (only 1: rewrite <- Z.rem_opp_r'; only 1: intros; only 1: apply Z.rem_bound_pos; only 1: auto; only 1: rewrite ?Z.opp_pos_neg; only 1: auto).	0.0654330253601	6
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	1.7.2.0.1	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intro H; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	18.9052951336	4049
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.4.0	synth with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.662370920181	116
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0563271045685	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40	0.0.2.12.0.3.0	synth with cache (only 1: intros; only 1: rewrite (Z.mul_comm c b); only 1: zero_or_not b; only 1: rewrite Z.mul_comm; only 1: apply Z.quot_mul_cancel_r; only 1: auto; only 1: auto).	8.75211787224	4611
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	1.0.5	synth with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	0.0852298736572	48
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	0.4.1	synth with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.0486822128296	17
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	6	synth with cache (only 1: constructor).	0.0382549762726	19
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.0.0.0.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0505309104919	7
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40	0.0.12.3.0.0	synth with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: constructor; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	3.12051701546	2570
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40	5.32	synth with cache (only 1: fix le_div2 1; only 1: trivial).	21.1671149731	39808
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.025985956192	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0	synth with cache (only 1: reflexivity).	0.0257320404053	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.024218082428	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	3.3	synth with cache (only 1: intros n m; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.943288087845	48
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	2.0.0.0.3.0.28.14.10	synth with cache (only 1: intros n H H1; only 1: apply H; only 1: destruct n; only 1: discriminate; only 1: destruct p; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: assumption).	21.3982679844	34401
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40	3.0.4.21	synth with cache (only 1: intros Hz; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	7.39545512199	5887
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0	synth with cache (only 1: reflexivity).	0.0263521671295	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	23.5	synth with cache (only 1: intros n Hn; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	6.51968216896	4023
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40	0.2.0.2.0.0.1.0.2.0.0.4.0	synth with cache (only 1: destruct z; only 1: simpl; only 1: now destruct 1 || trivial; only 1: unfold bit_value; only 1: destruct p; only 1: reflexivity; only 1: tauto || (intro H; elim H); only 1: reflexivity; only 1: unfold bit_value; only 1: destruct p; only 1: reflexivity; only 1: tauto || (intro H; elim H); only 1: reflexivity).	29.8107049465	14907
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40	1.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.339083909988	161
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.15	synth with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.700946092606	152
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.0.0.5	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.128429889679	58
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	9	synth with cache (only 1: now destruct n).	0.0726289749146	18
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	synth with cache (only 1: now destruct n).	0.027752161026	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	synth with cache (only 1: now destruct n).	0.0270981788635	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.9	synth with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.299741029739	141
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.0221178531647	1
Coq.ZArith.BinInt.Z.two_succ	40	0	synth with cache (only 1: reflexivity).	0.0227699279785	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	synth with cache (only 1: now destruct n).	0.0239880084991	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0256659984589	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.0.3.0.1.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	2.4592730999	1062
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	synth with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0298900604248	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	synth with cache (only 1: now destruct n).	0.0237219333649	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	synth with cache (only 1: now destruct n).	0.0238389968872	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0	synth with cache (only 1: reflexivity).	0.0199658870697	1
Coq.ZArith.BinInt.Z.compare_le_iff	40	0	synth with cache (only 1: reflexivity).	0.0198340415955	1
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	0.2.1.3.5.0	synth with cache (only 1: unfold le, max; only 1: rewrite N.compare_antisym; only 1: case N.compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).	2.83558106422	1666
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.1.0.3.0.0	synth with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case N.compare_spec; only 1: trivial; only 1: intuition; only 1: auto).	0.114823102951	36
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	3.9	synth with cache (only 1: intro H; only 1: now destruct n).	0.614585876465	109
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.039764881134	5
Coq.ZArith.BinInt.Z.sgn_null	40	1.0	synth with cache (only 1: intros H; only 1: now destruct n).	0.322558879852	3
Coq.ZArith.BinInt.Z.sgn_pos	40	4.6	synth with cache (only 1: intros; only 1: now destruct n).	1.31176996231	229
Coq.ZArith.BinInt.Z.sgn_neg	40	0	synth with cache (only 1: now destruct n).	0.0308828353882	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	synth with cache (only 1: now destruct n).	0.0252630710602	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.0.0.12.1.1	synth with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: intros; only 1: simpl; only 1: destr_eq H; only 1: now destruct 1 || intros _).	8.4535779953	3676
Coq.ZArith.BinInt.Z.pow_pos_fold	40	3.0	synth with cache (only 1: simpl; only 1: trivial).	0.9408390522	87
Coq.ZArith.BinInt.Z.square_spec	40	1.0.0.1.0.0.0.5	synth with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	1.44570302963	270
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	0	synth with cache (only 1: now destruct n).	0.0287690162659	1
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.5.0.0.1	synth with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	2.39265394211	586
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	synth with cache (only 1: now destruct n).	0.0256130695343	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	6.1	synth with cache (only 1: simpl; only 1: reflexivity).	0.156038045883	16
Coq.ZArith.BinInt.Z.succ_double_spec	40	2	synth with cache (only 1: now destruct n).	0.127128124237	3
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	synth with cache (only 1: now destruct n).	0.02552485466	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.2	synth with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.173672914505	45
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.2.2.0.0.0.0	synth with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.595119953156	163
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	synth with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	32.1646251678	13591
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.7.3	synth with cache (only 1: intros; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: (specialize (IH p'); destruct Pos.lxor; trivial; now rewrite <- IH) || now destruct Pos.testbit).	34.6425280571	18190
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.1.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: simpl; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.370880126953	144
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.131859064102	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	2.2.0.22	synth with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.982065200806	740
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	synth with cache (only 1: now destruct n).	0.0334799289703	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	3	synth with cache (only 1: now destruct a).	0.0276720523834	4
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	7	synth with cache (only 1: apply N.gt_lt_iff).	0.0844490528107	20
Coq.ZArith.BinInt.Z.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0359990596771	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	10	synth with cache (only 1: apply N.ge_le_iff).	0.347785949707	47
Coq.ZArith.BinInt.Z.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0356240272522	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40	16	synth with cache (only 1: apply N.mul_cancel_l).	1.25797390938	558
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.19	synth with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	1.79031515121	1075
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	0.0.1	synth with cache (only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl).	0.288101911545	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.4.0.1.0.0.0.0.21	synth with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: apply testbit_true; only 1: trivial; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	39.1822121143	14578
Coq.ZArith.BinInt.Pos2Z.id	40	0.0.0.0.0.1	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: exact eq_refl).	0.0658090114594	7
Coq.ZArith.BinInt.Pos2Z.inj	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0384469032288	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).	0.0459291934967	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	3.0.2.0	synth with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.059935092926	9
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	2.0.1.1	synth with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: rewrite <- Pos.add_1_r; only 1: easy).	0.060399055481	8
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	synth with cache (only 1: exact eq_refl).	0.03972697258	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0454761981964	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0462830066681	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	3.2	synth with cache (only 1: simpl; only 1: now destruct p).	0.0548260211945	7
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.046003818512	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	2.0.1.1.2	synth with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: intros H; only 1: now destruct H).	0.744427919388	286
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0.0	synth with cache (only 1: simpl; only 1: trivial).	0.0458869934082	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	15	synth with cache (only 1: now apply Pos.iter_swap_gen).	0.326172828674	175
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0.0	synth with cache (only 1: simpl; only 1: now apply Pos.iter_swap_gen).	0.0477380752563	2
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	synth with cache (only 1: trivial).	0.0406639575958	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0	synth with cache (only 1: trivial).	0.0395750999451	1
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	3	synth with cache (only 1: trivial).	0.04918384552	12
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	synth with cache (only 1: reflexivity).	0.0400140285492	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	synth with cache (only 1: reflexivity).	0.0400860309601	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	synth with cache (only 1: trivial).	0.0402181148529	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	synth with cache (only 1: reflexivity).	0.0410940647125	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	1.2.0.1.0.5	synth with cache (only 1: destruct n as [| n| n]; only 1: intro Hn; only 1: simpl; only 1: now destruct a; only 1: easy; only 1: now destruct 1 || intros _).	1.94935894012	861
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0380699634552	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).	0.0455389022827	3
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	synth with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0377221107483	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0	synth with cache (only 1: split; only 1: now injection 1 || (intros; now f_equal); only 1: now injection 1 || (intros; now f_equal)).	0.0453860759735	3
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	synth with cache (only 1: reflexivity).	0.0413777828217	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	synth with cache (only 1: easy).	0.0470230579376	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	synth with cache (only 1: reflexivity).	0.0409832000732	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	synth with cache (only 1: easy).	0.0457320213318	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	19	synth with cache (only 1: now f_equal).	1.1174800396	791
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	synth with cache (only 1: easy).	0.0423069000244	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	1.0.2.5.0.3	synth with cache (only 1: assert (le0 : forall n, (0 <= n)%nat) by (induction n; auto); only 1: assert (leS : forall n m, (n <= m)%nat -> (S n <= S m)%nat) by (induction 1; auto); only 1: red; only 1: intros H; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	2.65998506546	990
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	0	synth with cache (only 1: auto).	0.040314912796	1
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0539178848267	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	synth with cache (only 1: reflexivity).	0.0411801338196	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	synth with cache (only 1: reflexivity).	0.0410718917847	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	synth with cache (only 1: reflexivity).	0.0407531261444	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	synth with cache (only 1: reflexivity).	0.0411069393158	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0	synth with cache (only 1: trivial).	0.0410149097443	1
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	synth with cache (only 1: reflexivity).	0.0403790473938	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	synth with cache (only 1: reflexivity).	0.0410509109497	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	synth with cache (only 1: trivial).	0.0412049293518	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	synth with cache (only 1: reflexivity).	0.0410001277924	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	synth with cache (only 1: reflexivity).	0.0405368804932	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.0.0.0.0.1.0	synth with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: unfold Z.testbit; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.0798017978668	8
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	synth with cache (only 1: apply Z.testbit_Zpos).	0.0629189014435	18
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	8	synth with cache (only 1: now destruct x).	0.381478786469	21
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	synth with cache (only 1: exact eq_refl).	0.0435810089111	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	4	synth with cache (only 1: now destruct x).	0.210521936417	51
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	synth with cache (only 1: now destruct x).	0.0505669116974	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.4.1.2.0.0	synth with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: intro n; only 1: now destruct p; only 1: trivial).	1.29990506172	362
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.100222826004	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	1.1.2.4	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.437453985214	80
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.199728965759	32
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0974631309509	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0957489013672	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	4	synth with cache (only 1: now destruct x).	0.0450828075409	5
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	synth with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.195006132126	42
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.1	synth with cache (only 1: intros n1 n2 H; only 1: now f_equal).	0.0468881130219	3
Coq.ZArith.BinInt.ZL0	40	0.2	synth with cache (only 1: simpl; only 1: reflexivity).	0.044095993042	4
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5.0	synth with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl).	0.608120918274	43
Coq.ZArith.BinInt.Z_eq_mult	40	1.3.3.0	synth with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: Z.nzsimpl; only 1: trivial).	0.233839035034	43
Coq.ZArith.Zcomplements.floor_gt0	40	0	synth with cache (only 1: easy).	0.0290820598602	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	2.2.8.2	synth with cache (only 1: destruct n as [| p| p]; only 1: now try destruct p; only 1: now try destruct p; only 1: now try destruct p).	0.892948865891	398
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	1	synth with cache (only 1: auto).	0.0265100002289	2
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.2.0.0.0.0.2.0.0.0.5	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	14.4992358685	7517
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.7	synth with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	18.2292900085	9267
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	1.0.0.1.0.0.1.0.1.2.1.0.0.4	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: tauto; only 1: auto; only 1: auto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto; only 1: auto).	13.7752130032	7491
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.2.0.0.0.0	synth with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	18.0207839012	7101
Coq.ZArith.Zeven.Zeven_not_Zodd	40	6.7.0.0.6.0	synth with cache (only 1: intros H; only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: now destruct p; only 1: now destruct p).	26.7708470821	15607
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.1.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.045077085495	13
Coq.ZArith.Zeven.Zeven_Sn	40	4.4.2.3	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	3.10954999924	1437
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	4.4.2.1	synth with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	3.04114413261	1288
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	2.4	synth with cache (only 1: intros; only 1: now destruct n as [| [| | ]| [| | ]]).	0.729668140411	64
Coq.ZArith.Zeven.Zodd_div2	40	8.3.4.0	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [| | ]| [| | ]]).	13.8059010506	4516
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	1.0.0.0	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.590564966202	15
Coq.ZArith.Zeven.Zodd_quot2	40	3.1.1.0	synth with cache (only 1: boolify_even_odd; only 1: intros a H; only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	0.172746181488	49
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.2.0.0	synth with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: simpl; only 1: now destruct n as [| [| | ]| [| | ]]).	0.901614904404	137
Coq.ZArith.Zeven.Zquot2_opp	40	1.0.0.1.5.1.0.0.1.1.1.2.8.22.4	synth with cache (only 1: Z.bitwise; only 1: f_equal; only 1: Z.bitwise; only 1: destruct n as [| n| n]; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: destruct n as [| n| n]; only 1: trivial; only 1: trivial; only 1: trivial).	38.6693878174	23613
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	5.2	synth with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.199349880219	9
Coq.ZArith.Zeven.Zodd_ex	40	0.2.3.1.2	synth with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	1.64117002487	351
Coq.ZArith.Zeven.Zeven_2p	40
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	5.1.4.0.26	synth with cache (only 1: destruct p; only 1: simpl; only 1: tauto; only 1: reflexivity; only 1: now destruct p).	3.46010708809	2519
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	6.6.3.4.3.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	3.33053207397	2484
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.1.0.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0452489852905	6
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	4.1.0.1	synth with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.710513114929	10
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	6	synth with cache (only 1: apply Z.divide_opp_r).	0.084107875824	32
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	4	synth with cache (only 1: apply Z.divide_opp_l).	0.0684969425201	36
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	3	synth with cache (only 1: apply Z.divide_abs_l).	0.0581641197205	28
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	5.2	synth with cache (only 1: intro H; only 1: Z.order).	0.0962190628052	62
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	12.3	synth with cache (only 1: intros a b; only 1: firstorder).	1.76771092415	404
Coq.ZArith.Znumtheory.Zis_gcd_0	40	22	synth with cache (only 1: firstorder).	0.739162921906	1098
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.8.12.5	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	2.5992269516	1932
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.1.1.5	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: trivial).	0.407751083374	44
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.1.2.2	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: trivial; only 1: intuition).	0.0725100040436	18
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.1.1.1.0	synth with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.074863910675	8
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.2.0.0.0.0.0	synth with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.146325111389	32
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40	1.1.7	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: now apply Z.gcd_greatest).	0.148368120193	130
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.0.1	synth with cache (only 1: simple induction 1; only 1: constructor; only 1: trivial; only 1: trivial; only 1: intuition).	0.0836651325226	15
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.1.1.1	synth with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: trivial).	0.220841169357	18
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.0.4	synth with cache (only 1: induction 1; only 1: destruct 1; only 1: auto).	0.307285070419	52
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.1.7.13	synth with cache (only 1: simple induction 1; only 1: intros; only 1: contradict H; only 1: discriminate).	0.259419202805	347
Coq.ZArith.Znumtheory.not_prime_1	40	0.0.5.8	synth with cache (only 1: simple induction 1; only 1: intros; only 1: contradict H; only 1: discriminate).	0.736012935638	350
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	1.12	synth with cache (only 1: intros (m, H); only 1: now apply (Zlt_le_succ 1)).	0.6092441082	248
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.0.8	synth with cache (only 1: fix gcd_greatest 1; only 1: intros n m p H H'; only 1: now apply Z.gcd_greatest).	1.25709700584	138
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0506949424744	3
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.0.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0411219596863	6
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0	synth with cache (only 1: intros; only 1: Z.bitwise; only 1: trivial).	0.0494470596313	3
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.0	synth with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0399079322815	7
Coq.ZArith.Zdiv.Zmod_1_r	40	19.0	synth with cache (only 1: intros; only 1: now Z.nzsimpl).	5.89377903938	2621
Coq.ZArith.Zdiv.Zdiv_1_r	40	4.1.1.0	synth with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl').	0.123131036758	17
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.2.0.0.2	synth with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	0.0882349014282	19
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.2.1.0	synth with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: trivial).	0.0438590049744	7
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.6	synth with cache (only 1: intros n m H; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.131541013718	44
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0401980876923	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0395300388336	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0397429466248	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	9	synth with cache (only 1: congruence).	0.0543940067291	34
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	1.0	synth with cache (only 1: intros; only 1: now rewrite <- ?Z.add_le_mono_r).	0.0369210243225	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	4.7	synth with cache (only 1: unfold eqm; only 1: eauto using Z.Private_OrderTac.Tac.eq_trans, Z.Private_OrderTac.Tac.eq_sym).	0.654889822006	246
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40	14.0.0.9.9.5	synth with cache (only 1: split; only 1: split; only 1: unfold eqm; only 1: red; only 1: auto; only 1: now unfold eqm; intros a b c ->).	26.114207983	12576
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	2.0.8	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: easy).	0.330482006073	252
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	14.8.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	8.79042410851	5151
Coq.ZArith.Zdiv.Zeven_mod	40	13.26.0	synth with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	25.2736251354	28729
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.4.0	synth with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	1.69990992546	241
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.2.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: zero_or_not c; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.mod_add; only 1: trivial).	0.0881071090698	16
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	synth with cache (only 1: intros a b Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.260887145996	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.1.13.0	synth with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: Z.order'; only 1: now destruct b).	2.63286089897	839
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.2.1.2	synth with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0785279273987	19
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	2.0.3	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0651619434357	21
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	2.0.2	synth with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0637159347534	22
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.4.18.21	synth with cache (only 1: intros; only 1: Z.swap_greater; only 1: Z.destruct_max n; only 1: auto; only 1: auto).	21.8128700256	21227
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.10	synth with cache (only 1: induction n; only 1: auto; only 1: auto; only 1: auto).	0.298491001129	238
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40	0.66.18	synth with cache (only 1: unfold Z.lt, Z.gt; only 1: unfold Z.le, Z.min; only 1: decide equality).	6.20558786392	14598
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	2.2	synth with cache (only 1: intros; only 1: auto).	0.0321011543274	6
Coq.ZArith.Int.Z_as_Int.i2z_0	40	2	synth with cache (only 1: reflexivity).	0.0282318592072	3
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	synth with cache (only 1: exact eq_refl).	0.027617931366	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	2	synth with cache (only 1: now Z.nzsimpl').	0.0900130271912	3
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	synth with cache (only 1: reflexivity).	0.0284020900726	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	2.2	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.579088926315	51
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	6	synth with cache (only 1: trivial).	0.0312080383301	7
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	1.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.0449209213257	3
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	1.1	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.0469071865082	4
Coq.ZArith.Int.Z_as_Int.i2z_max	40	1.0	synth with cache (only 1: Z.bitwise; only 1: trivial).	0.0448849201202	3
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	1	synth with cache (only 1: trivial).	0.026985168457	2
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	synth with cache (only 1: reflexivity).	0.0271391868591	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	synth with cache (only 1: reflexivity).	0.0270659923553	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	synth with cache (only 1: reflexivity).	0.0290830135345	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	2.0.0.2	synth with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0473709106445	8
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	1	synth with cache (only 1: now subst).	0.0284321308136	2
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	2.0	synth with cache (only 1: simpl; only 1: trivial).	0.0359950065613	4
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	2.0.2.0.0	synth with cache (only 1: destruct n; only 1: trivial; only 1: destruct n; only 1: trivial; only 1: trivial).	0.326608896255	31
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	2	synth with cache (only 1: apply two_power_pos_equiv).	0.0306859016418	3
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	0.0.3.4.1.11	synth with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: now try destruct p; only 1: simpl; only 1: easy).	3.37563896179	2209
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40
Coq.ZArith.auxiliary.Zle_left	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0276679992676	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	synth with cache (only 1: apply Z.le_0_sub).	0.0284688472748	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	synth with cache (only 1: apply Z.lt_0_sub).	0.028379201889	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	2	synth with cache (only 1: apply Z.lt_0_sub).	0.0281050205231	3
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.10	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.0773119926453	33
Coq.ZArith.auxiliary.Zgt_left	40	0.0.0.0.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.918353796005	78
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0504488945007	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0500619411469	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	2.0.4.0.0.3.2.0	synth with cache (only 1: unfold Z.le, Z.max; only 1: intros H; only 1: case Z.compare_spec; only 1: symmetry; only 1: auto; only 1: now destruct m; only 1: intros Hab; only 1: auto).	2.59434485435	1451
Coq.ZArith.Zmax.Zpos_max_1	40	2.1.1.8	synth with cache (only 1: destruct p; only 1: trivial; only 1: trivial; only 1: now Z.nzsimpl').	0.308965921402	133
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	21	synth with cache (only 1: now destruct p).	0.229290008545	209
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.2.0.1.1	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: right; only 1: auto).	0.697713136673	257
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.2	synth with cache (only 1: intro H; only 1: Z.order).	0.219482898712	37
Coq.ZArith.Zorder.Zlt_not_le	40	0.3	synth with cache (only 1: intro H; only 1: Z.order).	0.223655939102	50
Coq.ZArith.Zorder.Zle_not_gt	40	0.2.3	synth with cache (only 1: intro H; only 1: Z.swap_greater; only 1: Z.order).	0.109289884567	33
Coq.ZArith.Zorder.Zgt_not_le	40	1.4	synth with cache (only 1: intro H; only 1: auto).	0.0841379165649	21
Coq.ZArith.Zorder.Znot_ge_lt	40	0.16	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.829504013062	339
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0440649986267	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	synth with cache (only 1: trivial).	0.0270230770111	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0433719158173	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	0.2.2	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.358827114105	36
Coq.ZArith.Zorder.Zgt_irrefl	40	2.5.6	synth with cache (only 1: Z.swap_greater; only 1: intros H; only 1: Z.order).	0.268671035767	136
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	1.5.1	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.251202106476	17
Coq.ZArith.Zorder.Zle_gt_trans	40	3.5.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order).	0.776016950607	122
Coq.ZArith.Zorder.Zgt_le_trans	40	5.2	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0566208362579	9
Coq.ZArith.Zorder.Zge_trans	40	4.2	synth with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0622408390045	8
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0547580718994	5
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0500750541687	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	synth with cache (only 1: apply Z.succ_le_mono).	0.0284638404846	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	synth with cache (only 1: apply Z.succ_lt_mono).	0.0289249420166	1
Coq.ZArith.Zorder.Zgt_succ	40	2.28	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.310336112976	486
Coq.ZArith.Zorder.Znot_le_succ	40	3.0.4.3	synth with cache (only 1: intro H; only 1: apply H; only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.281041145325	141
Coq.ZArith.Zorder.Zgt_le_succ	40	52.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	16.678166151	12007
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0302419662476	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	synth with cache (only 1: apply Z.le_succ_l).	0.0292270183563	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0446000099182	3
Coq.ZArith.Zorder.Zlt_succ_le	40	0	synth with cache (only 1: apply Z.lt_succ_r).	0.0300989151001	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0468020439148	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	synth with cache (only 1: apply Z.lt_succ_lt_pred).	0.029876947403	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	1.63	synth with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	12.6237030029	15511
Coq.ZArith.Zorder.Zle_neg_pos	40	0.0	synth with cache (only 1: intros n m; only 1: easy).	0.0403759479523	2
Coq.ZArith.Zorder.Zgt_pos_0	40	0.0	synth with cache (only 1: intros a; only 1: reflexivity).	0.0337080955505	2
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	synth with cache (only 1: intros a; only 1: easy).	0.0379559993744	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	synth with cache (only 1: easy).	0.0283501148224	1
Coq.ZArith.Zorder.Zle_0_nat	40	0.1.17	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intros a; only 1: trivial).	2.86537313461	1891
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0291411876678	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0307219028473	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	synth with cache (only 1: apply Z.add_le_mono_l).	0.028618812561	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	2	synth with cache (only 1: apply Z.add_le_mono_r).	0.0399451255798	11
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	synth with cache (only 1: apply Z.add_lt_mono_l).	0.0284819602966	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	2	synth with cache (only 1: apply Z.add_lt_mono_r).	0.0485739707947	11
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0501880645752	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.052943944931	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0698978900909	3
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0493900775909	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0308029651642	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	synth with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0319900512695	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0660870075226	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	6.0.2	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.369421005249	53
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	7.0.0	synth with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0681519508362	10
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	4.0	synth with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0598850250244	14
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0447239875793	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	synth with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0290131568909	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0448920726776	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	synth with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0289709568024	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.30614900589	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0742568969727	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	3.0.9.2	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: intros Hb; only 1: Z.order_pos).	1.33152294159	502
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	29.1.5.0	synth with cache (only 1: Z.swap_greater; only 1: intro H; only 1: intros Hb; only 1: Z.order_pos).	13.4241709709	8005
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.2	synth with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0475649833679	4
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.3	synth with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0638349056244	5
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	1	synth with cache (only 1: apply Z.le_0_sub).	0.0317919254303	2
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40
Coq.ZArith.Zbool.Zle_imp_le_bool	40	7	synth with cache (only 1: apply Z.leb_le).	0.0383141040802	15
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	3.9	synth with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.425421953201	117
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	3	synth with cache (only 1: trivial).	0.0281960964203	4
Coq.ZArith.Zbool.Zone_min_pos	40	42.13	synth with cache (only 1: intros H; only 1: now destruct n as [| [| | ]| [| | ]]).	38.7296600342	30543
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.8	synth with cache (only 1: split; only 1: apply Z.leb_le; only 1: apply Z.leb_le).	0.63719201088	137
Coq.ZArith.Zbool.Zge_is_le_bool	40
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	synth with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0444760322571	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0	synth with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.0397469997406	4
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.17	synth with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.32748794556	638
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	synth with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0402598381042	6
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	0.79	synth with cache (only 1: unfold Z.gt, Z.lt; only 1: decide equality).	30.0726079941	52566
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40	2.18.11	synth with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: decide equality).	9.5052947998	4829
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	4.0.2.0.0	synth with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	1.03259420395	168
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	1.1.1	synth with cache (only 1: elim Z_lt_ge_dec; only 1: auto with arith; only 1: now left).	0.0613269805908	11
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.2.0.1.0.0	synth with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: auto with relations; only 1: auto with arith).	3.02837085724	1242
Coq.ZArith.ZArith_dec.Z_dec'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros x y; only 1: case (Z_lt_ge_dec x y); only 1: intro H; only 1: left; only 1: left; only 1: auto; only 1: intro H; only 1: generalize (Z.ge_le _ _ H); only 1: intro H0; only 1: case (Z_le_lt_eq_dec y x H0); only 1: intro H1; only 1: left; only 1: right; only 1: assumption; only 1: intro; only 1: right; only 1: auto).	15.0908489227	6206
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.2.3	synth with cache (only 1: Bool.destr_bool; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.067085981369	9
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	synth with cache (only 1: reflexivity).	0.0268189907074	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.2.2.2.3	synth with cache (only 1: destruct b as [| b| b]; only 1: Z.order; only 1: intros Hab; only 1: easy; only 1: trivial).	1.87584400177	416
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	0.1	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0167768001556	3
Coq.Program.Wf.Well_founded.Fix_F_inv	40	1.1.15.5.6.2	synth with cache (only 1: destruct r using Acc_inv_dep; only 1: symmetry; only 1: induction (Rwf x); only 1: rewrite <- Wf.Fix_F_eq; only 1: apply F_ext; only 1: auto).	34.0381128788	28268
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.3.0	synth with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0499079227448	18
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	0.3	synth with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0174040794373	5
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	0.7.35.3.2	synth with cache (only 1: intro x; only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	2.30298495293	7745
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	0.0	synth with cache (only 1: apply Fix_F_inv; only 1: auto).	0.0145778656006	2
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	4.10.37.17	synth with cache (only 1: intro H; only 1: intros ? ? ? [Hl Hr]; only 1: subst; only 1: reflexivity).	5.26388788223	31111
Coq.Program.Equality.JMeq_eq_refl	40	0	synth with cache (only 1: apply UIP_refl).	0.00916790962219	1
Coq.Program.Equality.UIP_refl_refl	40	2	synth with cache (only 1: apply UIP_refl).	0.0101161003113	3
Coq.Program.Equality.inj_pairT2_refl	40	3	synth with cache (only 1: apply UIP).	0.00955319404602	4
Coq.Program.Equality.solution_left	40	4.7.0.0	synth with cache (only 1: intro eq_rect_eq; only 1: simple destruct 1; only 1: destruct H; only 1: trivial).	0.0818200111389	266
Coq.Program.Equality.solution_right	40	1.2.0	synth with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0125110149384	6
Coq.Program.Equality.deletion	40	1	synth with cache (only 1: auto).	0.00899291038513	2
Coq.Program.Equality.simplification_heq	40	4.19.8	synth with cache (only 1: intros; only 1: subst; only 1: auto).	0.57380604744	1883
Coq.Program.Equality.simplification_existT2	40	2.0.6.7.1.9	synth with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.490974903107	1734
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.0132200717926	3
Coq.Program.Combinators.compose_id_left	40	1	synth with cache (only 1: auto).	0.010479927063	2
Coq.Program.Combinators.compose_id_right	40	0.1	synth with cache (only 1: intros; only 1: reflexivity).	0.0118160247803	3
Coq.Program.Combinators.compose_assoc	40	4	synth with cache (only 1: reflexivity).	0.0105259418488	5
Coq.Program.Combinators.flip_flip	40	0.2	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0118579864502	4
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	synth with cache (only 1: intros; only 1: exact eq_refl).	0.0119791030884	3
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	3.1.0.0.0.0	synth with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0901570320129	10
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40	0.0.0.2.2.3.0.4.13	synth with cache (only 1: unfold PermutSetoid.permutation, meq; only 1: induction l as [| x l IHl]; only 1: trivial; only 1: intros H; only 1: specialize (H x); only 1: simpl in H; only 1: destruct eq_dec as [_| NEQ]; only 1: discriminate; only 1: now elim NEQ).	19.4572660923	23161
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40	3.36.8	synth with cache (only 1: intro Pdec; only 1: fix even_spec 1; only 1: auto).	9.48967695236	18034
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	2.1.0.2.2.0.1.11.0.1	synth with cache (only 1: induction stack as [| []]; only 1: simpl; only 1: constructor; only 1: intros; only 1: simpl; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	7.73589086533	7166
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40	2.0.29	synth with cache (only 1: fix le_div2 1; only 1: intros; only 1: trivial).	4.5117058754	6359
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.4.8	synth with cache (only 1: induction l as [| a l' Hrec]; only 1: auto; only 1: auto).	0.280520915985	248
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	0.0.2.9	synth with cache (only 1: intros; only 1: apply perm_trans with (l' := l'); only 1: auto; only 1: auto).	0.191298007965	229
Coq.Sorting.Permutation.Permutation_cons	40	1.2.6	synth with cache (only 1: intros a a' Ha n; only 1: subst; only 1: auto).	0.068107843399	47
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40	0.0.0.0.4.1.1.2.1.0.5	synth with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: intro H2; only 1: tauto; only 1: simpl; only 1: intros [?| [?| ?]]; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	22.8999049664	17729
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.1.0.7	synth with cache (only 1: induction l; only 1: intros l l' Hperm; only 1: auto; only 1: simpl; only 1: auto).	0.538499116898	315
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0	synth with cache (only 1: auto).	0.0130739212036	1
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.31	synth with cache (only 1: fix le_div2 1; only 1: auto).	10.5012040138	16088
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	2.0.0.0.0.0.0.0.0.3	synth with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.919321060181	482
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40	0.0.0.10.2	synth with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: now constructor; only 1: now constructor).	38.3470129967	404
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40	1.13.2	synth with cache (only 1: repeat red; only 1: fix gcd_divide 1; only 1: auto).	6.50882601738	4341
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40	1.0.0.0.0.0.0.1	synth with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.0450448989868	10
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	10	synth with cache (only 1: split).	0.0693049430847	44
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	2.6	synth with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0352509021759	10
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.4.1.4.2	synth with cache (only 1: intros x y z; only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: auto).	1.20056200027	546
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.1.0.0	synth with cache (only 1: unfold permutation; only 1: intros; only 1: simpl; only 1: auto with datatypes).	0.0451509952545	5
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40	0.0.0.0.0.1.0.2.0.0.14	synth with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	20.750043869	19119
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40	7.0.7.4	synth with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: reflexivity; only 1: congruence).	2.4599750042	660
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	2.3155169487	560
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40	2.2.0.1.0	synth with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: simpl_relation).	0.0641992092133	10
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.1.3	synth with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith).	1.78737616539	71
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40	0.6.5.1.1.3.2.0	synth with cache (only 1: unfold permutation; only 1: intros l l1 l2; only 1: rewrite multiplicity_InA; only 1: rewrite multiplicity_InA; only 1: unfold permutation, meq; only 1: intros; only 1: elim H; only 1: auto with arith).	11.499874115	8844
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	0.0.0.14.0.0	synth with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto; only 1: auto; only 1: auto).	1.16972994804	880
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	0.5	synth with cache (only 1: inversion 1; only 1: auto).	0.0317449569702	15
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.3.2	synth with cache (only 1: intros; only 1: inversion H; only 1: auto).	0.0353589057922	12
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.1.1	synth with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0274860858917	5
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	synth with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0276160240173	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40	0.0.2.0.0.2.12	synth with cache (only 1: intro Pdec; only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	5.14136505127	3604
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	0.1	synth with cache (only 1: simpl; only 1: auto).	0.032821893692	3
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0	synth with cache (only 1: auto).	0.026871919632	1
Coq.Sorting.Heap.defs.invert_heap	40	0.2.12	synth with cache (only 1: intro H; only 1: inversion 1; only 1: auto).	2.227009058	327
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.0.0.0.0.1.0.1.0.0	synth with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: auto with datatypes; only 1: auto with datatypes).	0.336688041687	192
Coq.Sorting.Heap.defs.low_trans	40	15.2.0.6	synth with cache (only 1: simple induction T; only 1: auto; only 1: simpl; only 1: eauto).	13.8413300514	9697
Coq.Sorting.Heap.defs.Equivalence_instance_0	40	12.0.0.7	synth with cache (only 1: constructor; only 1: auto with datatypes; only 1: auto with datatypes; only 1: congruence).	10.9721689224	820
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.1.7	synth with cache (only 1: repeat intro; only 1: simpl; only 1: auto with arith).	0.217459201813	48
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40	0.5	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0389637947083	13
Coq.Sorting.Heap.defs.list_to_heap	40	0.8	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0395090579987	18
Coq.Sorting.Heap.defs.heap_to_list	40	0.11	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	1.25233197212	146
Coq.Sorting.Heap.defs.treesort	40	0.21	synth with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.348409891129	615
Coq.Init.Wf.Well_founded.Acc_inv	40	1.13	synth with cache (only 1: destruct 1; only 1: auto).	0.18251991272	275
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0136709213257	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0141358375549	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.3.3.5.29.3.10	synth with cache (only 1: intro; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intro; only 1: induction n; only 1: assumption).	14.7357058525	103884
Coq.Init.Tactics.decide_right	40	0.2.2.0	synth with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.01646900177	8
Coq.Init.Peano.pred_Sn	40	2	synth with cache (only 1: reflexivity).	0.00881910324097	3
Coq.Init.Peano.not_eq_S	40	2.0	synth with cache (only 1: intro H; only 1: auto).	0.0108139514923	4
Coq.Init.Peano.O_S	40	0	synth with cache (only 1: discriminate).	0.00894689559937	1
Coq.Init.Peano.n_Sn	40	4.1.24.24.5	synth with cache (only 1: unfold not; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	22.2080590725	129542
Coq.Init.Peano.plus_n_O	40	0.5.0.3	synth with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0552880764008	82
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0163810253143	6
Coq.Init.Peano.plus_n_Sm	40	0.2.0.6	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0423269271851	49
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0183517932892	6
Coq.Init.Peano.mult_n_O	40	0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.0146059989929	4
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.6	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0157699584961	14
Coq.Init.Peano.le_n_S	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0139770507812	3
Coq.Init.Peano.nat_case	40	1.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0142579078674	6
Coq.Init.Peano.nat_double_ind	40	4.1.14.3.2	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	1.41132497787	3789
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.2.0.2.0.3.1.0	synth with cache (only 1: revert m; only 1: induction n; only 1: reflexivity; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.88402700424	9310
Coq.Init.Peano.min_l	40	0.0.1.0.2.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	4.74195313454	5116
Coq.Init.Peano.min_r	40	0.0.2.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.40388703346	3704
Coq.Init.Peano.nat_rect_succ_r	40	0.7.1.0.39	synth with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl in *; only 1: reflexivity || destruct H; only 1: reflexivity).	5.69731283188	31811
Coq.Init.Peano.nat_rect_plus	40	0.0.6.0.0.1	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite <- ?IHn; only 1: trivial).	0.57807803154	549
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.12.11	synth with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	0.107997894287	671
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00946807861328	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00987195968628	3
Coq.Init.Datatypes.surjective_pairing	40	0.10	synth with cache (only 1: intros A B []; only 1: trivial).	0.0151641368866	33
Coq.Init.Datatypes.injective_projections	40	0.0.1.34.14.13	synth with cache (only 1: intros A B []; only 1: intros [? ?]; only 1: simpl; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	18.2623839378	150904
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.011687040329	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0135359764099	6
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.2.0.1.0.2.0.0.0.1	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	17.5461111069	58720
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.1	synth with cache (only 1: destruct 1; only 1: trivial).	0.00227999687195	3
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	1.1.3.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00481986999512	10
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.2.3	synth with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00434899330139	14
Coq.Init.Logic.and_iff_compat_l	40	0.0.1.4.0.0.1.4.1.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0994188785553	987
Coq.Init.Logic.and_iff_compat_r	40	0.0.2.0.0.0.0.3.0.0.0.2	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.1031498909	1259
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.0.0.3.1.0.0.0.0.1.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.125849962234	1621
Coq.Init.Logic.imp_iff_compat_l	40	7.7.3.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0428898334503	469
Coq.Init.Logic.imp_iff_compat_r	40	0.2.1.0.6.1.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0638089179993	715
Coq.Init.Logic.not_iff_compat	40	7.7.0.7	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.227804899216	2039
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	1.1.0.0.1.1.0.0.1	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: assumption; only 1: assumption).	0.0985600948334	369
Coq.Init.Logic.and_assoc	40	2.2.2.0.3.0.1.0.1.4.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: assumption; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	1.63986992836	11524
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.2.0.3.3.0.2.0.3.3.1	synth with cache (only 1: repeat split; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption; only 1: intros [?| ?]; only 1: right; only 1: assumption; only 1: left; only 1: assumption).	1.05850100517	8169
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	2.0	synth with cache (only 1: intros; only 1: assumption).	0.00972294807434	16
Coq.Init.Logic.iff_to_and	40	0.0.1.2	synth with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.00902891159058	7
Coq.Init.Logic.universal_quantification.inst	40	4	synth with cache (only 1: trivial).	0.00811505317688	14
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.00780010223389	3
Coq.Init.Logic.Logic_lemmas.absurd	40	0.8.18	synth with cache (only 1: intro H1; only 1: intros A B []; only 1: assumption).	0.205934047699	1041
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	1.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.0083339214325	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00852608680725	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00841498374939	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	10.1	synth with cache (only 1: destruct 2; only 1: auto).	0.0430262088776	165
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	0.5	synth with cache (only 1: destruct 2; only 1: auto).	0.00996613502502	7
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: auto).	0.010162115097	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0098922252655	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0102410316467	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	1.0.9	synth with cache (only 1: destruct H; only 1: destruct 1; only 1: split).	0.156287908554	82
Coq.Init.Logic.rew_opp_r	40	0.1.1	synth with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: reflexivity).	0.0125031471252	5
Coq.Init.Logic.rew_opp_l	40	0.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0121469497681	4
Coq.Init.Logic.f_equal2	40	0.0.9	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0619029998779	160
Coq.Init.Logic.f_equal3	40	1.0.1.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0186610221863	15
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0164821147919	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0187292098999	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.1	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0112059116364	3
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0110368728638	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0111100673676	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0111510753632	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0111939907074	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.10	synth with cache (only 1: destruct H; only 1: trivial).	0.0432639122009	72
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0117218494415	2
Coq.Init.Logic.map_subst_map	40	0.0	synth with cache (only 1: destruct H; only 1: trivial).	0.0124928951263	2
Coq.Init.Logic.rew_swap	40	1.1.0	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0136020183563	5
Coq.Init.Logic.rew_compose	40	4.1.1	synth with cache (only 1: intros; only 1: destruct H2; only 1: trivial).	0.0136671066284	9
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	1.2	synth with cache (only 1: intros A C h1 h2; only 1: trivial).	0.0109241008759	5
Coq.Init.Logic.eq_trans_map_distr	40	0.4.4.9	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.222518920898	672
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0131499767303	2
Coq.Init.Logic.eq_trans_sym_distr	40	2.10.1	synth with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.105264186859	325
Coq.Init.Logic.eq_trans_rew_distr	40	0.3	synth with cache (only 1: destruct e, e'; only 1: reflexivity).	0.0160639286041	12
Coq.Init.Logic.rew_const	40	0.5	synth with cache (only 1: destruct e; only 1: trivial).	0.01522397995	16
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.3.11.2	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: split; only 1: assumption).	0.140138864517	507
Coq.Init.Logic.inhabited_covariant	40	6.5	synth with cache (only 1: destruct 2; only 1: auto).	0.0379049777985	106
Coq.Init.Logic.eq_stepl	40	0.0.3	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0140750408173	6
Coq.Init.Logic.iff_stepl	40	7.7.0.3.0	synth with cache (only 1: destruct 1; only 1: intros [HypL HypR]; only 1: split; only 1: auto; only 1: auto).	1.00917387009	4381
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.3.2.0.1	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0372688770294	44
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0163471698761	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00933790206909	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00912094116211	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00925421714783	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.1.0.1.2	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0180850028992	32
Coq.Init.Logic_Type.identity_ind_r	40	0.40	synth with cache (only 1: destruct 2; only 1: trivial).	0.601483821869	4722
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: assumption).	0.0106360912323	4
Coq.Init.Logic_Type.identity_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.0114009380341	4
Coq.Init.Specif.sigT_eta	40	0.26	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0757939815521	361
Coq.Init.Specif.sig_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0119709968567	2
Coq.Init.Specif.sigT2_eta	40	0.1	synth with cache (only 1: destruct p; only 1: reflexivity).	0.0136630535126	3
Coq.Init.Specif.sig2_eta	40	0.0	synth with cache (only 1: destruct p; only 1: reflexivity).	0.012932062149	2
Coq.Init.Specif.exists_to_inhabited_sig	40	1.2.7.8.8	synth with cache (only 1: intros H; only 1: inversion_clear H; only 1: split; only 1: exists x; only 1: assumption).	0.310687065125	1448
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.2.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0167942047119	6
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.1.0	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0139789581299	4
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.11.12	synth with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.22244811058	536
Coq.Init.Specif.sigT.eq_existT_curried_trans	40
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	3.10.17.24	synth with cache (only 1: destruct r, q, p; only 1: intro H; only 1: destruct H; only 1: reflexivity).	13.6910917759	48167
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0152750015259	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.1.0.0	synth with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0171349048615	5
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.1.0.1.1.0	synth with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.044762134552	32
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	10.0.0.0.3.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: intro; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried; only 1: trivial).	2.56140494347	4993
Coq.Init.Specif.sig.rew_sig	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0153760910034	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.7.8.4	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.857448101044	1137
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.1.0.0.24.0.0.0	synth with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	11.8897249699	27729
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0185539722443	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.1	synth with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: reflexivity).	0.0176908969879	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.2.0.0	synth with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0328290462494	8
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	9.0.0.0.1.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: intro H; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried; only 1: assumption).	3.37906503677	4704
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0182499885559	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	1.0.0	synth with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0123751163483	4
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.1.1.0.3.0.4.0.0	synth with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	3.24637389183	1275
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	synth with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0504598617554	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	2.1	synth with cache (only 1: intros; only 1: apply Qred_correct).	1.00482106209	142
Coq.QArith.Qreduction.Qminus'_correct	40	3.0	synth with cache (only 1: intros; only 1: apply Qred_correct).	0.606023073196	21
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	0.3.6.1.5.0	synth with cache (only 1: split; only 1: intro; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: intro; only 1: now rewrite !Qred_correct).	2.22162699699	562
Coq.QArith.Qreduction.Qred_lt	40	0.0.8.1.0.1	synth with cache (only 1: split; only 1: intro; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: auto with *; only 1: intro; only 1: now rewrite !Qred_correct).	1.71156692505	293
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.2.12	synth with cache (only 1: red; only 1: simpl; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	0.654115200043	273
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.0.1	synth with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.173634052277	35
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40	0.0.0.0.1.6.1.0.0.2.3.5	synth with cache (only 1: intros; only 1: induction n; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with zarith; only 1: simpl in *; only 1: unfold Qle in *; only 1: simpl in *; only 1: rewrite Z.mul_1_r in *; only 1: auto with *; only 1: assumption).	35.2695701122	15181
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.4.10	synth with cache (only 1: red; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	4.47868108749	1514
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40
Coq.QArith.Qfield.Examples.ex1	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.117780923843	5
Coq.QArith.Qfield.Examples.ex2	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.12775182724	11
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.122840881348	5
Coq.QArith.Qfield.Examples.ex4	40	0	synth with cache (only 1: constructor).	0.0299270153046	1
Coq.QArith.Qfield.Examples.ex5	40	0	synth with cache (only 1: ring).	0.0379891395569	1
Coq.QArith.Qfield.Examples.ex6	40	0	synth with cache (only 1: ring).	0.0378160476685	1
Coq.QArith.Qfield.Examples.ex7	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intro; only 1: ring).	0.0666360855103	4
Coq.QArith.Qfield.Examples.ex8	40	0.0.2.0	synth with cache (only 1: intro n; only 1: red; only 1: simpl; only 1: trivial).	0.0576281547546	6
Coq.QArith.Qfield.Examples.ex9	40	0	synth with cache (only 1: easy).	0.0312879085541	1
Coq.QArith.Qfield.Examples.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	0.0.0.0.3	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: ring).	0.764383077621	71
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	synth with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0639359951019	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.1.0.10	synth with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	1.32436609268	636
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	1.0.0	synth with cache (only 1: split; only 1: trivial; only 1: easy).	0.0430469512939	11
Coq.QArith.Qcanon.Qcgt_alt	40	0.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0361280441284	3
Coq.QArith.Qcanon.Qcle_alt	40	0.0	synth with cache (only 1: intros n m; only 1: reflexivity).	0.0315790176392	2
Coq.QArith.Qcanon.Qcge_alt	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0651059150696	11
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	1	synth with cache (only 1: auto with qarith).	0.0305991172791	2
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40	1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.216555118561	4
Coq.QArith.Qcanon.Qcplus_comm	40	2.26.0	synth with cache (only 1: intros a b; only 1: qc; only 1: ring).	6.71150612831	4402
Coq.QArith.Qcanon.Qcopp_involutive	40	0.1.0	synth with cache (only 1: intros a; only 1: qc; only 1: ring).	0.0565969944	4
Coq.QArith.Qcanon.Qcplus_opp_r	40	3.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.0848560333252	6
Coq.QArith.Qcanon.Qcmult_assoc	40	1.0.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_assoc; only 1: ring).	0.105565071106	7
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: compute; only 1: reflexivity).	0.0600941181183	4
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.2.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.0890169143677	13
Coq.QArith.Qcanon.Qcmult_1_l	40	18.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	6.09952092171	2789
Coq.QArith.Qcanon.Qcmult_1_r	40	0.7.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.518303871155	106
Coq.QArith.Qcanon.Qcmult_comm	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.140310049057	11
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.0901298522949	3
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	0.0.0	synth with cache (only 1: intros; only 1: qc; only 1: ring).	0.0850818157196	3
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40	2.1.5.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qmult_inv_r; only 1: auto).	1.02088308334	139
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.1.0.0	synth with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.0673830509186	6
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.7.6.0	synth with cache (only 1: intros; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	2.59288716316	826
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.20	synth with cache (only 1: red; only 1: intros a; only 1: auto with qarith).	1.03587889671	886
Coq.QArith.Qcanon.Qcle_antisym	40	21.2	synth with cache (only 1: intros x y z; only 1: auto with *).	6.75974607468	3007
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	0.0.1.4	synth with cache (only 1: intros n m H; only 1: contradict H; only 1: subst; only 1: apply Z.lt_irrefl).	0.185272932053	37
Coq.QArith.Qcanon.Qclt_le_weak	40	11.4	synth with cache (only 1: intros a b; only 1: apply Z.lt_le_incl).	0.88853096962	567
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.4.10	synth with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: eauto; only 1: eauto).	3.80980587006	1585
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	4.0.1.0.2	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: auto with *).	0.644227027893	199
Coq.QArith.Qcanon.Qcnot_lt_le	40	0.2.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros (a1, a2) (b1, b2); only 1: apply Z.nlt_ge).	0.668421030045	39
Coq.QArith.Qcanon.Qcnot_le_lt	40	0.3.1	synth with cache (only 1: unfold Qcle, Qclt; only 1: intros n m; only 1: apply Z.nle_gt).	0.425124883652	29
Coq.QArith.Qcanon.Qclt_not_le	40	1.0	synth with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.0348420143127	3
Coq.QArith.Qcanon.Qcle_not_lt	40	5.0	synth with cache (only 1: intros n m; only 1: apply Z.le_ngt).	0.039647102356	7
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	6.1	synth with cache (only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0388259887695	9
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40	20.0.0.7	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now rewrite IHn).	39.9917030334	19260
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.4.1.4.3	synth with cache (only 1: intro n; only 1: destruct n; only 1: now destruct 1; only 1: destruct n; only 1: intro H; only 1: trivial; only 1: trivial).	2.76651597023	1644
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.2.3.0.0	synth with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	1.1730120182	245
Coq.QArith.Qreals.IZR_nz	40	0.1	synth with cache (only 1: intro; only 1: now apply not_0_IZR).	0.0916790962219	25
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40	0.14.33	synth with cache (only 1: unfold Qeq; only 1: rewrite <- Z.compare_eq_iff; only 1: now split).	10.8332700729	16116
Coq.QArith.QArith_base.Qlt_alt	40	0	synth with cache (only 1: reflexivity).	0.0258040428162	1
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	0	synth with cache (only 1: reflexivity).	0.0249679088593	1
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	21	synth with cache (only 1: constructor).	0.0971539020538	208
Coq.QArith.QArith_base.Qeq_sym	40	1.1.0	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intros H; only 1: auto with relations).	0.0409300327301	5
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.1.4	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0680320262909	9
Coq.QArith.QArith_base.Qeq_bool_iff	40	9.1.4.36	synth with cache (only 1: unfold Qeq; only 1: split; only 1: apply Zeq_is_eq_bool; only 1: apply Zeq_is_eq_bool).	12.6669011116	15675
Coq.QArith.QArith_base.Qeq_bool_eq	40	33	synth with cache (only 1: apply Zeq_is_eq_bool).	1.99373292923	1489
Coq.QArith.QArith_base.Qeq_eq_bool	40	6	synth with cache (only 1: apply Qeq_bool_iff).	0.0361089706421	7
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	8	synth with cache (only 1: apply Z.leb_le).	0.0810518264771	54
Coq.QArith.QArith_base.Qle_bool_imp_le	40	2	synth with cache (only 1: apply Z.leb_le).	0.0283608436584	3
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2.0.1	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intro H; only 1: intro H1; only 1: now apply H).	0.0777189731598	20
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.51	synth with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	2.60788989067	2850
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.0.21.54	synth with cache (only 1: intros m; only 1: destruct m; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	34.8544769287	53722
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	0.9.2.2	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: Z.nzsimpl; only 1: trivial).	2.10609316826	617
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40	0.5.7.3.8.1	synth with cache (only 1: repeat red; only 1: induction 1; only 1: unfold Qeq, Qlt, Qcompare; only 1: intro EQ; only 1: fix gcd_divide 1; only 1: auto).	25.4967901707	14875
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3	synth with cache (only 1: inversion_clear 1).	0.0304970741272	4
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	2.12.0	synth with cache (only 1: intro n; only 1: unfold Qeq, Qplus; only 1: now Z.nzsimpl).	1.4069750309	337
Coq.QArith.QArith_base.Qplus_0_r	40
Coq.QArith.QArith_base.Qplus_comm	40	0.2.1.2.16.1.1.0	synth with cache (only 1: intros n m; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: destruct n, m; only 1: simpl in *; only 1: simpl_mult; only 1: ring_simplify; only 1: trivial).	23.4756851196	7405
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0713119506836	14
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0630619525909	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.1.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.208117008209	7
Coq.QArith.QArith_base.Qmult_0_l	40	0.1.0.2	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: trivial).	0.06139087677	7
Coq.QArith.QArith_base.Qmult_0_r	40	0.2.1.0.4	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl; only 1: Z.nzsimpl; only 1: trivial).	0.993934869766	169
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.0.0.1	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	1.00588202477	45
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.1.0.0.0	synth with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0969898700714	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.1.2.0.4	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.23740816116	328
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.116761922836	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	6.0	synth with cache (only 1: unfold Qplus, inject_Z; only 1: trivial).	0.0387079715729	8
Coq.QArith.QArith_base.inject_Z_opp	40	12	synth with cache (only 1: now destruct x).	0.0536179542542	46
Coq.QArith.QArith_base.Qinv_involutive	40	0.2.6	synth with cache (only 1: fix le_div2 1; only 1: intro; only 1: auto with qarith).	1.15567612648	174
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	1.27	synth with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	11.202493906	4955
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0791521072388	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	2.11	synth with cache (only 1: red; only 1: now reflexivity).	0.379070043564	88
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	29	synth with cache (only 1: apply Z.lt_irrefl).	1.80597114563	1120
Coq.QArith.QArith_base.Qlt_not_eq	40	5.2.3	synth with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: intro H; only 1: Z.order').	0.283978939056	157
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40	4.0.2.0.0.1	synth with cache (only 1: split; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases; only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).	1.23145198822	252
Coq.QArith.QArith_base.Qlt_le_weak	40	19.1.3	synth with cache (only 1: red; only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	3.61984419823	2420
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	5.12.2.5	synth with cache (only 1: red; only 1: intro; only 1: intuition; only 1: Z.order).	2.80646014214	1593
Coq.QArith.QArith_base.Qnot_le_lt	40	5	synth with cache (only 1: apply Z.nle_gt).	0.0329761505127	6
Coq.QArith.QArith_base.Qlt_not_le	40	1	synth with cache (only 1: apply Z.nle_gt).	0.0292570590973	2
Coq.QArith.QArith_base.Qle_not_lt	40	3	synth with cache (only 1: apply Z.nlt_ge).	0.0318059921265	4
Coq.QArith.QArith_base.Qle_lt_or_eq	40	0.0.3	synth with cache (only 1: intros a b; only 1: unfold Qeq, Qlt, Qcompare; only 1: apply Z.lt_eq_cases).	0.0472781658173	6
Coq.QArith.QArith_base.Q_dec	40	1.14	synth with cache (only 1: fix gcd_divide 1; only 1: auto).	2.54210090637	984
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	1.0.0.0.0.0.1.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: trivial; only 1: auto with *).	21.3523671627	3273
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.2.0.0.0.0.1	synth with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	15.551279068	2807
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: trivial; only 1: auto with qarith).	1.85725903511	142
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	synth with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0494139194489	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.1.1.2.1.0.1	synth with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	4.93429899216	978
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.1.0.1.0.0.4.0	synth with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: auto).	4.40138196945	788
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	5.0.3	synth with cache (only 1: simpl; only 1: intros; only 1: now Z.nzsimpl').	0.326589822769	154
Coq.QArith.Qround.Qceiling_Z	40	0.1.21	synth with cache (only 1: fix le_div2 1; only 1: intros z; only 1: auto).	7.5923640728	5041
Coq.QArith.Qround.Qfloor_le	40	1.0.1.8	synth with cache (only 1: fix le_div2 1; only 1: red; only 1: simpl; only 1: auto with arith).	8.2057158947	2424
Coq.QArith.Qround.Qle_ceiling	40	1.0.2.8	synth with cache (only 1: fix le_div2 1; only 1: red; only 1: simpl; only 1: auto with arith).	7.2028670311	2112
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.3.2.0.1	synth with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	2.19044804573	345
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	synth with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.468388080597	46
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	7.0.0.1.0.0.0.2.2	synth with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial; only 1: easy).	13.0746250153	3941
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0821039676666	10
Coq.QArith.Qabs.Qabs_nonneg	40	0.0.2.1.8	synth with cache (only 1: unfold Qle, Qlt; only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	2.26023411751	946
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.0.0	synth with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: auto).	0.0506689548492	4
Coq.QArith.Qabs.Qabs_opp	40	0.0.0.0.0.0.0.0.0.1.2	synth with cache (only 1: intro; only 1: destruct x as [[| xn| xn] xd]; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).	4.86739015579	1180
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0	synth with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qinv, Qmult; only 1: destruct x1; only 1: simpl; only 1: auto; only 1: destruct y1; only 1: simpl; only 1: auto; only 1: auto; only 1: auto; only 1: destruct y1; only 1: trivial; only 1: auto; only 1: auto).	7.15672302246	1351
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.2.0.0	synth with cache (only 1: intros [[| n| n] d]; only 1: simpl; only 1: now split; only 1: red; only 1: simpl; only 1: trivial; only 1: red; only 1: simpl; only 1: trivial).	1.95107889175	296
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40	2.0.9	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: auto).	3.6974170208	953
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	synth with cache (only 1: reflexivity).	0.0103378295898	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00996899604797	1
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: firstorder).	0.00949096679688	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	6.0.4.12.0.13.3.3.2	synth with cache (only 1: intro H; only 1: intro z; only 1: split; only 1: red; only 1: intros; only 1: subst; only 1: trivial; only 1: intros; only 1: firstorder).	7.00881791115	36408
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.00999593734741	1
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	2.5.0	synth with cache (only 1: intro H; only 1: intros; only 1: simpl_crelation).	0.0419590473175	15
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.0101480484009	1
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0107719898224	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	4	synth with cache (only 1: simpl_crelation).	0.0451340675354	5
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: simpl_crelation).	0.0197949409485	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0128169059753	1
Coq.Classes.CMorphisms.iff_impl_subrelation	40	1	synth with cache (only 1: firstorder).	0.0111420154572	2
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	1	synth with cache (only 1: firstorder).	0.0117120742798	2
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	1	synth with cache (only 1: firstorder).	0.0113971233368	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	1	synth with cache (only 1: firstorder).	0.0116021633148	2
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	5	synth with cache (only 1: firstorder).	0.0126578807831	6
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.119507074356	1
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0263171195984	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0269060134888	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0154340267181	1
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	2.2.1.0	synth with cache (only 1: transitivity y; only 1: symmetry; only 1: firstorder; only 1: firstorder).	4.42714905739	287
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0925860404968	1
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40	4	synth with cache (only 1: firstorder).	0.899487018585	192
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	0.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.07719397545	4
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0130190849304	1
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	21	synth with cache (only 1: firstorder).	0.122698068619	263
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	2.5	synth with cache (only 1: destruct 1; only 1: auto).	0.0208399295807	14
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	5	synth with cache (only 1: firstorder).	0.0122067928314	6
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	3.1.0	synth with cache (only 1: simpl_crelation; only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.02689909935	7
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0111639499664	1
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.0112919807434	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	5	synth with cache (only 1: simpl_crelation).	0.0189781188965	6
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0105741024017	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: firstorder).	0.0104689598083	1
Coq.Classes.CMorphisms.proper_proper	40	0.2	synth with cache (only 1: simpl_crelation; only 1: firstorder).	0.025787115097	4
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	0	synth with cache (only 1: firstorder).	0.0121691226959	1
Coq.Classes.CMorphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0119731426239	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	4.3	synth with cache (only 1: intros A B R R' HRR' S S' HSS' f g; only 1: simpl_crelation).	0.0614728927612	9
Coq.Classes.CMorphisms.proper_sym_flip_2	40	1.16	synth with cache (only 1: unfold flip, respectful; only 1: firstorder).	5.050303936	811
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	1.3.10.3	synth with cache (only 1: red; only 1: intros A P; only 1: simpl_crelation; only 1: firstorder).	7.1088309288	1972
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.1.1.3	synth with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0705139636993	10
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.1.0.1	synth with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0271220207214	7
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.4.1	synth with cache (only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	0.019711971283	9
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	1	synth with cache (only 1: firstorder).	0.0102398395538	2
Coq.Classes.CEquivalence.pointwise_symmetric	40	1	synth with cache (only 1: firstorder).	0.0112519264221	2
Coq.Classes.CEquivalence.pointwise_transitive	40	1	synth with cache (only 1: firstorder).	0.0128347873688	2
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.449646949768	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.00997090339661	1
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	1	synth with cache (only 1: firstorder).	0.0109519958496	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	3.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0116031169891	5
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	6.0	synth with cache (only 1: hnf; only 1: firstorder).	0.0236630439758	21
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	4	synth with cache (only 1: firstorder).	0.0238828659058	5
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	2	synth with cache (only 1: firstorder).	0.0237259864807	3
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.0324370861053	1
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0764091014862	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00992393493652	1
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0107800960541	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	synth with cache (only 1: firstorder).	0.0101451873779	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	1	synth with cache (only 1: firstorder).	0.0108001232147	2
Coq.Classes.CRelationClasses.iffT_Transitive	40	1	synth with cache (only 1: firstorder).	0.0126738548279	2
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	1	synth with cache (only 1: firstorder).	0.0132009983063	2
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0176100730896	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0439870357513	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.5.7.4	synth with cache (only 1: firstorder; only 1: reduce_goal; only 1: apply PreOrder_Transitive with y; only 1: firstorder; only 1: firstorder).	0.90843296051	1284
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	synth with cache (only 1: firstorder).	0.0102188587189	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	synth with cache (only 1: firstorder).	0.0111708641052	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	synth with cache (only 1: firstorder).	0.0126512050629	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	synth with cache (only 1: firstorder).	0.404955863953	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40	2.7.30.50	synth with cache (only 1: extensionality p; only 1: induction p; only 1: auto; only 1: auto).	12.4203901291	5246
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	0	synth with cache (only 1: exact eq_refl).	0.0053539276123	1
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	synth with cache (only 1: firstorder).	0.00501108169556	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	0	synth with cache (only 1: firstorder).	0.00489282608032	1
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	1	synth with cache (only 1: firstorder).	0.0081582069397	2
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	1	synth with cache (only 1: firstorder).	0.0218710899353	2
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	0	synth with cache (only 1: firstorder).	0.0177979469299	1
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	0	synth with cache (only 1: firstorder).	0.0292279720306	1
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	0	synth with cache (only 1: firstorder).	0.0615708827972	1
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.00565505027771	1
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	synth with cache (only 1: firstorder).	0.00597500801086	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.1.0	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.014328956604	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0116181373596	5
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	1.0.0.0.1.1	synth with cache (only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.338054895401	12
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	0	synth with cache (only 1: firstorder).	0.00923991203308	1
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	synth with cache (only 1: firstorder).	0.0107250213623	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0	synth with cache (only 1: firstorder).	0.0286519527435	1
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	synth with cache (only 1: firstorder).	0.0105528831482	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	1	synth with cache (only 1: exact eq_refl).	0.00997304916382	2
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	3	synth with cache (only 1: firstorder).	0.0104141235352	4
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	synth with cache (only 1: trivial).	0.00946307182312	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	0.19.0.8.6	synth with cache (only 1: intro H; only 1: compute; only 1: firstorder; only 1: subst; only 1: firstorder).	1.92946386337	5409
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	0	synth with cache (only 1: firstorder).	0.00939679145813	1
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	synth with cache (only 1: firstorder).	0.0129010677338	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	0	synth with cache (only 1: firstorder).	0.00957298278809	1
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	synth with cache (only 1: firstorder).	0.0101549625397	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	0.0.0	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0151119232178	3
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0	synth with cache (only 1: firstorder).	0.0112318992615	1
Coq.Classes.Morphisms.Relations.forall_subrelation	40	0	synth with cache (only 1: firstorder).	0.0563368797302	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	1	synth with cache (only 1: firstorder).	0.011087179184	2
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	1	synth with cache (only 1: firstorder).	0.0111191272736	2
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	6	synth with cache (only 1: firstorder).	0.0144419670105	7
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	1	synth with cache (only 1: firstorder).	0.120568990707	2
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	3	synth with cache (only 1: firstorder).	1.71360707283	179
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	2.2.3	synth with cache (only 1: transitivity x0; only 1: auto; only 1: auto).	1.70586705208	543
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	4	synth with cache (only 1: firstorder).	1.82993292809	800
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	5.1.1	synth with cache (only 1: symmetry; only 1: symmetry; only 1: firstorder).	1.47710704803	550
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	6	synth with cache (only 1: firstorder).	1.05514907837	460
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40	8	synth with cache (only 1: firstorder).	0.107909202576	72
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	3.3.0	synth with cache (only 1: split; only 1: firstorder; only 1: firstorder).	2.64647889137	455
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	0	synth with cache (only 1: firstorder).	0.0131189823151	1
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	11	synth with cache (only 1: firstorder).	0.0277419090271	33
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.1	synth with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.014955997467	4
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	1	synth with cache (only 1: firstorder).	0.0113680362701	2
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	1	synth with cache (only 1: firstorder).	0.0144481658936	2
Coq.Classes.Morphisms.GenericInstances.flip1	40	0	synth with cache (only 1: firstorder).	0.0101280212402	1
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	synth with cache (only 1: firstorder).	0.010143995285	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	0	synth with cache (only 1: simpl_relation).	0.0171129703522	1
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	synth with cache (only 1: firstorder).	0.0102541446686	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	synth with cache (only 1: exact eq_refl).	0.0101630687714	1
Coq.Classes.Morphisms.proper_proper	40	0.1.0.0.1.0.1	synth with cache (only 1: split; only 1: firstorder; only 1: subst; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	0.118392944336	10
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	4.1	synth with cache (only 1: red; only 1: firstorder).	0.0158970355988	7
Coq.Classes.Morphisms.Normalize.flip_atom	40	0	synth with cache (only 1: firstorder).	0.0122320652008	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	1.5	synth with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.120346069336	18
Coq.Classes.Morphisms.proper_sym_flip_2	40	2.10	synth with cache (only 1: unfold flip, respectful; only 1: firstorder).	1.06693506241	234
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.3	synth with cache (only 1: simpl_relation; only 1: firstorder).	0.285998821259	32
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	0	synth with cache (only 1: firstorder).	0.0157768726349	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	synth with cache (only 1: firstorder).	0.0164241790771	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	synth with cache (only 1: firstorder).	0.0484161376953	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	synth with cache (only 1: firstorder).	0.015811920166	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	2	synth with cache (only 1: firstorder).	0.0188119411469	3
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	1	synth with cache (only 1: firstorder).	0.027398109436	2
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	synth with cache (only 1: firstorder).	0.443801164627	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	1	synth with cache (only 1: firstorder).	0.0216469764709	2
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	1	synth with cache (only 1: firstorder).	0.0215659141541	2
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	1	synth with cache (only 1: firstorder).	0.0186820030212	2
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	synth with cache (only 1: firstorder).	0.0184721946716	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	1	synth with cache (only 1: firstorder).	0.0185940265656	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	1	synth with cache (only 1: firstorder).	0.0185339450836	2
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.0	synth with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: auto).	0.0228900909424	2
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0509970188141	5
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	2.0.4	synth with cache (only 1: split; only 1: apply Nat.eqb_eq; only 1: apply Nat.eqb_eq).	0.0739200115204	36
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	3.2.2	synth with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.034854888916	11
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	4.9	synth with cache (only 1: destruct y; only 1: now destruct x).	0.113456010818	85
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	11	synth with cache (only 1: auto with *).	0.0451018810272	51
Coq.Classes.SetoidClass.setoid_sym	40	0	synth with cache (only 1: typeclasses eauto).	0.0171430110931	1
Coq.Classes.SetoidClass.setoid_trans	40	0	synth with cache (only 1: typeclasses eauto).	0.0168330669403	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	3.5.18	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).	2.51219892502	4173
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	4.5.17	synth with cache (only 1: destruct H; only 1: simpl; only 1: firstorder).	2.69766712189	3077
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.5.1	synth with cache (only 1: intro n; only 1: repeat red; only 1: firstorder).	0.22151517868	18
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	synth with cache (only 1: firstorder).	0.497305870056	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	16	synth with cache (only 1: firstorder).	0.556106090546	218
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	synth with cache (only 1: do 2 red; only 1: auto).	0.0217399597168	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	2.3.0	synth with cache (only 1: simpl_relation; only 1: reduce in H; only 1: trivial).	0.114575147629	19
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.0	synth with cache (only 1: intro; only 1: firstorder).	0.0793490409851	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	synth with cache (only 1: firstorder).	0.0178678035736	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.0.3.5.1.109	synth with cache (only 1: exfalso; only 1: elim (lt_irrefl p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	17.0384840965	32591
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1	synth with cache (only 1: reflexivity).	0.0158109664917	2
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40	1.12.10	synth with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.37235403061	1080
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.0.0.0	synth with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	0.0339820384979	6
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	1.0.16.0	synth with cache (only 1: unfold lt, gt; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).	2.42359805107	1660
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40	2.0.18.6	synth with cache (only 1: revert q; only 1: fix le_div2 1; only 1: simpl; only 1: trivial).	20.736782074	18734
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	1.2.0.14.1.1.7	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct n; only 1: exact eq_refl; only 1: rewrite Pos2Nat.inj_succ; only 1: auto).	14.3411397934	20322
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	synth with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0235521793365	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	2.0.1.0.0.0.0	synth with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intros; only 1: auto).	0.038094997406	10
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.0.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: auto).	0.0317590236664	5
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	1.28.0	synth with cache (only 1: intro n; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	1.85829997063	2647
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	0.2.5.0	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: intro; only 1: trivial).	0.0774171352386	64
Coq.PArith.BinPos.Pos.eq_dec	40	0	synth with cache (only 1: decide equality).	0.0329060554504	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	synth with cache (only 1: trivial).	0.0177929401398	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	synth with cache (only 1: reflexivity).	0.0171341896057	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	1.0.1.0.1.0.2	synth with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.461699962616	122
Coq.PArith.BinPos.Pos.double_succ	40	0.0	synth with cache (only 1: simpl; only 1: now f_equal).	0.0202441215515	2
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	0	synth with cache (only 1: now destruct p).	0.0326111316681	1
Coq.PArith.BinPos.Pos.succ_not_1	40	0	synth with cache (only 1: now destruct p).	0.032016992569	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.2.0.3	synth with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	1.65947294235	579
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.3.0.0.0.2.0	synth with cache (only 1: intro H; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: apply succ_pred_double; only 1: now f_equal).	1.23179006577	418
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	1.0.0.0.1.4.0.5	synth with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	3.48179292679	2048
Coq.PArith.BinPos.Pos.add_1_r	40	2	synth with cache (only 1: now destruct p).	0.0178010463715	3
Coq.PArith.BinPos.Pos.add_1_l	40	0	synth with cache (only 1: now destruct p).	0.0174322128296	1
Coq.PArith.BinPos.Pos.add_carry_spec	40	2.1.36.20	synth with cache (only 1: revert q; only 1: fix le_div2 1; only 1: intros m; only 1: auto).	32.9169509411	37041
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.5.1.0.1.16	synth with cache (only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto using add_carry_add).	3.52562499046	1732
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	2.0	synth with cache (only 1: revert q; only 1: now destruct p).	0.53983092308	203
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.1	synth with cache (only 1: revert P a f; only 1: trivial).	0.0220410823822	3
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.0.0.0.0.0	synth with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0383269786835	7
Coq.PArith.BinPos.Pos.mul_1_r	40	0.0.1.1.0.1.9	synth with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial).	2.09790301323	1419
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.2.0	synth with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.206176042557	93
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	synth with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.236243009567	110
Coq.PArith.BinPos.Pos.mul_eq_1_l	40	3.4.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert q; only 1: induction p; only 1: intros [q| q| ] H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: simpl in H; only 1: destr_eq H; only 1: discriminate; only 1: trivial).	38.7192900181	14347
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	synth with cache (only 1: now destruct p, q).	0.0377948284149	1
Coq.PArith.BinPos.Pos.square_xO	40	10.0.0	synth with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	1.10851287842	331
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40	0.0.0.0.1.0.8.5.24	synth with cache (only 1: apply add_reg_r with (r := p); only 1: symmetry; only 1: induction p; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: f_equal).	17.8651390076	22164
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40	0.24.1	synth with cache (only 1: revert q; only 1: fix le_div2 1; only 1: auto).	16.4780290127	17875
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	synth with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: trivial).	0.0412490367889	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	1.0.1.0.0.1.1.5.0.0.0	synth with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: reflexivity || apply f_equal || exfalso; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: trivial).	10.3368861675	7988
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	4.2.5.6	synth with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	2.02319383621	2267
Coq.PArith.BinPos.Pos.leb_le	40	4.5.1.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	1.58495998383	1581
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	5.7.19	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: easy).	9.07555794716	10858
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	7.4.16	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	10.9043579102	10503
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.1.9.0	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.925123929977	329
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	5.8.16	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	9.41428899765	10673
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	8.9.9	synth with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt, le, compare; only 1: now destruct compare_cont; split; try apply comparison_eq_stable).	5.1823720932	3753
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.1.6.24	synth with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	8.71901297569	9451
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0	synth with cache (only 1: trivial).	0.0167088508606	1
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	synth with cache (only 1: reflexivity).	0.0164389610291	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.12.10.3	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: trivial).	3.38648915291	3905
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.10.9.4	synth with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: reflexivity).	1.03649687767	1043
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40	0.0.2.7	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro n; only 1: auto).	0.331174135208	210
Coq.PArith.BinPos.Pos.gt_iff_add	40	1.2.4	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	0.240720033646	64
Coq.PArith.BinPos.Pos.compare_cont_refl	40	1.1.1.11	synth with cache (only 1: induction p; only 1: auto; only 1: auto; only 1: auto).	0.330169200897	324
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0	synth with cache (only 1: unfold lt; only 1: now split).	0.018917798996	2
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.10	synth with cache (only 1: unfold gt, le, compare; only 1: now split).	0.125427961349	33
Coq.PArith.BinPos.Pos.gt_lt_iff	40	1.2	synth with cache (only 1: unfold gt, le, compare; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.414360046387	62
Coq.PArith.BinPos.Pos.gt_lt	40	5	synth with cache (only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.0421261787415	6
Coq.PArith.BinPos.Pos.lt_gt	40	0	synth with cache (only 1: apply gt_lt_iff).	0.0174701213837	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	1.2	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0420651435852	19
Coq.PArith.BinPos.Pos.ge_le	40	7	synth with cache (only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	0.0574328899384	12
Coq.PArith.BinPos.Pos.le_ge	40	0	synth with cache (only 1: apply ge_le_iff).	0.0178089141846	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	0.6.6.14.1	synth with cache (only 1: apply lt_eq_cases; only 1: destruct p; only 1: now left; only 1: now left; only 1: now right).	20.8517239094	16628
Coq.PArith.BinPos.Pos.nlt_1_r	40	3	synth with cache (only 1: now destruct p).	0.0378079414368	4
Coq.PArith.BinPos.Pos.lt_1_succ	40	2	synth with cache (only 1: now destruct p).	0.0576460361481	25
Coq.PArith.BinPos.Pos.le_nlt	40	1.0	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0264229774475	3
Coq.PArith.BinPos.Pos.lt_nle	40	0.0	synth with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.0243768692017	2
Coq.PArith.BinPos.Pos.lt_le_incl	40	19	synth with cache (only 1: congruence).	0.970335006714	435
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	6.2	synth with cache (only 1: unfold le, ge; only 1: now rewrite compare_succ_succ).	0.160169124603	37
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	0.0.0	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: exact PeanoNat.Nat.lt_trans).	0.0233790874481	3
Coq.PArith.BinPos.Pos.lt_compat	40	4	synth with cache (only 1: solve_proper).	0.384125947952	64
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	synth with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0224449634552	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40	0.0.1.4.0.4.4.0.1.1.1.1	synth with cache (only 1: intros H H'; only 1: apply le_lteq in H; only 1: destruct H; only 1: apply le_lteq in H'; only 1: destruct H'; only 1: apply lt_eq_cases; only 1: generalize (PeanoNat.Nat.lt_trans n m p); only 1: auto with relations; only 1: subst; only 1: apply le_lteq; only 1: now left; only 1: now subst).	28.938338995	16825
Coq.PArith.BinPos.Pos.le_succ_l	40	0.1.9.2.1	synth with cache (only 1: unfold le, ge; only 1: rewrite compare_gt_iff; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	4.53280687332	2713
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40	5.3.2	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans).	0.0721859931946	92
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.6.1	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: intuition).	0.131034135818	25
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.8.0	synth with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.321250915527	66
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.5.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0648350715637	12
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.6.0	synth with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0650420188904	12
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	synth with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0251970291138	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	1.0.0.1.0.2	synth with cache (only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.0455310344696	11
Coq.PArith.BinPos.Pos.pred_sub	40	0	synth with cache (only 1: now destruct p).	0.0201539993286	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40	0.13.3	synth with cache (only 1: revert p q r; only 1: fix gcd_greatest 1; only 1: trivial).	1.17395997047	721
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40	0.11.7	synth with cache (only 1: revert p q r; only 1: fix gcd_greatest 1; only 1: trivial).	2.64377117157	2170
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0366261005402	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.1.0.0	synth with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0443289279938	5
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.3.2.6	synth with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	1.76405501366	670
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40	0.45	synth with cache (only 1: fix le_div2 1; only 1: trivial).	10.3230240345	17074
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	synth with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0493941307068	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold max; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0498158931732	9
Coq.PArith.BinPos.Pos.min_1_l	40	1.21	synth with cache (only 1: apply min_l; only 1: apply le_1_l).	0.305676937103	271
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: unfold min; only 1: case compare_spec; only 1: congruence; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0498778820038	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40	5.0.5.0.1	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros; only 1: now apply add_le_mono_l).	5.85567593575	3275
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.1.0.4	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0815029144287	25
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.1.0.2	synth with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0557610988617	17
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	8.2.1.0.3	synth with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: intros; only 1: now apply mul_le_mono_l).	4.22357606888	2739
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.1.0.5	synth with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.260441064835	67
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.1.0.6	synth with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.100101947784	45
Coq.PArith.BinPos.Pos.iter_op_succ	40	2.2.8.0.6.2	synth with cache (only 1: induction p; only 1: intros; only 1: simpl; only 1: now rewrite ?H, ?IHp; only 1: reflexivity; only 1: CRelationClasses.simpl_crelation).	2.81936907768	3235
Coq.PArith.BinPos.Pos.of_nat_succ	40	2.7.40	synth with cache (only 1: revert n; only 1: fix le_div2 1; only 1: auto).	1.03751802444	1501
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.19.7.1	synth with cache (only 1: intros q r; only 1: revert q; only 1: fix sqrtrem_spec 1; only 1: now f_equal).	7.35405492783	8881
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	1.2.4.75	synth with cache (only 1: unfold ggcd, gcd; only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	26.0800769329	66006
Coq.PArith.BinPos.Pos.gcd_divide_r	40	2.2.1	synth with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: auto).	0.252324104309	68
Coq.PArith.BinPos.Pos.gcdn_greatest	40	0.6	synth with cache (only 1: fix le_div2 1; only 1: auto).	0.0455980300903	26
Coq.PArith.BinPos.Pos.gcd_greatest	40	8.0.3	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto using max_le_compat_l, le_min_r).	0.76430106163	442
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.2	synth with cache (only 1: unfold Pos.gt; only 1: now split).	0.027960062027	4
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	1.1.0.25.2	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: intuition; only 1: now intuition; only 1: intuition).	6.52578210831	8518
Coq.Arith.Le.le_n_0_eq	40	0.1	synth with cache (only 1: inversion 1; only 1: auto).	0.0333621501923	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	0.0.8	synth with cache (only 1: fix even_spec 1; only 1: intro n; only 1: trivial).	0.24388217926	120
Coq.Arith.Even.odd_equiv	40	1.2.1	synth with cache (only 1: fix even_equiv 1; only 1: intros; only 1: trivial).	0.0587780475616	35
Coq.Arith.Even.even_or_odd	40	0.0.9.40.1	synth with cache (only 1: left; only 1: revert n; only 1: fix even_equiv 1; only 1: intros n; only 1: trivial).	1.47256088257	4152
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.035444021225	5
Coq.Arith.Even.not_even_and_odd	40	0.59.8	synth with cache (only 1: intro H; only 1: fix even_equiv 1; only 1: auto).	17.5820469856	49996
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	1	synth with cache (only 1: parity_binop).	0.502589941025	11
Coq.Arith.Even.even_even_plus	40	9	synth with cache (only 1: parity_binop).	0.377016067505	10
Coq.Arith.Even.odd_plus_l	40	1	synth with cache (only 1: parity_binop).	0.0779869556427	2
Coq.Arith.Even.odd_plus_r	40	1	synth with cache (only 1: parity_binop).	0.0767588615417	2
Coq.Arith.Even.odd_even_plus	40	1	synth with cache (only 1: parity_binop).	0.11613702774	15
Coq.Arith.Even.even_plus_aux	40	0.0.0.0.0.0.3	synth with cache (only 1: split; only 1: split; only 1: parity_binop; only 1: parity_binop; only 1: split; only 1: parity_binop; only 1: parity_binop).	0.60827589035	18
Coq.Arith.Even.even_plus_even_inv_r	40	1	synth with cache (only 1: parity_binop).	0.0819849967957	2
Coq.Arith.Even.even_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0763440132141	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0766520500183	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.134459018707	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0782861709595	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0763099193573	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	synth with cache (only 1: parity_binop).	0.085216999054	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0793538093567	1
Coq.Arith.Even.even_mult_aux	40	0	synth with cache (only 1: parity_binop).	0.229181051254	1
Coq.Arith.Even.even_mult_l	40	5	synth with cache (only 1: parity_binop).	0.0550470352173	6
Coq.Arith.Even.even_mult_r	40	1	synth with cache (only 1: parity_binop).	0.054468870163	2
Coq.Arith.Even.even_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0856409072876	1
Coq.Arith.Even.even_mult_inv_l	40	0	synth with cache (only 1: parity_binop).	0.0764760971069	1
Coq.Arith.Even.odd_mult	40	1	synth with cache (only 1: parity_binop).	0.0803029537201	11
Coq.Arith.Even.odd_mult_inv_l	40	1	synth with cache (only 1: parity_binop).	0.0594339370728	11
Coq.Arith.Even.odd_mult_inv_r	40	0	synth with cache (only 1: parity_binop).	0.0550458431244	1
Coq.Arith.Minus.minus_n_O	40	0	synth with cache (only 1: now destruct n).	0.0166318416595	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	synth with cache (only 1: now Nat.nzsimpl').	0.037850856781	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.2.31	synth with cache (only 1: Nat.induct ltac:(n); only 1: now Nat.nzsimpl; only 1: intros n IH; only 1: now rewrite IH).	1.19656801224	1864
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	10.0.10	synth with cache (only 1: nzinduct p; only 1: now Nat.nzsimpl; only 1: intuition).	3.38471579552	1295
Coq.Arith.Minus.plus_minus	40	4.1.1.0.0.0.1.2	synth with cache (only 1: Nat.double_induct n m; only 1: intro n; only 1: symmetry; only 1: now destruct n; only 1: intro n; only 1: intros; only 1: auto; only 1: auto).	1.97076296806	1660
Coq.Arith.Minus.minus_plus	40	1.0.3.2.8	synth with cache (only 1: revert m; only 1: induction n; only 1: intro n; only 1: now destruct n; only 1: trivial).	0.50296998024	440
Coq.Arith.Minus.le_plus_minus_r	40	0.0.2.0.2.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	2.03638386726	1306
Coq.Arith.Minus.le_plus_minus	40	0.0.2.0.2.0.0.0.0.2	synth with cache (only 1: revert m; only 1: induction n; only 1: intros; only 1: now Nat.nzsimpl; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	9.75631403923	6421
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	19.2.0.7	synth with cache (only 1: intros a n; only 1: intros EQ; only 1: rewrite <- EQ; only 1: intuition).	5.02234220505	6884
Coq.Arith.Between.Between.between_le	40	5.2.13	synth with cache (only 1: induction 1; only 1: apply PeanoNat.Nat.le_refl; only 1: intuition).	2.12611603737	2409
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40	8.13	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	3.21296691895	3619
Coq.Arith.Between.Between.exists_le_S	40	14.0.2.4	synth with cache (only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto with arith).	5.87201809883	6085
Coq.Arith.Between.Between.exists_S_le	40	1.1.17	synth with cache (only 1: fix le_div2 1; only 1: intros n m H; only 1: auto).	3.52274799347	4111
Coq.Arith.Between.Between.in_int_intro	40	1.0.3	synth with cache (only 1: fix gcd_greatest 1; only 1: intros x y z; only 1: auto).	0.0530388355255	25
Coq.Arith.Between.Between.in_int_lt	40	4.1	synth with cache (only 1: intros n m p (q, Hq); only 1: PeanoNat.Nat.Private_Tac.order || (right; PeanoNat.Nat.Private_Tac.order) || (left; PeanoNat.Nat.Private_Tac.order)).	0.0238080024719	7
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	2.0.7.1	synth with cache (only 1: intros * []; only 1: constructor; only 1: trivial; only 1: auto).	0.390697956085	269
Coq.Arith.Between.Between.in_int_Sp_q	40	3.0	synth with cache (only 1: intros * []; only 1: auto with arith).	0.0226838588715	5
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	2.3.0.0.0	synth with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intro; only 1: auto with arith).	0.0454540252686	10
Coq.Arith.Between.Between.exists_in_int	40
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40	3.14	synth with cache (only 1: fix gcd_greatest 1; only 1: trivial).	4.6781771183	3044
Coq.Arith.Between.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40	0.14.0.2.17	synth with cache (only 1: induction n; only 1: right; only 1: auto; only 1: left; only 1: now exists n).	2.51258397102	4896
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	1.1.0.0.0.0.8.7.7	synth with cache (only 1: destruct n; only 1: intuition; only 1: Nat.cases m; only 1: intro H; only 1: now right; only 1: simpl; only 1: intro H; only 1: intros EQ; only 1: now left).	22.3088657856	23504
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.0.0.0.0.0.4.2	synth with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: Nat.induct ltac:(n); only 1: auto; only 1: intros n [IH1 IH2]; only 1: auto; only 1: intro n; only 1: exact (proj1 (D n))).	1.35070800781	764
Coq.Arith.Div2.lt_div2	40	0.0.3.2.6.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	20.7529740334	12811
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40	1	synth with cache (only 1: intuition).	0.0223069190979	2
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40
Coq.Arith.Div2.odd_S2n	40	1.0.0	synth with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.02654504776	4
Coq.Arith.Div2.div2_double	40	1	synth with cache (only 1: apply Nat.div2_double).	0.485463857651	69
Coq.Arith.Div2.div2_double_plus_one	40	0.10	synth with cache (only 1: rewrite Nat.div2_succ_double; only 1: reflexivity).	1.37466406822	474
Coq.Arith.Plus.plus_assoc_reverse	40	15.0.0.0.2	synth with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: auto with *).	10.8440020084	3469
Coq.Arith.Plus.plus_reg_l	40	2.0.0.0.29	synth with cache (only 1: Nat.induct p; only 1: symmetry; only 1: auto; only 1: intro p; only 1: intuition auto; Nat.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	6.8669719696	8770
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	2	synth with cache (only 1: apply Nat.add_le_mono_l).	0.0550999641418	20
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0187168121338	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	3	synth with cache (only 1: apply Nat.add_le_mono).	0.0225319862366	11
Coq.Arith.Plus.plus_lt_compat	40	0.3.23.2	synth with cache (only 1: intros Hnm Hpq; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order'; only 1: assumption).	1.51750993729	1771
Coq.Arith.Plus.le_plus_l	40	4.14.2.1.6.0.65	synth with cache (only 1: revert m; only 1: Nat.induct ltac:(m); only 1: Nat.nzsimpl; only 1: Nat.Private_Tac.order; only 1: intro H; only 1: Nat.nzsimpl; only 1: auto).	8.7021548748	13098
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	13.0.3.0	synth with cache (only 1: intros LE; only 1: transitivity m; only 1: trivial; only 1: apply Nat.le_add_r).	3.00290298462	1916
Coq.Arith.Plus.lt_plus_trans	40	1.6.2.5.38	synth with cache (only 1: repeat red; only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: auto).	26.9107019901	16175
Coq.Arith.Plus.plus_is_O	40	3.0.0.35	synth with cache (only 1: Nat.induct n; only 1: repeat split; only 1: trivial; only 1: Bool.destr_bool).	8.36196517944	16467
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	0.1.0.1	synth with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	0.0500800609589	15
Coq.Arith.Lt.lt_n_Sm_le	40	0	synth with cache (only 1: apply le_S_n).	0.0160028934479	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.0.0	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0248188972473	3
Coq.Arith.Lt.le_not_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.order).	0.0207781791687	2
Coq.Arith.Lt.lt_not_le	40	0.1	synth with cache (only 1: intro H; only 1: Nat.order).	0.537848949432	195
Coq.Arith.Lt.neq_0_lt	40	0.0	synth with cache (only 1: intro H; only 1: Nat.auto').	0.0211029052734	2
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	synth with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0266191959381	4
Coq.Arith.Lt.lt_n_S	40	12	synth with cache (only 1: apply le_n_S).	0.755646944046	435
Coq.Arith.Lt.lt_S_n	40	2	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0220391750336	12
Coq.Arith.Lt.S_pred	40	1.4.5.0.1	synth with cache (only 1: revert m; only 1: induction n; only 1: intro n; only 1: inversion 1; only 1: trivial).	0.830695867538	784
Coq.Arith.Lt.S_pred_pos	40	1.0.2	synth with cache (only 1: inversion 1; only 1: now subst; only 1: trivial).	0.0421688556671	17
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	9.0.0.0	synth with cache (only 1: destruct n; only 1: inversion 1; only 1: intros _; only 1: auto).	2.27442193031	1163
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	24.1678071022	18775
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40	0.0.0.0.0.1.0.1.0.0.0.0.1.0.0.0.0	synth with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	30.8183290958	24516
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	synth with cache (only 1: exact induction_ltof1).	0.301023960114	188
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	synth with cache (only 1: exact induction_ltof1).	0.0145480632782	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0165131092072	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0168099403381	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	synth with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0166440010071	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.3.11.15	synth with cache (only 1: intros P F; only 1: fix gcd_greatest 1; only 1: intros n; only 1: trivial).	3.00836801529	3605
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	synth with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0415070056915	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	1.0.3.4.0.16.77	synth with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	3.12317180634	9347
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	0.0.0.1	synth with cache (only 1: destruct n; only 1: now left; only 1: right; only 1: apply Peano.le_n_S, Peano.le_0_n).	0.0344688892365	14
Coq.Arith.Compare_dec.lt_eq_lt_dec	40	0.1.21.20.4.43.3	synth with cache (only 1: right; only 1: apply Nat.lt_succ_r; only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: intro; only 1: trivial).	17.036700964	28225
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.2.1.0.0.0.0.0.0	synth with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: intuition; only 1: auto with arith).	0.801676034927	168
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.2.0.0	synth with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.707441091537	277
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.0	synth with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0296878814697	3
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.0.0.35	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: auto; only 1: auto with arith).	1.83346104622	2896
Coq.Arith.Compare_dec.lt_dec	40
Coq.Arith.Compare_dec.gt_dec	40	1	synth with cache (only 1: apply le_dec).	0.0734989643097	29
Coq.Arith.Compare_dec.ge_dec	40	2	synth with cache (only 1: apply le_dec).	0.0426971912384	20
Coq.Arith.Compare_dec.dec_le	40	0.0.1.0.0.0.8	synth with cache (only 1: elim (le_lt_dec n m); only 1: intro H; only 1: left; only 1: now rewrite <- ?Nat.succ_le_mono; only 1: intro H; only 1: right; only 1: Nat.order).	0.492847919464	352
Coq.Arith.Compare_dec.dec_lt	40	6	synth with cache (only 1: apply Nat.le_decidable).	0.0335640907288	23
Coq.Arith.Compare_dec.dec_gt	40	2	synth with cache (only 1: apply Nat.lt_decidable).	0.017058134079	3
Coq.Arith.Compare_dec.dec_ge	40	6	synth with cache (only 1: apply Nat.le_decidable).	0.0176358222961	7
Coq.Arith.Compare_dec.not_eq	40	0	synth with cache (only 1: apply Nat.lt_gt_cases).	0.0178601741791	1
Coq.Arith.Compare_dec.not_le	40	2	synth with cache (only 1: apply Nat.lt_nge).	0.027027130127	13
Coq.Arith.Compare_dec.not_gt	40	4	synth with cache (only 1: apply Nat.le_ngt).	0.0246629714966	13
Coq.Arith.Compare_dec.not_ge	40	4	synth with cache (only 1: apply Nat.lt_nge).	0.0253140926361	14
Coq.Arith.Compare_dec.not_lt	40	3	synth with cache (only 1: apply Nat.le_ngt).	0.0238449573517	12
Coq.Arith.Compare_dec.nat_compare_lt	40	5.9.0	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	7.44201207161	4856
Coq.Arith.Compare_dec.nat_compare_gt	40	3.9.1	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	2.57756304741	1814
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.1.3.1.0.7.8.18	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	11.1678900719	22527
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	14	synth with cache (only 1: apply Nat.compare_lt_iff).	0.374284982681	260
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	16	synth with cache (only 1: apply Nat.compare_gt_iff).	0.565070867538	344
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	5.4.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	1.33689117432	506
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	1	synth with cache (only 1: apply Nat.leb_le).	0.0233778953552	11
Coq.Arith.Compare_dec.leb_correct_conv	40	0.35	synth with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	7.37667798996	8503
Coq.Arith.Compare_dec.leb_complete_conv	40	1	synth with cache (only 1: apply leb_iff_conv).	0.0189361572266	2
Coq.Arith.Compare_dec.leb_compare	40	1.5.2	synth with cache (only 1: revert m; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.790327072144	144
Coq.Arith.EqNat.eq_nat_refl	40	2.14.51	synth with cache (only 1: induction n as [| n IH]; only 1: constructor; only 1: trivial).	0.836196899414	2596
Coq.Arith.EqNat.eq_nat_is_eq	40	3.7.11	synth with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: trivial).	2.50744700432	2580
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	synth with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0327010154724	6
Coq.Arith.EqNat.eq_nat_eq	40	2	synth with cache (only 1: apply eq_nat_is_eq).	0.183926105499	107
Coq.Arith.EqNat.eq_nat_elim	40	0.10	synth with cache (only 1: fix gcd_divide 1; only 1: trivial).	0.0877211093903	66
Coq.Arith.EqNat.eq_nat_decide	40	0.0.1.0.0.0.5.0.1	synth with cache (only 1: induction n; only 1: destruct m; only 1: now left; only 1: now right; only 1: destruct m; only 1: auto; only 1: destruct (IHn m); only 1: auto; only 1: auto).	0.6985039711	484
Coq.Arith.EqNat.beq_nat_refl	40	4.0.23	synth with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.27757191658	445
Coq.Arith.EqNat.beq_nat_true	40	2.0.5.0.0.0.5.3.54	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: easy; only 1: easy; only 1: destruct m; only 1: easy; only 1: auto).	22.5529010296	55853
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40	0.21.3	synth with cache (only 1: intros a Ha; only 1: fix le_div2 1; only 1: trivial).	1.87052893639	2960
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	24.0.3	synth with cache (only 1: induction n; only 1: assumption; only 1: firstorder).	4.08313703537	2953
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0.1	synth with cache (only 1: intros; only 1: firstorder).	0.012855052948	3
Coq.Arith.PeanoNat.Nat.recursion_succ	40	3.0.1.0.3	synth with cache (only 1: intros; only 1: induction n; only 1: firstorder; only 1: simpl; only 1: firstorder).	0.16764497757	119
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	synth with cache (only 1: exact eq_refl).	0.00999093055725	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	synth with cache (only 1: exact eq_refl).	0.00987005233765	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	synth with cache (only 1: exact eq_refl).	0.00955510139465	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	synth with cache (only 1: exact eq_refl).	0.00992488861084	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	synth with cache (only 1: exact eq_refl).	0.0097451210022	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0194721221924	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.10	synth with cache (only 1: induction n; only 1: exact eq_refl; only 1: simpl; only 1: auto).	0.118048191071	64
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	synth with cache (only 1: exact eq_refl).	0.00969290733337	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	0.0.0.6.15.0.0	synth with cache (only 1: split; only 1: exact (le_pred (S n) (S m)); only 1: red; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	15.791187048	25740
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	synth with cache (only 1: decide equality).	0.015830039978	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40	1.5.0.2.0.0.3.5.5	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: reflexivity; only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: easy).	32.7953820229	30243
Coq.Arith.PeanoNat.Nat.compare_succ	40	0	synth with cache (only 1: trivial).	0.0105218887329	1
Coq.Arith.PeanoNat.Nat.max_l	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	6.90952992439	5499
Coq.Arith.PeanoNat.Nat.max_r	40	0.0.1.0.1.0.0.0.0.0.0.0.0.0.5	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	8.73269104958	6719
Coq.Arith.PeanoNat.Nat.min_l	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.6	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.57202100754	3947
Coq.Arith.PeanoNat.Nat.min_r	40	0.0.1.0.0.0.0.0.0.0.0.0.0.0.8	synth with cache (only 1: intros n m; only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	6.76571893692	5422
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.0167951583862	2
Coq.Arith.PeanoNat.Nat.pow_0_r	40	3	synth with cache (only 1: now nzsimpl).	0.0186040401459	4
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	3.1.1.0	synth with cache (only 1: intro n; only 1: assert (succ_r : forall x y, x + S y = S (x + y)) by now induction x; only 1: simpl; only 1: auto).	0.122015953064	50
Coq.Arith.PeanoNat.Nat.square_spec	40	0	synth with cache (only 1: reflexivity).	0.0124950408936	1
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	2.0.0.1	synth with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: pose proof (pred_succ n) as EQ'; only 1: now apply (neq_succ_diag_l 0)).	0.0364120006561	16
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	1.1.5.0	synth with cache (only 1: fix even_spec 1; only 1: intro H; only 1: rewrite even_spec; only 1: tauto).	0.366823196411	195
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	0.0	synth with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.0165641307831	2
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	0.3	synth with cache (only 1: inversion 1; only 1: reflexivity).	0.066123008728	68
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.1.0.3	synth with cache (only 1: fix gcd_divide 1; only 1: intro n; only 1: intro H; only 1: auto).	0.114889860153	41
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	synth with cache (only 1: intros; only 1: apply gcd_divide).	0.0168499946594	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	14	synth with cache (only 1: apply le_0_l).	0.189893960953	91
Coq.Arith.PeanoNat.Nat.div2_double	40	0.0.8.0.0.35.25	synth with cache (only 1: nzsimpl; only 1: nzinduct n; only 1: simpl; only 1: auto; only 1: destr_bool; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	13.551609993	15791
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	1.0.0.1.0.0	synth with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.0319449901581	8
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	0.0	synth with cache (only 1: intro n; only 1: now nzsimpl').	0.0330910682678	2
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.0.12	synth with cache (only 1: nzinduct n; only 1: tauto; only 1: intro n; only 1: intuition).	0.349540948868	299
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	0.11.1	synth with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: easy).	11.9766609669	4056
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.0	synth with cache (only 1: apply testbit_bitwise_1; only 1: reflexivity; only 1: trivial).	0.0205781459808	3
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.1.0.1.0.5	synth with cache (only 1: apply testbit_bitwise_2; only 1: reflexivity; only 1: rewrite max_le_iff; only 1: auto; only 1: rewrite max_le_iff; only 1: auto).	1.68200111389	252
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	synth with cache (only 1: now nzsimpl').	0.0212650299072	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	synth with cache (only 1: inversion H).	0.0151300430298	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	1	synth with cache (only 1: Nat.order).	0.0487051010132	20
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0181970596313	1
Coq.Arith.Gt.gt_S_n	40	1	synth with cache (only 1: apply Nat.succ_lt_mono).	0.0173449516296	2
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0	synth with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0181729793549	1
Coq.Arith.Gt.le_not_gt	40	1	synth with cache (only 1: apply Nat.le_ngt).	0.0181198120117	2
Coq.Arith.Gt.gt_not_le	40	0	synth with cache (only 1: apply Nat.lt_nge).	0.0170907974243	1
Coq.Arith.Gt.le_S_gt	40	2.0	synth with cache (only 1: intro H; only 1: trivial).	0.0208349227905	4
Coq.Arith.Gt.gt_S_le	40	0	synth with cache (only 1: apply Peano.le_S_n).	0.0160801410675	1
Coq.Arith.Gt.gt_le_S	40	0	synth with cache (only 1: apply Nat.le_succ_l).	0.0168890953064	1
Coq.Arith.Gt.le_gt_S	40	0.4.1	synth with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.027820110321	8
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	3.2.16	synth with cache (only 1: induction n; only 1: now constructor; only 1: intuition).	1.05881214142	932
Coq.Arith.Gt.plus_gt_reg_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.0177240371704	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	synth with cache (only 1: apply Nat.add_lt_mono_l).	0.018383026123	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	1.13	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.125889062881	264
Coq.Logic.JMeq.JMeq_trans	40	0.7	synth with cache (only 1: destruct 1; only 1: trivial).	0.0229840278625	21
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0134229660034	4
Coq.Logic.JMeq.JMeq_rect	40	1.0.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0137391090393	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	2.1.0.1.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.02485704422	13
Coq.Logic.JMeq.JMeq_rect_r	40	0.2.0	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.014340877533	5
Coq.Logic.JMeq.JMeq_congr	40	0.34.2	synth with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.817174911499	3825
Coq.Logic.JMeq.JMeq_eq_dep_id	40	3.1.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0153579711914	8
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.014533996582	4
Coq.Logic.JMeq.eq_dep_JMeq	40	1.4	synth with cache (only 1: destruct 1; only 1: auto).	0.0223698616028	20
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.6.21.2	synth with cache (only 1: destruct 1; only 1: intros; only 1: rewrite H; only 1: auto).	1.5401968956	4213
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.0.11.5	synth with cache (only 1: intro z; only 1: intros [x y]; only 1: simpl in *; only 1: trivial).	0.129028081894	406
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40	0.10.13.1.6	synth with cache (only 1: constructor; only 1: reflexivity; only 1: intros [x y]; only 1: subst; only 1: reflexivity).	3.76164102554	13455
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.1	synth with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: exact eq_refl).	0.0178968906403	5
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	2.6	synth with cache (only 1: intros A *; only 1: tauto).	0.0540709495544	33
Coq.Logic.Classical_Prop.not_imply_elim	40	10.0.1	synth with cache (only 1: unfold not; only 1: intros P H; only 1: tauto).	0.339365005493	406
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.0.5.0.0	synth with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intros; only 1: assumption).	0.0304529666901	24
Coq.Logic.Classical_Prop.imply_to_or	40	2.0.0	synth with cache (only 1: intros A; only 1: intro NP; only 1: tauto).	0.0245668888092	12
Coq.Logic.Classical_Prop.imply_to_and	40	1.1	synth with cache (only 1: intros Ext A a; only 1: tauto).	0.0245060920715	4
Coq.Logic.Classical_Prop.or_to_imply	40	1	synth with cache (only 1: tauto).	0.0272438526154	28
Coq.Logic.Classical_Prop.not_and_or	40	3.2	synth with cache (only 1: intros n m H; only 1: tauto).	0.0307071208954	7
Coq.Logic.Classical_Prop.or_not_and	40	1.0	synth with cache (only 1: intros; only 1: tauto).	0.0179221630096	3
Coq.Logic.Classical_Prop.not_or_and	40	0	synth with cache (only 1: tauto).	0.0160858631134	1
Coq.Logic.Classical_Prop.and_not_or	40	0	synth with cache (only 1: tauto).	0.150974988937	1
Coq.Logic.Classical_Prop.imply_and_or	40	4	synth with cache (only 1: tauto).	0.0296211242676	31
Coq.Logic.Classical_Prop.imply_and_or2	40	7.0	synth with cache (only 1: intros x y z; only 1: tauto).	0.0340552330017	33
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	1.18.31	synth with cache (only 1: intro H; only 1: destruct H; only 1: auto).	1.00732707977	5258
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	4.12	synth with cache (only 1: red; only 1: eauto).	0.0442209243774	136
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40	1.24	synth with cache (only 1: subst; only 1: split).	0.183429002762	598
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40	0.18.7	synth with cache (only 1: intros; only 1: subst; only 1: reflexivity).	0.160525083542	550
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.2.0.0.2.6.1	synth with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: reflexivity).	0.461426019669	1019
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	2.2.3.3	synth with cache (only 1: intuition; only 1: constructor; only 1: intros y [H1 H2]; only 1: intuition).	5.24839615822	244
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	7	synth with cache (only 1: firstorder).	0.174298048019	31
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40	1.28.16	synth with cache (only 1: reduce_goal; only 1: apply H; only 1: firstorder).	26.6964449883	35971
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.0.1.31.8	synth with cache (only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: exists f; only 1: auto).	14.7236280441	26758
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	1.0.1.9.3.0.1.10.1.1.1	synth with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: intro H; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: auto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: auto; only 1: exists f; only 1: firstorder).	13.5942380428	23330
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.1.0.0.0.0.1	synth with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0239458084106	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	2.3.15	synth with cache (only 1: compute; only 1: intros; only 1: auto).	0.861787796021	1325
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	1.1.0.4.1	synth with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: assumption; only 1: exists x; only 1: assumption).	0.0717840194702	99
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40	0.14.24.14	synth with cache (only 1: apply lt_wf_rec; only 1: constructor; only 1: fix gcd_divide 1; only 1: trivial).	29.4030089378	41344
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40	0.11.25.16	synth with cache (only 1: apply lt_wf_rec; only 1: constructor; only 1: fix gcd_divide 1; only 1: trivial).	15.5035810471	30121
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.1.1.0.1.1	synth with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: intro x; only 1: destruct (H x) as (y, (HRxy, _)); only 1: trivial).	0.0336470603943	19
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.0.0.0	synth with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	35.7363908291	19237
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40	0.33.26.32	synth with cache (only 1: apply lt_wf_rec; only 1: constructor; only 1: fix gcd_divide 1; only 1: trivial).	38.4498400688	96629
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	1.0.5.0	synth with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0294871330261	10
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	34	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	2.64817094803	2598
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.0.0.1	synth with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.174909830093	33
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	1.0.9.1.0.3.5	synth with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	1.64421200752	2465
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	0.26.13.63	synth with cache (only 1: destruct b; only 1: simpl in *; only 1: subst; only 1: exact eq_refl).	2.14598608017	18120
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	1.0.0.4.3	synth with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.0781519412994	158
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	1.1.0.3.54	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: auto; only 1: auto).	1.93213510513	12574
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40	17.5.1.2.0	synth with cache (only 1: intros H A; only 1: destruct (H A); only 1: auto; only 1: left; only 1: easy).	6.04665899277	17362
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	10.0.4	synth with cache (only 1: unfold not; only 1: intros P notall; only 1: eauto).	2.61996078491	3260
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	0.0.0.8.0.0.0.0.0.1	synth with cache (only 1: intros P notall; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: apply not_all_not_ex with (P := fun x => ~ P x); only 1: intro all; only 1: apply abs; only 1: intro n; only 1: apply NNPP; only 1: apply all).	10.4734060764	10735
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.1.1	synth with cache (only 1: unfold not; only 1: destruct 1; only 1: eauto).	0.0473470687866	46
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	1.0.2.0.0	synth with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: simpl in *; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0191371440887	8
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40	4.0.35.20	synth with cache (only 1: intros (l, L); only 1: induction l as [| a l IH]; only 1: auto; only 1: firstorder).	27.2692530155	56324
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40	0.1.11.41.24	synth with cache (only 1: red; only 1: revert n; only 1: fix le_div2 1; only 1: intros; only 1: auto with arith).	3.2213511467	13113
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40	26.53	synth with cache (only 1: red; only 1: eauto with arith).	1.13263893127	3763
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	synth with cache (only 1: exists a1; only 1: auto).	0.0300250053406	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.1.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0	synth with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: auto).	37.2412519455	24551
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.1.12	synth with cache (only 1: intro H; only 1: destruct 1; only 1: trivial).	0.077085018158	221
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.5	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0184121131897	16
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0143539905548	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	synth with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: exact eq_refl).	0.0139639377594	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.17.1.3	synth with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.602674007416	1490
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	synth with cache (only 1: exact eq_refl).	0.00984811782837	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	synth with cache (only 1: trivial).	0.0101141929626	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	2.1.1	synth with cache (only 1: intros; only 1: intros p q; only 1: eauto using @functional_extensionality_dep).	0.0157771110535	7
Coq.Logic.HLevels.false_hprop	40	3.12	synth with cache (only 1: intros p q; only 1: destruct p, q).	0.0375080108643	114
Coq.Logic.HLevels.true_hprop	40	0.7.1	synth with cache (only 1: intros p q; only 1: destruct p, q; only 1: exact eq_refl).	0.0221319198608	29
Coq.Logic.HLevels.not_hprop	40	6.10.2.1.2	synth with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro H; only 1: contradiction).	0.590990066528	1947
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	10.0.0.0.35.1	synth with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: auto; only 1: exists x; only 1: firstorder).	15.3933050632	32778
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.4	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0186469554901	20
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	3.0	synth with cache (only 1: destruct 1; only 1: auto).	0.0129518508911	5
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	0.33.0	synth with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.755048036575	3065
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	2.37	synth with cache (only 1: inversion 1; only 1: reflexivity).	1.79484081268	9094
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	0.1.7	synth with cache (only 1: intro H; only 1: destruct 1; only 1: reflexivity).	0.0398488044739	54
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.18.1.0.8.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.85934495926	7094
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.2	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0214250087738	14
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.1	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0138280391693	3
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.15.1.0.5.1	synth with cache (only 1: split; only 1: intro; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.66101408005	4028
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	2.1.2	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0226440429688	16
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	3.2.0.0	synth with cache (only 1: intros; only 1: dependent rewrite H; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0233120918274	11
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.12.0.13.37.7.10.17	synth with cache (only 1: subst; only 1: red; only 1: intros eq_rect_eq; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct H; only 1: reflexivity).	11.0634739399	77401
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	1.11	synth with cache (only 1: red; only 1: auto).	0.0323760509491	61
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	5.11.1.4.7	synth with cache (only 1: intros; only 1: intro UIP; only 1: intro p; only 1: rewrite H; only 1: auto).	1.08490109444	4114
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	0.5	synth with cache (only 1: red; only 1: auto).	0.0211560726166	14
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	11.6.1	synth with cache (only 1: intros eq_rect_eq; only 1: intro Streicher_K; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.59212994576	2820
Coq.Logic.EqdepFacts.f_eq_dep	40	0.7	synth with cache (only 1: destruct 1; only 1: reflexivity).	0.0278129577637	21
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.5.1	synth with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0169038772583	9
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	synth with cache (only 1: intros * []; only 1: trivial).	0.0139799118042	3
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	6	synth with cache (only 1: auto).	0.0158021450043	12
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	52	synth with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	1.96731185913	8927
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	1.3.0.1.2.0	synth with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: intro H1; only 1: elim H1).	0.0842578411102	182
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	0.12.8.3	synth with cache (only 1: intros H; only 1: intros; only 1: apply H; only 1: assumption).	0.537385940552	1595
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	6.3.15.2	synth with cache (only 1: unfold not; only 1: induction 1; only 1: auto; only 1: contradiction).	1.34365987778	6298
Coq.Logic.Decidable.dec_True	40	4.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0143299102783	11
Coq.Logic.Decidable.dec_False	40	1.1	synth with cache (only 1: unfold decidable; only 1: auto).	0.0113890171051	4
Coq.Logic.Decidable.dec_or	40	11.3	synth with cache (only 1: unfold decidable, not; only 1: tauto).	0.242757081985	365
Coq.Logic.Decidable.dec_and	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.031082868576	4
Coq.Logic.Decidable.dec_not	40	3.1.1	synth with cache (only 1: unfold decidable; only 1: unfold decidable, not; only 1: tauto).	0.0189700126648	8
Coq.Logic.Decidable.dec_imp	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0240399837494	4
Coq.Logic.Decidable.dec_iff	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0340149402618	4
Coq.Logic.Decidable.not_not	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0256929397583	18
Coq.Logic.Decidable.not_or	40	2	synth with cache (only 1: tauto).	0.0151419639587	3
Coq.Logic.Decidable.not_and	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0209770202637	4
Coq.Logic.Decidable.not_imp	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0253279209137	5
Coq.Logic.Decidable.imp_simp	40	1.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0234367847443	18
Coq.Logic.Decidable.not_iff	40	2.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0536458492279	5
Coq.Logic.Decidable.not_true_iff	40	2.2.2	synth with cache (only 1: split; only 1: tauto; only 1: tauto).	0.0153071880341	9
Coq.Logic.Decidable.not_false_iff	40	1	synth with cache (only 1: tauto).	0.0107178688049	2
Coq.Logic.Decidable.not_not_iff	40	0.2	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0221960544586	4
Coq.Logic.Decidable.contrapositive	40	1.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0215029716492	4
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0248069763184	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0244917869568	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0237519741058	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0245440006256	2
Coq.Logic.Decidable.imp_not_l	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0259108543396	2
Coq.Logic.Decidable.not_or_iff	40	0	synth with cache (only 1: tauto).	0.0188050270081	1
Coq.Logic.Decidable.not_and_iff	40	1	synth with cache (only 1: tauto).	0.0159559249878	2
Coq.Logic.Decidable.not_imp_iff	40	0.1	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0308899879456	3
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	synth with cache (only 1: unfold decidable; only 1: tauto).	0.0307710170746	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	2	synth with cache (only 1: eauto with *).	0.0248241424561	3
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	synth with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0845718383789	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	10.1.0.6	synth with cache (only 1: induction s; only 1: auto; only 1: simpl; only 1: intuition_in).	5.44062614441	1091
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.1.0.2	synth with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.646945953369	8
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.1.0	synth with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	1.37627291679	781
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	synth with cache (only 1: exact (rrmatch _ _ _)).	0.0213439464569	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	1	synth with cache (only 1: exact (rmatch _ _ _)).	0.0230460166931	2
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	synth with cache (only 1: unfold add; only 1: now autorew).	0.0528070926666	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.2.1	synth with cache (only 1: induct s x; only 1: eauto with *; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.432537078857	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	17.2	synth with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	1.90697193146	1027
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	synth with cache (only 1: exact (rmatch _ _ _)).	0.0229299068451	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	9	synth with cache (only 1: ok).	0.48109793663	36
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	3	synth with cache (only 1: firstorder).	0.0226628780365	4
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.1.14.27	synth with cache (only 1: intros n; only 1: induction n; only 1: inversion 1; only 1: simpl; only 1: auto).	34.2267348766	18769
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	synth with cache (only 1: now rewrite partition_spec).	0.0251090526581	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	synth with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0272481441498	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.8.62.4	synth with cache (only 1: intros; only 1: elim H; only 1: split; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	10.8895020485	24579
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.2.0.2.2.0.7.5	synth with cache (only 1: unfold union; only 1: intros a b c Ha Hc; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	8.72313189507	3523
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.1	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0721700191498	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.1.0.1.22	synth with cache (only 1: inversion 1; only 1: invrb; only 1: auto; only 1: invrb; only 1: auto).	0.813462972641	874
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	synth with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0571050643921	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	5.19.0	synth with cache (only 1: unfold singleton; only 1: red; only 1: eauto).	0.465660095215	741
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	1.2.1.1.0.2	synth with cache (only 1: intro H; only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.763901948929	322
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.3.0.4	synth with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	0.454232931137	242
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	0.0	synth with cache (only 1: invrb; only 1: intuition).	0.0342230796814	2
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0	synth with cache (only 1: constructor; only 1: auto; only 1: trivial).	0.0382790565491	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.1.4.1.0	synth with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.453169107437	107
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	3.16	synth with cache (only 1: unfold filter; only 1: auto_tc).	0.399456977844	351
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.1.1.1	synth with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.041344165802	7
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.0.0	synth with cache (only 1: unfold partition; only 1: destruct partition_aux; only 1: simpl; only 1: auto_tc).	0.0409359931946	4
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	2.1.0.1.1.0.3	synth with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.28754711151	561
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	synth with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0665788650513	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	0.0.2.1.0.0.0	synth with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0603959560394	10
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.0.0.1.0	synth with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0572319030762	9
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.0.12.4.0.3	synth with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: intros (n, H); only 1: ok; only 1: intros; only 1: auto_tc; only 1: intros; only 1: auto_tc).	23.274848938	20693
Coq.MSets.MSetRBT.Make.remove_min_spec1	40	0.71	synth with cache (only 1: fix odd_spec 1; only 1: auto).	30.249943018	45882
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.1.0.1	synth with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: split; only 1: trivial; only 1: trivial).	0.0790801048279	16
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	32	synth with cache (only 1: firstorder).	15.2308030128	7184
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.0.4.0.0	synth with cache (only 1: intros; only 1: symmetry; only 1: split; only 1: easy; only 1: intros H; only 1: trivial).	0.109307050705	42
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	2.0	synth with cache (only 1: intros n; only 1: now destruct n).	0.0340211391449	4
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	7	synth with cache (only 1: firstorder).	0.0281648635864	8
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	2.4.3	synth with cache (only 1: fix odd_spec 1; only 1: fix even_spec 1; only 1: assumption).	0.309430122375	106
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.0.33	synth with cache (only 1: fix le_div2 1; only 1: intros n; only 1: trivial).	2.00527095795	2518
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	2.12	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool).	2.62502217293	1667
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40	3.15	synth with cache (only 1: fix odd_spec 1; only 1: destr_bool).	33.4694399834	19290
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.1.0.0.0.0.1.3	synth with cache (only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: trivial).	0.503623008728	312
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	synth with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.0563681125641	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	0.0.11.25	synth with cache (only 1: intros a; only 1: fix sqrtrem_spec 1; only 1: intro n; only 1: eauto).	4.66491293907	8059
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40	0.0.2	synth with cache (only 1: fix sqrtrem_spec 1; only 1: intro; only 1: eauto).	0.0485551357269	22
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0429699420929	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40	0.0.0.5	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0471429824829	18
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0386888980865	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0380380153656	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	synth with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.037780046463	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.14	synth with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	1.59074306488	1183
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.21	synth with cache (only 1: intros [| l' o' r']; only 1: auto; only 1: reflexivity).	2.05498480797	865
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40	1.28	synth with cache (only 1: fix le_div2 1; only 1: auto).	7.342222929	4914
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40	2.15.16	synth with cache (only 1: intros a n Hn; only 1: fix even_spec 1; only 1: destr_bool).	15.6057400703	11764
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	4.2.0.0	synth with cache (only 1: intros; only 1: rewrite partition_filter; only 1: simpl; only 1: reflexivity).	0.0514860153198	10
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	0.42.15	synth with cache (only 1: firstorder; only 1: rewrite <- H; only 1: trivial).	2.94141793251	5193
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	synth with cache (only 1: intros E; only 1: apply <- add_spec; only 1: auto with relations).	0.0503530502319	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.0.1.4	synth with cache (only 1: rewrite remove_spec; only 1: intro H; only 1: intros; only 1: intuition).	0.331280946732	36
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40	0.1.2.0.8	synth with cache (only 1: rewrite remove_spec; only 1: intros; only 1: elim H; only 1: intros; only 1: trivial).	1.00485110283	397
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	2.3.0	synth with cache (only 1: intros; only 1: rewrite singleton_spec; only 1: auto with relations).	0.213186979294	8
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40	0.1.7	synth with cache (only 1: rewrite union_spec; only 1: intros; only 1: auto).	0.135998010635	49
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	0.1	synth with cache (only 1: rewrite union_spec; only 1: auto).	0.0642249584198	12
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	synth with cache (only 1: rewrite inter_spec; only 1: intuition).	0.047021150589	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.3.0	synth with cache (only 1: intros E; only 1: rewrite inter_spec; only 1: intuition).	0.0613889694214	6
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.4	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.279064178467	26
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	synth with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0557589530945	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40	0.0.6.3	synth with cache (only 1: intro H; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	3.89604210854	199
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.1.0	synth with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0926568508148	13
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	32.0	synth with cache (only 1: intro n; only 1: now f_equiv).	4.46588110924	3627
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	1	synth with cache (only 1: intuition).	0.052757024765	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40	6.14.16.2.1.8	synth with cache (only 1: split; only 1: intros H; only 1: Ndec.eqb2eq; only 1: intuition; only 1: Ndec.eqb2eq; only 1: intuition).	33.784170866	32944
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	2	synth with cache (only 1: intuition).	0.0532388687134	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	6	synth with cache (only 1: intuition).	0.0594229698181	7
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	5	synth with cache (only 1: intuition).	0.0582408905029	6
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	1	synth with cache (only 1: intuition).	0.0395569801331	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	1.5.2.4	synth with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	3.22711205482	912
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.0.0.12.3	synth with cache (only 1: split; only 1: rewrite remove_spec; only 1: intro H; only 1: intuition; only 1: intuition).	1.8477461338	646
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	1.2.3	synth with cache (only 1: rewrite remove_spec; only 1: intros E; only 1: intuition).	0.367023944855	32
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	0.0	synth with cache (only 1: intros; only 1: intuition).	0.061546087265	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	1.0	synth with cache (only 1: intros; only 1: intuition).	0.0630950927734	3
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	2	synth with cache (only 1: intuition).	0.0383279323578	3
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.2.0.0.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.366039037704	31
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	0.1.1.3.1.4.5.4	synth with cache (only 1: unfold Equal; only 1: intros n m; only 1: intros E; only 1: intros; only 1: rewrite singleton_spec; only 1: rewrite singleton_spec; only 1: rewrite E; only 1: intuition).	26.7672350407	10094
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.21.4.2.0	synth with cache (only 1: split; only 1: red; only 1: congruence; only 1: intros x x' Hx s s' Hs a; only 1: auto).	10.682708025	10613
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.3.6.5	synth with cache (only 1: repeat red; only 1: intros s s' E; only 1: setoid_rewrite E; only 1: auto).	10.6639709473	1432
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4	synth with cache (only 1: firstorder).	0.666578054428	49
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	1.3.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.165733098984	13
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.4.0	synth with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intro H; only 1: intuition).	0.155625104904	15
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.7.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: auto).	0.253684997559	16
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.4.0	synth with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.129667043686	12
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.24.0.7	synth with cache (only 1: unfold Equal, Subset; only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite diff_spec; only 1: intuition).	26.0997729301	12692
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.1.0	synth with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0827150344849	4
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.1	synth with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.195825815201	6
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	1	synth with cache (only 1: intuition).	0.0355439186096	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	synth with cache (only 1: intuition).	0.0361850261688	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0	synth with cache (only 1: fsetdec).	0.0831890106201	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	synth with cache (only 1: fsetdec).	0.0445909500122	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	synth with cache (only 1: fsetdec).	0.0677270889282	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0	synth with cache (only 1: fsetdec).	0.0685288906097	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0605299472809	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	synth with cache (only 1: fsetdec).	0.0477340221405	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	synth with cache (only 1: fsetdec).	0.0748031139374	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0	synth with cache (only 1: fsetdec).	0.158649921417	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0	synth with cache (only 1: fsetdec).	0.101772069931	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	synth with cache (only 1: fsetdec).	0.0693850517273	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	synth with cache (only 1: fsetdec).	0.0649111270905	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	1.2.2.0	synth with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.2195520401	9
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	synth with cache (only 1: fsetdec).	0.0802638530731	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	synth with cache (only 1: fsetdec).	0.0692090988159	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	0	synth with cache (only 1: fsetdec).	0.105357170105	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	synth with cache (only 1: fsetdec).	0.224241018295	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	2.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.150223016739	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	synth with cache (only 1: fsetdec).	0.184561014175	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	synth with cache (only 1: fsetdec).	0.188585996628	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	synth with cache (only 1: fsetdec).	0.189555883408	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	synth with cache (only 1: fsetdec).	0.115171194077	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	0	synth with cache (only 1: fsetdec).	0.368337869644	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	1	synth with cache (only 1: fsetdec).	0.119077205658	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.123574972153	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	synth with cache (only 1: fsetdec).	0.13085103035	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: fsetdec).	0.180148839951	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	synth with cache (only 1: fsetdec).	0.218734025955	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	synth with cache (only 1: fsetdec).	0.117664813995	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	synth with cache (only 1: fsetdec).	0.22941493988	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	0	synth with cache (only 1: fsetdec).	0.387315988541	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	synth with cache (only 1: fsetdec).	0.352605104446	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	synth with cache (only 1: fsetdec).	0.0619411468506	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0607740879059	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0807120800018	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	synth with cache (only 1: fsetdec).	0.0943989753723	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	synth with cache (only 1: fsetdec).	0.0806488990784	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	synth with cache (only 1: fsetdec).	0.0950720310211	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	synth with cache (only 1: fsetdec).	0.171087026596	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	0	synth with cache (only 1: fsetdec).	0.0802819728851	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	synth with cache (only 1: fsetdec).	0.103907823563	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.0932188034058	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: fsetdec).	0.11912894249	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: fsetdec).	0.15796995163	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	synth with cache (only 1: fsetdec).	0.193094968796	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	synth with cache (only 1: fsetdec).	0.238916158676	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	synth with cache (only 1: fsetdec).	0.238147974014	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: fsetdec).	0.223598003387	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	synth with cache (only 1: fsetdec).	0.174138069153	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	synth with cache (only 1: fsetdec).	0.0753338336945	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	synth with cache (only 1: fsetdec).	0.0738410949707	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	synth with cache (only 1: fsetdec).	0.103452920914	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	synth with cache (only 1: fsetdec).	0.0619280338287	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	synth with cache (only 1: fsetdec).	0.0771398544312	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	synth with cache (only 1: fsetdec).	0.085223197937	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	synth with cache (only 1: fsetdec).	0.11835694313	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	synth with cache (only 1: fsetdec).	0.0639569759369	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: fsetdec).	0.129641056061	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	synth with cache (only 1: fsetdec).	0.129114866257	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	synth with cache (only 1: fsetdec).	0.224020957947	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	synth with cache (only 1: fsetdec).	0.198391914368	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	3.0.1	synth with cache (only 1: vm_compute; only 1: intuition; only 1: fsetdec).	0.219305038452	7
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	4.5.1	synth with cache (only 1: intros; only 1: expAdd; only 1: fsetdec).	1.18506884575	150
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40	0.2	synth with cache (only 1: expAdd; only 1: fsetdec).	0.319986820221	4
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.0	synth with cache (only 1: expAdd; only 1: fsetdec).	0.448181867599	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40	0.1	synth with cache (only 1: expAdd; only 1: fsetdec).	0.447625875473	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	0.4	synth with cache (only 1: expAdd; only 1: fsetdec).	0.623909950256	31
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40	0.0.22.5	synth with cache (only 1: intros; only 1: apply fold_rec; only 1: auto; only 1: auto).	2.30105686188	2514
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.2.0.2.0.0.12.0	synth with cache (only 1: intro; only 1: apply fold_rec_bis; only 1: intros x y z; only 1: fsetdec; only 1: red; only 1: intro x; only 1: intuition; only 1: fsetdec).	24.1907930374	6636
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	11.0.0.0.5.3.1	synth with cache (only 1: intros; only 1: apply fold_1; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto with set).	6.70295786858	6209
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40	7.0.0.0.1.10.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto with set).	5.85457611084	4243
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.3.0	synth with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0418050289154	6
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	2.2.6.2.32.3.0	synth with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: now elim H; only 1: exists e; only 1: auto with relations).	24.4797959328	49356
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.1.1.3	synth with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: fsetdec).	0.0630080699921	9
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	4.7.28.0	synth with cache (only 1: intros; only 1: generalize (cardinal_inv_1 (s:=diff s' s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	4.94380807877	6818
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	6.1	synth with cache (only 1: intros a b H; only 1: auto with *).	0.0401260852814	9
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.3.1	synth with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: auto).	0.139183044434	47
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.4.8.6	synth with cache (only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with *; only 1: auto).	5.22085118294	3456
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1	synth with cache (only 1: auto with set).	0.0308589935303	2
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.1.8.24	synth with cache (only 1: vm_compute; only 1: intros z n H; only 1: rewrite H; only 1: auto).	14.5321080685	7047
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0415639877319	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.1.0	synth with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0418128967285	4
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	2	synth with cache (only 1: eauto with *).	0.0362269878387	3
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.9	synth with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.297636985779	71
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.2.0.1.1.1.3	synth with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: setoid_replace y with x'; only 1: auto; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: auto).	9.92770195007	2565
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	synth with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.044741153717	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.2.0.0.0.0	synth with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0784468650818	9
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.1.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.878595113754	75
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	12.5.0	synth with cache (only 1: intuition; only 1: apply <- mem_spec; only 1: eauto with set).	5.10974383354	1413
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	2.10.2	synth with cache (only 1: intro H; only 1: apply <- mem_spec; only 1: intuition).	0.55156493187	315
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	1	synth with cache (only 1: auto with set).	0.0436160564423	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.4	synth with cache (only 1: apply <- mem_spec; only 1: Dec.fsetdec).	0.0751931667328	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.1.0.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.596050024033	41
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.101140975952	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.1.0.1.1.0	synth with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.545408010483	33
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	1	synth with cache (only 1: auto with set relations).	0.0348348617554	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40	0.0.0.1.0.1.1.0	synth with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	16.1267957687	818
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	0.1.2	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: auto).	0.221070051193	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.0	synth with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.0675399303436	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	0.1	synth with cache (only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.0573961734772	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	2.5.0.2.5.0.0.2	synth with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	16.6575679779	4650
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.1	synth with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0474011898041	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.4.2	synth with cache (only 1: intro; only 1: rewrite (equal_2 H); only 1: reflexivity).	0.0515599250793	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1	synth with cache (only 1: auto with set).	0.0332019329071	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	8.0	synth with cache (only 1: intros; only 1: auto with set).	0.0772750377655	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40	11.2.0.1.0.3.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: unfold Subset; only 1: intros a; only 1: do 2 rewrite mem_iff; only 1: intros; only 1: apply <- mem_spec; only 1: eauto with set).	20.6223788261	5987
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.04225897789	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0404460430145	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0405759811401	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40	0.2	synth with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.118745088577	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	1	synth with cache (only 1: auto with set relations).	0.0368790626526	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.0.0	synth with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: intuition).	0.0516707897186	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40	0.11	synth with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.318032979965	102
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	2	synth with cache (only 1: auto with set).	0.0346977710724	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	2.0	synth with cache (only 1: intros; only 1: auto with set).	0.0543439388275	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	3.0	synth with cache (only 1: intros; only 1: auto with set).	0.0402688980103	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	synth with cache (only 1: auto with set).	0.0334510803223	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	2	synth with cache (only 1: auto with set).	0.033891916275	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	2	synth with cache (only 1: auto with set).	0.034234046936	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	1	synth with cache (only 1: auto with set).	0.0339410305023	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	synth with cache (only 1: auto with set).	0.0324468612671	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	1	synth with cache (only 1: auto with set).	0.032830953598	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	2.3.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: intuition).	0.314220190048	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	1	synth with cache (only 1: auto with set).	0.0342929363251	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0366039276123	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	synth with cache (only 1: auto with set).	0.0334429740906	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	synth with cache (only 1: auto with set).	0.0329370498657	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	1	synth with cache (only 1: auto with set).	0.03293800354	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	1	synth with cache (only 1: auto with set).	0.0331947803497	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	1	synth with cache (only 1: auto with set).	0.0345389842987	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	synth with cache (only 1: auto with set).	0.0340139865875	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	1	synth with cache (only 1: auto with set).	0.0334589481354	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	1	synth with cache (only 1: auto with set).	0.0331289768219	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.1.0	synth with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0784850120544	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	1	synth with cache (only 1: auto with set).	0.0331699848175	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	synth with cache (only 1: auto with set).	0.0364830493927	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	1	synth with cache (only 1: auto with set).	0.0335800647736	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	1	synth with cache (only 1: auto with set).	0.123559951782	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	1	synth with cache (only 1: auto with set).	0.0342829227448	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	synth with cache (only 1: apply fold_1b; only 1: auto with set).	0.041885137558	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	0.0.0.0.14.5	synth with cache (only 1: intuition; only 1: apply fold_equal; only 1: auto with set; only 1: auto; only 1: auto with set; only 1: auto with set).	3.01666378975	1942
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.0.11.0.0.0.2.0	synth with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	10.9859719276	5480
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	0.2.0.0.0.6.4.0	synth with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	1.54753494263	748
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	4	synth with cache (only 1: auto with set).	0.0474679470062	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.2.2	synth with cache (only 1: destr_bool; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	1.06429791451	181
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.11.1	synth with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	1.24926495552	540
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	1.0.1.0.0.0.2.1.0.6.0	synth with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: congruence; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: assumption).	2.80342888832	1443
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	1	synth with cache (only 1: auto with set).	0.0415189266205	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	9	synth with cache (only 1: solve_proper).	0.600461006165	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	1.0.0.0.1.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).	0.0733361244202	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	2.0.0.0.0.0	synth with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: trivial; only 1: auto with set).	0.0831699371338	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	0.7.0.3.0.1.0	synth with cache (only 1: intuition; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: intuition).	4.77706003189	2156
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.0.3.25.0	synth with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	12.0333669186	9034
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.2	synth with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.610834121704	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	synth with cache (only 1: eauto).	0.0358929634094	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	synth with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.211004972458	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	synth with cache (only 1: intuition).	0.0331389904022	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	5.12.1	synth with cache (only 1: intro H; only 1: intros b s2' Rec n m s1; only 1: fsetdec).	12.3069450855	2151
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	6.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.81542801857	8
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	3.3	synth with cache (only 1: vm_compute; only 1: fsetdec).	0.911048173904	26
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	13.0	synth with cache (only 1: intro n; only 1: intuition).	0.205135822296	215
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	synth with cache (only 1: fsetdec).	0.0930941104889	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	4	synth with cache (only 1: fsetdec).	0.123572826385	20
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	8	synth with cache (only 1: fsetdec).	0.299561023712	29
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	3	synth with cache (only 1: fsetdec).	0.57471203804	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	1	synth with cache (only 1: fsetdec).	0.531824827194	11
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	2.6	synth with cache (only 1: vm_compute; only 1: fsetdec).	0.493344068527	43
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	1	synth with cache (only 1: fsetdec).	0.341779947281	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	1.0	synth with cache (only 1: intuition; only 1: fsetdec).	0.456022024155	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.4	synth with cache (only 1: vm_compute; only 1: intuition).	0.118897199631	15
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	2	synth with cache (only 1: fsetdec).	0.331147909164	36
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	3.6	synth with cache (only 1: intros x y; only 1: fsetdec).	0.82049202919	129
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	synth with cache (only 1: fsetdec).	0.0828740596771	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.5.2.6	synth with cache (only 1: intro H; only 1: fix even_spec 1; only 1: fix odd_spec 1; only 1: assumption).	2.41318798065	1833
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40	12.0	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.448608875275	250
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40	2.30	synth with cache (only 1: fix gcd_greatest 1; only 1: auto).	11.4976930618	7866
Coq.MSets.MSetGenTree.Props.In_compat	40	4.4.1.0.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: eauto; only 1: red; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: subst; only 1: eauto).	3.93919301033	2372
Coq.MSets.MSetGenTree.Props.In_node_iff	40	6	synth with cache (only 1: intuition_in).	0.22060084343	31
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	4	synth with cache (only 1: intuition_in).	0.0679869651794	27
Coq.MSets.MSetGenTree.Props.lt_leaf	40	13.4.12.2	synth with cache (only 1: intros n; only 1: repeat red; only 1: intros; only 1: intuition_in).	1.40964198112	2075
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	synth with cache (only 1: red; only 1: inversion 1).	0.0225780010223	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	2.12.8	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	3.20137381554	793
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.1.11	synth with cache (only 1: red; only 1: intuition_in; only 1: order).	1.42375707626	216
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.0.5.0	synth with cache (only 1: intros n m; only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: eauto).	0.0693409442902	22
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	8	synth with cache (only 1: eauto using OrderTac.eq_trans, OrderTac.eq_sym).	0.0802450180054	38
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	synth with cache (only 1: intros; only 1: intro; only 1: order).	0.0252361297607	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	2	synth with cache (only 1: eauto).	0.0503339767456	22
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	4.0.0.1.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	1.74904203415	612
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	1.0.0.2.0.0.0	synth with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.055154800415	10
Coq.MSets.MSetGenTree.Props.empty_spec	40	16	synth with cache (only 1: inversion 1).	0.067883014679	109
Coq.MSets.MSetGenTree.Props.empty_ok	40	4	synth with cache (only 1: auto with bool).	0.0159709453583	5
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	12.2	synth with cache (only 1: fix even_spec 1; only 1: auto).	2.22105097771	1738
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.4	synth with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	3.10984516144	786
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40	1.53	synth with cache (only 1: fix le_div2 1; only 1: auto).	36.277962923	36618
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40	1.32	synth with cache (only 1: fix even_spec 1; only 1: auto).	25.6513259411	33439
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	16	synth with cache (only 1: firstorder).	0.0746698379517	108
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	5	synth with cache (only 1: firstorder).	0.0341379642487	6
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	11	synth with cache (only 1: firstorder).	0.0531189441681	45
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	8	synth with cache (only 1: firstorder).	0.0445380210876	18
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	synth with cache (only 1: intro n; only 1: intuition).	0.039678812027	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	synth with cache (only 1: compute; only 1: intuition).	0.0412201881409	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	4.2	synth with cache (only 1: compute; only 1: firstorder).	0.702088117599	74
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.5.0.2	synth with cache (only 1: red; only 1: intuition; only 1: vm_compute; only 1: Dec.fsetdec).	0.249701023102	62
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	1.0.14	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.94617819786	800
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.0.15	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.90515494347	808
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.1.0.0.0.1.0.0.0.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: inversion 1; only 1: intuition).	3.08794999123	690
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	0.4.0.0.0.0.1.0.0.0.1.0	synth with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: intuition; only 1: constructor 1; only 1: auto; only 1: intuition; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: intuition).	10.5028431416	2346
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	16	synth with cache (only 1: solve_proper).	11.7603979111	2924
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	3.5	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.389801025391	86
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40	6.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.029177904129	13
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	2.1	synth with cache (only 1: intros; only 1: intuition).	0.0286078453064	5
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	5	synth with cache (only 1: constructors).	0.0193240642548	6
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.12.0	synth with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	3.50124287605	209
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40	9.1	synth with cache (only 1: fix even_spec 1; only 1: auto).	0.106031894684	79
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	2.3.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: auto).	0.0737338066101	22
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	0	synth with cache (only 1: auto).	0.0186369419098	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: auto).	0.0192458629608	1
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40	3.4.13	synth with cache (only 1: intros a n H; only 1: fix even_spec 1; only 1: auto).	14.2206408978	9458
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	1.0.0.1.0.3.6	synth with cache (only 1: unfold Empty, empty; only 1: destruct s; only 1: intros; only 1: intro; only 1: inv; only 1: intros; only 1: discriminate).	4.2071390152	2411
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	2	synth with cache (only 1: auto).	0.0196440219879	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40	5.1.21	synth with cache (only 1: intros x; only 1: fix even_spec 1; only 1: auto).	8.18392300606	6208
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40	2.19	synth with cache (only 1: fix even_spec 1; only 1: auto).	15.4520461559	3487
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	0	synth with cache (only 1: tauto).	0.0173540115356	1
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	0.0.1.0.3.2	synth with cache (only 1: intros x l; only 1: fix odd_spec 1; only 1: intro H; only 1: rewrite odd_spec; only 1: intuition; only 1: auto).	0.965812921524	277
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40	1.1.4	synth with cache (only 1: fix gcd_greatest 1; only 1: intros a b c Ha Hb; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.145566225052	36
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40	1.1.5.1.0.0.0.1.0.2	synth with cache (only 1: simple induction s; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: eauto; only 1: intuition; only 1: intuition).	22.558754921	8557
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.2.0.0.0.1.0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	6.40614795685	1320
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	2	synth with cache (only 1: intuition).	0.0234999656677	3
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	synth with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.0983250141144	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	1.17.0	synth with cache (only 1: intros x Hs; only 1: fix even_spec 1; only 1: intuition).	28.9804270267	11022
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	2	synth with cache (only 1: auto with bool).	0.0217790603638	3
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	47.10	synth with cache (only 1: intro H; only 1: inversion 1).	4.93842792511	7902
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	7.1	synth with cache (only 1: fix even_spec 1; only 1: trivial).	0.0201120376587	10
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	2.0.2.0.1	synth with cache (only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.0404539108276	10
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	5.9.3	synth with cache (only 1: intros; only 1: inv; only 1: auto).	1.08557987213	702
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	1.0.0	synth with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0356340408325	4
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	2.3.4	synth with cache (only 1: destruct s; only 1: easy; only 1: easy).	0.403390169144	127
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	0	synth with cache (only 1: destr_bool).	0.0191979408264	1
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.2	synth with cache (only 1: intros; only 1: auto).	0.0245189666748	5
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	9	synth with cache (only 1: solve_proper).	0.203101158142	43
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40	0.13.9	synth with cache (only 1: let rec induction2 := let rec inv := let rec inv_ok := match goal with | H:Sorted X.lt (_ :: _) |- _ => inversion_clear H; inv_ok | H:Sorted X.lt nil |- _ => clear H; inv_ok | H:Sorted X.lt ?l |- _ => change (Ok l) in H; inv_ok | H:Ok _ |- _ => rewrite <- isok_iff in H; inv_ok | |- Ok _ => rewrite <- isok_iff | _ => idtac end in invlist InA; inv_ok; invlist HdRel in simple induction s; [ simpl; auto; try (solve [ intros; inv ]) | intros x l Hrec; simple induction s'; [ simpl; auto; try (solve [ intros; inv ]) | intros x' l' Hrec'; simpl; elim_compare x x'; intros; inv; auto ] ] in induction2; only 1: fix le_div2 1; only 1: auto).	7.14985203743	5121
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0	synth with cache (only 1: now Z.nzsimpl').	0.125761985779	1
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0171821117401	4
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40	0.0.2.0.0.0.0.0	synth with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.025279045105	10
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	2.0.1.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: right with y; only 1: auto; only 1: auto with sets).	0.0234229564667	12
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	1.0.20.4	synth with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.477936983109	872
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	2.0.12.20.12	synth with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	0.992118120193	5118
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.3.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0198380947113	8
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	1.0.3.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: auto with sets).	0.0226290225983	14
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40	0.0.1.0.0.1.1.0.1.1.0.0.0.6.1	synth with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	11.661550045	22369
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.0.1.0.6	synth with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto with sets).	0.113642930984	130
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.1.0.0.2.0.3.0.0	synth with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto with sets; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: auto with sets).	1.39623498917	1529
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40	0.0.6.0.0.5.7.0.4	synth with cache (only 1: destruct 1; only 1: auto; only 1: induction 1; only 1: right with y; only 1: auto; only 1: auto; only 1: right with y0; only 1: tauto; only 1: auto).	11.5770270824	17337
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.3.0.4.3.0.3.5.6	synth with cache (only 1: intros; only 1: split; only 1: red; only 1: trivial; only 1: red; only 1: destruct 2; only 1: trivial; only 1: red; only 1: auto).	0.732826948166	2495
Coq.Sets.Uniset.defs.leb_refl	40	3	synth with cache (only 1: destr_bool).	0.0190789699554	11
Coq.Sets.Uniset.defs.incl_left	40
Coq.Sets.Uniset.defs.incl_right	40	1.0.0.0	synth with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0168178081512	5
Coq.Sets.Uniset.defs.seq_refl	40	2	synth with cache (only 1: auto).	0.0101850032806	3
Coq.Sets.Uniset.defs.seq_trans	40	2.1.3.2.12.5	synth with cache (only 1: destruct x; only 1: intro H1; only 1: unfold seq; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: intuition).	4.78559398651	9001
Coq.Sets.Uniset.defs.seq_sym	40	1.0.2	synth with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0154249668121	6
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0152850151062	3
Coq.Sets.Uniset.defs.union_empty_right	40	3.2.0.1	synth with cache (only 1: destruct x; only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.0706009864807	56
Coq.Sets.Uniset.defs.union_comm	40	4.4.0	synth with cache (only 1: unfold seq; only 1: destr_bool; only 1: intuition).	0.169588088989	113
Coq.Sets.Uniset.defs.union_ass	40	7.5.0	synth with cache (only 1: unfold seq; only 1: simpl; only 1: auto with bool).	1.38322496414	1555
Coq.Sets.Uniset.defs.seq_left	40	0.1.6.0	synth with cache (only 1: unfold seq; only 1: destr_bool; only 1: rewrite H; only 1: auto).	0.405039072037	277
Coq.Sets.Uniset.defs.seq_right	40	1.0.0.0.0.0.0.0.0	synth with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.029000043869	10
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_refl	40	3.1	synth with cache (only 1: intros; only 1: congruence).	0.025542974472	6
Coq.Sets.Multiset.multiset_defs.meq_trans	40	7.0.0	synth with cache (only 1: intros x y z; only 1: destruct x; only 1: congruence).	0.0432260036469	18
Coq.Sets.Multiset.multiset_defs.meq_sym	40	1.0.2.1.1	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0288701057434	10
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	synth with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0221619606018	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0244071483612	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	6.7.0.0	synth with cache (only 1: unfold meq; only 1: simpl; only 1: intros; only 1: firstorder).	2.55293416977	1816
Coq.Sets.Multiset.multiset_defs.munion_ass	40	2.3.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: auto with arith).	0.0489938259125	24
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.1.2.0.7	synth with cache (only 1: intros; only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: auto with arith).	7.73278307915	2348
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0	synth with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: auto with arith).	0.0375671386719	8
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.1.4.1.1.1.0.0	synth with cache (only 1: unfold meq; only 1: destruct x; only 1: destruct y; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros x y z; only 1: intros; only 1: auto).	3.50209188461	1292
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	0	synth with cache (only 1: exact PeanoNat.Nat.le_refl).	0.0178880691528	1
Coq.Sets.Integers.Integers_sect.le_antisym	40	1.0	synth with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0368490219116	16
Coq.Sets.Integers.Integers_sect.le_trans	40	2.3.0.0	synth with cache (only 1: red; only 1: intros x y z; only 1: intros; only 1: PeanoNat.Nat.order').	0.0310180187225	9
Coq.Sets.Integers.Integers_sect.le_Order	40	1.0.2.2.6	synth with cache (only 1: split; only 1: exact PeanoNat.Nat.le_refl; only 1: exact PeanoNat.Nat.le_trans; only 1: red; only 1: PeanoNat.Nat.order).	0.591048955917	435
Coq.Sets.Integers.Integers_sect.triv_nat	40	9.9	synth with cache (only 1: red; only 1: split).	0.643640041351	804
Coq.Sets.Integers.Integers_sect.nat_po	40
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	5.20.6	synth with cache (only 1: intros; only 1: intros A C h1 h2; only 1: auto).	1.16417598724	4277
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.1	synth with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'0; only 1: auto  10 with sets).	0.0716319084167	31
Coq.Sets.Relations_1_facts.contains_is_preorder	40	5.2	synth with cache (only 1: intros; only 1: auto  10 with sets).	0.014368057251	9
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	5.5.6.5.1.12.3.4	synth with cache (only 1: constructor; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: intro H'1; only 1: destruct 1; only 1: auto  10 with sets).	21.2895860672	57584
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	5.7	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: auto  10 with sets).	0.153253078461	150
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.1	synth with cache (only 1: unfold same_relation; only 1: intuition).	0.0162129402161	3
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	4.1	synth with cache (only 1: compute; only 1: intuition).	0.0337009429932	25
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	1.3	synth with cache (only 1: intros; only 1: auto with sets).	0.0147850513458	6
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	2	synth with cache (only 1: auto  10 with sets).	0.0110611915588	3
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	0.0.2.0.0.1.16.0.1	synth with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto  10 with sets; only 1: auto with sets).	2.54488801956	7602
Coq.Sets.Relations_2_facts.Rstar_transitive	40	0.0.1.3.0.7.6.9.1.2	synth with cache (only 1: intros U R; only 1: red; only 1: intro T; only 1: intros x y H'; only 1: elim H'; only 1: auto; only 1: intros; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	18.8260750771	45490
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.2.0.0.0.0.0.1.1.0.4	synth with cache (only 1: intros; only 1: red; only 1: intros x y H'; only 1: elim H'; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	2.88469600677	4326
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.4.2.0.0.0.0	synth with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	1.4187130928	1345
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	0.9	synth with cache (only 1: intro z; only 1: auto).	0.0363428592682	44
Coq.Sets.Permut.Axiomatisation.comm_left	40	1.5.0	synth with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0153870582581	9
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	2.2.9.7.0	synth with cache (only 1: intros; only 1: apply cong_sym; only 1: apply cong_trans with (op (op x y) z); only 1: trivial; only 1: trivial).	1.84809994698	3229
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40	0.0.18.0	synth with cache (only 1: intuition; only 1: exists x; only 1: intuition; only 1: intuition).	2.46294093132	3201
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	0.2.16.0.6.0.1.5	synth with cache (only 1: intuition; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: subst; only 1: inversion H; only 1: intuition).	7.35337400436	10991
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	15.3.10.8	synth with cache (only 1: intros A x y H'; only 1: elim H'; only 1: intros x0 H'0; only 1: firstorder).	7.46929788589	18332
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40	2.2.4.0.3.2.1.2.4	synth with cache (only 1: intros X Y x H'; only 1: apply Strict_super_set_contains_new_element; only 1: red; only 1: intros x0 H'0; only 1: elim H'; only 1: auto with sets; only 1: elim H'; only 1: intros H'0 H'1; only 1: congruence).	25.978181839	17896
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	1.1.0.0	synth with cache (only 1: red; only 1: red; only 1: intuition; only 1: contradiction).	0.0183029174805	6
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	19	synth with cache (only 1: auto  10 with sets).	0.551374912262	165
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	synth with cache (only 1: auto  6 with sets).	0.010978937149	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	1.0	synth with cache (only 1: red; only 1: auto with sets).	0.0129759311676	3
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	0.0.0.0	synth with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0177111625671	4
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	1.0.0.0.0	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0191221237183	6
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	synth with cache (only 1: auto with sets).	0.0106730461121	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.1.0.0.0.1	synth with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0257468223572	8
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	synth with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0184359550476	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	0.2.1.2	synth with cache (only 1: red; only 1: red; only 1: red; only 1: auto with sets).	0.154568910599	29
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	10.0.0	synth with cache (only 1: intros A x y H'; only 1: induction H'; only 1: auto with sets).	0.279592990875	345
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	1.0.0	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0274460315704	4
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.4.1.2.10	synth with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	3.5210249424	5262
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.2.1.0.3	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.275818109512	165
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	8.2	synth with cache (only 1: intros x y z H' H'0; only 1: firstorder).	1.00207686424	337
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.1.1.0.2.1.0.1.0.0	synth with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	2.8753991127	2162
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	36	synth with cache (only 1: auto  10 with sets).	1.36141490936	3527
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	synth with cache (only 1: auto  6 with sets).	0.00854802131653	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	44.45.3	synth with cache (only 1: intro X; only 1: unfold Add at 1; only 1: auto  6 with sets).	7.98587703705	24865
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	0	synth with cache (only 1: auto with sets).	0.00845694541931	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	synth with cache (only 1: auto with sets).	0.00919604301453	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	30.4	synth with cache (only 1: intros B C H'; only 1: auto  10 with sets).	3.51095890999	3845
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	1	synth with cache (only 1: auto  6 with sets).	0.0117130279541	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	5.3	synth with cache (only 1: intros B C H'; only 1: auto  9 with sets).	0.0194370746613	10
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	1.1.1.0.0.0.0.0.1.0.0.1.0.1	synth with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.94108486176	3653
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.1.0.0.0.1.0.0.2.5.7	synth with cache (only 1: intros n m; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.95535898209	2967
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40	0.0.0.0.0.0.1.0.0.0.0.1.3.0.0.0.1.0.0	synth with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	25.2889909744	20831
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	18.0.2.5	synth with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	2.52839803696	2249
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	0.8.1.4.2.0	synth with cache (only 1: intros x y H'; only 1: apply Singleton_inv; only 1: red; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	1.81209301949	3696
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	0.11	synth with cache (only 1: unfold Add; only 1: auto with sets).	0.895250082016	409
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.5	synth with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.054347038269	14
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40	16.2.9.0.2	synth with cache (only 1: intros A x y; only 1: unfold Add; only 1: intro H'1; only 1: apply Extensionality_Ensembles; only 1: auto  10 with sets).	23.5972399712	14728
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	0	synth with cache (only 1: auto with sets).	0.00656414031982	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	0	synth with cache (only 1: auto with sets).	0.00937485694885	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	synth with cache (only 1: intros; only 1: auto with sets).	0.0114579200745	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.3.20.0.2.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	7.98197793961	18472
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0217308998108	9
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	1.1.2.0.3.0.0.0	synth with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: exfalso; only 1: intuition; only 1: intuition).	0.712333917618	520
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	2.2.10.2.2.10.10	synth with cache (only 1: split; only 1: intro p; only 1: subst; only 1: auto; only 1: intro p; only 1: subst; only 1: auto).	5.78486680984	24401
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	6	synth with cache (only 1: destruct 1).	0.0123450756073	7
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	2.1.1	synth with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0146338939667	7
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	5.14.0	synth with cache (only 1: red; only 1: constructor; only 1: auto with sets).	1.60304999352	4163
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	6.2	synth with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.0361700057983	46
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	1.43.6.2	synth with cache (only 1: unfold Add at 1; only 1: intros; only 1: exists x; only 1: auto with sets).	9.00453782082	62212
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40	0.5.0.11.2.4	synth with cache (only 1: red; only 1: destruct 1; only 1: intro; only 1: elim (Noone_in_empty x); only 1: subst; only 1: auto with sets).	1.31442809105	3698
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.37.3.6.0.3	synth with cache (only 1: intros A x; only 1: red; only 1: intro; only 1: elim (Noone_in_empty x); only 1: reflexivity || destruct H; only 1: auto using Add_intro2 with sets).	21.5672399998	119360
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	1.4.4.0.1.1	synth with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.470514774323	959
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	0.9	synth with cache (only 1: induction 1; only 1: exact eq_refl).	0.0289549827576	45
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.6	synth with cache (only 1: destruct 1; only 1: auto using Add_intro2 with sets).	0.0196862220764	23
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.3.1	synth with cache (only 1: intros A x; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.0190660953522	8
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0153410434723	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.0.17.0	synth with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.521761894226	1044
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.1.1.2	synth with cache (only 1: intros A x; only 1: red; only 1: red; only 1: auto with sets).	0.017391204834	9
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.3	synth with cache (only 1: intros B C H'; only 1: auto with sets).	0.0129508972168	6
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	0.2.3	synth with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.0202491283417	22
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	1.0.12.6	synth with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.85551404953	1116
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40	0.28.18	synth with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	5.21554017067	15506
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.3.0.5.6	synth with cache (only 1: intro K; only 1: inversion 1; only 1: auto; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	3.16293787956	1980
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	0.0.6	synth with cache (only 1: induction 1; only 1: exact eq_refl; only 1: auto with sets).	0.0199029445648	20