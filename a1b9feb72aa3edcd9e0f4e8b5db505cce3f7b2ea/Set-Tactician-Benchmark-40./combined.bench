
Coq.micromega.OrderedRing.rplus_morph_Proper	40	9.6	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder).	0.964538097382	657
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	9	search with cache (only 1: firstorder).	0.171092033386	50
Coq.micromega.OrderedRing.ropp_morph_Proper	40	9	search with cache (only 1: firstorder).	0.0964889526367	25
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	15	search with cache (only 1: firstorder).	1.78883695602	797
Coq.micromega.OrderedRing.Rplus_0_l	40	10	search with cache (only 1: firstorder).	0.100308895111	34
Coq.micromega.OrderedRing.Rplus_0_r	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0760669708252	3
Coq.micromega.OrderedRing.Rtimes_0_r	40	1.2	search with cache (only 1: intros; only 1: ring).	0.0778031349182	5
Coq.micromega.OrderedRing.Rplus_comm	40	0.2	search with cache (only 1: intros; only 1: ring).	0.0780260562897	4
Coq.micromega.OrderedRing.Rtimes_0_l	40	3.2	search with cache (only 1: intros; only 1: ring).	0.0775790214539	7
Coq.micromega.OrderedRing.Rtimes_comm	40	0.2	search with cache (only 1: intros; only 1: ring).	0.0788938999176	4
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	6	search with cache (only 1: firstorder).	11.8874049187	36
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0	search with cache (only 1: intuition Z.Private_Tac.order).	0.168242931366	1
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	2	search with cache (only 1: Z.order).	0.688761949539	20
Coq.micromega.Ztac.elim_concl_lt	40	4	search with cache (only 1: Z.order).	0.322853088379	83
Coq.micromega.Ztac.Zlt_le_add_1	40	0.4.3	search with cache (only 1: intros; only 1: apply Z.le_succ_l; only 1: now Z.swap_greater).	0.306761026382	22
Coq.micromega.Ztac.add_le	40	2.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0966429710388	4
Coq.micromega.Ztac.mul_le	40	7.0	search with cache (only 1: intros x y z; only 1: firstorder).	0.175453901291	9
Coq.micromega.ZifyInst.PropAnd	40	11	search with cache (only 1: firstorder).	0.157582998276	33
Coq.micromega.ZifyInst.PropOr	40	2.2.0.0.1	search with cache (only 1: constructor; only 1: intros x y z; only 1: constructor; only 1: tauto; only 1: tauto).	0.117530107498	10
Coq.micromega.ZifyInst.PropArrow	40	0.2	search with cache (only 1: constructor; only 1: tauto).	0.090206861496	4
Coq.micromega.ZifyInst.PropIff	40	0.1	search with cache (only 1: constructor; only 1: tauto).	0.392144918442	3
Coq.micromega.ZifyInst.PropNot	40	0.0.2	search with cache (only 1: constructor; only 1: intros n m; only 1: intuition).	0.0862271785736	5
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40
Coq.micromega.ZifyInst.z_max_spec	40	8.1.12	search with cache (only 1: intros b; only 1: intros; only 1: Z.solve_max).	7.40658187866	5039
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40	6	search with cache (only 1: firstorder).	0.141800880432	15
Coq.micromega.ZCoeff.req_sym	40	8.0	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: firstorder).	0.839318990707	21
Coq.micromega.ZCoeff.req_trans	40	8	search with cache (only 1: firstorder).	22.2629110813	708
Coq.micromega.ZCoeff.rplus_morph_Proper	40	2	search with cache (only 1: exact (SORplus_wd sor)).	0.451534986496	107
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0875260829926	1
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0872478485107	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0874891281128	1
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0870089530945	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	3.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.137622117996	8
Coq.micromega.ZCoeff.ring_ops_wd	40	22	search with cache (only 1: firstorder).	1.73516798019	552
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40	19.22	search with cache (only 1: fix sqrtrem_spec 1; only 1: now try discriminate).	20.7305440903	7234
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	1.0.1.11.5	search with cache (only 1: intros n m; only 1: intuition subst; try ring; auto with real; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: auto with real).	6.44928312302	1329
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.12.0	search with cache (only 1: intros; only 1: ring_simplify; only 1: auto with real).	0.789990901947	350
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	1.13.2	search with cache (only 1: intros x H; only 1: ring_simplify; only 1: auto with real).	16.5193059444	8548
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	9	search with cache (only 1: intuition Z.order).	0.204607009888	37
Coq.micromega.ZMicromega.lt_le_iff	40	1.9	search with cache (only 1: intro n; only 1: apply Z.lt_le_pred).	0.469282150269	58
Coq.micromega.ZMicromega.le_0_iff	40
Coq.micromega.ZMicromega.le_neg	40	1.2.1.2.2	search with cache (only 1: split; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order; only 1: rewrite ?Z.opp_pos_neg; only 1: Z.order).	0.73561501503	200
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	2.1	search with cache (only 1: intros; only 1: reflexivity).	0.11011505127	5
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.9.1	search with cache (only 1: intros; only 1: destruct x; only 1: now split; only 1: now split; only 1: simpl; only 1: now split).	0.915495872498	460
Coq.micromega.ZMicromega.isZ0_n0	40	1.1.1.1.1.1.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	1.08600711823	357
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.1.10	search with cache (only 1: intros n m; only 1: destruct n as [| n], m as [| m]; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	2.19859004021	842
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40
Coq.micromega.ZifyBool.leZeroSpec_ok	40	0.3.7.4.15	search with cache (only 1: destruct x; only 1: intuition try congruence; compute; congruence; only 1: intuition try congruence; compute; congruence; only 1: left; only 1: now destruct Hn || easy).	8.67291593552	5683
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40
Coq.micromega.Env.jump_succ	40
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	0.1.5.11	search with cache (only 1: unfold jump; only 1: unfold hd, nth, tail, jump; only 1: rewrite Pos.add_comm; only 1: f_equal).	1.06563711166	581
Coq.micromega.Env.nth_pred_double	40
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.0.0.0	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).	0.0223209857941	6
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0168380737305	1
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.0147068500519	1
Coq.micromega.Tauto.is_cnf_tt_inv	40
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.1.6.4.7.7.1	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: destr_bool; only 1: apply is_cnf_tt_inv in EQ; only 1: intuition; only 1: intuition).	0.848798036575	983
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40
Coq.micromega.Tauto.eval_cnf_tt	40	3.1.0	search with cache (only 1: unfold cnf_tt; only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: reflexivity).	0.0204629898071	7
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.1.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0554389953613	6
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	8	search with cache (only 1: exact (Radd_ext Reqe)).	0.0818340778351	34
Coq.micromega.EnvRing.rmul_ext_Proper	40
Coq.micromega.EnvRing.ropp_ext_Proper	40
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40
Coq.micromega.EnvRing.Mjump_add	40	0.0.1.0.4	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.0806159973145	10
Coq.micromega.EnvRing.mkZmon_ok	40
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	2	search with cache (only 1: exact (SORplus_wd sor)).	1.13818097115	88
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0984930992126	1
Coq.micromega.RingMicromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.10139799118	1
Coq.micromega.RingMicromega.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0994048118591	1
Coq.micromega.RingMicromega.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.100100040436	1
Coq.micromega.RingMicromega.rminus_morph_Proper	40	7.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.782883167267	191
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.0.10.12	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.561297178268	1486
Coq.micromega.Refl.make_impl_map	40
Coq.micromega.Refl.make_conj_cons	40	2.0.7.1.2	search with cache (only 1: destruct l as [| x xs]; only 1: intuition; only 1: reflexivity; only 1: simpl; only 1: intuition).	1.56589007378	2066
Coq.micromega.Refl.make_conj_impl	40	3.4.5.0.2.0.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: induction l; only 1: firstorder; only 1: firstorder).	9.35514903069	9065
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40	0.0.1	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.109107971191	4
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.1.4.1.0.0.5.2	search with cache (only 1: intros; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite map_app; only 1: auto).	33.0636940002	36354
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0293769836426	5
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40	3.1.5.3.2.1.3.14	search with cache (only 1: intro; only 1: induction l as [| x xs Hl]; only 1: simpl; only 1: now discriminate; only 1: destruct i; only 1: now simpl; only 1: simpl; only 1: apply Hl).	14.244754076	29208
Coq.rtauto.Bintree.Tget_Tempty	40	0.0.0.15.0	search with cache (only 1: intros; only 1: induction p; only 1: auto; only 1: auto; only 1: auto).	0.361949920654	413
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.0.0.3.10	search with cache (only 1: firstorder; only 1: destruct i; only 1: reflexivity; only 1: auto; only 1: auto).	0.267988920212	184
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	1.0.7.0	search with cache (only 1: unfold not; only 1: inversion 1; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	0.427500963211	198
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40
Coq.rtauto.Rtauto.compose1	40	4.1.1.1.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: firstorder).	0.846628904343	541
Coq.rtauto.Rtauto.compose2	40	3.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: simpl; only 1: firstorder).	0.118755102158	9
Coq.rtauto.Rtauto.compose3	40	3.0.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: auto; only 1: intros A H; only 1: simpl; only 1: firstorder).	0.189801216125	9
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	7	search with cache (only 1: reflexivity).	0.176424026489	27
Coq.nsatz.Nsatz.Rext	40	0.0.0.6	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.461795091629	10
Coq.nsatz.Nsatz.Rset	40	6.2	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.165061950684	24
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0348789691925	1
Coq.omega.OmegaLemmas.Zred_factor1	40	2.1.0.0.0.0	search with cache (only 1: change_no_check 2 with (1 + 1); only 1: simpl; only 1: change_no_check 2 with (1 + 1); only 1: simpl; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0870769023895	35
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0.0.0.0.1	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: now Z.nzsimpl; only 1: simpl; only 1: reflexivity).	0.168057918549	6
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now destruct n).	0.0120270252228	1
Coq.omega.OmegaLemmas.new_var	40
Coq.omega.OmegaLemmas.OMEGA1	40	2	search with cache (only 1: Z.order).	0.0145618915558	3
Coq.omega.OmegaLemmas.OMEGA2	40
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	1.0	search with cache (only 1: intros Hx Hxy; only 1: now subst).	0.0142869949341	3
Coq.omega.OmegaLemmas.OMEGA6	40
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0337610244751	19
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0167818069458	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0812859535217	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0422151088715	20
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	1.4	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0663180351257	7
Coq.omega.OmegaLemmas.OMEGA18	40
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.3.1.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: simpl; only 1: now Z.nzsimpl).	1.08519291878	9
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.1.1.16.16.9	search with cache (only 1: symmetry; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	27.5561621189	20253
Coq.omega.PreOmega.Z.quot_0_r_ext	40
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	1.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.1265001297	4
Coq.btauto.Algebra.Decidable_complete	40	0.4.1	search with cache (only 1: intros x y z; only 1: apply <- Decidable_spec; only 1: assumption).	0.136425971985	17
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.1.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.132967948914	6
Coq.btauto.Algebra.Decidable_complete_alt	40
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40	1.8	search with cache (only 1: rewrite Pos.eqb_eq; only 1: intuition congruence).	0.853687047958	177
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	2.2.2.4.0.1.0.2	search with cache (only 1: intros; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	5.00645685196	4256
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.12.13	search with cache (only 1: intro; only 1: inversion 1; only 1: first [ discriminate | constructor ]).	3.06530499458	1411
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	0.0	search with cache (only 1: intros var f; only 1: trivial).	0.123032093048	2
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.funind.Recdef.le_lt_SS	40	9	search with cache (only 1: auto with arith).	0.0206689834595	10
Coq.funind.Recdef.Splus_lt	40	9	search with cache (only 1: auto with arith).	0.0329439640045	24
Coq.funind.Recdef.SSplus_lt	40	1.2.0.0.1	search with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: rewrite Nat.add_comm; only 1: constructor; only 1: apply Nat.le_add_r).	0.0348360538483	31
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	1.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.094749212265	3
Coq.setoid_ring.Rings_Z.Z_one_zero	40	7.0	search with cache (only 1: intro EQ; only 1: now rewrite ?Pos.square_xO).	0.103987932205	17
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	9	search with cache (only 1: assumption).	0.0696499347687	10
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.0687160491943	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	16.2.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	9.07358503342	1633
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	2.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	0.817057847977	46
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	4	search with cache (only 1: exact (Rmul_ext Reqe)).	0.159995079041	24
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.089301109314	11
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	6	search with cache (only 1: tauto).	0.124916791916	23
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40
Coq.setoid_ring.Field_theory.PEmul_ext	40
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40
Coq.setoid_ring.Field_theory.PEpow_0_r	40
Coq.setoid_ring.Field_theory.PEpow_1_r	40
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40	1.7.2.4.6	search with cache (only 1: destruct a; only 1: auto; only 1: intros; only 1: contradict H; only 1: auto).	5.13302898407	1667
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40	0.4.5.22.4	search with cache (only 1: simpl; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: intuition N.order; only 1: reflexivity).	23.1667540073	6409
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	1.9.10.0.0	search with cache (only 1: destruct l1; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	31.451898098	15927
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	0.107456922531	6
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	15.8	search with cache (only 1: simpl; only 1: tauto).	1.612667799	970
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.10219502449	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0972228050232	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0971329212189	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	2.2.2.26	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: congruence).	1.12016606331	666
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	0.0.0.3	search with cache (only 1: induction x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.147345066071	35
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	15.14.7.8	search with cache (only 1: intros n m; only 1: intros; only 1: subst; only 1: reflexivity).	6.67186999321	7544
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.0315189361572	2
Coq.setoid_ring.Ring_theory.get_sign_None_th	40
Coq.setoid_ring.Ring_theory.IDmorph	40	8.5.5.5.5.5.5.4	search with cache (only 1: constructor; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: trivial).	6.014731884	17623
Coq.setoid_ring.Ring_theory.Eqsth	40	9	search with cache (only 1: auto with *).	0.030690908432	10
Coq.setoid_ring.Ring_theory.Eq_s_ext	40
Coq.setoid_ring.Ring_theory.Eq_ext	40
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	7	search with cache (only 1: firstorder).	0.0578401088715	24
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	7	search with cache (only 1: firstorder).	0.056431055069	20
Coq.setoid_ring.Ring_theory.SRopp_ext	40	5.3	search with cache (only 1: intros; only 1: trivial).	0.038666009903	10
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	9	search with cache (only 1: firstorder).	0.0451588630676	17
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	7	search with cache (only 1: reflexivity).	0.0383200645447	15
Coq.setoid_ring.Ring_theory.SRopp_add	40	4.1	search with cache (only 1: intros; only 1: reflexivity).	0.037101984024	7
Coq.setoid_ring.Ring_theory.SRsub_def	40	4.1	search with cache (only 1: intros; only 1: reflexivity).	0.0384349822998	7
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	6.2	search with cache (only 1: intros; only 1: firstorder).	0.0453028678894	10
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	7	search with cache (only 1: firstorder).	0.0598449707031	20
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	8	search with cache (only 1: firstorder).	0.0514190196991	20
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	10	search with cache (only 1: trivial).	0.201868057251	103
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	10	search with cache (only 1: firstorder).	0.0625340938568	24
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40	10	search with cache (only 1: firstorder).	0.0709011554718	21
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	10.0	search with cache (only 1: elim ARth; only 1: firstorder).	0.133660078049	76
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.064957857132	18
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0631380081177	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.062607049942	1
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0644290447235	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	7	search with cache (only 1: exact (SRadd_ext SReqe)).	2.10908007622	24
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.063266992569	1
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0628190040588	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0621318817139	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0616388320923	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0634307861328	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0620129108429	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0617189407349	1
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	1	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0620470046997	2
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.061998128891	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	1.10	search with cache (only 1: constructor; only 1: reflexivity).	1.60304903984	47
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	12	search with cache (only 1: exact (Rmul_ext Reqe)).	0.511290073395	135
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	0.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.339843034744	3
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	0.4	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	0.433472156525	31
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1	search with cache (only 1: reflexivity).	0.313723087311	2
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40	11.5	search with cache (only 1: intros A x y z H1 H2; only 1: firstorder).	1.66751289368	532
Coq.setoid_ring.Ncring.ring_add_0_r	40
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.0.4.0.1.0.0	search with cache (only 1: intros; only 1: apply Zsth; only 1: generalize (Zeq_bool_eq x y), (Zeq_bool_neq x y); only 1: rewrite Zeq_is_eq_bool; only 1: symmetry; only 1: rewrite Zeq_is_eq_bool; only 1: now destruct Zeq_bool).	0.772912025452	239
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0912489891052	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	1	search with cache (only 1: tauto).	0.00770401954651	2
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40
Coq.ssr.ssreflect.iffLR	40	2	search with cache (only 1: tauto).	0.0104558467865	3
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : {}eqPQ {}).	0.00872611999512	1
Coq.ssr.ssreflect.iffLRn	40	1	search with cache (only 1: tauto).	0.0167670249939	2
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  {}=>nP tQ; case : {}nP {}; case : {}eqPQ {}tQ {}).	0.0100181102753	1
Coq.ssr.ssreflect.abstract_context	40
Coq.ssr.ssrbool.prop_congr	40
Coq.ssr.ssrbool.is_true_true	40
Coq.ssr.ssrbool.not_false_is_true	40	3	search with cache (only 1: intuition).	0.00723099708557	4
Coq.ssr.ssrbool.is_true_locked_true	40	0.3	search with cache (only 1: unlock; only 1: by [  ]).	0.00932884216309	5
Coq.ssr.ssrbool.negbT	40
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : {}b {}).	0.00857591629028	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : {}b {}).	0.00883388519287	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : {}b {}).	0.00854206085205	1
Coq.ssr.ssrbool.negbK	40	3	search with cache (only 1: by case).	0.00778889656067	4
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : {}b {}).	0.00753092765808	1
Coq.ssr.ssrbool.negb_inj	40
Coq.ssr.ssrbool.negbLR	40
Coq.ssr.ssrbool.negbRL	40
Coq.ssr.ssrbool.contra	40
Coq.ssr.ssrbool.contraL	40	1	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.015417098999	2
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.0129709243774	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : {}b {} =>//; case : {}c {}).	0.012598991394	1
Coq.ssr.ssrbool.contraT	40
Coq.ssr.ssrbool.wlog_neg	40
Coq.ssr.ssrbool.contraFT	40
Coq.ssr.ssrbool.contraFN	40
Coq.ssr.ssrbool.contraTF	40
Coq.ssr.ssrbool.contraNF	40
Coq.ssr.ssrbool.contraFF	40
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.00909996032715	1
Coq.ssr.ssrbool.ifT	40
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move {+}->).	0.00926208496094	2
Coq.ssr.ssrbool.ifN	40
Coq.ssr.ssrbool.if_same	40	1	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.00880193710327	2
Coq.ssr.ssrbool.if_neg	40	0	search with cache (only 1: by case  def_b: {}b {}; constructor; rewrite ?def_b).	0.00888204574585	1
Coq.ssr.ssrbool.fun_if	40	6	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0117230415344	7
Coq.ssr.ssrbool.if_arg	40	9	search with cache (only 1: by case  def_b: {}b {}; constructor).	0.0777299404144	10
Coq.ssr.ssrbool.ifE	40
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0117819309235	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.0118179321289	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	3	search with cache (only 1: by case).	0.00905895233154	4
Coq.ssr.ssrbool.impliesPn	40
Coq.ssr.ssrbool.unlessL	40
Coq.ssr.ssrbool.unlessR	40
Coq.ssr.ssrbool.unless_sym	40
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0121459960938	2
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0143871307373	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.0167479515076	1
Coq.ssr.ssrbool.pair_andP	40	0	search with cache (only 1: intuition).	0.0113849639893	1
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	3	search with cache (only 1: by case b1; constructor).	0.00917100906372	4
Coq.ssr.ssrbool.idPn	40
Coq.ssr.ssrbool.negP	40	1	search with cache (only 1: by case b1; constructor).	0.0110580921173	2
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00751996040344	1
Coq.ssr.ssrbool.negPf	40	3	search with cache (only 1: by case b1; constructor).	0.00951719284058	4
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40
Coq.ssr.ssrbool.norP	40	2	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0178151130676	3
Coq.ssr.ssrbool.implyP	40	1	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0100359916687	2
Coq.ssr.ssrbool.andTb	40	0	search with cache (only 1: by [  ]).	0.0069260597229	1
Coq.ssr.ssrbool.andFb	40
Coq.ssr.ssrbool.andbT	40
Coq.ssr.ssrbool.andbF	40
Coq.ssr.ssrbool.andbb	40	5	search with cache (only 1: by case).	0.0105888843536	6
Coq.ssr.ssrbool.andbC	40
Coq.ssr.ssrbool.andbA	40	3	search with cache (only 1: by case).	0.00945615768433	4
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0136098861694	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0134389400482	1
Coq.ssr.ssrbool.andbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0148160457611	1
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: Bool.destr_bool).	0.00771808624268	1
Coq.ssr.ssrbool.orFb	40
Coq.ssr.ssrbool.orbT	40
Coq.ssr.ssrbool.orbF	40
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00797319412231	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00962805747986	1
Coq.ssr.ssrbool.orbA	40
Coq.ssr.ssrbool.orbCA	40
Coq.ssr.ssrbool.orbAC	40
Coq.ssr.ssrbool.orbACA	40
Coq.ssr.ssrbool.andbN	40	1	search with cache (only 1: by case : {}b {}).	0.00825095176697	2
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : {}b {}).	0.00796484947205	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : {}b {}).	0.00819206237793	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : {}b {}).	0.0081889629364	1
Coq.ssr.ssrbool.andb_orl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0138158798218	1
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0139510631561	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0141651630402	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0138239860535	1
Coq.ssr.ssrbool.andb_idl	40
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0138418674469	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0157208442688	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0202128887177	1
Coq.ssr.ssrbool.orb_idl	40
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0137131214142	1
Coq.ssr.ssrbool.orb_id2l	40	5	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0232009887695	6
Coq.ssr.ssrbool.orb_id2r	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}; case : {}c {} =>// {+}->).	0.0783779621124	2
Coq.ssr.ssrbool.negb_and	40
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.010705947876	1
Coq.ssr.ssrbool.andbK	40	2	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0109941959381	3
Coq.ssr.ssrbool.andKb	40	1	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0106921195984	2
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	0.0106689929962	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0106749534607	1
Coq.ssr.ssrbool.implybT	40
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : {}b {}).	0.00823402404785	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: trivial).	0.00644302368164	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: trivial).	0.00669813156128	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : {}b {}).	0.00799894332886	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0106070041656	1
Coq.ssr.ssrbool.implybE	40
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0106840133667	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0105381011963	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0107879638672	1
Coq.ssr.ssrbool.implyb_idl	40
Coq.ssr.ssrbool.implyb_idr	40
Coq.ssr.ssrbool.implyb_id2l	40	1	search with cache (only 1: by case : {}a {}; case : {}b {} =>// {+}->).	1.90358304977	2
Coq.ssr.ssrbool.addFb	40	1	search with cache (only 1: by [  ]).	0.00730204582214	2
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00792098045349	1
Coq.ssr.ssrbool.addbb	40
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00958800315857	1
Coq.ssr.ssrbool.addbA	40
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0136618614197	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0136618614197	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0208079814911	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.01416015625	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0138278007507	1
Coq.ssr.ssrbool.addKb	40
Coq.ssr.ssrbool.addbK	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0105671882629	3
Coq.ssr.ssrbool.addIb	40
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0169668197632	2
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : {}b {}).	0.0084228515625	1
Coq.ssr.ssrbool.addbT	40
Coq.ssr.ssrbool.addbN	40
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : {}a {}; case : {}b {}).	0.0108752250671	1
Coq.ssr.ssrbool.addbP	40
Coq.ssr.ssrbool.subrelUl	40
Coq.ssr.ssrbool.subrelUr	40
Coq.ssr.ssrbool.sub_refl	40
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40
Coq.ssr.ssrbool.unfold_in	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : {}(haveP x) {}).	0.00741600990295	2
Coq.ssr.ssrbool.simpl_predE	40
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.00722789764404	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: auto).	0.00751399993896	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: auto).	0.00714182853699	1
Coq.ssr.ssrbool.in1W	40	0.5	search with cache (only 1: intros; only 1: by [  ]).	0.0187110900879	7
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00900888442993	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00942182540894	1
Coq.ssr.ssrbool.in1T	40
Coq.ssr.ssrbool.in2T	40
Coq.ssr.ssrbool.in3T	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.0101828575134	1
Coq.ssr.ssrbool.sub_in1	40
Coq.ssr.ssrbool.sub_in11	40
Coq.ssr.ssrbool.sub_in111	40
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  {}=>? ?).	0.00865292549133	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  {}=>? ?).	0.00847291946411	1
Coq.ssr.ssrbool.on2W	40	2	search with cache (only 1: by move  {}=>? ?).	0.00980091094971	3
Coq.ssr.ssrbool.on1T	40
Coq.ssr.ssrbool.on1lT	40
Coq.ssr.ssrbool.on2T	40
Coq.ssr.ssrbool.subon1	40	0	search with cache (only 1: by move  {}=>? ?; auto).	0.355544805527	1
Coq.ssr.ssrbool.subon1l	40	2	search with cache (only 1: by move  {}=>allQ x /sub2; apply : {}allQ {}).	0.341952085495	3
Coq.ssr.ssrbool.subon2	40	2	search with cache (only 1: by move  {}=>? ?; auto).	0.364280939102	3
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	1	search with cache (only 1: by move  {}=>fK x y /fK {+2}<- /fK {+2}<- {+}->).	0.787266016006	2
Coq.ssr.ssrbool.canLR_on	40	2	search with cache (only 1: by move  {}=>fK D1y {+}->; rewrite fK).	1.9141728878	3
Coq.ssr.ssrbool.canRL_on	40	1	search with cache (only 1: by move  {}=>fK D1x {+}<-; rewrite fK).	1.44786190987	2
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	2	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0131890773773	3
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0159101486206	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  {}=>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0157549381256	1
Coq.ssr.ssrbool.sub_in_bij	40
Coq.ssr.ssrbool.subon_bij	40
Coq.ssr.ssrbool.sub_in2	40
Coq.ssr.ssrbool.sub_in3	40
Coq.ssr.ssrbool.sub_in12	40
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  {}=>/= sub_dd'; apply : {}sub_in111 {}).	0.0796809196472	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00890302658081	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  {}=>Hf x y /Hf; rewrite fgK).	0.633991956711	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  {}=>hf x ax; rewrite hf).	0.00949311256409	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  {}=>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.928460836411	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	2.0	search with cache (only 1: intros A C h1 h2; only 1: auto).	0.00768399238586	8
Coq.ssr.ssrfun.unitE	40
Coq.ssr.ssrfun.frefl	40
Coq.ssr.ssrfun.fsym	40
Coq.ssr.ssrfun.ftrans	40
Coq.ssr.ssrfun.rrefl	40	0.4	search with cache (only 1: intros H ?; only 1: reflexivity).	0.00946712493896	6
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	1.1.2.0.5	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0394840240479	124
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.015969991684	1
Coq.ssr.ssrfun.svalP	40
Coq.ssr.ssrfun.s2valP	40	1	search with cache (only 1: by case : {}u {}).	0.0113251209259	2
Coq.ssr.ssrfun.s2valP'	40	1	search with cache (only 1: by case : {}u {}).	0.011342048645	2
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  {}=>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : {}(fP x) {}).	0.139318943024	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag {}=>f /all_pair []; exists f).	0.685867071152	1
Coq.ssr.ssrfun.can_pcan	40
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	0	search with cache (only 1: by move  {}=>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.904536962509	1
Coq.ssr.ssrfun.canLR	40
Coq.ssr.ssrfun.canRL	40
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40
Coq.ssr.ssrfun.esymK	40
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	0.9	search with cache (only 1: intros H ?; only 1: by [  ]).	0.018786907196	21
Coq.ssr.ssrfun.inj_can_sym	40
Coq.ssr.ssrfun.inj_comp	40
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.2	search with cache (only 1: intros; only 1: auto).	0.00836205482483	4
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00747179985046	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	2.0	search with cache (only 1: intros A C h1 h2; only 1: auto).	0.00990104675293	10
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00756216049194	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	2	search with cache (only 1: now unfold Over_rel).	0.00941300392151	13
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40	9.1.3.6.0	search with cache (only 1: fix even_spec 1; only 1: apply Fin.rect2; only 1: trivial; only 1: intros; only 1: trivial).	9.41760993004	25122
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	1.5.4.4	search with cache (only 1: intros m n v1; only 1: intros; only 1: rewrite <- H; only 1: trivial).	0.290252923965	502
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40
Coq.Vectors.VectorSpec.const_nth	40
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2.2	search with cache (only 1: intros; only 1: trivial).	0.0484731197357	59
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.1.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.385755062103	175
Coq.Vectors.VectorSpec.uncons_cons	40	3.2	search with cache (only 1: intros; only 1: reflexivity).	0.0204999446869	7
Coq.Vectors.VectorSpec.append_comm_cons	40	7.1	search with cache (only 1: intros; only 1: reflexivity).	0.0183219909668	10
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0110380649567	1
Coq.Setoids.Setoid.Seq_sym	40	4.1	search with cache (only 1: intros; only 1: firstorder).	0.0140759944916	11
Coq.Setoids.Setoid.Seq_trans	40
Coq.Setoids.Setoid.gen_st	40
Coq.Bool.IfProp.Iftrue_inv	40
Coq.Bool.IfProp.Iffalse_inv	40	0.1.2.1.1	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0140740871429	19
Coq.Bool.IfProp.IfProp_true	40
Coq.Bool.IfProp.IfProp_false	40	2.3.0	search with cache (only 1: destr_bool; only 1: inversion H; only 1: auto with bool).	0.0138800144196	14
Coq.Bool.IfProp.IfProp_or	40	0.0.0.2.4	search with cache (only 1: destruct 1; only 1: left; only 1: auto; only 1: right; only 1: assumption).	0.188891887665	197
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.3.0.4	search with cache (only 1: Nat.induct ltac:(n); only 1: reflexivity; only 1: intros a a' H; only 1: easy).	0.149353027344	40
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0743951797485	3
Coq.Bool.Zerob.zerob_false_intro	40	3.1.1	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: now try Nat.order').	0.0762510299683	8
Coq.Bool.Zerob.zerob_false_elim	40
Coq.Bool.DecBool.ifdec_left	40
Coq.Bool.DecBool.ifdec_right	40
Coq.Bool.Sumbool.sumbool_of_bool	40
Coq.Bool.Sumbool.bool_eq_rec	40	1.1.4.1	search with cache (only 1: intros; only 1: destruct b; only 1: auto; only 1: auto).	0.0181469917297	40
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00959181785583	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40
Coq.Bool.Sumbool.sumbool_not	40
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40
Coq.Bool.Bool.diff_false_true	40	1	search with cache (only 1: discriminate).	0.00701713562012	2
Coq.Bool.Bool.eq_true_false_abs	40
Coq.Bool.Bool.not_true_is_false	40
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0103969573975	2
Coq.Bool.Bool.not_true_iff_false	40	1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0184371471405	13
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0138020515442	3
Coq.Bool.Bool.leb_implb	40	3.2.3.3.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.153944969177	366
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.0115110874176	1
Coq.Bool.Bool.eqb_reflx	40	2	search with cache (only 1: destr_bool).	0.00866484642029	3
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.0107190608978	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0199880599976	15
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0202770233154	5
Coq.Bool.Bool.negb_orb	40	0.2.0.0.0.1	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: simpl; only 1: auto; only 1: intuition; only 1: destr_bool).	0.0165131092072	16
Coq.Bool.Bool.negb_andb	40	2	search with cache (only 1: destr_bool).	0.0106871128082	3
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00839996337891	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00819182395935	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.0106420516968	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00901293754578	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00839018821716	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0080099105835	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00891494750977	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0123319625854	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0125770568848	3
Coq.Bool.Bool.orb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0220839977264	5
Coq.Bool.Bool.orb_false_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0211491584778	9
Coq.Bool.Bool.orb_true_elim	40	2.2.3.5	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.436173915863	613
Coq.Bool.Bool.orb_prop	40	2.2.3.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0671219825745	80
Coq.Bool.Bool.orb_true_intro	40	0.1.0	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: assumption).	0.00899386405945	4
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.0101480484009	1
Coq.Bool.Bool.orb_false_elim	40	1.0	search with cache (only 1: destr_bool; only 1: auto).	0.0125019550323	3
Coq.Bool.Bool.orb_diag	40	2	search with cache (only 1: destr_bool).	0.00888395309448	3
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00706005096436	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00800395011902	1
Coq.Bool.Bool.orb_false_r	40	0	search with cache (only 1: destr_bool).	0.00872397422791	1
Coq.Bool.Bool.orb_false_l	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00718903541565	2
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00828909873962	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0102422237396	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0134270191193	1
Coq.Bool.Bool.andb_true_iff	40	1.1.1.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.020623922348	8
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0229740142822	5
Coq.Bool.Bool.andb_true_eq	40	2.0	search with cache (only 1: destr_bool; only 1: intuition).	0.013484954834	4
Coq.Bool.Bool.andb_false_intro1	40	0.1.1.1.0.1	search with cache (only 1: destruct b1; only 1: destruct b2; only 1: discriminate; only 1: discriminate; only 1: intros; only 1: reflexivity).	0.0162680149078	17
Coq.Bool.Bool.andb_false_intro2	40	2.0.0.0	search with cache (only 1: intros; only 1: subst; only 1: apply andb_false_iff; only 1: auto).	0.0117559432983	6
Coq.Bool.Bool.andb_false_r	40
Coq.Bool.Bool.andb_false_l	40	1	search with cache (only 1: destr_bool).	0.00876593589783	2
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00869917869568	1
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00876402854919	2
Coq.Bool.Bool.andb_true_l	40	1	search with cache (only 1: destr_bool).	0.00866985321045	2
Coq.Bool.Bool.andb_false_elim	40
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00872898101807	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.0105249881744	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.0144879817963	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.014683008194	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0147650241852	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0147519111633	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0148727893829	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.0106439590454	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0106658935547	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00891590118408	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00887989997864	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00888204574585	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00749802589417	1
Coq.Bool.Bool.xorb_nilpotent	40
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.0106739997864	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.0148949623108	1
Coq.Bool.Bool.xorb_eq	40	3.0	search with cache (only 1: intros; only 1: destr_bool).	0.0136330127716	5
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.0567779541016	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.01597905159	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0160851478577	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0161039829254	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0108389854431	1
Coq.Bool.Bool.negb_xorb_r	40	0.1.1.1.0	search with cache (only 1: destruct b, b'; only 1: auto; only 1: trivial; only 1: trivial; only 1: trivial).	0.0114979743958	8
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.0108649730682	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0283749103546	5
Coq.Bool.Bool.eq_true_iff_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0180079936981	3
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0113050937653	3
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0110099315643	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0124530792236	5
Coq.Bool.Bool.absurd_eq_true	40	0	search with cache (only 1: contradiction).	0.00752782821655	1
Coq.Bool.Bool.trans_eq_bool	40
Coq.Bool.Bool.Is_true_eq_true	40
Coq.Bool.Bool.Is_true_eq_left	40
Coq.Bool.Bool.Is_true_eq_right	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00869584083557	4
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.0086829662323	1
Coq.Bool.Bool.eqb_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0130729675293	5
Coq.Bool.Bool.orb_prop_elim	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0140841007233	7
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0137400627136	2
Coq.Bool.Bool.andb_prop_intro	40	1.1.1.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0162110328674	7
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0136110782623	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0182318687439	3
Coq.Bool.Bool.eq_bool_prop_elim	40	2.2.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0172209739685	7
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto).	0.011146068573	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0102450847626	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0113110542297	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0117130279541	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.0123088359833	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00971698760986	1
Coq.Bool.Bool.andb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00836205482483	2
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.0116341114044	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40
Coq.Bool.Bool.reflect_dec	40
Coq.Bool.Bool.eqb_spec	40
Coq.Bool.BoolEq.beq_eq_true	40
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40
Coq.Lists.ListSet.set_union_intro	40
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40
Coq.Lists.ListSet.set_union_emptyR	40	0.0	search with cache (only 1: intros a x H; only 1: auto || contradiction).	0.0182030200958	2
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40
Coq.Lists.Streams.Str_nth_tl_map	40
Coq.Lists.Streams.Str_nth_map	40	4.3.0.1.2.0	search with cache (only 1: unfold Str_nth; only 1: simple induction n; only 1: reflexivity; only 1: intros m hypind; only 1: simpl; only 1: auto).	0.0611538887024	257
Coq.Lists.Streams.ForAll_map	40	0.1.6.0.4.4.3.0.5	search with cache (only 1: split; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Eq_sym); only 1: case H; only 1: trivial; only 1: trivial; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(Eq_sym); only 1: case H; only 1: auto; only 1: assumption).	2.36510491371	9148
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.1.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: auto).	0.677769899368	713
Coq.Lists.Streams.Str_nth_zipWith	40
Coq.Lists.List.nil_cons	40	15.2	search with cache (only 1: intros; only 1: congruence).	0.554379940033	718
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40	1.0.4	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: destr_bool).	0.136174917221	64
Coq.Lists.List.hd_error_some_nil	40
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	1	search with cache (only 1: auto).	0.0113840103149	2
Coq.Lists.List.hd_error_cons	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0122008323669	3
Coq.Lists.List.in_eq	40	2.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.013906955719	6
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0120089054108	2
Coq.Lists.List.not_in_cons	40	4.3	search with cache (only 1: simpl; only 1: firstorder).	0.0406010150909	31
Coq.Lists.List.in_nil	40	0	search with cache (only 1: auto).	0.0113649368286	1
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0119931697845	2
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	0	search with cache (only 1: auto).	0.0112979412079	1
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40
Coq.Lists.List.app_assoc	40
Coq.Lists.List.app_assoc_reverse	40	1.0.0.1.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0269000530243	12
Coq.Lists.List.app_comm_cons	40	0.1.0.1.0.1.0	search with cache (only 1: simpl; only 1: destruct x as [| a l]; only 1: simpl; only 1: auto using app_assoc; only 1: simpl; only 1: intros; only 1: auto).	0.0204701423645	10
Coq.Lists.List.app_eq_nil	40	0.4.2	search with cache (only 1: induction l; only 1: tauto; only 1: now discriminate).	0.0212728977203	9
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	2.1.1.1.15.4	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.04862594604	1246
Coq.Lists.List.in_app_or	40	5.0.1.0.2.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: tauto).	0.186825037003	150
Coq.Lists.List.in_or_app	40
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0133509635925	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	2.6.0.3.1.2.1.0	search with cache (only 1: unfold lt; only 1: induction l; only 1: simpl; only 1: now symmetry; only 1: simpl; only 1: induction n as [| n hn]; only 1: auto; only 1: auto with arith).	22.610877037	45309
Coq.Lists.List.app_nth1	40
Coq.Lists.List.app_nth2	40
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40
Coq.Lists.List.nth_error_app2	40	1.0.0.0.3.0.0.3.1.1	search with cache (only 1: revert n; only 1: induction l; only 1: destruct n; only 1: auto; only 1: auto; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	6.11666297913	7939
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	0.1.0.0.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: inversion 1; only 1: simpl; only 1: intros [| n] d d'; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	0.035551071167	29
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	7	search with cache (only 1: trivial).	0.0135319232941	12
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40
Coq.Lists.List.count_occ_cons_neq	40	2.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0227642059326	12
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0	search with cache (only 1: auto).	0.0123288631439	1
Coq.Lists.List.concat_cons	40	0.0.0.1.0	search with cache (only 1: induction x as [| x l IHl]; only 1: intros; only 1: simpl; only 1: auto; only 1: auto).	0.0209641456604	6
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0136590003967	3
Coq.Lists.List.in_map	40	0.1.4.8.4.0.0.4	search with cache (only 1: induction l; only 1: intros a H; only 1: inversion_clear H; only 1: red; only 1: firstorder; only 1: elim H; only 1: simpl; only 1: auto).	24.9832479954	48930
Coq.Lists.List.in_map_iff	40	0.1.3.1	search with cache (only 1: intros; only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0913460254669	9
Coq.Lists.List.map_length	40	1.0.0.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: auto).	0.0229041576385	7
Coq.Lists.List.map_nth	40	0.1.6.0.0.0.0	search with cache (only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: induction n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.793520927429	1093
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.4.0.2.0.1.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	0.861769914627	1050
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	2.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: discriminate).	0.0232470035553	12
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40
Coq.Lists.List.concat_map	40	4.9.4.0.0.2.15	search with cache (only 1: intro; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: congruence).	10.199231863	22000
Coq.Lists.List.map_id	40
Coq.Lists.List.map_map	40
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	3.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: reflexivity).	0.112990856171	56
Coq.Lists.List.fold_left_app	40	1.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.0437800884247	33
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	5.6.2.0.0.8	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: reflexivity).	9.38870406151	19717
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40	1.2	search with cache (only 1: fix even_spec 1; only 1: firstorder  (subst; auto)).	0.377027988434	62
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	2.2.2.0.3.0.0.4	search with cache (only 1: induction l1; only 1: intros l2; only 1: auto; only 1: destr_bool; only 1: case (f a); only 1: simpl; only 1: trivial; only 1: trivial).	1.29635381699	3333
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40	1.1.5.7.0.0.1.5	search with cache (only 1: revert l; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: case_eq (f a); only 1: auto; only 1: intuition congruence).	2.66860699654	4310
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0185170173645	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40
Coq.Lists.List.filter_ext_in_iff	40	5.2.8	search with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: auto).	23.3603379726	6940
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0216221809387	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40
Coq.Lists.List.split_length_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: Nat.order_nz; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0358729362488	9
Coq.Lists.List.split_combine	40
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	1.1.0.15.0.1	search with cache (only 1: induction l; only 1: auto; only 1: intros [| n]; only 1: auto; only 1: simpl; only 1: auto).	3.19102287292	6566
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40	4.0	search with cache (only 1: unfold lel; only 1: Nat.order).	0.0767838954926	38
Coq.Lists.List.lel_cons_cons	40	1.0.5	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0347530841827	9
Coq.Lists.List.lel_cons	40	0.4.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0223379135132	7
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0181639194489	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: auto).	0.0163910388947	1
Coq.Lists.List.incl_tl	40	8.3	search with cache (only 1: intros f g H l; only 1: intuition).	0.0679769515991	80
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0176000595093	1
Coq.Lists.List.incl_appl	40	2.0.6.1.0.1	search with cache (only 1: intros l1; only 1: intros l m a; only 1: elim l; only 1: rewrite app_nil_r; only 1: auto; only 1: auto with datatypes).	0.365727901459	402
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.016951084137	1
Coq.Lists.List.incl_cons	40	0.10.2.2	search with cache (only 1: intros f g l H; only 1: intros x x' Hxx'; only 1: firstorder; only 1: intuition congruence).	0.390108108521	224
Coq.Lists.List.incl_app	40
Coq.Lists.List.firstn_nil	40
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0155549049377	1
Coq.Lists.List.firstn_all	40
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	0	search with cache (only 1: now simpl).	0.0156629085541	1
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0	search with cache (only 1: auto).	0.0165379047394	1
Coq.Lists.List.skipn_nil	40	1.0.3	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0226440429688	7
Coq.Lists.List.skipn_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0177118778229	2
Coq.Lists.List.skipn_none	40	2.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: auto).	0.0257501602173	15
Coq.Lists.List.skipn_all2	40
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40
Coq.Lists.List.skipn_length	40	0.0.0.0.1.4.8	search with cache (only 1: induction n; only 1: auto with arith; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.60829997063	3579
Coq.Lists.List.skipn_all	40
Coq.Lists.List.skipn_app	40	1.0.3.8.2.1	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: intros [| ] ?; only 1: split; only 1: simpl; only 1: auto with arith).	26.4160499573	44415
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0	search with cache (only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.0233800411224	4
Coq.Lists.List.combine_firstn_l	40
Coq.Lists.List.combine_firstn_r	40
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40
Coq.Lists.List.Add_length	40
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.1	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0232720375061	3
Coq.Lists.List.NoDup_cons_iff	40	1.0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: inversion_clear 1; only 1: now constructor).	0.0300920009613	6
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	1.6.0.0.7.12	search with cache (only 1: intros l; only 1: induction l; only 1: auto; only 1: intro n; only 1: simpl; only 1: auto).	0.832840919495	1191
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	14.0	search with cache (only 1: intuition; only 1: inversion_clear H).	0.394904851913	160
Coq.Lists.List.Exists_cons	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_inv	40
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.0.2	search with cache (only 1: intros a b l H; only 1: inversion_clear H; only 1: auto).	0.0371880531311	16
Coq.Lists.List.Exists_impl	40
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.Forall_impl	40
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.0188050270081	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40
Coq.Lists.List.repeat_spec	40	2.3.5.2	search with cache (only 1: induction n as [| k Hrec]; only 1: now simpl; only 1: simpl; only 1: intuition).	0.417289972305	375
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.0	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.0211369991302	2
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	0.0.0.0.11.3	search with cache (only 1: firstorder; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.00849914551	444
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0256159305573	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: auto).	0.0260519981384	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	1.1.5.1.1.5.10	search with cache (only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	2.3401620388	4857
Coq.Lists.SetoidList.InA_cons	40	0.0.5.3	search with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion H; only 1: auto; only 1: auto).	0.321043968201	118
Coq.Lists.SetoidList.InA_nil	40	1.0.6.4.3.4.7	search with cache (only 1: constructor; only 1: intro H1; only 1: elim H1; only 1: intros l; only 1: now rewrite ?firstn_nil; only 1: auto; only 1: intuition).	3.9585878849	4925
Coq.Lists.SetoidList.InA_alt	40
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	11	search with cache (only 1: now rewrite ?firstn_nil).	0.0470700263977	47
Coq.Lists.SetoidList.eqlistA_altdef	40
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.3.1.3.9	search with cache (only 1: intros P Q H l; only 1: induction 1; only 1: constructor; only 1: firstorder; only 1: auto).	2.37485408783	528
Coq.Lists.SetoidList.In_InA	40
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40
Coq.Lists.SetoidList.InA_double_head	40
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0730860233307	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.2	search with cache (only 1: constructor; only 1: intuition; only 1: invlist InA; only 1: auto).	0.053897857666	7
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40	2.9.9.5	search with cache (only 1: intros ? ? E1 ? ? E2 ?; only 1: rewrite InA_app_iff; only 1: rewrite InA_app_iff; only 1: firstorder).	18.6055109501	907
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.2	search with cache (only 1: intros E; only 1: rewrite !InA_cons; only 1: tauto).	0.0563640594482	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.1.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0885720252991	5
Coq.Lists.SetoidList.equivlistA_app_idem	40
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	7.1.5.2.4.1.0.5.0.1	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with *; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto with *; only 1: auto; only 1: auto with *).	8.91639494896	15437
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	0.0.0	search with cache (only 1: destruct l; only 1: constructor; only 1: eauto with *).	0.0299999713898	3
Coq.Lists.SetoidList.InA_InfA	40	0.0.1	search with cache (only 1: destruct l; only 1: intuition; only 1: eauto with *).	0.0369369983673	4
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	4.5.4.1.0.0.0.5	search with cache (only 1: induction l1; only 1: simpl in *; only 1: intros; only 1: intuition; only 1: simpl in *; only 1: intuition; only 1: inv; only 1: intuition).	21.5198469162	19644
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40
Coq.Lists.SetoidList.app_eqlistA_compat	40	1.2.2.4.0.5.0.0	search with cache (only 1: red; only 1: red; only 1: induction 1; only 1: red; only 1: auto; only 1: red; only 1: simpl; only 1: auto).	1.94031214714	2464
Coq.Lists.SetoidList.eqlistA_app	40	1.1.1.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0305140018463	8
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40	6.5	search with cache (only 1: fix even_spec 1; only 1: auto).	0.418594837189	373
Coq.NArith.BinNat.N.eq_dec	40	10.0	search with cache (only 1: decide equality; only 1: decide equality).	0.405985116959	58
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: trivial).	0.0152070522308	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: trivial).	0.0144538879395	1
Coq.NArith.BinNat.N.peano_rec_succ	40	1.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0225360393524	6
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.0147440433502	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.0233399868011	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0150809288025	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.0153300762177	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.0159630775452	3
Coq.NArith.BinNat.N.succ_pos_spec	40
Coq.NArith.BinNat.N.pos_pred_succ	40
Coq.NArith.BinNat.N.succ_pos_pred	40
Coq.NArith.BinNat.N.pred_succ	40
Coq.NArith.BinNat.N.pred_sub	40
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.028648853302	1
Coq.NArith.BinNat.N.add_0_l	40	0	search with cache (only 1: auto).	0.0155251026154	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	2	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0187330245972	3
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.017165184021	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	1.1.0.5.3	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: induction n; only 1: destr_bool; only 1: destr_bool).	1.11946797371	550
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40	0.6.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	0.358213186264	114
Coq.NArith.BinNat.N.compare_lt_iff	40	0	search with cache (only 1: easy').	0.0162739753723	1
Coq.NArith.BinNat.N.compare_le_iff	40	8	search with cache (only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.110368013382	46
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	0	search with cache (only 1: trivial).	0.0164480209351	1
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40	0.0.0.0.1.0.0.0.0.1.9.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: destruct n, m; only 1: now nzsimpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: destruct n, m; only 1: now nzsimpl; only 1: trivial; only 1: trivial; only 1: trivial).	25.7566800117	9330
Coq.NArith.BinNat.N.succ_double_add	40	5.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now destruct n, m).	0.230531930923	15
Coq.NArith.BinNat.N.double_mul	40
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.017865896225	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.1.1.3.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: trivial; only 1: auto; only 1: easy; only 1: unfold lt in *; only 1: simpl; only 1: auto).	0.601406812668	596
Coq.NArith.BinNat.N.double_le_mono	40	2.2.1.0.1.6	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.834617137909	469
Coq.NArith.BinNat.N.succ_double_lt_mono	40
Coq.NArith.BinNat.N.succ_double_le_mono	40	1.2.1.0.1.7	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: auto; only 1: simpl; only 1: trivial; only 1: auto; only 1: auto).	0.822318077087	340
Coq.NArith.BinNat.N.compare_0_r	40	1.0	search with cache (only 1: apply le_ngt; only 1: apply le_0_l).	0.020977973938	3
Coq.NArith.BinNat.N.pow_0_r	40	0	search with cache (only 1: trivial).	0.0169401168823	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	1.1.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.026290178299	5
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	7.0.6	search with cache (only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: fix sqrtrem_spec 1; only 1: auto).	0.59078001976	651
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	5	search with cache (only 1: apply le_0_l).	0.0570650100708	17
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	2	search with cache (only 1: now destruct a).	0.0206189155579	3
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.6.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0346541404724	10
Coq.NArith.BinNat.N.testbit_neg_r	40
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0	search with cache (only 1: trivial).	0.0191519260406	1
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0329389572144	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0306599140167	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40	5	search with cache (only 1: apply Pos.eqb_eq).	0.0852589607239	6
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0875809192657	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0881769657135	1
Coq.NArith.Ndec.Neqb_complete	40	0.17.10.10.2.1	search with cache (only 1: intros; only 1: apply Nbit_faithful; only 1: <Coq.Strings.String.t_eqb>; only 1: f_equal; only 1: apply N.eqb_eq in H; only 1: trivial).	5.40814995766	5577
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40
Coq.NArith.Ndec.Ndiv2_neq	40	0.2.2.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.114597797394	8
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	3.0.1.4	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.919530153275	201
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	7	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.091737985611	12
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	7.1.0.6.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intros; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	1.64370703697	855
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0914490222931	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	13.0	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.solve_min).	0.37046289444	278
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.2.9	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.974607944489	287
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	0.0972101688385	4
Coq.NArith.Ndist.ni_min_O_r	40	0.0.10.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: destruct n as [| n]; only 1: trivial; only 1: trivial).	0.479114055634	323
Coq.NArith.Ndist.ni_min_inf_l	40	1.2	search with cache (only 1: intros; only 1: trivial).	0.0853180885315	5
Coq.NArith.Ndist.ni_min_inf_r	40	0.1.5	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.104652881622	15
Coq.NArith.Ndist.ni_le_refl	40	1.0.0.1.0.15.1.4.0.4.1	search with cache (only 1: simple induction d; only 1: now rewrite ?Pos.square_xO; only 1: simple induction n; only 1: reflexivity; only 1: intros; only 1: symmetry; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	10.7136518955	13138
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.3.2.2.5	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	1.66273188591	1039
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.116336107254	5
Coq.NArith.Ndigits.Nshiftl_nat_S	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.0938789844513	5
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: auto with *).	0.0912120342255	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.0849199295044	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.2.1.0.1.0.1.1.21	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: apply N.pos_land_spec).	1.07825803757	1032
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.6.0.1.0.2.1.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite N.ldiff_spec; only 1: apply N.pos_ldiff_spec).	1.09285712242	905
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	2.1.0.20.0.11.18	search with cache (only 1: intros l1; only 1: induction l1; only 1: trivial; only 1: destruct p; only 1: easy; only 1: easy; only 1: trivial).	4.75471997261	9150
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.6.16	search with cache (only 1: intros l1; only 1: induction l1; only 1: reflexivity; only 1: trivial).	0.679993152618	678
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.1.9	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: easy).	0.240570783615	99
Coq.NArith.Ndigits.Ndiv2_double	40	1.0.7.0.6.6	search with cache (only 1: intros a b; only 1: destruct a as [| [p| p| ]]; only 1: trivial; only 1: discriminate; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.45266294479	1517
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	1.6.0.3.0.3.0	search with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: unfold N.div2, N.to_nat; only 1: constructor; only 1: discriminate; only 1: trivial).	6.58344483376	3633
Coq.NArith.Ndigits.Ndiv2_correct	40	1.1.2.4.3.0.9.11	search with cache (only 1: intros n; only 1: induction n; only 1: reflexivity; only 1: intros; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	28.8444108963	23906
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.1.2.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: easy).	0.104562044144	7
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.1.0.1.0.0.0.0.1.1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	5.85375905037	3758
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.2.0.2.0.1.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: easy; only 1: destruct a'; only 1: easy; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	32.0316050053	13288
Coq.NArith.Ndigits.Nless_def_3	40
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.1.13.9	search with cache (only 1: induction a; only 1: discriminate; only 1: exists p; only 1: now try N.order').	0.590653181076	751
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40
Coq.NArith.NArith.test	40	3	search with cache (only 1: N.order).	2.08665299416	152
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	3.2.1.1.0.0.1.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: destruct a as [| p]; only 1: now rewrite H; only 1: now rewrite H).	2.22300887108	1539
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.9.0.7	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.256555080414	311
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	7.1.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: rewrite <- (id n), <- (id n'); only 1: auto).	0.535863876343	324
Coq.NArith.Nnat.Nat2N.inj_double	40	11.2.0.19.1	search with cache (only 1: Nat.nzsimpl'; only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: auto with *).	10.9653410912	9143
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	13	search with cache (only 1: nat2N).	0.369502067566	113
Coq.NArith.Nnat.Nat2N.inj_succ	40	10	search with cache (only 1: nat2N).	0.0695660114288	21
Coq.NArith.Nnat.Nat2N.inj_pred	40	9	search with cache (only 1: nat2N).	0.0520141124725	10
Coq.NArith.Nnat.Nat2N.inj_add	40	3	search with cache (only 1: nat2N).	0.100525856018	4
Coq.NArith.Nnat.Nat2N.inj_sub	40	5	search with cache (only 1: nat2N).	0.0494730472565	6
Coq.NArith.Nnat.Nat2N.inj_mul	40	4	search with cache (only 1: nat2N).	0.0518248081207	5
Coq.NArith.Nnat.Nat2N.inj_div2	40	6	search with cache (only 1: nat2N).	0.0462861061096	7
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	1	search with cache (only 1: nat2N).	0.052225112915	2
Coq.NArith.Nnat.Nat2N.inj_max	40	12	search with cache (only 1: nat2N).	0.0992450714111	76
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	12	search with cache (only 1: t_eqb).	0.139351844788	49
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, N.eqb_eq).	0.0140879154205	1
Coq.Strings.Ascii.eqb_compat	40	2.1.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: symmetry; only 1: t_eqb).	0.0180249214172	11
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40	13.20	search with cache (only 1: compute; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	30.1100318432	7672
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40	10.0	search with cache (only 1: destruct x; only 1: destr_bool).	7.31069493294	115
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality; only 1: decide equality).	0.0831799507141	10
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	8	search with cache (only 1: t_eqb).	0.1669049263	35
Coq.Strings.String.eqb_eq	40	0.0.3	search with cache (only 1: split; only 1: t_eqb; only 1: t_eqb).	0.985028028488	72
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, BinNat.N.eqb_eq).	0.0204660892487	1
Coq.Strings.String.eqb_compat	40	0.2	search with cache (only 1: intros x x' Hx y y' Hy; only 1: t_eqb).	0.0164108276367	4
Coq.Strings.String.get_correct	40	12.1	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.274322032928	290
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	2.8.1.11.7.1.27.15	search with cache (only 1: compute; only 1: elim s; only 1: easy; only 1: intros s2 n; only 1: destruct n; only 1: easy; only 1: destruct 1; only 1: trivial).	10.8315880299	24153
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	3.20.0.2	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: simpl; only 1: t_eqb).	1.80780076981	2156
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	2	search with cache (only 1: auto with *).	0.0886101722717	3
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	2	search with cache (only 1: auto with *).	0.0904672145844	3
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	3	search with cache (only 1: auto with *).	0.0789442062378	4
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	12	search with cache (only 1: firstorder).	0.121318817139	46
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	2.0.1.2.1.1	search with cache (only 1: intro; only 1: intro; only 1: simpl; only 1: induction 1; only 1: reflexivity; only 1: auto).	3.00543808937	299
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	6.0.0.0.0.1	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: firstorder  (subst; auto)).	0.87369799614	414
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	4.1.2	search with cache (only 1: intros; only 1: f_equal; only 1: trivial).	0.141584157944	10
Coq.Reals.RList.RList_P22	40	0.9	search with cache (only 1: intros n m; only 1: now destruct n).	0.712026834488	143
Coq.Reals.RList.RList_P23	40	1.1.1.0.0.0.7	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: apply INR_eq; only 1: auto with real).	1.77726483345	819
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P27	40
Coq.Reals.RList.RList_P28	40	3.4.32.3.25	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial).	6.36482000351	11746
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.2	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.285431861877	94
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.1.0.0.0.1	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.0461568832397	9
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.1.1.0.2	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	0.457581996918	32
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	1.0.2.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: now rewrite ?Pos.square_xO; only 1: intro H1; only 1: auto with real).	0.157846927643	14
Coq.Reals.Rbasic_fun.Rmin_left	40	8.0.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: now elim H).	2.00610399246	772
Coq.Reals.Rbasic_fun.Rmin_right	40	1.1.6.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.666575908661	82
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.146228075027	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.15.2	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	3.36935710907	2199
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	3.3.1.0.2	search with cache (only 1: intros n m H1 H2; only 1: apply Rmin_Rgt_r; only 1: split; only 1: trivial; only 1: trivial).	4.10357904434	1301
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.13.0	search with cache (only 1: intros x y z; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	2.30142498016	969
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.4.25.0	search with cache (only 1: intros x y z; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intuition auto; Pos.Private_Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *).	18.810546875	12156
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: right; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto with real).	0.161085128784	10
Coq.Reals.Rbasic_fun.Rmax_left	40
Coq.Reals.Rbasic_fun.Rmax_right	40
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.144799947739	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	4.1.0.0.9.4.4	search with cache (only 1: intro; only 1: intro; only 1: intros n m p; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: trivial; only 1: auto with real).	37.1772251129	16055
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.1.0.3.0.16.7	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: now rewrite ?Pos.square_xO; only 1: generalize (Rtotal_order r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	11.9002289772	10004
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.2.0.16.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: now rewrite ?Pos.square_xO; only 1: trivial).	13.1070299149	12869
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	0.1.6.1.2.0.11.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: auto with real).	3.37031292915	2505
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	2.2.0.14.5.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: unfold Rmax; only 1: destruct (Rle_dec a b); only 1: auto; only 1: auto with real).	10.0822470188	10131
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.1.0.0.3.1.0.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H); only 1: left; only 1: assumption; only 1: right; only 1: red; only 1: intros ->; only 1: elim (Rlt_irrefl r2 H)).	3.94719409943	1570
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	0	search with cache (only 1: <Coq.Strings.String.t_eqb>).	0.341887950897	1
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	1.0.0.3	search with cache (only 1: intuition eauto  2; only 1: auto with real; only 1: right; only 1: assumption).	0.308510065079	16
Coq.Reals.SeqSeries.sum_maj1	40	5.1.4.5.14	search with cache (only 1: intro; only 1: intros P H0 H1 H2; only 1: fix ind_0_1_SS 1; only 1: intros n H q; only 1: auto with arith).	19.7692260742	22256
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	4.1.0.0.1.15	search with cache (only 1: simple induction 1; only 1: simpl; only 1: auto with real; only 1: intros; only 1: simpl; only 1: auto with real).	7.6154589653	6815
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	4.5.5.13.2	search with cache (only 1: intros x y z; only 1: set (k0 := match Rcase_abs y with | left _ => (1 - up (x / - y))%Z | right _ => (up (x / y) - 1)%Z end); only 1: intros n GE; only 1: inversion GE; only 1: auto with zarith).	13.6659069061	11544
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	2.0.2	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	0.266867876053	7
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	3.1	search with cache (only 1: intros; only 1: trivial).	0.124754905701	6
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: constructor).	0.105818033218	1
Coq.Reals.Rfunctions.pow_1	40	2.0	search with cache (only 1: intro; only 1: ring_Rsqr).	0.13001704216	12
Coq.Reals.Rfunctions.pow_add	40	2.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	2.33170700073	144
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	1.0.1.0.2.0	search with cache (only 1: induction n; only 1: simpl; only 1: intro abs; only 1: exact R1_neq_R0; only 1: simpl; only 1: auto with real).	1.94538283348	24
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40	0.0.3.3.0.1.2	search with cache (only 1: simple induction n; only 1: auto with real; only 1: simpl; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	10.766808033	4236
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	3.0.0.0.0.0	search with cache (only 1: intros x n; only 1: simpl; only 1: induction n; only 1: field; only 1: simpl; only 1: field).	0.28849196434	12
Coq.Reals.Rfunctions.tech_pow_Rplus	40
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40	1.1.4.2.0.0.2.0.0	search with cache (only 1: intro; only 1: simple induction n; only 1: auto with real; only 1: simpl; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: auto with real; only 1: auto with real; only 1: auto with real).	6.28496384621	3721
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.5.1.1.4.0.15.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: reflexivity; only 1: simpl; only 1: induction n; only 1: auto with real; only 1: rewrite Hrecn; only 1: auto with real).	24.3545300961	14785
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.135523080826	12
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40	15.0.0.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order'; only 1: simpl; only 1: auto with zarith real).	18.6288919449	14238
Coq.Reals.Rfunctions.powerRZ_O	40	0.1	search with cache (only 1: intros; only 1: auto with zarith).	0.284198999405	92
Coq.Reals.Rfunctions.powerRZ_1	40	0.5	search with cache (only 1: simpl; only 1: auto with real).	0.128987073898	20
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: case z; only 1: auto with zarith real; only 1: simpl; only 1: intros; only 1: auto with zarith real; only 1: simpl; only 1: intros; only 1: auto with zarith real).	0.153079986572	10
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.160783052444	9
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- (Nat.add_0_r n); only 1: rewrite <- Nat.add_assoc; only 1: rewrite <- Nat.add_assoc; only 1: apply Nat.add_le_mono_l; only 1: apply Nat.le_0_l).	0.199643850327	18
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	2.3.0.3.2.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: auto with real; only 1: simpl; only 1: auto with arith).	2.40441513062	1139
Coq.Reals.Rprod.C_maj	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	0.8.9.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	10.0364210606	1513
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	3.4.21.1	search with cache (only 1: intros; only 1: red; only 1: right; only 1: trivial).	2.10650205612	2154
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.124084949493	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40
Coq.Reals.RIneq.Rlt_not_eq	40	5.1.9.2.10.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_asym; only 1: rewrite Rlt_def; only 1: rewrite Rlt_def in H; only 1: exact H; only 1: congruence).	3.42169117928	3889
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.4.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.224576950073	22
Coq.Reals.RIneq.Rdichotomy	40	5.1.2	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.315891981125	71
Coq.Reals.RIneq.Rlt_le	40	3.0.1	search with cache (only 1: intros x y z; only 1: left; only 1: now rewrite ?Pos.square_xO).	0.160532951355	19
Coq.Reals.RIneq.Rgt_ge	40	3.3	search with cache (only 1: constructor; only 1: trivial).	0.15655207634	23
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.19.0	search with cache (only 1: destruct 1; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto; only 1: right; only 1: eauto).	5.43198800087	4960
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.119478940964	2
Coq.Reals.RIneq.Rgt_lt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.119141101837	2
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.2.1.1	search with cache (only 1: intro; only 1: intro; only 1: red; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.148380041122	10
Coq.Reals.RIneq.Rnot_ge_lt	40	0.2.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.122776031494	5
Coq.Reals.RIneq.Rnot_lt_le	40	3.1.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: intro abs; only 1: intuition).	0.184914112091	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.139488935471	6
Coq.Reals.RIneq.Rnot_gt_ge	40
Coq.Reals.RIneq.Rnot_lt_ge	40	0.3.3.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.149729013443	10
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.130774974823	11
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40
Coq.Reals.RIneq.Rle_not_lt	40
Coq.Reals.RIneq.Rge_not_lt	40
Coq.Reals.RIneq.Rle_not_gt	40
Coq.Reals.RIneq.Rge_not_gt	40
Coq.Reals.RIneq.Req_le	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.130686044693	3
Coq.Reals.RIneq.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.131123065948	3
Coq.Reals.RIneq.Req_le_sym	40	3.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.132630109787	7
Coq.Reals.RIneq.Req_ge_sym	40	1.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.128103017807	4
Coq.Reals.RIneq.Rgt_asym	40	0.0.2.1	search with cache (only 1: intros; only 1: apply Rge_not_lt; only 1: red; only 1: tauto).	0.546663045883	7
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	1.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.147576808929	5
Coq.Reals.RIneq.Rle_le_eq	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.136479854584	2
Coq.Reals.RIneq.Rge_ge_eq	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.140949010849	2
Coq.Reals.RIneq.Rlt_eq_compat	40	5.0	search with cache (only 1: intros; only 1: congruence).	0.145159006119	7
Coq.Reals.RIneq.Rgt_eq_compat	40	5.0	search with cache (only 1: intros; only 1: congruence).	0.174118995667	17
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	2.0.4	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.561880111694	29
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40
Coq.Reals.RIneq.Rgt_dec	40
Coq.Reals.RIneq.Rge_dec	40	0.19.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	2.21540403366	1253
Coq.Reals.RIneq.Rlt_le_dec	40	0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.148652076721	6
Coq.Reals.RIneq.Rgt_ge_dec	40
Coq.Reals.RIneq.Rle_lt_dec	40
Coq.Reals.RIneq.Rge_gt_dec	40
Coq.Reals.RIneq.Rlt_or_le	40
Coq.Reals.RIneq.Rgt_or_ge	40
Coq.Reals.RIneq.Rle_or_lt	40
Coq.Reals.RIneq.Rge_or_gt	40	12.17.13.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: eauto with rorders; only 1: eauto with rorders).	5.89382481575	6370
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.570384025574	3
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	1.1.3.0	search with cache (only 1: intros; only 1: intuition auto using Z.lt_le_incl; only 1: ring; only 1: ring).	1.2042760849	21
Coq.Reals.RIneq.Rplus_opp_l	40
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.3.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: destruct H; only 1: reflexivity).	0.157510042191	9
Coq.Reals.RIneq.Rplus_eq_compat_r	40	4.0	search with cache (only 1: intros r r1 r2; only 1: congruence).	0.13799405098	6
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.1.13.1.0.0.1.0.0.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto).	27.3791601658	11748
Coq.Reals.RIneq.Rinv_r	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	1.18277406693	10
Coq.Reals.RIneq.Rinv_l_sym	40	1.1.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.863170862198	36
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.144608020782	3
Coq.Reals.RIneq.Rmult_0_r	40	22.2	search with cache (only 1: intros n; only 1: field).	1.96936106682	2178
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.133894920349	2
Coq.Reals.RIneq.Rmult_ne	40	4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: intuition).	0.263825893402	24
Coq.Reals.RIneq.Rmult_1_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.13304400444	2
Coq.Reals.RIneq.Rmult_eq_compat_l	40
Coq.Reals.RIneq.Rmult_eq_compat_r	40
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	2.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto with real).	0.137824058533	5
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.118490934372	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.2.1.0	search with cache (only 1: intros; only 1: intuition auto using Z.lt_le_incl; only 1: auto with real; only 1: auto with real).	0.149220943451	8
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	6.1	search with cache (only 1: intros n H; only 1: auto with real).	0.174160003662	22
Coq.Reals.RIneq.Rmult_plus_distr_r	40	1.3.2.0.4	search with cache (only 1: intros m n p; only 1: rewrite Rmult_comm; only 1: rewrite (Rmult_comm n p); only 1: rewrite (Rmult_comm m p); only 1: apply Rmult_plus_distr_l).	6.67691087723	980
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	5.0	search with cache (only 1: intros; only 1: congruence).	0.1332218647	7
Coq.Reals.RIneq.Ropp_0	40
Coq.Reals.RIneq.Ropp_eq_0_compat	40
Coq.Reals.RIneq.Ropp_involutive	40
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40
Coq.Reals.RIneq.Ropp_mult_distr_l	40	24.0	search with cache (only 1: intros; only 1: ring).	13.4648971558	1340
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.135298013687	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.137537002563	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	17.0	search with cache (only 1: intros; only 1: ring).	1.15704107285	549
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.134006977081	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.127049922943	2
Coq.Reals.RIneq.Rminus_0_l	40	0.2	search with cache (only 1: intros n; only 1: ring).	0.521507978439	21
Coq.Reals.RIneq.Ropp_minus_distr	40	10.1	search with cache (only 1: intros; only 1: ring).	0.235368013382	79
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.133088111877	2
Coq.Reals.RIneq.Rminus_diag_eq	40
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40
Coq.Reals.RIneq.Rminus_eq_contra	40
Coq.Reals.RIneq.Rminus_not_eq	40	1.0.3.0	search with cache (only 1: red; only 1: intros; only 1: apply H; only 1: auto with real).	0.142292022705	21
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.129539966583	4
Coq.Reals.RIneq.Rmult_minus_distr_l	40	9.0	search with cache (only 1: intros; only 1: ring).	0.264371156693	69
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40
Coq.Reals.RIneq.Rinv_r_simpl_r	40
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.2.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.162592172623	7
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.182686090469	17
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6.7	search with cache (only 1: intros a b; only 1: intuition).	0.647238969803	390
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	5.0.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.157675027847	19
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.1.6.2.3.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2); only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: unfold Rle; only 1: intuition eauto  4 with real).	13.2811210155	3831
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40
Coq.Reals.RIneq.Rplus_ge_compat_r	40	6.7	search with cache (only 1: intros a b; only 1: intuition).	1.83479499817	363
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	2.0.3.1	search with cache (only 1: do 3 intro; only 1: intros x y z; only 1: red; only 1: auto with real).	0.63988494873	104
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40	10.10.0.5	search with cache (only 1: intros X f g; only 1: firstorder  (subst; auto); only 1: auto with real; only 1: auto with real).	14.7132298946	13753
Coq.Reals.RIneq.Rplus_gt_ge_compat	40
Coq.Reals.RIneq.Rplus_ge_gt_compat	40
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	6.6	search with cache (only 1: intros a b; only 1: intuition).	1.03275203705	402
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	0.5.5	search with cache (only 1: intros a b; only 1: red; only 1: auto).	0.296700000763	149
Coq.Reals.RIneq.Ropp_lt_contravar	40	6.1	search with cache (only 1: intros x y z; only 1: auto).	0.524978160858	28
Coq.Reals.RIneq.Ropp_gt_contravar	40	0	search with cache (only 1: eauto using Rlt_trans with rorders).	0.102505922318	1
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	3.0.8.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition).	4.51016592979	1673
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	1.1.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.128489971161	6
Coq.Reals.RIneq.Ropp_le_contravar	40	0.4.1.1	search with cache (only 1: intros x y z; only 1: destruct (total_order_T x y); only 1: auto with real; only 1: auto with real).	0.300470113754	72
Coq.Reals.RIneq.Ropp_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.9.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto; only 1: ring).	0.847659826279	315
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.9.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto; only 1: auto with real).	0.767318964005	315
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.1.0.0	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: auto with real).	0.173894166946	33
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.9.0.16.5.8	search with cache (only 1: unfold Rge; only 1: intros n; only 1: intros [H| H]; only 1: auto with real; only 1: destruct H; only 1: auto with real).	17.2064778805	12219
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.2.0.1	search with cache (only 1: intros; only 1: replace 0 with - 0; only 1: auto with real; only 1: ring).	0.235178947449	28
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	6.2	search with cache (only 1: intros n; only 1: eauto using Rlt_trans with rorders).	0.146585226059	28
Coq.Reals.RIneq.Rmult_gt_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	7.21.5	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	33.5697550774	28198
Coq.Reals.RIneq.Rmult_ge_compat_r	40	7.21.4	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: auto with real).	36.8503391743	32256
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.0.1.1.0	search with cache (only 1: intros r r1 r2 H; only 1: replace r with - - r; only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.148049116135	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	5.0.4.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: now rewrite ?Pos.square_xO).	1.14847397804	627
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	3.8.5.0.5.0	search with cache (only 1: intros; only 1: destruct H; only 1: unfold Rle; only 1: auto with real; only 1: unfold Rle; only 1: auto with real).	5.48139309883	5755
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.5	search with cache (only 1: replace 1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.123431921005	14
Coq.Reals.RIneq.Rle_0_1	40	30	search with cache (only 1: auto with real).	5.4187579155	2180
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.8.1.1.0.0.1.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with r * / r; only 1: replace 0 with r * 0; only 1: auto with real; only 1: auto with real; only 1: auto with real).	36.8964560032	26581
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40	2.8.5.0	search with cache (only 1: induction n; only 1: auto with real; only 1: rewrite S_INR; only 1: auto with real).	1.39719390869	848
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	10.2.1	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	8.31036496162	3885
Coq.Reals.RIneq.INR_not_0	40	0.1.5.0	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: now simpl in H).	0.18582701683	15
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	6.3	search with cache (only 1: intros; only 1: now apply not_INR in H).	1.46294093132	190
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	10.0	search with cache (only 1: intros; only 1: ring).	0.170480966568	52
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.0.1	search with cache (only 1: intros x y; only 1: intros; only 1: unfold Rdiv; only 1: ring).	0.185268163681	25
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	0.1.3	search with cache (only 1: intros; only 1: apply Nat.lt_add_lt_sub_r; only 1: auto with arith).	0.497890949249	38
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	13.1.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	1.69894099236	826
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40	0.0.3.0.1.0.0.1.1	search with cache (only 1: red; only 1: intros r b; only 1: pattern r at 2; only 1: replace r with r + 0; only 1: pattern r at 2; only 1: split; only 1: reflexivity || assumption; only 1: eauto with real; only 1: ring).	1.71174907684	980
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intro; only 1: ring).	0.32977104187	2
Coq.Reals.Ranalysis2.quadruple_var	40	11.0	search with cache (only 1: intro; only 1: field).	0.618017911911	186
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	2.1.1	search with cache (only 1: intros; only 1: unfold included; only 1: eauto using Rle_trans with rorders).	0.172204017639	11
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.1.1.1.1	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: unfold included; only 1: eauto using Rle_trans with rorders).	0.179657936096	10
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	15	search with cache (only 1: now rewrite ?Pos.square_xO).	0.201870918274	92
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	3.9.1	search with cache (only 1: unfold open_set; only 1: intros A P h x; only 1: firstorder).	0.958832979202	389
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	16.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: do 2 rewrite Rrepr_plus; only 1: apply CReal_plus_assoc).	3.75578713417	1379
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40	9.11.1.0	search with cache (only 1: intros; only 1: induction 1; only 1: subst; only 1: auto).	25.5337059498	15469
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	30.1.2	search with cache (only 1: intros; only 1: intros a Ha; only 1: firstorder).	14.3891699314	15196
Coq.Reals.Rseries.Un_growing_shift	40
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	1.5.12	search with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros A P h x; only 1: auto with real).	9.35727906227	3744
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.10.4	search with cache (only 1: intros x y z; only 1: unfold increasing, decreasing, opp_fct; only 1: auto with real).	0.870194911957	517
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	0	search with cache (only 1: constructor).	0.0891058444977	1
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	4.0.1.1.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: auto).	0.271140813828	68
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	1.0.0.3.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.256545066833	59
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.3.4	search with cache (only 1: intros; only 1: exists 0%N; only 1: apply derivable_pt_lim_const).	0.478410959244	10
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.6.1.24	search with cache (only 1: red; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	4.45080089569	3903
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.21.1.1.1	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	3.07164692879	2964
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.4	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.13652920723	17
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40	0.0.7.4	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	3.23966097832	1200
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.246519088745	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40	0.0.5.3	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	0.796813964844	248
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40	0.0.4.4	search with cache (only 1: intros P H0 H1 H2; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	1.23445701599	318
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40	0.0.4.3	search with cache (only 1: intros P H0 H1 H2; only 1: fix ind_0_1_SS 1; only 1: intros; only 1: auto with arith).	0.356534004211	85
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with 0 + 1; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0823669433594	22
Coq.Reals.DiscrR.IZR_eq	40	4.0	search with cache (only 1: intros z1 z2 H; only 1: now Morphisms.f_equiv).	0.0422389507294	6
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.2.0.0.2.0.2	search with cache (only 1: constructor; only 1: destruct (CRltLinear R), p; only 1: intros; only 1: exact (f x x H H); only 1: destruct (CRltLinear R), p; only 1: intros; only 1: exact (f x x H H)).	0.705060005188	377
Coq.Reals.ConstructiveReals.CReq_sym	40	11.1	search with cache (only 1: intros x y z; only 1: firstorder).	1.76011300087	674
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40	4	search with cache (only 1: firstorder).	0.434575080872	5
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	1.3	search with cache (only 1: destruct x as [xn limx]; only 1: auto with arith).	0.111342906952	21
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.19	search with cache (only 1: intro UIP; only 1: apply (Ropp_ext CReal_isRingExt)).	23.4912159443	1149
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40	0.7.0.7.3.3	search with cache (only 1: intros A C h1 h2; only 1: intros a H; only 1: apply CReal_isRingExt; only 1: auto; only 1: apply CReal_isRingExt; only 1: auto).	24.4255971909	3468
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0961101055145	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.100749015808	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40	0	search with cache (only 1: assumption).	0.0916588306427	1
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	4.0.19.0	search with cache (only 1: intros; only 1: apply CReal_isRingExt; only 1: ring; only 1: tauto).	11.7609632015	2789
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	4.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: now rewrite ?Pos.square_xO).	0.150761842728	17
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	22.2	search with cache (only 1: intros; only 1: ring_Rsqr).	1.13775801659	808
Coq.Reals.R_sqr.Rsqr_plus	40	15.1	search with cache (only 1: intros; only 1: ring_Rsqr).	1.13299012184	547
Coq.Reals.R_sqr.Rsqr_minus	40	0.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.133095026016	3
Coq.Reals.R_sqr.Rsqr_neg_minus	40	9.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.589745044708	43
Coq.Reals.R_sqr.Rsqr_1	40	0.6	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.381540060043	17
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	14.0	search with cache (only 1: intros; only 1: auto with real).	1.3529047966	608
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	11.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.646115064621	105
Coq.Reals.R_sqr.Rsqr_plus_minus	40	2.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.164393901825	12
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.0.1.1.6	search with cache (only 1: unfold Rsqr; only 1: intros r r1 r2 H; only 1: replace 0 with 0 * r; only 1: auto with real; only 1: auto with real).	1.30788588524	536
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.0.1	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: auto with real; only 1: auto with real).	0.162662029266	16
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.171737909317	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.140215873718	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.255907058716	4
Coq.Reals.Rminmax.Rmin_r	40	1.0.1.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: auto using Rle_antisym; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	1.47082901001	85
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	6.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.189486980438	10
Coq.Reals.Rminmax.R.opp_min_distr	40	15.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	6.97537899017	2163
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.9.0.1.9.2	search with cache (only 1: intros; only 1: compute; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: compute; only 1: auto with real).	6.65557003021	5933
Coq.Reals.Rlimit.eps2	40	0.2.0.4.1	search with cache (only 1: intro; only 1: rewrite <- double; only 1: rewrite <- Rmult_assoc; only 1: apply Rinv_r_simpl_m; only 1: now apply not_0_IZR).	0.362130880356	86
Coq.Reals.Rlimit.eps4	40
Coq.Reals.Rlimit.Rlt_eps2_eps	40	5.0	search with cache (only 1: intros; only 1: lra).	0.22056388855	53
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.122231006622	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	2.3.0	search with cache (only 1: unfold limit1_in; only 1: intros; only 1: firstorder  (subst; auto)).	0.688460111618	99
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	1.2.11.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	4.85172319412	3100
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.162481069565	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	5.1.0.0	search with cache (only 1: intros; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.154583930969	10
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.18.1.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	30.9462559223	17262
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	27.7.11	search with cache (only 1: intros a; only 1: unfold Rsqr; only 1: apply sqrt_sqrt).	8.45750188828	9924
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	12.2.0	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	1.81448078156	379
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: assumption; only 1: assumption; only 1: assumption; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	0.39497089386	93
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	1.0.1.4	search with cache (only 1: intro p; only 1: induction 1; only 1: reflexivity; only 1: reflexivity).	0.264326810837	37
Coq.Reals.Cauchy_prod.sum_plus	40	1.2.1.0.0.1.1	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.00230097771	207
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.1.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.238387107849	40
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40	1.12.1	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: trivial using Nat2Z.is_nonneg).	1.40307211876	952
Coq.Reals.PartSum.tech5	40	0.2	search with cache (only 1: intros; only 1: reflexivity).	0.130698919296	4
Coq.Reals.PartSum.tech6	40	1.11.1	search with cache (only 1: intros P H0 HS; only 1: fix ind_0_1_SS 1; only 1: trivial using Nat2Z.is_nonneg).	2.01130604744	1071
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	1.0.1.2.0.0	search with cache (only 1: unfold Un_cv; only 1: unfold R_dist; only 1: intros x n; only 1: unfold Rminus; only 1: intros Un X; only 1: assumption).	0.48027586937	62
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	4.2.1.5.1.2.1.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: auto).	26.643255949	17850
Coq.Reals.PartSum.Rabs_triang_gen	40	2.4.0.3.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	20.4888060093	9749
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	10.7.5.2.5	search with cache (only 1: intros n; only 1: intros x; only 1: intros; only 1: red; only 1: now destruct n).	22.2216608524	14944
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	10.0	search with cache (only 1: intros; only 1: firstorder).	11.4434919357	166
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.11	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.239979028702	105
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.13	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	12.5987379551	7317
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40	1	search with cache (only 1: trivial).	0.087385892868	2
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	3	search with cache (only 1: trivial).	0.0899019241333	4
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.0.1.0	search with cache (only 1: induction 1; only 1: now rewrite Nat.mul_1_l; only 1: simpl; only 1: trivial using Nat.le_add_r).	0.106877088547	13
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	9	search with cache (only 1: apply CReal_plus_0_l).	0.111608982086	14
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	1	search with cache (only 1: auto with *).	0.094869852066	2
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40	0.0.2.1.0.0.2.1.1.26.1	search with cache (only 1: intros; only 1: simpl; only 1: split; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate; only 1: intros [n nmaj]; only 1: simpl in nmaj; only 1: ring_simplify in nmaj; only 1: discriminate).	14.6416151524	13312
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.4.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.129023075104	9
Coq.Reals.Rtrigo_reg.derivable_cos	40
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	1	search with cache (only 1: auto).	0.0695881843567	2
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	1	search with cache (only 1: constructor).	0.0681579113007	2
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.5.1	search with cache (only 1: intros; only 1: unfold assert_false, create; only 1: auto).	0.123911142349	18
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0.0.0	search with cache (only 1: unfold create; only 1: intros; only 1: auto).	0.0792660713196	3
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	12.0	search with cache (only 1: intros; only 1: intuition_in).	1.14741897583	315
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	5.0	search with cache (only 1: intros x y z; only 1: now rewrite ?Pos.square_xO).	0.350574016571	7
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	6.0	search with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).	0.10041809082	8
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	10.3.18.0	search with cache (only 1: intros; only 1: red; only 1: intuition_in; only 1: L.MX.order).	23.3952121735	7601
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	2.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intros; only 1: intuition_in).	0.0916900634766	5
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	2.0.0	search with cache (only 1: unfold lt_tree in *; only 1: intros; only 1: intuition_in).	0.0909340381622	5
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	2.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intros; only 1: intuition_in).	0.0910530090332	5
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	2.0.0	search with cache (only 1: unfold gt_tree in *; only 1: intros; only 1: intuition_in).	0.0906121730804	5
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	5.1.21.1	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: order).	13.9906718731	13156
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.6.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0997610092163	10
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	17.6.2	search with cache (only 1: intros x y z; only 1: intros A C h1 h2; only 1: order).	9.61746001244	8713
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	1	search with cache (only 1: constructor).	0.0772759914398	2
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	6	search with cache (only 1: now rewrite ?Pos.square_xO).	0.082869052887	7
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	3.4.1	search with cache (only 1: destruct m as [| r x e l h]; only 1: now rewrite ?Pos.square_xO; only 1: now rewrite ?Pos.square_xO).	0.338155984879	127
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	3.0.1.8.0.0	search with cache (only 1: intros m x; only 1: functional induction mem x m; only 1: now rewrite ?Pos.square_xO; only 1: auto; only 1: auto; only 1: auto).	4.25968694687	1492
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40	1.0.15	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	9.20627093315	6189
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.1.0.8.9.1.0.0.1.3.0	search with cache (only 1: intros; only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intro; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	18.7211928368	18516
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.2.2.3	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: intro; only 1: auto with ordered_type; only 1: intro; only 1: auto with ordered_type).	1.43589115143	506
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.8.1.0.4.1.6	search with cache (only 1: intros A C h1 h2; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: intuition; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: trivial).	7.7549431324	4881
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	1.7.6	search with cache (only 1: simpl; only 1: inversion 1; only 1: reflexivity).	5.99568915367	1929
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	2.1.2.1.2.1.1	search with cache (only 1: induction 1; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	1.93911504745	927
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	4.4.0.2.0.3.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	14.7371070385	3311
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.192931890488	9
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	0	search with cache (only 1: intuition).	0.105304002762	1
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	0	search with cache (only 1: intuition).	0.106667995453	1
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	2	search with cache (only 1: intuition).	0.120829105377	12
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	1	search with cache (only 1: intuition).	0.106078863144	2
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	10	search with cache (only 1: intuition).	1.38203191757	32
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	0	search with cache (only 1: intuition).	0.114145994186	1
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	0	search with cache (only 1: intuition).	0.285738945007	1
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40	4.18.3.5	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: unfold eqb; only 1: fix even_spec 1; only 1: auto).	19.7062540054	15874
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	5.2.1.12	search with cache (only 1: split; only 1: now rewrite ?BinPos.Pos.square_xO; only 1: eauto; only 1: eauto).	1.00474786758	445
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	16.2.0	search with cache (only 1: unfold Equal; only 1: intros x y z; only 1: firstorder).	5.98321008682	2736
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	17.2.0	search with cache (only 1: unfold Equal; only 1: intros x y z; only 1: firstorder).	6.75052404404	3441
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	3.0	search with cache (only 1: intros x y z; only 1: now rewrite ?BinPos.Pos.square_xO).	0.0971429347992	5
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	0.0	search with cache (only 1: red; only 1: auto).	0.0922379493713	2
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	16.0	search with cache (only 1: red; only 1: firstorder).	5.28501296043	2806
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.1.12.2.7	search with cache (only 1: intros a b; only 1: red; only 1: intros p1 p2 H1; only 1: intros x y z; only 1: eauto with set).	14.3489208221	13200
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40
Coq.FSets.FSetPositive.PositiveSet.In_1	40	9.1	search with cache (only 1: intros x y z; only 1: congruence).	0.332175016403	99
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.0	search with cache (only 1: constructor; only 1: trivial; only 1: trivial).	0.0861539840698	3
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	3.1	search with cache (only 1: intros x y z; only 1: now rewrite ?Pos.square_xO).	0.180423974991	47
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	13.0	search with cache (only 1: intros x y z; only 1: firstorder).	2.37471985817	895
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.0.2.1	search with cache (only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.095388174057	7
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0781080722809	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: trivial; only 1: reflexivity).	0.0945298671722	4
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4	search with cache (only 1: now rewrite ?Pos.square_xO).	0.0768702030182	5
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	2.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: now rewrite ?Pos.square_xO).	0.10111117363	5
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	3.0	search with cache (only 1: intros x y z; only 1: now rewrite ?Pos.square_xO).	0.0905249118805	5
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	2.2.2.7.1.12	search with cache (only 1: intros n m p; only 1: intros; only 1: destruct p; only 1: now destruct n; only 1: now destruct n; only 1: now destruct n).	3.68319201469	3262
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	3.3.2.5	search with cache (only 1: intros n m; only 1: split; only 1: now destruct n; only 1: now destruct n).	1.94475197792	1110
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	1.0.0.1.5	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: now split; only 1: easy').	0.722274065018	188
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40	25.24.24.7	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	5.80034399033	13826
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.4	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.118703126907	15
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	9.9.0.5	search with cache (only 1: induction x; only 1: constructor; only 1: constructor; only 1: constructor).	1.44302988052	1276
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	1.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.103177070618	6
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.10302400589	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.2.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.104065179825	7
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	2.0.0.0.2.0.2.2.20	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	9.61720514297	9290
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	5.0.2	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	0.231594085693	59
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.105937004089	3
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	4.28.1	search with cache (only 1: intros x y z; only 1: rewrite remove_spec; only 1: intuition auto; BinNat.N.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	7.45384097099	9285
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.1.0	search with cache (only 1: unfold singleton; only 1: intros x y z; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.12485909462	7
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	6.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: auto).	0.184211015701	24
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.114802122116	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.18.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	2.01999592781	1855
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.113599061966	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.2.5.4	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.448359966278	253
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.113608837128	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.657898187637	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.1.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.107366085052	5
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.20.3	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	19.7797260284	10026
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.0.0.2.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial).	0.117380142212	10
Coq.FSets.FMapPositive.PositiveMap.gempty	40
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	1.0.1.0.1.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.120117902756	10
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	1.1.1.6	search with cache (only 1: destruct i; only 1: reflexivity; only 1: auto; only 1: auto).	0.274322986603	109
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	0.137924194336	8
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	13	search with cache (only 1: congruence).	0.375686883926	60
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.0907068252563	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	1.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0952558517456	3
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	2.0.0.0.1.9.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: clear H; only 1: auto; only 1: destruct 1; only 1: <Coq.Strings.String.t_eqb>).	5.48794603348	2020
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	4	search with cache (only 1: apply eq_iff_eq_true).	0.637435913086	45
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	4.1.10	search with cache (only 1: firstorder; only 1: apply (MapsTo_1 H H0); only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	1.99028491974	1056
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	0.2	search with cache (only 1: intros; only 1: intuition).	0.104403972626	4
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.101368188858	12
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	7.8.0	search with cache (only 1: unfold In; only 1: firstorder; only 1: apply (empty_1 H)).	3.1379070282	1529
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	0.1	search with cache (only 1: intros; only 1: intuition).	0.117471933365	12
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.2.14	search with cache (only 1: firstorder; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	3.05859899521	2096
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	6.0	search with cache (only 1: intros; only 1: firstorder).	0.0966861248016	8
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	1.1.3.2.0.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply remove_3; only 1: auto with map).	1.43614506721	608
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.1.2.0.0.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: destruct (eq_dec x y); only 1: now intuition; only 1: now intuition).	0.971968173981	206
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2.0	search with cache (only 1: intros x y z; only 1: auto).	0.0991909503937	4
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.2.0.0	search with cache (only 1: red; only 1: intros x y z; only 1: intros; only 1: auto).	0.113797187805	8
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	3.2.0	search with cache (only 1: red; only 1: intros; only 1: congruence).	1.13665795326	35
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	1.1	search with cache (only 1: intros; only 1: auto).	0.105540990829	4
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	12.1	search with cache (only 1: intros; only 1: firstorder).	2.51765680313	1015
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	9.1	search with cache (only 1: intros; only 1: firstorder).	2.02669000626	221
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40	10	search with cache (only 1: firstorder).	3.15184402466	178
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	1.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: auto).	0.749484062195	186
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	16	search with cache (only 1: easy).	0.151028871536	108
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	1.1.2.0.2.1.0.0	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros; only 1: intro abs; only 1: inversion abs; only 1: intros p l inlist; only 1: intuition).	1.50477290154	1070
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.3	search with cache (only 1: intros; only 1: eauto).	0.0263700485229	5
Coq.FSets.FMapWeakList.Raw.elements_2	40	1	search with cache (only 1: auto).	0.0233290195465	2
Coq.FSets.FMapWeakList.Raw.elements_3w	40	1	search with cache (only 1: auto).	0.0196580886841	2
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	9	search with cache (only 1: easy).	0.0443830490112	10
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	4.0	search with cache (only 1: intros m; only 1: auto).	0.0232529640198	6
Coq.FSets.FMapWeakList.Make.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0270168781281	3
Coq.FSets.FMapWeakList.Make.elements_3w	40	1.5.0	search with cache (only 1: intros m; only 1: induction m; only 1: auto).	0.0377578735352	9
Coq.FSets.FMapWeakList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0211918354034	1
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	2.3	search with cache (only 1: intros; only 1: now rewrite ?BinPos.Pos.square_xO).	0.0973081588745	7
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	2.3.1	search with cache (only 1: unfold Subset; only 1: intros; only 1: intuition).	0.10139298439	9
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	17.1	search with cache (only 1: intros; only 1: firstorder).	1.87700796127	433
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	0.12	search with cache (only 1: unfold Empty; only 1: firstorder).	2.75763106346	162
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	9.0.3.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: Dec.fsetdec; only 1: intuition).	3.05971097946	806
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.208353042603	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	23.0.10	search with cache (only 1: intros; only 1: apply mem_1; only 1: auto with set).	1.78206110001	1514
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.128793001175	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0.1	search with cache (only 1: apply mem_1; only 1: Dec.fsetdec).	0.129099845886	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.248359918594	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.173275947571	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.272700786591	17
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	8	search with cache (only 1: auto with set).	0.0983190536499	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40	0.0.1.0.0.1.0.3.0.0	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_iff s s' x); only 1: destruct (mem x s); only 1: intuition; only 1: destruct (mem x s'); only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition; only 1: destruct (mem x (union s s')); only 1: intuition; only 1: intuition).	33.8405349255	5244
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.129709005356	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with fset).	0.111182928085	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	2	search with cache (only 1: auto with set).	0.0950741767883	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	1.5.0.2.5.0.3.13	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: reflexivity; only 1: rewrite (equal_2 H); only 1: apply equal_1; only 1: Dec.fsetdec).	3.80182409286	1975
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	4.0.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: now rewrite ?BinPos.Pos.square_xO).	0.138054847717	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	2.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.106709957123	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	0	search with cache (only 1: auto with set).	0.0917851924896	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	3.15.11	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: intuition).	1.16644501686	779
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.0967488288879	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0937390327454	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.090747833252	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	4.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.138783216476	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	2.3	search with cache (only 1: apply mem_1; only 1: auto with set).	0.100230932236	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.1.4	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	2.0087389946	314
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	0.12	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.30837392807	120
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	1.8	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.291882038116	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	2	search with cache (only 1: auto with set).	0.109194993973	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0910158157349	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	1	search with cache (only 1: auto with set).	0.109299898148	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.089959859848	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	0	search with cache (only 1: auto with set).	0.0900781154633	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0892670154572	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	1	search with cache (only 1: auto with set).	0.102290868759	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0887660980225	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.104130983353	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0.7	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.223881959915	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.092677116394	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0911059379578	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0967469215393	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.088488817215	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.109786987305	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0892260074615	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0902500152588	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	1.13	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.575960159302	162
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0882930755615	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	4	search with cache (only 1: auto with set).	0.0927140712738	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.103245973587	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0881810188293	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	17	search with cache (only 1: auto with set).	0.402063131332	181
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	3	search with cache (only 1: auto with set).	0.108438968658	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.088593006134	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0881080627441	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0934529304504	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.4.0.0.0.2.12	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto with set; only 1: auto with set).	1.92895793915	1018
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.0.0.0.0.13.0	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.12077498436	2198
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	9	search with cache (only 1: auto with *).	0.121173858643	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.2.0.1.4	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.894520998001	457
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.2.0.1.9	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	1.13406586647	723
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	0.2.3	search with cache (only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: auto with set fset).	0.123233795166	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0	search with cache (only 1: solve_proper).	0.100832939148	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0915238857269	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40	0.0.1.2.0.3.0.0.4.0.0.4.6	search with cache (only 1: repeat red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	34.1915659904	19351
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.15.2.6.15.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition; only 1: auto).	32.8821558952	19868
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.1	search with cache (only 1: unfold compat_bool, Proper, respectful; only 1: intros; only 1: f_equal; only 1: auto).	0.104976177216	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	0.0729818344116	14
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.5.1	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0239200592041	10
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	search with cache (only 1: intros; only 1: auto with ordered_type).	0.0500569343567	22
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	1.0.0.1.0.0.1.0.0.0.1.1	search with cache (only 1: intros s x y; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	1.76303005219	1583
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	1.0.1.4.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.086462020874	84
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0357789993286	17
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: firstorder; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0463709831238	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.6.0	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0245339870453	10
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0423579216003	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.1.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0505921840668	5
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.024227142334	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0465989112854	25
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0239100456238	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0252499580383	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	8	search with cache (only 1: decide equality).	0.0309498310089	18
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	0.4.6.8.0	search with cache (only 1: intros; only 1: intros s s'; only 1: intuition; only 1: destruct 1; only 1: auto with ordered_type).	0.935574054718	1413
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.459206819534	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	1.0.2.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: intuition; only 1: firstorder).	0.335999011993	10
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	6.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: destr_bool).	0.179868936539	115
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	1.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0329320430756	7
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	14	search with cache (only 1: solve_proper).	0.639662027359	304
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	17.5	search with cache (only 1: compute; only 1: intuition).	1.37893795967	1469
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.3.4.1	search with cache (only 1: firstorder; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.628827095032	203
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0155990123749	1
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	2	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0199658870697	3
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	7	search with cache (only 1: fsetdec).	0.211991071701	29
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0961291790009	1
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	2.1	search with cache (only 1: red; only 1: eauto).	0.0324020385742	11
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.040885925293	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0286629199982	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0230851173401	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	11	search with cache (only 1: fsetdec).	0.115767002106	81
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	7	search with cache (only 1: fsetdec).	0.0596871376038	19
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	12	search with cache (only 1: fsetdec).	0.259202957153	81
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	9	search with cache (only 1: fsetdec).	0.0584638118744	24
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	4	search with cache (only 1: auto).	0.0159530639648	5
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	15.2	search with cache (only 1: red; only 1: firstorder).	0.750180006027	250
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	2	search with cache (only 1: fsetdec).	0.124048948288	3
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0308458805084	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	3	search with cache (only 1: fsetdec).	0.149379968643	46
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.168854951859	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	2.4	search with cache (only 1: intuition; only 1: fsetdec).	0.385505914688	114
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.111082077026	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	1	search with cache (only 1: fsetdec).	0.14090681076	2
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	1.0.0.1.0	search with cache (only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: fsetdec).	0.212486028671	42
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0.1	search with cache (only 1: red; only 1: fsetdec).	0.121864080429	3
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.241749048233	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	2	search with cache (only 1: fsetdec).	0.147596120834	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	6	search with cache (only 1: fsetdec).	0.0571689605713	7
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	4	search with cache (only 1: fsetdec).	0.155216932297	5
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.810852050781	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	1	search with cache (only 1: fsetdec).	0.173402786255	2
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.956831932068	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	1	search with cache (only 1: fsetdec).	0.181206941605	2
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	3	search with cache (only 1: fsetdec).	1.19127988815	4
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	1	search with cache (only 1: fsetdec).	0.208201169968	2
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	12	search with cache (only 1: fsetdec).	0.0567378997803	46
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0245258808136	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0445518493652	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0407068729401	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0374841690063	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.173142910004	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	1.1956808567	11
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	17	search with cache (only 1: fsetdec).	1.31009101868	212
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	2	search with cache (only 1: fsetdec).	0.149252891541	3
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	9	search with cache (only 1: fsetdec).	0.0587430000305	10
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0605809688568	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	1	search with cache (only 1: fsetdec).	0.0627760887146	2
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	2	search with cache (only 1: fsetdec).	0.0845410823822	3
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	1	search with cache (only 1: fsetdec).	0.419539928436	2
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.186866998672	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	3	search with cache (only 1: fsetdec).	0.156352996826	4
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	2	search with cache (only 1: fsetdec).	0.10740685463	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	2	search with cache (only 1: fsetdec).	0.0523009300232	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	2	search with cache (only 1: fsetdec).	0.0520260334015	3
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0252330303192	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.025083065033	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0404870510101	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0488150119781	2
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0444209575653	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0274620056152	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0702328681946	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	1	search with cache (only 1: fsetdec).	0.066123008728	2
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	2	search with cache (only 1: fsetdec).	0.14742398262	3
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	2	search with cache (only 1: fsetdec).	0.163535118103	3
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	4.15	search with cache (only 1: red; only 1: fsetdec).	0.435026884079	201
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	5.15	search with cache (only 1: red; only 1: fsetdec).	0.639085054398	235
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.26	search with cache (only 1: expAdd; only 1: fsetdec).	1.20313692093	498
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.274099111557	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	1.8	search with cache (only 1: expAdd; only 1: fsetdec).	0.346536159515	22
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	2.2.7.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: firstorder  (subst; auto); only 1: auto).	1.61350512505	960
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.4.0.2.2	search with cache (only 1: intros; only 1: rewrite M.fold_1; only 1: auto; only 1: intuition; only 1: auto).	0.346448898315	197
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40	5.19.0.3	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	8.96942901611	3574
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.0.4	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.151928186417	64
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.1	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0214760303497	4
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	3.0.7.1.1.1.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	2.29554104805	3618
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	28.17.2	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	21.8796339035	22242
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	2	search with cache (only 1: intuition).	0.187452793121	17
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	2.1.9.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto; only 1: intuition).	2.64797687531	828
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	7	search with cache (only 1: auto with set fset).	0.198835849762	112
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0252339839935	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0237040519714	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	1.0	search with cache (only 1: intros; only 1: constructor).	0.0903949737549	3
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.1.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.238587141037	4
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	5	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0879189968109	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.163717031479	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.338125944138	19
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.486129999161	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	4.1	search with cache (only 1: intros; only 1: intuition).	0.0995728969574	7
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.134130954742	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	3	search with cache (only 1: fsetdec).	0.236989021301	31
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.377572059631	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.716552972794	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	3	search with cache (only 1: fsetdec).	0.290862798691	34
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.885392189026	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	5.10.0	search with cache (only 1: unfold Subset; only 1: intros a b; only 1: intuition).	2.53806090355	1251
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.328547954559	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.137534856796	1
Coq.FSets.FMapList.Raw.empty_1	40	5.0.1.0.0.7	search with cache (only 1: intro; only 1: intros; only 1: red; only 1: compute; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv).	5.99240112305	382
Coq.FSets.FMapList.Raw.empty_sorted	40	1	search with cache (only 1: constructor).	0.0164148807526	2
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	2.1.6.1.1.0.0.2	search with cache (only 1: unfold Empty, PX.MapsTo; only 1: intros m; only 1: case m; only 1: intros a e; only 1: intuition; only 1: invlist InA; only 1: intros (k, e) l inlist; only 1: intuition).	14.1373028755	2247
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.0182209014893	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.0183100700378	1
Coq.FSets.FMapList.Raw.elements_3	40	0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: eauto with ordered_type).	0.0250558853149	3
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	3.4.1.0.0.1.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute; only 1: auto).	2.41734313965	2120
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40	0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.0.0.1	search with cache (only 1: intros m x f; only 1: induction m; only 1: simpl; only 1: intros (e, abs); only 1: inversion abs; only 1: simpl; only 1: destruct a as (x', e); only 1: intros hyp; only 1: inversion hyp; only 1: clear hyp; only 1: inversion H; only 1: subst; only 1: rename x0 into e'; only 1: exists e; only 1: constructor; only 1: unfold eqke in *; only 1: simpl in *; only 1: intuition; only 1: subst; only 1: rename x0 into e'; only 1: destruct IHm as (e'', hyp); only 1: exists e'; only 1: unfold MapsTo in *; only 1: auto; only 1: exists e''; only 1: unfold MapsTo in *; only 1: auto).	16.8034911156	15916
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.1.0.5.0.4.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	1.88416409492	1830
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.1.2.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e'); only 1: simpl; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	0.675952911377	347
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.2.2.4.0	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: eauto with *; only 1: eauto with *; only 1: eauto with *).	0.459728002548	402
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	12.0.7.3.10	search with cache (only 1: intros m; only 1: unfold Raw.PX.MapsTo; only 1: unfold Raw.PX.eqke; only 1: intuition; only 1: inversion_clear H).	6.6333630085	2099
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.0232570171356	1
Coq.FSets.FMapList.Make.elements_2	40	1.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0253667831421	3
Coq.FSets.FMapList.Make.elements_3	40	0.2.0	search with cache (only 1: intros; only 1: case m; only 1: auto).	0.030198097229	5
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	0	search with cache (only 1: auto).	0.0232779979706	1
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	4.1.2	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: destr_bool).	0.0634450912476	23
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	11.2	search with cache (only 1: destruct 1; only 1: auto).	0.342234134674	484
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.48833084106	691
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_invol	40	0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.608669996262	767
Coq.Numbers.DecimalFacts.unorm_invol	40
Coq.Numbers.DecimalFacts.norm_invol	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: trivial).	0.0957889556885	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto).	0.0944120883942	2
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	5.34.17	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	38.5615589619	37744
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	2	search with cache (only 1: trivial).	0.105463981628	3
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	3.2.0.0	search with cache (only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: reflexivity).	0.101002931595	9
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	26.8.4.15.2	search with cache (only 1: apply Nbit_faithful; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Unsigned.of_to).	28.6343100071	22381
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	12	search with cache (only 1: now induction d).	0.629229068756	46
Coq.Numbers.DecimalN.Unsigned.of_inj	40
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.108586788177	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	14.15.2.0	search with cache (only 1: intros; only 1: unfold Reflexive, Z.eq; only 1: destr_bool; only 1: now nzsimpl).	2.01907610893	1647
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.454849004745	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	11.3	search with cache (only 1: unfold Reflexive, Z.eq; only 1: now nzsimpl).	0.585330963135	152
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	10.28.4	search with cache (only 1: unfold Reflexive, Z.eq; only 1: destr_bool; only 1: now nzsimpl').	5.61150097847	2743
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	0.0.2	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	0.401204824448	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	8.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: now symmetry).	0.153651952744	38
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	16.15.3.1	search with cache (only 1: intros; only 1: unfold Z.eq; only 1: destr_bool; only 1: now nzsimpl).	4.093968153	2206
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	4.12.0.0.1	search with cache (only 1: intros; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: do 2 rewrite add_succ_l; only 1: order).	1.14245486259	801
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.15.2.0	search with cache (only 1: intros; only 1: unfold Z.add, Z.eq; only 1: destr_bool; only 1: now nzsimpl).	1.52587294579	491
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.1.1.1.0	search with cache (only 1: intro n; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intros; only 1: simpl; only 1: now nzsimpl).	0.71365904808	8
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	4.15.2.1	search with cache (only 1: intros; only 1: unfold Z.add, Z.eq; only 1: destr_bool; only 1: now nzsimpl).	5.16335916519	1016
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40	6.3.0	search with cache (only 1: intros; only 1: unfold Z.add, Z.eq; only 1: apply lt_eq_cases).	0.493079900742	85
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.8.0	search with cache (only 1: intros; only 1: apply BinNat.N.le_ngt; only 1: now nzsimpl).	0.464776992798	44
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.2.0.0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0525431632996	16
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.529386997223	32
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.613508939743	33
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.1.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0126700401306	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	0.0.1.2.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	0.0671510696411	16
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	2.0.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.15938782692	33
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.1.2.0.1.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace P 0 with -1 in H2; only 1: order; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	1.47892308235	723
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	2.0.0.0.0.0.0.8.8.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: intuition; only 1: reflexivity).	14.1746890545	15064
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	3.1.1.2.3.6.5	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: destruct (le_gt_cases 0 b); only 1: order; only 1: order_pos).	6.33692884445	3791
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	12.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.362660884857	206
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	3.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.034040927887	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0393879413605	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0124020576477	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0196189880371	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0113639831543	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	2.1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.015191078186	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0112981796265	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0125749111176	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.0566411018372	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0139298439026	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0141439437866	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.15.2	search with cache (only 1: intros; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	2.7961359024	3087
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.5.3	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.253864049911	135
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	3.2.5.3.2.5.2.7.18.6.3	search with cache (only 1: intros; only 1: unfold lnot; only 1: rewrite <- (opp_involutive a)  at 2; only 1: rewrite opp_lt_mono, opp_involutive; only 1: split; only 1: rewrite <- lt_succ_r, succ_pred; only 1: nzsimpl; only 1: trivial; only 1: rewrite <- lt_succ_r, succ_pred; only 1: nzsimpl; only 1: trivial).	15.4352588654	10900
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	0.4.2	search with cache (only 1: intros; only 1: unfold lcm; only 1: trivial using gcd_nonneg, abs_nonneg).	0.015438079834	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.6.3	search with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite abs_0_iff; only 1: now nzsimpl).	0.273262023926	132
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	1.1.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0266931056976	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.2.0.1.1.1.3.0.8.1	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: auto; only 1: intros; only 1: split; only 1: split; only 1: trivial using divide_1_l, le_0_1; only 1: trivial; only 1: destruct 1; only 1: trivial).	0.843038082123	1463
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0171229839325	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.0.2	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial).	0.017657995224	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.1.1.0.0.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: trivial).	0.021950006485	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?pred_le_mono; only 1: now apply add_le_mono_r).	0.61288189888	316
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	0.3.0.0.1.0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	1.42667484283	1415
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.0.1.1.3.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: order; only 1: now apply mul_le_mono_nonpos_r).	0.504642009735	374
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.7.1.6.0.0	search with cache (only 1: intro n; only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: assumption).	0.76353597641	1058
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.0759990215302	54
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.1.2	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order').	0.022794008255	12
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	0.0.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.0360720157623	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	0.0.0.1.0.1.1.4	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply abs_eq; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: auto with relations; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.269868850708	160
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40	0.0.3.4	search with cache (only 1: Bool.destr_bool; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	0.22425198555	65
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0226831436157	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	3.0.1.1	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0964930057526	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.3	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	0.0284340381622	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.318809986115	48
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	3.3.1.0.1.0.1.0.0.3	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: trivial; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	3.23948097229	3190
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.1.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0139191150665	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.1.1	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0142979621887	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0343208312988	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.0347609519958	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0147471427917	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0141630172729	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto; only 1: auto).	0.0133490562439	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b); only 1: nzsimpl; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: nzsimpl; only 1: apply Private_NZDiv.mod_le; only 1: auto; only 1: auto; only 1: auto).	0.067675113678	10
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	1.0.0.1.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: exfalso; only 1: revert Hab; only 1: rewrite (div_mod a b), <- EQ; only 1: nzsimpl; only 1: order; only 1: order).	3.9154419899	3428
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.1.0.1	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.263406038284	48
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.2.0.1.2.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.36279702187	990
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	0.3.5.7.0	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl').	0.582001924515	219
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.0.3.0	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.0222821235657	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	3.3.1	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.404634952545	51
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0392580032349	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply div_unique with 0; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0808939933777	32
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0137069225311	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0139191150665	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.4.2.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.274305105209	138
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.3.0.0.1.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto; only 1: auto; only 1: nzsimpl; only 1: auto).	0.174870014191	36
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	1.0.0.1.0.1.0.0.1.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: exfalso; only 1: revert Hab; only 1: rewrite (div_mod a b), <- EQ; only 1: nzsimpl; only 1: order; only 1: order).	3.05544900894	2783
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	1.3.0.1.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: rewrite add_cancel_l; only 1: intuition order).	0.607743024826	188
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	3.1.6.2.3.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: trivial).	2.63099098206	1487
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.1.1.3.9.4	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply mul_div_le; only 1: order; only 1: order).	3.23136401176	4191
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0292789936066	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0.0.0.1	search with cache (only 1: intros; only 1: intuition; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: auto; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	7.37215781212	4092
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.9.10.1	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: now apply H).	0.798760175705	497
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.0.7.1	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: now nzsimpl; only 1: now apply H; only 1: now apply H).	0.898524999619	349
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.2.0.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply mul_div_le; only 1: order).	0.559345006943	226
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	3	search with cache (only 1: Z.order).	0.0910789966583	21
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40	7.0	search with cache (only 1: intros; only 1: now intros ->).	0.123022079468	9
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	1.13	search with cache (only 1: destruct x; only 1: constructor).	0.297183990479	155
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	1.6	search with cache (only 1: destruct x; only 1: auto).	0.134788990021	15
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40	13.12	search with cache (only 1: fix even_spec 1; only 1: easy).	39.6845271587	4321
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.0.1	search with cache (only 1: intros; only 1: simpl; only 1: auto with arith).	0.128905057907	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	1.1	search with cache (only 1: destruct x; only 1: constructor).	0.121361017227	4
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	1.0.2.0	search with cache (only 1: intros n; only 1: intros; only 1: simpl; only 1: auto with arith).	0.22377204895	46
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	4.3.3.0.0.2	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	2.9495139122	1564
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	1.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.132061004639	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.5	search with cache (only 1: destruct x; only 1: constructor).	0.145591020584	13
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.119506120682	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	6.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: congruence).	0.184984922409	9
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	17.3.2	search with cache (only 1: simpl; only 1: intros a H; only 1: now intros ->).	7.14705300331	4218
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	24	search with cache (only 1: lia).	0.489289045334	298
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	1.5.2	search with cache (only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.612321853638	233
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0.1.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: split; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.119177103043	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.0.0.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: rewrite Zmod_small; only 1: auto; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.116455078125	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.0.0.0.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.14987206459	21
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.105674028397	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	1.0.0	search with cache (only 1: intros; only 1: unfold sub, to_Z; only 1: auto with zarith).	0.106163978577	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	0	search with cache (only 1: auto).	0.108221054077	1
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	1.7	search with cache (only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg).	0.132076978683	17
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.100079059601	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	2	search with cache (only 1: now Z.nzsimpl).	0.134010076523	3
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	7	search with cache (only 1: now rewrite ?Pos.square_xO).	0.122832775116	8
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: reflexivity).	0.102131128311	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	1	search with cache (only 1: reflexivity).	0.102354049683	2
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.117686986923	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	14	search with cache (only 1: apply sub_spec).	0.207188844681	96
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	3	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.106801986694	4
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.15.2	search with cache (only 1: symmetry; only 1: subst; only 1: lia).	2.69380021095	398
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with φ (y) - φ (z) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.137516975403	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	7.7.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: Z.bitwise; only 1: now Z.nzsimpl).	0.956418037415	395
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.0963349342346	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.0.0.0.29	search with cache (only 1: destruct a, b; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	2.98761200905	3347
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.120096921921	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.119256973267	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.3.0.3.0.1	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	0.755575895309	274
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	5.2.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.579107046127	109
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.0.0.10.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lor_spec, orb_comm; only 1: unfold bit; only 1: rewrite lsr0; only 1: auto).	1.38833880424	693
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	0.14	search with cache (only 1: intros A B f l; only 1: firstorder  (subst; auto)).	1.99692893028	380
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.126467943192	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	3.20.0.0	search with cache (only 1: intros; only 1: zify; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: trivial).	4.33167910576	2177
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	1.3.1.1	search with cache (only 1: constructor; only 1: constructor; only 1: congruence; only 1: congruence).	0.0253620147705	10
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	0.0.0.0.1.0.9.12	search with cache (only 1: transitivity 1; only 1: auto with zarith; only 1: unfold base; only 1: apply Zpower_gt_1; only 1: red; only 1: auto; only 1: unfold Z.lt; only 1: auto with zarith).	0.884689092636	605
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	1	search with cache (only 1: firstorder).	0.0265748500824	2
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	6	search with cache (only 1: tauto).	0.026095867157	7
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.1	search with cache (only 1: intro n; only 1: zify; only 1: reflexivity).	0.0509769916534	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0	search with cache (only 1: reflexivity).	0.132936000824	1
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0	search with cache (only 1: reflexivity).	0.109488964081	1
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.100440979004	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	9	search with cache (only 1: parity_binop).	0.0426242351532	10
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	3	search with cache (only 1: parity_binop).	0.0762369632721	16
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	0.5.3	search with cache (only 1: intro H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.0637509822845	90
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	3.0.0.2.0.4	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply lt_irrefl with 0; only 1: intros n H; only 1: now rewrite pred_succ).	0.274137020111	195
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	0.7.1.1.5.0.2.1.0	search with cache (only 1: cases ltac:(n); only 1: intros n m; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros; only 1: rewrite pred_succ; only 1: apply lt_le_incl; only 1: apply le_succ_l in H; only 1: order).	14.4595220089	14742
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.3.0.5.5.0.0	search with cache (only 1: cases ltac:(n); only 1: intros n H; only 1: now apply le_0_l; only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.737499952316	1075
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	0.7.0.1.2.0.3.2.7.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intros n m; only 1: apply le_0_l; only 1: intro n; only 1: intro m; only 1: rewrite pred_succ; only 1: intro H; only 1: apply le_succ_l in H; only 1: order).	7.941644907	11337
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	3.2.0.1.3.0.7.3	search with cache (only 1: intro; only 1: cases ltac:(m); only 1: intro H; only 1: apply le_succ_l in H; only 1: false_hyp ltac:(H) nlt_0_r; only 1: intro p; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	4.93294095993	9326
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.0.1.0.0.0.2.3	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: cases n; only 1: rewrite pred_0; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: now apply le_succ_l).	0.681010007858	463
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40	0.2.0.1.3.2.0.0.1.0.0.1.2.2	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: split; only 1: intro H; only 1: apply le_le_succ_r; only 1: apply le_0_l; only 1: intro H; only 1: apply le_succ_r in H; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros n m; only 1: rewrite pred_succ; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	3.02164292336	4957
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	2.1.3.2.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.54633307457	530
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.0.0.3.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: now apply H; only 1: nzsimpl; only 1: order').	0.350708007812	461
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	2.4.1	search with cache (only 1: intros; only 1: apply div_small; only 1: auto').	0.0499551296234	35
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	2.0.2.2	search with cache (only 1: intros; only 1: apply mod_small; only 1: intuition; only 1: auto').	0.047954082489	38
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	3.6.3.4.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order'; only 1: now nzsimpl').	0.277469158173	531
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.4.3.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: order'; only 1: now nzsimpl).	0.0839281082153	148
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0120229721069	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0119161605835	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	2.0.2.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: apply mul_comm).	0.0255200862885	17
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.1.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0342569351196	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.015878200531	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	1.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: rewrite lt_eq_cases in LE; only 1: destruct LE as [LT| EQ]; only 1: auto; only 1: exfalso; only 1: revert Hab; only 1: rewrite (div_mod a b), <- EQ; only 1: nzsimpl; only 1: order; only 1: order).	1.56033706665	1844
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.6.2	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.482111930847	276
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.1.1.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.140147924423	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	3.0.0.2	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.164721012115	43
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	0.0.1.3.0	search with cache (only 1: intros; only 1: apply div_le_lower_bound; only 1: auto'; only 1: auto'; only 1: auto').	0.0160121917725	9
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.1.0.5.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.205108880997	129
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.1.1.0.1.2.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	0.875971078873	470
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	6.2.6.3.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.284946918488	398
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	1.4.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: now apply H).	0.225285053253	217
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	1.1.5.2.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: now apply H; only 1: now apply H).	0.0596940517426	69
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40	0.1.0.0.0.0.0.1.6.4.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with (b * ((a / b) mod c) + a mod b); only 1: apply lt_le_trans with (b * ((a / b) mod c) + b); only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite <- mul_succ_r, <- mul_le_mono_pos_l, le_succ_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: auto'; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite add_assoc, add_cancel_r; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: auto').	1.6669781208	1955
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	1.0.2.0.1.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.866058111191	219
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.2.0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: auto').	0.120773077011	41
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.2.0.1.5.5.0.4.1	search with cache (only 1: split; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto).	5.10825800896	11775
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	1.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0324459075928	8
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	4.7	search with cache (only 1: compute in *; only 1: now rewrite recursion_0).	0.087916135788	71
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40	0.1.0.0.3.0.0.1.0.0.3	search with cache (only 1: intros; only 1: apply le_lt_trans with (m * p); only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: apply lt_eq_cases; only 1: auto with relations; only 1: apply -> mul_lt_mono_pos_l; only 1: auto; only 1: apply le_lt_trans with n; only 1: now apply le_0_l; only 1: auto).	1.50769782066	1842
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.8.9.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: intuition; only 1: reflexivity).	8.08588004112	8667
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.9.0.0.0.0.7.3.6.8.7	search with cache (only 1: intro n; only 1: induction n; only 1: intro n; only 1: simpl; only 1: induction n; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: destr_bool; only 1: now try order').	5.10578298569	9621
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.346518993378	139
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.1.0	search with cache (only 1: intros a0; only 1: intros n; only 1: apply testbit_even_succ, le_0_l).	0.0124189853668	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: apply le_0_l).	0.0371699333191	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	2.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0746738910675	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0827991962433	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	2.5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply eq_true_iff_eq; only 1: intuition).	0.043319940567	27
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	0.0242981910706	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40	3.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: firstorder).	0.0570130348206	16
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.1.4.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0267400741577	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	0.2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.0282080173492	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.4.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0241889953613	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	3.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: apply andb_comm).	0.0244290828705	7
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	1.4.1	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.059919834137	20
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	7.1.0.4.0	search with cache (only 1: intros n m; only 1: rewrite <- sqrt_lt_square; only 1: now nzsimpl; only 1: apply le_0_l; only 1: apply le_0_l).	1.00147008896	1009
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	0.0.0.5.4.2.1	search with cache (only 1: cases ltac:(n); only 1: intro n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n m; only 1: now nzsimpl).	1.96047902107	1079
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	3.2.0.0.0.1.2	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.820032119751	425
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	7.1.0.7.3.2.1	search with cache (only 1: intros n m; only 1: rewrite <- (add_0_l 0); only 1: induct n; only 1: apply lt_lt_add_r; only 1: intro p; only 1: intro H; only 1: apply lt_lt_add_r).	19.5258970261	7551
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.0.4.0.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.952486991882	256
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.3.2.2.6	search with cache (only 1: intro m; only 1: intro n; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	2.52982616425	878
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	1.1.0.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0289340019226	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.2.0.0.1.0.0.1.0.0.0.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	4.57617807388	2042
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.1.0.0.0.0.0.5.1.0.0.4.0.4.2	search with cache (only 1: intros; only 1: destruct (le_gt_cases a 0); only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: order; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H; only 1: apply pow_le_mono_l; only 1: intuition order).	21.9224979877	24008
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	3.6.0.3.7.8.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: now nzsimpl'; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	5.03204298019	6877
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	2.0.2.0.1.1.2.0.2.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: apply add_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?succ_le_mono; only 1: apply add_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: now rewrite <- ?succ_le_mono).	33.2095351219	13634
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: now rewrite <- ?add_le_mono_r).	4.81067585945	1115
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.1.0.1.0.0.0.1.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_r).	1.60726499557	1280
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	1.0.0.1.1.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_r; only 1: now apply mul_le_mono_r).	1.3300819397	648
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	0	search with cache (only 1: firstorder).	0.00576186180115	1
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	1.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0149710178375	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	1.3.0.1.3.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply le_0_l; only 1: intros; only 1: intuition; only 1: trivial using divide_1_l, le_0_1).	0.534046888351	158
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0158870220184	7
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	2.0.1.1.1	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: intuition).	0.170310020447	36
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.0.0.0.3.1	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l; only 1: trivial using divide_refl, le_0_l).	0.0357828140259	22
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40	0.5.0.0.2.2.0.3	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite <- add_0_r  at 1; only 1: now nzsimpl).	0.64816904068	706
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.1.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0812649726868	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	0.1.1.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0886850357056	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	1.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0491898059845	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0923020839691	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0976510047913	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.129432916641	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	4.2	search with cache (only 1: intros; only 1: now nzsimpl').	0.0862288475037	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	2	search with cache (only 1: order).	0.0380980968475	11
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0192749500275	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0213439464569	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0192489624023	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	2.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.021281003952	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	2	search with cache (only 1: order).	0.0221860408783	12
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	1	search with cache (only 1: order).	0.0173349380493	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	5.0.0.1	search with cache (only 1: intro n; only 1: intro p; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl).	0.0282402038574	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	3.1.5.0	search with cache (only 1: intros; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.190670013428	67
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.1	search with cache (only 1: intros; only 1: intuition order).	0.0155539512634	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	1	search with cache (only 1: intuition order).	0.015408039093	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.1.5.1.0	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: auto).	0.174299001694	98
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0348291397095	5
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0.1.0.0.0	search with cache (only 1: intro n; only 1: nzinduct m n; only 1: intuition order; only 1: intro m; only 1: intuition order).	0.0742650032043	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.015634059906	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.0.1.1.2	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: right; only 1: order).	0.0553450584412	34
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.105949878693	21
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.7.1	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: intuition order).	0.10421204567	91
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40	17.1	search with cache (only 1: intros; only 1: firstorder).	1.4942779541	4286
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1	search with cache (only 1: reflexivity).	0.0150740146637	2
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	1.7	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0605511665344	15
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.0.1.1.0.0.1	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: intros; only 1: trivial).	0.0136790275574	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0672888755798	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: intros; only 1: trivial).	0.0137431621552	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.3.0.0.0.3	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.066901922226	74
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: transitivity 1; only 1: apply lt_0_1; only 1: apply lt_1_2).	0.248003959656	9
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.582627058029	249
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	1.2.1.1.1	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add, Hm; only 1: now destruct (even n), (even m)).	0.110097885132	82
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	1.2.3.0.1.3	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: now destruct (even n), (even m)).	1.5315079689	1019
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	0.0.0.3.0.1	search with cache (only 1: intros; only 1: rewrite <- !negb_even; only 1: nzsimpl'; only 1: rewrite even_add; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.180785894394	16
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	1.1.0.1.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.581707954407	46
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	1.0.0.0.0.1	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.285663843155	12
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0282950401306	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.1	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0281219482422	4
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: now nzsimpl).	0.0709300041199	25
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0324940681458	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	2.1.2.8.8.0	search with cache (only 1: intros; only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: reflexivity; only 1: order').	1.91399097443	1566
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.1.0.3.3.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.16127204895	113
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	1.2	search with cache (only 1: intros; only 1: firstorder).	0.0115509033203	5
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.1.0.1	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace n == m with m == n by split; now intro; only 1: assumption).	0.226520061493	26
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0271508693695	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0149290561676	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	0.0.0.0.1.2	search with cache (only 1: intros; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.0183289051056	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	2.4	search with cache (only 1: intros; only 1: firstorder).	0.0116319656372	8
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0102400779724	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40	3.11.1	search with cache (only 1: repeat red; only 1: fix sqrtrem_spec 1; only 1: trivial).	6.47115898132	2729
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40	2.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.346288919449	195
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40	2.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.25560688972	792
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	2.12.1	search with cache (only 1: repeat red; only 1: fix sqrtrem_spec 1; only 1: trivial).	2.40272879601	1269
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	2.13	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.80233502388	527
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	15.18.0	search with cache (only 1: intros x y z; only 1: red; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	13.6504058838	13721
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	11.13.1	search with cache (only 1: unfold lt; only 1: intros a b; only 1: Nat.order).	9.43640494347	9052
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	4.0	search with cache (only 1: intros x y z; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0903949737549	6
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0774869918823	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	0.4	search with cache (only 1: intros n m H1 H2; only 1: Pos.Private_Tac.order).	0.145641803741	30
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	6.1	search with cache (only 1: intros; only 1: firstorder).	0.126205921173	20
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	5.1	search with cache (only 1: intros x y z; only 1: firstorder).	0.139437198639	28
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	1.14.6.1.0	search with cache (only 1: intros (x1, x2); only 1: intros x y z; only 1: firstorder; only 1: MO1.order; only 1: MO2.order).	15.8293628693	11842
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	1.12.9.6.0	search with cache (only 1: intros; only 1: intro; only 1: firstorder; only 1: MO1.order; only 1: MO2.order).	9.10227394104	9096
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	2.1.3.1.0	search with cache (only 1: induction x; only 1: trivial; only 1: trivial; only 1: simpl; only 1: eauto).	0.732985019684	248
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	1	search with cache (only 1: apply Pos.eq_dec).	0.0823159217834	2
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.4	search with cache (only 1: intros; only 1: firstorder).	0.0139980316162	8
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	5.1	search with cache (only 1: intros; only 1: now rewrite ?BinPos.Pos.square_xO).	0.107264041901	8
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	15.1	search with cache (only 1: intros x y z; only 1: firstorder).	2.4697740078	1419
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	7.23.3.3.10	search with cache (only 1: constructor; only 1: firstorder; only 1: firstorder; only 1: intro; only 1: apply Logic.eq_trans).	1.03313803673	3256
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40	6.0.0.1.0.0.6	search with cache (only 1: split; only 1: intro; only 1: intro; only 1: absurd (eq x x); only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: exact PeanoNat.Nat.lt_trans).	0.510201931	420
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	3	search with cache (only 1: order).	0.0344290733337	11
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0210161209106	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	1	search with cache (only 1: order).	0.0184018611908	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	1.0.0	search with cache (only 1: intro; only 1: intro; only 1: order).	0.0195739269257	4
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	1	search with cache (only 1: order).	0.0176301002502	2
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.0178370475769	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	1	search with cache (only 1: order).	0.0176770687103	2
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.0171928405762	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.0166261196136	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.0170831680298	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.0174551010132	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0175199508667	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0166308879852	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40	1.2.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.081689119339	7
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	14.3.10.2.9.5	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: firstorder; only 1: subst; only 1: firstorder).	6.24585604668	15623
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	6.0	search with cache (only 1: intros; only 1: firstorder).	0.0213429927826	8
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1.0	search with cache (only 1: intros; only 1: auto).	0.0176270008087	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0149931907654	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	7.0	search with cache (only 1: intros; only 1: firstorder).	0.0242409706116	9
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0207939147949	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.0154440402985	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0279178619385	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.025780916214	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.027193069458	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	1.1.1.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.320760011673	38
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0187978744507	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0230259895325	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.0186488628387	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	2.0.0.8.4.5	search with cache (only 1: inversion 1; only 1: invlist InA; only 1: destruct 1; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: auto with ordered_type).	6.99199295044	4195
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	1.1.3.2	search with cache (only 1: unfold eqk, eqke; only 1: inversion_clear 1; only 1: intuition; only 1: intuition).	0.905241966248	183
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.2.0.0.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: intro EQ; only 1: easy; only 1: easy).	0.0227241516113	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: firstorder).	0.0130770206451	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.3.0.0.0.0	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: compute; only 1: iorder).	0.0239179134369	9
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: red; only 1: order).	0.012423992157	10
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0147349834442	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1	search with cache (only 1: iorder).	0.0309200286865	20
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.9	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.30762386322	125
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0112550258636	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	1	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0202519893646	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0179879665375	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	search with cache (only 1: order).	0.0117988586426	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0117478370667	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	4	search with cache (only 1: order).	1.01128292084	5
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0269050598145	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	4.2	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0207340717316	8
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.0106830596924	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0114748477936	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	search with cache (only 1: order).	0.0118288993835	2
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	1	search with cache (only 1: order).	0.0114459991455	2
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	2	search with cache (only 1: order).	0.0129909515381	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0	search with cache (only 1: order).	0.0104639530182	1
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.0114450454712	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	1	search with cache (only 1: order).	0.0112068653107	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	1	search with cache (only 1: order).	0.0107998847961	2
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.0102560520172	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	2.2.2.0	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	0.0486769676208	23
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	4.2	search with cache (only 1: unfold lt; only 1: auto with *).	0.0156059265137	8
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0	search with cache (only 1: now apply compare_eq_iff).	0.00958180427551	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3	search with cache (only 1: now apply compare_eq_iff).	0.011638879776	4
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	4	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.115128993988	29
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	0.0.5.1	search with cache (only 1: symmetry; only 1: case leb_spec0; only 1: intuition; only 1: intuition).	0.18390417099	38
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.11.7	search with cache (only 1: intros x y z; only 1: destruct 1; only 1: auto).	0.936302900314	1648
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	2.6.16.2.5.3.2	search with cache (only 1: induction l; only 1: firstorder; only 1: induction 1; only 1: subst; only 1: constructor; only 1: firstorder; only 1: auto).	14.3384480476	42817
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	1	search with cache (only 1: eauto with *).	0.0343511104584	2
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	2	search with cache (only 1: eauto with *).	0.0196731090546	3
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	2	search with cache (only 1: firstorder).	0.007817029953	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: firstorder).	0.0060977935791	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: firstorder).	0.00675988197327	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0091540813446	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: firstorder).	0.00707316398621	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	2	search with cache (only 1: auto).	0.00724411010742	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: firstorder).	0.00675201416016	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: trivial).	0.00905299186707	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	10.10	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.420069932938	1097
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.16	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.236456871033	449
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	7.11.2	search with cache (only 1: firstorder; only 1: compute in *; only 1: invlist InA).	0.541625976562	832
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.20	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.387786865234	693
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.1.3.2	search with cache (only 1: intros E; only 1: invlist InA; only 1: now compute; only 1: tauto).	0.0405960083008	35
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	2.0.0.8.1	search with cache (only 1: intros E; only 1: invlist InA; only 1: induction 1; only 1: firstorder; only 1: tauto).	0.398890018463	490
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	3.1	search with cache (only 1: intros; only 1: firstorder).	0.0211470127106	6
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	1.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0181798934937	3
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0197610855103	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.0154430866241	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0304329395294	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	1.1.0.1.0.0	search with cache (only 1: split; only 1: split; only 1: eauto; only 1: split; only 1: eauto; only 1: eauto).	0.478546857834	15
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.3.0.0	search with cache (only 1: intuition; only 1: invlist InA; only 1: tauto; only 1: auto).	0.0403571128845	7
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	1.1.0.0.2	search with cache (only 1: unfold eqk, eqke; only 1: inversion_clear 1; only 1: induction 1; only 1: tauto; only 1: tauto).	0.376782894135	43
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	2.0.2	search with cache (only 1: unfold eq; only 1: intros x; only 1: decide equality).	0.0255610942841	7
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.1.0.0.0.1.0.0.0.0.1	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	0.742941856384	1539
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0183460712433	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0	search with cache (only 1: solve_max).	0.0203549861908	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0204508304596	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0	search with cache (only 1: solve_max).	0.0429470539093	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2.2.1	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0497281551361	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	1	search with cache (only 1: solve_max).	0.0604009628296	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0318551063538	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.2	search with cache (only 1: apply min_l; only 1: order).	0.0104110240936	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	1	search with cache (only 1: solve_min).	0.019327878952	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0231740474701	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.1.1.0.0.1.2.1.0.0.0.1.0.0.0.1.1.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min; only 1: solve_min).	7.77953219414	3721
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0203928947449	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0205979347229	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0207920074463	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	2.2.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0494930744171	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order).	0.0251109600067	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	1	search with cache (only 1: solve_min).	0.0911939144135	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0316009521484	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.0	search with cache (only 1: apply max_l; only 1: solve_min).	0.019012928009	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	1.2.0.0.1.0.0.1.0.1.2.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	2.6598379612	3126
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.2.1.0.2.0.1.0.1.3.0.1.0.1.0.0.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	13.6902561188	40736
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.010862827301	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.3	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0143609046936	7
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	9.7	search with cache (only 1: intros A C h1 h2; only 1: congruence).	10.0879020691	4696
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	1.0	search with cache (only 1: unfold eq; only 1: decide equality).	0.07581782341	32
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.7.1.25	search with cache (only 1: induction n; only 1: reflexivity; only 1: Z.bitwise; only 1: now rewrite <- ?Nat.succ_le_mono).	0.570312023163	1172
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.1.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0205390453339	6
Coq.ZArith.Znat.positive_N_Z	40	1	search with cache (only 1: auto).	0.0119171142578	2
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.0110518932343	1
Coq.ZArith.Znat.positive_nat_N	40	1.0.0.0.1.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0230088233948	10
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.0.0.0.0.0.1.0.1.0.14.4.1	search with cache (only 1: Nat.bitwise; only 1: f_equal; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	4.43554902077	5332
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	27	search with cache (only 1: now destruct n).	0.694352865219	980
Coq.ZArith.Znat.Zabs_nat_N	40	2.0.4.0.17	search with cache (only 1: destruct n; only 1: trivial; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.595938920975	844
Coq.ZArith.Znat.N2Z.id	40	0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0173602104187	6
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.1.0.1.0.1.0.0.5	search with cache (only 1: destruct n, m; only 1: easy'; only 1: simpl; only 1: now Z.nzsimpl; only 1: simpl; only 1: now Z.nzsimpl; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	22.394701004	8210
Coq.ZArith.Znat.N2Z.is_nonneg	40
Coq.ZArith.Znat.N2Z.inj_0	40	1	search with cache (only 1: trivial).	0.0110690593719	2
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0110549926758	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0238070487976	10
Coq.ZArith.Znat.N2Z.inj_le	40	1.0.4.1.0.3.5	search with cache (only 1: destruct n as [| p], m as [| q]; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: simpl; only 1: easy).	0.94016289711	564
Coq.ZArith.Znat.N2Z.inj_lt	40	4.4.4.4.11	search with cache (only 1: destruct n, m; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.43908190727	1470
Coq.ZArith.Znat.N2Z.inj_ge	40	4.8	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.110898017883	75
Coq.ZArith.Znat.N2Z.inj_gt	40	15.3	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite inj_compare).	0.416004896164	517
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40
Coq.ZArith.Znat.N2Z.inj_mul	40	9.1.2	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct m).	1.31050109863	415
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.2.1.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0200009346008	9
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.1.0.4.3.1.5	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.920348882675	731
Coq.ZArith.Znat.N2Z.inj_pred	40	8.8.2	search with cache (only 1: destruct n; only 1: now rewrite ?Pos.square_xO; only 1: now destruct p).	2.07114195824	824
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	1.1.1.1.21.2.0.14	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial).	4.48517608643	9348
Coq.ZArith.Znat.N2Z.inj_quot2	40	13.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.437824964523	553
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0310781002045	10
Coq.ZArith.Znat.Z2N.id	40	3.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: firstorder).	0.0270800590515	8
Coq.ZArith.Znat.Z2N.inj	40	2.1.0.2.0.0.0.0.0.0.3.0.0.1.7	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: congruence; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: now destruct 1; only 1: simpl; only 1: congruence; only 1: now destruct 1 || trivial).	38.9051911831	30250
Coq.ZArith.Znat.Z2N.inj_iff	40	6.1.1.1.0.5	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct 1 || trivial).	2.97092986107	1641
Coq.ZArith.Znat.Z2N.inj_0	40	0	search with cache (only 1: auto).	0.0107941627502	1
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0.2.2.0.0	search with cache (only 1: destruct n; only 1: constructor; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0242478847504	10
Coq.ZArith.Znat.Z2N.inj_neg	40	1	search with cache (only 1: reflexivity).	0.010418176651	2
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40
Coq.ZArith.Znat.Z2N.inj_succ	40	3.5.1.0.0.21	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now rewrite <- ?N.succ_le_mono).	2.73845982552	2041
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.1.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p; only 1: reflexivity).	0.0194861888885	6
Coq.ZArith.Znat.Z2N.inj_compare	40	4	search with cache (only 1: now destruct n, m).	0.0823540687561	52
Coq.ZArith.Znat.Z2N.inj_le	40	0.1.0.1.0.0.0.0.2.4	search with cache (only 1: destruct n, m; only 1: firstorder; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.72837209702	692
Coq.ZArith.Znat.Z2N.inj_lt	40	0.0.0.0.0.0.0.0.0.8.11.8	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, Z.le; only 1: destruct n as [| n| n], m as [| m| m]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	19.8947789669	17078
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.0.0.2.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: destruct p; only 1: constructor; only 1: trivial; only 1: trivial; only 1: trivial).	0.142287969589	83
Coq.ZArith.Znat.Z2N.inj_quot2	40	3.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0252330303192	11
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	1.0.0.0.1.0.1.1.1.12	search with cache (only 1: destruct a as [| a], n; only 1: trivial; only 1: trivial; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: easy; only 1: simpl; only 1: now destruct a).	4.71645188332	4940
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0258901119232	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.0.0.0.3	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: easy).	0.0287809371948	8
Coq.ZArith.Znat.Zabs2N.id_abs	40	15	search with cache (only 1: now destruct n).	3.09174990654	1160
Coq.ZArith.Znat.Zabs2N.id	40	7	search with cache (only 1: now destruct n).	0.0131161212921	8
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: reflexivity).	0.0107040405273	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0	search with cache (only 1: auto).	0.0111041069031	1
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0130729675293	2
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto).	0.0325870513916	16
Coq.ZArith.Znat.Zabs2N.inj_succ	40
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.1.0.0.1.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l; only 1: now destruct 1; only 1: now destruct 1; only 1: now destruct 1).	1.24361085892	510
Coq.ZArith.Znat.Zabs2N.inj_mul	40
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40
Coq.ZArith.Znat.Zabs2N.inj_compare	40
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.15.2	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	1.309030056	515
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.3.9	search with cache (only 1: unfold Z.lt, N.lt; only 1: intros; only 1: now rewrite Z2N.inj_compare).	0.146141052246	133
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2	search with cache (only 1: now destruct n, m).	0.0161628723145	3
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0150690078735	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	1.1	search with cache (only 1: simpl; only 1: firstorder).	0.110949993134	4
Coq.ZArith.Znat.Nat2Z.inj_succ	40	1.2.2.11	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.173331022263	263
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	7	search with cache (only 1: now destruct n).	0.0156350135803	8
Coq.ZArith.Znat.Nat2Z.id	40
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.1.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	0.014997959137	7
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	6.25	search with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	1.10999011993	964
Coq.ZArith.Znat.Nat2Z.inj_lt	40	12.15	search with cache (only 1: unfold Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	1.05981898308	1138
Coq.ZArith.Znat.Nat2Z.inj_ge	40	6.13	search with cache (only 1: unfold Z.le, Z.ge; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_ge_iff).	0.625365018845	267
Coq.ZArith.Znat.Nat2Z.inj_gt	40	8.3	search with cache (only 1: unfold Z.lt, Z.gt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_gt_iff).	0.128809928894	110
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	1.0.0.8.0.0.16.14.2.9	search with cache (only 1: destruct n; only 1: firstorder; only 1: simpl in *; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1).	36.1650509834	54124
Coq.ZArith.Znat.Z2Nat.inj	40	2.0.11.1	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: f_equal; only 1: trivial).	0.912168979645	342
Coq.ZArith.Znat.Z2Nat.inj_iff	40
Coq.ZArith.Znat.Z2Nat.inj_0	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.012323141098	3
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0.1	search with cache (only 1: Nat.bitwise; only 1: trivial).	0.0190711021423	3
Coq.ZArith.Znat.Z2Nat.inj_neg	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: trivial).	0.105144023895	12
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	6	search with cache (only 1: now destruct n).	0.0139169692993	7
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	2.1	search with cache (only 1: intros; only 1: now induction n).	0.0218901634216	5
Coq.ZArith.Znat.Zabs2Nat.id_abs	40
Coq.ZArith.Znat.Zabs2Nat.id	40
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.0105118751526	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.0106480121613	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: trivial).	0.0106091499329	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.1	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0332791805267	13
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	1.4.1	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0229299068451	9
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	7.8116350174	7995
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	1.0.2.0.1.0.1.0.1.1.0.1.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: easy; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: easy; only 1: trivial; only 1: easy).	13.1593060493	7083
Coq.ZArith.Wf_Z.Z_lt_rec	40	1.0.1.0.1.0.1.0.1.1.0.1.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros; only 1: destruct x; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: assert (0 < 0) by now apply Z.le_lt_trans with y; only 1: easy; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: easy; only 1: trivial; only 1: easy).	9.14219617844	4359
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.1.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0691921710968	4
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.1.0.1.0.1.1.0.0.0.0.1.0.0.0.2	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	16.3193259239	13419
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	32.042855978	29536
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	7.0.8.2.1	search with cache (only 1: intros n m p; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: trivial; only 1: Z.order).	5.88042712212	2774
Coq.ZArith.Zcompare.Zge_compare	40	0.4.2.0.2.0	search with cache (only 1: intros n; only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: auto; only 1: trivial).	0.532801866531	303
Coq.ZArith.Zcompare.Zgt_compare	40	0.7.8.2.3.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.order; only 1: trivial).	3.14360904694	3341
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	26	search with cache (only 1: now destruct a).	0.443960905075	378
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.0955278873444	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.0965840816498	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	1.1.1.2	search with cache (only 1: destruct b as [| b| b]; only 1: apply Z.rem_bound_pos; only 1: apply Z.rem_bound_pos; only 1: apply Z.rem_bound_pos).	0.110862970352	9
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.107429027557	4
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40	10.2.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	2.60294699669	1653
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	9	search with cache (only 1: constructor).	0.143113136292	30
Coq.ZArith.Zdigits.two_compl_value	40	4	search with cache (only 1: constructor).	0.139008998871	29
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	2.4.1.1	search with cache (only 1: intros; only 1: destruct b; only 1: trivial; only 1: auto).	1.65645599365	542
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	6.2.1	search with cache (only 1: intros; only 1: simpl; only 1: reflexivity).	1.51229691505	593
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1.0.4.0.0	search with cache (only 1: simple induction n; only 1: intros; only 1: intuition auto using Z.le_ge, Z.ge_le, Z.lt_gt, Z.gt_lt; only 1: intros; only 1: auto).	0.133572101593	10
Coq.ZArith.Zdigits.Z_div2_value	40	0.0.1.0.0.0.0.0.0.0.7.3.6	search with cache (only 1: destruct z; only 1: now Z.nzsimpl; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial; only 1: simpl; only 1: Z.swap_greater; only 1: Z.order; only 1: simpl; only 1: easy).	16.8450899124	7489
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0	search with cache (only 1: intros; only 1: auto).	0.116456031799	2
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	8.16.0.1.6.7	search with cache (only 1: intro n; only 1: destruct n; only 1: easy; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	29.932420969	24526
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	3.1.1.1.4.0.1.2	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: lia).	12.7750809193	6798
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	2	search with cache (only 1: now destruct n).	0.0277090072632	3
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	1	search with cache (only 1: now destruct n).	0.0259289741516	2
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0	search with cache (only 1: trivial).	0.030200958252	1
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: trivial).	0.0300710201263	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0295190811157	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0338768959045	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0301389694214	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0291638374329	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0	search with cache (only 1: unfold ltb, lt; only 1: easy').	0.0308001041412	2
Coq.ZArith.BinInt.Z.compare_le_iff	40	6	search with cache (only 1: now intuition).	0.074569940567	7
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2	search with cache (only 1: now destruct n).	0.0433690547943	3
Coq.ZArith.BinInt.Z.abs_neq	40	0	search with cache (only 1: now destruct n).	0.0436570644379	1
Coq.ZArith.BinInt.Z.sgn_null	40	1	search with cache (only 1: now destruct n).	0.0500061511993	2
Coq.ZArith.BinInt.Z.sgn_pos	40	3	search with cache (only 1: now destruct n).	0.0492889881134	4
Coq.ZArith.BinInt.Z.sgn_neg	40	1	search with cache (only 1: now destruct n).	0.0470271110535	2
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.0430579185486	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.2.2.1	search with cache (only 1: destruct m as [| m| m]; only 1: now destruct n; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.301153898239	42
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1.0.0.0.0	search with cache (only 1: simpl; only 1: nzinduct n; only 1: trivial; only 1: intro; only 1: now split).	0.0919041633606	6
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	search with cache (only 1: now destruct n).	0.0875589847565	2
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0474860668182	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	2.0.0.0	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intro; only 1: now split).	0.241925001144	20
Coq.ZArith.BinInt.Z.succ_double_spec	40	9	search with cache (only 1: now destruct n).	0.46208691597	69
Coq.ZArith.BinInt.Z.pred_double_spec	40	0.0.0.4	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: trivial).	0.174944877625	8
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.1.4.0.2	search with cache (only 1: now destruct 1 || intros _; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	1.53850889206	569
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.3.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now try N.order').	10.7222101688	7827
Coq.ZArith.BinInt.Z.testbit_Zpos	40	3.10.7.3	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: now destruct n).	2.45430803299	1323
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0448570251465	1
Coq.ZArith.BinInt.Z.testbit_0_l	40
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.197363853455	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	13.7	search with cache (only 1: unfold lt, le; only 1: apply N.gt_lt_iff).	0.441264152527	324
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.072900056839	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	1.5	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.130687952042	8
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0784211158752	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	2.3.6.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	2.07481598854	448
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	2.0.0.0.6	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl').	1.77832913399	188
Coq.ZArith.BinInt.Z.compare_opp	40	0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: rewrite compare_antisym; only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	18.1555809975	21434
Coq.ZArith.BinInt.Z.add_compare_mono_l	40	1.9.0.0.19	search with cache (only 1: nzinduct n; only 1: simpl; only 1: trivial; only 1: fix even_spec 1; only 1: trivial).	16.7036349773	8003
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40
Coq.ZArith.BinInt.Pos2Z.id	40	0	search with cache (only 1: auto).	0.0938420295715	1
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: congruence).	0.0894298553467	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	3.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0982511043549	6
Coq.ZArith.BinInt.Pos2Z.is_pos	40	10	search with cache (only 1: firstorder).	0.11981511116	22
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	4.1	search with cache (only 1: red; only 1: easy').	0.102591991425	7
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: trivial).	0.0904469490051	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0	search with cache (only 1: easy).	0.0889110565186	1
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0923941135406	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	search with cache (only 1: trivial).	0.0877749919891	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.3.2.2.14	search with cache (only 1: now destruct 1 || intros _; only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: fix sqrtrem_spec 1; only 1: trivial).	1.49905610085	813
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	1	search with cache (only 1: trivial).	0.08669090271	2
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.088427066803	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.0872468948364	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	1	search with cache (only 1: trivial).	0.085559129715	2
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0.0	search with cache (only 1: unfold Pos.leb, Pos.le; only 1: trivial).	0.0913829803467	2
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0.0	search with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: trivial).	0.0909819602966	2
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	4.1	search with cache (only 1: apply eq_true_iff_eq; only 1: easy').	0.227431058884	77
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: auto).	0.0876040458679	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: auto).	0.086366891861	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1 || (intros; now f_equal)).	0.0865309238434	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	3.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0918691158295	6
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	2.3.0	search with cache (only 1: intros; only 1: apply inj; only 1: auto).	0.100414991379	8
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	1.3.0.0	search with cache (only 1: split; only 1: apply inj; only 1: intros; only 1: now f_equal).	0.10057592392	8
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	11	search with cache (only 1: easy).	0.374320983887	33
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	10	search with cache (only 1: easy).	0.113274812698	21
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0872740745544	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0919909477234	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	12	search with cache (only 1: now rewrite ?Pos.square_xO).	0.130565881729	46
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0871851444244	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	2.0	search with cache (only 1: unfold Pos.le; only 1: trivial).	0.0877199172974	4
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	2	search with cache (only 1: easy).	0.114213943481	29
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: easy).	0.0852229595184	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0884618759155	2
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0849950313568	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0834290981293	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0904858112335	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0899012088776	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	1	search with cache (only 1: trivial).	0.084578037262	2
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1.2.0.2.0	search with cache (only 1: revert q; only 1: intros; only 1: revert q; only 1: intros; only 1: auto).	0.312881946564	114
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	1.2.0.2.0	search with cache (only 1: revert q; only 1: intros; only 1: revert q; only 1: intros; only 1: reflexivity).	0.297541856766	111
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0849509239197	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0839672088623	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: auto).	0.0817310810089	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	1.1.1.3	search with cache (only 1: destruct x; only 1: now f_equal; only 1: now f_equal; only 1: now f_equal).	0.111186981201	10
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	3.0.3.0	search with cache (only 1: destruct x; only 1: now f_equal; only 1: reflexivity; only 1: now f_equal).	0.0993840694427	10
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	1.1.7.2	search with cache (only 1: destruct x; only 1: Z.order; only 1: now destruct p; only 1: now destruct p).	0.704502820969	127
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	2.3.3.2	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: easy).	0.419560909271	141
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40
Coq.ZArith.BinInt.Z2Pos.inj_leb	40
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	2.10.6.4	search with cache (only 1: destruct x; only 1: Z.order; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.720935106277	395
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial).	0.0954101085663	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.0.0.1.0	search with cache (only 1: destruct x; only 1: easy; only 1: destruct y; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.131196975708	8
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	search with cache (only 1: intros x y z; only 1: now f_equal).	0.0879580974579	4
Coq.ZArith.BinInt.ZL0	40	0	search with cache (only 1: reflexivity).	0.0789740085602	1
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	3.0.0.0.4	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl').	2.30125904083	328
Coq.ZArith.BinInt.Z_eq_mult	40
Coq.ZArith.Zcomplements.floor_gt0	40	7.0	search with cache (only 1: intros n; only 1: now induction n).	0.0954580307007	17
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto).	0.0796508789062	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	0.0.0.1.0.0.0.0.1.1.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	3.15738201141	2350
Coq.ZArith.Zeven.Zodd_bool_iff	40	0.0.0.1.0.0.0.0.1.1.0.0.3	search with cache (only 1: destruct n; only 1: simpl; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition; only 1: simpl; only 1: destruct p; only 1: intuition; only 1: intuition; only 1: intuition).	3.37171697617	2670
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.1.0.0.0.0.2.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.97877788544	1998
Coq.ZArith.Zeven.Zeven_not_Zodd	40
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0261301994324	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0167779922485	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.1.0.0.0.0.0.0.2.0	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now Z.nzsimpl'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	8.110435009	1471
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	5.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.0461509227753	14
Coq.ZArith.Zeven.Zodd_quot2	40	0.1.3.0	search with cache (only 1: boolify_even_odd; only 1: Z.nzsimpl; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	3.02167701721	208
Coq.ZArith.Zeven.Zodd_quot2_neg	40	7.2.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n).	2.21313905716	291
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	1.0.6.1.3.16.22	search with cache (only 1: simpl; only 1: induction p; only 1: simpl; only 1: tauto; only 1: easy; only 1: simpl; only 1: tauto).	0.935087919235	1962
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	4.2.0.2.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.424620866776	314
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	2.0.2.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.125164985657	16
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	2.2.0.0	search with cache (only 1: boolify_even_odd; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0328159332275	8
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0678009986877	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.0670590400696	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.0655221939087	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.0.4.1.0	search with cache (only 1: intros; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.237465858459	93
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	11.1	search with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	1.65035700798	212
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40	12.2	search with cache (only 1: intros x y z; only 1: firstorder).	1.75259113312	483
Coq.ZArith.Znumtheory.Zis_gcd_0	40	12.3	search with cache (only 1: intros; only 1: firstorder).	0.347864866257	321
Coq.ZArith.Znumtheory.Zis_gcd_1	40	14.2	search with cache (only 1: intros; only 1: firstorder).	0.614357948303	514
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	3.2	search with cache (only 1: intros n; only 1: now destruct n).	0.103796005249	7
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.4	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: auto with zarith; only 1: intuition).	0.18714094162	63
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.165095806122	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.2.0.0.0.1	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: assert (c | d) by auto; only 1: apply Z.divide_antisym; only 1: intuition; only 1: intuition).	0.5017619133	54
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.0.0.3.0	search with cache (only 1: induction 1; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.092423915863	8
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.1.1.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	0.163312911987	8
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40
Coq.ZArith.Znumtheory.not_prime_1	40	13.10	search with cache (only 1: intros [q Hq]; only 1: Z.order).	0.539487123489	326
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	0.2	search with cache (only 1: intros; only 1: trivial).	0.0709359645844	4
Coq.ZArith.Zdiv.Zmod_0_r	40	1.1.1.1	search with cache (only 1: destruct a; only 1: trivial; only 1: trivial; only 1: auto).	0.0808899402618	8
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.1	search with cache (only 1: intros; only 1: trivial).	0.0695488452911	3
Coq.ZArith.Zdiv.Zdiv_0_r	40	1.1.1.1	search with cache (only 1: destruct a; only 1: trivial; only 1: trivial; only 1: auto).	0.0800158977509	8
Coq.ZArith.Zdiv.Zmod_1_r	40	0.6.2	search with cache (only 1: intros m; only 1: Z.nzsimpl; only 1: trivial).	2.04945898056	65
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.2	search with cache (only 1: intro n; only 1: now Z.nzsimpl).	0.190953016281	49
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.4.3.2.0	search with cache (only 1: intros n; only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: trivial; only 1: trivial).	1.22529482841	593
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.5.3.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt; only 1: auto using Z.ge_le).	1.47522807121	302
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.1.1	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: Z.order; only 1: Z.order).	0.172394990921	6
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	1.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0823209285736	4
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.4.0.0	search with cache (only 1: intros; only 1: replace (a - b) with a + -1 * b; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto with zarith; only 1: auto with zarith).	0.156755924225	22
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.137042999268	40
Coq.ZArith.Zdiv.eqm_refl	40	3.1	search with cache (only 1: intros n; only 1: now destruct n).	0.0834419727325	6
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0750679969788	2
Coq.ZArith.Zdiv.eqm_trans	40	6.1.0	search with cache (only 1: unfold eqm; only 1: intros x y z H1 H2; only 1: intuition auto; Z.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0930068492889	10
Coq.ZArith.Zdiv.eqm_setoid	40	2.1.1.5	search with cache (only 1: split; only 1: congruence; only 1: congruence; only 1: congruence).	0.322243928909	73
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.19.0	search with cache (only 1: intros; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	1.37446093559	717
Coq.ZArith.Zdiv.Zeven_mod	40
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.0.1	search with cache (only 1: intros; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: now Z.nzsimpl).	0.110991954803	6
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.0.0.0.2	search with cache (only 1: intros; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: apply Z.mod_add; only 1: now intros ->).	0.176241159439	9
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	1.50362992287	45
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.0.0.7.0.1	search with cache (only 1: intros; only 1: zero_or_not b; only 1: now Z.nzsimpl; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	1.68380284309	270
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0951578617096	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0820510387421	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0616970062256	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.7.2.3	search with cache (only 1: intros; only 1: Z.destruct_max n; only 1: Z.swap_greater; only 1: auto; only 1: auto).	1.23877596855	737
Coq.ZArith.Zabs.Zabs_intro	40	4.5	search with cache (only 1: intros; only 1: now destruct n).	0.108591079712	43
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1.2.0.2	search with cache (only 1: nzinduct n; only 1: trivial; only 1: intros; only 1: now Morphisms.f_equiv).	0.0340218544006	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0	search with cache (only 1: trivial).	0.0125541687012	1
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.0115151405334	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: trivial).	0.0121231079102	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: easy).	0.0111458301544	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	9	search with cache (only 1: trivial).	0.0951449871063	19
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	2	search with cache (only 1: trivial).	0.0121209621429	3
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	2	search with cache (only 1: reflexivity).	0.0122890472412	3
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	2.1.0.0.0	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now split).	0.249257087708	8
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0122039318085	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	2	search with cache (only 1: auto).	0.0136840343475	3
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.0119969844818	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.0122709274292	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0	search with cache (only 1: trivial).	0.0700509548187	1
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.3	search with cache (only 1: simpl; only 1: now destruct n).	0.0757210254669	5
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	2.5.0	search with cache (only 1: symmetry; only 1: apply Pos2Nat.inj; only 1: reflexivity).	0.133233785629	49
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: now subst).	0.0668890476227	1
Coq.ZArith.Zpower.shift_equiv	40	2.1.16.11.1.24	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	17.4090061188	12728
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40
Coq.ZArith.Zpower.two_p_equiv	40
Coq.ZArith.Zpower.two_power_nat_S	40	0	search with cache (only 1: reflexivity).	0.0662188529968	1
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	2	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.246180057526	3
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.134317874908	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	14	search with cache (only 1: apply Z.lt_0_sub).	1.68361783028	89
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.150660037994	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	4.13	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	4.01395606995	593
Coq.ZArith.auxiliary.Zgt_left	40	0.2.0.1.1	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.add_shuffle0; only 1: change_no_check (-1) with (- Z.succ 0); only 1: intro H; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.277668952942	26
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.255065917969	8
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.104565858841	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	1.0.0.25	search with cache (only 1: destruct a; only 1: trivial; only 1: trivial; only 1: reflexivity).	0.406666994095	431
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0	search with cache (only 1: Z.order).	0.0547430515289	1
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: Z.order).	0.0544891357422	1
Coq.ZArith.Zorder.Zle_not_gt	40	0	search with cache (only 1: auto).	0.0532851219177	1
Coq.ZArith.Zorder.Zgt_not_le	40	0	search with cache (only 1: auto).	0.0545840263367	1
Coq.ZArith.Zorder.Znot_ge_lt	40
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0659828186035	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0528111457825	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0674641132355	2
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40
Coq.ZArith.Zorder.Zgt_irrefl	40	1.0	search with cache (only 1: Z.swap_greater; only 1: Z.order').	0.0631680488586	3
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	3.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.169123888016	6
Coq.ZArith.Zorder.Zle_gt_trans	40	9.16	search with cache (only 1: Z.swap_greater; only 1: Z.order).	1.35717082024	336
Coq.ZArith.Zorder.Zgt_le_trans	40	1.4	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0866329669952	7
Coq.ZArith.Zorder.Zge_trans	40	12.23	search with cache (only 1: Z.swap_greater; only 1: Z.order).	1.84136915207	1038
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0766952037811	2
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0762450695038	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.055214881897	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0553240776062	1
Coq.ZArith.Zorder.Zgt_succ	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.0627901554108	4
Coq.ZArith.Zorder.Znot_le_succ	40
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0544798374176	1
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.0547738075256	2
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.067253112793	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0550971031189	1
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0716850757599	3
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0564639568329	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.18	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.50169801712	165
Coq.ZArith.Zorder.Zle_neg_pos	40	6.0	search with cache (only 1: intros x y z; only 1: easy).	0.0628139972687	8
Coq.ZArith.Zorder.Zgt_pos_0	40	1.5.0	search with cache (only 1: induction p using Pos.peano_ind; only 1: firstorder; only 1: auto).	0.351738929749	9
Coq.ZArith.Zorder.Zle_0_pos	40	0.1.0	search with cache (only 1: induction p using Pos.peano_ind; only 1: Z.order'; only 1: easy).	0.0703821182251	4
Coq.ZArith.Zorder.Zlt_neg_0	40	5.0	search with cache (only 1: intros a0; only 1: firstorder).	0.0630941390991	7
Coq.ZArith.Zorder.Zle_0_nat	40	3.5.3.3.18.0	search with cache (only 1: intros; only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: easy).	3.2500641346	3625
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0614759922028	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.057816028595	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	0	search with cache (only 1: apply Z.add_le_mono_l).	0.0547060966492	1
Coq.ZArith.Zorder.Zplus_le_reg_r	40	2	search with cache (only 1: apply Z.add_le_mono_r).	0.222075939178	3
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0552082061768	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	0	search with cache (only 1: apply Z.add_lt_mono_r).	0.0555868148804	1
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0769979953766	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0790560245514	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.6	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.305288076401	8
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.25	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	1.92127585411	773
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0558128356934	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.320870161057	2
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0910098552704	3
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	2.3.4	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.188004016876	47
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	2.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.097198009491	6
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	3.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0852711200714	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.068498134613	2
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0545580387115	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0675959587097	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0546820163727	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.08820104599	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0885441303253	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	22.8	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	2.24423909187	1381
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40	0.0.0.0.1.0.0.0.0.0.0.3.0.0.0.0.0.0.8	search with cache (only 1: unfold Z.lt, Z.le; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	36.8697719574	28747
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	2.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0807027816772	7
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	0.0.0.0.1.0.0.0.0.0.0.3.0.0.0.0.0.0.9.0	search with cache (only 1: Z.swap_greater; only 1: unfold Z.lt, Z.le; only 1: destruct n as [| n| n], m as [| m| m]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: congruence; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	37.3698050976	29146
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.088947057724	2
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	2	search with cache (only 1: apply Z.le_0_sub).	0.0589458942413	3
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	13.1.22	search with cache (only 1: case Z.leb_spec; only 1: Z.order; only 1: now try BinNat.N.order').	7.88268089294	3596
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.0536880493164	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	1	search with cache (only 1: trivial).	0.0550148487091	2
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	4.0.0.0.6	search with cache (only 1: intuition; only 1: apply Z.leb_le; only 1: Z.order; only 1: apply Z.leb_le; only 1: trivial).	1.01502084732	327
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.6	search with cache (only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.135226011276	44
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	7.1	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now case Z.compare_spec).	0.227918148041	10
Coq.ZArith.Zbool.Zgt_is_gt_bool	40
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	1.0.1	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.leb_le; only 1: apply Z.lt_le_pred).	0.0687079429626	5
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.1.2.2.4.19	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now subst; only 1: now subst; only 1: now subst).	2.85856509209	3815
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	1.1.1.2	search with cache (only 1: destruct r; only 1: auto; only 1: auto; only 1: auto).	0.179008960724	9
Coq.ZArith.ZArith_dec.Zcompare_rect	40	2.2.2.6	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.25425696373	474
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0993220806122	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40	12.12	search with cache (only 1: unfold Z.gt, Z.lt; only 1: decide equality).	1.72611379623	1116
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	2.0.0.0.0.1.0.0.0.1	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: auto).	4.27667999268	534
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.0.4	search with cache (only 1: intros; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.190289974213	8
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: now try Z.order').	0.0555810928345	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40
Coq.Program.Wf.Fix_F_inv	40
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.1.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0131688117981	7
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40
Coq.Program.Wf.Fix_F_sub_rect	40
Coq.Program.Wf.eq_Fix_F_sub	40
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP_refl).	0.00864386558533	2
Coq.Program.Equality.UIP_refl_refl	40	4	search with cache (only 1: apply UIP_refl).	0.0131261348724	18
Coq.Program.Equality.inj_pairT2_refl	40	1	search with cache (only 1: apply UIP_refl).	0.00792980194092	2
Coq.Program.Equality.solution_left	40	0.3	search with cache (only 1: destruct 2; only 1: trivial).	0.0100390911102	8
Coq.Program.Equality.solution_right	40	0.1.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00924897193909	4
Coq.Program.Equality.deletion	40
Coq.Program.Equality.simplification_heq	40
Coq.Program.Equality.simplification_existT2	40
Coq.Program.Equality.simplification_existT1	40
Coq.Program.Equality.simplification_K	40
Coq.Program.Combinators.compose_id_left	40	0.2	search with cache (only 1: intros; only 1: auto).	0.00829195976257	4
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: auto).	0.00781488418579	2
Coq.Program.Combinators.compose_assoc	40	2.0	search with cache (only 1: intros; only 1: reflexivity).	0.00806999206543	4
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: auto).	0.00791478157043	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00787901878357	3
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.4.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.120260000229	9
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	1.0.7	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.044909954071	62
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40
Coq.Sorting.Permutation.Permutation_cons	40	0.0.1.0.0.0.0.1.1.3.6	search with cache (only 1: inversion 1; only 1: destruct 1; only 1: constructor; only 1: constructor; only 1: auto; only 1: constructor; only 1: constructor; only 1: constructor; only 1: apply perm_trans with (l' := l'); only 1: assumption; only 1: assumption).	0.499850988388	614
Coq.Sorting.Permutation.Permutation_in	40	0.0.0.0.9.10.1	search with cache (only 1: induction l; only 1: firstorder; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: firstorder; only 1: firstorder).	23.7100498676	13683
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	1	search with cache (only 1: auto).	0.0132369995117	2
Coq.Sorting.Permutation.Permutation_rev	40
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	2.0.0.0.0.0.0.0.0.3	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.540330886841	549
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	2.0.0.0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	0.0870890617371	10
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40
Coq.Sorting.PermutSetoid.permut_sym	40	0.0	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0715630054474	2
Coq.Sorting.PermutSetoid.permut_trans	40
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	5.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto using munion_comm, munion_ass, meq_sym, meq_left, meq_right).	0.0984079837799	14
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40
Coq.Sorting.PermutSetoid.permut_app_inv2	40	2.0.1.0.0.1.0.1.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: trivial).	3.92693519592	1382
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40
Coq.Sorting.PermutSetoid.if_eqA_else	40
Coq.Sorting.PermutSetoid.if_eqA_refl	40
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.2.2	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: auto with *).	0.631489038467	102
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.4.1.7	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.679552078247	453
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40
Coq.Sorting.Sorted.Sorted_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.0218751430511	4
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	2.1	search with cache (only 1: inversion 1; only 1: auto).	0.0477750301361	26
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0205490589142	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	0	search with cache (only 1: reflexivity).	0.0673279762268	1
Coq.Sorting.Heap.leA_Tree_Node	40	1.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0695061683655	3
Coq.Sorting.Heap.invert_heap	40
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	1.0.2.6.3.5.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H3 H4; only 1: elim H4; only 1: intros H1 H2; only 1: elim H2; only 1: auto with datatypes; only 1: auto with datatypes).	16.2540149689	1888
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40
Coq.Sorting.Heap.list_to_heap	40	0.4	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.0792410373688	12
Coq.Sorting.Heap.heap_to_list	40
Coq.Sorting.Heap.treesort	40	6.0.1	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.119463920593	36
Coq.Init.Wf.Acc_inv	40	6.1	search with cache (only 1: destruct 1; only 1: auto).	0.0123081207275	11
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0658729076385	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0089750289917	4
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40
Coq.Init.Tactics.decide_right	40
Coq.Init.Peano.pred_Sn	40
Coq.Init.Peano.not_eq_S	40
Coq.Init.Peano.O_S	40
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40
Coq.Init.Peano.plus_O_n	40	0	search with cache (only 1: reflexivity).	0.00698781013489	1
Coq.Init.Peano.plus_n_Sm	40
Coq.Init.Peano.plus_Sn_m	40	0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.0074999332428	3
Coq.Init.Peano.mult_n_O	40
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40
Coq.Init.Peano.le_n_S	40
Coq.Init.Peano.nat_case	40
Coq.Init.Peano.nat_double_ind	40
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40	0.0.1.0.1.0.1.2.0.0.0.1.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	0.163625001907	370
Coq.Init.Peano.nat_rect_succ_r	40
Coq.Init.Peano.nat_rect_plus	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40
Coq.Init.Datatypes.eq_true_rec_r	40	0.1.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00789785385132	4
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0077428817749	3
Coq.Init.Datatypes.surjective_pairing	40
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	1.0.0.0.1.0.0.0.1.1	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	0.0432600975037	120
Coq.Init.Datatypes.CompOpp_iff	40	0.0.2.0.0.2.1.1.2.0.0.0.2.0.0.2.1.1.2.0.1.1.2.1.1.2.0.0.2.0.0	search with cache (only 1: destruct c; only 1: destruct c'; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: discriminate; only 1: discriminate; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto; only 1: destruct c'; only 1: split; only 1: discriminate; only 1: discriminate; only 1: split; only 1: auto; only 1: auto; only 1: split; only 1: auto; only 1: auto).	0.727766990662	4500
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00294399261475	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40
Coq.Init.Logic.iff_sym	40
Coq.Init.Logic.and_iff_compat_l	40
Coq.Init.Logic.and_iff_compat_r	40	0.1.1.0.0.1.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	0.0298118591309	255
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40
Coq.Init.Logic.imp_iff_compat_l	40
Coq.Init.Logic.imp_iff_compat_r	40	1.2.3.0.1.4.3.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.0402498245239	473
Coq.Init.Logic.not_iff_compat	40	1.1.2.1	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00561881065369	9
Coq.Init.Logic.neg_false	40
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.1	search with cache (only 1: intros; only 1: assumption).	0.00632977485657	3
Coq.Init.Logic.iff_to_and	40
Coq.Init.Logic.inst	40
Coq.Init.Logic.gen	40	1.0	search with cache (only 1: unfold all; only 1: auto).	0.00691986083984	3
Coq.Init.Logic.absurd	40
Coq.Init.Logic.eq_sym	40
Coq.Init.Logic.eq_trans	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00775289535522	2
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.0078330039978	2
Coq.Init.Logic.f_equal	40	3.1	search with cache (only 1: destruct 1; only 1: trivial).	0.00836586952209	6
Coq.Init.Logic.not_eq_sym	40
Coq.Init.Logic.eq_sind_r	40
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00809288024902	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00835299491882	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00830602645874	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40
Coq.Init.Logic.rew_opp_r	40
Coq.Init.Logic.rew_opp_l	40
Coq.Init.Logic.f_equal2	40
Coq.Init.Logic.f_equal3	40	1.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0143980979919	13
Coq.Init.Logic.f_equal4	40
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0208580493927	18
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00903511047363	2
Coq.Init.Logic.eq_sym_involutive	40	1.2.2	search with cache (only 1: intros; only 1: destruct e; only 1: reflexivity).	0.0104069709778	12
Coq.Init.Logic.eq_trans_sym_inv_l	40
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00905394554138	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.2	search with cache (only 1: destruct H; only 1: auto).	0.0112760066986	8
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: auto).	0.00987696647644	3
Coq.Init.Logic.rew_swap	40	0.1.1.1	search with cache (only 1: destruct H; only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0129940509796	13
Coq.Init.Logic.rew_compose	40
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00803685188293	2
Coq.Init.Logic.eq_trans_map_distr	40
Coq.Init.Logic.eq_sym_map_distr	40	0.2	search with cache (only 1: destruct e; only 1: trivial).	0.0108969211578	5
Coq.Init.Logic.eq_trans_sym_distr	40	1.2.2	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.013876914978	11
Coq.Init.Logic.eq_trans_rew_distr	40	1.2.0	search with cache (only 1: intros; only 1: destruct e'; only 1: reflexivity).	0.00995993614197	6
Coq.Init.Logic.rew_const	40	2.3.2	search with cache (only 1: intros; only 1: destruct e; only 1: trivial).	0.0134079456329	26
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	3.3	search with cache (only 1: destruct 1; only 1: auto).	0.00972700119019	8
Coq.Init.Logic.inhabited_covariant	40
Coq.Init.Logic.eq_stepl	40	1.4	search with cache (only 1: destruct 1; only 1: auto).	0.0112180709839	13
Coq.Init.Logic.iff_stepl	40
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40
Coq.Init.Logic.rew_ex2	40	0.4	search with cache (only 1: destruct H, u; only 1: auto).	0.0194339752197	15
Coq.Init.Logic_Type.identity_sym	40
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00961017608643	4
Coq.Init.Logic_Type.identity_congr	40	0.2	search with cache (only 1: destruct 1; only 1: trivial).	0.00923609733582	4
Coq.Init.Logic_Type.not_identity_sym	40
Coq.Init.Logic_Type.identity_ind_r	40
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00874209403992	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00875997543335	3
Coq.Init.Specif.sigT_eta	40
Coq.Init.Specif.sig_eta	40
Coq.Init.Specif.sigT2_eta	40
Coq.Init.Specif.sig2_eta	40
Coq.Init.Specif.exists_to_inhabited_sig	40
Coq.Init.Specif.inhabited_sig_to_exists	40
Coq.Init.Specif.eq_existT_uncurried	40
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.1.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.00983285903931	4
Coq.Init.Specif.eq_existT_curried_map	40
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40
Coq.Init.Specif.eq_exist_uncurried	40
Coq.Init.Specif.eq_sig_uncurried	40
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40
Coq.Init.Specif.rew_sig	40	3.0	search with cache (only 1: destruct H, u; only 1: auto).	0.0115978717804	5
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried_iff	40
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.014132976532	2
Coq.Init.Specif.eq_exist2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried	40
Coq.Init.Specif.eq_sig2_uncurried_iff	40
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	2.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0155389308929	4
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00827813148499	4
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.108524799347	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	21.2	search with cache (only 1: intros; only 1: apply Qred_correct).	20.875854969	2122
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	4.4.4.4	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	3.78221201897	2104
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	3.0.0.12.10	search with cache (only 1: firstorder; only 1: red; only 1: destruct n; only 1: trivial; only 1: trivial).	7.27563214302	643
Coq.QArith.Qfield.ex1	40	2	search with cache (only 1: exact Qmult_plus_distr_l).	0.244063854218	20
Coq.QArith.Qfield.ex2	40	12.1	search with cache (only 1: intros; only 1: ring).	10.09222579	229
Coq.QArith.Qfield.ex3	40	7.1	search with cache (only 1: intros x y z; only 1: ring).	1.17956113815	27
Coq.QArith.Qfield.ex4	40	9	search with cache (only 1: constructor).	0.102816820145	14
Coq.QArith.Qfield.ex5	40	3	search with cache (only 1: ring).	0.0991408824921	4
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0994679927826	1
Coq.QArith.Qfield.ex7	40	5.0	search with cache (only 1: intros a; only 1: ring).	0.105296134949	7
Coq.QArith.Qfield.ex8	40	4.0	search with cache (only 1: intro; only 1: ring).	0.104926109314	6
Coq.QArith.Qfield.ex9	40	11	search with cache (only 1: constructor).	0.174839019775	99
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	1.0.1.2.2	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: f_equal; only 1: ring).	1.01041698456	50
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.127034902573	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	4.2.0.6	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: firstorder).	1.61699295044	443
Coq.QArith.Qcanon.Qred_involutive	40	2.1.2	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.0974450111389	8
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: auto with *).	0.0885620117188	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.0.0.0.1.1	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.104024887085	12
Coq.QArith.Qcanon.Qcle_alt	40	1.2	search with cache (only 1: intros; only 1: auto with *).	0.0845561027527	5
Coq.QArith.Qcanon.Qcge_alt	40	1.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.36648106575	17
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	5.1	search with cache (only 1: intros H0; only 1: now rewrite ?Pos.square_xO).	0.101133108139	8
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	18.1.2.11.4	search with cache (only 1: intros n; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	13.0445039272	6247
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	0.12.2	search with cache (only 1: intros; only 1: qc; only 1: ring).	2.16986298561	192
Coq.QArith.Qcanon.Qcplus_opp_r	40	0.1.10.1.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl in *; only 1: ring).	3.14704704285	405
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	0.0.1.2.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: reflexivity).	0.123600006104	8
Coq.QArith.Qcanon.Qcmult_0_r	40	13.0.6.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	2.92565202713	1697
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40
Coq.QArith.Qcanon.Qcmult_comm	40
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	1.0.0.10	search with cache (only 1: destruct x; only 1: red; only 1: red; only 1: easy).	0.449985027313	169
Coq.QArith.Qcanon.Qcle_antisym	40	6.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: firstorder).	0.107569932938	8
Coq.QArith.Qcanon.Qcle_trans	40	4.9.0	search with cache (only 1: unfold Qcle; only 1: destruct y; only 1: eauto with qarith).	2.64618611336	868
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	4.0.0	search with cache (only 1: unfold Qcle; only 1: intros; only 1: congruence).	0.0938580036163	7
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	6.3.5.2.7.11	search with cache (only 1: destruct y; only 1: red; only 1: intros; only 1: eapply Qlt_le_trans; only 1: eauto; only 1: firstorder).	10.3272299767	7234
Coq.QArith.Qcanon.Qcnot_lt_le	40	8.2	search with cache (only 1: unfold Qcle, Qclt; only 1: firstorder).	0.854676008224	350
Coq.QArith.Qcanon.Qcnot_le_lt	40	5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: firstorder).	0.153450012207	31
Coq.QArith.Qcanon.Qclt_not_le	40	5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: firstorder).	0.183274030685	31
Coq.QArith.Qcanon.Qcle_not_lt	40	5.0	search with cache (only 1: unfold Qcle, Qclt; only 1: firstorder).	0.188989162445	31
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	0.0.0.2.4	search with cache (only 1: induction n; only 1: now destruct 1; only 1: destruct n; only 1: reflexivity; only 1: auto with zarith).	0.169034957886	72
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.4.1.2.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	10.4965620041	1192
Coq.QArith.Qreals.IZR_nz	40	0.1	search with cache (only 1: intros; only 1: auto with real).	0.161115169525	24
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.0.0.6.0.3.4	search with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: unfold Qden, Qnum; only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	1.85689401627	782
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	0	search with cache (only 1: easy').	0.05925989151	1
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	5	search with cache (only 1: now intuition).	0.0632090568542	6
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	3	search with cache (only 1: reflexivity).	0.0641589164734	4
Coq.QArith.QArith_base.Qeq_sym	40	0	search with cache (only 1: auto with qarith).	0.0610921382904	1
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.0.7	search with cache (only 1: unfold Qeq; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.186869859695	48
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	28.10.12	search with cache (only 1: destruct x; only 1: unfold Qeq; only 1: apply Zeq_is_eq_bool).	13.495303154	8967
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.0608098506927	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40
Coq.QArith.QArith_base.Qnot_eq_sym	40	0	search with cache (only 1: auto with qarith).	0.059760093689	1
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: red; only 1: now constructor).	0.0726940631866	3
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0.10.0	search with cache (only 1: rewrite Qeq_bool_iff; only 1: intro UIP; only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.417541980743	103
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.1.0.4	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	2.02932500839	128
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	12	search with cache (only 1: now try destruct p).	0.15128993988	84
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.4.9.0	search with cache (only 1: intros n; only 1: red; only 1: simpl in *; only 1: now Z.nzsimpl').	3.88169384003	374
Coq.QArith.QArith_base.Qplus_0_r	40	3.19.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: ring).	12.6161949635	4507
Coq.QArith.QArith_base.Qplus_comm	40	15.15.3.18.1	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	23.4378230572	12678
Coq.QArith.QArith_base.Qopp_involutive	40	24.1.25.3	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: ring).	33.3294980526	25891
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.100589036942	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: trivial).	0.0833609104156	3
Coq.QArith.QArith_base.Qmult_0_r	40	12.0.8.5	search with cache (only 1: intros a0; only 1: unfold Qeq; only 1: simpl in *; only 1: now Z.nzsimpl).	7.23153281212	4077
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40
Coq.QArith.QArith_base.Qmult_comm	40	10.18.1.2.2.8	search with cache (only 1: intros a b; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: f_equal; only 1: firstorder).	26.5753509998	16994
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	1.11.1.6.1.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: intros n m; only 1: destruct n, m; only 1: simpl; only 1: simpl_mult; only 1: ring).	17.8794548512	8489
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.8	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	2.81626200676	536
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	1.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: tauto).	0.0809481143951	3
Coq.QArith.QArith_base.inject_Z_opp	40	3	search with cache (only 1: tauto).	0.0763258934021	4
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.1.1.2	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.228255033493	33
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	7	search with cache (only 1: firstorder).	0.105263948441	8
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	12	search with cache (only 1: congruence).	0.595973968506	111
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.0750629901886	1
Coq.QArith.QArith_base.Qle_not_lt	40	1	search with cache (only 1: apply Z.nlt_ge).	0.076287984848	2
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	15.8.5	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	1.27731204033	897
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	3	search with cache (only 1: eauto with qarith).	0.645154953003	85
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.3.0.2.0.1.0.5	search with cache (only 1: intros; only 1: unfold Qceiling; only 1: apply Z.le_antisymm; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	7.29552507401	3382
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	7.6.6.0.5	search with cache (only 1: intros; only 1: destruct x as [[| xn| xn] xd]; only 1: now rewrite ?Pos.square_xO; only 1: now rewrite ?Pos.square_xO; only 1: now rewrite ?Pos.square_xO).	10.2694089413	4910
Coq.QArith.Qabs.Qabs_neg	40	7.0.0.0.1.1.0.0.6	search with cache (only 1: intros; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: now rewrite ?Pos.square_xO).	10.0111310482	3557
Coq.QArith.Qabs.Qabs_nonneg	40	3.3.4.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: discriminate; only 1: discriminate; only 1: discriminate).	0.640599966049	197
Coq.QArith.Qabs.Zabs_Qabs	40	0	search with cache (only 1: constructor).	0.183139801025	1
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.0.0.0.0.0.0.10	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: simpl; only 1: auto; only 1: red; only 1: simpl; only 1: reflexivity; only 1: red; only 1: simpl; only 1: reflexivity).	9.94101786613	574
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	4	search with cache (only 1: firstorder).	0.00369191169739	5
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00345897674561	1
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00350117683411	1
Coq.Classes.CMorphisms.pointwise_pointwise	40
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00355005264282	1
Coq.Classes.CMorphisms.subrelation_respectful	40	6	search with cache (only 1: firstorder).	0.00955605506897	7
Coq.Classes.CMorphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00427603721619	1
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.00771379470825	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: firstorder).	0.0873320102692	1
Coq.Classes.CMorphisms.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.00521802902222	2
Coq.Classes.CMorphisms.iff_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.00407099723816	2
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00403690338135	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00362515449524	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00391101837158	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	1.0	search with cache (only 1: hnf; only 1: firstorder).	0.00543785095215	3
Coq.Classes.CMorphisms.compose_proper_obligation_1	40
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	2	search with cache (only 1: firstorder).	0.00429892539978	3
Coq.Classes.CMorphisms.flip_respectful	40	2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: firstorder).	0.0138821601868	11
Coq.Classes.CMorphisms.flip1	40
Coq.Classes.CMorphisms.flip2	40	1	search with cache (only 1: firstorder).	0.0033061504364	2
Coq.Classes.CMorphisms.eq_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00609803199768	1
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0038640499115	1
Coq.Classes.CMorphisms.proper_eq	40	3	search with cache (only 1: split).	0.00379800796509	4
Coq.Classes.CMorphisms.proper_proper	40	4.4.0	search with cache (only 1: unfold relation_equivalence, iffT; only 1: intros A x P H y H0; only 1: simpl_crelation).	0.351819038391	118
Coq.Classes.CMorphisms.proper_normalizes_proper	40	3.0	search with cache (only 1: red; only 1: firstorder).	0.0100791454315	5
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00486493110657	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	7.1	search with cache (only 1: intros A C h1 h2; only 1: simpl_crelation).	0.0549490451813	20
Coq.Classes.CMorphisms.proper_sym_flip_2	40
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.1.7.0	search with cache (only 1: firstorder; only 1: simpl_crelation; only 1: transitivity y; only 1: auto; only 1: firstorder).	0.0653660297394	153
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0.6	search with cache (only 1: red; only 1: firstorder).	0.00704002380371	13
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.0048770904541	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00707602500916	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.26198887825	1
Coq.Classes.CRelationClasses.complement_inverse	40	6	search with cache (only 1: split).	0.00701212882996	7
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00766491889954	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.00629305839539	1
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	1	search with cache (only 1: firstorder).	0.00973105430603	2
Coq.Classes.CRelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0206830501556	2
Coq.Classes.CRelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0206761360168	1
Coq.Classes.CRelationClasses.flip_PER	40	0	search with cache (only 1: firstorder).	0.0298039913177	1
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0378041267395	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0079288482666	2
Coq.Classes.CRelationClasses.complement_Symmetric	40
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.2	search with cache (only 1: constructor; only 1: auto; only 1: auto).	0.00698184967041	5
Coq.Classes.CRelationClasses.iffT_Symmetric	40	1	search with cache (only 1: firstorder).	0.00770711898804	2
Coq.Classes.CRelationClasses.iffT_Transitive	40	1	search with cache (only 1: firstorder).	0.00934791564941	2
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0135509967804	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	1.3	search with cache (only 1: intros A B [H1 H2]; only 1: auto with *).	0.0276598930359	61
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40	5.1.3	search with cache (only 1: intros; only 1: compute; only 1: firstorder).	4.14858603477	191
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00581097602844	1
Coq.Classes.Equivalence.pointwise_symmetric	40
Coq.Classes.Equivalence.pointwise_transitive	40
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.238405942917	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	5	search with cache (only 1: reflexivity).	0.00684189796448	6
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0074679851532	1
Coq.Classes.RelationClasses.flip_Reflexive	40	0	search with cache (only 1: firstorder).	0.00636315345764	1
Coq.Classes.RelationClasses.flip_Antisymmetric	40	1	search with cache (only 1: firstorder).	0.00992798805237	2
Coq.Classes.RelationClasses.flip_PreOrder	40	1	search with cache (only 1: firstorder).	0.0255918502808	2
Coq.Classes.RelationClasses.flip_StrictOrder	40	0	search with cache (only 1: firstorder).	0.0245621204376	1
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0374250411987	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.037467956543	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00794887542725	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00787997245789	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0116019248962	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0147459506989	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	1	search with cache (only 1: firstorder).	0.044851064682	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40
Coq.Classes.Morphisms.eq_proper_proxy	40
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0139720439911	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00788903236389	1
Coq.Classes.Morphisms.pointwise_pointwise	40
Coq.Classes.Morphisms.subrelation_id_proper	40	1	search with cache (only 1: auto).	0.0114328861237	2
Coq.Classes.Morphisms.subrelation_respectful	40
Coq.Classes.Morphisms.subrelation_refl	40	0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: assumption).	0.0117108821869	3
Coq.Classes.Morphisms.subrelation_proper	40
Coq.Classes.Morphisms.proper_subrelation_proper	40
Coq.Classes.Morphisms.pointwise_subrelation	40
Coq.Classes.Morphisms.forall_subrelation	40	2.0.3	search with cache (only 1: unfold subrelation; only 1: intros; only 1: firstorder).	0.0214011669159	37
Coq.Classes.Morphisms.iff_impl_subrelation	40	3	search with cache (only 1: firstorder).	0.00988698005676	4
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.00969505310059	2
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0	search with cache (only 1: firstorder).	0.0106539726257	1
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1.3	search with cache (only 1: apply H; only 1: auto).	0.0102910995483	6
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	0	search with cache (only 1: firstorder).	0.00888776779175	1
Coq.Classes.Morphisms.flip_respectful	40	0	search with cache (only 1: firstorder).	0.0130710601807	1
Coq.Classes.Morphisms.flip1	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.0106580257416	2
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00996804237366	1
Coq.Classes.Morphisms.eq_subrelation	40
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00844717025757	1
Coq.Classes.Morphisms.proper_eq	40	0.4	search with cache (only 1: reduce; only 1: auto).	0.00904488563538	6
Coq.Classes.Morphisms.proper_proper	40
Coq.Classes.Morphisms.proper_normalizes_proper	40
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0149509906769	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2.4.0	search with cache (only 1: intros A x y z H1 H2; only 1: unfold flip in *; only 1: firstorder).	0.0144169330597	14
Coq.Classes.Morphisms.proper_sym_flip_2	40	1.1.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: firstorder).	0.11816906929	5
Coq.Classes.Morphisms.proper_sym_impl_iff	40
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder  (subst; auto)).	0.0200831890106	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder  (subst; auto)).	0.0201399326324	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder  (subst; auto)).	0.051696062088	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder  (subst; auto)).	0.0198481082916	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1	search with cache (only 1: simpl_relation).	0.0407221317291	2
Coq.Classes.RelationPairs.RelProd_Symmetric	40	1.2	search with cache (only 1: red; only 1: firstorder).	0.0370309352875	5
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.421566963196	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0243608951569	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	5	search with cache (only 1: firstorder).	0.0383129119873	14
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.0213930606842	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0215420722961	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0215039253235	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0215339660645	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.0215320587158	1
Coq.Classes.RelationPairs.RelCompFun_compat	40
Coq.Classes.DecidableClass.Decidable_sound	40
Coq.Classes.DecidableClass.Decidable_complete	40
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	8	search with cache (only 1: apply Nat.leb_le).	0.214617013931	31
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	2	search with cache (only 1: intuition).	0.0201539993286	3
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0166881084442	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0167560577393	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	3.5.0	search with cache (only 1: simpl_relation; only 1: reduce in H; only 1: firstorder).	0.602463960648	68
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.617922067642	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1	search with cache (only 1: firstorder).	0.0192549228668	2
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0	search with cache (only 1: firstorder).	0.0209228992462	1
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.0183601379395	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	0.1.0	search with cache (only 1: intro; only 1: reduce; only 1: auto).	0.0404121875763	4
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.0191218852997	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	0	search with cache (only 1: reflexivity).	0.015123128891	1
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.0239069461823	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0205810070038	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	0	search with cache (only 1: decide equality).	0.0218019485474	1
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: tauto).	0.0111699104309	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	1	search with cache (only 1: tauto).	0.0113408565521	2
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40
Coq.PArith.BinPos.Pos.double_succ	40
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0262031555176	1
Coq.PArith.BinPos.Pos.pred_succ	40
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40
Coq.PArith.BinPos.Pos.add_1_r	40	1	search with cache (only 1: now destruct p).	0.0126950740814	2
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.012619972229	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.5.0.0.0	search with cache (only 1: revert p q; only 1: Bool.destr_bool; only 1: revert p q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.0825412273407	58
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0	search with cache (only 1: trivial).	0.0110790729523	1
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: Bool.destr_bool).	0.0128200054169	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: trivial).	0.0112030506134	1
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	1.4.0	search with cache (only 1: revert q r; only 1: fix even_spec 1; only 1: Bool.destr_bool).	0.0646538734436	67
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.3.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0569958686829	42
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0329570770264	1
Coq.PArith.BinPos.Pos.square_xO	40
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0224039554596	8
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.4.4	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.297660112381	136
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0	search with cache (only 1: trivial).	0.0127589702606	1
Coq.PArith.BinPos.Pos.compare_xI_xI	40	1	search with cache (only 1: trivial).	0.0128979682922	2
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1	search with cache (only 1: easy').	0.0144698619843	2
Coq.PArith.BinPos.Pos.compare_le_iff	40
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	1.1.5.0	search with cache (only 1: unfold lt, gt; only 1: intros H; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: trivial).	0.0458037853241	32
Coq.PArith.BinPos.Pos.lt_gt	40	1	search with cache (only 1: apply gt_lt_iff).	0.0219571590424	12
Coq.PArith.BinPos.Pos.ge_le_iff	40
Coq.PArith.BinPos.Pos.ge_le	40	6.1.0	search with cache (only 1: unfold le, ge; only 1: intros; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0338568687439	15
Coq.PArith.BinPos.Pos.le_ge	40	1.3.1.0	search with cache (only 1: unfold le, ge; only 1: intros; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: trivial).	0.0307290554047	11
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0519669055939	11
Coq.PArith.BinPos.Pos.nlt_1_r	40	4	search with cache (only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.0443820953369	18
Coq.PArith.BinPos.Pos.lt_1_succ	40	3	search with cache (only 1: now destruct p).	0.107446908951	94
Coq.PArith.BinPos.Pos.le_nlt	40	1.3	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_antisym, CompOpp_iff).	0.170186042786	25
Coq.PArith.BinPos.Pos.lt_nle	40	3.1	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.365365028381	76
Coq.PArith.BinPos.Pos.lt_le_incl	40	3.3.3.2.7.10.2.0	search with cache (only 1: unfold lt, le; only 1: intros; only 1: rewrite compare_antisym; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: destruct compare; only 1: discriminate; only 1: easy; only 1: easy).	26.7138240337	28086
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	4.4	search with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.0715818405151	10
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	1.1	search with cache (only 1: apply le_lteq; only 1: intuition).	0.0284168720245	4
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40
Coq.PArith.BinPos.Pos.add_le_mono_r	40
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40
Coq.PArith.BinPos.Pos.mul_le_mono_r	40
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.018639087677	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.1.0.0.1.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.212230920792	203
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0155909061432	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40
Coq.PArith.BinPos.Pos.sub_xI_xO	40
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.1.0.1.2.0.0.1	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0897529125214	101
Coq.PArith.BinPos.Pos.min_1_l	40
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0297870635986	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.0.0.1.1	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0287449359894	7
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40
Coq.Arith.Le.le_n_0_eq	40	3.0.11.2.0	search with cache (only 1: intro H; only 1: Nat.le_elim H; only 1: Nat.bitwise; only 1: inversion H; only 1: Nat.order_nz).	0.385149002075	508
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40
Coq.Arith.Even.even_odd_dec	40	1.1.0.6.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.120796918869	95
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40	6.7.9.0.2.8.8	search with cache (only 1: revert m; only 1: Nat.induct n; only 1: simpl; only 1: intros n m; only 1: auto with arith; only 1: fix even_equiv 1; only 1: trivial).	9.59123110771	26513
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.12238907814	1
Coq.Arith.Even.even_even_plus	40	4.7.5.2.3	search with cache (only 1: revert m; only 1: Nat.induct n; only 1: trivial; only 1: fix even_equiv 1; only 1: trivial).	2.30825710297	3097
Coq.Arith.Even.odd_plus_l	40	4	search with cache (only 1: parity_binop).	0.0697259902954	11
Coq.Arith.Even.odd_plus_r	40	2	search with cache (only 1: parity_binop).	0.0816009044647	3
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0670840740204	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.220453977585	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0669479370117	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0671248435974	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0732660293579	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0675220489502	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0671849250793	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0673959255219	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0669391155243	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0673799514771	1
Coq.Arith.Even.even_mult_aux	40
Coq.Arith.Even.even_mult_l	40
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0453600883484	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0662159919739	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0738320350647	1
Coq.Arith.Even.odd_mult	40	3	search with cache (only 1: parity_binop).	0.102051973343	16
Coq.Arith.Even.odd_mult_inv_l	40	1	search with cache (only 1: parity_binop).	0.0567638874054	16
Coq.Arith.Even.odd_mult_inv_r	40	3	search with cache (only 1: parity_binop).	0.054771900177	13
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0137820243835	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0349149703979	1
Coq.Arith.Minus.minus_diag_reverse	40
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	5.6.1.0.1.1	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: revert m; only 1: intro p; only 1: now rewrite <- ?Nat.add_le_mono_r).	10.5028460026	8815
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40
Coq.Arith.Between.between_le	40	5.4.4.5.5.1.2.3	search with cache (only 1: intros n; only 1: destruct n; only 1: intros n; only 1: auto with arith; only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial).	3.1833729744	4822
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.3.0	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0195090770721	6
Coq.Arith.Between.exists_le_S	40	0.2.3.8	search with cache (only 1: induction 1; only 1: constructor; only 1: trivial; only 1: auto with arith).	0.461988925934	1224
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	13.1	search with cache (only 1: intros a b H; only 1: now PeanoNat.Nat.nzsimpl).	0.389255046844	560
Coq.Arith.Between.in_int_lt	40
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	2.5	search with cache (only 1: intros * []; only 1: auto with arith).	0.0330519676208	39
Coq.Arith.Between.in_int_Sp_q	40	6.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.0203070640564	15
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	0.6	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.0172629356384	8
Coq.Arith.Div2.odd_S2n	40
Coq.Arith.Div2.div2_double	40
Coq.Arith.Div2.div2_double_plus_one	40	0.2.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: rewrite Nat.div2_succ_double; only 1: trivial).	0.0174539089203	6
Coq.Arith.Plus.plus_assoc_reverse	40	13.0.0.0.0.2	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros; only 1: now Nat.nzsimpl; only 1: simpl; only 1: intuition).	10.0689051151	7015
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.013580083847	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0136442184448	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	3	search with cache (only 1: apply Nat.add_le_mono).	0.0129599571228	4
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	4.1.1.11	search with cache (only 1: Nat.cases n; only 1: now Nat.nzsimpl; only 1: intros n IH; only 1: now Nat.nzsimpl).	1.03927397728	640
Coq.Arith.Plus.plus_is_one	40	4.1.1.1.0.5.12.3.11.0	search with cache (only 1: destruct n; only 1: Nat.nzsimpl; only 1: now right; only 1: Nat.nzsimpl; only 1: revert m; only 1: destruct m; only 1: destruct n; only 1: now left; only 1: now left; only 1: now right).	10.9589509964	4948
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	11.3.22.7	search with cache (only 1: revert m; only 1: Nat.induct n; only 1: auto; only 1: eauto using Nat.Private_Tac.eq_trans, Nat.Private_Tac.eq_sym).	26.7063319683	19510
Coq.Arith.Lt.lt_le_S	40	2	search with cache (only 1: trivial).	0.0125949382782	3
Coq.Arith.Lt.lt_n_Sm_le	40	3	search with cache (only 1: apply le_S_n).	0.029109954834	12
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.012687921524	1
Coq.Arith.Lt.le_not_lt	40	0	search with cache (only 1: Nat.order).	0.0140528678894	1
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: Nat.order).	0.0136280059814	1
Coq.Arith.Lt.neq_0_lt	40	0	search with cache (only 1: Nat.auto').	0.0212030410767	1
Coq.Arith.Lt.lt_0_neq	40	0.0.2.0	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H1 in H; only 1: Nat.order').	0.0181851387024	6
Coq.Arith.Lt.lt_n_S	40	3	search with cache (only 1: apply Nat.lt_succ_r).	0.0136210918427	4
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0134840011597	1
Coq.Arith.Lt.S_pred	40
Coq.Arith.Lt.S_pred_pos	40
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.1.1.1.0.0.1.0.0.1.1.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	26.7608640194	47018
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.1.0.1.0.0.0.0.0.1.1.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	20.7991259098	29571
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.062479019165	51
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0126209259033	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0112738609314	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.012512922287	1
Coq.Arith.Wf_nat.gt_wf_rec	40	2	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.0183660984039	20
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.1.0.1.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.042653799057	27
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40
Coq.Arith.Compare_dec.le_gt_dec	40	6	search with cache (only 1: exact (le_lt_dec n m)).	0.0332260131836	16
Coq.Arith.Compare_dec.le_lt_eq_dec	40	0.1.1.0.0.0.8.0.0.1.1	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: intros; only 1: destruct m; only 1: now right; only 1: destruct (IHn m); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	9.41227507591	11875
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40	0.0.0.1.2.1.1.8.2	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	1.31379199028	1192
Coq.Arith.Compare_dec.gt_dec	40
Coq.Arith.Compare_dec.ge_dec	40
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0131561756134	1
Coq.Arith.Compare_dec.dec_ge	40	0	search with cache (only 1: apply Nat.le_decidable).	0.0130798816681	1
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0143210887909	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0141379833221	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0139801502228	1
Coq.Arith.Compare_dec.not_ge	40	3	search with cache (only 1: apply Nat.lt_nge).	0.0776610374451	45
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.0147938728333	2
Coq.Arith.Compare_dec.nat_compare_lt	40	1.3.7.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intros; only 1: trivial).	0.980881929398	1273
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	0.6.4.5.2.3.0.6.6.3	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: auto; only 1: simpl; only 1: easy; only 1: Nat.induct ltac:(m); only 1: simpl; only 1: easy; only 1: auto).	10.0318551064	22338
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	11	search with cache (only 1: apply Nat.compare_lt_iff).	0.0351920127869	33
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	3	search with cache (only 1: apply Nat.compare_gt_iff).	0.0315029621124	4
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	5.7.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: now induction n).	3.59266114235	3458
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.0147340297699	1
Coq.Arith.Compare_dec.leb_correct_conv	40
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.0148220062256	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.1	search with cache (only 1: intros <-; only 1: apply eq_nat_refl).	0.0313029289246	32
Coq.Arith.EqNat.eq_nat_eq	40	0	search with cache (only 1: apply eq_nat_is_eq).	0.0125579833984	1
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	5.1.4	search with cache (only 1: induction n; only 1: tauto; only 1: trivial).	0.0391800403595	81
Coq.Arith.EqNat.beq_nat_true	40	2.4.1.0.1.0.7.0.8	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: easy; only 1: easy; only 1: simpl; only 1: destruct m; only 1: Bool.destr_bool; only 1: contradiction || auto).	1.69702219963	2557
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40	2.1.3	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	0.0193810462952	9
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40	9.0.3	search with cache (only 1: induction n; only 1: auto with *; only 1: firstorder).	0.176920890808	177
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: tauto).	0.0100090503693	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	search with cache (only 1: auto).	0.00821495056152	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: auto).	0.00826191902161	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.00844192504883	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00788307189941	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00799012184143	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00810480117798	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.00825381278992	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0149440765381	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	0	search with cache (only 1: auto).	0.00842690467834	1
Coq.Arith.PeanoNat.Nat.max_l	40	0.2.3.2.0.4.1.0.3.2	search with cache (only 1: induction n; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: auto).	4.18390393257	9892
Coq.Arith.PeanoNat.Nat.max_r	40	2.3.5.2.1.0.2.1.3	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.00804185867	11754
Coq.Arith.PeanoNat.Nat.min_l	40	0.2.0.7.2.1.3	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: induction 1; only 1: auto; only 1: apply f_equal, IHn, le_S_n; only 1: auto).	5.1460108757	10079
Coq.Arith.PeanoNat.Nat.min_r	40	1.1.3.1.1.1.1.0.4.0.4	search with cache (only 1: induction n; only 1: simpl; only 1: destruct m; only 1: auto; only 1: easy; only 1: destruct m; only 1: auto; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.68636798859	8475
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	5.10	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	0.0447881221771	123
Coq.Arith.PeanoNat.Nat.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0095100402832	1
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2	search with cache (only 1: reflexivity).	0.0199091434479	3
Coq.Arith.PeanoNat.Nat.square_spec	40	4	search with cache (only 1: now rewrite <- ?add_le_mono_l).	0.343799114227	76
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	3.1	search with cache (only 1: fix even_spec 1; only 1: auto).	0.0677461624146	58
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	7	search with cache (only 1: inversion 1).	0.0156450271606	22
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0111980438232	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0113151073456	2
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.1.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0286750793457	14
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40	0.2.0	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0118880271912	5
Coq.Arith.PeanoNat.Nat.double_twice	40	3.0.0.0.0	search with cache (only 1: simpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now rewrite !add_0_r).	0.0975978374481	13
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	5.5.1.0.2	search with cache (only 1: nzinduct n; only 1: reflexivity; only 1: split; only 1: trivial; only 1: trivial).	0.522027015686	1113
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40	1.7	search with cache (only 1: fix le_div2 1; only 1: now induction n).	2.02811980247	27
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	6.3.4.4	search with cache (only 1: intro; only 1: intro; only 1: fix le_div2 1; only 1: now induction n).	1.31689214706	1803
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	4.5.0	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: auto).	2.6833050251	347
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	0.11.5	search with cache (only 1: intros x y z; only 1: fix le_div2 1; only 1: auto).	0.432146072388	788
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40	1.3.3.3	search with cache (only 1: intros x y z; only 1: intros n m p; only 1: fix le_div2 1; only 1: now induction n).	0.405050992966	335
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40	1.5.7	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: now induction n).	0.0957908630371	144
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.2	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: order).	0.0135018825531	5
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: reflexivity).	0.0102159976959	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	1	search with cache (only 1: inversion H).	0.0120069980621	2
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	6.0	search with cache (only 1: intros x y z; only 1: Nat.order_nz).	0.0220210552216	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	12	search with cache (only 1: apply Nat.succ_lt_mono).	0.1600689888	49
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0151259899139	1
Coq.Arith.Gt.gt_S	40	2.4.6.3	search with cache (only 1: intro; only 1: apply Nat.lt_eq_cases; only 1: apply Nat.lt_succ_r; only 1: trivial).	0.44278883934	233
Coq.Arith.Gt.gt_pred	40	6	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.018217086792	7
Coq.Arith.Gt.le_not_gt	40	7	search with cache (only 1: apply Nat.le_ngt).	0.0352239608765	8
Coq.Arith.Gt.gt_not_le	40
Coq.Arith.Gt.le_S_gt	40	3	search with cache (only 1: trivial).	0.016254901886	4
Coq.Arith.Gt.gt_S_le	40	12	search with cache (only 1: apply Nat.lt_succ_r).	0.165807962418	46
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0144817829132	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0162801742554	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40	7	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0177888870239	8
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0146989822388	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40
Coq.Logic.JMeq.JMeq_trans	40
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00948286056519	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.009516954422	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.010498046875	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0157661437988	3
Coq.Logic.JMeq.JMeq_congr	40
Coq.Logic.JMeq.JMeq_eq_dep_id	40	4.2.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0108678340912	9
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00961112976074	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.1	search with cache (only 1: intros * []; only 1: trivial).	0.0105271339417	6
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.5.0.4.3	search with cache (only 1: split; only 1: intros; only 1: auto; only 1: destruct b as (a1, a2, []); only 1: auto).	0.0403690338135	220
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40
Coq.Logic.Classical_Prop.not_imply_elim	40	4.1.6.0	search with cache (only 1: intros P H; only 1: destruct (classic P); only 1: auto; only 1: intuition).	0.139649868011	300
Coq.Logic.Classical_Prop.not_imply_elim2	40	6.0.0.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: apply NNPP; only 1: auto).	0.0540499687195	65
Coq.Logic.Classical_Prop.imply_to_or	40
Coq.Logic.Classical_Prop.imply_to_and	40	3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: apply NNPP; only 1: apply NNPP; only 1: apply NNPP; only 1: apply NNPP; only 1: tauto).	0.0440261363983	17
Coq.Logic.Classical_Prop.or_to_imply	40	2	search with cache (only 1: tauto).	0.0301840305328	20
Coq.Logic.Classical_Prop.not_and_or	40	1.1.1.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: elim (classic P); only 1: auto; only 1: auto; only 1: auto).	0.0758609771729	64
Coq.Logic.Classical_Prop.or_not_and	40
Coq.Logic.Classical_Prop.not_or_and	40	1	search with cache (only 1: tauto).	0.0437471866608	40
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0189440250397	1
Coq.Logic.Classical_Prop.imply_and_or	40	2	search with cache (only 1: tauto).	0.101714134216	143
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.0200500488281	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	5.2	search with cache (only 1: intro x; only 1: firstorder  (subst; auto)).	0.0862181186676	11
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	3.0.0.0.0.1.4.1.0	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder; only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: firstorder).	1.9882619381	593
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	1.0.0.3	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.087954044342	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	1.0.0.0.1.0.0.1.0.0.0.0.0.0.1.0.1.0.0.0.1.0.0.0.0.1.2	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	10.506319046	13505
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	1.0.0.8.1.0.0.10	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: intro x; only 1: firstorder; only 1: exists f; only 1: firstorder).	11.3158559799	3935
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.0.13.1.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0523779392242	166
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.07231092453	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	1.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00938296318054	7
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	1.3.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00833201408386	7
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.1.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00872278213501	4
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00836801528931	4
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	1	search with cache (only 1: reflexivity).	0.00638198852539	2
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00630903244019	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40
Coq.Logic.HLevels.false_hprop	40
Coq.Logic.HLevels.true_hprop	40
Coq.Logic.HLevels.not_hprop	40
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	14.1.0.0.0.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: eauto; only 1: firstorder).	5.10242199898	8625
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40
Coq.Logic.EqdepFacts.eq_dep_sym	40
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00925898551941	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40
Coq.Logic.EqdepFacts.f_eq_dep	40	0.4.0	search with cache (only 1: intros A x P H y H0; only 1: destruct 1; only 1: reflexivity).	0.0111081600189	7
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	3.4.0	search with cache (only 1: intros A C h1 h2; only 1: intros * []; only 1: trivial).	0.0118429660797	20
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.00904107093811	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40
Coq.Logic.Decidable.dec_True	40	0.1	search with cache (only 1: constructor; only 1: auto).	0.00363183021545	3
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00374102592468	2
Coq.Logic.Decidable.dec_or	40	0.4	search with cache (only 1: unfold decidable; only 1: tauto).	0.0193498134613	67
Coq.Logic.Decidable.dec_and	40	0.2	search with cache (only 1: unfold decidable; only 1: tauto).	0.0146498680115	11
Coq.Logic.Decidable.dec_not	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00661301612854	3
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0103180408478	2
Coq.Logic.Decidable.dec_iff	40
Coq.Logic.Decidable.not_not	40	1.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.00522613525391	4
Coq.Logic.Decidable.not_or	40	2.0.0	search with cache (only 1: unfold not; only 1: intros; only 1: auto).	0.00536608695984	12
Coq.Logic.Decidable.not_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00818991661072	2
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0111241340637	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00752806663513	2
Coq.Logic.Decidable.not_iff	40	2.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0275192260742	13
Coq.Logic.Decidable.not_true_iff	40	0.0.5	search with cache (only 1: split; only 1: auto; only 1: auto).	0.00403094291687	8
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00367498397827	1
Coq.Logic.Decidable.not_not_iff	40	2.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00673580169678	4
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.008957862854	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0138199329376	11
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0612897872925	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010330915451	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0107469558716	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0118570327759	2
Coq.Logic.Decidable.not_or_iff	40	0.0.0.1.2.0.0	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: intros [? ?]; only 1: intros [?| ?]; only 1: auto; only 1: auto).	0.00637698173523	18
Coq.Logic.Decidable.not_and_iff	40	3.3	search with cache (only 1: intros; only 1: tauto).	0.00801515579224	15
Coq.Logic.Decidable.not_imp_iff	40
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0141270160675	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	5	search with cache (only 1: firstorder).	0.0290110111237	6
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	3.0.1.0.1	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.111972093582	10
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	4.1.1.5	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: intuition_in).	1.41489195824	200
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	1.0.2.4	search with cache (only 1: destruct s; only 1: auto; only 1: simpl; only 1: ok).	0.678166151047	47
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	4	search with cache (only 1: exact (rrmatch _ _ _)).	0.0260970592499	5
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	3.1	search with cache (only 1: unfold add; only 1: now autorew).	0.0666790008545	6
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.0315449237823	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.028263092041	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	0	search with cache (only 1: eauto with *).	0.0347230434418	1
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	10	search with cache (only 1: firstorder).	0.0308220386505	21
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0310580730438	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	6	search with cache (only 1: firstorder).	0.033392906189	7
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	1.0.0.1.1.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.382228851318	211
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.1.0.1.0.1.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0844788551331	21
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	1.1.0.0.0	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: auto; only 1: auto).	0.0445730686188	7
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	3.0	search with cache (only 1: intros; only 1: auto).	0.0367450714111	5
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	1.0	search with cache (only 1: intro; only 1: auto).	0.0375869274139	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.0.0.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: now split; only 1: simpl; only 1: auto).	0.04984998703	5
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	2.7.5	search with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.193530082703	175
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.4.3.0	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: auto_tc).	0.064642906189	31
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	4.3.3.0	search with cache (only 1: rewrite partition_spec; only 1: unfold filter; only 1: simpl; only 1: firstorder).	0.11833691597	114
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.5.6.0.6	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: firstorder; only 1: auto_tc; only 1: auto_tc).	1.29870820045	1143
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.7.6.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hy; only 1: rewrite Hx; only 1: intuition).	3.63278102875	1576
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	0.0.3.0	search with cache (only 1: intros; only 1: split; only 1: trivial; only 1: trivial).	0.12752199173	7
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.116169214249	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	9	search with cache (only 1: easy).	0.109223842621	10
Coq.MSets.MSetPositive.PositiveSet.mem_node	40	2.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.11977100372	794
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	1.0	search with cache (only 1: intros; only 1: now rewrite ?Positive_as_DT.square_xO).	0.132951974869	3
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	1.5.1.5.1.5.11.10	search with cache (only 1: intros n m p; only 1: induction p as [p IHp| p IHp| ]; only 1: intros; only 1: now subst; only 1: intros; only 1: now subst; only 1: intros; only 1: now subst).	26.5272967815	37688
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	0.0.0.0.1.1.0.1.1.1.3	search with cache (only 1: intros n m; only 1: destruct n, m; only 1: intuition; only 1: easy'; only 1: now split; only 1: easy'; only 1: easy'; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	8.98394799232	4271
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.2.3	search with cache (only 1: intros [| ] [| ]; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.3112180233	52
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40	0.1.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: unfold lt; only 1: trivial).	0.762040138245	474
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40	3.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.249157905579	122
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.128946065903	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	0.0.0.7	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.179299116135	50
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.126031160355	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.128888845444	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.130191087723	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40	3.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.483978033066	228
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	3.8	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.23051691055	157
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.1	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: trivial).	0.120759010315	4
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40	3.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.424201011658	260
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	2.8.0	search with cache (only 1: repeat red; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.04275584221	498
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40	2.11	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.07826304436	763
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40	2.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	3.03642916679	655
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40	0.0.6	search with cache (only 1: fix sqrtrem_spec 1; only 1: unfold PositiveOrderedTypeBits.eq, PositiveOrderedTypeBits.lt; only 1: auto with *).	0.224025011063	53
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.5.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.131986141205	14
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40	0.0.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: unfold PositiveOrderedTypeBits.eq, PositiveOrderedTypeBits.lt; only 1: auto with *).	0.246412038803	61
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	3.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.74445080757	1434
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40	2.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.286195993423	161
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40	0.0.7	search with cache (only 1: fix sqrtrem_spec 1; only 1: unfold PositiveOrderedTypeBits.eq, PositiveOrderedTypeBits.lt; only 1: auto with *).	0.167996168137	42
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40	4.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	2.49950909615	1439
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40	3.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.15864706039	638
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40	5.15	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.49763298035	1268
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40	3.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.11890721321	609
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40	0.0.9	search with cache (only 1: fix sqrtrem_spec 1; only 1: unfold E.eq, E.lt; only 1: auto with *).	1.29704403877	420
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40	3.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	1.50066399574	716
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40	4.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	5.00521802902	2505
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40	3.12	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.842102050781	552
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40	5.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	17.6100809574	8842
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	17.25	search with cache (only 1: intro; only 1: now rewrite H).	2.20501995087	3930
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto).	0.102717876434	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40
Coq.MSets.MSetFacts.WFactsOn.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.104182958603	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.103020191193	2
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.103057146072	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.102107048035	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.109292030334	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.10384106636	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.110371112823	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.12.9	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	1.78155899048	901
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.18097281456	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	1.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.102578163147	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	0	search with cache (only 1: intuition).	0.11186504364	1
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	0	search with cache (only 1: intuition).	0.110435962677	1
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	5	search with cache (only 1: intuition).	0.120469093323	6
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	0	search with cache (only 1: intuition).	0.107421159744	1
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	4.0	search with cache (only 1: rewrite singleton_spec; only 1: now rewrite ?BinPos.Pos.square_xO).	0.105697870255	6
Coq.MSets.MSetFacts.WFactsOn.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.114919900894	3
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	0	search with cache (only 1: intuition).	0.110178947449	1
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	13.18	search with cache (only 1: red; only 1: intuition).	1.08730101585	566
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.2.0.7	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.38489794731	280
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	0.1.2.0.7.0.2.0.0	search with cache (only 1: repeat red; only 1: intros s s' E; only 1: intros; only 1: rewrite union_spec; only 1: generalize (is_empty_iff s); only 1: rewrite H  at 1; only 1: rewrite E; only 1: rewrite H  at 1; only 1: intuition).	9.68029904366	3980
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	1.0.0.0.3.6	search with cache (only 1: unfold Equal, Subset; only 1: constructor; only 1: intros s s' E; only 1: auto; only 1: intros s s' E; only 1: auto).	0.752193212509	164
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	3.11.1.0.5	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	17.8908040524	1358
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	7.7	search with cache (only 1: simpl_relation; only 1: firstorder).	1.32719302177	520
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.8.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: auto).	0.739048957825	35
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.5.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.157159090042	8
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	26.7.2.21	search with cache (only 1: intro; only 1: intros; only 1: <Coq.Strings.String.t_eqb>; only 1: eauto with set).	38.0526251793	39341
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	10.14.7.0.0	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H s s' H0; only 1: intros E; only 1: rewrite diff_spec; only 1: intuition).	15.618571043	13034
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.236522912979	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.1.6.4	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.710525035858	191
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	2	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0887479782104	3
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	1	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0899250507355	2
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	14	search with cache (only 1: firstorder).	0.486736059189	75
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	1	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.0978848934174	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	11	search with cache (only 1: firstorder).	0.197190999985	33
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0.0.3.10	search with cache (only 1: red; only 1: constructor; only 1: auto; only 1: auto).	0.872390985489	170
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	1	search with cache (only 1: fsetdec).	0.121930122375	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.104653120041	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	7	search with cache (only 1: fsetdec).	0.139883995056	8
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	5	search with cache (only 1: fsetdec).	0.133748054504	6
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	11	search with cache (only 1: fsetdec).	0.507933139801	60
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	7	search with cache (only 1: fsetdec).	0.408946990967	8
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	4	search with cache (only 1: auto).	0.0913429260254	5
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	35	search with cache (only 1: firstorder).	7.33473610878	1242
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0.9	search with cache (only 1: red; only 1: fsetdec).	0.192831039429	21
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	14	search with cache (only 1: fsetdec).	0.548538923264	121
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	1	search with cache (only 1: fsetdec).	0.168375968933	2
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	3	search with cache (only 1: fsetdec).	0.371388912201	4
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	1.0.0.1.0	search with cache (only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: fsetdec).	0.328491926193	7
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	10	search with cache (only 1: fsetdec).	0.510522842407	63
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	1	search with cache (only 1: fsetdec).	0.308506011963	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	3.0.0.1.0	search with cache (only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition; only 1: fsetdec).	0.411977052689	9
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	15	search with cache (only 1: fsetdec).	0.521795034409	91
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.570975065231	2
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	3	search with cache (only 1: fsetdec).	0.19496011734	4
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	1	search with cache (only 1: fsetdec).	0.165899991989	2
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	2	search with cache (only 1: fsetdec).	0.387649059296	3
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.360949993134	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	2	search with cache (only 1: fsetdec).	0.395509958267	3
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	1	search with cache (only 1: fsetdec).	0.175836086273	2
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.355412960052	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	2	search with cache (only 1: fsetdec).	0.604758024216	3
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	2	search with cache (only 1: fsetdec).	0.52724814415	3
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	1	search with cache (only 1: fsetdec).	0.11185503006	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	1	search with cache (only 1: fsetdec).	0.111103057861	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	1	search with cache (only 1: fsetdec).	0.140339851379	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	1	search with cache (only 1: fsetdec).	0.37649679184	2
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.142523050308	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.162838935852	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.158660173416	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	0	search with cache (only 1: fsetdec).	0.324489831924	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	14	search with cache (only 1: fsetdec).	0.498058080673	89
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	1	search with cache (only 1: fsetdec).	0.159673929214	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	1	search with cache (only 1: fsetdec).	0.367311000824	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.357421875	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	8	search with cache (only 1: fsetdec).	0.4002430439	9
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.413550853729	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	1	search with cache (only 1: fsetdec).	0.383011817932	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	7.12	search with cache (only 1: red; only 1: fsetdec).	1.68474888802	335
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.321305036545	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	1	search with cache (only 1: fsetdec).	0.131315946579	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	2	search with cache (only 1: fsetdec).	0.131262779236	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	1	search with cache (only 1: fsetdec).	0.27206993103	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	1	search with cache (only 1: fsetdec).	0.113583087921	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	1	search with cache (only 1: fsetdec).	0.135929822922	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.146459817886	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	1	search with cache (only 1: fsetdec).	0.165089130402	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.118587017059	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	1	search with cache (only 1: fsetdec).	0.459944963455	2
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	1	search with cache (only 1: fsetdec).	0.201498985291	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: fsetdec).	0.408189058304	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	1	search with cache (only 1: fsetdec).	0.329097032547	2
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	0.12	search with cache (only 1: red; only 1: fsetdec).	0.623309850693	60
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.12	search with cache (only 1: red; only 1: fsetdec).	1.96012401581	60
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	1.19	search with cache (only 1: expAdd; only 1: fsetdec).	4.27576303482	437
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	6.19	search with cache (only 1: expAdd; only 1: fsetdec).	6.05290293694	957
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.19	search with cache (only 1: expAdd; only 1: fsetdec).	3.77449178696	377
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	1.69458198547	21
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	2.2.17.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: firstorder; only 1: auto).	31.6614761353	13188
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	3.5.1.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: exact eq_equivalence; only 1: auto with set).	2.39727592468	236
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.0.1	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.104558944702	4
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	7.1.9.1.2.1.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	11.6593871117	15765
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	1.17.14.1	search with cache (only 1: intros; only 1: generalize (F.is_empty_iff s); only 1: rewrite <- union_inter_cardinal; only 1: intuition).	4.2712688446	3767
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0	search with cache (only 1: intros; only 1: auto with *).	0.10804605484	2
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: fsetdec; only 1: expAdd; only 1: fsetdec).	0.564501047134	139
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with *).	0.24688911438	39
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.107637166977	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.106491804123	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	6	search with cache (only 1: firstorder).	0.0867900848389	7
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.1.1.1.24	search with cache (only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	1.54724407196	567
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	1.0.9.0.13	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: firstorder; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	5.7399148941	645
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.203519821167	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	0.0.1.6	search with cache (only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.220769882202	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	8	search with cache (only 1: auto with *).	0.157412052155	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	11.8	search with cache (only 1: generalize (mem_iff (union s s') x), (mem_iff s x), (mem_iff s' x), (union_spec s s' x); only 1: intuition).	16.0278089046	4248
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.239580154419	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.170011043549	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.364175081253	23
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	8	search with cache (only 1: auto with set).	0.105331897736	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: Dec.fsetdec).	0.134727954865	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with *).	0.14378285408	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	4	search with cache (only 1: auto with set).	0.103642940521	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	2.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.115618944168	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	7	search with cache (only 1: auto with *).	0.172720909119	53
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	5	search with cache (only 1: auto with *).	0.123469829559	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	7	search with cache (only 1: auto with set).	0.186300039291	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.10031914711	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	6.2	search with cache (only 1: <Coq.Strings.String.t_eqb>; only 1: auto with set).	0.13720202446	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0	search with cache (only 1: auto with set relations).	0.104796886444	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	1.0	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.159272909164	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	0.0.1.9	search with cache (only 1: generalize (mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	1.06164693832	160
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	3	search with cache (only 1: auto with set relations).	0.104362010956	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	3.0.1.0.3.19	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto with relations; only 1: intuition; only 1: now destruct Zeq_bool).	5.07191109657	2733
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	1.13	search with cache (only 1: generalize (union_inter_cardinal s s'); only 1: auto with set).	0.630708932877	114
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	1	search with cache (only 1: auto with set).	0.120495080948	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	1	search with cache (only 1: auto with set).	0.103287935257	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	1	search with cache (only 1: auto with set).	0.102121829987	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0988390445709	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	1	search with cache (only 1: auto with set).	0.101256132126	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	1	search with cache (only 1: auto with set).	0.121034860611	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	1	search with cache (only 1: auto with set).	0.276036977768	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.09845495224	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.202443122864	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	8	search with cache (only 1: auto with set).	0.121980905533	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.102886199951	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	1	search with cache (only 1: auto with set).	0.101147174835	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	4	search with cache (only 1: auto with set).	0.12877202034	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0990481376648	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.121839046478	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.102138996124	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.104447126389	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.100045919418	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	5	search with cache (only 1: auto with set).	0.106688976288	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.241866111755	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	1	search with cache (only 1: auto with set).	0.100780963898	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	8	search with cache (only 1: auto with set).	0.122213125229	14
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	4	search with cache (only 1: auto with set relations).	0.103269100189	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0984539985657	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	1	search with cache (only 1: auto with set).	0.0997290611267	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.100579977036	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40	0.0.4.0.0.0.1.3	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	1.109416008	606
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.0.0.0.0.8.0	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set).	0.7748670578	763
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0.7	search with cache (only 1: intros x y z; only 1: auto with set).	0.116570949554	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.4.0.1.7	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	1.78102302551	1039
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.3.0.0.9	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change_no_check S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: auto with *; only 1: auto with *; only 1: auto).	1.57345604897	841
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	0.1.1	search with cache (only 1: intros; only 1: generalize (union_inter_cardinal s s'); only 1: auto with set).	0.126863956451	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	11	search with cache (only 1: solve_proper).	0.766735076904	102
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	5	search with cache (only 1: intuition).	0.137959003448	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.101924180984	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.4.0.3.5.0.5	search with cache (only 1: red; only 1: intros; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: rewrite 2!filter_spec; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	5.01880788803	2461
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.114216089249	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40	2.6.8.4.0	search with cache (only 1: intros; only 1: apply <- exists_spec; only 1: red; only 1: firstorder; only 1: auto).	1.44386196136	1500
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	1.0	search with cache (only 1: intros; only 1: constructor).	0.0845670700073	3
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.2.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.239861965179	5
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	4	search with cache (only 1: now rewrite ?BinPos.Pos.square_xO).	0.081433057785	5
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	0	search with cache (only 1: fsetdec).	0.163191080093	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0.2	search with cache (only 1: intros n m; only 1: fsetdec).	1.54240894318	13
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	6.0	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.72797203064	29
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	1.1	search with cache (only 1: intros; only 1: intuition).	0.0911240577698	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.129371166229	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.444096803665	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.391508102417	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.223669052124	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0.0	search with cache (only 1: intros x y z; only 1: fsetdec).	0.243592977524	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0.15.5.0	search with cache (only 1: intros; only 1: intuition; only 1: vm_compute in H; only 1: fsetdec).	34.6486418247	10169
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.434741973877	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	13.14.12.0.4	search with cache (only 1: intros s s' E; only 1: intros x y z; only 1: firstorder; only 1: vm_compute in H; only 1: firstorder).	12.2998809814	15024
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3	search with cache (only 1: fsetdec).	0.356234073639	4
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.165048122406	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.137007951736	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	0.4.13.6	search with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: destr_bool).	2.36244177818	2630
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.2.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.0289540290833	5
Coq.MSets.MSetGenTree.Props.gt_leaf	40	1	search with cache (only 1: inversion 1).	0.0289189815521	11
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	1.1.8.0.1	search with cache (only 1: red; only 1: intros x y z; only 1: intuition_in; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.5112259388	1613
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	1.1.4.1.3	search with cache (only 1: red; only 1: intros x y z; only 1: intuition_in; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.665979862213	254
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	4.1.0.1	search with cache (only 1: red; only 1: intros x y z; only 1: intros; only 1: order).	0.0515339374542	39
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	1.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.021066904068	4
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	4.1.3	search with cache (only 1: red; only 1: intros; only 1: order).	0.0940680503845	89
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40
Coq.MSets.MSetGenTree.Props.empty_spec	40	4	search with cache (only 1: firstorder).	0.0251688957214	5
Coq.MSets.MSetGenTree.Props.empty_ok	40	2	search with cache (only 1: auto).	0.0161831378937	3
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.1.0.0.0.0.3	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.758280038834	459
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0310051441193	5
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	4	search with cache (only 1: firstorder).	0.0274980068207	5
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	3.6	search with cache (only 1: compute in *; only 1: firstorder).	0.0373408794403	24
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	3	search with cache (only 1: firstorder).	0.0529420375824	29
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	5.0.2	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto).	0.0811998844147	30
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40	2.0.4	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: destr_bool).	0.111575126648	39
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	0.4.4	search with cache (only 1: intros; only 1: apply <- isok_iff; only 1: auto).	0.0477981567383	41
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.2	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0215399265289	4
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	0.0.1.1	search with cache (only 1: intros; only 1: constructors; only 1: auto; only 1: auto).	0.0240049362183	6
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	3.2	search with cache (only 1: unfold elements; only 1: firstorder).	0.0182740688324	7
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	2.0	search with cache (only 1: unfold elements; only 1: auto).	0.0200309753418	4
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0175020694733	1
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	2	search with cache (only 1: assumption).	0.0159549713135	3
Coq.MSets.MSetList.MakeRaw.mem_spec	40	6.0.1	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: auto with *).	0.0709631443024	28
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	1.0.4.0.2.1.0.3.0.1.4.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intro l; only 1: constructor; only 1: simpl; only 1: intuition; only 1: inv; only 1: elim_compare x a; only 1: intuition; only 1: auto; only 1: auto).	18.5471408367	12891
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	0	search with cache (only 1: reflexivity).	0.0165350437164	1
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.108406066895	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40	12.5	search with cache (only 1: fix even_spec 1; only 1: trivial).	3.56157302856	1932
Coq.MSets.MSetList.MakeRaw.subset_spec	40	9.3.6	search with cache (only 1: fix even_spec 1; only 1: destr_bool; only 1: auto).	6.00752210617	3653
Coq.MSets.MSetList.MakeRaw.empty_ok	40	1	search with cache (only 1: reflexivity).	0.0167920589447	2
Coq.MSets.MSetList.MakeRaw.empty_spec	40
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40	4.3	search with cache (only 1: fix even_spec 1; only 1: destr_bool).	0.0249381065369	9
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	3.1	search with cache (only 1: intros; only 1: reflexivity).	0.0261969566345	6
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	1.1.4.9.1.0.3	search with cache (only 1: induction s; only 1: constructor; only 1: intro H; only 1: inv; only 1: constructor; only 1: tauto; only 1: tauto).	0.542918920517	600
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.6.1	search with cache (only 1: intros [| x s]; only 1: now destruct 1; only 1: simpl; only 1: easy).	0.234032154083	62
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	3.1.1	search with cache (only 1: intros x y z; only 1: intros; only 1: reflexivity).	0.0218629837036	8
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.0178489685059	1
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40	3.5	search with cache (only 1: fix even_spec 1; only 1: auto with *).	0.196501016617	42
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	0.1	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.040431022644	3
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.130836009979	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0.2.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: apply Build_preorder; only 1: exact (rt_refl A R); only 1: exact (rt_trans A R)).	0.0138449668884	8
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40
Coq.Relations.Operators_Properties.clos_rtn1_step	40
Coq.Relations.Operators_Properties.clos_rt1n_rt	40
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40
Coq.Sets.Uniset.leb_refl	40
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	1.0.0.1	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00592803955078	6
Coq.Sets.Uniset.seq_refl	40
Coq.Sets.Uniset.seq_trans	40
Coq.Sets.Uniset.seq_sym	40	0.0.0.0	search with cache (only 1: unfold seq; only 1: destruct x; only 1: destruct y; only 1: auto).	0.00562500953674	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0046169757843	3
Coq.Sets.Uniset.union_empty_right	40
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40
Coq.Sets.Uniset.seq_left	40	0.0.0.1.0.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.0451281070709	68
Coq.Sets.Uniset.seq_right	40	1.0.0.2.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.105134010315	89
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	8	search with cache (only 1: split).	0.0225400924683	21
Coq.Sets.Multiset.meq_trans	40	6.1	search with cache (only 1: unfold meq; only 1: eauto using PeanoNat.Nat.Private_Tac.eq_trans, PeanoNat.Nat.Private_Tac.eq_sym).	0.0692911148071	45
Coq.Sets.Multiset.meq_sym	40	0.2.3.0.2.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: symmetry; only 1: elim H; only 1: reflexivity).	0.0655188560486	94
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0166311264038	3
Coq.Sets.Multiset.munion_empty_right	40	5.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: trivial).	0.0210709571838	16
Coq.Sets.Multiset.munion_comm	40
Coq.Sets.Multiset.munion_ass	40	0.0.0.0.1.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0237460136414	8
Coq.Sets.Multiset.meq_left	40	0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: unfold munion; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0232410430908	6
Coq.Sets.Multiset.meq_right	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0264580249786	10
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.088830947876	31
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	7	search with cache (only 1: auto with sets).	0.0191349983215	8
Coq.Sets.Integers.le_antisym	40	0.6	search with cache (only 1: red; only 1: PeanoNat.Nat.order).	0.0228388309479	8
Coq.Sets.Integers.le_trans	40	2.7.6	search with cache (only 1: red; only 1: intros P H0 HS; only 1: PeanoNat.Nat.order).	0.21825504303	349
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40	2	search with cache (only 1: split).	0.0168011188507	3
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40
Coq.Sets.Relations_1_facts.contains_is_preorder	40
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	2.0.1.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation; only 1: intros A x P H y H0; only 1: intuition).	0.0201468467712	17
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0124111175537	2
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	3.2	search with cache (only 1: intros; only 1: intuition).	0.0096218585968	7
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	3.2	search with cache (only 1: intros; only 1: intuition).	0.0110697746277	15
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40
Coq.Sets.Permut.comm_left	40
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.5.8.0.9.4.1	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: destruct 1; only 1: easy; only 1: auto with sets).	1.55663180351	3506
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	9.27.19	search with cache (only 1: intros A x y H'; only 1: elim H'; only 1: firstorder).	6.41832709312	28569
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40
Coq.Sets.Powerset.Power_set_Inhabited	40
Coq.Sets.Powerset.Inclusion_is_an_order	40
Coq.Sets.Powerset.Inclusion_is_transitive	40
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	1.3.1.0	search with cache (only 1: intro X; only 1: intro A; only 1: intros; only 1: auto with sets).	0.013062953949	9
Coq.Sets.Powerset.Union_increases_l	40
Coq.Sets.Powerset.Union_increases_r	40
Coq.Sets.Powerset.Intersection_decreases_l	40
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.00990104675293	6
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40	5.11.0	search with cache (only 1: intros; only 1: apply NNPP; only 1: firstorder).	3.74284291267	7212
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	1.1.1.1.0.1	search with cache (only 1: intros x H'0; only 1: intros; only 1: red; only 1: red; only 1: red; only 1: auto with sets).	0.289191961288	228
Coq.Sets.Classical_sets.Subtract_inv	40	3.0	search with cache (only 1: unfold Subtract at 1; only 1: firstorder).	0.0261039733887	5
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	0.2.3.1.2	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	1.45427203178	888
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.4.5.1.4	search with cache (only 1: intros X x H'; only 1: red; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	1.43294787407	2591
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.1.2.1	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x H'0; only 1: elim H'0; only 1: auto with sets).	0.143429994583	31
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	2.0.0.0.0.0.3.2.0.1.1	search with cache (only 1: intros X x H'; only 1: unfold Add; only 1: red; only 1: intros t H'1; only 1: elim H'1; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	1.56972503662	2667
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0141608715057	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40
Coq.Sets.Powerset_facts.less_than_empty	40	2.0	search with cache (only 1: intro X; only 1: auto with sets).	0.0129969120026	4
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0155851840973	1
Coq.Sets.Powerset_facts.Union_associative	40
Coq.Sets.Powerset_facts.Union_idempotent	40	1	search with cache (only 1: auto  6 with sets).	0.0195069313049	2
Coq.Sets.Powerset_facts.Union_absorbs	40	2	search with cache (only 1: auto  7 with sets).	0.0223410129547	3
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.243801116943	313
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.141353845596	184
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros A B C; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.570106983185	496
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.0.3	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.0745549201965	35
Coq.Sets.Powerset_facts.Non_disjoint_union	40
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40
Coq.Sets.Powerset_facts.incl_add	40	2.1.1.0	search with cache (only 1: intros A x; only 1: intros; only 1: unfold Add; only 1: auto with sets).	0.0205068588257	12
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	0.0.0.0.2	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.0749468803406	31
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	4.2.0	search with cache (only 1: intros X H'; only 1: intro A; only 1: auto using Empty_set_zero with sets).	0.01051902771	9
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0120091438293	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0119268894196	7
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	2.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0436708927155	47
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40
Coq.Sets.Constructive_sets.Extension	40
Coq.Sets.Constructive_sets.Noone_in_empty	40
Coq.Sets.Constructive_sets.Included_Empty	40	2.0.2.2	search with cache (only 1: intros; only 1: red; only 1: red; only 1: destruct 1).	0.0098512172699	10
Coq.Sets.Constructive_sets.Add_intro1	40
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00878381729126	2
Coq.Sets.Constructive_sets.Inhabited_add	40
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40
Coq.Sets.Constructive_sets.not_Empty_Add	40
Coq.Sets.Constructive_sets.Singleton_inv	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00871181488037	2
Coq.Sets.Constructive_sets.Singleton_intro	40	0.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto with sets).	0.00901198387146	3
Coq.Sets.Constructive_sets.Union_inv	40
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40
Coq.Sets.Constructive_sets.Couple_inv	40
Coq.Sets.Constructive_sets.Setminus_intro	40	3.2.0	search with cache (only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.00956106185913	11
Coq.Sets.Constructive_sets.Strict_Included_intro	40	0.0.0.6.2	search with cache (only 1: intros A B []; only 1: red; only 1: split; only 1: assumption; only 1: assumption).	0.0700931549072	315
Coq.Sets.Constructive_sets.Strict_Included_strict	40
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40