
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rplus_morph_Proper	40	23.2.10.7	search with cache (only 1: intros y; only 1: intros h1 h2; only 1: intros w1; only 1: firstorder  (subst; auto)).	7.09314608574	9150
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rtimes_morph_Proper	40	21.16	search with cache (only 1: intros ? H; only 1: CRelationClasses.simpl_crelation).	2.93753004074	4712
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.ropp_morph_Proper	40	26.13	search with cache (only 1: intros w; only 1: firstorder).	1.82945108414	3815
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rle_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rlt_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.rminus_morph_Proper	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rneq_symm	40	18.4.6	search with cache (only 1: intros w1; only 1: intros x y H; only 1: intuition).	0.493574857712	953
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_l	40	38.16	search with cache (only 1: intros; only 1: firstorder).	0.987658023834	2926
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0172591209412	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0204019546509	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_comm	40	4.4.2	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0775671005249	79
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0208117961884	2
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_comm	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0184760093689	3
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rminus_eq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_cancel_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_em	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Req_dne	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_eq	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_lt_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_le_trans	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_gt_cases	40	0.3.4.0.0.0.1.0.1.5.0.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: destruct (Rlt_trichotomy n m) as [H| [H| H]]; only 1: left; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H; only 1: left; only 1: rewrite H; only 1: apply Rle_refl; only 1: rewrite Rlt_le_neq in H; only 1: right; only 1: now split).	24.3703250885	12274
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_neq	40	1.0.0.3.0.0	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: apply Rneq_symm; only 1: apply Rneq_symm; only 1: now destruct H).	0.125614881516	11
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_ngt	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_nge	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono_r	40	0.0.0.4.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.483669996262	156
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rle_le_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_minus	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_lt_mono	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rtimes_neq_0	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Ropp_neg_pos	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_0_1	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_succ_r	40
Coq.micromega.OrderedRing.STRICT_ORDERED_RING.Rlt_lt_succ	40
Coq.micromega.ZifyInt63.to_Z_bounded	40
Coq.micromega.ZifyInt63.ltb_lt	40
Coq.micromega.ZifyInt63.leb_le	40
Coq.micromega.ZifyInt63.eqb_eq	40	2.7.4.3.0.11	search with cache (only 1: intros n1 n2; only 1: apply Bool.eq_true_iff_eq; only 1: case eqbP; only 1: Lia.lia; only 1: intros; only 1: Lia.lia).	17.1398351192	19493
Coq.micromega.ZifyInt63.eq_int_inj	40	0.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	0.028501033783	5
Coq.micromega.ZifyInt63.is_evenE	40
Coq.micromega.Ztac.eq_incl	40	0.2	search with cache (only 1: intros n m p; only 1: intuition Z.order).	0.0195620059967	4
Coq.micromega.Ztac.elim_concl_eq	40	4.5.3.1.1	search with cache (only 1: intros x y; only 1: case (Z.eq_dec x y); only 1: intuition auto; N.Private_OrderTac.Tac.subst_eqns; eauto using (RelationClasses.StrictOrder_Transitive x y z) with *; only 1: intuition; only 1: Z.order).	4.44259095192	3019
Coq.micromega.Ztac.elim_concl_le	40	1.1	search with cache (only 1: intros; only 1: now apply Z.ge_le).	0.0358109474182	13
Coq.micromega.Ztac.elim_concl_lt	40	0.4	search with cache (only 1: intros a b; only 1: Z.order).	0.203284025192	117
Coq.micromega.Ztac.Zlt_le_add_1	40	1.3	search with cache (only 1: intros n m; only 1: apply Z.le_succ_l).	0.145080089569	43
Coq.micromega.Ztac.add_le	40	1.0	search with cache (only 1: intros n m H1 H2; only 1: now apply Z.add_nonneg_nonneg).	0.0152950286865	3
Coq.micromega.Ztac.mul_le	40	0.0.4.0	search with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: trivial; only 1: trivial).	0.0242438316345	8
Coq.micromega.ZifyInst.eq_pos_inj	40	0.0.0.2	search with cache (only 1: intros; only 1: split; only 1: congruence; only 1: congruence).	0.0253949165344	6
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	0.1.0.0.0.0.0.0.0.3.1.3.14	search with cache (only 1: unfold Z.max, N.max; only 1: intros n; only 1: simpl; only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: trivial).	19.9736878872	19707
Coq.micromega.ZifyInst.pow_pos_strict	40	5.0	search with cache (only 1: intros a b Ha Hb; only 1: Z.order_pos).	0.130573987961	7
Coq.micromega.ZCoeff.InitialMorphism.req_refl	40
Coq.micromega.ZCoeff.InitialMorphism.req_sym	40
Coq.micromega.ZCoeff.InitialMorphism.req_trans	40
Coq.micromega.ZCoeff.InitialMorphism.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0435049533844	1
Coq.micromega.ZCoeff.InitialMorphism.rtimes_morph_Proper	40	0	search with cache (only 1: exact (SORtimes_wd sor)).	0.0397920608521	1
Coq.micromega.ZCoeff.InitialMorphism.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0459978580475	1
Coq.micromega.ZCoeff.InitialMorphism.rle_morph_Proper	40	0	search with cache (only 1: exact (SORle_wd sor)).	0.0410571098328	1
Coq.micromega.ZCoeff.InitialMorphism.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.039901971817	1
Coq.micromega.ZCoeff.InitialMorphism.rminus_morph_Proper	40	0.0.0.0.0	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.107134103775	5
Coq.micromega.ZCoeff.InitialMorphism.ring_ops_wd	40	4.1.2.1.0.0.1.46	search with cache (only 1: split; only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite H1; only 1: now rewrite H2; only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite H1; only 1: now rewrite H2; only 1: exact (SORopp_wd sor)).	32.200865984	3160
Coq.micromega.ZCoeff.InitialMorphism.Zring_morph	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_pos	40
Coq.micromega.ZCoeff.InitialMorphism.phi_pos1_succ	40
Coq.micromega.ZCoeff.InitialMorphism.clt_pos_morph	40
Coq.micromega.ZCoeff.InitialMorphism.clt_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcleb_morph	40
Coq.micromega.ZCoeff.InitialMorphism.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	0.0.0.0.2	search with cache (only 1: intros a b **; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	1.37103414536	184
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	1.5.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: auto with real).	0.264127016068	21
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	3.0.2.0.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: auto with zarith real).	0.194973945618	11
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.1.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.171581983566	5
Coq.micromega.ZifyClasses.mkapp2	40	0.11	search with cache (only 1: subst; only 1: auto).	0.0506899356842	46
Coq.micromega.ZifyClasses.mkapp	40	8.0	search with cache (only 1: subst; only 1: trivial).	0.0246379375458	10
Coq.micromega.ZifyClasses.mkrel	40	4.0	search with cache (only 1: subst; only 1: auto).	0.0239849090576	6
Coq.micromega.ZifyClasses.and_morph	40	5.0.2.0.0.0.5.0.8.0.0.0.8.0	search with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: Ltac.split; only 1: intros [? ?]; only 1: Ltac.split; only 1: apply Hr; only 1: Ltac.assumption; only 1: apply H; only 1: Ltac.assumption; only 1: intros [? ?]; only 1: Ltac.split; only 1: apply Hr; only 1: Ltac.assumption; only 1: auto).	26.8943052292	59542
Coq.micromega.ZifyClasses.or_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0804898738861	2
Coq.micromega.ZifyClasses.impl_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0355520248413	2
Coq.micromega.ZifyClasses.iff_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0670440196991	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0290579795837	2
Coq.micromega.ZifyClasses.eq_iff	40	0.0.0.1	search with cache (only 1: intros A B []; only 1: Ltac.split; only 1: auto; only 1: auto).	0.0271520614624	14
Coq.micromega.ZifyClasses.rew_iff	40	2	search with cache (only 1: tauto).	0.0197250843048	3
Coq.micromega.ZMicromega.eq_le_iff	40	3.1.0.0.1.9.0	search with cache (only 1: split; only 1: destruct 1; only 1: split; only 1: apply Z.le_refl; only 1: apply Z.le_refl; only 1: destruct 1; only 1: intuition Z.Private_Tac.order).	2.46577310562	2104
Coq.micromega.ZMicromega.lt_le_iff	40	0.1	search with cache (only 1: intro; only 1: apply Z.lt_le_pred).	0.178394079208	25
Coq.micromega.ZMicromega.le_0_iff	40	0.0.5.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	0.0217709541321	9
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.2.0	search with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.017352104187	5
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.0.0.0.12.0	search with cache (only 1: intro m; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split).	2.98099303246	2072
Coq.micromega.ZMicromega.isZ0_n0	40
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.MaxVar.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.4	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: assumption).	0.300397157669	67
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition).	0.0331530570984	5
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0144810676575	1
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40	0.2	search with cache (only 1: intros n; only 1: now destruct n).	0.0552968978882	29
Coq.micromega.ZifyBool.b2z_spec	40	14.2.0.45	search with cache (only 1: intros; only 1: destruct b; only 1: now left; only 1: auto).	10.980014801	12527
Coq.micromega.Env.S.jump_add	40
Coq.micromega.Env.S.jump_simpl	40
Coq.micromega.Env.S.jump_tl	40
Coq.micromega.Env.S.jump_succ	40	2.2.1.1	search with cache (only 1: rewrite <- ?jump_add; only 1: unfold jump; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.19343996048	32
Coq.micromega.Env.S.jump_pred_double	40
Coq.micromega.Env.S.nth_spec	40
Coq.micromega.Env.S.nth_jump	40	39	search with cache (only 1: now destruct p).	0.827412843704	859
Coq.micromega.Env.S.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.063362121582	3
Coq.micromega.Tauto.S.EVAL.eval_f_rew	40	28.0	search with cache (only 1: intro n; only 1: now intro l; induction l).	7.54773306847	7548
Coq.micromega.Tauto.S.eiff_refl	40
Coq.micromega.Tauto.S.eiff_sym	40	0.0.3.0.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: induction 1; only 1: simpl; only 1: tauto).	0.0322921276093	9
Coq.micromega.Tauto.S.eiff_trans	40	0.0.0.0.5.1.2.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: intros; only 1: transitivity y; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.97500991821	2003
Coq.micromega.Tauto.S.hold_eiff	40
Coq.micromega.Tauto.S.eiff_eq	40	2.0.1.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0246179103851	8
Coq.micromega.Tauto.S.eAnd_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intros; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0470180511475	6
Coq.micromega.Tauto.S.eOR_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0999279022217	6
Coq.micromega.Tauto.S.eIMPL_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0398437976837	6
Coq.micromega.Tauto.S.eIFF_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0548298358917	6
Coq.micromega.Tauto.S.eNOT_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0339350700378	6
Coq.micromega.Tauto.S.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.0.0.10	search with cache (only 1: intros; only 1: destruct l; only 1: reflexivity; only 1: reflexivity).	0.446732997894	250
Coq.micromega.Tauto.S.is_bool_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_X_inv	40	0.0.0.0.0.0.1.0.0.1.1.1.10.1	search with cache (only 1: intro n; only 1: destr_bool; only 1: destruct f; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: reflexivity; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H).	31.5319440365	8980
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_same	40	5	search with cache (only 1: destr_bool).	0.0446050167084	28
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.00814890861511	2
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00810122489929	1
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_tt_inv	40	4.0.6.8	search with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: reflexivity; only 1: now intros [=-> ->]).	0.645419120789	748
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_cnf_ff_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.if_cnf_tt	40	1.3.0.2.0.5	search with cache (only 1: destruct f; only 1: simpl; only 1: unfold cnf_tt; only 1: congruence; only 1: simpl; only 1: congruence).	0.649650096893	399
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_and_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abs_or_pol	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_cnf_opt_cnf_ff_r	40	0.2.0.0.0.0.3.5.1	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: rewrite orb_comm; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: apply is_cnf_tt_inv in EQ; only 1: auto; only 1: reflexivity).	3.88816905022	1914
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff_r	40	0.1.4.15	search with cache (only 1: intros f1; only 1: unfold and_cnf_opt; only 1: rewrite orb_comm; only 1: reflexivity).	0.534230947495	543
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_ff	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: reflexivity).	0.0271401405334	4
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.and_cnf_opt_cnf_tt	40	2.7.0.1.4.4.0.0	search with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: simpl; only 1: destruct (is_cnf_ff f) eqn:EQ1; only 1: simpl; only 1: apply is_cnf_ff_inv in EQ1; only 1: auto; only 1: reflexivity).	19.3109438419	12486
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.is_bool_abst_simpl	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_simpl_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.or_is_X_inv	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.mk_iff_is_bool	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_iff_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_eq_correct	40
Coq.micromega.Tauto.S.CNFAnnot.Abstraction.abst_form_correct	40
Coq.micromega.Tauto.S.radd_term_term	40
Coq.micromega.Tauto.S.radd_term_term'	40
Coq.micromega.Tauto.S.xror_clause_clause	40
Coq.micromega.Tauto.S.ror_clause_clause	40
Coq.micromega.Tauto.S.ror_cnf_cnf	40
Coq.micromega.Tauto.S.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.S.ratom_cnf	40
Coq.micromega.Tauto.S.rxcnf_and_xcnf	40
Coq.micromega.Tauto.S.rxcnf_or_xcnf	40
Coq.micromega.Tauto.S.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.S.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.S.rxcnf_xcnf	40
Coq.micromega.Tauto.S.eval_cnf_app	40
Coq.micromega.Tauto.S.eval_cnf_ff	40	2.1.3.8.13.28.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: split; only 1: simpl; only 1: clear; only 1: destruct 1; only 1: reflexivity; only 1: tauto).	12.2454581261	21303
Coq.micromega.Tauto.S.eval_cnf_tt	40	0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: tauto).	0.0212218761444	2
Coq.micromega.Tauto.S.eval_cnf_and_opt	40
Coq.micromega.Tauto.S.add_term_correct	40
Coq.micromega.Tauto.S.no_middle_eval_tt	40	54.20	search with cache (only 1: intros H; only 1: eauto).	10.5007250309	16383
Coq.micromega.Tauto.S.or_clause_correct	40
Coq.micromega.Tauto.S.or_clause_cnf_correct	40
Coq.micromega.Tauto.S.eval_cnf_cons	40	0.0.1.0.1.6.0.0.2	search with cache (only 1: unfold eval_cnf; only 1: intros env t; only 1: simpl; only 1: unfold eval_clause in *; only 1: induction f as [| a f IHf]; only 1: unfold make_conj at 2; only 1: tauto; only 1: repeat rewrite make_conj_cons in *; only 1: tauto).	13.8747880459	3286
Coq.micromega.Tauto.S.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.0735330581665	5
Coq.micromega.Tauto.S.or_cnf_correct	40
Coq.micromega.Tauto.S.or_cnf_opt_correct	40
Coq.micromega.Tauto.S.hold_eTT	40	0.19.1.20.0.19	search with cache (only 1: intros cl; only 1: induction cl as [| a cl IHcl]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	10.3684990406	12028
Coq.micromega.Tauto.S.hold_eFF	40	0.0.0.0.0.0	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0681250095367	6
Coq.micromega.Tauto.S.hold_eAND	40
Coq.micromega.Tauto.S.hold_eOR	40
Coq.micromega.Tauto.S.hold_eNOT	40
Coq.micromega.Tauto.S.hold_eIMPL	40	0.2.0.1.1.2.0.0.0.0.0.0	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: intros; only 1: apply iff_refl; only 1: simpl; only 1: intros e; only 1: unfold is_true; only 1: destruct e; only 1: intros; only 1: intuition congruence; only 1: intuition congruence).	29.6051959991	5559
Coq.micromega.Tauto.S.hold_eIFF	40
Coq.micromega.Tauto.S.xcnf_impl	40
Coq.micromega.Tauto.S.hold_eIFF_IMPL	40
Coq.micromega.Tauto.S.hold_eEQ	40	0.0.0.0.0.0.1.0.0	search with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.261035919189	10
Coq.micromega.Tauto.S.xcnf_iff	40
Coq.micromega.Tauto.S.xcnf_correct	40
Coq.micromega.Tauto.S.cnf_checker_sound	40
Coq.micromega.Tauto.S.tauto_checker_sound	40
Coq.micromega.Tauto.S.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.MakeRingPol.radd_ext_Proper	40	17.4	search with cache (only 1: intuition; only 1: firstorder).	1.15076589584	621
Coq.micromega.EnvRing.MakeRingPol.rmul_ext_Proper	40	16.5	search with cache (only 1: intuition; only 1: firstorder).	1.2665309906	582
Coq.micromega.EnvRing.MakeRingPol.ropp_ext_Proper	40	12.3.6	search with cache (only 1: elim ARth; only 1: intros A R1 Sym B R2 f Hf; only 1: firstorder).	2.22171902657	821
Coq.micromega.EnvRing.MakeRingPol.rsub_ext_Proper	40
Coq.micromega.EnvRing.MakeRingPol.Peq_ok	40
Coq.micromega.EnvRing.MakeRingPol.Peq_spec	40
Coq.micromega.EnvRing.MakeRingPol.Pphi0	40	86	search with cache (only 1: CRelationClasses.simpl_crelation).	6.11572098732	9475
Coq.micromega.EnvRing.MakeRingPol.Pphi1	40	27	search with cache (only 1: firstorder).	0.863521814346	703
Coq.micromega.EnvRing.MakeRingPol.env_morph	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_add	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Pjump_pred_double	40
Coq.micromega.EnvRing.MakeRingPol.mkPinj_ok	40
Coq.micromega.EnvRing.MakeRingPol.pow_pos_add	40
Coq.micromega.EnvRing.MakeRingPol.ceqb_spec	40
Coq.micromega.EnvRing.MakeRingPol.mkPX_ok	40
Coq.micromega.EnvRing.MakeRingPol.PaddC_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	18.9081881046	2168
Coq.micromega.EnvRing.MakeRingPol.PmulC_aux_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulC_ok	40
Coq.micromega.EnvRing.MakeRingPol.Popp_ok	40	1.0.1.0.0.1.0.0.0.0.0.0.1	search with cache (only 1: revert l; only 1: induction P as [| | ? ? ? ? IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	25.9343438148	3368
Coq.micromega.EnvRing.MakeRingPol.PaddX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Padd_ok	40
Coq.micromega.EnvRing.MakeRingPol.PsubX_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psub_ok	40
Coq.micromega.EnvRing.MakeRingPol.PmulI_ok	40
Coq.micromega.EnvRing.MakeRingPol.Pmul_ok	40
Coq.micromega.EnvRing.MakeRingPol.Psquare_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_morph	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_xO_tail	40
Coq.micromega.EnvRing.MakeRingPol.Mjump_pred_double	40	0.1.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.151109933853	5
Coq.micromega.EnvRing.MakeRingPol.Mjump_add	40	0.0.0.0.1	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.140305042267	6
Coq.micromega.EnvRing.MakeRingPol.mkZmon_ok	40	3.3.7.11	search with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: rsimpl; only 1: now jump_simpl; only 1: now jump_simpl).	3.65275096893	942
Coq.micromega.EnvRing.MakeRingPol.zmon_pred_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkVmon_ok	40
Coq.micromega.EnvRing.MakeRingPol.Mphi_ok	40
Coq.micromega.EnvRing.MakeRingPol.POneSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubst_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL1_ok	40
Coq.micromega.EnvRing.MakeRingPol.PSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.PNSubstL_ok	40
Coq.micromega.EnvRing.MakeRingPol.mkX_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.micromega.EnvRing.MakeRingPol.POWER.Ppow_N_ok	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.micromega.EnvRing.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.micromega.RingMicromega.Micromega.rplus_morph_Proper	40	0	search with cache (only 1: exact (SORplus_wd sor)).	0.0112061500549	1
Coq.micromega.RingMicromega.Micromega.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0122821331024	2
Coq.micromega.RingMicromega.Micromega.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0100560188293	1
Coq.micromega.RingMicromega.Micromega.rle_morph_Proper	40	2	search with cache (only 1: exact (SORle_wd sor)).	0.0119709968567	3
Coq.micromega.RingMicromega.Micromega.rlt_morph_Proper	40	3	search with cache (only 1: exact (SORlt_wd sor)).	0.0134248733521	4
Coq.micromega.RingMicromega.Micromega.rminus_morph_Proper	40	0.0.0.0.4	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.0605809688568	9
Coq.micromega.RingMicromega.Micromega.cleb_sound	40
Coq.micromega.RingMicromega.Micromega.cneqb_sound	40
Coq.micromega.RingMicromega.Micromega.cltb_sound	40
Coq.micromega.RingMicromega.Micromega.OpMult_sound	40
Coq.micromega.RingMicromega.Micromega.OpAdd_sound	40
Coq.micromega.RingMicromega.Micromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.Micromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.Micromega.ge_bool_cases	40
Coq.micromega.RingMicromega.Micromega.extract_hyps_app	40
Coq.micromega.RingMicromega.Micromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.Micromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.Micromega.checker_nf_sound	40
Coq.micromega.RingMicromega.Micromega.eval_pol_sub	40
Coq.micromega.RingMicromega.Micromega.eval_pol_add	40
Coq.micromega.RingMicromega.Micromega.eval_pol_mul	40
Coq.micromega.RingMicromega.Micromega.eval_pol_opp	40
Coq.micromega.RingMicromega.Micromega.eval_pol_norm	40
Coq.micromega.RingMicromega.Micromega.normalise_sound	40
Coq.micromega.RingMicromega.Micromega.negate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.Micromega.eq0_cnf	40
Coq.micromega.RingMicromega.Micromega.xnormalise_correct	40
Coq.micromega.RingMicromega.Micromega.xnegate_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.Micromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.Micromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.Micromega.xdenorm_correct	40
Coq.micromega.RingMicromega.Micromega.denorm_correct	40
Coq.micromega.RingMicromega.Micromega.eval_pexprSC	40
Coq.micromega.RingMicromega.Micromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	1.0.4.0.4	search with cache (only 1: intros; only 1: induction l; only 1: constructor; only 1: simpl; only 1: auto).	0.430730819702	236
Coq.micromega.Refl.make_impl_map	40	4.2.0.5.0.7	search with cache (only 1: induction l as [| ? ? IHl]; only 1: intros d n; only 1: reflexivity; only 1: destruct a; only 1: intros HF; only 1: firstorder).	4.25528001785	2425
Coq.micromega.Refl.make_conj_cons	40	4.0.2.2.0.1.0.4.0	search with cache (only 1: intro x; only 1: intros a b; only 1: intros; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: reflexivity).	15.3290309906	9286
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	2.1.0.3	search with cache (only 1: intros P Q l; only 1: intros n m; only 1: rewrite make_conj_cons; only 1: firstorder).	0.557007074356	83
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	13.2	search with cache (only 1: intros a n; only 1: now destruct n).	1.08889007568	786
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0215539932251	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	3.2	search with cache (only 1: intros n m; only 1: apply Z.ltb_lt).	0.128329992294	36
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40	14.27.4.1	search with cache (only 1: intros m'; only 1: intros n; only 1: fix odd_spec 1; only 1: trivial).	37.8208861351	56835
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	0	search with cache (only 1: exact RTheory).	0.0149519443512	1
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.9	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0974020957947	60
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40	0.6.32	search with cache (only 1: intros Hbeq; only 1: fix even_spec 1; only 1: auto).	26.166613102	22673
Coq.micromega.RMicromega.Q2R_0	40
Coq.micromega.RMicromega.Q2R_1	40
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40	1.2.0.0.0.1.1.0.0.0.1.0	search with cache (only 1: destruct z; only 1: destruct z; only 1: simpl; only 1: now try Z.order'; only 1: simpl; only 1: intros; only 1: auto with zarith; only 1: intros H l; only 1: discriminate || clear H; only 1: simpl; only 1: intros; only 1: auto with zarith).	4.15972399712	2331
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0575129985809	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40	1.0.0.5.0.1.6	search with cache (only 1: induction p; only 1: reflexivity; only 1: simpl; only 1: rewrite ?IHp; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	17.0988659859	1336
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40	5.9.1	search with cache (only 1: unfold is_true; only 1: fix odd_spec 1; only 1: trivial).	5.48627686501	2301
Coq.micromega.RMicromega.Reval_op2_hold	40
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40	0.0.3.2.0	search with cache (only 1: intros; only 1: destruct f as [e o]; only 1: cbn-[ZMicromega.psub]; only 1: rewrite Reval_op2_hold; only 1: apply Reval_pop2_eval_op2).	0.0596067905426	17
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.BEQ.eqb_nat_eq	40
Coq.Vectors.VectorEq.BEQ.eqb_eq	40	8.7.0	search with cache (only 1: intros ? v2; only 1: fix even_spec 1; only 1: auto).	2.64686107635	1595
Coq.Vectors.VectorEq.BEQ.eq_dec	40
Coq.Vectors.VectorEq.CAST.cast	40	7	search with cache (only 1: congruence).	0.0546998977661	33
Coq.Vectors.VectorDef.BASES.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40	3.15	search with cache (only 1: fix gcd_greatest 1; only 1: now simpl).	6.113945961	3162
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	3.1.1.21	search with cache (only 1: fix gcd_divide 1; only 1: apply caseS; only 1: intros; only 1: auto).	24.1870410442	11883
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	0.7.0.0	search with cache (only 1: induction p as [| ? p IHp]; only 1: now split; only 1: simpl; only 1: auto).	0.177119970322	52
Coq.Vectors.VectorSpec.map_id	40
Coq.Vectors.VectorSpec.map_map	40	0.0.10.1.9.0.1.0.6	search with cache (only 1: intros Az LS; only 1: intros n v; only 1: induction v as [| ? ? v IHv]; only 1: Ltac.reflexivity; only 1: generalize dependent n; only 1: intros b Hb IH; only 1: compute; only 1: f_equal; only 1: auto).	36.3715920448	25164
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.0.2.2.0.0.0.19	search with cache (only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: intuition).	14.7234671116	9801
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0.2.1	search with cache (only 1: intros n m H1 H2; only 1: simpl; only 1: auto).	0.0510680675507	6
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40	3.21.4	search with cache (only 1: intro k; only 1: fix gcd_greatest 1; only 1: auto).	37.4464228153	21565
Coq.Vectors.VectorSpec.take_prf_irr	40
Coq.Vectors.VectorSpec.uncons_cons	40	0.0	search with cache (only 1: intros; only 1: now simpl).	0.0484640598297	2
Coq.Vectors.VectorSpec.append_comm_cons	40	0	search with cache (only 1: now simpl).	0.0318479537964	1
Coq.Vectors.VectorSpec.splitat_append	40	0.6.0.1.1.0.0.15	search with cache (only 1: intros m n; only 1: induction v as [| ? ? v IHv]; only 1: intros v; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHv; only 1: now simpl).	23.8001050949	9242
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40	4.5.1	search with cache (only 1: intros ? q; only 1: fix even_spec 1; only 1: easy).	1.94717097282	1184
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	3.1.2.3.2.4	search with cache (only 1: intros ? q; only 1: induction n as [| n IHn]; only 1: destruct m; only 1: now try PeanoNat.Nat.order'; only 1: easy; only 1: now intros ->).	3.24497580528	2653
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	0.0.0.0.4.0.0.0.3.3	search with cache (only 1: induction p as [p| p| ]; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: rewrite <- Pos.compare_succ_succ; only 1: simpl; only 1: Pos.simpl_compare; only 1: now rewrite IHp; only 1: simpl; only 1: trivial).	5.35228705406	3908
Coq.rtauto.Bintree.map_app	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0529720783234	9
Coq.rtauto.Bintree.length_map	40	0.0.0.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0349249839783	6
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Store.Tget_Tempty	40	0.4.0.0.1.7.3	search with cache (only 1: intro; only 1: destruct p; only 1: simpl; only 1: auto; only 1: split; only 1: simpl; only 1: auto).	1.174669981	1434
Coq.rtauto.Bintree.Store.Tget_Tadd	40
Coq.rtauto.Bintree.Store.get_empty	40	0.2.1.2	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.034656047821	13
Coq.rtauto.Bintree.Store.get_Full_Gt	40
Coq.rtauto.Bintree.Store.get_Full_Eq	40
Coq.rtauto.Bintree.Store.get_push_Full	40
Coq.rtauto.Bintree.Store.Full_push_compat	40
Coq.rtauto.Bintree.Store.Full_index_one_empty	40
Coq.rtauto.Bintree.Store.push_not_empty	40	0.0.9.3.7	search with cache (only 1: intros Heq; only 1: inversion 1; only 1: inversion_clear H; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	5.78169703484	6061
Coq.rtauto.Bintree.Store.get_In	40
Coq.rtauto.Bintree.Map.Tget_Tmap	40
Coq.rtauto.Bintree.Map.Tmap_Tadd	40
Coq.rtauto.Bintree.Map.get_map	40
Coq.rtauto.Bintree.Map.map_push	40
Coq.rtauto.Bintree.Map.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40	2.3.9.21.15.0	search with cache (only 1: destr_bool; only 1: exfalso; only 1: contradict H; only 1: revert m; only 1: fix even_spec 1; only 1: easy).	25.2649850845	39052
Coq.rtauto.Rtauto.form_eq_refl	40	11.14.11	search with cache (only 1: intro m; only 1: fix even_spec 1; only 1: easy).	3.17491292953	5891
Coq.rtauto.Rtauto.with_env.compose0	40	7.2.1.3.1.13	search with cache (only 1: intro e; only 1: induction F; only 1: firstorder; only 1: unfold get, push, index; only 1: simpl; only 1: auto).	33.8249471188	35257
Coq.rtauto.Rtauto.with_env.compose1	40
Coq.rtauto.Rtauto.with_env.compose2	40	8.0.7.1.0.2	search with cache (only 1: induction F; only 1: destr_bool; only 1: auto; only 1: simpl; only 1: intros i e; only 1: firstorder  (subst; auto)).	6.92376303673	5540
Coq.rtauto.Rtauto.with_env.compose3	40
Coq.rtauto.Rtauto.with_env.weaken	40
Coq.rtauto.Rtauto.with_env.project_In	40
Coq.rtauto.Rtauto.with_env.project	40
Coq.rtauto.Rtauto.with_env.interp_proof	40	5.11.0.1	search with cache (only 1: intros A H; only 1: intro n; only 1: fix even_spec 1; only 1: apply PeanoNat.Nat.even_spec).	5.39355492592	5832
Coq.rtauto.Rtauto.with_env.Reflect	40
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.0156939029694	1
Coq.Setoids.Setoid.Seq_sym	40	4.2.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: apply (symmetry (x:=_)); only 1: assumption).	0.0315270423889	12
Coq.Setoids.Setoid.Seq_trans	40	2.1.1.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0388970375061	11
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: CRelationClasses.simpl_crelation).	0.089152097702	50
Coq.Bool.IfProp.Iftrue_inv	40	0.2.0.4	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition; only 1: discriminate).	0.0473217964172	34
Coq.Bool.IfProp.Iffalse_inv	40	0.0.0.1.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0309710502625	7
Coq.Bool.IfProp.IfProp_true	40	0.43.0.11	search with cache (only 1: intro m; only 1: intros; only 1: inversion_clear H; only 1: trivial).	31.5308241844	110619
Coq.Bool.IfProp.IfProp_false	40	0.0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0230450630188	4
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: Ltac.left; only 1: auto with bool; only 1: Ltac.right; only 1: auto with bool).	0.029305934906	12
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.BoolOrder.le_refl	40	2.0.3.0	search with cache (only 1: intros; only 1: destruct b; only 1: destr_bool; only 1: intuition).	0.0440230369568	9
Coq.Bool.BoolOrder.le_trans	40	8	search with cache (only 1: destr_bool).	0.0736439228058	20
Coq.Bool.BoolOrder.le_true	40	0	search with cache (only 1: destr_bool).	0.0265669822693	1
Coq.Bool.BoolOrder.false_le	40	0	search with cache (only 1: destr_bool).	0.0250949859619	1
Coq.Bool.BoolOrder.le_compat	40	4.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: congruence; only 1: congruence; only 1: intros R R' EQ a a' Ha WF; only 1: simpl_relation).	0.0750658512115	16
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0377371311188	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0415639877319	2
Coq.Bool.BoolOrder.lt_compat	40	0	search with cache (only 1: intuition).	0.0265209674835	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition; only 1: intuition).	0.115873813629	6
Coq.Bool.BoolOrder.lt_total	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.0745079517365	5
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0353529453278	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: intuition).	0.0673761367798	4
Coq.Bool.BoolOrder.le_lteq	40	1.1.2.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0959379673004	10
Coq.Bool.BoolOrder.le_preorder	40	1.6.5.3.2	search with cache (only 1: constructor; only 1: simpl_relation; only 1: destr_bool; only 1: compute; only 1: destr_bool).	1.09877991676	723
Coq.Bool.BoolOrder.lt_strorder	40	0.0.2.12.3.2.2	search with cache (only 1: split; only 1: intros b; only 1: destr_bool; only 1: destruct 1; only 1: intros b; only 1: destr_bool; only 1: auto).	1.76446914673	1175
Coq.Bool.Zerob.zerob_true_intro	40	0.0.7.2	search with cache (only 1: intro m; only 1: destruct m; only 1: now try Nat.order'; only 1: easy).	0.335204839706	273
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0.0	search with cache (only 1: intro m; only 1: destruct m; only 1: trivial with bool; only 1: easy).	0.0542459487915	4
Coq.Bool.Zerob.zerob_false_intro	40	1.1.0.0.1.0	search with cache (only 1: destruct n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: trivial).	0.0241031646729	9
Coq.Bool.Zerob.zerob_false_elim	40	2.1.16	search with cache (only 1: induction n as [| n IHn]; only 1: intuition; only 1: easy).	2.36186313629	2846
Coq.Bool.DecBool.ifdec_left	40	0.1.0.5.1.0.3	search with cache (only 1: intro A; only 1: intro H; only 1: intro n; only 1: intros [?| ?]; only 1: intros h1 h2; only 1: trivial; only 1: contradiction).	1.06023406982	1649
Coq.Bool.DecBool.ifdec_right	40	0.10.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	3.0991230011	2816
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.10.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0518560409546	113
Coq.Bool.Sumbool.bool_eq_rec	40	0.3.0.4	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0682299137115	80
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0150179862976	4
Coq.Bool.Sumbool.connectives.sumbool_and	40
Coq.Bool.Sumbool.connectives.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0229380130768	7
Coq.Bool.Sumbool.connectives.sumbool_not	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.01930809021	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	3	search with cache (only 1: discriminate).	0.0094039440155	18
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00565218925476	1
Coq.Bool.Bool.eq_true_false_abs	40	2.1.5.4.0	search with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.246165990829	454
Coq.Bool.Bool.not_true_is_false	40	2.8.0	search with cache (only 1: destr_bool; only 1: Ltac.reflexivity || destruct H; only 1: exact eq_refl).	0.0646929740906	125
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0103669166565	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.8.1	search with cache (only 1: intro H; only 1: Ltac.split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.360062122345	440
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0130319595337	3
Coq.Bool.Bool.le_implb	40	0.0.0.1.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.132992982864	89
Coq.Bool.Bool.compare_spec	40	0.1.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0173871517181	6
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.00774693489075	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00673818588257	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00668692588806	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0846409797668	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0859639644623	6
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00870800018311	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00647902488708	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.00685787200928	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00686407089233	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00659894943237	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.00674104690552	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00555205345154	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.0055570602417	1
Coq.Bool.Bool.if_negb	40	2	search with cache (only 1: destr_bool).	0.0102989673615	12
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.012148141861	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0122339725494	3
Coq.Bool.Bool.orb_true_iff	40	0.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0462288856506	42
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0229110717773	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: auto; only 1: auto).	0.0138938426971	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0.0.0	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0177021026611	6
Coq.Bool.Bool.orb_true_intro	40	1.0.0.0.0.0.1	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: destr_bool; only 1: intuition).	0.0800008773804	55
Coq.Bool.Bool.orb_false_intro	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0116531848907	9
Coq.Bool.Bool.orb_false_elim	40	0.0.3.0.1	search with cache (only 1: intro b1; only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: auto).	0.049250125885	40
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.00609397888184	1
Coq.Bool.Bool.orb_true_r	40	0	search with cache (only 1: destr_bool).	0.00615310668945	1
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00563502311707	1
Coq.Bool.Bool.orb_false_r	40	1	search with cache (only 1: destr_bool).	0.00540399551392	2
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0093469619751	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.0110068321228	1
Coq.Bool.Bool.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.0101139545441	1
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.0100870132446	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0111789703369	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0202431678772	5
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0244481563568	5
Coq.Bool.Bool.andb_true_eq	40	0.5.1	search with cache (only 1: intro b1; only 1: destr_bool; only 1: intuition).	0.103518009186	64
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.00680184364319	1
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00942397117615	3
Coq.Bool.Bool.andb_false_r	40	1	search with cache (only 1: destr_bool).	0.00566983222961	2
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00552916526794	1
Coq.Bool.Bool.andb_diag	40	0	search with cache (only 1: destr_bool).	0.00558304786682	1
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00548815727234	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00538301467896	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0267040729523	15
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00584816932678	1
Coq.Bool.Bool.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00577092170715	1
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00590395927429	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00819897651672	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00971388816833	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00964117050171	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00975704193115	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00970220565796	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00678515434265	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00606989860535	1
Coq.Bool.Bool.implb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0174131393433	5
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0231039524078	5
Coq.Bool.Bool.implb_orb	40	0	search with cache (only 1: destr_bool).	0.00687003135681	1
Coq.Bool.Bool.implb_negb_orb	40	0	search with cache (only 1: destr_bool).	0.00766491889954	1
Coq.Bool.Bool.implb_true_r	40	1	search with cache (only 1: destr_bool).	0.0068678855896	2
Coq.Bool.Bool.implb_false_r	40	0	search with cache (only 1: destr_bool).	0.00667905807495	1
Coq.Bool.Bool.implb_true_l	40	0	search with cache (only 1: destr_bool).	0.00690603256226	1
Coq.Bool.Bool.implb_false_l	40	0	search with cache (only 1: destr_bool).	0.00534296035767	1
Coq.Bool.Bool.implb_same	40	0	search with cache (only 1: destr_bool).	0.00538206100464	1
Coq.Bool.Bool.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.00676703453064	1
Coq.Bool.Bool.implb_negb	40	0	search with cache (only 1: destr_bool).	0.00674700737	1
Coq.Bool.Bool.implb_curry	40	0	search with cache (only 1: destr_bool).	0.0089099407196	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0088849067688	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0802700519562	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00896096229553	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00777411460876	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00567197799683	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.00586295127869	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00509405136108	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00616002082825	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00707793235779	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00951719284058	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00778603553772	1
Coq.Bool.Bool.xorb_move_l_r_1	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.0156960487366	7
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.010931968689	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.0103969573975	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0104939937592	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.0081250667572	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0170979499817	6
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00743293762207	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0253360271454	5
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0141110420227	5
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0107500553131	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0104119777679	2
Coq.Bool.Bool.absurd_eq_bool	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0107011795044	5
Coq.Bool.Bool.absurd_eq_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00861597061157	3
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.00972485542297	1
Coq.Bool.Bool.Is_true_eq_true	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.00920486450195	4
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00589394569397	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00883316993713	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00584888458252	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0119600296021	3
Coq.Bool.Bool.orb_prop_elim	40	1.0.1.0.0.0.1	search with cache (only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0268330574036	20
Coq.Bool.Bool.orb_prop_intro	40	1.1.0.0.0.1.5	search with cache (only 1: red; only 1: intro b1; only 1: destruct b1; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	0.754688978195	1142
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.0136268138885	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.02401304245	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0134069919586	3
Coq.Bool.Bool.eq_bool_prop_elim	40	1.0.0.4.1	search with cache (only 1: intros; only 1: subst; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.131132125854	119
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0103948116302	3
Coq.Bool.Bool.negb_prop_intro	40	2.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00969409942627	4
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00773596763611	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00870180130005	3
Coq.Bool.Bool.andb_if	40	0	search with cache (only 1: destr_bool).	0.00703001022339	1
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00674200057983	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00709080696106	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00503206253052	1
Coq.Bool.Bool.reflect_iff	40	9.0.5.0.6.5	search with cache (only 1: intros A P H; only 1: destruct H; only 1: intuition; only 1: Ltac.split; only 1: intuition; only 1: destr_bool).	11.3651480675	19177
Coq.Bool.Bool.iff_reflect	40	8.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0911400318146	120
Coq.Bool.Bool.reflect_dec	40	0.3.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0127778053284	6
Coq.Bool.Bool.eqb_spec	40	1.1.1.1.0	search with cache (only 1: destruct b, b'; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0169270038605	9
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_true	40	1.3.1	search with cache (only 1: intros; only 1: destruct H; only 1: intuition).	0.0181660652161	8
Coq.Bool.BoolEq.Bool_eq_dec.beq_eq_not_false	40
Coq.Bool.BoolEq.Bool_eq_dec.beq_false_not_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.exists_beq_eq	40
Coq.Bool.BoolEq.Bool_eq_dec.not_eq_false_beq	40
Coq.Bool.BoolEq.Bool_eq_dec.eq_dec	40
Coq.Lists.ListSet.first_definitions.set_In_dec	40
Coq.Lists.ListSet.first_definitions.set_mem_ind	40
Coq.Lists.ListSet.first_definitions.set_mem_ind2	40	4.0.0.0.0.3.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: auto with datatypes; only 1: intuition).	2.99416685104	1824
Coq.Lists.ListSet.first_definitions.set_mem_correct1	40
Coq.Lists.ListSet.first_definitions.set_mem_correct2	40
Coq.Lists.ListSet.first_definitions.set_mem_complete1	40
Coq.Lists.ListSet.first_definitions.set_mem_complete2	40
Coq.Lists.ListSet.first_definitions.set_add_intro1	40
Coq.Lists.ListSet.first_definitions.set_add_intro2	40
Coq.Lists.ListSet.first_definitions.set_add_intro	40	2.0.1.2	search with cache (only 1: intro l; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	0.350341081619	121
Coq.Lists.ListSet.first_definitions.set_add_elim	40
Coq.Lists.ListSet.first_definitions.set_add_elim2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	3.61407804489	1464
Coq.Lists.ListSet.first_definitions.set_add_not_empty	40	1.0.0.1.0.4.5.2	search with cache (only 1: simple induction x; only 1: discriminate; only 1: unfold not; only 1: simpl; only 1: intros a0 l; only 1: elim (Aeq_dec a a0); only 1: intros _ _ [=]; only 1: intros _ _ [=]).	1.79995203018	1423
Coq.Lists.ListSet.first_definitions.set_add_iff	40
Coq.Lists.ListSet.first_definitions.set_add_nodup	40
Coq.Lists.ListSet.first_definitions.set_remove_1	40
Coq.Lists.ListSet.first_definitions.set_remove_2	40
Coq.Lists.ListSet.first_definitions.set_remove_3	40
Coq.Lists.ListSet.first_definitions.set_remove_iff	40
Coq.Lists.ListSet.first_definitions.set_remove_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_intro1	40
Coq.Lists.ListSet.first_definitions.set_union_intro2	40	0.0.1.0.6.3.0	search with cache (only 1: simple induction y; only 1: now simpl; only 1: intros Hnin; only 1: simpl; only 1: intros H1 H2 [H3| H4]; only 1: auto with datatypes; only 1: auto with datatypes).	3.83142209053	2257
Coq.Lists.ListSet.first_definitions.set_union_intro	40	0.0.0.1.2.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.111060857773	21
Coq.Lists.ListSet.first_definitions.set_union_elim	40
Coq.Lists.ListSet.first_definitions.set_union_iff	40
Coq.Lists.ListSet.first_definitions.set_union_nodup	40
Coq.Lists.ListSet.first_definitions.set_union_emptyL	40
Coq.Lists.ListSet.first_definitions.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.0258111953735	4
Coq.Lists.ListSet.first_definitions.set_inter_intro	40
Coq.Lists.ListSet.first_definitions.set_inter_elim1	40
Coq.Lists.ListSet.first_definitions.set_inter_elim2	40
Coq.Lists.ListSet.first_definitions.set_inter_elim	40	0.2.0.1.1	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.386088132858	70
Coq.Lists.ListSet.first_definitions.set_inter_iff	40
Coq.Lists.ListSet.first_definitions.set_inter_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_intro	40
Coq.Lists.ListSet.first_definitions.set_diff_elim1	40
Coq.Lists.ListSet.first_definitions.set_diff_elim2	40
Coq.Lists.ListSet.first_definitions.set_diff_iff	40
Coq.Lists.ListSet.first_definitions.set_diff_nodup	40
Coq.Lists.ListSet.first_definitions.set_diff_trivial	40	0.2.0.0.2.2	search with cache (only 1: unfold set_In; only 1: intros a x y; only 1: eapply set_diff_elim2; only 1: eauto; only 1: eapply set_diff_elim1; only 1: eauto).	3.95839214325	1232
Coq.Lists.ListDec.Dec_in_Prop.In_decidable	40	0.2.0.0.0.0	search with cache (only 1: induction l as [| y l IHl]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	0.0297958850861	8
Coq.Lists.ListDec.Dec_in_Prop.incl_decidable	40
Coq.Lists.ListDec.Dec_in_Prop.NoDup_decidable	40
Coq.Lists.ListDec.Dec_in_Type.incl_dec	40
Coq.Lists.ListDec.Dec_in_Type.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.Streams.unfold_Stream	40	0.4	search with cache (only 1: intros [x y]; only 1: Ltac.reflexivity).	0.0165231227875	14
Coq.Lists.Streams.Streams.tl_nth_tl	40	0.0.0.0.6	search with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: intro x; only 1: trivial).	0.296855211258	150
Coq.Lists.Streams.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Streams.Str_nth_plus	40
Coq.Lists.Streams.Streams.EqSt_reflex	40
Coq.Lists.Streams.Streams.sym_EqSt	40	2.2.7.0.4	search with cache (only 1: intro x; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto; only 1: Ltac.assumption).	0.857538938522	1076
Coq.Lists.Streams.Streams.trans_EqSt	40
Coq.Lists.Streams.Streams.eqst_ntheq	40
Coq.Lists.Streams.Streams.ntheq_eqst	40
Coq.Lists.Streams.Streams.Stream_Properties.ForAll_Str_nth_tl	40
Coq.Lists.Streams.Streams.Stream_Properties.Co_Induction_ForAll.ForAll_coind	40	6.11.2	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.319009065628	414
Coq.Lists.Streams.Map.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0253150463104	5
Coq.Lists.Streams.Map.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0214240550995	5
Coq.Lists.Streams.Map.ForAll_map	40
Coq.Lists.Streams.Map.Exists_map	40
Coq.Lists.Streams.Zip.Str_nth_tl_zipWith	40	0.0.4.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: intro m; only 1: intros s; only 1: apply IHn).	0.266896009445	147
Coq.Lists.Streams.Zip.Str_nth_zipWith	40	0.0.1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0303370952606	7
Coq.Lists.List.Facts.nil_cons	40	13	search with cache (only 1: discriminate).	0.0800030231476	85
Coq.Lists.List.Facts.destruct_list	40
Coq.Lists.List.Facts.hd_error_tl_repr	40
Coq.Lists.List.Facts.hd_error_some_nil	40	0.0.0.34	search with cache (only 1: induction l as [| T l IHl]; only 1: discriminate; only 1: intros; only 1: discriminate).	3.70614218712	3451
Coq.Lists.List.Facts.length_zero_iff_nil	40	2.0.5.0.1.1.0	search with cache (only 1: destruct l; only 1: split; only 1: auto; only 1: easy; only 1: split; only 1: discriminate; only 1: easy).	1.83708000183	1046
Coq.Lists.List.Facts.hd_error_nil	40	0	search with cache (only 1: reflexivity).	0.0126609802246	1
Coq.Lists.List.Facts.hd_error_cons	40	0.1	search with cache (only 1: unfold hd_error; only 1: firstorder  discriminate).	0.0206887722015	3
Coq.Lists.List.Facts.app_cons_not_nil	40
Coq.Lists.List.Facts.app_nil_l	40	1.1	search with cache (only 1: simpl; only 1: firstorder  discriminate).	0.0192799568176	4
Coq.Lists.List.Facts.app_nil_r	40
Coq.Lists.List.Facts.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.172780990601	7
Coq.Lists.List.Facts.app_assoc	40	1.0.25.2.4	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	34.6331989765	34107
Coq.Lists.List.Facts.app_assoc_reverse	40	0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.175736904144	6
Coq.Lists.List.Facts.app_comm_cons	40	1	search with cache (only 1: split).	0.0124588012695	2
Coq.Lists.List.Facts.app_eq_nil	40	0.1.0.0.4.2	search with cache (only 1: destruct l; only 1: split; only 1: f_equal; only 1: auto; only 1: simpl; only 1: firstorder  discriminate).	0.522889852524	195
Coq.Lists.List.Facts.app_eq_unit	40
Coq.Lists.List.Facts.elt_eq_unit	40
Coq.Lists.List.Facts.app_inj_tail_iff	40
Coq.Lists.List.Facts.app_inj_tail	40
Coq.Lists.List.Facts.app_length	40	1.0.1.8	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.511224985123	267
Coq.Lists.List.Facts.last_length	40	2.3.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: now try Nat.order'; only 1: simpl; only 1: auto).	0.441669940948	145
Coq.Lists.List.Facts.app_inv_head_iff	40	4.9.8	search with cache (only 1: intros a b; only 1: fix even_spec 1; only 1: auto).	7.94762396812	7623
Coq.Lists.List.Facts.app_inv_head	40
Coq.Lists.List.Facts.app_inv_tail	40
Coq.Lists.List.Facts.app_inv_tail_iff	40	0.12.9	search with cache (only 1: intros a b; only 1: fix even_spec 1; only 1: auto).	27.1530561447	21919
Coq.Lists.List.Facts.in_eq	40	1.2.0.0	search with cache (only 1: simpl; only 1: intro l2; only 1: intros H; only 1: firstorder  discriminate).	0.0279049873352	7
Coq.Lists.List.Facts.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0131859779358	2
Coq.Lists.List.Facts.not_in_cons	40
Coq.Lists.List.Facts.in_nil	40	2.1.0	search with cache (only 1: simpl; only 1: intro H; only 1: firstorder).	0.0222160816193	6
Coq.Lists.List.Facts.in_app_or	40
Coq.Lists.List.Facts.in_or_app	40	1.1.0.1.5.7.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: tauto; only 1: intro y; only 1: simpl; only 1: induction l as [| ? l IHl]; only 1: intuition; only 1: auto).	26.8850328922	16177
Coq.Lists.List.Facts.in_app_iff	40
Coq.Lists.List.Facts.in_split	40
Coq.Lists.List.Facts.in_elt	40	0.0.0.0.1.8.7.8	search with cache (only 1: intro l2; only 1: intros l H; only 1: generalize H; only 1: elim l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.17904210091	5647
Coq.Lists.List.Facts.in_elt_inv	40
Coq.Lists.List.Facts.in_inv	40	0	search with cache (only 1: auto).	0.0113701820374	1
Coq.Lists.List.Facts.in_dec	40
Coq.Lists.List.Elts.nth_in_or_default	40
Coq.Lists.List.Elts.nth_S_cons	40	0.0.2.0.1	search with cache (only 1: simpl; only 1: intro x; only 1: intro y; only 1: intros n l d; only 1: auto).	0.0513758659363	14
Coq.Lists.List.Elts.nth_default_eq	40
Coq.Lists.List.Elts.nth_In	40
Coq.Lists.List.Elts.In_nth	40
Coq.Lists.List.Elts.nth_overflow	40
Coq.Lists.List.Elts.nth_indep	40
Coq.Lists.List.Elts.app_nth1	40	0.0.6.1.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: inversion 1; only 1: simpl; only 1: destruct n; only 1: auto with arith; only 1: auto with arith).	4.43351697922	1599
Coq.Lists.List.Elts.app_nth2	40
Coq.Lists.List.Elts.app_nth2_plus	40	0.0.0.2.3	search with cache (only 1: intros l m a; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto with arith).	0.35600399971	106
Coq.Lists.List.Elts.nth_middle	40	0.0.0.0.2.5	search with cache (only 1: intros l m a; only 1: induction l; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto).	0.608958959579	315
Coq.Lists.List.Elts.nth_split	40
Coq.Lists.List.Elts.nth_ext	40
Coq.Lists.List.Elts.nth_error_In	40
Coq.Lists.List.Elts.In_nth_error	40
Coq.Lists.List.Elts.nth_error_None	40
Coq.Lists.List.Elts.nth_error_Some	40
Coq.Lists.List.Elts.nth_error_split	40
Coq.Lists.List.Elts.nth_error_app1	40
Coq.Lists.List.Elts.nth_error_app2	40	5.0.2.0.0.0.2.0.0.0.0	search with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl; only 1: apply IHn; only 1: auto with arith).	27.0557510853	9198
Coq.Lists.List.Elts.nth_error_nth	40	0.0.0.0.0.4.0.1.1.0.3	search with cache (only 1: induction l as [| a l IH]; only 1: intros [| n]; only 1: easy; only 1: simpl; only 1: now discriminate; only 1: intros [| n] d d'; only 1: simpl; only 1: injection 1; only 1: auto with arith; only 1: simpl; only 1: eauto).	21.6448779106	7416
Coq.Lists.List.Elts.nth_error_nth'	40
Coq.Lists.List.Elts.last_last	40
Coq.Lists.List.Elts.app_removelast_last	40
Coq.Lists.List.Elts.exists_last	40
Coq.Lists.List.Elts.removelast_app	40
Coq.Lists.List.Elts.removelast_last	40
Coq.Lists.List.Elts.remove_cons	40
Coq.Lists.List.Elts.remove_app	40
Coq.Lists.List.Elts.remove_In	40
Coq.Lists.List.Elts.notin_remove	40
Coq.Lists.List.Elts.in_remove	40
Coq.Lists.List.Elts.in_in_remove	40
Coq.Lists.List.Elts.remove_remove_comm	40
Coq.Lists.List.Elts.remove_remove_eq	40
Coq.Lists.List.Elts.remove_length_le	40
Coq.Lists.List.Elts.remove_length_lt	40
Coq.Lists.List.Elts.count_occ_In	40
Coq.Lists.List.Elts.count_occ_not_In	40
Coq.Lists.List.Elts.count_occ_nil	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.019326210022	6
Coq.Lists.List.Elts.count_occ_inv_nil	40
Coq.Lists.List.Elts.count_occ_cons_eq	40	7.0.0.3	search with cache (only 1: simpl; only 1: destruct (eq_dec x y); only 1: intuition; only 1: intuition).	0.439955949783	236
Coq.Lists.List.Elts.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.031327009201	3
Coq.Lists.List.ListOps.rev_app_distr	40
Coq.Lists.List.ListOps.rev_unit	40	0.10.3.0.0.1	search with cache (only 1: induction l as [| ? l IHl]; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite IHl; only 1: auto).	2.69243383408	1784
Coq.Lists.List.ListOps.rev_involutive	40
Coq.Lists.List.ListOps.rev_eq_app	40
Coq.Lists.List.ListOps.in_rev	40
Coq.Lists.List.ListOps.rev_length	40	1.4.0.0.0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).	3.07395792007	1236
Coq.Lists.List.ListOps.rev_nth	40
Coq.Lists.List.ListOps.rev_append_rev	40
Coq.Lists.List.ListOps.rev_alt	40
Coq.Lists.List.ListOps.Reverse_Induction.rev_list_ind	40	1.4.5.1	search with cache (only 1: intros a H; only 1: induction l as [| ? l IHl]; only 1: auto; only 1: auto).	1.47621798515	901
Coq.Lists.List.ListOps.Reverse_Induction.rev_ind	40
Coq.Lists.List.ListOps.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0152349472046	2
Coq.Lists.List.ListOps.concat_cons	40	1.0	search with cache (only 1: intros l a; only 1: auto).	0.01638007164	3
Coq.Lists.List.ListOps.concat_app	40
Coq.Lists.List.ListOps.in_concat	40
Coq.Lists.List.ListOps.list_eq_dec	40
Coq.Lists.List.Map.map_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0174469947815	2
Coq.Lists.List.Map.in_map	40	0.1.0.0.1.1.0.4.1	search with cache (only 1: intros l x; only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: subst; only 1: auto; only 1: firstorder).	17.7157511711	9301
Coq.Lists.List.Map.in_map_iff	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.139020204544	4
Coq.Lists.List.Map.map_length	40	1.0.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: firstorder  (subst; auto)).	0.0309588909149	7
Coq.Lists.List.Map.map_nth	40	0.0.0.2.2.0.0.4.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder  (subst; auto); only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: split; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	5.49303603172	4062
Coq.Lists.List.Map.map_nth_error	40
Coq.Lists.List.Map.map_app	40	0.0.2.1.0.0.0.0.0	search with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: intro y; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: f_equal; only 1: trivial).	1.09941482544	548
Coq.Lists.List.Map.map_last	40	0.0.4.0.0.1.0.7	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro y; only 1: rewrite IHl; only 1: auto).	2.17857909203	1317
Coq.Lists.List.Map.map_rev	40
Coq.Lists.List.Map.map_eq_nil	40	2.0.0.4.0	search with cache (only 1: intro l; only 1: destruct l as [| x l]; only 1: simpl; only 1: auto; only 1: firstorder  discriminate).	0.183770179749	73
Coq.Lists.List.Map.map_eq_cons	40
Coq.Lists.List.Map.map_eq_app	40
Coq.Lists.List.Map.count_occ_map	40
Coq.Lists.List.Map.flat_map_app	40
Coq.Lists.List.Map.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	4.7.0.0.7	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	6.13447403908	6803
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	0.0.0.0.0.1	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0603501796722	30
Coq.Lists.List.map_map	40	0.0.0.0.1.5	search with cache (only 1: intros a b n ? ? ?; only 1: induction l as [| x l IH]; only 1: Ltac.reflexivity; only 1: simpl; only 1: rewrite IH; only 1: reflexivity).	0.361266851425	166
Coq.Lists.List.map_ext_in	40	0.0.5.1.2.0.0.7.4	search with cache (only 1: intros Hnin; only 1: induction l; only 1: auto; only 1: firstorder  (subst; auto); only 1: simpl; only 1: rewrite IHl; only 1: f_equal; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	12.4323949814	7151
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: split; only 1: induction l; only 1: intros [=] ? []; only 1: intros [=] ? []; only 1: subst; only 1: auto; only 1: auto; only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	37.8187158108	15166
Coq.Lists.List.map_ext	40	0.0.0.0.0.7.16	search with cache (only 1: firstorder; only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	5.81156802177	5425
Coq.Lists.List.flat_map_ext	40	0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: reflexivity; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IH; only 1: auto).	0.184189081192	74
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.Fold_Left_Recursor.fold_left_app	40	0.3.0.0.0	search with cache (only 1: induction l as [| a l IHl]; only 1: intros; only 1: auto; only 1: simpl; only 1: auto).	0.0321569442749	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.Bool.existsb_exists	40
Coq.Lists.List.Bool.existsb_nth	40
Coq.Lists.List.Bool.existsb_app	40
Coq.Lists.List.Bool.forallb_forall	40
Coq.Lists.List.Bool.forallb_app	40
Coq.Lists.List.Bool.filter_In	40
Coq.Lists.List.Bool.filter_app	40
Coq.Lists.List.Bool.concat_filter_map	40
Coq.Lists.List.Bool.find_some	40
Coq.Lists.List.Bool.find_none	40	2.0.1.0.2.0.3.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: intros [=] ? []; only 1: simpl; only 1: case_eq (f a); only 1: now auto with arith; only 1: intros Ha Eq; only 1: intros a' [?| ?]; only 1: congruence; only 1: auto).	20.7925240993	3162
Coq.Lists.List.Bool.partition_cons1	40	2.5.7.0.2.3.0.1	search with cache (only 1: simpl; only 1: intros H; only 1: case (f a); only 1: intros; only 1: inversion H; only 1: rewrite H; only 1: repeat split; only 1: easy).	22.0208499432	14701
Coq.Lists.List.Bool.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0202071666718	2
Coq.Lists.List.Bool.partition_length	40
Coq.Lists.List.Bool.partition_inv_nil	40
Coq.Lists.List.Bool.elements_in_partition	40
Coq.Lists.List.Filtering.filter_map	40
Coq.Lists.List.Filtering.filter_ext_in	40
Coq.Lists.List.Filtering.ext_in_filter	40
Coq.Lists.List.Filtering.filter_ext_in_iff	40	0.0.0.0.0.0.4.6	search with cache (only 1: intros a b; only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: intros H; only 1: apply map_ext_in; only 1: auto).	19.2292990685	5736
Coq.Lists.List.Filtering.filter_ext	40	0.0.0.1.0	search with cache (only 1: intros f g l; only 1: intro y; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0352218151093	6
Coq.Lists.List.Filtering.remove_alt	40	2.0.0.8.0.0.0.9	search with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: destruct (eq_dec x z); only 1: reflexivity; only 1: f_equal).	10.2114179134	8343
Coq.Lists.List.Filtering.count_occ_alt	40
Coq.Lists.List.ListPairs.in_split_l	40
Coq.Lists.List.ListPairs.in_split_r	40	3.1.0.2.0.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intros p H; only 1: auto; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: firstorder  (subst; auto)).	6.72267818451	2263
Coq.Lists.List.ListPairs.split_nth	40
Coq.Lists.List.ListPairs.split_length_l	40	0.0.0.3.0.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intuition; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	1.13534092903	280
Coq.Lists.List.ListPairs.split_length_r	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.20534992218	10
Coq.Lists.List.ListPairs.split_combine	40
Coq.Lists.List.ListPairs.combine_split	40
Coq.Lists.List.ListPairs.in_combine_l	40
Coq.Lists.List.ListPairs.in_combine_r	40
Coq.Lists.List.ListPairs.combine_length	40	1.0.0.8.0.0.1.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: destruct l'; only 1: trivial; only 1: simpl; only 1: auto).	21.841504097	8174
Coq.Lists.List.ListPairs.combine_nth	40
Coq.Lists.List.ListPairs.in_prod_aux	40	0.5.0.0.2	search with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto)).	0.596544981003	231
Coq.Lists.List.ListPairs.in_prod	40
Coq.Lists.List.ListPairs.in_prod_iff	40
Coq.Lists.List.ListPairs.prod_length	40
Coq.Lists.List.length_order.lel_refl	40	1.31	search with cache (only 1: compute; only 1: auto with arith).	0.650092124939	876
Coq.Lists.List.length_order.lel_trans	40	9.0	search with cache (only 1: unfold lel; only 1: now intros ->).	0.32773900032	78
Coq.Lists.List.length_order.lel_cons_cons	40	26	search with cache (only 1: apply Nat.lt_succ_r).	3.31303501129	2532
Coq.Lists.List.length_order.lel_cons	40	4.0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: intros; only 1: auto).	0.027134180069	8
Coq.Lists.List.length_order.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0186250209808	3
Coq.Lists.List.length_order.lel_nil	40	0.2.0.0.0.0.0.7.2.20.1	search with cache (only 1: intros l2; only 1: revert l; only 1: unfold lel; only 1: simpl; only 1: destruct l2 as [| x2 l2]; only 1: simpl; only 1: intros x y; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	24.1546809673	24066
Coq.Lists.List.SetIncl.incl_nil_l	40	3.4.6.0	search with cache (only 1: intros; only 1: induction l as [| a l IHl]; only 1: auto; only 1: firstorder).	0.741986989975	444
Coq.Lists.List.SetIncl.incl_l_nil	40
Coq.Lists.List.SetIncl.incl_refl	40	1	search with cache (only 1: auto).	0.0129880905151	2
Coq.Lists.List.SetIncl.incl_tl	40	3.0.2	search with cache (only 1: intros x l1; only 1: intros H; only 1: intuition).	0.0367460250854	16
Coq.Lists.List.SetIncl.incl_tran	40	2.1	search with cache (only 1: intros l l1 l2; only 1: auto using app_assoc).	0.0434210300446	5
Coq.Lists.List.SetIncl.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0146660804749	1
Coq.Lists.List.SetIncl.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0160958766937	1
Coq.Lists.List.SetIncl.incl_cons	40	0.3.3.15	search with cache (only 1: intros f g l; only 1: induction l as [| ? ? IHl]; only 1: auto; only 1: firstorder  (subst; auto)).	15.9883370399	9945
Coq.Lists.List.SetIncl.incl_cons_inv	40	0	search with cache (only 1: auto with datatypes).	0.0182559490204	1
Coq.Lists.List.SetIncl.incl_app	40	0.8	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.388239860535	72
Coq.Lists.List.SetIncl.incl_app_app	40	4.0.1.0	search with cache (only 1: intro x; only 1: intro l; only 1: intro H; only 1: solve [ auto ]).	0.233098983765	23
Coq.Lists.List.SetIncl.incl_app_inv	40	3.0.11.0	search with cache (only 1: unfold incl; only 1: intros [| a l] H; only 1: now simpl; only 1: auto using in_app_or, in_or_app).	6.13264513016	2694
Coq.Lists.List.SetIncl.incl_filter	40	1.2.0.1.0.2.0.0.0.1.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: intros l2; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros H; only 1: case_eq (f a); only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros d ie; only 1: firstorder).	27.5816669464	10544
Coq.Lists.List.SetIncl.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.Cutting.firstn_nil	40	0.0.0.0.14	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.29562997818	155
Coq.Lists.List.Cutting.firstn_cons	40	0	search with cache (only 1: now simpl).	0.014396905899	1
Coq.Lists.List.Cutting.firstn_all	40	0.0.2.0.7	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: assumption).	0.363054990768	100
Coq.Lists.List.Cutting.firstn_all2	40
Coq.Lists.List.Cutting.firstn_O	40	1	search with cache (only 1: now simpl).	0.0132050514221	2
Coq.Lists.List.Cutting.firstn_le_length	40	2.0.10.2.1	search with cache (only 1: intro l; only 1: revert n; only 1: fix le_div2 1; only 1: intro n; only 1: auto with arith).	37.838447094	17528
Coq.Lists.List.Cutting.firstn_length_le	40
Coq.Lists.List.Cutting.firstn_app	40
Coq.Lists.List.Cutting.firstn_app_2	40	3.0.0.1.0.0.2.1	search with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: intro y; only 1: unfold firstn at 2, length; only 1: simpl; only 1: f_equal; only 1: firstorder).	2.80155992508	891
Coq.Lists.List.Cutting.firstn_firstn	40
Coq.Lists.List.Cutting.firstn_skipn_comm	40
Coq.Lists.List.Cutting.skipn_firstn_comm	40
Coq.Lists.List.Cutting.skipn_O	40	0.0.0.1.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0363969802856	6
Coq.Lists.List.Cutting.skipn_nil	40	0.0.0.10	search with cache (only 1: intros; only 1: induction n; only 1: now simpl; only 1: now simpl).	0.147716999054	120
Coq.Lists.List.Cutting.skipn_cons	40	0.0.3	search with cache (only 1: symmetry; only 1: simpl; only 1: reflexivity).	0.0305500030518	6
Coq.Lists.List.Cutting.skipn_all	40	0.0.0.1.2	search with cache (only 1: intros; only 1: induction l as [| ? ? H]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0380659103394	8
Coq.Lists.List.Cutting.skipn_all2	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro l; only 1: now destruct l; only 1: intro l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	1.43499207497	400
Coq.Lists.List.Cutting.firstn_skipn	40
Coq.Lists.List.Cutting.firstn_length	40	0.0.2.0.0.0.1.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: now simpl; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	4.90537691116	1251
Coq.Lists.List.Cutting.skipn_length	40	1.0.0.0.0.0.2.1.0.0	search with cache (only 1: induction n; only 1: intro l; only 1: simpl; only 1: auto with arith; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	18.0676491261	4616
Coq.Lists.List.Cutting.skipn_app	40	0.0.0.1.1.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: simpl; only 1: auto with arith; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	2.2860929966	605
Coq.Lists.List.Cutting.firstn_skipn_rev	40
Coq.Lists.List.Cutting.firstn_rev	40
Coq.Lists.List.Cutting.skipn_rev	40
Coq.Lists.List.Cutting.removelast_firstn	40
Coq.Lists.List.Cutting.removelast_firstn_len	40
Coq.Lists.List.Cutting.firstn_removelast	40
Coq.Lists.List.Combining.combine_nil	40	0.0.0.0.5	search with cache (only 1: destruct l as [| a l]; only 1: simpl in *; only 1: auto; only 1: simpl; only 1: auto).	0.128834962845	55
Coq.Lists.List.Combining.combine_firstn_l	40
Coq.Lists.List.Combining.combine_firstn_r	40	0.0.0.3.0.1.0.0.1.2.0.0	search with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intro l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: specialize IHl with l'; only 1: simpl; only 1: rewrite <- IHl; only 1: reflexivity).	16.7693037987	7055
Coq.Lists.List.Combining.combine_firstn	40
Coq.Lists.List.Add.Add_app	40
Coq.Lists.List.Add.Add_split	40
Coq.Lists.List.Add.Add_in	40	2.2.1.0.0.0.0	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: induction l; only 1: simpl; only 1: tauto; only 1: firstorder; only 1: simpl; only 1: firstorder).	1.38420319557	457
Coq.Lists.List.Add.Add_length	40	2.1.0.1.0	search with cache (only 1: induction 1 as [| ? ? ? ? IHAdd]; only 1: auto; only 1: simpl in *; only 1: rewrite ?IHAdd; only 1: trivial).	0.0431818962097	9
Coq.Lists.List.Add.Add_inv	40
Coq.Lists.List.Add.incl_Add_inv	40
Coq.Lists.List.ReDun.NoDup_Add	40
Coq.Lists.List.ReDun.NoDup_remove	40
Coq.Lists.List.ReDun.NoDup_remove_1	40
Coq.Lists.List.ReDun.NoDup_remove_2	40	0.1.10	search with cache (only 1: unfold not; only 1: apply NoDup_Add; only 1: apply Add_app).	0.368161916733	211
Coq.Lists.List.ReDun.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0532789230347	4
Coq.Lists.List.ReDun.NoDup_rev	40
Coq.Lists.List.ReDun.NoDup_filter	40
Coq.Lists.List.ReDun.nodup_fixed_point	40
Coq.Lists.List.ReDun.nodup_In	40
Coq.Lists.List.ReDun.nodup_incl	40
Coq.Lists.List.ReDun.NoDup_nodup	40
Coq.Lists.List.ReDun.nodup_inv	40
Coq.Lists.List.ReDun.NoDup_count_occ	40
Coq.Lists.List.ReDun.NoDup_count_occ'	40
Coq.Lists.List.ReDun.NoDup_nth_error	40
Coq.Lists.List.ReDun.NoDup_nth	40
Coq.Lists.List.ReDun.NoDup_incl_length	40
Coq.Lists.List.ReDun.NoDup_length_incl	40
Coq.Lists.List.ReDun.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.NatSeq.cons_seq	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0191750526428	5
Coq.Lists.List.NatSeq.seq_length	40	0.0.2.1.10.4	search with cache (only 1: intro l; only 1: induction l; only 1: intros a0; only 1: split; only 1: simpl; only 1: auto).	14.6228489876	7458
Coq.Lists.List.NatSeq.seq_nth	40
Coq.Lists.List.NatSeq.seq_shift	40
Coq.Lists.List.NatSeq.in_seq	40
Coq.Lists.List.NatSeq.seq_NoDup	40
Coq.Lists.List.NatSeq.seq_app	40
Coq.Lists.List.NatSeq.seq_S	40	0.5.0.2.2.2.0.0.1	search with cache (only 1: intro len; only 1: simpl; only 1: induction len as [| len IHlen]; only 1: simpl in *; only 1: intros H; only 1: now rewrite Nat.add_0_r; only 1: simpl; only 1: intro y; only 1: now rewrite Nat.add_succ_r, IHlen).	7.25060606003	4490
Coq.Lists.List.Exists_Forall.One_predicate.Exists_exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_nil	40	0.5.9	search with cache (only 1: split; only 1: now simpl; only 1: destruct 1).	0.536247968674	345
Coq.Lists.List.Exists_Forall.One_predicate.Exists_cons	40	0.0.3.0.0.0.42	search with cache (only 1: split; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	6.65394496918	8602
Coq.Lists.List.Exists_Forall.One_predicate.Exists_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Exists_fold_right	40	0.0.0.0.0.3.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: inversion 1; only 1: induction l; only 1: simpl; only 1: firstorder; only 1: firstorder).	2.42675995827	1010
Coq.Lists.List.Exists_Forall.One_predicate.incl_Exists	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_forall	40	2.0.3.12.4.0.5	search with cache (only 1: induction l as [| ? ? IHl]; only 1: firstorder; only 1: split; only 1: inversion_clear 1; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: intuition).	30.695538044	18343
Coq.Lists.List.Exists_Forall.One_predicate.Forall_nth	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv	40	0.1.6	search with cache (only 1: intro l; only 1: inversion 1; only 1: auto).	0.0548520088196	29
Coq.Lists.List.Exists_Forall.One_predicate.Forall_inv_tail	40	0.0.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0276081562042	3
Coq.Lists.List.Exists_Forall.One_predicate.Forall_app	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_elt	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rev	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_rect	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_dec	40
Coq.Lists.List.Exists_Forall.One_predicate.Forall_fold_right	40	0.0.0.0.0.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: now intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	1.51329708099	408
Coq.Lists.List.Exists_Forall.One_predicate.incl_Forall	40
Coq.Lists.List.Exists_Forall.map_ext_Forall	40
Coq.Lists.List.Exists_Forall.Exists_impl	40
Coq.Lists.List.Exists_Forall.Exists_or	40
Coq.Lists.List.Exists_Forall.Exists_or_inv	40
Coq.Lists.List.Exists_Forall.Forall_impl	40	4.5.8.10.0.0	search with cache (only 1: intros P Q H l H0; only 1: induction H0 as [x l H0| x l H0 IHExists]; only 1: constructor; only 1: constructor; only 1: auto; only 1: auto).	15.1999299526	16350
Coq.Lists.List.Exists_Forall.Forall_and	40	0.2.1.13	search with cache (only 1: intros HF; only 1: intros f l; only 1: rewrite !Forall_forall; only 1: firstorder).	2.88436317444	1603
Coq.Lists.List.Exists_Forall.Forall_and_inv	40
Coq.Lists.List.Exists_Forall.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall.Exists_Forall_neg	40
Coq.Lists.List.Exists_Forall.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: apply Forall_nil; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.0705420970917	10
Coq.Lists.List.Exists_Forall.Forall_Exists_dec	40
Coq.Lists.List.Exists_Forall.incl_Forall_in_iff	40
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2.Forall2_refl	40	1	search with cache (only 1: constructor).	0.0120191574097	2
Coq.Lists.List.Forall2.Forall2_app_inv_l	40
Coq.Lists.List.Forall2.Forall2_app_inv_r	40
Coq.Lists.List.Forall2.Forall2_app	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallPairs.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.Repeat.repeat_length	40	1.1.0.2.10	search with cache (only 1: revert n; only 1: induction n; only 1: easy; only 1: simpl; only 1: eauto with arith).	0.495005130768	213
Coq.Lists.List.Repeat.repeat_spec	40	0.0.0.0.0.3.3.33.0	search with cache (only 1: revert n; only 1: intro l; only 1: induction l as [| a l IHl]; only 1: induction 1; only 1: simpl; only 1: destruct 1; only 1: subst; only 1: auto with arith; only 1: intuition).	6.64527010918	8891
Coq.Lists.List.Repeat.repeat_cons	40	0.4.6.0.32	search with cache (only 1: induction n; only 1: trivial; only 1: simpl in *; only 1: rewrite IHn; only 1: f_equal).	1.77373695374	1718
Coq.Lists.List.Repeat.repeat_app	40	3.0.1.2.0.0.1.30	search with cache (only 1: revert m; only 1: induction n; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: firstorder).	3.52432489395	2363
Coq.Lists.List.Repeat.repeat_eq_app	40
Coq.Lists.List.Repeat.repeat_eq_cons	40	0.0.0.0.3.0.6	search with cache (only 1: destruct n; only 1: firstorder  discriminate; only 1: simpl; only 1: inversion 1; only 1: split; only 1: auto; only 1: f_equal).	1.22865009308	534
Coq.Lists.List.Repeat.repeat_eq_elt	40
Coq.Lists.List.Repeat.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	5.0.3.0.0.9	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: intuition).	2.26170396805	1129
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Permutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons	40	1.0.1	search with cache (only 1: repeat red; only 1: intros l m l' m' Hpermll' Hpermmm'; only 1: auto).	0.126561164856	5
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_head	40	0.0.2.9	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: intuition).	2.55924391747	433
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_tail	40	0.2.0.0.3	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: now constructor; only 1: do 2 (etransitivity; try eassumption)).	0.401984930038	63
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_append	40	0.0.1.0.7.24	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.94366002083	1503
Coq.Lists.SetoidPermutation.Permutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0306649208069	1
Coq.Lists.SetoidPermutation.Permutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.Permutation_PermutationA	40	1.0.0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: now transitivity l').	0.0562808513641	6
Coq.Lists.SetoidPermutation.Permutation.eqlistA_PermutationA	40	1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: now constructor).	0.0358259677887	4
Coq.Lists.SetoidPermutation.Permutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.Permutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.MemoFunction.memo_get_correct	40
Coq.Lists.StreamMemo.MemoFunction.imemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dmemo_get_correct	40
Coq.Lists.StreamMemo.DependentMemoFunction.dimemo_get_correct	40
Coq.Lists.SetoidList.Type_with_equality.InA_altdef	40	0.0.1.1.2.0.1.1.0.0	search with cache (only 1: intro n; only 1: intro l; only 1: split; only 1: induction 1; only 1: left; only 1: apply H; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	3.68649196625	2000
Coq.Lists.SetoidList.Type_with_equality.InA_cons	40	0.0.0.0.0.1.2.3.0	search with cache (only 1: intros; only 1: constructor; only 1: firstorder using Sorted_inv; only 1: inversion H; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	1.37895989418	763
Coq.Lists.SetoidList.Type_with_equality.InA_nil	40	1.3	search with cache (only 1: firstorder using StronglySorted_rect; only 1: inversion_clear H).	0.0427529811859	30
Coq.Lists.SetoidList.Type_with_equality.InA_alt	40	1.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.801676988602	347
Coq.Lists.SetoidList.Type_with_equality.NoDupA_altdef	40
Coq.Lists.SetoidList.Type_with_equality.incl_nil	40	6.2	search with cache (only 1: rewrite <- (firstn_all (A:=l))  at 1; only 1: now simpl).	0.136962175369	17
Coq.Lists.SetoidList.Type_with_equality.eqlistA_altdef	40	0.5.0.0.0.1.0.0	search with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: revert l'; only 1: induction 1; only 1: left; only 1: auto).	1.15461802483	779
Coq.Lists.SetoidList.Type_with_equality.equivlist_equiv	40	11.7.3.0.2	search with cache (only 1: constructor; only 1: intros x; only 1: firstorder; only 1: now simpl; only 1: firstorder).	18.2610430717	12788
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equiv	40
Coq.Lists.SetoidList.Type_with_equality.eqlistA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InA_eqA	40	0.2.0.15	search with cache (only 1: intros l' Hnd Hlen Hincl; only 1: rewrite 2!InA_alt; only 1: intros H; only 1: firstorder).	1.88088107109	1282
Coq.Lists.SetoidList.Type_with_equality.In_InA	40	1.0.3	search with cache (only 1: intros x x' H; only 1: rewrite InA_alt; only 1: firstorder).	0.0214381217957	7
Coq.Lists.SetoidList.Type_with_equality.InA_split	40
Coq.Lists.SetoidList.Type_with_equality.InA_app	40
Coq.Lists.SetoidList.Type_with_equality.InA_app_iff	40
Coq.Lists.SetoidList.Type_with_equality.InA_rev	40
Coq.Lists.SetoidList.Type_with_equality.InA_singleton	40	0.0.3	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.123090982437	26
Coq.Lists.SetoidList.Type_with_equality.InA_double_head	40	0.0	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.103370904922	2
Coq.Lists.SetoidList.Type_with_equality.InA_permute_heads	40	0.0.0.1.0.1.0	search with cache (only 1: rewrite !InA_cons; only 1: Ltac.split; only 1: intuition; only 1: intros [?| [?| ?]]; only 1: tauto; only 1: tauto; only 1: tauto).	0.11444401741	9
Coq.Lists.SetoidList.Type_with_equality.InA_app_idem	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_app	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_rev	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_swap	40
Coq.Lists.SetoidList.Type_with_equality.NoDupA.NoDupA_singleton	40	0.0.0.4.1	search with cache (only 1: constructor; only 1: red; only 1: intros; only 1: inv; only 1: auto).	0.0228440761566	10
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_proper	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_cons_nil	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_nil_eq	40	0.0.4.0.0.0	search with cache (only 1: destruct l as [| a l]; only 1: intros Hincl; only 1: reflexivity; only 1: intros E; only 1: exfalso; only 1: now eapply InA_nil, E, InA_cons_hd).	0.0592439174652	30
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_double_head	40	0.0.0.3	search with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: tauto).	0.0391719341278	7
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_permute_heads	40
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_app_idem	40	0.0.4.8	search with cache (only 1: red; only 1: intros; only 1: rewrite InA_app_iff; only 1: tauto).	1.28863286972	353
Coq.Lists.SetoidList.Type_with_equality.EquivlistA.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_commutes_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.Fold_With_Restriction.fold_right_add_restr	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_commutes	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.Fold.fold_right_add	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_eqlistA2	40	0.0.1.0.0.0.0.32	search with cache (only 1: intros l' d d' Hlen Hnth; only 1: induction 1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: apply Comp; only 1: auto; only 1: auto).	3.52361392975	4426
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.Fold2_With_Restriction.fold_right_add_restr2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_commutes2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_equivlistA2	40
Coq.Lists.SetoidList.Type_with_equality.Fold2.fold_right_add2	40
Coq.Lists.SetoidList.Type_with_equality.Remove.InA_dec	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_filter	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_InA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.Remove.removeA_equivlistA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_ltA	40
Coq.Lists.SetoidList.Type_with_equality.InfA_compat	40
Coq.Lists.SetoidList.Type_with_equality.InfA_eqA	40	55.1	search with cache (only 1: intuition; only 1: now rewrite H).	19.8994128704	14203
Coq.Lists.SetoidList.Type_with_equality.SortA_InfA_InA	40
Coq.Lists.SetoidList.Type_with_equality.In_InfA	40	2.7.0.0.0.0	search with cache (only 1: simple induction l; only 1: intros H; only 1: intros; only 1: constructor; only 1: simpl; only 1: intuition).	6.60846209526	2112
Coq.Lists.SetoidList.Type_with_equality.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.0403859615326	8
Coq.Lists.SetoidList.Type_with_equality.InfA_alt	40
Coq.Lists.SetoidList.Type_with_equality.InfA_app	40	0.1.0.1.1.1.1.26	search with cache (only 1: induction l1; only 1: intros; only 1: inv; only 1: eauto; only 1: intros; only 1: inv; only 1: constructor; only 1: auto).	13.2106559277	10392
Coq.Lists.SetoidList.Type_with_equality.SortA_app	40
Coq.Lists.SetoidList.Type_with_equality.SortA_NoDupA	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_length	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.app_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_app	40	0.1.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0388488769531	6
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev_app	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.rev_eqlistA_compat	40
Coq.Lists.SetoidList.Type_with_equality.EqlistA.eqlistA_rev	40	0.0.5.1.1.3	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	1.04693388939	586
Coq.Lists.SetoidList.Type_with_equality.EqlistA.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_sort	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_InA	40
Coq.Lists.SetoidList.Type_with_equality.Filter.filter_split	40
Coq.Lists.SetoidList.Find.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	3.8.13	search with cache (only 1: intros H; only 1: fix odd_spec 1; only 1: auto).	31.8989069462	22909
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0.0.0	search with cache (only 1: simpl; only 1: revert P a f; only 1: trivial).	0.0381639003754	3
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.0236110687256	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0607759952545	5
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0328040122986	2
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0309329032898	2
Coq.NArith.BinNat.N.two_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.033411026001	2
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: trivial).	0.0239028930664	1
Coq.NArith.BinNat.N.pos_pred_spec	40	4.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0679008960724	10
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.0.43	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	1.44753408432	1412
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.1.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	29.4375798702	8849
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: reflexivity).	3.86960601807	989
Coq.NArith.BinNat.N.pred_succ	40	0.0.18	search with cache (only 1: destruct n as [| n]; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.320981025696	194
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0392370223999	3
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0457949638367	1
Coq.NArith.BinNat.N.add_0_l	40	1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0417079925537	4
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.0359389781952	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.0309660434723	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40	6.1.1.6	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro q; only 1: easy).	3.40094685555	1326
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: now split; only 1: easy').	0.0604078769684	5
Coq.NArith.BinNat.N.compare_le_iff	40	2.3.0	search with cache (only 1: revert m; only 1: intro m; only 1: easy').	0.828267097473	107
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: auto).	0.0699288845062	8
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	1	search with cache (only 1: now nzsimpl).	0.157739877701	2
Coq.NArith.BinNat.N.succ_double_spec	40	2	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.177584886551	11
Coq.NArith.BinNat.N.double_add	40	2.0.0.0.0.2.4	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	4.49106192589	603
Coq.NArith.BinNat.N.succ_double_add	40	1.0.0.1.0.1.0.0	search with cache (only 1: destruct n, m; only 1: now nzsimpl; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: unfold succ, add; only 1: trivial).	1.38721489906	165
Coq.NArith.BinNat.N.double_mul	40	2	search with cache (only 1: now destruct n, m).	0.626900911331	88
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.1	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0561850070953	12
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.0267889499664	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: now destr_eq H).	1.31338095665	120
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.8.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: intros H; only 1: apply le_0_l; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	4.48917007446	976
Coq.NArith.BinNat.N.succ_double_lt_mono	40	9	search with cache (only 1: now destruct n, m).	1.16728878021	88
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0878880023956	9
Coq.NArith.BinNat.N.compare_0_r	40	4.17.19	search with cache (only 1: intro H; only 1: apply (neq_succ_0 0); only 1: false_hyp ltac:(H) nlt_0_r).	15.7723629475	9634
Coq.NArith.BinNat.N.pow_0_r	40	2	search with cache (only 1: reflexivity).	0.0246810913086	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	2.0	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.257843017578	29
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40	5.2.9.0.3	search with cache (only 1: cases ltac:(n); only 1: order'; only 1: fix odd_spec 1; only 1: intro m; only 1: now nzsimpl').	25.3819708824	7663
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.1.0.0.6	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now apply pred_0; only 1: intro m; only 1: intro H; only 1: false_hyp ltac:(H) nle_succ_0).	2.28983306885	532
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0.0	search with cache (only 1: unfold div, modulo; only 1: intro H; only 1: generalize (div_eucl_spec a b); only 1: now destruct div_eucl).	0.0700240135193	4
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.050283908844	2
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40	0.2.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.163568019867	22
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	3.0.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (H, _); only 1: apply le_0_l).	0.0770399570465	9
Coq.NArith.BinNat.N.testbit_even_0	40
Coq.NArith.BinNat.N.testbit_odd_0	40	0.7	search with cache (only 1: rewrite two_succ; only 1: now destruct a).	0.0622589588165	14
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40
Coq.NArith.BinNat.N.testbit_neg_r	40	0.1.0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: easy; only 1: easy; only 1: now destruct a; only 1: easy; only 1: now destruct a; only 1: easy; only 1: easy'; only 1: easy).	1.42863893509	194
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0368008613586	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0253400802612	1
Coq.NArith.BinNat.N.ge_le_iff	40	2.3.7	search with cache (only 1: unfold leb, le; only 1: rewrite compare_gt_iff; only 1: reflexivity).	8.9053709507	2210
Coq.NArith.BinNat.N.ge_le	40	4.1.1	search with cache (only 1: unfold le, ge; only 1: rewrite compare_antisym; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	0.717137813568	51
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0288200378418	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.0.0.0.1.1.0.1.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: destruct (Pos.sub_mask p q) as [| [r| r| ]| ] || destruct p; only 1: trivial; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial).	11.0298299789	2769
Coq.NArith.BinNat.N.iter_swap_gen	40
Coq.NArith.BinNat.N.iter_swap	40	0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	0.0437211990356	4
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	1.0.0.3.0	search with cache (only 1: intros; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	0.0814728736877	11
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	0.309667110443	4
Coq.NArith.Ndec.Peqb_complete	40	0	search with cache (only 1: apply Pos.eqb_eq).	0.0101668834686	1
Coq.NArith.Ndec.Peqb_Pcompare	40	0.51	search with cache (only 1: rewrite ?CompOpp_iff, ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	10.5702288151	18208
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0177619457245	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0183799266815	1
Coq.NArith.Ndec.Neqb_complete	40	0	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0186049938202	1
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	16.0.8	search with cache (only 1: intro H; only 1: eqb2eq; only 1: congruence).	8.57728600502	9477
Coq.NArith.Ndec.Ndiv2_eq	40	1.0.17	search with cache (only 1: intros EQ; only 1: eqb2eq; only 1: now subst).	0.551347970963	390
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0266349315643	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.5.0.1	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.105360031128	33
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	9.38	search with cache (only 1: apply Nat.leb_le; only 1: trivial).	20.2696540356	21267
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.15.7.0.0.0	search with cache (only 1: unfold Nleb; only 1: intros; only 1: rewrite !N2Nat.inj_double; only 1: eqb2eq; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	13.1256849766	9050
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0.3.0	search with cache (only 1: intro H0; only 1: eqb2eq; only 1: now rewrite Nleb_alt, N.leb_le).	0.162817001343	26
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40	1.12.32.6	search with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: rewrite Nleb_Nle; only 1: N.solve_min).	4.09630799294	6486
Coq.NArith.Ndec.Nmin_le_2	40	2.0	search with cache (only 1: rewrite Nleb_Nle; only 1: N.solve_min).	0.0218780040741	4
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.0	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0368118286133	3
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	1.3	search with cache (only 1: intro n; only 1: now destruct n).	0.040146112442	34
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	10.0.0.2.4.15.2	search with cache (only 1: intro n; only 1: symmetry; only 1: induction n as [| n IHn]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: Nat.solve_min).	5.61835384369	10699
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.2.20.4	search with cache (only 1: intros x; only 1: destruct x; only 1: trivial; only 1: unfold ni_min; only 1: trivial).	3.66074109077	4463
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.4.9.7.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: symmetry; only 1: Nat.cases ltac:(n); only 1: unfold ni_min; only 1: trivial; only 1: trivial).	4.08151102066	4814
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0186169147491	4
Coq.NArith.Ndist.ni_min_inf_r	40	0.1.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: intros; only 1: trivial).	0.0184500217438	6
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.0.1.2.0	search with cache (only 1: unfold ni_le; only 1: intros n m; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: trivial).	0.0854420661926	64
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40	7.3.9.2	search with cache (only 1: intros n m; only 1: revert m; only 1: inversion 1; only 1: Nat.solve_min).	4.61029601097	4964
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40
Coq.NArith.Ndigits.Nshiftr_nat_S	40	2.0.0.2.0	search with cache (only 1: intros a ?; only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: auto).	0.0402889251709	12
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: destruct n as [| p], m as [| q]; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.042013168335	11
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40	0.11.2	search with cache (only 1: intro q; only 1: fix even_spec 1; only 1: easy || now destruct Hm).	2.11904811859	1445
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40	3.21.4	search with cache (only 1: intro q; only 1: fix even_spec 1; only 1: trivial).	26.4357609749	24018
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0128099918365	3
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0166339874268	4
Coq.NArith.Ndigits.Pshiftl_nat_N	40	0.0.15.0.0.0.1.0	search with cache (only 1: intros a n; only 1: induction n as [| n IHn]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- IHn; only 1: simpl; only 1: trivial).	19.0470108986	14299
Coq.NArith.Ndigits.Pshiftl_nat_plus	40	0.2.1.3.6.0	search with cache (only 1: intros a n; only 1: intros; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	2.08705306053	1223
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.586308002472	353
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite N.ldiff_spec; only 1: simpl; only 1: apply N.pos_ldiff_spec).	0.0584540367126	13
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	8.1	search with cache (only 1: intros; only 1: now destruct n as [| [p| p| ]]).	0.36133313179	202
Coq.NArith.Ndigits.Ndouble_bit0	40	2	search with cache (only 1: now destruct n).	0.024561882019	21
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.7.0.0	search with cache (only 1: intros n; only 1: destruct n; only 1: easy; only 1: trivial).	0.128242015839	91
Coq.NArith.Ndigits.Ndiv2_double	40	2.1.4.0.3.1	search with cache (only 1: intros; only 1: destruct n; only 1: now try rewrite H; only 1: vm_compute in H; only 1: unfold N.div2, N.to_nat; only 1: now destruct p).	3.48875308037	1913
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	15.0	search with cache (only 1: intros n H; only 1: now destruct n as [| [p| p| ]]).	1.28028893471	1091
Coq.NArith.Ndigits.Ndiv2_correct	40	2.2.1.2	search with cache (only 1: intros m Hm; only 1: destruct m; only 1: trivial; only 1: now destruct p).	0.128556013107	116
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.7	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.332448959351	186
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	5.51882100105	2702
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros a a'; only 1: destruct a as [| p]; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	2.00345897675	949
Coq.NArith.Ndigits.Nless_def_3	40	2.6	search with cache (only 1: fix odd_spec 1; only 1: congruence).	0.101547002792	75
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	0.19.4.0.4.0.3	search with cache (only 1: unfold Nless; only 1: intro m; only 1: destruct m; only 1: discriminate; only 1: intros; only 1: vm_compute in H; only 1: now exists p).	13.9855217934	20668
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40	0.24.5	search with cache (only 1: intros n m p; only 1: fix odd_spec 1; only 1: auto with arith).	15.7712469101	14813
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: destruct a as [| p]; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	1.38237905502	701
Coq.NArith.NArith.TestOrder.test	40	0	search with cache (only 1: N.order).	0.0388829708099	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	11.0.0.0.4	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: congruence).	2.12016987801	873
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.3.2.1.3	search with cache (only 1: unfold N.div2, N.to_nat; only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.03426003456	226
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: subst n'; only 1: now N.nzsimpl').	0.0781559944153	9
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.0431079864502	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0.1.0.1	search with cache (only 1: induction n; only 1: nat2N; only 1: Nat.nzsimpl; only 1: nat2N).	0.186053037643	6
Coq.NArith.Nnat.Nat2N.inj_add	40	0	search with cache (only 1: nat2N).	0.04421210289	1
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.0436661243439	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0468590259552	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0404751300812	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0438320636749	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0421459674835	1
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	10.3.13.3.5.9	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intuition; only 1: induction x; only 1: simpl; only 1: destr_bool).	10.8120319843	14163
Coq.Strings.Ascii.eqb_sym	40
Coq.Strings.Ascii.eqb_eq	40
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, Nat.eqb_eq).	0.0218660831451	1
Coq.Strings.Ascii.eqb_compat	40	5.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.0133588314056	7
Coq.Strings.Ascii.ascii_N_embedding	40	0.5.8	search with cache (only 1: fix even_spec 1; only 1: intro m; only 1: auto).	1.82651209831	974
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0.0.3	search with cache (only 1: destruct y; only 1: t_eqb; only 1: t_eqb).	0.168085098267	58
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: now rewrite <- not_true_iff_false, BinPos.Pos.eqb_eq).	0.0518260002136	1
Coq.Strings.String.eqb_compat	40	0.0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: apply eq_true_iff_eq; only 1: now rewrite 2!BinNat.N.eqb_eq, Exx', Eyy').	0.0619299411774	3
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.nat.of_to_nat	40
Coq.Strings.Byte.nat.to_of_nat	40
Coq.Strings.Byte.nat.to_of_nat_iff	40
Coq.Strings.Byte.nat.to_of_nat_option_map	40
Coq.Strings.Byte.nat.to_nat_bounded	40
Coq.Strings.Byte.nat.of_nat_None_iff	40
Coq.Strings.Byte.N.of_to_N	40
Coq.Strings.Byte.N.to_of_N	40
Coq.Strings.Byte.N.to_of_N_iff	40
Coq.Strings.Byte.N.to_of_N_option_map	40
Coq.Strings.Byte.N.to_N_bounded	40
Coq.Strings.Byte.N.of_N_None_iff	40
Coq.Strings.Byte.N.to_N_via_nat	40
Coq.Strings.Byte.N.to_nat_via_N	40
Coq.Strings.Byte.N.of_N_via_nat	40
Coq.Strings.Byte.N.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	10	search with cache (only 1: trivial).	0.0426340103149	32
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	0	search with cache (only 1: trivial).	0.0323519706726	1
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	5	search with cache (only 1: trivial).	0.0134580135345	6
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1b	40
Coq.nsatz.NsatzTactic.nsatz1.psos_r1	40	1.0.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0745458602905	4
Coq.nsatz.NsatzTactic.nsatz1.nsatzR_diff	40
Coq.nsatz.NsatzTactic.nsatz1.P0Z_correct	40	3.0	search with cache (only 1: intro; only 1: trivial).	0.242647171021	36
Coq.nsatz.NsatzTactic.nsatz1.Rext	40
Coq.nsatz.NsatzTactic.nsatz1.Rset	40	6.6	search with cache (only 1: unfold Setoid_Theory; only 1: apply ring_setoid).	0.698935985565	231
Coq.nsatz.NsatzTactic.nsatz1.Rtheory	40
Coq.nsatz.NsatzTactic.nsatz1.PolZadd_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZmul_correct	40
Coq.nsatz.NsatzTactic.nsatz1.R_power_theory	40
Coq.nsatz.NsatzTactic.nsatz1.norm_correct	40
Coq.nsatz.NsatzTactic.nsatz1.PolZeq_correct	40
Coq.nsatz.NsatzTactic.nsatz1.mult_l_correct	40
Coq.nsatz.NsatzTactic.nsatz1.compute_list_correct	40
Coq.nsatz.NsatzTactic.nsatz1.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0180308818817	2
Coq.nsatz.NsatzTactic.Qcri	40
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	search with cache (only 1: lia).	0.0135519504547	1
Coq.nsatz.NsatzTactic.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0165479183197	2
Coq.nsatz.NsatzTactic.Zdi	40
Coq.nsatz.Nsatz.Rsth	40	0.0.0.0.0.0.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.256261110306	10
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	0	search with cache (only 1: auto with real).	0.064080953598	1
Coq.nsatz.Nsatz.Rcri	40	0.7.27	search with cache (only 1: intros x Hx; only 1: rewrite Rmult_comm; only 1: apply Rsth).	10.3335428238	3648
Coq.nsatz.Nsatz.Rdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	16	search with cache (only 1: constructor).	0.0305941104889	108
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40	1.2.0.0.0.7.0	search with cache (only 1: intro; only 1: unfold Rabs; only 1: case (Rcase_abs x); only 1: intros; only 1: field; only 1: intros H1; only 1: field).	6.17836999893	862
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40
Coq.Reals.Ratan.pos_opp_lt	40	2.0.3.0.4	search with cache (only 1: intro; only 1: intros; only 1: rewrite <- Rplus_0_r; only 1: apply Rplus_lt_reg_l with (- exp 0); only 1: lra).	3.34999299049	310
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.tan_atan	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_eq0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.atan_tan	40
Coq.Reals.Ratan.atan_inv	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	3.10.0	search with cache (only 1: intros x n; only 1: unfold Datan_seq; only 1: auto with real).	14.5141279697	1959
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.Ratan.sin_atan	40
Coq.Reals.Ratan.cos_atan	40
Coq.Reals.Ratan.asin_atan	40
Coq.Reals.Ratan.asin_0	40
Coq.Reals.Ratan.asin_1	40
Coq.Reals.Ratan.asin_inv_sqrt2	40
Coq.Reals.Ratan.asin_opp	40
Coq.Reals.Ratan.asin_bound	40
Coq.Reals.Ratan.asin_bound_lt	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof PI_RGT_0; only 1: unfold asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: intros Hx1 Hx2; only 1: pose proof (atan_bound (x / sqrt (1 - x²))); only 1: lra).	0.330078840256	9
Coq.Reals.Ratan.sin_asin	40
Coq.Reals.Ratan.asin_sin	40
Coq.Reals.Ratan.cos_asin	40
Coq.Reals.Ratan.tan_asin	40
Coq.Reals.Ratan.derivable_pt_asin	40
Coq.Reals.Ratan.derive_pt_asin	40	5.0.3	search with cache (only 1: intros x H; only 1: pose proof (tan_atan x) as Hatan; only 1: shelve).	2.49898099899	274
Coq.Reals.Ratan.acos_atan	40
Coq.Reals.Ratan.acos_asin	40
Coq.Reals.Ratan.asin_acos	40	0.0.2.0.0.0	search with cache (only 1: intros x; only 1: unfold acos, asin; only 1: repeat case Rle_dec; only 1: lra; only 1: lra; only 1: lra).	0.279735803604	8
Coq.Reals.Ratan.acos_0	40
Coq.Reals.Ratan.acos_1	40
Coq.Reals.Ratan.acos_opp	40
Coq.Reals.Ratan.acos_inv_sqrt2	40
Coq.Reals.Ratan.acos_bound	40
Coq.Reals.Ratan.acos_bound_lt	40	7.2.9	search with cache (only 1: intros x1 H16; only 1: pose proof PI_RGT_0 as HPi; only 1: shelve).	5.64733099937	1640
Coq.Reals.Ratan.cos_acos	40
Coq.Reals.Ratan.acos_cos	40
Coq.Reals.Ratan.sin_acos	40
Coq.Reals.Ratan.tan_acos	40
Coq.Reals.Ratan.derivable_pt_acos	40
Coq.Reals.Ratan.derive_pt_acos	40	10.0	search with cache (only 1: intros x Hxrange; only 1: shelve).	5.7025179863	491
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.2.3.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: intro l; only 1: inversion 1; only 1: simpl; only 1: reflexivity).	0.443884134293	177
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40	3.0.0.0.0.3.1.2.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: auto; only 1: simpl; only 1: case (Rle_dec r a); only 1: simpl; only 1: intro; only 1: auto with arith; only 1: auto with arith).	1.37363386154	690
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40	5.5.1.5.0.4	search with cache (only 1: induction l as [| r l Hrecl]; only 1: inversion 1; only 1: intros [| ] ? Heq; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	14.8384509087	9061
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.0.12	search with cache (only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: auto).	2.08840203285	1237
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.0.1.1	search with cache (only 1: induction l; only 1: simpl map; only 1: intro l; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0801019668579	41
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0	search with cache (only 1: congruence).	0.011265039444	1
Coq.Reals.RList.RList_P22	40	0.3.4.0	search with cache (only 1: intros; only 1: induction l1; only 1: intuition; only 1: reflexivity).	0.475825071335	113
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.Sigma.sigma_split	40
Coq.Reals.Rsigma.Sigma.sigma_diff	40
Coq.Reals.Rsigma.Sigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.177618026733	13
Coq.Reals.Rsigma.Sigma.sigma_first	40
Coq.Reals.Rsigma.Sigma.sigma_last	40
Coq.Reals.Rsigma.Sigma.sigma_eq_arg	40
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.1.1.0.0.1.0.0.1	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition; only 1: generalize (Rtotal_order r1 r2); only 1: elim (base_fp r2); only 1: auto with real).	2.07119703293	830
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	1.0.0.9.3.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: destruct H; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	2.86839103699	1584
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intros; only 1: auto with real).	0.106658935547	14
Coq.Reals.Rbasic_fun.Rmin_left	40	0.1.0.0.1	search with cache (only 1: intros x y H; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.15847992897	18
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0723431110382	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.112355947495	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.11.1.0.0.4.1.9	search with cache (only 1: intros a n; only 1: apply Rmin_case_strong; only 1: intro; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto with real; only 1: intros; only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto using Rle_antisym).	18.8622908592	9661
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40
Coq.Reals.Rbasic_fun.Rmin_glb	40
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intros Eq0; only 1: auto; only 1: intro; only 1: auto).	0.145773172379	16
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.093300819397	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0870749950409	6
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0743730068207	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0845990180969	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.0.0.0.0.0.17	search with cache (only 1: unfold Rmax; only 1: intros; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	35.6698560715	10384
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.2.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.28900384903	50
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.7	search with cache (only 1: intros x y z; only 1: apply Rmax_lub_lt; only 1: assumption).	0.41707611084	114
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40	1.0.2.0.0.0.0.2	search with cache (only 1: unfold Rabs; only 1: intros; only 1: case (Rcase_abs r); only 1: intro; only 1: absurd (r >= 0); only 1: auto with real; only 1: assumption; only 1: trivial).	3.17820096016	731
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	0.7.1.0.1.1.1.0.0.0	search with cache (only 1: intros a H; only 1: case H; only 1: intros H1; only 1: rewrite Rabs_right; only 1: auto using Rplus_lt_compat_l with real; only 1: auto with real; only 1: intros H1; only 1: rewrite Rabs_right; only 1: field; only 1: auto with real).	18.0388679504	8297
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.3.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	1.10622906685	164
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40	1.1.20.1.0.0.9.9.38	search with cache (only 1: constructor; only 1: intros H0; only 1: intro; only 1: eapply Rlt_asym; only 1: eauto; only 1: auto with real; only 1: red; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2).	12.5527539253	17186
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	7	search with cache (only 1: solve_proper).	0.158087968826	34
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	0	search with cache (only 1: intuition).	0.0231099128723	1
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.1.0.1.2.23.0.0.0	search with cache (only 1: intro; only 1: red; only 1: intro; only 1: destruct H as [Hl Hr]; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	36.9109480381	28898
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	0.0.4.0.1	search with cache (only 1: simple induction 1; only 1: simpl; only 1: auto with real; only 1: intros; only 1: apply Rmult_0_l).	0.0478382110596	10
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.2.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.0429780483246	8
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40	7.2.26	search with cache (only 1: intro H7; only 1: intro; only 1: shelve).	33.3796651363	17871
Coq.Reals.NewtonInt.FTC_Newton	40	1	search with cache (only 1: auto with real).	0.0291821956635	11
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40	15.18.3	search with cache (only 1: intro f; only 1: intros x xB; only 1: firstorder).	39.4576160908	26677
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40	1.4.9	search with cache (only 1: intros b; only 1: intros f X x; only 1: shelve).	4.63419103622	931
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40	1.11.1	search with cache (only 1: intro f; only 1: intro; only 1: shelve).	3.65397715569	1180
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	7.5.14	search with cache (only 1: intros n m; only 1: intros n1 n2 H; only 1: now destr_eq H).	5.47844099998	2950
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40	2.44.7	search with cache (only 1: intro; only 1: fix ind_0_1_SS 1; only 1: eauto).	11.9154369831	17926
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40	3.3	search with cache (only 1: intros a n H; only 1: now apply Nat.lt_eq_cases, Nat.succ_le_mono).	0.0794579982758	8
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.0	search with cache (only 1: intro n; only 1: trivial).	0.0628709793091	3
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0.1	search with cache (only 1: intros; only 1: auto with real).	0.0281209945679	3
Coq.Reals.Rfunctions.pow_1	40	0.1.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.0260488986969	5
Coq.Reals.Rfunctions.pow_add	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.0625939369202	9
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0	search with cache (only 1: auto with real).	0.0127470493317	1
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.0.2.0.0.6	search with cache (only 1: intro t; only 1: simple induction n; only 1: simpl; only 1: ring; only 1: simpl; only 1: intros; only 1: ring).	5.53563904762	1889
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	3.0.0.0.2.0.1	search with cache (only 1: simple induction n; only 1: intro; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: unfold pow; only 1: auto with real).	1.48092484474	485
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.0681328773499	10
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.1.0.0.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: simpl; only 1: rewrite Hrecn; only 1: auto with real).	0.175659894943	37
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	0.3.0.0	search with cache (only 1: intros; only 1: simpl; only 1: rewrite <- Rmult_assoc; only 1: ring_Rsqr).	0.0337438583374	7
Coq.Reals.Rfunctions.PowerRZ.Z_compl.intP	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_NR0	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.0114369392395	1
Coq.Reals.Rfunctions.PowerRZ.powerRZ_1	40	0.1.3	search with cache (only 1: Bool.destr_bool; only 1: rewrite Rmult_comm; only 1: apply Rmult_1_l).	0.100665092468	33
Coq.Reals.Rfunctions.PowerRZ.powerRZ_NOR	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_add	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_lt	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0466420650482	8
Coq.Reals.Rfunctions.PowerRZ.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_R1	40
Coq.Reals.Rfunctions.PowerRZ.pow_powerRZ	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_ind	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_inv	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_neg	40
Coq.Reals.Rfunctions.PowerRZ.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40	2.0.23	search with cache (only 1: intros a b; only 1: apply Rle_ge; only 1: apply Rabs_pos).	6.14952707291	5469
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	3.12.1.2.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: unfold R_dist; only 1: split_Rabs; only 1: ring; only 1: ring).	27.8230161667	13067
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	3.0.5	search with cache (only 1: fix le_div2 1; only 1: intro n; only 1: trivial).	4.20547914505	432
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40	0.0.2.0.0.3.0	search with cache (only 1: intro; only 1: apply lt_0_INR; only 1: induction n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.13020300865	136
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	1.0	search with cache (only 1: intros; only 1: apply Nat.div2_double).	0.0209369659424	3
Coq.Reals.Exp_prop.div2_S_double	40	1.0	search with cache (only 1: intro; only 1: apply Nat.div2_succ_double).	0.0198431015015	3
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.P_Rmin	40	1.0.0.1.0.0.2	search with cache (only 1: intro y0; only 1: intros; only 1: apply Rmin_case_strong; only 1: intro H6; only 1: assumption; only 1: intro; only 1: assumption).	0.566411972046	211
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40	0.0.5.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (exp_ln x); only 1: rewrite <- (exp_ln y); only 1: generalize (Rle_le_eq x² y²); only 1: auto with real; only 1: assumption; only 1: assumption).	8.31381893158	2066
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	17.0.0.0.1.0	search with cache (only 1: intros; only 1: apply exp_inv; only 1: repeat rewrite exp_ln || rewrite exp_Ropp; only 1: unfold Rpower; only 1: reflexivity; only 1: apply exp_pos).	13.0895738602	6420
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	5.34156298637	1146
Coq.Reals.Rpower.Rinv_Rdiv	40	0.1.0	search with cache (only 1: intros; only 1: field; only 1: auto).	0.0645520687103	4
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40	8.0.1	search with cache (only 1: intros f g D l x H; only 1: unfold D_in; only 1: firstorder).	0.798233985901	250
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	1.0.2	search with cache (only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.0764999389648	15
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.056834936142	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	search with cache (only 1: intros n H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0641539096832	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.3.11	search with cache (only 1: intros r Hrnz Hrpos; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	3.54027485847	1508
Coq.Reals.RIneq.Rgt_not_eq	40	3.4.0.0.4	search with cache (only 1: intros; only 1: intros abs; only 1: apply (Rlt_irrefl r1); only 1: destruct abs; only 1: N.auto').	4.59043002129	2265
Coq.Reals.RIneq.Rlt_dichotomy_converse	40
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40
Coq.Reals.RIneq.Rdichotomy	40
Coq.Reals.RIneq.Rlt_le	40	1.5.1	search with cache (only 1: intros; only 1: left; only 1: trivial).	0.0865850448608	17
Coq.Reals.RIneq.Rgt_ge	40	0.1.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0892949104309	4
Coq.Reals.RIneq.Rle_ge	40	6.0.0.0.3	search with cache (only 1: induction 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	2.06322693825	885
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0797979831696	6
Coq.Reals.RIneq.Rlt_gt	40	1.0.0	search with cache (only 1: intros; only 1: red; only 1: trivial).	0.0572052001953	4
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0414669513702	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.10155916214	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0619699954987	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.1.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (Rtotal_order r1 r2); only 1: intuition eauto  3).	0.160637140274	7
Coq.Reals.RIneq.Rnot_gt_le	40	0.0.0.2	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.26341509819	47
Coq.Reals.RIneq.Rnot_gt_ge	40
Coq.Reals.RIneq.Rnot_lt_ge	40	1.0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0905809402466	7
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.133694887161	4
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	1.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.103235006332	11
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.0	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.0765929222107	4
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.261912107468	51
Coq.Reals.RIneq.Rle_not_gt	40	0.0.0.1	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	0.0898380279541	5
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0.0.1.0	search with cache (only 1: do 2 intro; only 1: red; only 1: intros H H'; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0956790447235	7
Coq.Reals.RIneq.Req_le	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0578920841217	3
Coq.Reals.RIneq.Req_ge	40	0.0.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.060693025589	4
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0617990493774	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: auto).	0.0538971424103	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.3.3	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0948481559753	19
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	3.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: auto with real).	0.0616960525513	6
Coq.Reals.RIneq.Rle_le_eq	40	9.1	search with cache (only 1: intros a b; only 1: intuition).	0.634979963303	239
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0626900196075	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.0545060634613	4
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0721411705017	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40
Coq.Reals.RIneq.Rle_lt_trans	40
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0708248615265	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40
Coq.Reals.RIneq.Rle_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.147709846497	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.115901947021	3
Coq.Reals.RIneq.Rge_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.346918106079	17
Coq.Reals.RIneq.Rlt_le_dec	40	6.0.4.0.5	search with cache (only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intro m; only 1: intuition).	18.4122798443	5296
Coq.Reals.RIneq.Rgt_ge_dec	40	1.2.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.108412981033	6
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.167368173599	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.288404941559	64
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.108783960342	3
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.24827003479	58
Coq.Reals.RIneq.Rle_or_lt	40	0.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.322536945343	31
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.358159065247	56
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	1.6.0.5.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: auto with real).	6.67054009438	2237
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	0.513575077057	7
Coq.Reals.RIneq.Rplus_ne	40	0.0.0.0.0	search with cache (only 1: split; only 1: ring; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: apply CReal_plus_0_l).	0.091719865799	5
Coq.Reals.RIneq.Rplus_opp_l	40	0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_opp_r).	1.27941513062	35
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	2.1.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intuition eauto  2; only 1: auto with real).	0.0910189151764	6
Coq.Reals.RIneq.Rplus_eq_compat_r	40	4.8	search with cache (only 1: intros n m p; only 1: congruence).	1.61970496178	618
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40
Coq.Reals.RIneq.Rinv_r	40	2.6.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite RinvImpl.Rinv_def; only 1: destruct (Req_appart_dec r R0); only 1: contradiction; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rquot2, Rrepr_1; only 1: rewrite CReal_inv_r; only 1: reflexivity).	10.5410280228	964
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0871779918671	3
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0878820419312	3
Coq.Reals.RIneq.Rmult_0_r	40	3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.173387050629	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0555629730225	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.136380910873	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.104787826538	5
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.0	search with cache (only 1: intros r r1 r2; only 1: apply f_equal).	0.0628578662872	2
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.3.2	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with real).	0.0999839305878	20
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40	0.4.0.8.0.1	search with cache (only 1: intros n m; only 1: intros [H| H]; only 1: subst; only 1: ring; only 1: subst; only 1: ring).	2.02992200851	952
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	1.6.0	search with cache (only 1: intros r b; only 1: intros n; only 1: auto with real).	0.0735430717468	10
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0477888584137	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	1.8	search with cache (only 1: intro b1; only 1: intuition).	0.776083230972	213
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	6.5	search with cache (only 1: intros n m; only 1: auto with real).	1.65706205368	445
Coq.Reals.RIneq.Rmult_plus_distr_r	40	3.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_plus, Rrepr_plus, Rrepr_mult, Rrepr_mult; only 1: ring).	0.63755106926	7
Coq.Reals.RIneq.Rsqr_0	40	4.60.1	search with cache (only 1: unfold IZR; only 1: compute; only 1: auto with real).	13.814868927	8258
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	0	search with cache (only 1: congruence).	0.0440690517426	1
Coq.Reals.RIneq.Ropp_0	40	1	search with cache (only 1: ring).	0.0496289730072	2
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.0.5	search with cache (only 1: intros m H; only 1: rewrite H; only 1: auto with real).	0.0853719711304	16
Coq.Reals.RIneq.Ropp_involutive	40	1.1	search with cache (only 1: Bool.destr_bool; only 1: ring).	0.0739738941193	13
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.2	search with cache (only 1: intros n m; only 1: ring).	0.0636129379272	4
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.1	search with cache (only 1: intros; only 1: ring).	0.113315105438	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0618269443512	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0672109127045	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0814878940582	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0666980743408	2
Coq.Reals.RIneq.Rminus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0619831085205	2
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0604269504547	2
Coq.Reals.RIneq.Ropp_minus_distr	40	0.0	search with cache (only 1: intros; only 1: ring).	0.062735080719	2
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0635840892792	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.8.0.0	search with cache (only 1: intros r b; only 1: pattern r at 2; only 1: intros ->; only 1: ring).	2.98444104195	378
Coq.Reals.RIneq.Rminus_eq_0	40	0	search with cache (only 1: ring).	0.0540928840637	1
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40	0.2.10	search with cache (only 1: intros x y; only 1: symmetry; only 1: auto with real).	5.97693610191	1638
Coq.Reals.RIneq.Rplus_minus	40	0.1.1	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: ring).	0.0967018604279	5
Coq.Reals.RIneq.Rminus_eq_contra	40	4.1	search with cache (only 1: intros; only 1: eauto with real).	0.108747005463	23
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0729219913483	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0792858600616	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	7.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: ring).	0.348254203796	39
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.10178399086	2
Coq.Reals.RIneq.Rinv_1	40
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0790369510651	3
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.084203004837	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.0.3.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: auto with real).	0.136610031128	12
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.2.3	search with cache (only 1: intros a b Hb; only 1: field; only 1: auto with real).	0.333856105804	26
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.4.3	search with cache (only 1: intros a b Hb; only 1: field; only 1: auto with real).	0.872020959854	88
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	6	search with cache (only 1: intuition).	0.0777139663696	22
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.2.1.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0696680545807	8
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.0.10	search with cache (only 1: intro n; only 1: red; only 1: unfold Rle; only 1: intuition).	1.61131501198	439
Coq.Reals.RIneq.Rplus_ge_compat_l	40
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	1.22730922699	160
Coq.Reals.RIneq.Rplus_ge_compat_r	40	0.2.1.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0734300613403	8
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0696318149567	4
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.2.0.1.5.10.4.13	search with cache (only 1: intros g c0; only 1: intros r r1 r2 H; only 1: destruct H; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: red; only 1: auto with real).	38.2422671318	33483
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.0.3	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0814459323883	7
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	0.1	search with cache (only 1: intros q1 q2 r1 r2 EQ LT Hr1 Hr2; only 1: auto with real).	0.050843000412	3
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	2.2.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.317974090576	39
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.121408939362	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	3.1.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.879781007767	50
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.1.0.4.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.118138074875	15
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.1.0.2.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: rewrite H; only 1: auto with real).	0.176446914673	22
Coq.Reals.RIneq.Ropp_le_contravar	40	3.3.0	search with cache (only 1: unfold Rle; only 1: intros n m ?; only 1: intuition).	0.188699007034	28
Coq.Reals.RIneq.Ropp_ge_contravar	40	1	search with cache (only 1: auto with real).	0.320423841476	41
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0738949775696	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0762660503387	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0723938941956	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0732090473175	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0796868801117	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	2.0.2	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.309464931488	50
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40	5.4.0	search with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	12.0937459469	730
Coq.Reals.RIneq.Rmult_gt_compat_r	40	1	search with cache (only 1: eauto using Rlt_trans with rorders).	0.0851149559021	32
Coq.Reals.RIneq.Rmult_gt_compat_l	40	15	search with cache (only 1: intuition).	0.833709001541	362
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40	18	search with cache (only 1: intuition).	4.7133898735	2020
Coq.Reals.RIneq.Rmult_ge_compat_r	40	19	search with cache (only 1: intuition).	10.6345438957	4581
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	7.4	search with cache (only 1: intros a b n ? ? ?; only 1: intuition).	0.993097066879	358
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40	2.5.7.12	search with cache (only 1: intros k e2; only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: intro; only 1: eauto using Rmult_lt_compat_l with rorders).	33.1542999744	12773
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.107505083084	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.2.1.8.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	1.17246699333	386
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	1.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0779831409454	5
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	0.0.0.7	search with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.980116844177	193
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	0.155382156372	10
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.1.0.1	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.850084781647	123
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.0.1	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0614190101624	4
Coq.Reals.RIneq.Rle_0_1	40	0.1.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0905919075012	6
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.28268694878	847
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	1.0.0.3.8.8	search with cache (only 1: intros; only 1: unfold IZR; only 1: destruct n as [| n]; only 1: auto with real; only 1: simpl; only 1: reflexivity).	3.93660998344	1360
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.20.1.0	search with cache (only 1: intro; only 1: simpl; only 1: Nat.cases ltac:(n); only 1: auto with real; only 1: auto with real).	11.6630120277	3874
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40
Coq.Reals.RIneq.INR_not_0	40	0.0.0.1.2	search with cache (only 1: intro m; only 1: destruct m; only 1: auto with real; only 1: intro H; only 1: auto with real).	0.228871107101	23
Coq.Reals.RIneq.not_0_INR	40	0.0.4.1.1.1.0.2	search with cache (only 1: intro n; only 1: Nat.cases n; only 1: intros Hn Hm; only 1: auto with real; only 1: simpl; only 1: destruct n; only 1: auto with real; only 1: auto with real).	14.0310029984	1268
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40	1.0.16	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: trivial).	9.28854298592	3428
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	4.1	search with cache (only 1: intros; only 1: reflexivity).	0.0564420223236	7
Coq.Reals.RIneq.IZR_POS_xO	40	0.2.3.11	search with cache (only 1: induction p; only 1: trivial; only 1: trivial; only 1: auto with real).	4.54705500603	1467
Coq.Reals.RIneq.IZR_POS_xI	40	3.1.0.0	search with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: ring).	0.102918863297	8
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40	3.0.4.4	search with cache (only 1: intros l; only 1: fix odd_spec 1; only 1: intro q; only 1: auto with real).	4.05381894112	1100
Coq.Reals.RIneq.succ_IZR	40
Coq.Reals.RIneq.opp_IZR	40	1.2.5.0.0.10.15	search with cache (only 1: intros a; only 1: destruct a; only 1: auto with real; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: ring).	25.918763876	9810
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.0.0.1.13.0	search with cache (only 1: red; only 1: intros a b; only 1: intros; only 1: apply H; only 1: apply eq_IZR; only 1: auto with zarith real).	10.4028718472	3023
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	29.7053468227	9931
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.0.1	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.615858078003	108
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0825769901276	3
Coq.Reals.RIneq.double	40	4.2	search with cache (only 1: intros n; only 1: ring).	0.170521020889	24
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.155189990997	25
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40
Coq.Reals.RIneq.Rdiv_minus_distr	40	5.8.2.4	search with cache (only 1: intros n m p; only 1: unfold Rminus; only 1: unfold Rdiv; only 1: ring).	13.10841012	3419
Coq.Reals.RIneq.Req_EM_T	40	0.0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.115175008774	4
Coq.Reals.RIneq.pos_half_prf	40	0.0.0.0.0.0.0.0	search with cache (only 1: apply Rinv_0_lt_compat; only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0976610183716	8
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40	3.0.27.7	search with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: intros; only 1: eauto).	3.76373410225	8498
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40	5.15.4.13.0.41	search with cache (only 1: destruct x; only 1: exfalso; only 1: eapply Pos.Private_Tac.lt_irrefl; only 1: induction n; only 1: auto with arith; only 1: Nat.order').	20.9458141327	10621
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	3.0.1.0.4.16	search with cache (only 1: intros ? q; only 1: destruct q as [q| q| ]; only 1: congruence; only 1: intros; only 1: now destruct Hn || easy; only 1: now destruct 1).	4.60149812698	4991
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40	6.5.0.0.1.2.0.8	search with cache (only 1: Nat.induct ltac:(n); only 1: intro n; only 1: destruct n as [| n]; only 1: Nat.order; only 1: simpl; only 1: inversion 1; only 1: intros n m Hn Hm; only 1: intuition).	37.9944851398	18120
Coq.Reals.ArithProp.le_minusni_n	40	13.2.0.2.20	search with cache (only 1: intros a b; only 1: destruct a as [| a]; only 1: intro; only 1: intuition; only 1: intuition).	13.3595440388	11149
Coq.Reals.ArithProp.lt_minus_O_lt	40	21.2.12	search with cache (only 1: intro l; only 1: intros m H; only 1: intuition).	37.4204158783	20426
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	9.3.0.26	search with cache (only 1: induction n as [| n hn]; only 1: apply Nat.mul_le_mono_pos_l, Nat.lt_0_succ; only 1: simpl; only 1: Lia.lia).	25.1231000423	13867
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	1.1	search with cache (only 1: intros m IH; only 1: auto with arith).	0.498562812805	50
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40	4.2.1.0	search with cache (only 1: intros; only 1: rewrite Ropp_div; only 1: pattern PI at 1; only 1: shelve).	1.15321087837	139
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	7.0	search with cache (only 1: intros n; only 1: auto with real).	0.155065059662	39
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	4.0	search with cache (only 1: intros x y H H0; only 1: auto).	0.0252561569214	6
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40	1.6.1.1.0.0.14.6	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: intros l1 l2; only 1: now try Nat.order'; only 1: simpl; only 1: intro cv; only 1: intro; only 1: auto).	25.9826111794	15879
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0297269821167	3
Coq.Reals.Ranalysis2.quadruple_var	40	8.5	search with cache (only 1: intros; only 1: field).	0.361956119537	123
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	7.0	search with cache (only 1: intros; only 1: assumption).	0.0884327888489	24
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	15.9	search with cache (only 1: intros x y z Hxley Hylez contra; only 1: auto).	1.71425199509	1662
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	5.5.2.0.1.4.0.8.0	search with cache (only 1: intros; only 1: intro; only 1: elim H; only 1: intros; only 1: elim H; only 1: intro H5; only 1: intro; only 1: apply H1; only 1: apply H1).	4.65347099304	4352
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	2.4.7.3	search with cache (only 1: intro; only 1: intros n m; only 1: unfold included; only 1: firstorder).	2.0758690834	1481
Coq.Reals.Rtopology.open_set_P2	40	0.0.20.22	search with cache (only 1: intro; only 1: intro Rew; only 1: unfold open_set, complementary; only 1: firstorder).	23.5492589474	31100
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	10.5	search with cache (only 1: intro; only 1: intuition).	0.290554046631	194
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40	3.0.0.3.0.0.1.3.0.0	search with cache (only 1: unfold open_set; only 1: unfold included, neighbourhood; only 1: intro n; only 1: intro; only 1: intros; only 1: elim H0; only 1: intro; only 1: elim H0; only 1: unfold included; only 1: firstorder).	15.7061641216	6529
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.sequence.EUn_noempty	40
Coq.Reals.Rseries.sequence.Un_in_EUn	40
Coq.Reals.Rseries.sequence.Un_bound_imp	40	14.2.6	search with cache (only 1: intros a Ha; only 1: unfold EUn; only 1: firstorder  (subst; auto)).	12.6830050945	10331
Coq.Reals.Rseries.sequence.growing_prop	40
Coq.Reals.Rseries.sequence.Un_cv_crit_lub	40
Coq.Reals.Rseries.sequence.Un_cv_crit	40
Coq.Reals.Rseries.sequence.finite_greater	40
Coq.Reals.Rseries.sequence.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.0.5.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: apply Pn; only 1: auto with arith).	0.522915124893	175
Coq.Reals.Rseries.Un_growing_shift	40	2.4.2.0.1	search with cache (only 1: intro n; only 1: intros x H; only 1: intros eps; only 1: simpl; only 1: auto with arith).	1.13216710091	527
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	0.0.1.0.0	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.0762209892273	6
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	2.0.1.10	search with cache (only 1: intros n m p H H0; only 1: eapply Qle_trans; only 1: eauto; only 1: intuition subst; auto with qarith).	6.78869390488	2440
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	0.4	search with cache (only 1: intros H; only 1: reflexivity).	0.132260084152	42
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	2.1	search with cache (only 1: intros H; only 1: auto with zarith).	0.0732281208038	14
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos_log2floor_plus1_spec_Qpower	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.connectives.sumbool_or_not_or	40	5	search with cache (only 1: intuition).	0.10383605957	23
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	1.0.1	search with cache (only 1: unfold Qlt, Qle; only 1: intros; only 1: intuition Z.order).	0.0741090774536	5
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	0.0.0.0	search with cache (only 1: intros x y; only 1: split; only 1: apply Z.nlt_ge; only 1: apply Z.le_ngt).	0.0759620666504	4
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	0	search with cache (only 1: reflexivity).	0.047562122345	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	0.3.1.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: rewrite H; only 1: apply CReal_plus_opp_r).	9.66206002235	351
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	5.1	search with cache (only 1: intros r; only 1: ring).	0.898087978363	68
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40	0.0.0.0.0.0.0.0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite CReal_mult_comm, (CReal_mult_comm z); only 1: apply (CReal_plus_lt_reg_l (- (x * y))); only 1: rewrite CReal_plus_comm; only 1: pose proof CReal_plus_opp_r; only 1: rewrite H1; only 1: rewrite CReal_mult_comm, CReal_opp_mult_distr_l, CReal_mult_comm; only 1: rewrite <- CReal_mult_plus_distr_l; only 1: apply CReal_mult_lt_0_compat; only 1: exact H; only 1: apply (CReal_plus_lt_reg_l y); only 1: rewrite CReal_plus_comm, CReal_plus_0_l; only 1: rewrite <- CReal_plus_assoc, H1, CReal_plus_0_l; only 1: exact H0).	39.6090829372	2196
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40	14.25	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	38.0759270191	6643
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0654911994934	3
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Q_factorDenom	40	2.3.2.0.0.0.0.0.1.4	search with cache (only 1: intros n p; only 1: destruct n; only 1: red; only 1: simpl; only 1: intros E1; only 1: auto; only 1: reflexivity; only 1: intros; only 1: compute; only 1: ring).	8.92962002754	3749
Coq.Reals.Cauchy.QExtra.Q_factorNum_l	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: f_equal).	0.120713949203	4
Coq.Reals.Cauchy.QExtra.Q_factorNum	40	0.1.0.1	search with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros a Ha; only 1: ring).	0.144304037094	12
Coq.Reals.Cauchy.QExtra.Q_reduce_fl	40	0.0.0.3	search with cache (only 1: intros a ?; only 1: unfold Qeq; only 1: cbn; only 1: reflexivity).	0.116904973984	28
Coq.Reals.Cauchy.QExtra.Qle_neq	40	3.2	search with cache (only 1: intros a b; only 1: apply Z.le_neq).	0.0998811721802	45
Coq.Reals.Cauchy.QExtra.Qplus_lt_compat	40	0.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: unfold Qplus, Qle, Qlt; only 1: intros (x1, x2) (y1, y2) (z1, z2) (t1, t2); only 1: simpl; only 1: simpl_mult; only 1: intros; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify a b end; only 1: rewrite Z.add_comm; only 1: apply Z.add_le_lt_mono; only 1: match goal with | |- (?a <= ?b)%Z => ring_simplify z1 t1 (Z.pos z2) (Z.pos t2) a b end; only 1: auto with zarith; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: do 2 (apply Z.mul_lt_mono_pos_r; try easy)).	3.90589594841	702
Coq.Reals.Cauchy.QExtra.Qgt_lt	40	1	search with cache (only 1: eauto with qarith).	0.0183210372925	11
Coq.Reals.Cauchy.QExtra.Qlt_gt	40	0.0	search with cache (only 1: intros p q H; only 1: assumption).	0.0140991210938	2
Coq.Reals.Cauchy.QExtra.Qmult_lt_0_compat	40	8.0.0.2.2	search with cache (only 1: unfold Qeq, Qmult; only 1: intros p q; only 1: unfold Qle, Qlt; only 1: simpl in *; only 1: now auto with zarith).	2.09721899033	951
Coq.Reals.Cauchy.QExtra.Qmult_lt_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_le_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qinv_swap_pos	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: lia).	0.0337960720062	4
Coq.Reals.Cauchy.QExtra.Qinv_swap_neg	40	0.0	search with cache (only 1: intros a b; only 1: reflexivity).	0.0168349742889	2
Coq.Reals.Cauchy.QExtra.Qabs_Qlt_condition	40
Coq.Reals.Cauchy.QExtra.Qabs_gt	40
Coq.Reals.Cauchy.QExtra.Qpower_0_r	40	1	search with cache (only 1: reflexivity).	0.0123949050903	2
Coq.Reals.Cauchy.QExtra.Qpower_1_r	40	0.2.0	search with cache (only 1: intros q; only 1: simpl; only 1: now reflexivity).	0.019033908844	5
Coq.Reals.Cauchy.QExtra.Qpower_not_0	40
Coq.Reals.Cauchy.QExtra.Qpower_pos_lt	40
Coq.Reals.Cauchy.QExtra.Qpower_minus	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_pos	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_neg	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qzero_eq	40	1	search with cache (only 1: reflexivity).	0.0124809741974	2
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_decomp'	40
Coq.Reals.Cauchy.QExtra.QarchimedeanExp2_Pos	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40	0.3.4.4.3.4	search with cache (only 1: intros Hn; only 1: simpl; only 1: split; only 1: unfold Pos.pow; only 1: apply Pos.size_le; only 1: apply Pos.size_gt).	23.2565209866	5363
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	6	search with cache (only 1: reflexivity).	0.0192708969116	7
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	search with cache (only 1: reflexivity).	0.012195110321	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	search with cache (only 1: reflexivity).	0.0130031108856	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	search with cache (only 1: reflexivity).	0.0130610466003	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	1.0	search with cache (only 1: intros q; only 1: ring).	0.0559120178223	23
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40	4.2	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.0745170116425	42
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40	4.0.1	search with cache (only 1: fix gcd_greatest 1; only 1: intros x y z Hle Hlt; only 1: auto with *).	1.48765206337	33
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40	0.0.0.0.33	search with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	33.2648429871	5853
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	4.0.4.0.0.0	search with cache (only 1: intros x y H; only 1: split; only 1: destruct H; only 1: trivial; only 1: destruct H; only 1: trivial).	7.88116598129	458
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40	0.28	search with cache (only 1: fix gcd_divide 1; only 1: eauto with qarith).	21.1475138664	5511
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	4.0.8.3.14.1	search with cache (only 1: intros x y z Hxeqy Hzltx; only 1: intros Hapart; only 1: apply Hzltx; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	28.2813129425	18991
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.1.0.0.0.1.0.0.1	search with cache (only 1: constructor; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	3.46741604805	144
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	0.2	search with cache (only 1: intros n m p Hp; only 1: split).	0.0876019001007	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40	2.2.30	search with cache (only 1: intros EQ; only 1: fix gcd_divide 1; only 1: trivial).	23.2181508541	15089
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.259224891663	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.229345083237	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	5.4.1	search with cache (only 1: intros x y z Hle Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	2.35128617287	243
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.244796991348	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	4.73950481415	1024
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros x y H z t H0; only 1: apply (CRealEq_trans _ (x + t)); only 1: destruct H0; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: contradiction; only 1: apply CReal_plus_proper_r; only 1: apply H).	10.9946641922	1252
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	0.0.0.1.2.0.0.0.2	search with cache (only 1: intros; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	2.18567705154	382
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.0526940822601	1
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.1.0.0.1	search with cache (only 1: intros x y Heq; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	0.256609916687	34
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	2.7.0.1	search with cache (only 1: unfold continuity_pt, opp_fct; only 1: intros f x H; only 1: intros Ha Eq; only 1: auto with real).	1.39155006409	391
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40	1.0.8.1	search with cache (only 1: unfold increasing, decreasing, opp_fct; only 1: intros f Hf H0; only 1: intro; only 1: auto with real).	1.33919596672	358
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.1.1	search with cache (only 1: intro p; only 1: intros l'; only 1: easy).	0.102996110916	6
Coq.Reals.Ranalysis1.continuity_pt_div	40	1.0.2.3.3.0.1.0.0.1	search with cache (only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intuition eauto  2; only 1: apply limit_mul; only 1: assumption; only 1: unfold limit1_in in H; only 1: unfold limit1_in in H0; only 1: apply limit_inv; only 1: assumption; only 1: auto with real).	17.8977248669	4283
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40	2.2.0.2.0.6.0.0	search with cache (only 1: intros; only 1: rewrite (div_eq_inv f1 f2); only 1: intro; only 1: apply continuity_pt_mult; only 1: trivial; only 1: apply continuity_pt_inv; only 1: trivial; only 1: auto).	7.14041996002	2246
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.167783021927	8
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.12232708931	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40	0.12.4.11	search with cache (only 1: intros f x l; only 1: fix odd_spec 1; only 1: intros; only 1: firstorder).	36.6283111572	17899
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	5.0	search with cache (only 1: intros; only 1: eauto).	0.118818998337	14
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	0.9.5	search with cache (only 1: intros n m p; only 1: intros <-; only 1: now Z.swap_greater).	2.37731695175	626
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_mirr	40
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	0.1.0.0.0.0.0.1.0.0.0.3	search with cache (only 1: intros; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: exact H).	4.41701507568	1070
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.0.0.0.0.0.2.2.0.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_opp_rev; only 1: apply derivable_pt_lim_opp; only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	7.485216856	2131
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.7.1	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.476607084274	170
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	0.0.0.0.0.0.0.0.0.0.0.11.4	search with cache (only 1: intros r1 r2; only 1: apply derive_pt_eq_0; only 1: unfold fct_cte, derivable_pt_lim; only 1: intros; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: unfold Rdiv; only 1: rewrite Rmult_0_l; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	20.8078460693	3937
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.3.9	search with cache (only 1: intros a; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	1.4306910038	258
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.41	search with cache (only 1: red; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	20.5334010124	16781
Coq.Reals.Ranalysis1.derive_pt_pow	40	1.0.4	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_pow).	0.242770910263	21
Coq.Reals.Ranalysis1.pr_nu	40
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40	13.4.0.20	search with cache (only 1: intros h n t; only 1: case n; only 1: now f_equal; only 1: firstorder).	33.6159071922	15088
Coq.Reals.SeqProp.min_ss	40
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40	0.11.8.3.2	search with cache (only 1: intros m H; only 1: right; only 1: revert n; only 1: fix even_spec 1; only 1: auto with real).	12.442813158	5780
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	0	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.0733110904694	1
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40	1.0.2.0.1.3.1.1.0	search with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite Rmult_comm; only 1: replace (PI / 2) with PI2 by (unfold PI; field); only 1: ring; only 1: field).	7.77207708359	2252
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40	0.2.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup).	0.0538129806519	7
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40	0.0	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.0333690643311	2
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	0.0.0.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0515129566193	5
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40	0.1.6.11.1.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI3_cos_PI6; only 1: rewrite sin_PI6_cos_PI3; only 1: rewrite cos_PI6; only 1: rewrite sin_PI6; only 1: field).	4.10627484322	2056
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0	search with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	0.0726480484009	6
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0.0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: elim (Rplus_ne 1); only 1: intros a b; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0535879135132	5
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40	3.11	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: Lra.lra).	0.861545085907	280
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40	0.0.0.2.8.0.5	search with cache (only 1: intros a0; only 1: unfold toRad, toDeg; only 1: field; only 1: split; only 1: apply PI_neq0; only 1: unfold plat; only 1: discrR).	11.500385046	5654
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.0.0	search with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: apply pr_nu).	0.0309541225433	3
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.0.0.0.3.5.2	search with cache (only 1: intro; only 1: unfold derivable; only 1: intro; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	4.66282510757	2642
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0345048904419	5
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0331900119781	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.0309910774231	5
Coq.Reals.Ranalysis4.derive_pt_exp	40	1.0.1	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.179683923721	26
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.498226881027	65
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.456962108612	66
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	0.0.0.0.0.0.0	search with cache (only 1: apply Rlt_trans with (0 + 1); only 1: apply Rlt_n_Sn; only 1: rewrite Rplus_comm; only 1: apply Rplus_lt_compat_l; only 1: replace R1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0368521213531	7
Coq.Reals.DiscrR.IZR_eq	40	0.0.0	search with cache (only 1: intros x y H; only 1: apply f_equal; only 1: auto).	0.0227620601654	3
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	3.9.9.3	search with cache (only 1: intros p0; only 1: generalize (Rlt_irrefl 0); only 1: unfold Rsqr; only 1: auto with real).	16.583824873	12882
Coq.Reals.R_sqr.Rsqr_mult	40
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0806860923767	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	5.0.6	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.622281074524	269
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.027163028717	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	1.2	search with cache (only 1: intro n; only 1: eauto with real).	0.0584940910339	21
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40	2.2.0.22.0	search with cache (only 1: unfold Rsqr; only 1: intro l; only 1: intros; only 1: apply Rsqr_0_uniq; only 1: trivial).	21.1927700043	15345
Coq.Reals.R_sqr.Rsqr_minus_plus	40
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0259909629822	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.12.0.3	search with cache (only 1: intros v w; only 1: intros; only 1: unfold Rsqr; only 1: auto with real).	2.7265188694	1776
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.2.5.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	0.643812894821	227
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40	12.0.0.0	search with cache (only 1: intros; only 1: rewrite (Rsqr_abs x); only 1: rewrite (Rsqr_abs y); only 1: auto with real).	3.36099886894	1464
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.1.0.14	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: field; only 1: trivial).	5.78515195847	2638
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	0.0.0.43	search with cache (only 1: intros x n; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	37.9942030907	21144
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.3.0	search with cache (only 1: intros; only 1: clear H; only 1: apply derivable_pt_id).	0.121610879898	6
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	4.0.5	search with cache (only 1: intros f D l x0 H H0; only 1: intros; only 1: intuition).	1.01089787483	112
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.0.0.0	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.186908006668	5
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40	1.0.0.0.0.0.1.0	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: pose proof (leftinv_is_rightinv_interv f g lb ub f_incr f_eq_g g_wf) as Left_inv; only 1: unfold comp, id in Left_inv; only 1: intuition; only 1: pose proof (f_incr_implies_g_incr_interv f g lb ub lb_lt_ub f_incr f_eq_g g_wf) as Temp; only 1: intuition).	3.03031206131	113
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40	2.2.3.0	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad f_incr g_wf f_eq_g; only 1: apply g_wf; only 1: lra; only 1: lra).	1.70604586601	139
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40	0.6.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply Rlt_Rminus; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	1.7540781498	217
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.138663053513	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.143315792084	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.132673025131	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.124683141708	4
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.0.2.0.0.0.4.1	search with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros r1 r2 [H| H]; only 1: left; only 1: auto with real; only 1: auto with real).	8.29006099701	1067
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.318943977356	5
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.144208908081	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.159336805344	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.2.2.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: apply Rnot_le_lt; only 1: auto with real; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.13268494606	44
Coq.Reals.Rlimit.eps2	40	13.1	search with cache (only 1: intros H; only 1: field).	0.520478010178	340
Coq.Reals.Rlimit.eps4	40	0.0.0	search with cache (only 1: intro; only 1: rewrite Rmult_comm; only 1: lra).	0.0269329547882	3
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0.12	search with cache (only 1: intro; only 1: intros; only 1: lra).	0.516376018524	329
Coq.Reals.Rlimit.Rlt_eps4_eps	40	3.1.2.6.17	search with cache (only 1: rewrite <- Ropp_0; only 1: intros H; only 1: rewrite <- Ropp_0; only 1: intros; only 1: lra).	6.17483901978	7259
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	24.0.3	search with cache (only 1: intros a b; only 1: intro; only 1: firstorder).	23.6709721088	27105
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40	0.3.5	search with cache (only 1: intros a b; only 1: intros A eval l; only 1: firstorder).	0.336666107178	80
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.1.0.1.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: case (Rcase_abs x); only 1: intros; only 1: apply Rle_refl; only 1: intro; only 1: apply Rsqrt_positivity).	0.620913982391	131
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0521039962769	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0356650352478	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.1.2.13.17	search with cache (only 1: intros A l; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply sqrt_square; only 1: assumption).	15.9207119942	13588
Coq.Reals.R_sqrt.pow2_sqrt	40	0.4.0.0	search with cache (only 1: intro; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: apply (sqrt_sqrt x H)).	0.119531154633	23
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0310618877411	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.0.0.0.2	search with cache (only 1: intros a b **; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.589654922485	169
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.1.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0537559986115	5
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.3.0.0.2.2	search with cache (only 1: intros x y Hx _; only 1: intro; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: auto with real; only 1: apply Rlt_le; only 1: now apply Rle_lt_trans with x; only 1: exact Hx; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	13.1363370419	5153
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	7.0.1.1	search with cache (only 1: intros ? n H; only 1: induction n as [| n Hrecn]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	3.05530500412	471
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.188970088959	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.Arithmetical_dec.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0975999832153	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40
Coq.Reals.Rtrigo1.PI_neq0	40
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	1.13041615486	142
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	0.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.142086982727	7
Coq.Reals.Rtrigo1.cos_neg	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.104782104492	5
Coq.Reals.Rtrigo1.tan_0	40	0.11.1.2.0.9	search with cache (only 1: unfold tan; only 1: unfold Rdiv; only 1: generalize cos_pi2; only 1: intros; only 1: rewrite sin_0; only 1: auto with real).	23.4576861858	5546
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	1.1.3.0.0.2.0.0.0.2.0	search with cache (only 1: intro x; only 1: rewrite sin_cos; only 1: rewrite cos_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite sin_plus; only 1: rewrite neg_cos; only 1: rewrite cos_PI; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite sin_PI; only 1: ring).	38.1410589218	11273
Coq.Reals.Rtrigo1.sin_PI_x	40
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.9.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.921358108521	208
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.0.8.0.0	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra; only 1: now apply Rinv_0_lt_compat, Rlt_0_2).	6.69150900841	906
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.251372098923	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	12.9478411674	1510
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	search with cache (only 1: reflexivity).	0.0114390850067	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	1.0	search with cache (only 1: intros; only 1: assumption).	0.0173709392548	3
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0622100830078	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.649012804031	171
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40	0.0.3.2.2	search with cache (only 1: rewrite <- Rsqr_1; only 1: intro H1; only 1: rewrite <- sin_shift; only 1: apply Rsqr_bounds_le; only 1: apply SIN_bound).	4.14673495293	950
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0550458431244	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0563321113586	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40	0.0.0.3.0	search with cache (only 1: intro x; only 1: rewrite cos_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.055125951767	8
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0588409900665	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0325660705566	5
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0329010486603	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40	2.1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: pose proof derivable_pt_lim_sin_0 as H0; only 1: apply derivable_pt_lim_sin).	0.194343805313	36
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	1.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.162010908127	32
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	20.0.0	search with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: assumption).	1.57891488075	1017
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40	0.12	search with cache (only 1: intros a b Ha Hb; only 1: apply CRmorph_rat).	0.332864999771	148
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.0.0.0.0.2	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.666548013687	72
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	0.0.0.0.6.0	search with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	2.4311850071	368
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.0.3.0.0.0.0	search with cache (only 1: intros R x y exy z t ezt; only 1: unfold CRmax; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite exy, ezt; only 1: reflexivity; only 1: reflexivity).	0.176497936249	10
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40	0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros R p q r H; only 1: unfold CRmin, CRmax; only 1: setoid_replace (r * q - r * p) with (r * (q - p)); only 1: rewrite CRabs_mult; only 1: rewrite (CRabs_right r); only 1: rewrite <- CRmult_assoc; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: do 2 rewrite <- CRmult_plus_distr_l; only 1: reflexivity; only 1: reflexivity; only 1: exact H; only 1: unfold CRminus; only 1: rewrite CRopp_mult_distr_r; only 1: rewrite <- CRmult_plus_distr_l; only 1: reflexivity).	38.9628009796	5990
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	1.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0557420253754	11
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40	6.0.3.1.0	search with cache (only 1: intros; only 1: intro abs; only 1: destruct H; only 1: apply CRmorph_increasing; only 1: assumption).	0.995492935181	585
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.2	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0356469154358	4
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40	0.0.13.6.1.20.2	search with cache (only 1: induction n; only 1: apply CR_of_Q_morph; only 1: auto with *; only 1: simpl; only 1: rewrite IHn; only 1: rewrite CRmult_1_r; only 1: reflexivity).	29.9803719521	14263
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.0.0.0.0.0.13.0	search with cache (only 1: intros; only 1: split; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	8.33552408218	1524
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.4.9	search with cache (only 1: intros a n Hn; only 1: red; only 1: now destruct 1 || intros _).	4.00285220146	1585
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.0.0	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.0193011760712	3
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	32.5.0	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: now rewrite ?(rpow_pow_N pow_th)).	14.4037470818	15488
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	0	search with cache (only 1: apply (CRisRingExt R)).	0.0468299388885	1
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	0	search with cache (only 1: apply (CRisRingExt R)).	0.0110740661621	1
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	9.13	search with cache (only 1: intro H; only 1: apply H).	20.444314003	5191
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	3.7	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.662810087204	223
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	0.3.0	search with cache (only 1: intros; only 1: intro; only 1: apply (CRisRingExt R)).	0.0346109867096	13
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	0.18	search with cache (only 1: intros n; only 1: apply CRisRing).	0.558611154556	386
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	0.4.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: destruct (CRisRing R); only 1: apply Rmul_comm).	0.184273958206	18
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	1.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: transitivity (r2 * r1 + r3 * r1); only 1: apply Rdistr_l; only 1: destruct (CRisRingExt R); only 1: apply CReq_refl).	0.610038042068	65
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40	3.11.3.6.0.0	search with cache (only 1: intros; only 1: rewrite <- (CRplus_opp_r x); only 1: destruct (CRltLinear R); only 1: destruct (CRisRingExt R); only 1: apply CRplus_lt_compat_r; only 1: assumption).	11.8874540329	4935
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.1	search with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	0.0981438159943	8
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40	25.1.45	search with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl; only 1: auto).	33.552986145	22410
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.0.0	search with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1, CRle_refl).	0.0603621006012	3
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	18.0.18	search with cache (only 1: intro abs; only 1: intros; only 1: eauto).	1.06600117683	1924
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	4.4	search with cache (only 1: intro; only 1: auto with real).	0.235348939896	64
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.1.0.1.2.9.0	search with cache (only 1: intro; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	13.7891039848	3194
Coq.Reals.Rsqrt_def.pow_2_n_growing	40	2.0.1.0.1.2.0.3.14.24	search with cache (only 1: intro n; only 1: cut ((2 * S n)%nat = S (S (2 * n))); only 1: simpl; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial; only 1: ring).	23.1098060608	9384
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.0.3.0.1	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	5.04979896545	335
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.avl_node	40	2	search with cache (only 1: intuition).	0.0217108726501	3
Coq.FSets.FMapFullAVL.AvlProofs.Elt.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.empty_avl	40	4.0	search with cache (only 1: unfold empty, Empty; only 1: intuition_in).	0.0151269435883	6
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_avl	40	0.2.1	search with cache (only 1: intros m x; only 1: unfold create; only 1: eauto with ordered_type).	0.035640001297	15
Coq.FSets.FMapFullAVL.AvlProofs.Elt.create_height	40	0.0	search with cache (only 1: unfold create; only 1: auto).	0.0222890377045	2
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.merge_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Elt.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_height	40	0.1.7	search with cache (only 1: induction m; only 1: intuition; only 1: constructor).	0.0753529071808	49
Coq.FSets.FMapFullAVL.AvlProofs.Map.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0319399833679	5
Coq.FSets.FMapFullAVL.AvlProofs.Mapi.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map_option.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2_opt.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.Map2.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_1	40	1.18.9.7.1	search with cache (only 1: intro n; only 1: intro m; only 1: revert n; only 1: fix odd_spec 1; only 1: auto).	33.9661400318	14747
Coq.FSets.FMapFullAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.empty_1	40	12.2.10	search with cache (only 1: intros l; only 1: intuition; only 1: now simpl in H).	3.12793207169	2384
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.find_2	40	0.8.17.0	search with cache (only 1: intros; only 1: inversion H; only 1: red; only 1: auto using Proofs.find_1, find_2).	1.47911381721	2303
Coq.FSets.FMapFullAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_2	40	2.0.1.12.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intro l; only 1: intros sorted hyp; only 1: rewrite elements_mapsto; only 1: auto).	1.34523701668	1276
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	0.0.0.11.15.12	search with cache (only 1: intros m Hm x y e; only 1: intros l a; only 1: induction m; only 1: LO.cmp_solve; only 1: LO.cmp_solve; only 1: LO.cmp_solve).	15.724946022	14557
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0164608955383	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	6.0	search with cache (only 1: intros; only 1: intuition).	0.0156660079956	8
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40	1.12	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.402674913406	267
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_In	40	0.0.0.1.3.7	search with cache (only 1: intros x l; only 1: intro abs; only 1: induction 1; only 1: eauto; only 1: auto; only 1: auto).	2.37921094894	993
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_1	40	0.0.0.11.0.0.2.24	search with cache (only 1: intros l; only 1: intros f Hf; only 1: intros H'; only 1: induction 1; only 1: constructor; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	14.4650769234	8830
Coq.FSets.FMapAVL.Raw.Proofs.Elt.In_node_iff	40	1.10	search with cache (only 1: intros n m; only 1: intuition_in).	0.965013027191	187
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_leaf	40	7.0.19	search with cache (only 1: intro n; only 1: intro; only 1: inversion_clear 1).	1.72193193436	537
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_leaf	40	3	search with cache (only 1: inversion 1).	0.0655980110168	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_node	40	1.0.2.8.0	search with cache (only 1: intros n k2 H v a H1 H2; only 1: red; only 1: intros m x f; only 1: intuition_in; only 1: MX.order).	2.83485198021	462
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_left	40	2	search with cache (only 1: auto).	0.0650651454926	3
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_right	40	0	search with cache (only 1: intuition_in).	0.0659689903259	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0858709812164	2
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_right	40	0	search with cache (only 1: intuition_in).	0.0774230957031	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.lt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0839898586273	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0931560993195	4
Coq.FSets.FMapAVL.Raw.Proofs.Elt.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.08864402771	1
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_bst	40	8	search with cache (only 1: now left || now right).	0.112503051758	9
Coq.FSets.FMapAVL.Raw.Proofs.Elt.empty_1	40	17.12	search with cache (only 1: intros n Hlen; only 1: now subst).	5.55105686188	1290
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_1	40	2.13	search with cache (only 1: fix even_spec 1; only 1: auto with arith).	1.16795706749	448
Coq.FSets.FMapAVL.Raw.Proofs.Elt.is_empty_2	40	4.0.0.2.7.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intros Hn; only 1: intro H; only 1: intuition_in; only 1: simpl; only 1: easy).	3.22225284576	1116
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.mem_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_2	40	0.0.5.0.1.4.0.17.7	search with cache (only 1: intuition_in; only 1: revert H; only 1: functional induction find x m; only 1: intuition_in; only 1: discriminate; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	16.0925869942	6927
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_bst	40	0.0.0.0.3.3.5	search with cache (only 1: intros l p o v; only 1: intros; only 1: constructor 2; only 1: auto; only 1: auto; only 1: intuition_in; only 1: auto).	9.18742108345	1558
Coq.FSets.FMapAVL.Raw.Proofs.Elt.create_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.flatten_e_elements	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: simpl; only 1: unfold elements; only 1: simpl; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.159982919693	7
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_more_IfEq	40	22.1.5	search with cache (only 1: simpl; only 1: inversion_clear 1; only 1: split).	13.1713039875	3258
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.Elt.equal_Equivb	40	2.2.9.17	search with cache (only 1: intros H l; only 1: intros Bs; only 1: fix odd_spec 1; only 1: auto).	37.343034029	10494
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_1	40	0.0.0.1.4.0.0.0.2.2.0	search with cache (only 1: intros m x; only 1: induction m; only 1: intros; only 1: inv MapsTo; only 1: simpl; only 1: intros Bs; only 1: intros; only 1: inv MapsTo; only 1: auto; only 1: auto; only 1: auto).	10.459733963	2135
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_2	40	6.1.8.5.2.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intros; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: intuition_in).	18.7751879692	7255
Coq.FSets.FMapAVL.Raw.Proofs.Map.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.199853897095	8
Coq.FSets.FMapAVL.Raw.Proofs.Mapi.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map_option.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2_opt.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.Map2.map2_2	40
Coq.FSets.FMapAVL.IntMake.Elt.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_1	40
Coq.FSets.FMapAVL.IntMake.Elt.mem_2	40
Coq.FSets.FMapAVL.IntMake.Elt.empty_1	40	6	search with cache (only 1: now intuition).	0.150859832764	13
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.Elt.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_1	40
Coq.FSets.FMapAVL.IntMake.Elt.add_2	40
Coq.FSets.FMapAVL.IntMake.Elt.add_3	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_1	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_2	40
Coq.FSets.FMapAVL.IntMake.Elt.remove_3	40
Coq.FSets.FMapAVL.IntMake.Elt.find_1	40
Coq.FSets.FMapAVL.IntMake.Elt.find_2	40	0.1.4.0	search with cache (only 1: intros m x e; only 1: intros; only 1: apply find_2; only 1: auto).	0.133184909821	9
Coq.FSets.FMapAVL.IntMake.Elt.fold_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_1	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_2	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3	40
Coq.FSets.FMapAVL.IntMake.Elt.elements_3w	40
Coq.FSets.FMapAVL.IntMake.Elt.cardinal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.Equivb_Equivb	40	0.0.0.9.8	search with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: intros; only 1: destruct m; only 1: auto using map_option_bst).	10.6611969471	2475
Coq.FSets.FMapAVL.IntMake.Elt.equal_1	40
Coq.FSets.FMapAVL.IntMake.Elt.equal_2	40
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	4.5.0.3.20.0.27	search with cache (only 1: intros pol; only 1: red; only 1: destruct pol; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	6.08166408539	9228
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.1	search with cache (only 1: intros n m; only 1: intuition Nat.order).	0.0761649608612	4
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1.0.1.0	search with cache (only 1: intros n m; only 1: split; only 1: now Z.swap_greater; only 1: now Z.swap_greater).	0.108203887939	6
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.mem_iff	40	12	search with cache (only 1: intuition).	0.0876839160919	87
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.equal_iff	40	1	search with cache (only 1: intuition).	0.0789339542389	32
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.subset_iff	40	0	search with cache (only 1: intuition).	0.0187590122223	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.is_empty_iff	40	0	search with cache (only 1: intuition).	0.0175960063934	1
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.singleton_iff	40	9.3	search with cache (only 1: compute; only 1: intuition).	0.0723280906677	123
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.remove_neq_iff	40	0.0.5	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.159893989563	54
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.union_iff	40	5	search with cache (only 1: intuition).	0.141844034195	47
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.for_all_iff	40
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.exists_iff	40	6	search with cache (only 1: intuition).	0.119322061539	24
Coq.FSets.FSetFacts.WFacts_fun.IffSpec.elements_iff	40	0	search with cache (only 1: intuition).	0.0126090049744	1
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.2.2	search with cache (only 1: intro; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	1.01867699623	253
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.BoolSpec.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	7.1.1.1	search with cache (only 1: split; only 1: auto; only 1: auto with relations; only 1: eauto).	0.135308027267	193
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	2.1.3.2.2.6	search with cache (only 1: intros x x' EQ; only 1: split; only 1: unfold Empty; only 1: firstorder; only 1: unfold Empty; only 1: firstorder).	0.876331090927	824
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	10	search with cache (only 1: firstorder).	0.343991041183	81
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	0.0.3	search with cache (only 1: unfold Equal, Subset; only 1: intros x y H; only 1: auto).	0.0340769290924	37
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.14.11	search with cache (only 1: intro n; only 1: repeat red; only 1: eauto using BinNat.N.Private_Tac.eq_trans, BinNat.N.Private_Tac.eq_sym).	3.114331007	3764
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	3.9.0.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	17.9232051373	2148
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.16	search with cache (only 1: intros z n H; only 1: firstorder).	1.22313904762	1521
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.2.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.138539075851	14
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.3.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.117923021317	12
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.13.1	search with cache (only 1: intros; only 1: intro l; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	0.675861120224	646
Coq.FSets.FSetPositive.PositiveSet.In_1	40	0.3.2	search with cache (only 1: intro p; only 1: inversion 1; only 1: auto).	0.0835530757904	31
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	6.3	search with cache (only 1: intros l'; only 1: easy).	0.141583919525	67
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	1.2	search with cache (only 1: intros n m H; only 1: now rewrite <- ?BinInt.Z.pred_le_mono).	0.0742070674896	13
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	2.9.2.3.5	search with cache (only 1: intro l; only 1: intros LM1 P2 H; only 1: unfold eq, Equal; only 1: intros le_mn2; only 1: firstorder).	7.66824579239	5857
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.0	search with cache (only 1: intros a n; only 1: trivial).	0.0397291183472	2
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	1	search with cache (only 1: destr_bool).	0.033931016922	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	1	search with cache (only 1: destr_bool).	0.052323102951	11
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	14.6	search with cache (only 1: intros a b; only 1: discriminate).	0.529797792435	580
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40	8.1	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.530786991119	193
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40	6.3.2.13	search with cache (only 1: fix even_spec 1; only 1: intros m Hm; only 1: apply PeanoNat.Nat.even_spec; only 1: trivial).	4.21616506577	2543
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0519769191742	3
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	0.25.2	search with cache (only 1: intros l a Hin; only 1: elim (StrictOrder_Irreflexive a); only 1: now subst).	1.6041841507	2333
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40	3.1.13.20	search with cache (only 1: intros H0; only 1: fix odd_spec 1; only 1: intros m Hm; only 1: auto with arith).	18.1937670708	25178
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40	3.0.0.3.3.2.12	search with cache (only 1: intros [| l' o' r']; only 1: fix odd_spec 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: fix even_spec 1; only 1: eassumption).	30.1427469254	16189
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	3.0.23.5.6	search with cache (only 1: intros n m; only 1: revert m; only 1: fix even_spec 1; only 1: intros m Hm; only 1: auto with arith).	10.5323090553	10843
Coq.FSets.FSetPositive.PositiveSet.equal_2	40
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	0.1.0.2.0.0.11.2.1	search with cache (only 1: intros a b n H Ha Hb; only 1: subst; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	8.74855899811	6741
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	1.0.0.0.0.4	search with cache (only 1: intros; only 1: destruct b, b'; only 1: auto; only 1: trivial; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym).	0.274555921555	46
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.7	search with cache (only 1: destr_bool; only 1: now split; only 1: now split; only 1: now split; only 1: now split).	0.553851127625	140
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40	1.6.3.0.3.4	search with cache (only 1: intros l'; only 1: intro p; only 1: unfold eq, Equal; only 1: apply EQ; only 1: fix odd_spec 1; only 1: trivial).	5.69727516174	5709
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_cxe	40	5.14	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.468539953232	409
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0564591884613	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_gxg	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0503730773926	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0457561016083	4
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: ct; only 1: constructor; only 1: constructor; only 1: ct; only 1: constructor; only 1: ct).	0.0780198574066	10
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	0.0.8.10	search with cache (only 1: intros H; only 1: Ltac.reflexivity || destruct H; only 1: trivial; only 1: reflexivity).	0.651328086853	626
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.lt_spec.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40	1.17.2	search with cache (only 1: intros n m; only 1: fix even_spec 1; only 1: tauto).	3.52937602997	2327
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	9.0.2	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition).	2.90967297554	554
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	3.0.0.29	search with cache (only 1: intros x0 y; only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	32.6455230713	21596
Coq.FSets.FSetPositive.PositiveSet.remove_3	40
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.1.22.1.0	search with cache (only 1: intros a H1; only 1: intros H; only 1: pose proof H as H'; only 1: apply <- add_spec; only 1: auto).	4.35034298897	4610
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	2.1.0.1.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: apply -> union_spec; only 1: apply <- union_spec; only 1: tauto).	0.102675199509	15
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0683960914612	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	5.2.0.10	search with cache (only 1: intros A A_wd A0 AS; only 1: rewrite inter_spec; only 1: intros HE; only 1: now split).	3.49689888954	2701
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	5.1.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: intros H; only 1: intuition).	0.0748560428619	10
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	8.0.1	search with cache (only 1: intros a n m Hn H; only 1: rewrite diff_spec; only 1: intuition BinInt.Z.order).	0.230015993118	110
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40	8.5.22	search with cache (only 1: intros z n H; only 1: fix odd_spec 1; only 1: trivial).	18.1652448177	8837
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0785920619965	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	7.2.5	search with cache (only 1: intros a Ha; only 1: fix even_spec 1; only 1: destr_bool).	1.13759708405	569
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40	4.4.12	search with cache (only 1: intros H p; only 1: fix even_spec 1; only 1: intuition congruence).	5.22795414925	3383
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40	10.5.0.0	search with cache (only 1: unfold Empty, In; only 1: intros s H; only 1: fix odd_spec 1; only 1: auto).	39.7570869923	11725
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40	0.0.3.0.0.0.1.17.22	search with cache (only 1: intros p IH; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: auto with zarith; only 1: simpl; only 1: f_equal).	19.6307270527	22808
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	0.0.1.0.0.1.4.1.33	search with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: auto).	32.8148629665	51519
Coq.FSets.FMapPositive.append_neutral_l	40	1	search with cache (only 1: reflexivity).	0.0522191524506	26
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gempty	40	0.0.0.4.2.0.3.10	search with cache (only 1: intros n; only 1: case n; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: simpl; only 1: reflexivity).	0.951278924942	1032
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gss	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.04243683815	7
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gso	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.rleaf	40	0.0.0.0.19.9	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto; only 1: simpl; only 1: auto).	1.57095384598	2436
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.grs	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.gro	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	16.9409501553	6304
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.find_xfind_h	40	0.2.1.2.2.8	search with cache (only 1: intros H; only 1: destruct i; only 1: simpl; only 1: auto; only 1: auto; only 1: auto).	1.52193284035	866
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.A.CompcertSpec.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.A.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.A.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.MapsTo_1	40	1.4	search with cache (only 1: symmetry; only 1: congruence).	0.0241720676422	15
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_1	40	0	search with cache (only 1: auto).	0.0113079547882	1
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0146479606628	2
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.add_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.A.FMapSpec.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.map2.xgmap2_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct m; only 1: simpl; only 1: auto; only 1: auto).	13.2860720158	5165
Coq.FSets.FMapPositive.PositiveMap.map2.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.Fold.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0367600917816	5
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.MapsTo_iff	40	0.1.0.2.3	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0749378204346	42
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mem_in_iff	40	10.1.0	search with cache (only 1: intros n m; only 1: revert m; only 1: intuition).	0.455574035645	338
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.find_mapsto_iff	40	1.0	search with cache (only 1: intros n m Hn; only 1: intuition).	0.0578429698944	3
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.empty_in_iff	40	0.7	search with cache (only 1: firstorder  (subst; auto); only 1: apply (empty_1 H)).	0.234639883041	74
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.is_empty_iff	40	0.0	search with cache (only 1: intro q; only 1: intuition).	0.0238900184631	2
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_mapsto_iff	40	0.0.1.4.2	search with cache (only 1: intro m; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.469931125641	297
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_mapsto_iff	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: intros; only 1: apply remove_2; only 1: auto; only 1: auto).	0.0432360172272	9
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.remove_neq_in_iff	40	0.0.0.2.0.0.0.3.0.0.15	search with cache (only 1: unfold not; only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	21.5245089531	25526
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.IffSpec.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_o	40	0	search with cache (only 1: auto with map).	0.0137960910797	1
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_o	40	2.4.0.0.2.0.4.16	search with cache (only 1: intros EQ EQ'; only 1: intros a b Hb; only 1: rewrite eq_option_alt; only 1: split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: intuition).	28.8273069859	7882
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_o	40	0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0930600166321	26
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_o	40	1.0.0.2.0.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition; only 1: auto with map).	0.0848479270935	11
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.BoolSpec.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Cmp.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equalities.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	2.3	search with cache (only 1: intro n; only 1: now BinInt.Z.nzsimpl).	0.049290895462	15
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	11.4	search with cache (only 1: intros; only 1: now subst).	1.6480588913	549
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: intro n; only 1: auto).	0.0137009620667	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.13.2.1.0.1.2.1	search with cache (only 1: unfold Equal; only 1: intros a b n **; only 1: rewrite <- H0; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: f_equiv; only 1: intuition).	25.0716369152	19429
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_nodep	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Fold_More.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_1	40	5.6.14.0.25	search with cache (only 1: intro n; only 1: rewrite cardinal_1, elements_Empty; only 1: inversion 1; only 1: rewrite H1; only 1: auto).	9.73832607269	14650
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2	40	4.56.0	search with cache (only 1: intros k Hnodup; only 1: fix le_div2 1; only 1: auto).	15.5425159931	33306
Coq.FSets.FMapFacts.WProperties_fun.Elt.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Specs.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_alt	40	3	search with cache (only 1: firstorder).	0.141487121582	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Disjoint_sym	40	13.12	search with cache (only 1: intro n; only 1: firstorder).	3.27003502846	2172
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_sym	40	11.5	search with cache (only 1: intro n; only 1: firstorder).	1.50856781006	1221
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Elt.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros m m' Hm; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.297816038132	133
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_1	40	0.1.21	search with cache (only 1: fix even_spec 1; only 1: intros m' Hm'; only 1: auto).	6.83689689636	4937
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Elements.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Min_Max_Elt.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Induction_Principles.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.Elt.Fold_properties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.Elt.empty_1	40	10.12	search with cache (only 1: intro n; only 1: easy).	0.395568132401	442
Coq.FSets.FMapWeakList.Raw.Elt.empty_NoDup	40	7	search with cache (only 1: constructor).	0.00893211364746	8
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_1	40	0.11	search with cache (only 1: fix even_spec 1; only 1: intuition).	1.79959702492	115
Coq.FSets.FMapWeakList.Raw.Elt.is_empty_2	40	10.1.1.21	search with cache (only 1: destruct m; only 1: intuition; only 1: intuition; only 1: discriminate).	4.41413998604	4288
Coq.FSets.FMapWeakList.Raw.Elt.mem_1	40
Coq.FSets.FMapWeakList.Raw.Elt.mem_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_2	40
Coq.FSets.FMapWeakList.Raw.Elt.find_1	40
Coq.FSets.FMapWeakList.Raw.Elt.find_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_1	40
Coq.FSets.FMapWeakList.Raw.Elt.add_2	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3	40
Coq.FSets.FMapWeakList.Raw.Elt.add_3'	40
Coq.FSets.FMapWeakList.Raw.Elt.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.add_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_1	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_2	40
Coq.FSets.FMapWeakList.Raw.Elt.remove_3	40	0.0.0.0.0.0.0.5.0.1	search with cache (only 1: intros m Hm x; only 1: clear Hm; only 1: intros e' eqfind; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	31.0989351273	9900
Coq.FSets.FMapWeakList.Raw.Elt.remove_3'	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.0768210887909	9
Coq.FSets.FMapWeakList.Raw.Elt.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt.elements_1	40	6	search with cache (only 1: auto using eqke_equiv).	0.0126090049744	7
Coq.FSets.FMapWeakList.Raw.Elt.elements_2	40	2	search with cache (only 1: auto).	0.00802397727966	3
Coq.FSets.FMapWeakList.Raw.Elt.elements_3w	40	3.1.0.0.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: auto).	0.0828640460968	24
Coq.FSets.FMapWeakList.Raw.Elt.fold_1	40	2.0.0.1.0.0.0.8.13	search with cache (only 1: intros l l1 l2; only 1: revert l1 l2; only 1: intro n; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: intuition).	17.4404008389	10124
Coq.FSets.FMapWeakList.Raw.Elt.submap_1	40
Coq.FSets.FMapWeakList.Raw.Elt.submap_2	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_1	40
Coq.FSets.FMapWeakList.Raw.Elt.equal_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapWeakList.Raw.Elt2.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.fold_right_pair_NoDup	40	1.14.2.0.0.10	search with cache (only 1: induction 1; only 1: intros; only 1: auto; only 1: intros; only 1: apply add_NoDup; only 1: auto).	31.0231471062	16350
Coq.FSets.FMapWeakList.Raw.Elt3.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.combine_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_0	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_1	40
Coq.FSets.FMapWeakList.Raw.Elt3.map2_2	40
Coq.FSets.FMapWeakList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.Elt.mem_1	40	2.3.13	search with cache (only 1: fix odd_spec 1; only 1: intros NoDup hyp; only 1: auto).	1.63628792763	1941
Coq.FSets.FMapWeakList.Make.Elt.mem_2	40
Coq.FSets.FMapWeakList.Make.Elt.empty_1	40	0.0.1.41	search with cache (only 1: intros m; only 1: intros; only 1: intro abs; only 1: inversion abs).	0.630861997604	1600
Coq.FSets.FMapWeakList.Make.Elt.is_empty_1	40
Coq.FSets.FMapWeakList.Make.Elt.is_empty_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_1	40
Coq.FSets.FMapWeakList.Make.Elt.add_2	40
Coq.FSets.FMapWeakList.Make.Elt.add_3	40
Coq.FSets.FMapWeakList.Make.Elt.remove_1	40
Coq.FSets.FMapWeakList.Make.Elt.remove_2	40
Coq.FSets.FMapWeakList.Make.Elt.remove_3	40
Coq.FSets.FMapWeakList.Make.Elt.find_1	40
Coq.FSets.FMapWeakList.Make.Elt.find_2	40	5.2.45	search with cache (only 1: fix gcd_divide 1; only 1: intros e' eqfind; only 1: auto).	10.8895010948	20472
Coq.FSets.FMapWeakList.Make.Elt.elements_1	40	2.0	search with cache (only 1: intros m; only 1: auto).	0.0132858753204	4
Coq.FSets.FMapWeakList.Make.Elt.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0140178203583	2
Coq.FSets.FMapWeakList.Make.Elt.elements_3w	40	42	search with cache (only 1: now intro n; induction n).	0.952894926071	3693
Coq.FSets.FMapWeakList.Make.Elt.cardinal_1	40	6.0	search with cache (only 1: intros m; only 1: auto).	0.0147948265076	8
Coq.FSets.FMapWeakList.Make.Elt.fold_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_1	40
Coq.FSets.FMapWeakList.Make.Elt.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40	5.4.16.7.0	search with cache (only 1: intros m; only 1: intros s; only 1: fix gcd_greatest 1; only 1: intros l1 l2 Heq; only 1: auto).	19.3360249996	23934
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0.4.0	search with cache (only 1: intros n m; only 1: split; only 1: auto with fset; only 1: auto with typeclass_instances).	0.0661919116974	8
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.0623188018799	2
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	3.0	search with cache (only 1: unfold Subset, Included, In, mkEns; only 1: firstorder).	0.201591014862	14
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	0.7.0.18.2	search with cache (only 1: compute; only 1: constructor; only 1: intro a; only 1: Dec.fsetdec; only 1: intuition).	0.633055925369	978
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	4.10.0.1	search with cache (only 1: intros X H'; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	4.74410104752	2863
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	4.7.0.11	search with cache (only 1: intros a; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	1.55817604065	1970
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.253268003464	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_1	40	0.2.3	search with cache (only 1: intros; only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.164710044861	19
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0317070484161	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_1	40	0.0.0.2	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.110962152481	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.14802479744	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.13787817955	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_equal_add	40	0.0.1.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0607831478119	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_3	40	0.6.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with fset).	1.41079092026	448
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.mem_4	40	0.3.2	search with cache (only 1: rewrite mem_iff; only 1: intuition; only 1: congruence).	0.0995671749115	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_refl	40	1.0.0.0.2.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0696539878845	11
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_sym	40	2.0.0.1.0.0.0.2	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	4.76795291901	578
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0461502075195	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.equal_cardinal	40	0.0.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0478231906891	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_refl	40	3.4.0	search with cache (only 1: apply subset_1; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: auto with set).	0.0743680000305	16
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_antisym	40	6.0	search with cache (only 1: intros; only 1: auto with set).	0.0481040477753	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.050803899765	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_mem_3	40	0	search with cache (only 1: auto with set).	0.0288209915161	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_equal	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0359659194946	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_equal	40	3.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: intuition).	0.175350189209	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_remove	40	0.3.7.0.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intros; only 1: intuition).	1.15026307106	410
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_1	40	1.1.1.0.0.0	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition; only 1: intuition).	0.861154079437	90
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_2	40	2.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	2.34315180779	401
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.singleton_mem_3	40	0.0.1.0	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.0653169155121	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.0300159454346	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.038211107254	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0327990055084	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0330939292908	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.031672000885	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0923919677734	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0312960147858	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0295231342316	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.028736114502	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0984089374542	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0289189815521	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0349879264832	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0289590358734	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0298569202423	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0299592018127	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0314009189606	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.031455039978	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0293779373169	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_add_2	40	0.1.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.164285898209	32
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0282139778137	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0324947834015	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0776510238647	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.0286099910736	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0320389270782	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0473001003265	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0448379516602	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.BasicProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0284659862518	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0397920608521	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_equal	40	1.0.0.0.1.4	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.54992318153	694
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_1	40	3.2.0.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	2.21204519272	800
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Fold.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	2.17.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: intuition).	2.72803092003	2189
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0795519351959	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0766580104828	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.134171009064	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.Comp'	40	0	search with cache (only 1: solve_proper).	0.0453560352325	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_1	40	17.0	search with cache (only 1: intros; only 1: auto with set).	3.47591400146	1591
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0329267978668	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.1.0	search with cache (only 1: unfold Add, MP.Add; only 1: split; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: auto; only 1: auto; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	39.2523598671	11745
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.filter_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_1	40	6.3.1.0.0.11	search with cache (only 1: intros m Hm; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intro H; only 1: auto with set).	3.16952896118	1859
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_2	40	0.1.6.0.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.229627132416	77
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.Comp'	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Bool'.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Sum.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	1.0.1.19	search with cache (only 1: intros x y; only 1: simpl; only 1: intros; only 1: eauto).	2.1006360054	2178
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	16.25.2	search with cache (only 1: simpl; only 1: intros l2; only 1: eauto with set).	9.34375786781	17680
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40	0.0.0.0.0.6.0.7.0.1	search with cache (only 1: unfold choose; only 1: split; only 1: destruct (choose_aux s) as [(x, Hx)| H]; only 1: congruence; only 1: eauto with set; only 1: intros; only 1: destruct H; only 1: destruct (choose_aux s) as [(y, Hy)| H']; only 1: congruence; only 1: congruence).	16.0865650177	9631
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.2.0.0.0.0.38	search with cache (only 1: intro; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: easy; only 1: auto).	11.1349110603	19081
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	10.0.1.0	search with cache (only 1: unfold elements; only 1: firstorder; only 1: case (M.elements s); only 1: intuition).	0.645849943161	599
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.13094997406	53
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.4.0.0.0.1.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	1.51073908806	333
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.1.1.2.0	search with cache (only 1: intros s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.690306901932	162
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0300920009613	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.2.0	search with cache (only 1: intros s x y; only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0335309505463	7
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.2.1.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: firstorder; only 1: case (M.singleton x); only 1: firstorder).	0.117896795273	8
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.026113986969	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0236759185791	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.2.0.7	search with cache (only 1: intros; only 1: unfold inter; only 1: case (M.elements s); only 1: firstorder; only 1: case (M.inter s s'); only 1: firstorder).	1.99283981323	857
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0239930152893	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.1.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: firstorder; only 1: case (M.diff s s'); only 1: firstorder).	0.032292842865	6
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0157420635223	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.224148988724	7
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.0.1.0.1.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: case (M.remove x s); only 1: destruct M.filter as (x0, Hiff); only 1: firstorder; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.248831033707	13
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.1.1.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0503950119019	8
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	5	search with cache (only 1: solve_proper).	0.114899873734	48
Coq.FSets.FSetCompat.Update_WSets.Spec.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.elements_spec1	40	23.7	search with cache (only 1: compute; only 1: intuition).	3.53252291679	6451
Coq.FSets.FSetCompat.Update_WSets.Spec.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.Spec.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.8	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.76322388649	141
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_refl	40	3.0.0	search with cache (only 1: red; only 1: intros; only 1: intuition).	0.521988868713	50
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_sym	40	0	search with cache (only 1: now BinInt.Z.swap_greater).	0.0541431903839	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.equal_trans	40	0.1	search with cache (only 1: intuition; only 1: fsetdec).	0.211388111115	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0579330921173	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0972838401794	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_antisym	40	1.5.0	search with cache (only 1: unfold Subset; only 1: repeat red; only 1: auto with arith).	0.169154882431	21
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0812621116638	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0614671707153	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.104610204697	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_diff	40	0.4	search with cache (only 1: intros; only 1: fsetdec).	0.142801046371	6
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.131804943085	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0972299575806	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.092386007309	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.double_inclusion	40	0.0.0.2.3	search with cache (only 1: split; only 1: repeat Ltac.split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.337660074234	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.106897830963	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0962491035461	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_equal	40	0.0	search with cache (only 1: intros; only 1: fsetdec).	0.151001214981	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_add	40	0	search with cache (only 1: fsetdec).	0.265755176544	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_equal	40	4.0.0	search with cache (only 1: split; only 1: apply remove_3; only 1: fsetdec).	0.170840978622	14
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.212383031845	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.217915058136	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.222180843353	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.148811101913	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.394012212753	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_sym	40	0	search with cache (only 1: fsetdec).	0.163774013519	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.139311075211	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.191117048264	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.178251028061	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.251936197281	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.168487071991	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.280315876007	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_1	40	1.12	search with cache (only 1: intros l; only 1: fsetdec).	0.934469938278	126
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.406539916992	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0808761119843	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.082603931427	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.115630865097	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.119950056076	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.120337963104	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.157567024231	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.15131688118	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.not_in_union	40	1	search with cache (only 1: fsetdec).	0.115426778793	2
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.14879989624	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.135500907898	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.174130916595	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.193676948547	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.214042186737	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.311882972717	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.334115982056	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.294075965881	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.2260658741	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0967841148376	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0935089588165	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0861661434174	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.087571144104	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.104838132858	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.109949111938	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.137540102005	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.101791143417	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.169810056686	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.172212839127	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.26154589653	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.225713014603	1
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_add	40	1.0.2	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.318306922913	28
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.Add_remove	40	0.0.6	search with cache (only 1: intros l2; only 1: expAdd; only 1: fsetdec).	0.276309013367	9
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add	40	0.0.11	search with cache (only 1: intro; only 1: expAdd; only 1: fsetdec).	1.89777398109	208
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.union_Equal	40	1.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.498017072678	3
Coq.FSets.FSetProperties.WProperties_fun.BasicProperties.inter_Add_2	40	1.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.395663976669	3
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_nodep	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_identity	40	0.2.0.0.3.1.0	search with cache (only 1: intro n; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: red; only 1: intuition; only 1: fsetdec).	2.30156993866	558
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1	40	0.0.2.0	search with cache (only 1: intuition; only 1: apply fold_rec; only 1: intuition; only 1: fsetdec).	0.270621061325	19
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_1b	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_add	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_1	40	0.4.0.0.0.0.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	4.61091709137	1171
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0783970355988	3
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.Fold_More.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.Fold.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	0.0.0.0.20	search with cache (only 1: intro; only 1: rewrite elements_Empty, M.cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: now destruct l).	4.60137915611	2170
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	5.0	search with cache (only 1: intros n m Hn; only 1: intuition).	0.0749690532684	7
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.13	search with cache (only 1: intro H2; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	1.52748084068	679
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	9.0	search with cache (only 1: intros n m ?; only 1: intuition).	0.345076084137	50
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0816738605499	3
Coq.FSets.FSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0837349891663	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: eauto).	0.0552339553833	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.3.0	search with cache (only 1: unfold decidable; only 1: intros a b c Hb; only 1: firstorder).	1.09024000168	6
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0.6.3	search with cache (only 1: split; only 1: intros; only 1: auto; only 1: destruct 1; only 1: auto).	0.30246591568	94
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0.5	search with cache (only 1: intros a; only 1: intuition).	0.113080024719	37
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.108887910843	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.23.3	search with cache (only 1: unfold Equal, Subset; only 1: intros EQ; only 1: fsetdec).	8.97674202919	6291
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.167701005936	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.205704927444	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.235657930374	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.333489894867	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.386184930801	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	2.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: intuition).	0.0782079696655	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	1.1.37	search with cache (only 1: intros a b Ha Hb; only 1: intros s s' H; only 1: fsetdec).	15.6292409897	11965
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.160856962204	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.126032114029	1
Coq.FSets.FMapList.Raw.Elt.empty_1	40	0	search with cache (only 1: now intuition).	0.0322258472443	1
Coq.FSets.FMapList.Raw.Elt.empty_sorted	40	7.5	search with cache (only 1: unfold PX.eqk, PX.ltk; only 1: constructor).	0.0992891788483	82
Coq.FSets.FMapList.Raw.Elt.is_empty_1	40	2.6	search with cache (only 1: fix even_spec 1; only 1: auto).	1.31188011169	22
Coq.FSets.FMapList.Raw.Elt.is_empty_2	40
Coq.FSets.FMapList.Raw.Elt.mem_1	40
Coq.FSets.FMapList.Raw.Elt.mem_2	40
Coq.FSets.FMapList.Raw.Elt.find_2	40
Coq.FSets.FMapList.Raw.Elt.find_1	40
Coq.FSets.FMapList.Raw.Elt.add_1	40
Coq.FSets.FMapList.Raw.Elt.add_2	40
Coq.FSets.FMapList.Raw.Elt.add_3	40
Coq.FSets.FMapList.Raw.Elt.add_Inf	40
Coq.FSets.FMapList.Raw.Elt.add_sorted	40
Coq.FSets.FMapList.Raw.Elt.remove_1	40
Coq.FSets.FMapList.Raw.Elt.remove_2	40
Coq.FSets.FMapList.Raw.Elt.remove_3	40
Coq.FSets.FMapList.Raw.Elt.remove_Inf	40
Coq.FSets.FMapList.Raw.Elt.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	9.15145492554	1979
Coq.FSets.FMapList.Raw.Elt.elements_1	40	1	search with cache (only 1: auto).	0.0277609825134	2
Coq.FSets.FMapList.Raw.Elt.elements_2	40	4.1	search with cache (only 1: intros e' eqfind; only 1: auto).	0.0439260005951	7
Coq.FSets.FMapList.Raw.Elt.elements_3	40	2.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.127706050873	12
Coq.FSets.FMapList.Raw.Elt.elements_3w	40
Coq.FSets.FMapList.Raw.Elt.fold_1	40	3.0.4.0.14.1	search with cache (only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: simpl; only 1: destr_bool; only 1: simpl; only 1: intuition).	15.9459660053	5870
Coq.FSets.FMapList.Raw.Elt.equal_1	40
Coq.FSets.FMapList.Raw.Elt.equal_2	40
Coq.FSets.FMapList.Raw.Elt.equal_cons	40
Coq.FSets.FMapList.Raw.Elt2.map_1	40
Coq.FSets.FMapList.Raw.Elt2.map_2	40
Coq.FSets.FMapList.Raw.Elt2.map_lelistA	40	1.2.0.2.3.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intuition; only 1: inversion_clear H; only 1: simpl; only 1: intuition).	6.55461907387	1432
Coq.FSets.FMapList.Raw.Elt2.map_sorted	40	4.0.1.3.1.3.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: inversion_clear Hm; only 1: intuition; only 1: destruct a as (x'', e''); only 1: simpl; only 1: constructor; only 1: auto; only 1: eauto with ordered_type).	38.7652139664	10196
Coq.FSets.FMapList.Raw.Elt2.mapi_1	40
Coq.FSets.FMapList.Raw.Elt2.mapi_2	40
Coq.FSets.FMapList.Raw.Elt2.mapi_lelistA	40	0.1.2.1.0.0.2	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: destruct a as (x', e); only 1: inversion_clear 1; only 1: simpl; only 1: auto).	2.30835485458	498
Coq.FSets.FMapList.Raw.Elt2.mapi_sorted	40	0.0.0.0.0.1.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	1.38062906265	199
Coq.FSets.FMapList.Raw.Elt3.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.Elt3.combine_lelistA	40
Coq.FSets.FMapList.Raw.Elt3.combine_sorted	40
Coq.FSets.FMapList.Raw.Elt3.map2_sorted	40
Coq.FSets.FMapList.Raw.Elt3.combine_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_0	40
Coq.FSets.FMapList.Raw.Elt3.map2_1	40
Coq.FSets.FMapList.Raw.Elt3.map2_2	40
Coq.FSets.FMapList.Make.Elt.MapsTo_1	40
Coq.FSets.FMapList.Make.Elt.mem_1	40
Coq.FSets.FMapList.Make.Elt.mem_2	40
Coq.FSets.FMapList.Make.Elt.empty_1	40	0.0.53	search with cache (only 1: intros LS' n; only 1: intro abs; only 1: inversion abs).	3.1166639328	1770
Coq.FSets.FMapList.Make.Elt.is_empty_1	40	0.5.7	search with cache (only 1: fix even_spec 1; only 1: intro H; only 1: apply PeanoNat.Nat.even_spec).	2.1669421196	776
Coq.FSets.FMapList.Make.Elt.is_empty_2	40	0.1.4.4.1.0.0.1.5	search with cache (only 1: intros (m', Hm); only 1: generalize Hm; only 1: clear Hm; only 1: intros sorted hyp; only 1: red; only 1: red; only 1: destruct m'; only 1: inversion 1; only 1: intuition).	12.5412290096	5146
Coq.FSets.FMapList.Make.Elt.add_1	40
Coq.FSets.FMapList.Make.Elt.add_2	40
Coq.FSets.FMapList.Make.Elt.add_3	40
Coq.FSets.FMapList.Make.Elt.remove_1	40
Coq.FSets.FMapList.Make.Elt.remove_2	40
Coq.FSets.FMapList.Make.Elt.remove_3	40
Coq.FSets.FMapList.Make.Elt.find_1	40
Coq.FSets.FMapList.Make.Elt.find_2	40
Coq.FSets.FMapList.Make.Elt.elements_1	40	0.0	search with cache (only 1: intros m; only 1: auto).	0.047966003418	2
Coq.FSets.FMapList.Make.Elt.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0468788146973	2
Coq.FSets.FMapList.Make.Elt.elements_3	40	3.65	search with cache (only 1: intros [? ?]; only 1: auto).	4.25147509575	9017
Coq.FSets.FMapList.Make.Elt.elements_3w	40
Coq.FSets.FMapList.Make.Elt.cardinal_1	40	6	search with cache (only 1: auto).	0.0665791034698	18
Coq.FSets.FMapList.Make.Elt.fold_1	40
Coq.FSets.FMapList.Make.Elt.equal_1	40
Coq.FSets.FMapList.Make.Elt.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40	0.43.2.5.0	search with cache (only 1: unfold eq, lt; only 1: intro n; only 1: induction n; only 1: fix le_div2 1; only 1: auto).	35.5430510044	42822
Coq.Wellfounded.Inclusion.WfInclusion.Acc_incl	40	2.6.0.6.22.9.0	search with cache (only 1: intro x; only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: intro; only 1: Ltac.split; only 1: auto).	16.6116998196	47565
Coq.Wellfounded.Inclusion.WfInclusion.wf_incl	40	0.5.5.2	search with cache (only 1: intro H; only 1: intro z; only 1: Ltac.split; only 1: auto with sets).	0.118104934692	170
Coq.Wellfounded.Well_Ordering.WellOrdering.wf_WO	40
Coq.Wellfounded.Well_Ordering.Characterisation_wf_relations.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.acc_app	40	1.0.0.8	search with cache (only 1: destruct 1; only 1: intros E; only 1: intro; only 1: auto with sets).	1.5194978714	401
Coq.Wellfounded.Lexicographic_Exponentiation.Wf_Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_image	40	0.0.0.16.0	search with cache (only 1: intros; only 1: intro x; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.578076839447	464
Coq.Wellfounded.Inverse_Image.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.Wf_Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.WfUnion.strip_commut	40
Coq.Wellfounded.Union.WfUnion.Acc_union	40
Coq.Wellfounded.Union.WfUnion.wf_union	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.WfLexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.Wf_Symmetric_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Swap.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.Swap.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.incl_clos_trans	40	2.19	search with cache (only 1: Ltac.left; only 1: trivial).	0.0942051410675	275
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.Acc_inv_trans	40	0.0.2.1.1.8	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.495575904846	484
Coq.Wellfounded.Transitive_Closure.Wf_Transitive_Closure.wf_clos_trans	40	0.1.0	search with cache (only 1: red; only 1: intros y H2; only 1: auto with sets).	0.0142619609833	4
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40
Coq.Numbers.DecimalR.to_decimal_surj	40
Coq.Numbers.DecimalR.of_decimal_dnorm	40	0	search with cache (only 1: now apply DecimalQ.to_decimal_inj; rewrite !DecimalQ.to_of; [  | rewrite dnorm_involutive ]).	0.0180258750916	1
Coq.Numbers.DecimalR.of_inj	40	0.0.17	search with cache (only 1: intros; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !DecimalQ.to_of, H).	1.13489294052	695
Coq.Numbers.DecimalR.of_iff	40	0.0.1.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- DecimalQ.of_decimal_dnorm, E; only 1: apply DecimalQ.of_decimal_dnorm).	0.0532250404358	13
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40	0.144	search with cache (only 1: compute; only 1: now induction u; [ idtac | simpl; rewrite IHu.. ]).	16.0748500824	29916
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	0.0	search with cache (only 1: simpl; only 1: firstorder).	0.0152328014374	2
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	4.14.18.10	search with cache (only 1: intros Hb; only 1: intuition; only 1: subst; only 1: tauto).	14.8188591003	7369
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	7.0.0.0.0.19	search with cache (only 1: induction n as [| n IH]; only 1: revert d; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	17.2382729053	8190
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	0	search with cache (only 1: now simpl).	0.00995302200317	1
Coq.Numbers.DecimalFacts.app_nil_l	40	0	search with cache (only 1: now unfold unorm; case nzhead).	0.0120589733124	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	0	search with cache (only 1: reflexivity).	0.0108661651611	1
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	0	search with cache (only 1: now induction n; simpl; [  | rewrite IHn ]).	0.0117168426514	1
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	1.25.0.3	search with cache (only 1: intros EQ; only 1: rewrite <- (rev_rev d); only 1: rewrite EQ; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	17.2337801456	17197
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0117321014404	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40	0.0.1.0.0.0.0.0.1.0.0.0.6	search with cache (only 1: unfold unorm; only 1: induction d; only 1: now simpl; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: trivial; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	5.72523903847	1594
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	3.0.12	search with cache (only 1: induction n as [| n IHn]; only 1: now N.nzsimpl; only 1: auto).	9.96286201477	1819
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	0	search with cache (only 1: apply of_lu_double_gen).	0.0404658317566	1
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: trivial).	0.0419671535492	2
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	2	search with cache (only 1: auto with arith).	0.0418829917908	3
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40	1.11.10	search with cache (only 1: revert d; only 1: fix even_spec 1; only 1: trivial).	4.20241880417	2611
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	4.8.1.2.1.2.6.0.5	search with cache (only 1: intros H; only 1: generalize (of_to p); only 1: rewrite of_uint_alt; only 1: unfold rev; only 1: generalize (of_to p); only 1: rewrite of_lu_revapp; only 1: simpl of_lu; only 1: rewrite H; only 1: discriminate).	17.2846698761	10090
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40	4	search with cache (only 1: now induction d).	0.889241933823	186
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0	search with cache (only 1: reflexivity).	0.0115339756012	1
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40	2.1.0.2.0.3.2.0	search with cache (only 1: revert d; only 1: Nat.induct n; only 1: intros a; only 1: trivial; only 1: intros a b; only 1: simpl; only 1: intro H; only 1: now simpl).	11.6955411434	4667
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40	0.1.0.1.2.17	search with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	5.79083490372	4527
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40	0.1.0.1.2.18	search with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	19.0593891144	11852
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	6.9.0.10	search with cache (only 1: revert d; only 1: intros n; only 1: bitwise as m; only 1: now induction n).	4.51138782501	3837
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40	0.1.0.1.2.2	search with cache (only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.221875190735	72
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	0.0.0.0.1.0	search with cache (only 1: exists (Nat.of_uint d); only 1: apply Unsigned.to_of; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d).	0.0361938476562	7
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.119832038879	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	4	search with cache (only 1: reflexivity).	0.0376138687134	11
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	0.0	search with cache (only 1: intros n m; only 1: reflexivity).	0.0500040054321	2
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	7.0.1.4	search with cache (only 1: repeat red; only 1: simpl; only 1: intros n m p q H1 H2; only 1: now f_equiv).	2.05001091957	404
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	1.0.0.19.3.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: repeat red; only 1: intros m IH; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	23.7714838982	6761
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	6.0.23	search with cache (only 1: compute; only 1: intro; only 1: now nzsimpl).	19.860213995	15208
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.3.0.0.0.0	search with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: CRelationClasses.simpl_crelation; only 1: now nzsimpl).	0.533640861511	42
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	0.19.1.213	search with cache (only 1: red; only 1: simpl in *; only 1: nzsimpl'; only 1: now f_equiv).	19.1899590492	28676
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.198	search with cache (only 1: red; only 1: simpl; only 1: now nzsimpl').	9.37446808815	20257
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	6	search with cache (only 1: easy).	0.0839428901672	12
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0	search with cache (only 1: intros a; only 1: now repeat constructor).	0.0456149578094	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.4.2.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: intro n; only 1: now nzsimpl).	0.413505077362	19
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	3.5.0.2.1	search with cache (only 1: intros n m; only 1: rewrite <- (BinInt.Z.succ_pred n)  at 2; only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl).	2.36503410339	573
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.11	search with cache (only 1: intro m; only 1: unfold Z.add, Z.eq; only 1: simpl in *; only 1: now nzsimpl).	1.7591240406	451
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.5.0	search with cache (only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: intros n m; only 1: now nzsimpl).	0.853801012039	28
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0	search with cache (only 1: unfold Z.mul, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.261351108551	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.1.2.6	search with cache (only 1: intros n H; only 1: apply BinInt.Z.lt_nge in H; only 1: apply H; only 1: now apply add_le_mono_r).	0.81712603569	175
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40	6.2.25	search with cache (only 1: intro len; only 1: fix even_spec 1; only 1: tauto).	32.0525619984	18043
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	0.0.12	search with cache (only 1: intros a m; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	3.05011987686	473
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.0239510536194	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0234050750732	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0230078697205	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0225200653076	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40	0.3.12	search with cache (only 1: intro p; only 1: intro n; only 1: now rewrite (add_lt_mono_r _ _ n), add_0_l, sub_simpl_r).	6.07720899582	2773
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.56	search with cache (only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	6.42165708542	7318
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.2.5.13	search with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	5.65403485298	4122
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40	0.24.2	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	29.7510678768	14447
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40	0.22.2	search with cache (only 1: intros n m; only 1: symmetry; only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	15.2718930244	7947
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.PosNeg.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.0.0.0	search with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.118762016296	24
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.021653175354	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	0.0.10.0.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: apply mul_le_mono_nonneg_r; only 1: order; only 1: order).	23.4431269169	4256
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	9.89724993706	3192
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	4.49302816391	1212
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.5	search with cache (only 1: intros; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.0588450431824	18
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.8.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.23490190506	321
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	7.0.2.4.5.0	search with cache (only 1: split; only 1: congruence; only 1: intros m Hm; only 1: intros LE EQ; only 1: CRelationClasses.simpl_crelation; only 1: congruence).	2.92141008377	3208
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	11.11	search with cache (only 1: intros n m p q; only 1: now f_equiv).	8.37496089935	1792
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0426950454712	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.11190700531	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40	0.0.8.2.0.0.0.0.3	search with cache (only 1: split; only 1: intros H; only 1: bitwise; only 1: apply xorb_eq; only 1: now rewrite <- lxor_spec, H, bits_0; only 1: intros H; only 1: rewrite H; only 1: bitwise; only 1: apply xorb_nilpotent).	13.7224349976	6241
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.023365020752	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	10.1.1	search with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	1.23694300652	588
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0240430831909	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40	22.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: intuition).	5.24852895737	2924
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	6.8.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	1.43054389954	890
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40	3.5.0.5	search with cache (only 1: intros x; only 1: bitwise; only 1: apply andb_false_iff; only 1: auto).	2.40229105949	1365
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.2	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.106956005096	49
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0243558883667	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	1.7.0.0.16.3	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: generalize (partial_order_equivalence y y'); only 1: compute; only 1: intuition; only 1: rewrite H; only 1: now f_equiv).	34.9791209698	13379
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.12	search with cache (only 1: unfold clearbit; only 1: solve_proper).	1.77051305771	467
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.0.1	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.01154494286	418
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	17.0.1	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	1.9711420536	1512
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	0.0401759147644	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.1.0	search with cache (only 1: intros a; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	0.0334930419922	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.1.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0294561386108	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.0	search with cache (only 1: intro n; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0329630374908	6
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40	0.18.0.1	search with cache (only 1: intros n; only 1: unfold lnot; only 1: rewrite lt_pred_le; only 1: now rewrite (opp_le_mono 0 n), opp_0).	32.2891449928	17546
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.0.0.0.0.0.0.11	search with cache (only 1: intro n; only 1: intro; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: now f_equiv).	7.47273802757	2708
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40	0.0.0.0.0.0.0.0.9.0	search with cache (only 1: intros n m; only 1: destruct_max m; only 1: easy; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_l, <- Hp, opp_involutive; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite Hp, mul_opp_l).	11.9343807697	4055
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.131831884384	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.1.1.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	6.80992293358	2027
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	3.0.0.0.5.0	search with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	3.18300104141	825
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.0.5.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	1.95747900009	562
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0810980796814	6
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	7.6.0	search with cache (only 1: unfold lcm; only 1: intros n m; only 1: apply abs_nonneg).	6.56492400169	2852
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.0.6.8.3	search with cache (only 1: intros x; only 1: unfold lcm; only 1: nzsimpl; only 1: rewrite abs_eq; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	1.40687608719	1293
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto using eq_refl, le_refl; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	0.0234429836273	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.036169052124	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0238969326019	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_refl).	0.0241870880127	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.1.1.3.0	search with cache (only 1: intros n m Hn; only 1: intros EQ; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: order; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	1.96802902222	686
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	0.2.0.0.0.1.0.0.0.0.0.4.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	36.9434659481	13719
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0310211181641	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.1.2.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	4.19512486458	1966
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	2.0.0.0.4.0	search with cache (only 1: intros n m; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.857280015945	321
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0352649688721	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.215182065964	46
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.55673003197	831
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	5.55617189407	1840
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.17759585381	551
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.4.1.0.1.5.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	5.74124383926	2509
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	1.0.0.7.1.0.0.8.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	16.0407168865	8484
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	2.0.0.0.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	10.251335144	3204
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.2.23.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: intuition order; only 1: intro n; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	14.9633998871	9518
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	0.0.0	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0524501800537	3
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	1.2.43.0	search with cache (only 1: intro n; only 1: apply le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite succ_pred).	6.52637910843	8929
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	22.0.0	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: now apply le_le_succ_r).	3.49385595322	2724
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	0.0.10.1	search with cache (only 1: intro; only 1: rewrite nle_gt; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.43544483185	1034
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40	3.12.1.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: rewrite <- le_succ_l; only 1: now rewrite succ_pred).	25.9567921162	9179
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.5.0	search with cache (only 1: intros n m LE; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.188350200653	56
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	0.1.2.7.2	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: intros H; only 1: rewrite lt_succ_r; only 1: order).	9.45581698418	2242
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	2.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0328757762909	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.067822933197	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.4.1.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply lt_succ_r).	0.585974931717	132
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	0.5.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	0.133054971695	22
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	2.3.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	0.18390417099	53
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0261309146881	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0263209342957	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.0.1.4	search with cache (only 1: intros m; only 1: rewrite opp_nonneg_nonpos; only 1: intros n; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.16449213028	114
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.1.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0260648727417	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.4.1	search with cache (only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: order).	0.015456199646	8
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	9.10.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: auto with relations).	4.30574703217	2708
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40	26.8.0.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: now rewrite opp_involutive).	15.4913182259	19995
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.0.0.0.0.5.0.0	search with cache (only 1: intros n; only 1: destruct_max n; only 1: rewrite abs_eq; only 1: reflexivity; only 1: auto; only 1: rewrite (abs_eq (- n)); only 1: reflexivity; only 1: now rewrite opp_nonneg_nonpos).	0.732622861862	444
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0268831253052	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	4.1.1.2	search with cache (only 1: intros n; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.812144041061	352
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	7.7.0	search with cache (only 1: rewrite sgn_null; only 1: now nzsimpl; only 1: now nzsimpl).	1.1456079483	1134
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: destruct_sgn x; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.156280994415	83
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0	search with cache (only 1: intros a b ? ?; only 1: apply NZQuot.div_pos; only 1: auto; only 1: auto).	0.130662918091	30
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.8.0.0.0	search with cache (only 1: intros a b q ? ? ?; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	2.13838291168	1425
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros a b q **; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0333931446075	6
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.41522717476	382
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.3.0.1.0.1.0.2.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	6.91265296936	3193
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0234570503235	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.0.0.0.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.12658596039	2969
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.5.1.1.2.1.0.0.2.0	search with cache (only 1: intros a b q r **; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	19.115732193	9196
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0236899852753	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.1.0.0.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.138360023499	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: intuition; only 1: intuition; only 1: now nzsimpl).	0.144213914871	22
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.1.0.0.0.0.0.3	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.553938865662	347
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0199987888336	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0177111625671	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: split; only 1: order; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	8.71189808846	3134
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.2.0.1.0.0.1.2.9	search with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: now try split).	3.6957089901	2234
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: auto; only 1: auto).	0.261903047562	94
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.0.1.0	search with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.411385059357	76
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.1.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.195386171341	51
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.1.0.0.0.1	search with cache (only 1: intros a b **; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: order; only 1: order).	0.0457768440247	13
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	4.0.0.0.1	search with cache (only 1: intros a b **; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: now destruct (mod_pos_bound a b)).	0.0373990535736	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0268518924713	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.0.0.1.9	search with cache (only 1: intros a b ? ?; only 1: intros Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	3.38395905495	2236
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros a b q **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0270409584045	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.0.0	search with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0315399169922	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	28.4333891869	9509
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.1.5.0.0.0	search with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	2.46943306923	1003
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros a b c **; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0483651161194	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.0.1.6	search with cache (only 1: intros a b ?; only 1: rewrite (add_comm _ c), (add_comm a); only 1: intros; only 1: apply Private_NZDiv.div_add; only 1: order).	0.571553945541	347
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	1.0246629715	168
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.1.0.0.0.1.2.0.0.1.0	search with cache (only 1: intros a b c **; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	9.44141292572	2624
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.312915086746	58
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	1.1.1.0.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.108340024948	32
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	1.1.3.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.130679130554	38
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	1.2.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0889599323273	33
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	1.1.2.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.070680141449	27
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.1.0.0.0.1	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.143899917603	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0487008094788	10
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0198268890381	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40	1.0.5.0.1.1	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: rewrite sub_succ_l; only 1: now nzsimpl).	1.94369912148	575
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.0.2	search with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.409201860428	88
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.0.0.0.0.0.3.6	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite add_comm; only 1: rewrite <- add_opp_r; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	12.4588000774	3262
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	5.0.0.0.0.8	search with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: now f_equiv).	1.37526512146	574
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0	search with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0102369785309	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.2.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0253119468689	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	0.1.2.1	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: now rewrite opp_involutive).	0.0995738506317	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	1.0.6	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.090224981308	18
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1	search with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.320932865143	67
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	1.1.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm).	0.0782740116119	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40	0.0.1.0.0.1.0.2.10.8	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: nzinduct n; only 1: nzsimpl; only 1: split; only 1: apply opp_inj; only 1: intros; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	26.0527000427	15687
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	13.0.0.1.5	search with cache (only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite pred_inj_wd).	7.6040160656	4633
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.18	search with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.531250953674	384
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	0.4.3	search with cache (only 1: symmetry; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.210788011551	53
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.3	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.303817987442	81
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.1.0.4.0.4.11	search with cache (only 1: nzinduct n; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro p; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r; only 1: intro n; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	24.3095619678	8350
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0	search with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0125958919525	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.10	search with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	0.579113006592	227
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.11	search with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.426660060883	143
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0759742259979	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.2.3.0	search with cache (only 1: intros a b ?; only 1: intuition; only 1: apply div_small; only 1: intuition).	0.305735111237	100
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	2.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: auto using mod_small).	0.223433971405	59
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0346820354462	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	1.1.1.8.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	38.8252279758	25164
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.0.4	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.900521993637	483
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0210301876068	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0203070640564	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.044792175293	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.1.1.0.1.3.9	search with cache (only 1: intros NEQ; only 1: intros Hab; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: now try split; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	1.95654797554	1283
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	1.0.1.0	search with cache (only 1: intros a b ? ?; only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto).	0.435408830643	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.308976888657	106
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	6.0.2.2.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	1.26318097115	702
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0265572071075	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.1.1.0.0.5	search with cache (only 1: intros a b c Hc Hab; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: order).	0.397868871689	215
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.0293180942535	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0817279815674	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: auto; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: auto; only 1: order; only 1: order).	18.1631560326	6678
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0334250926971	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0485289096832	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	0.0.0.0.0.0.0.0.0.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: symmetry; only 1: apply div_unique with (a mod b * c); only 1: rewrite abs_mul, (abs_eq c) by order; only 1: rewrite <- (mul_0_l c), <- mul_lt_mono_pos_r, <- mul_le_mono_pos_r by trivial; only 1: now apply mod_always_pos; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_add_distr_r; only 1: rewrite add_cancel_r; only 1: rewrite <- 2!mul_assoc; only 1: now rewrite (mul_comm c)).	8.12748599052	2550
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.364762067795	68
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.0.0.17	search with cache (only 1: intuition; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	30.6715550423	11623
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	1.1.2.0.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.0440850257874	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	1.2.1.0.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.137376070023	27
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	1.1.4.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	1.18190813065	426
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a b c Hb Hc; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.108496904373	18
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0496828556061	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.TestOrder.test	40	1	search with cache (only 1: BinInt.Z.order).	0.0247769355774	15
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	5.5.0	search with cache (only 1: intros A op H p; only 1: intros l2; only 1: firstorder).	0.666095972061	338
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40	4.4.8	search with cache (only 1: intros a; only 1: fix even_spec 1; only 1: easy).	2.36907696724	1565
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40
Coq.Numbers.Cyclic.Int31.Ring31.TestRing.test	40	6.22	search with cache (only 1: intros q r; only 1: ring).	37.5988729	4271
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.iszero_not_eq0	40	2.8.1	search with cache (only 1: intros a; only 1: <Coq.Strings.Ascii.t_eqb>; only 1: easy).	10.304899931	368
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakl_shiftr	40	0.2.4	search with cache (only 1: intro n; only 1: destruct n; only 1: repeat split).	0.0708680152893	39
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0259590148926	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S	40	5.2	search with cache (only 1: intros n m; only 1: now destruct n, m).	0.143856048584	43
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_n_0	40	2.4.14	search with cache (only 1: fix odd_spec 1; only 1: intro q; only 1: trivial).	7.29660201073	2193
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_size	40	1	search with cache (only 1: now intro n; induction n).	0.0140030384064	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S	40	0	search with cache (only 1: reflexivity).	0.012050151825	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_S_tail	40	4.1.1.0.0.1.5	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite <- ?IHn; only 1: auto).	7.64168810844	3689
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_n_0	40	0.1.3.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.0386040210724	10
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_size	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0250110626221	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstr_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0232059955597	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_predsize_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_eqn	40	6.2.0	search with cache (only 1: simpl; only 1: intros; only 1: now rewrite H).	0.508834838867	148
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recr_eqn	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Recr.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Incr.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phibis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.Phi.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_zero	40	1.2.2.1	search with cache (only 1: intros e1 e2; only 1: split; only 1: trivial; only 1: auto).	0.111908912659	41
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice	40	2.0.4.7.7	search with cache (only 1: intro; only 1: intros s1; only 1: fix le_div2 1; only 1: intro n; only 1: auto).	21.5037488937	10157
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_length	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: repeat match goal with | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.0226609706879	3
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.l2i_i2l	40	2.6.3	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.117634057999	107
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakr	40	0.1.1.1	search with cache (only 1: intro l; only 1: induction l; only 1: intros H; only 1: auto).	2.05067491531	16
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.EqShiftL.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_phi_inv_positive	40	2.10	search with cache (only 1: fix even_spec 1; only 1: easy || now destruct Hm).	0.841622114182	525
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Basics.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.0116209983826	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_zdigits	40	17	search with cache (only 1: trivial).	0.0802698135376	126
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_more_than_1_digit	40	0.2	search with cache (only 1: red; only 1: auto).	0.0144460201263	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_0	40	2.5	search with cache (only 1: rewrite <- phibis_aux_equiv; only 1: auto).	0.0170719623566	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_1	40	0	search with cache (only 1: reflexivity).	0.0115950107574	1
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_m1	40	9	search with cache (only 1: auto).	0.141498088837	11
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_compare	40	0.2.2	search with cache (only 1: intros H; only 1: intros; only 1: reflexivity).	0.0178759098053	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_succ	40	2.1.0.1.0	search with cache (only 1: intros; only 1: unfold add31; only 1: repeat rewrite phi_phi_inv; only 1: Z.nzsimpl; only 1: trivial).	0.135266780853	9
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0177459716797	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sub_carry	40	0.0.2.1.7	search with cache (only 1: simpl in *; only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	2.99301314354	912
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0180401802063	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0392589569092	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pred	40	1.0.0	search with cache (only 1: intros; only 1: rewrite <- spec_1; only 1: apply phi_phi_inv).	0.0447368621826	4
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0180351734161	2
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_square_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail00	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0707218647003	7
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_eq0	40	1.0.2.6.0	search with cache (only 1: intros; only 1: apply Zeq_bool_eq; only 1: generalize (phi_bounded x); only 1: intros; only 1: auto with zarith).	0.411787986755	182
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.Int31_Specs.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_more_than_1_digit	40	8	search with cache (only 1: auto with zarith).	0.0293970108032	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0256850719452	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_to_Z	40	0.0.0	search with cache (only 1: intros; only 1: unfold wB, base; only 1: auto with zarith).	0.0208458900452	3
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_0	40	0.0.0.3.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: split; only 1: auto with zarith; only 1: unfold wB, base; only 1: auto with zarith).	0.0450711250305	16
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_Bm1	40	0.2.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.179746866226	37
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_compare	40	5.1	search with cache (only 1: unfold to_Z, zero; only 1: auto).	0.0237829685211	8
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_succ	40	0.4.1.0	search with cache (only 1: intros; only 1: unfold add_carry_c, to_Z, interp_carry; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.0386319160461	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add	40	0.5.12.0.0	search with cache (only 1: intros; only 1: unfold add_c, to_Z, interp_carry; only 1: apply Z.add_mod; only 1: generalize (Z_mod_lt x wB wB_pos), (Z_mod_lt y wB wB_pos); only 1: lia).	4.34243297577	2254
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pred	40	1.2.0.0	search with cache (only 1: intros; only 1: unfold succ, to_Z, Z.succ; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	0.0569741725922	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_add_mul_div	40	4.2	search with cache (only 1: unfold wB, base; only 1: auto).	0.404809951782	92
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.two_p_power2	40	3.5.1.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: trivial; only 1: apply two_power_pos_equiv; only 1: auto).	0.767183065414	295
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	11	search with cache (only 1: auto).	0.0207419395447	33
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.10	search with cache (only 1: intros; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	16.0567140579	6487
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	0.0.9.2.2	search with cache (only 1: destruct n as [| n| n]; only 1: lia; only 1: Z.swap_greater; only 1: now apply Z.pow_pos_nonneg; only 1: now destruct 1 || intros _).	1.35151100159	810
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0.2	search with cache (only 1: intro Hn; only 1: Z.order_nz).	0.057284116745	13
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	1	search with cache (only 1: easy).	0.0236110687256	2
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	6	search with cache (only 1: split).	0.0163621902466	7
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: reflexivity).	0.0116171836853	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: reflexivity).	0.0116579532623	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	219	search with cache (only 1: congruence).	24.4276890755	48065
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.1.6	search with cache (only 1: intros x y; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.191700220108	41
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.144841909409	13
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.1.9	search with cache (only 1: intros; only 1: unfold eqo; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	1.05525588989	810
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	16.8.0.0	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: now rewrite H).	2.96466517448	2309
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.0116009712219	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	search with cache (only 1: apply sub_spec).	0.016921043396	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0123920440674	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	2.12	search with cache (only 1: unfold eqm; only 1: now intros ->).	0.101978063583	104
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0474619865417	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	1.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.057098865509	4
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: trivial).	0.011342048645	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	0.4.5	search with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: apply negb_involutive).	0.0894110202789	43
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	0.0	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.0316820144653	2
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.0	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0338292121887	2
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	1.0.1.0	search with cache (only 1: apply bit_ext; only 1: intros b; only 1: rewrite land_spec, bit_0; only 1: apply andb_false_r).	0.0606420040131	28
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	1.0.2.0	search with cache (only 1: apply bit_ext; only 1: intros b; only 1: rewrite lor_spec, bit_0; only 1: apply orb_false_r).	0.0591638088226	26
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	5.5.0	search with cache (only 1: intros A op H p; only 1: intros l2; only 1: firstorder).	0.732674121857	367
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	0.0	search with cache (only 1: intros x y; only 1: auto using eqb_correct, eqb_complete).	0.0173301696777	2
Coq.Numbers.Cyclic.Int63.Ring63.TestRing.test	40	13.4	search with cache (only 1: intros a b; only 1: ring).	2.43692088127	1567
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.WW.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.Of_Z.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40	10.4.0.0	search with cache (only 1: intros; only 1: zify; only 1: Morphisms.f_equiv; only 1: ring).	0.749385118484	521
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	13.4.6	search with cache (only 1: zify; only 1: intros ? v2; only 1: apply N.eqb_eq).	3.14406895638	4421
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	96.0	search with cache (only 1: unfold base; only 1: auto with zarith).	21.9618690014	42231
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	7.0	search with cache (only 1: zify; only 1: trivial).	0.0442500114441	15
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B0	40	0	search with cache (only 1: assumption).	0.0107569694519	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Induction.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.0.1.0.0	search with cache (only 1: intros a; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.0390110015869	6
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.0.0.15.0.3	search with cache (only 1: intros a; only 1: zify; only 1: Z.nzsimpl; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	9.10860395432	4472
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	2.0.0	search with cache (only 1: intro n; only 1: zify; only 1: trivial).	0.246490001678	26
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0127439498901	3
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0117130279541	2
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0	search with cache (only 1: reflexivity).	0.00811505317688	1
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.8	search with cache (only 1: destruct z; only 1: now simpl; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.0941920280457	56
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| [| n]]; only 1: split; only 1: constructor; only 1: now exists 0; only 1: split; only 1: now rewrite <- PeanoNat.Nat.even_spec; only 1: inversion_clear 1 as [| ? H0]; only 1: inversion_clear H0; only 1: rewrite PeanoNat.Nat.Even_succ_succ, <- even_equiv; only 1: split; only 1: now do 2 constructor; only 1: inversion_clear 1 as [| ? H0]; only 1: now inversion_clear H0).	0.953664064407	484
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	1.5.0	search with cache (only 1: intros; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.0546569824219	12
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	1.1.10.2	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	2.53759598732	2141
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	1.1.0	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.154638051987	42
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.0.0.0.1.0.10.4.0	search with cache (only 1: intros n; only 1: cases ltac:(n); only 1: auto with relations; only 1: intro n; only 1: right; only 1: induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: intros n H; only 1: now apply lt_lt_succ_r).	3.88573694229	3487
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.3.0.0.0.0.0.6.0.0.2	search with cache (only 1: setoid_rewrite one_succ; only 1: intro n; only 1: split; only 1: rewrite lt_succ_r; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: rewrite H; only 1: apply lt_0_succ).	21.9136931896	15268
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.RelElim.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0419049263	4
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.0.4.1.0.0.5.0	search with cache (only 1: intro; only 1: cases n; only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: nzsimpl; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	3.8262898922	2013
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	0.0.3.0.0.0.2	search with cache (only 1: intro n; only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	1.439412117	341
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.4.0.2.3.1.0.2	search with cache (only 1: intros n m; only 1: induct n; only 1: intro H; only 1: rewrite pred_0; only 1: order; only 1: intros n IH H; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	10.8029069901	4070
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40	0.0.2.1	search with cache (only 1: intros z n H; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.130630016327	34
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	0.0.0.0.1.0.0.8.0	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: trivial; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	3.76867890358	2172
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	10.0.1.0.0.0.1.0	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	9.02069616318	5274
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.0.0.0.0.0.0.0.0.7.0	search with cache (only 1: intros n m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with (P m); only 1: assumption; only 1: apply le_pred_l).	7.72951197624	3886
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.2.0.0.1.1.0.2	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: now apply le_succ_l).	2.70095801353	1270
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.3.0.8	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	2.30431294441	1572
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	4.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_0_lt_0; only 1: auto'; only 1: nzsimpl; only 1: order).	0.544064998627	254
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0342950820923	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.0.0.0.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.0326991081238	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.031445980072	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0174078941345	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0187249183655	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	0.0.0.0.1.1.2	search with cache (only 1: setoid_rewrite one_succ; only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: apply neq_succ_0; only 1: nzsimpl; only 1: order).	0.604903936386	364
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.1.0.2	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.102122068405	48
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0125632286072	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0117321014404	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.1.0.5.0.2	search with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	2.44137406349	1366
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	0.0.0.0.7.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: intuition; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	1.41834211349	904
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.2.5.0.0.13.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a b); only 1: auto'; only 1: auto'; only 1: apply mod_le; only 1: auto'; only 1: order).	28.6721498966	25341
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.419085979462	101
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.0.0.1.1.0.0.0.1.6.0.0.1	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- div_small_iff; only 1: auto; only 1: auto'; only 1: auto'; only 1: intros Hab; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	14.6393260956	10378
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40	0.0.0.1.1.1.0.1.1.0.1.0.1.1.0	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: rewrite <- Private_NZDiv.div_small_iff; only 1: rewrite <- (mul_cancel_l _ _ b) by order; only 1: rewrite <- (add_cancel_r _ _ (a mod b)); only 1: rewrite <- div_mod by order; only 1: symmetry; only 1: now nzsimpl; only 1: order; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: intuition; only 1: now nzsimpl).	26.69059515	14033
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.6.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0890610218048	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.03400182724	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.1.0.1.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.943850040436	425
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: auto'; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0496411323547	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.1.0.7.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: apply neq_0_lt_0; only 1: auto').	0.668704986572	269
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	1.2.1.0.3	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.572957992554	249
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.0291719436646	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.2.1.0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.42674398422	570
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.1.2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	2.13066411018	947
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.4.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0259740352631	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0656130313873	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: intro H1; only 1: rewrite H1 in H; only 1: now apply H).	0.0376570224762	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.1.0.1.2.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.402961969376	157
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.0349938869476	22
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: apply neq_0_lt_0; only 1: auto').	0.0380530357361	12
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.1.0.1.1.1.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: apply neq_0_lt_0; only 1: auto'; only 1: apply neq_0_lt_0; only 1: auto').	0.280347108841	107
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: auto').	0.0595710277557	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.1.0.0.0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: apply neq_0_lt_0; only 1: auto'; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: apply neq_0_lt_0; only 1: auto').	1.89155292511	811
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: auto; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.750587940216	238
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0873849391937	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	5.0	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.035092830658	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.11.0.37.0	search with cache (only 1: cases n; only 1: auto with relations; only 1: intro n; only 1: right; only 1: now exists n).	5.51686310768	6099
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.7.0.0.0.0.3	search with cache (only 1: cases n; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: pose proof (pred_succ n) as EQ'; only 1: now f_equiv).	2.22741889954	905
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.PairInduction.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.TwoDimensionalInduction.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.DoubleInduction.double_induction	40	2.11.0.0.0.6.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: intro n; only 1: induct ltac:(n); only 1: exact H1; only 1: intros n IH; only 1: intro m; only 1: induct ltac:(m); only 1: apply H2; only 1: auto).	26.9664800167	15785
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40	0.5.13.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: compute; only 1: intros n1 n2 H; only 1: now f_equiv).	9.11463212967	3937
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	11.0.1.7.0.11	search with cache (only 1: intros n m; only 1: revert m; only 1: intros a Ha; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: trivial).	10.6320168972	16480
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40	2.1.4.3.2.5.11	search with cache (only 1: compute; only 1: intros a b c d ? ?; only 1: f_equiv; only 1: auto with *; only 1: intros x1 x2 H1 x3 x4 H2; only 1: now rewrite H2; only 1: assumption).	16.9622561932	7673
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.1.4.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.023726940155	10
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.48.2.27	search with cache (only 1: apply PeanoNat.Nat.eqb_eq; only 1: unfold even; only 1: compute; only 1: now rewrite recursion_0).	16.1181259155	10189
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	0.0.84	search with cache (only 1: compute; only 1: rewrite recursion_0; only 1: auto).	1.12738800049	3996
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40	0.158.18	search with cache (only 1: symmetry; only 1: compute; only 1: now rewrite recursion_0).	6.78219103813	28873
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.3.3.1	search with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	0.5887799263	154
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0434579849243	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	2.0	search with cache (only 1: intros x x' EQ; only 1: now f_equiv).	0.02374792099	12
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	2.48165798187	961
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.0.0.0.0.0.2	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: now try order').	0.0529959201813	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.11	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.214544057846	203
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.5.2.0.0.4.2	search with cache (only 1: destr_bool; only 1: apply b2n_inj; only 1: rewrite testbit_spec' by trivial; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	1.76810097694	1306
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0441789627075	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40	0.11.0.0.8	search with cache (only 1: intros a b Hb; only 1: apply eq_true_iff_eq; only 1: rewrite 2!testbit_true; only 1: rewrite Private_NZPow.pow_add_r, mul_comm; only 1: now rewrite div_div by order_nz).	37.7063667774	16390
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0119850635529	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40	0.1.1.5.2.2.36.96	search with cache (only 1: compute; only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: intros; only 1: setoid_rewrite H; only 1: trivial).	5.50658893585	14184
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	12.1.4	search with cache (only 1: repeat red; only 1: intros n m p Hm; only 1: now f_equiv).	5.77498006821	1674
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.1.0.14.9	search with cache (only 1: intro m; only 1: symmetry; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	12.1005320549	9068
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0747799873352	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: apply Private_NZDiv.div_0_l; only 1: order_nz).	0.0290598869324	6
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.9	search with cache (only 1: intros a Ha; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: intros H; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: trivial using le_0_l; only 1: trivial using le_0_l).	2.29289698601	932
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0386669635773	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0461130142212	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0183579921722	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.1.1	search with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.0655429363251	28
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0179970264435	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.0.6.2	search with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.300418138504	184
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40	2.1.0.3	search with cache (only 1: intro H; only 1: bitwise; only 1: apply andb_false_iff; only 1: intuition).	0.143614053726	60
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.2.1	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0467481613159	27
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0198519229889	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.1.0.1.0.0.0.0.0.0.1.1.2	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply Private_NZPow.pow_le_mono_r; only 1: order'; only 1: auto; only 1: order_nz).	5.90792393684	2998
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.1.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.055675983429	23
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0223989486694	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	1.0.5.0	search with cache (only 1: intros a n; only 1: unfold lnot; only 1: bitwise as m; only 1: now destruct a.[m]).	0.396685123444	120
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.7.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.927061080933	384
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.0.0.0.0.16.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.478139877319	1021
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	4.2.1	search with cache (only 1: intro n; only 1: apply sqrt_square; only 1: apply le_0_l).	0.0804150104523	45
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	1.6.3.5.5	search with cache (only 1: intros a Ha; only 1: rewrite <- sqrt_lt_square; only 1: now nzsimpl; only 1: apply le_0_l; only 1: apply le_0_l).	26.9459240437	15826
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40	2.1.0.0.1.1.0.6	search with cache (only 1: intro H; only 1: intro n; only 1: nzinduct n; only 1: apply neq_sym; only 1: apply neq_succ_0; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.95900988579	2857
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	3.2.0.0.0.0.1	search with cache (only 1: intros n m; only 1: cases n; only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: now nzsimpl).	1.39332008362	625
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40	0.0.0.2.4.1.0.0.1.0	search with cache (only 1: intros n m; only 1: cases m; only 1: intro H; only 1: now elim H; only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.57397913933	2736
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.1.0.0.0.0.0	search with cache (only 1: cases n; only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.105079174042	8
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.12170505524	443
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.244854927063	69
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.624690055847	92
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	2.1.1	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.328266143799	64
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: apply le_0_l).	0.202452898026	23
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0284790992737	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	3.0.12.0	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	1.89166498184	752
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	2.77671504021	826
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.0.0.0.0.0.0.0.0.6.0.3.0	search with cache (only 1: intros; only 1: apply lt_eq_cases in H; only 1: destruct H as [H| H]; only 1: destruct (lt_trichotomy c 0) as [Hc| [Hc| Hc]]; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: rewrite Hc; only 1: now nzsimpl; only 1: apply lt_le_incl, Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial; only 1: now rewrite <- H).	11.8341379166	6855
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	0.2.0.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: contradict Ha; only 1: order; only 1: trivial).	0.0305721759796	8
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	2.0.0.2.0.0.0	search with cache (only 1: intros a b c d ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.288692951202	131
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.0354330539703	9
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono_r).	2.28907084465	713
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	4.73460412025	1445
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	5.0411260128	1373
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.1.0.4.0.0.0.1.0.2.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now f_equiv; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	39.9173521996	13930
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: order).	5.25288581848	1807
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	2.0.0.1.2.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_l).	5.34582090378	1759
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	1.61574196815	413
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	1.0.0.8.1.0.0.7.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	27.4903709888	8998
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_alt	40	7.1	search with cache (only 1: symmetry; only 1: split).	1.03514790535	14
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_0_any	40	0.0.1.3.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt; only 1: rewrite strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.170944929123	15
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.StrongRecursion.FixPoint.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	0.1	search with cache (only 1: intros n m; only 1: apply divide_mul_l, divide_refl).	0.0167899131775	12
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.0.15.0.3.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: unfold lcm; only 1: now nzsimpl; only 1: unfold lcm; only 1: intros; only 1: nzsimpl; only 1: now nzsimpl).	17.8477370739	15729
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0274419784546	8
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.0.0.0.6.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply le_0_l; only 1: trivial using divide_1_l, le_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	1.40019512177	731
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.169052839279	50
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.0.0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists 1; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial using divide_refl).	0.515538930893	225
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.3.4.0	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.324229955673	146
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40	0	search with cache (only 1: now induction d).	0.0953569412231	1
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !HexadecimalPos.Unsigned.to_of; only 1: now f_equal).	0.117550849915	3
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40	0.0.1.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- HexadecimalPos.Unsigned.of_uint_norm, E; only 1: apply HexadecimalPos.Unsigned.of_uint_norm).	0.238243818283	13
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40	4.4.1	search with cache (only 1: destruct d; only 1: now induction d; only 1: now induction d).	0.61803984642	132
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	5	search with cache (only 1: auto with zarith).	0.0546469688416	6
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40	7.0.21.0.4.0.1	search with cache (only 1: revert d; only 1: intro n; only 1: intro H; only 1: intro H1; only 1: intuition; only 1: rewrite H1 in H; only 1: auto).	23.7331910133	17519
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	2.4.1.12	search with cache (only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	1.27764201164	452
Coq.Numbers.HexadecimalFacts.length_lnzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	5	search with cache (only 1: auto).	0.0489239692688	6
Coq.Numbers.HexadecimalFacts.app_nil_l	40	0	search with cache (only 1: now simpl).	0.0485141277313	1
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	0	search with cache (only 1: reflexivity).	0.0443289279938	1
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	5.0.5.17	search with cache (only 1: revert n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: trivial).	2.03214502335	1106
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0493288040161	1
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.3.6	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.231541872025	64
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.0.0.5	search with cache (only 1: unfold sqrt_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: rewrite <- le_succ_l; only 1: order; only 1: order).	0.465944051743	181
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.3.1.0.0.0.0	search with cache (only 1: intros a; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.557718038559	219
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0349369049072	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.39679908752	684
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.1.0.3.2.18.0.16.8	search with cache (only 1: intro n; only 1: rewrite one_succ; only 1: intro H; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	16.0796480179	17192
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.125849962234	42
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.261645078659	93
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.5.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	0.634088039398	404
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	5.0.1.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.0985090732574	62
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.2.0	search with cache (only 1: intros a ?; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0489020347595	30
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.1.0.0.9.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: destruct (mod_bound_pos a b); only 1: auto; only 1: auto; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	32.4922521114	17739
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.0.0.0.1.2.5	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: now f_equiv; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.7069439888	317
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0506858825684	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0517220497131	8
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0207369327545	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.1.0.1	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.110347986221	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0640618801117	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.176727771759	24
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.0.0.0.4.0.4.0	search with cache (only 1: intros n m p; only 1: intro; only 1: nzinduct n; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	15.0730190277	3722
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.4.6.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.78622484207	1376
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.071594953537	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.2	search with cache (only 1: Bool.destr_bool; only 1: now nzsimpl').	0.0307648181915	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40	0.0.0.9.1.0	search with cache (only 1: intro n; only 1: apply lt_eq_cases; only 1: constructor; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	0.715651988983	609
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	9.0.0.0	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	0.778079986572	249
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.0	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0218842029572	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.0	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: intuition).	0.0169401168823	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0.0.4.0	search with cache (only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now rewrite H2 in H1).	0.0665979385376	55
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	search with cache (only 1: order).	0.00782084465027	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0.4	search with cache (only 1: intros x y z H0 H1; only 1: now rewrite <- H1).	0.105016946793	52
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	search with cache (only 1: order).	0.00808787345886	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	0	search with cache (only 1: order).	0.00661015510559	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	0	search with cache (only 1: order).	0.00796484947205	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.0675139427185	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40	0.0.7.3.2.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r; only 1: rewrite lt_eq_cases; only 1: intuition).	11.9316499233	4729
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.4.0	search with cache (only 1: intros x y H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0145061016083	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.2.3.1.0	search with cache (only 1: intros x y; only 1: intro EQ; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: auto).	0.333343982697	274
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.3.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0165939331055	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.6.0	search with cache (only 1: intros; only 1: rewrite lt_succ_r; only 1: nzinduct m n; only 1: split; only 1: intro H; only 1: false_hyp H lt_irrefl; only 1: intro H; only 1: false_hyp H nle_succ_diag_l; only 1: intro m; only 1: rewrite (lt_eq_cases (S n) (S m)), !lt_succ_r, (lt_eq_cases n m), succ_inj_wd; only 1: rewrite or_cancel_r; only 1: reflexivity; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl; only 1: intros LE EQ; only 1: rewrite EQ in LE; only 1: false_hyp LE nle_succ_diag_l).	36.8466739655	23237
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.4.8.0.41	search with cache (only 1: pose proof (@partial_order_equivalence _ _ _ _ _) as poe; only 1: do 3 red in poe; only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	1.47279000282	1947
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.2.1.1.0	search with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0254311561584	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.2.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0202751159668	9
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	0.0.1.0.2.0	search with cache (only 1: intros n m; only 1: nzinduct m n; only 1: now right; only 1: intro m; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: intuition).	0.130604028702	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.2.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: rewrite lt_eq_cases; only 1: intuition order; only 1: intuition order).	0.434472084045	315
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	7.0.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.229943037033	32
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.5.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0497469902039	19
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0	search with cache (only 1: intuition order).	0.00959086418152	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0090069770813	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0211551189423	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.200491905212	82
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.0100879669189	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.00969195365906	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.306118011475	176
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	1.2.0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intro H; only 1: intuition order).	0.234617948532	51
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.1.1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply le_succ_l; only 1: order; only 1: intro H; only 1: rewrite lt_succ_r; only 1: order).	0.0679540634155	25
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.rbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.RightInduction.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.LeftInduction.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.Center.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Induction.le_ind	40	1.1.18.1	search with cache (only 1: intros Az AS AP n; only 1: apply right_induction; only 1: assumption; only 1: assumption).	6.96196198463	8154
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rlt_wd	40	0.2.0.20	search with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	6.99421215057	7058
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.Rgt_wd	40	3.3.1.23	search with cache (only 1: compute; only 1: intros IH m H1 H2; only 1: intro n; only 1: intuition order).	10.5541329384	8771
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.WF.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.0.0.12.13	search with cache (only 1: compute; only 1: PeanoNat.Nat.induct n; only 1: firstorder; only 1: intros x y z H0 H1; only 1: auto).	11.2923798561	9335
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialExists.SuccPred.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.InitialDontExists.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	15	search with cache (only 1: easy).	0.168478965759	189
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1.2.0.0.0.0	search with cache (only 1: intro n; only 1: revert n; only 1: intro n; only 1: revert n; only 1: fix le_div2 1; only 1: solve_proper).	0.149976968765	39
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40	0.0.11.2.0.0.0.0.0	search with cache (only 1: intro n; only 1: PeanoNat.Nat.cases ltac:(n); only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intro n; only 1: simpl; only 1: intro H; only 1: now rewrite PeanoNat.Nat.pred_succ).	4.13470101357	5102
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.9.3.1	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: apply lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	0.871345043182	747
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40	11.20	search with cache (only 1: fix odd_spec 1; only 1: trivial).	25.2580449581	19152
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	1.0.0.0.3.9.0.2.1.6	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro m; only 1: PeanoNat.Nat.nzsimpl; only 1: now rewrite PeanoNat.Nat.add_0_l; only 1: intro m; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: rewrite <- IHn; only 1: reflexivity).	25.0238070488	18183
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	5.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0403470993042	12
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.2.0.2.2.1.0.1.2	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: intros; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	19.0644590855	5763
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40	0.7.24	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: exists n; only 1: now nzsimpl').	7.12436795235	7202
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	1.3.8	search with cache (only 1: unfold divide; only 1: exists 0; only 1: now nzsimpl).	4.06598496437	1072
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40	0.0.17.0	search with cache (only 1: intros n m p (q, Hq); only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exists q; only 1: now rewrite mul_shuffle3, Hq).	4.13798213005	1930
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.8.1.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	9.64565706253	4579
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.22.0	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	17.5516650677	4431
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.11.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.200276851654	141
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	1.0.0.0.0.1.0.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.417016029358	103
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.044783115387	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.0.0.0.1.0	search with cache (only 1: intro n; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: exists 1; only 1: now nzsimpl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0723659992218	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.053946018219	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0438690185547	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40	1.6.0.5.2.0	search with cache (only 1: intros n m H; only 1: apply divide_0_l; only 1: transitivity (gcd n m); only 1: rewrite H; only 1: now nzsimpl; only 1: trivial using gcd_divide_r).	23.9485969543	10141
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.0.0.1.2	search with cache (only 1: intros n m Hn; only 1: apply gcd_unique; only 1: trivial using divide_refl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	0.116069078445	10
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.12730884552	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	2.51287698746	715
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.6.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	0.0265879631042	13
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.5.0.0	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.0757021903992	17
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.07190990448	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0712151527405	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	4.3.2.2.1.0.7.3	search with cache (only 1: intros z n H; only 1: nzinduct n; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro m; only 1: rewrite <- le_succ_l; only 1: nzsimpl; only 1: now rewrite lt_succ_r).	30.3070938587	12869
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0253751277924	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0229561328888	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now nzsimpl).	0.312191009521	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	2.0.0.0.4.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: nzsimpl; only 1: now rewrite add_cancel_r; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	9.22987699509	1199
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.3.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.110889911652	9
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0574359893799	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.1.0.9.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	18.4498639107	3492
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.2.7.2.0.2	search with cache (only 1: apply log2_unique; only 1: order; only 1: split; only 1: now nzsimpl; only 1: nzsimpl; only 1: order'; only 1: order).	2.45727014542	1154
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.1.3.0.1.0.0.2.0	search with cache (only 1: rewrite <- (pow_0_r 2); only 1: apply log2_unique' with 0; only 1: nzsimpl; only 1: apply lt_le_incl, lt_0_1; only 1: split; only 1: order; only 1: nzsimpl; only 1: order'; only 1: now nzsimpl).	1.83145689964	1166
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.5.7	search with cache (only 1: intro n; only 1: intros H; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	5.49160194397	1090
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.606225013733	245
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40	0.2.4.0.0.1.0	search with cache (only 1: intros a; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: intros H; only 1: order_pos; only 1: order).	1.77549004555	1000
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.0092248916626	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.0.1.0.1.22.0.0.3	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order'; only 1: rewrite <- (pow_1_r 2); only 1: intros; only 1: rewrite log2_pred_pow2; only 1: apply lt_succ_pred with 0; only 1: order_pos; only 1: order_pos; only 1: order').	23.9916350842	15930
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	8	search with cache (only 1: now symmetry).	0.110517024994	70
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	7.0	search with cache (only 1: intros; only 1: CRelationClasses.simpl_crelation).	0.0163609981537	9
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.0.3.13.0.2	search with cache (only 1: intro y0; only 1: intros; only 1: transitivity y0; only 1: symmetry; only 1: auto; only 1: auto).	1.51149892807	2679
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	0.1.0.0.1.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: symmetry; only 1: now f_equiv).	0.0485301017761	8
Coq.Numbers.NatInt.NZBase.NZBaseProp.CentralInduction.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	6.57213902473	1574
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0.4	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	3.43499207497	1159
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.1.0.0.5.0.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: intros H; only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	4.43810796738	1462
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0357999801636	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0701088905334	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	3.0.10.0.0.0	search with cache (only 1: intros n m Hn; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl).	17.0490419865	5570
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	3.7.3	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: intuition order).	5.69719910622	2915
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0837922096252	6
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	13.18	search with cache (only 1: intros Az RS LS n; only 1: now apply mul_lt_mono_nonneg).	9.9298350811	8229
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: order; only 1: order; only 1: order).	0.038999080658	8
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.0.1	search with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.0913009643555	4
Coq.Numbers.HexadecimalR.of_iff	40	0.0.1.0.0.0.0	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !to_of, H; only 1: intros E; only 1: rewrite <- HexadecimalQ.of_hexadecimal_dnorm, E; only 1: apply HexadecimalQ.of_hexadecimal_dnorm).	0.157878875732	13
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	3	search with cache (only 1: reflexivity).	0.00837993621826	4
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0120570659637	2
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.012081861496	4
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.5	search with cache (only 1: destruct z; only 1: now simpl; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.030149936676	10
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40	25	search with cache (only 1: now induction d).	1.30146813393	503
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40	2.6.0	search with cache (only 1: simpl; only 1: unfold N.succ, N.add; only 1: now destruct n).	1.43692994118	148
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40	0	search with cache (only 1: now induction d).	0.0547158718109	1
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: trivial).	0.0374488830566	2
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	1	search with cache (only 1: auto with arith).	0.0384449958801	2
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0884439945221	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0516979694366	2
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00982999801636	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	0.1.0	search with cache (only 1: intros; only 1: apply (@CRelationClasses.symmetry _ _ _ _); only 1: auto).	0.0151779651642	4
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.0355169773102	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00987601280212	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.3.0.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.0561559200287	28
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.1.0	search with cache (only 1: intros x y; only 1: generalize (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition).	0.0547978878021	16
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	3	search with cache (only 1: solve_proper).	0.288469076157	23
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40	3.0.6.19	search with cache (only 1: intro p; only 1: fix sqrtrem_spec 1; only 1: intro q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	9.62680196762	8315
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.0.1	search with cache (only 1: intros n m p; only 1: intros; only 1: now apply Pos.lt_trans with m).	0.0810749530792	4
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	0.6	search with cache (only 1: intros n m LE; only 1: Nat.order).	0.115698099136	29
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.1.0	search with cache (only 1: intros n m p; only 1: intros; only 1: now transitivity m).	0.73628616333	52
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	0	search with cache (only 1: Z.order).	0.0485939979553	1
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40	13.22.1.2	search with cache (only 1: intros; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: Pos.Private_Tac.order || (right; Pos.Private_Tac.order) || (left; Pos.Private_Tac.order)).	15.1808888912	12680
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	3.10	search with cache (only 1: compute; only 1: now split).	0.239924907684	151
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	17.2.1.1.9	search with cache (only 1: intro n; only 1: simple destruct 1; only 1: constructor; only 1: auto with ordered_type; only 1: intuition).	22.8214170933	13540
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40	2.3.24	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: trivial).	33.4393019676	29873
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	0	search with cache (only 1: decide equality).	0.0679070949554	1
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40	10.8.35	search with cache (only 1: symmetry; only 1: symmetry; only 1: now apply N.gt_lt).	1.77171206474	1802
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	10.1.1.13.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H0; only 1: auto; only 1: Nat.order').	3.88878107071	2323
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40	2	search with cache (only 1: now apply Ascii_as_OT.cmp_eq).	0.0632300376892	3
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	2.2	search with cache (only 1: intros A P; only 1: Ltac.reflexivity).	0.0708041191101	41
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	9.0	search with cache (only 1: intros n; only 1: easy).	0.182734966278	48
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	4.6.15	search with cache (only 1: intros x y; only 1: compute; only 1: intuition auto; BinPos.Pos.Private_Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	8.08021998405	2433
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	3.23.0.2.19	search with cache (only 1: Ltac.split; only 1: simpl_relation; only 1: auto with relations; only 1: intros x' x'' Hx' Hx''; only 1: eauto).	10.7091851234	16476
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	1.0.0.0.0.0.0.0	search with cache (only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: apply eqb_eq; only 1: reflexivity).	0.100757837296	12
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	2.3.2	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0342750549316	25
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00973701477051	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.00966215133667	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.0100681781769	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00923418998718	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00879597663879	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00968408584595	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00926899909973	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00901699066162	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00989699363708	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00950193405151	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00903105735779	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00877785682678	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00906419754028	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	1.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: order).	0.449033021927	156
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	1.00491309166	405
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_eq	40	0.0.0	search with cache (only 1: intros l x y H H'; only 1: rewrite <- H; only 1: auto).	0.151793003082	3
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_In	40	5.0.0.0.0.3.1	search with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: eauto with *).	2.0187330246	1022
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_lt	40	1.8	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.650193929672	96
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_eq	40	1.0.1.5.2.0.7	search with cache (only 1: intros [| a] b; only 1: auto; only 1: intros; only 1: induction H0 as [| ? ? ? ? H1]; only 1: auto with ordered_type; only 1: constructor; only 1: order).	4.13862800598	2933
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.ListIn_Inf	40	2.0.0.2.0.5	search with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: constructor; only 1: intuition).	1.42887091637	484
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.In_Inf	40	9.7.0.11	search with cache (only 1: induction l as [| a l IHl]; only 1: intuition; only 1: intros HP HQ; only 1: intuition).	8.91382193565	9005
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.ForNotations.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_eqk	40	0.0.7	search with cache (only 1: intros; only 1: induction H; only 1: assumption).	0.0335850715637	28
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_r	40	0.2	search with cache (only 1: intro l'; only 1: auto).	0.0109090805054	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_right_l	40	0	search with cache (only 1: auto).	0.00767421722412	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_refl	40	1.0	search with cache (only 1: intros [H1 H2]; only 1: auto with ordered_type).	0.0108561515808	3
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.00745511054993	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_sym	40	3.0	search with cache (only 1: unfold eqk, eqke; only 1: auto using OrderTac.eq_sym).	0.0166659355164	11
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_sym	40	4.1.0	search with cache (only 1: unfold eqk, eqke; only 1: intros x y H; only 1: intuition).	0.0240299701691	8
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_trans	40	2.8.3.21.9	search with cache (only 1: intro l; only 1: destruct l; only 1: unfold eqk, eqke; only 1: destruct e'; only 1: order).	19.8837780952	30860
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0128130912781	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqk	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: auto with ordered_type).	0.0120720863342	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_not_eqke	40	1.5.5.2.0.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intro l; only 1: intros n IH; only 1: intros (H, _); only 1: order).	3.72167801857	2534
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_equiv	40	0.0.0.24.0.0.6.0.116	search with cache (only 1: constructor; only 1: auto with ordered_type; only 1: repeat red; only 1: unfold eqk, eqke; only 1: intuition; only 1: intros l l' x y; only 1: intros; only 1: red; only 1: eauto with *).	14.3820271492	24974
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.109467983246	4
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_strorder	40	0.2.2.3.1	search with cache (only 1: split; only 1: compute; only 1: intros a H; only 1: order; only 1: eauto with ordered_type).	0.164716005325	97
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0129909515381	2
Coq.Structures.OrderedType.KeyOrderedType.Elt.ltk_eqk	40	0	search with cache (only 1: eauto with ordered_type).	0.00934100151062	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.00945615768433	1
Coq.Structures.OrderedType.KeyOrderedType.Elt.InA_eqke_eqk	40	0.4.5.0.2.1	search with cache (only 1: intro l; only 1: intros H; only 1: unfold eqk, ltk; only 1: do 2 rewrite InA_alt; only 1: intuition; only 1: firstorder).	1.62545394897	1077
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_eq	40	0.2.4.7.2	search with cache (only 1: intuition; only 1: induction l; only 1: eauto with *; only 1: rewrite H; only 1: intuition).	1.56965303421	889
Coq.Structures.OrderedType.KeyOrderedType.Elt.Inf_lt	40	0.0.4.0.8.4	search with cache (only 1: unfold eqk, ltk; only 1: simple induction l; only 1: constructor; only 1: intros A R1 Sym B R2 f Hf; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	3.13780403137	1598
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_2	40	0.4.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with *).	0.0274319648743	7
Coq.Structures.OrderedType.KeyOrderedType.Elt.In_inv_3	40	0.4.0	search with cache (only 1: inversion 1; only 1: firstorder; only 1: eauto).	0.115417003632	26
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0658390522003	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.1.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	33.2355279922	11739
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40	1.0.0.0.0.0.0.0.0.1.1.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: intro H; only 1: split; only 1: easy; only 1: intro LT; only 1: contradict ltac:(LT); only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	33.2540869713	9510
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.2.0.0.1.0.0.1.2.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	26.225769043	6411
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	1.0.0.0.2.1.0.0.0.2.3.1.0.1	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: rewrite H; only 1: intro LT; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	35.2207350731	12000
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	3.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.122176885605	23
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.0.0.1	search with cache (only 1: red; only 1: unfold relation_equivalence in *; only 1: unfold predicate_equivalence in *; only 1: compute; only 1: iorder).	0.0599031448364	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	2.0	search with cache (only 1: compute; only 1: order).	0.0898468494415	19
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	15	search with cache (only 1: iorder).	1.59773206711	545
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.0298631191254	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.1.0.0	search with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.135787010193	21
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.0.0	search with cache (only 1: intros x y; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.144825935364	8
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	1.1.1.0.0.0	search with cache (only 1: rewrite compare_gt_iff; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.152861118317	9
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0440661907196	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	2.0	search with cache (only 1: intro H; only 1: order).	0.0306730270386	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0366780757904	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0359239578247	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	search with cache (only 1: order).	0.0271360874176	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0239670276642	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2	search with cache (only 1: order).	1.01970505714	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0235328674316	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	2	search with cache (only 1: order).	0.125920057297	36
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	8.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.402364969254	72
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.0263659954071	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1	search with cache (only 1: order).	0.312268972397	74
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.026093006134	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.0215427875519	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	0.0	search with cache (only 1: intro H; only 1: order).	0.0262842178345	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.020308971405	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.0202028751373	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0221118927002	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.0218939781189	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	1.1.0.1.0.0.8.1	search with cache (only 1: split; only 1: split; only 1: order; only 1: order; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: easy; only 1: easy).	9.23131394386	3874
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.0265300273895	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	2.0.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: reflexivity).	0.097039937973	13
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0298280715942	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0402898788452	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	1.1.0.2.2.4	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: easy || now destruct 1; only 1: constructor; only 1: trivial; only 1: trivial).	7.41056895256	1463
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	0.0.0.0.1.5	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.00367712975	135
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	1.7.0.5.1	search with cache (only 1: symmetry; only 1: case ltb_spec0; only 1: destr_bool; only 1: intuition; only 1: intuition).	4.909512043	1634
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.0.9	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.754514932632	101
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	0.2.8.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: destr_bool; only 1: apply leb_le; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	3.26939892769	1533
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	4.1.20	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: reflexivity).	2.4598197937	1261
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.1.1.0.0.15.0.3	search with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	13.2856349945	5550
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.1.0.5	search with cache (only 1: intros l l1 l2; only 1: intros Hincl HE; only 1: subst; only 1: auto).	0.135529994965	29
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.0.2.0.0.3.0	search with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: simpl; only 1: intuition; only 1: firstorder; only 1: subst; only 1: eauto with *).	4.70072817802	1488
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	0.7	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	0.539664983749	36
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40	2.0.2	search with cache (only 1: intros x y z H; only 1: rewrite <- H; only 1: auto).	0.127618074417	16
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	2.0.0.2.0.4	search with cache (only 1: intro l; only 1: induction l as [| a l IH]; only 1: firstorder  (subst; auto); only 1: firstorder; only 1: constructor; only 1: intuition).	2.39586997032	405
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	9.7.0.11	search with cache (only 1: induction l as [| a l IHl]; only 1: intuition; only 1: intros HP HQ; only 1: intuition).	13.0745491982	7722
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	5	search with cache (only 1: solve_proper).	0.170759916306	44
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	6	search with cache (only 1: solve_proper).	1.36915111542	63
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	0.0	search with cache (only 1: intros x x' Hx l l' Hl; only 1: now compute).	0.0457949638367	2
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0635869503021	3
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_eq	40	0	search with cache (only 1: now intros <-).	0.0506191253662	1
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_1	40	0.8.0.1.7.4.3	search with cache (only 1: intros; only 1: inversion H; only 1: destruct p as [a0 b]; only 1: eapply Sort_Inf_In; only 1: eauto; only 1: auto; only 1: eauto).	16.7551989555	5853
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Elt.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.00886106491089	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	2	search with cache (only 1: auto).	0.010458946228	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.00845289230347	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	25.3	search with cache (only 1: intros H; only 1: firstorder).	0.452288150787	960
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	0	search with cache (only 1: now destruct 1).	0.00997686386108	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	9	search with cache (only 1: reflexivity).	0.0114259719849	10
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	1	search with cache (only 1: Ltac.reflexivity).	0.00776886940002	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	5.6	search with cache (only 1: intros; only 1: auto with arith).	0.0391631126404	58
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.12.3.19	search with cache (only 1: revert m; only 1: intro l'; only 1: do 2 rewrite InA_alt; only 1: firstorder).	5.58243703842	7855
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.2.6.0.8.1.0	search with cache (only 1: induction 1; only 1: exists y; only 1: split; only 1: auto; only 1: constructor; only 1: destruct p as [a0 b]; only 1: reflexivity; only 1: firstorder).	2.30962896347	2009
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40	0.1.0.4.4.6.9.0.4	search with cache (only 1: intros x; only 1: induction 1; only 1: constructor; only 1: destruct (split (A:=l)); only 1: induction l as [| a l IHl]; only 1: rewrite <- H; only 1: firstorder  auto with crelations; only 1: firstorder  auto with crelations; only 1: firstorder).	2.82257890701	4220
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	1.3.4.0	search with cache (only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: inversion 1).	0.251804113388	108
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	5.4.1	search with cache (only 1: firstorder  auto with crelations; only 1: rewrite <- H; only 1: eauto).	0.258615016937	135
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0171329975128	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	5.5.13.4.1	search with cache (only 1: unfold In, MapsTo; only 1: firstorder  auto with crelations; only 1: invlist InA; only 1: eauto; only 1: eauto).	21.7325620651	16406
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	1.7.14.4	search with cache (only 1: intros H; only 1: invlist InA; only 1: now compute; only 1: auto).	4.6066570282	3345
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.0.11.1	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: firstorder  auto with crelations; only 1: eauto).	0.905381917953	646
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40	2.23.7.12	search with cache (only 1: intro l; only 1: induction l; only 1: fix odd_spec 1; only 1: auto).	28.6326200962	39023
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_eqk	40	7	search with cache (only 1: firstorder).	0.138399839401	45
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_refl	40	4.1.0	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0265641212463	8
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_refl	40	0	search with cache (only 1: auto).	0.0166878700256	1
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_sym	40	0.1.0	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: auto).	0.0276880264282	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_sym	40	3.0.0	search with cache (only 1: unfold eqk, eqke; only 1: intros n m H; only 1: intuition).	0.10631108284	6
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_trans	40	6.9	search with cache (only 1: intros; only 1: eauto).	1.34668493271	817
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_trans	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqk_equiv	40	0.4.0.0.3	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: intro l; only 1: eauto).	0.112407922745	81
Coq.Structures.DecidableType.KeyDecidableType.Elt.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.0421798229218	4
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqke_eqk	40	0.0.1.4.18	search with cache (only 1: intro l1; only 1: intro l; only 1: do 2 rewrite InA_alt; only 1: destruct 1 as (y, (H1, H2)); only 1: firstorder).	2.6811208725	1707
Coq.Structures.DecidableType.KeyDecidableType.Elt.InA_eqk	40	0.0.0.1.0.0.2.2.3.2	search with cache (only 1: intro y0; only 1: intros l1 l2; only 1: destruct l2 as [| x2 l2]; only 1: intros n d; only 1: invlist InA; only 1: intros; only 1: rewrite <- H; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: intuition).	2.91375613213	1482
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_eq	40	10.0.15	search with cache (only 1: fix gcd_greatest 1; only 1: intros; only 1: eauto).	6.59237384796	5240
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_2	40	0.4.11.2	search with cache (only 1: intuition; only 1: invlist InA; only 1: firstorder; only 1: auto using eqke_equiv).	1.14513087273	507
Coq.Structures.DecidableType.KeyDecidableType.Elt.In_inv_3	40	0.2.0.1.11	search with cache (only 1: intros x y z H; only 1: invlist InA; only 1: compute in H0; only 1: intuition; only 1: intuition).	9.45037007332	2680
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.2.9.1.0	search with cache (only 1: red; only 1: intros x y z H0 H1; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.627791881561	371
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40	3.10.1.1.1	search with cache (only 1: repeat red; only 1: intro n; only 1: intro y0; only 1: fix gcd_divide 1; only 1: auto).	34.0046298504	12226
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40	1.2	search with cache (only 1: unfold eq; only 1: decide equality).	0.142905950546	46
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.0.0.0.0.0.0.4.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	19.4300320148	6385
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.0.18	search with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	1.20917892456	1542
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.0313601493835	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	1.0.0.0.0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	3.4528670311	2456
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40	17.1.0.2.0.2.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: red; only 1: auto with *; only 1: red; only 1: auto with *; only 1: intros R R' EQ a a' Ha WF; only 1: order).	31.5192301273	18272
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	216.6	search with cache (only 1: apply max_r; only 1: order).	6.78875398636	77560
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.2.3.11	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.516525030136	527
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0106720924377	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	3	search with cache (only 1: solve_max).	0.131219148636	44
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0162470340729	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40	0.12.0.7.1.1	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: right; only 1: order; only 1: left; only 1: order).	27.6828789711	13458
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	3.0.0.0.0.0.0.2.6	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	13.7517199516	5829
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	0.0.0.0.0.0.0.2.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	0.47688794136	188
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	0.1.0.1.3	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: intuition; only 1: order).	0.0264220237732	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.0122668743134	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	0.1.0.1.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order).	0.0267369747162	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	0.4.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.0555019378662	15
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0	search with cache (only 1: solve_max).	0.0128819942474	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0511391162872	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0225369930267	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.3	search with cache (only 1: intuition; only 1: apply max_lub_iff; only 1: solve_max).	0.0401449203491	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	1.0.0.0.2.0.0.0.3	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	6.68944883347	3425
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	0.0.0.0.0.1.11	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	11.4906511307	5886
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.3	search with cache (only 1: apply min_l; only 1: order).	0.00807213783264	5
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	1.2.6.13	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.391886949539	512
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0109457969666	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	7	search with cache (only 1: solve_min).	0.075492143631	36
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0138459205627	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	0.0.1.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.179383039474	67
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	0.0.2.1.0.0.2.1.4	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	18.3913741112	8786
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.1.4	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	2.33890414238	844
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	5	search with cache (only 1: solve_min).	0.0838661193848	16
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.0594079494476	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	6	search with cache (only 1: solve_min).	0.0464498996735	23
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.6.0	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.059562921524	20
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	1	search with cache (only 1: solve_min).	0.0120348930359	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0545060634613	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0216889381409	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.3.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.034658908844	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.7	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.0261588096619	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.9	search with cache (only 1: apply min_l; only 1: solve_max).	0.115235090256	51
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.1.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	3.75588989258	1537
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.0.1.0.0.0.0.1.1.1.0.0.1.0.0.1.0	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	19.1562290192	15317
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.0.1.1.0.0.0.1.0.1.0.0.1.0.0.1.1	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	23.3986468315	16923
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	1.1.0.0.0.0.0.0.0.12	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	6.51977801323	6564
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.18	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.443325042725	468
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.1.17.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: congruence; only 1: auto).	5.68245410919	657
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	2.0.1.2.9	search with cache (only 1: intros x y z; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto with sets).	5.79655790329	3675
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.0137407779694	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.8	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.0919568538666	72
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.9.2	search with cache (only 1: intros Compat Hl Hr; only 1: apply min_case_strong; only 1: congruence).	1.22182607651	874
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.013237953186	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.10	search with cache (only 1: Bool.destr_bool; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.265599966049	187
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	5.1.18.0.4.13.1	search with cache (only 1: intro x; only 1: intro n; only 1: red; only 1: unfold eq; only 1: inversion 1; only 1: rewrite H; only 1: discriminate).	27.4568769932	53895
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40	7.0.2.8.5	search with cache (only 1: intros n m; only 1: revert m; only 1: unfold eq, lt; only 1: intro m; only 1: decide equality).	4.2945830822	5197
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	1.3.0	search with cache (only 1: destruct n; only 1: split; only 1: split).	0.0159728527069	7
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0260090827942	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00919103622437	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: reflexivity).	0.00829601287842	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0252768993378	5
Coq.ZArith.Znat.Z_N_nat	40	1.0.0.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0307331085205	9
Coq.ZArith.Znat.Z_nat_N	40
Coq.ZArith.Znat.Zabs_N_nat	40	0.0.0.0.0.1.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0291430950165	8
Coq.ZArith.Znat.Zabs_nat_N	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0294859409332	7
Coq.ZArith.Znat.N2Z.id	40	0.1.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0203990936279	6
Coq.ZArith.Znat.N2Z.inj	40	0.2.0.0.0.2.0.0.10	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intro; only 1: reflexivity; only 1: now N.nzsimpl; only 1: simpl; only 1: congruence; only 1: intro H; only 1: f_equal; only 1: now destr_eq H).	2.50794887543	1235
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.2.0.2.0.0.0.1.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence; only 1: simpl; only 1: easy'; only 1: simpl; only 1: split; only 1: congruence; only 1: congruence).	8.46820497513	4839
Coq.ZArith.Znat.N2Z.is_nonneg	40	32	search with cache (only 1: now destruct n).	0.239617109299	516
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.00864815711975	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.0069420337677	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.2.0.0.0.4	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: now rewrite <- ?Pos.compare_antisym).	1.23760390282	511
Coq.ZArith.Znat.N2Z.inj_le	40	0	search with cache (only 1: now destruct n, m).	0.0115821361542	1
Coq.ZArith.Znat.N2Z.inj_lt	40	2	search with cache (only 1: now destruct n, m).	0.454336881638	93
Coq.ZArith.Znat.N2Z.inj_ge	40	4	search with cache (only 1: now destruct n, m).	0.0732610225677	31
Coq.ZArith.Znat.N2Z.inj_gt	40	1	search with cache (only 1: now destruct n, m).	0.0109219551086	2
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	1.8	search with cache (only 1: symmetry; only 1: now destruct n, m).	0.031641960144	22
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.0179169178009	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.0	search with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0240321159363	5
Coq.ZArith.Znat.N2Z.inj_pred_max	40	6.3.14.10	search with cache (only 1: unfold Z.max, Pos.max; only 1: destruct n; only 1: trivial; only 1: now destruct p).	8.97101211548	9622
Coq.ZArith.Znat.N2Z.inj_pred	40
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	22.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p).	2.46555995941	3532
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0178768634796	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.0396718978882	9
Coq.ZArith.Znat.Z2N.id	40	0.0.0.0.0	search with cache (only 1: intro Hn; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0282468795776	5
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	1.0.0.2.2.0	search with cache (only 1: intros; only 1: split; only 1: apply N2Z.inj; only 1: Z.order; only 1: Z.order; only 1: now intros ->).	0.878742218018	237
Coq.ZArith.Znat.Z2N.inj_0	40	4	search with cache (only 1: reflexivity).	0.00870108604431	5
Coq.ZArith.Znat.Z2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.100157022476	2
Coq.ZArith.Znat.Z2N.inj_neg	40	0	search with cache (only 1: now destruct 1 || trivial).	0.095235824585	1
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	0.674747943878	176
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.3.5.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros H; only 1: rewrite <- Pos.add_1_r; only 1: trivial; only 1: now destruct 1 || trivial).	1.47353315353	722
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.3.1.5	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.185636043549	122
Coq.ZArith.Znat.Z2N.inj_compare	40	0.0	search with cache (only 1: intros; only 1: now destruct n, m).	0.0235450267792	2
Coq.ZArith.Znat.Z2N.inj_le	40	0.23.1.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: unfold N.leb, N.le; only 1: now rewrite <- N2Z.inj_compare, !id).	37.9050710201	21130
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0117871761322	2
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0237629413605	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	4.0.0.0.1.0.0.0.3.4.0	search with cache (only 1: intro Hn; only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: easy).	7.97500514984	6769
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.6	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.233865022659	95
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.0	search with cache (only 1: intros; only 1: now destruct n).	0.0149879455566	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.0106339454651	2
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.0080931186676	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0107429027557	2
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0114498138428	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00879192352295	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	1	search with cache (only 1: now destruct n).	0.00970387458801	2
Coq.ZArith.Znat.Zabs2N.inj_succ	40	0.0.0.0.3	search with cache (only 1: destruct n as [| n| n]; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || intros _).	0.285072088242	93
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	0.136146068573	10
Coq.ZArith.Znat.Zabs2N.inj_mul	40	9	search with cache (only 1: now destruct n, m).	0.112766981125	10
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.2.1.3.0	search with cache (only 1: destruct n; only 1: now N.nzsimpl'; only 1: intros; only 1: now destruct p; only 1: intros; only 1: easy).	0.553193092346	188
Coq.ZArith.Znat.Zabs2N.inj_compare	40	2.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.0257270336151	4
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0192458629608	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0186748504639	3
Coq.ZArith.Znat.Zabs2N.inj_min	40	0.0.1.0.10.0	search with cache (only 1: intros; only 1: unfold Z.min, N.min; only 1: rewrite Pos2Z.inj_compare; only 1: now case Z.compare_spec; only 1: trivial; only 1: trivial).	31.2692229748	13219
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	1.1.0.0.1.0.0.1.21	search with cache (only 1: destruct n; only 1: trivial; only 1: rewrite abs_N_nonneg; only 1: now apply Z2N.inj_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: f_equal; only 1: now destruct p).	36.652215004	27465
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	2.1.0.15	search with cache (only 1: set (m' := (m - n)%N); only 1: Z.destruct_max n; only 1: now destruct n, m; only 1: now destruct n, m).	39.3603949547	16099
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0114698410034	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	1	search with cache (only 1: reflexivity).	0.00801110267639	2
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.3.2	search with cache (only 1: destruct n; only 1: now Z.nzsimpl'; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.051323890686	25
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0133209228516	1
Coq.ZArith.Znat.Nat2Z.id	40	0.5.4.13	search with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	1.40216493607	766
Coq.ZArith.Znat.Nat2Z.inj	40	1.4	search with cache (only 1: intros H; only 1: now rewrite <- (Nat2Pos.id n), <- (Nat2Pos.id m), H).	0.181005001068	47
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.0.0.0	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: auto).	0.0180969238281	4
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40	6.3.5	search with cache (only 1: unfold Z.le; only 1: symmetry; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_le_iff).	7.9637658596	3372
Coq.ZArith.Znat.Nat2Z.inj_lt	40	3.7	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now rewrite Pos2Nat.inj_compare, Nat.compare_lt_iff).	0.550243139267	191
Coq.ZArith.Znat.Nat2Z.inj_ge	40	11.4.7	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: trivial).	31.7024922371	15148
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.0.0.0.1.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: intros Hb'; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	1.3747549057	649
Coq.ZArith.Znat.Z2Nat.inj	40	7.1.6	search with cache (only 1: intros Ha Hb; only 1: intros H; only 1: now rewrite <- (Nat2Z.id n), <- (Nat2Z.id m), H).	3.20135998726	2037
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: now apply Z2N.inj; only 1: intros; only 1: now f_equal).	0.0233719348907	5
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.00726294517517	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.00879287719727	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	4	search with cache (only 1: split).	0.00880312919617	5
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.0108530521393	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0.0.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.029039144516	15
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.15	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	5.35496306419	5155
Coq.ZArith.Znat.Zabs2Nat.id	40	0.3.1.4	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.122091054916	55
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0073869228363	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00942397117615	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00963282585144	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.2.10.4.1.0.1	search with cache (only 1: destruct n as [| n| n]; only 1: contradiction || auto; only 1: now destruct 1 || intros _; only 1: simpl; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now destruct 1 || intros _).	21.7328460217	17481
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0193569660187	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0183889865875	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.2.1.0.0.0.0.0.30	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: simpl; only 1: trivial; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	10.1878480911	8437
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.0234789848328	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.R_wf	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec2	40
Coq.ZArith.Wf_Z.Efficient_Rec.natlike_rec3	40	0.0.3.0.3.2.2.4.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P Ho Hrec z; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: destruct z as [| p| p]; only 1: intros Hz; only 1: apply Ho; only 1: intros Hz; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: intros Hz; only 1: now destruct Hz).	33.9560649395	39598
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_0_ind	40	2.0.1.0.0.2.1.0.0	search with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial; only 1: trivial).	3.50017285347	1867
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0194749832153	3
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Efficient_Rec.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	15.3945810795	5883
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	2.0.0.0.15	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	37.5992708206	5612
Coq.ZArith.Zcompare.Zle_compare	40
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.5.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.404390096664	68
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.157441854477	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.14010310173	2
Coq.ZArith.Zquot.Zquot_0_r	40	0.0.0.8	search with cache (only 1: destruct a; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.410372972488	85
Coq.ZArith.Zquot.Zrem_0_r	40	9	search with cache (only 1: now destruct a).	0.123365163803	19
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0566530227661	3
Coq.ZArith.Zquot.Zquot_0_l	40	1	search with cache (only 1: now destruct a).	0.0568850040436	2
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.2.0	search with cache (only 1: intros Ha Hb; only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	3.66250705719	122
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.1.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.138950109482	13
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.7.0.1	search with cache (only 1: intros Ha Hb; only 1: generalize (Zrem_lt_pos a b); only 1: intros H; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	6.73876881599	965
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.24990606308	26
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.112884044647	5
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	0.2.3.7.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: destruct a; only 1: trivial; only 1: now destruct Z.even; only 1: now destruct Z.even).	4.80898094177	1592
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	0.1.0.0.1.3.0.0.4.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: split; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: auto; only 1: intros Hab; only 1: now apply Z.mod_divide; only 1: auto).	7.94124794006	2225
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.binary_value	40	32.4	search with cache (only 1: intros p H; only 1: constructor).	1.77806615829	4650
Coq.ZArith.Zdigits.VALUE_OF_BOOLEAN_VECTORS.two_compl_value	40	1.4.12	search with cache (only 1: intros a0; only 1: intros _; only 1: exact 0%Z).	0.537412881851	627
Coq.ZArith.Zdigits.ENCODING_VALUE.Zmod2_twice	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_binary	40
Coq.ZArith.Zdigits.ENCODING_VALUE.Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_Sn	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.0447709560394	16
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.binary_value_pos	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.two_compl_value_Sn	40	0.1	search with cache (only 1: intros a b Ha; only 1: trivial).	0.0208568572998	3
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_binary_Sn_z	40	0	search with cache (only 1: auto).	0.0115151405334	1
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_div2_value	40	4.0.0.0.0.0.0.0.0.0.0.9.6	search with cache (only 1: intros; only 1: destruct z as [| p| p]; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: now rewrite Z.mul_comm).	21.4602091312	10088
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Pdiv2	40	0.7.3.11.4.1.1.12	search with cache (only 1: intros n Hn; only 1: destruct n; only 1: auto; only 1: set (y := Z.pred (Z.pos p)); only 1: red; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q; only 1: auto).	13.6335959435	18361
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Z_to_two_compl_Sn_z	40	0.0.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.0188279151917	3
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zeven_bit_value	40	1.1.3.8	search with cache (only 1: intros n; only 1: boolify_even_odd; only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	1.12359309196	779
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zodd_bit_value	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Z_BRIC_A_BRAC.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.COHERENT_VALUE.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.COHERENT_VALUE.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.COHERENT_VALUE.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.1.0.0.1.0.6.6	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: trivial; only 1: simpl; only 1: trivial).	1.23181390762	870
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	0.1.2.77	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	5.7579100132	12757
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	search with cache (only 1: now destruct n).	0.0213389396667	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0.2	search with cache (only 1: simpl; only 1: now destruct n).	0.0274858474731	4
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.2.0.0.0.0.6.0.39	search with cache (only 1: revert n; only 1: intros q; only 1: destruct q; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	7.44712400436	10071
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	0.1	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0258150100708	3
Coq.ZArith.BinInt.Z.two_succ	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0249118804932	2
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.0217728614807	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.024246931076	2
Coq.ZArith.BinInt.Z.opp_succ	40
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0275299549103	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.0210769176483	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.0206379890442	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40	2.4.1	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.114773988724	38
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40	3.3.3.1.4.14	search with cache (only 1: symmetry; only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: rewrite even_spec; only 1: now split).	24.7489569187	14367
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.2.1.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: now split; only 1: apply iff_refl; only 1: now split).	0.0433430671692	8
Coq.ZArith.BinInt.Z.compare_le_iff	40	1	search with cache (only 1: reflexivity).	0.133633852005	36
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40	2.0.0.4.0	search with cache (only 1: unfold le, max; only 1: case N.compare_spec; only 1: trivial; only 1: auto; only 1: now destruct 2).	0.947670936584	273
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.2.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: intuition).	0.199579000473	47
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	2.15	search with cache (only 1: intros q; only 1: now destruct n).	3.42706799507	1348
Coq.ZArith.BinInt.Z.abs_neq	40	1.1.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0466108322144	7
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.8.0	search with cache (only 1: intros; only 1: destruct n; only 1: reflexivity; only 1: destr_eq H; only 1: destr_eq H).	0.471487998962	132
Coq.ZArith.BinInt.Z.sgn_pos	40	3.0	search with cache (only 1: intros; only 1: now destruct n).	0.0842728614807	5
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.029061794281	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0186789035797	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.2.2.1.2.0	search with cache (only 1: destruct m as [| m| m]; only 1: intros; only 1: now nzsimpl; only 1: intros H; only 1: destr_eq H; only 1: now destruct 1 || intros _).	1.99491000175	485
Coq.ZArith.BinInt.Z.pow_pos_fold	40	1	search with cache (only 1: trivial).	0.0205419063568	2
Coq.ZArith.BinInt.Z.square_spec	40	0.0.6.0.0.0.0.0.71	search with cache (only 1: induction n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec; only 1: simpl; only 1: f_equal; only 1: apply Pos.square_spec).	5.55739283562	5904
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	search with cache (only 1: now destruct n).	0.0594239234924	11
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40	0.0.0.0.0.1.0.1	search with cache (only 1: destruct n; only 1: now nzsimpl; only 1: simpl; only 1: unfold N.sqrtrem, N.sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r; only 1: simpl; only 1: trivial).	0.197833061218	10
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.0220968723297	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0267128944397	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.0.1.0.0.4.1	search with cache (only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: trivial using pos_sub_opp).	20.326196909	2949
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.0222311019897	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.0.0.0	search with cache (only 1: intros Hb; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0560111999512	5
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40	5.0.11.22	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro q; only 1: trivial).	37.9188740253	30084
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40	0.1.1.0.0.0.0	search with cache (only 1: rewrite <- ggcd_gcd; only 1: generalize (ggcd_correct_divisors a b); only 1: destruct ggcd as (g, (aa, bb)); only 1: simpl; only 1: intros (_, H); only 1: exists bb; only 1: now rewrite mul_comm).	0.131365060806	22
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40	0.1.1.0.0.1.0.0.0.0.0.0.3	search with cache (only 1: destruct a as [| [a| a| ]], n as [| n]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: easy; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	9.17300796509	3325
Coq.ZArith.BinInt.Z.testbit_of_N'	40
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.1.0.0.1.5	search with cache (only 1: destruct n; only 1: intros _; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: simpl; only 1: now destruct 1).	3.46025800705	1489
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	0	search with cache (only 1: trivial).	0.0222971439362	1
Coq.ZArith.BinInt.Z.testbit_0_l	40	7.109	search with cache (only 1: compute; only 1: now destruct n).	4.53821992874	7715
Coq.ZArith.BinInt.Z.testbit_neg_r	40	1.0.0.1.5.1.3.0.13.11	search with cache (only 1: rewrite <- (add_0_l 0); only 1: destruct n as [| p| p]; only 1: intro Hn; only 1: simpl; only 1: easy; only 1: intros Hb; only 1: now discriminate Hb || clear Hb; only 1: intro Hn; only 1: unfold testbit; only 1: trivial).	7.3999209404	6326
Coq.ZArith.BinInt.Z.testbit_odd_0	40	5.0.3.2.0.0.1.16.2	search with cache (only 1: simpl; only 1: induction a as [a IHa| a IHa| ]; only 1: now nzsimpl; only 1: now destruct a; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: congruence; only 1: now destruct p).	8.08741307259	5668
Coq.ZArith.BinInt.Z.testbit_even_0	40	2.4	search with cache (only 1: simpl; only 1: now destruct a as [| [| | ]| ]).	0.0338869094849	8
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40	13.3	search with cache (only 1: unfold lt, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	4.33590602875	2302
Coq.ZArith.BinInt.Z.gt_lt	40	1	search with cache (only 1: apply N.gt_lt_iff).	0.0148849487305	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0138077735901	1
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	4.0.0	search with cache (only 1: unfold le, ge; only 1: rewrite (compare_antisym n m); only 1: now destruct compare).	0.126284837723	14
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0182120800018	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40
Coq.ZArith.BinInt.Z.geb_le	40
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	1	search with cache (only 1: apply add_cancel_l).	0.0307679176331	2
Coq.ZArith.BinInt.Z.mul_reg_l	40	1	search with cache (only 1: apply mul_cancel_l).	0.02330493927	2
Coq.ZArith.BinInt.Z.mul_reg_r	40	0.1	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0299501419067	3
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	3	search with cache (only 1: now nzsimpl').	0.172523021698	4
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.2.9.11	search with cache (only 1: symmetry; only 1: apply eq_true_iff_eq; only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: intuition).	2.45021390915	1793
Coq.ZArith.BinInt.Pos2Z.id	40	3	search with cache (only 1: split).	0.254337787628	78
Coq.ZArith.BinInt.Pos2Z.inj	40	0	search with cache (only 1: congruence).	0.025050163269	1
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0447020530701	3
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1.4.1	search with cache (only 1: induction p as [| p IHp] using Pos.peano_ind; only 1: Z.order'; only 1: intuition Z.order).	0.0741591453552	11
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	9	search with cache (only 1: now Z.nzsimpl').	0.0675699710846	11
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: easy).	0.0201671123505	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0336239337921	2
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0269501209259	2
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	1.0.7	search with cache (only 1: simpl; only 1: f_equal; only 1: now destruct p).	0.400393009186	68
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0	search with cache (only 1: reflexivity).	0.0204429626465	1
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	2.0.1	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct p).	0.174679994583	48
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.0210490226746	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0.10.7.10.7	search with cache (only 1: revert q; only 1: intro n; only 1: Z.bitwise; only 1: f_equal; only 1: now apply Pos.iter_swap_gen).	37.0107650757	24283
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0235390663147	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0.1	search with cache (only 1: simpl; only 1: easy).	0.0277972221375	3
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	2.5.0	search with cache (only 1: revert q; only 1: intros H; only 1: trivial).	0.545966148376	100
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.0214929580688	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	6.0.0	search with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: apply eq_true_iff_eq; only 1: reflexivity).	0.0363109111786	9
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.0	search with cache (only 1: revert q; only 1: intros a; only 1: reflexivity).	0.0321938991547	3
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	search with cache (only 1: reflexivity).	0.0458128452301	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	3	search with cache (only 1: reflexivity).	0.0461020469666	4
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	0.0.0.0.0.1.0.1.1	search with cache (only 1: simpl; only 1: destruct n as [| n| n]; only 1: now destruct 1 || intros _; only 1: simpl; only 1: now destruct a; only 1: now destruct 1 || intros _; only 1: unfold Z.testbit; only 1: f_equal; only 1: now destruct 1 || intros _).	0.577498912811	225
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: congruence).	0.0212588310242	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.045606136322	4
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.0210227966309	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0442850589752	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	2	search with cache (only 1: now split).	0.0206398963928	3
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	4	search with cache (only 1: easy).	0.0292520523071	5
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.0230340957642	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.0264301300049	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	2	search with cache (only 1: now f_equal).	0.0319662094116	3
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.0229649543762	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	3.0	search with cache (only 1: intros; only 1: now auto).	0.0272281169891	5
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: trivial).	0.0427849292755	4
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.0246419906616	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	1.0	search with cache (only 1: simpl; only 1: trivial).	0.0289509296417	3
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.0194070339203	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.0203280448914	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	2	search with cache (only 1: split).	0.0210540294647	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.0230541229248	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.0231850147247	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	1	search with cache (only 1: trivial).	0.0212891101837	2
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.0215082168579	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.0195019245148	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	0.1.0.2.1.0	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: now destruct a as [| [| | ]| ]; only 1: simpl; only 1: now destruct n; only 1: now destruct Hn).	0.118058204651	20
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.0254948139191	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: reflexivity).	0.0219509601593	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	2.3.0.3.0	search with cache (only 1: destruct x; only 1: easy; only 1: now destruct 1; only 1: intros H; only 1: easy).	0.833312988281	232
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0347461700439	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.3.7.3.7.1	search with cache (only 1: destruct x; only 1: intros H; only 1: easy; only 1: now destruct p; only 1: intros H; only 1: easy).	7.77173113823	4103
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0800030231476	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.2	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.152309894562	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0881161689758	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0913870334625	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0876648426056	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	1.0.0.3.1	search with cache (only 1: destruct x; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy).	0.151833772659	25
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.544589042664	74
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.6	search with cache (only 1: intros x y; only 1: congruence).	0.175195932388	46
Coq.ZArith.BinInt.ZL0	40	6	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0947649478912	7
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	5.2.0	search with cache (only 1: change 2 with (1 + 1); only 1: simpl; only 1: now Z.nzsimpl').	0.188122987747	18
Coq.ZArith.BinInt.Z_eq_mult	40	6.6.5	search with cache (only 1: intros EQ; only 1: rewrite EQ; only 1: reflexivity).	4.61586999893	1180
Coq.ZArith.Zcomplements.floor_gt0	40	0	search with cache (only 1: easy).	0.0148909091949	1
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	1.2.1.0.0.1	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.320816040039	73
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil	40	0	search with cache (only 1: firstorder).	0.00849103927612	1
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_properties.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40	58	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	4.36986017227	5182
Coq.ZArith.Zeven.Zodd_bool_iff	40	61	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	3.18893504143	6442
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.34	search with cache (only 1: destruct n; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	7.36115479469	4123
Coq.ZArith.Zeven.Zeven_not_Zodd	40	8.5.4.7.0.5	search with cache (only 1: intros NEQ; only 1: destruct n as [| p| p]; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: now destruct p).	7.13058018684	6541
Coq.ZArith.Zeven.Zodd_not_Zeven	40	1.0.0.2.0.0.2.3.3.0.1.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H; only 1: now destruct p; only 1: destruct p; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: tauto; only 1: easy).	37.5202021599	21227
Coq.ZArith.Zeven.Zeven_Sn	40	5.5.0	search with cache (only 1: boolify_even_odd; only 1: intros EQ; only 1: now destruct n as [| [| | ]| [| | ]]).	0.950397968292	359
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40	6.5.0	search with cache (only 1: boolify_even_odd; only 1: intuition; only 1: now destruct n as [| [| | ]| [| | ]]).	0.558619976044	176
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0380852222443	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	18.2615199089	3567
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	2.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.1020860672	7
Coq.ZArith.Zeven.Zodd_quot2	40	0.4	search with cache (only 1: simpl; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	1.23645806313	179
Coq.ZArith.Zeven.Zodd_quot2_neg	40	1.0.0.0.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: rewrite Hn'; only 1: now destruct n as [| [| | ]| [| | ]]).	0.349745035172	29
Coq.ZArith.Zeven.Zquot2_opp	40	2.2.3.0.1.18	search with cache (only 1: destruct n; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	6.86265492439	2762
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.0	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0321469306946	3
Coq.ZArith.Zeven.Zodd_ex	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.0659430027008	5
Coq.ZArith.Zeven.Zeven_2p	40	2.3.0.0.10.12	search with cache (only 1: Z.nzsimpl'; only 1: induction p as [p IHp| p IHp| ]; only 1: now Z.nzsimpl; only 1: now destruct p; only 1: simpl; only 1: now destruct p).	10.516906023	4987
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	1.0.0.0.0.0.1.0.1.1.1.3.1.17	search with cache (only 1: simpl; only 1: boolify_even_odd; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	7.66184210777	2607
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0865020751953	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0868849754333	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0108389854431	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00999212265015	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00837206840515	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.3.0.3.2	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: intros (c, Hc); only 1: subst; only 1: apply Z.mod_mul; only 1: auto).	1.70293807983	1174
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	13.6	search with cache (only 1: intros H; only 1: Z.Private_Tac.order).	10.9396028519	5809
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40	1.1.0.26.4.0	search with cache (only 1: intros Hb H; only 1: rewrite Z.div_exact; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: Z.order; only 1: Z.order).	23.2364399433	31073
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40
Coq.ZArith.Znumtheory.Zis_gcd_1	40	1.1.14.16	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	2.24830198288	1838
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	1.12	search with cache (only 1: intros q; only 1: now Z.nzsimpl').	0.136384010315	86
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.036945104599	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.1.0.0.4.19.0	search with cache (only 1: induction 1; only 1: inversion H; only 1: subst; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	19.4313549995	10056
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid_rec	40
Coq.ZArith.Znumtheory.extended_euclid_algorithm.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0370030403137	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0	search with cache (only 1: firstorder).	0.0575180053711	1
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	1.0.2.1.18	search with cache (only 1: split; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl; only 1: auto with zarith).	2.28355288506	1756
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	0.4.0.2.4.17	search with cache (only 1: destruct a as [| a| a]; only 1: now split; only 1: intros x (xa, H5) (xb, H6); only 1: auto; only 1: intros n m (Hm, H); only 1: easy).	21.0939400196	13057
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	59	search with cache (only 1: now destruct 1).	1.40775895119	2420
Coq.ZArith.Znumtheory.not_prime_1	40	95	search with cache (only 1: now destruct 1).	13.4779851437	20792
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	0.4.7	search with cache (only 1: intros a b Ha H; only 1: apply Z.gcd_greatest; only 1: auto with zarith).	1.03654003143	462
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40	0.0.5.0.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros a b n **; only 1: pose proof (Zgcd_is_gcd a b) as F; only 1: inversion F as [F1 F2 F3]; only 1: pattern b at 2; only 1: rewrite (Zdivide_Zdiv_eq (Z.gcd a b) b); only 1: repeat rewrite Z.mul_assoc; only 1: f_equal; only 1: rewrite Z.mul_comm; only 1: rewrite <- Zdivide_Zdiv_eq; only 1: f_equal; only 1: auto; only 1: intuition; only 1: auto; only 1: auto).	29.5394639969	8811
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	5.0	search with cache (only 1: intro n; only 1: reflexivity).	0.13774895668	18
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0426449775696	5
Coq.ZArith.Zdiv.Zdiv_0_l	40	2.0	search with cache (only 1: intro n; only 1: trivial).	0.0245878696442	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	search with cache (only 1: intros a; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0424110889435	6
Coq.ZArith.Zdiv.Zmod_1_r	40	0.5.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order).	0.130955934525	25
Coq.ZArith.Zdiv.Zdiv_1_r	40	0.6.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: Z.nzsimpl; only 1: Z.order').	0.121208906174	20
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.1.1.0.1	search with cache (only 1: intros a b; only 1: Z.swap_greater; only 1: intros; only 1: apply Z.div_pos; only 1: auto; only 1: auto).	0.11014509201	24
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros a b c Hc Hab; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0428409576416	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.0.2	search with cache (only 1: intros a b Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.190495014191	24
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0348899364471	4
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	4.3.0.1	search with cache (only 1: intros n m p; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: unfold Z.sub; only 1: reflexivity).	0.370969057083	160
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0384228229523	3
Coq.ZArith.Zdiv.EqualityModulo.eqm_refl	40	15	search with cache (only 1: auto with relations).	0.105068922043	169
Coq.ZArith.Zdiv.EqualityModulo.eqm_sym	40	6	search with cache (only 1: auto with relations).	0.0727760791779	31
Coq.ZArith.Zdiv.EqualityModulo.eqm_trans	40	0.0.15	search with cache (only 1: unfold eqm; only 1: intros a b **; only 1: Z.order).	5.13137292862	1922
Coq.ZArith.Zdiv.EqualityModulo.eqm_setoid	40
Coq.ZArith.Zdiv.EqualityModulo.Zplus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zminus_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmult_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zopp_eqm	40
Coq.ZArith.Zdiv.EqualityModulo.Zmod_eqm	40	0.0.18	search with cache (only 1: fix le_div2 1; only 1: intro q; only 1: trivial).	1.21309494972	842
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.3.4.1	search with cache (only 1: intros; only 1: symmetry; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.326025009155	114
Coq.ZArith.Zdiv.Zeven_mod	40	0.1.0.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd; only 1: rewrite <- Z.negb_odd; only 1: now destruct Z.odd).	0.0418429374695	5
Coq.ZArith.Zdiv.Z_mod_same	40	0.1.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: zero_or_not a; only 1: apply Z.mod_same; only 1: auto).	0.141751050949	22
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.2.1	search with cache (only 1: intros a b c **; only 1: zero_or_not c; only 1: apply Z.mod_add; only 1: auto).	0.165142059326	28
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.1.1	search with cache (only 1: intros a b; only 1: intros Hb; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	0.103270769119	23
Coq.ZArith.Zdiv.Z_div_exact_2	40	2.0.2.13	search with cache (only 1: intros i j Hi E; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	10.6658899784	4318
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.2	search with cache (only 1: intros a b Hb; only 1: apply Z.mod_opp_l_z; only 1: now intros ->).	0.273018836975	34
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0858490467072	3
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0094850063324	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	0.0.0.1.0.12.4.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: destruct b as [| b| b]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros H; only 1: easy).	1.73053812981	2484
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40	0.0.0.4.1.0.2.3	search with cache (only 1: destruct x; only 1: left; only 1: now split; only 1: now left; only 1: right; only 1: split; only 1: easy; only 1: auto).	1.1946618557	993
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4.3	search with cache (only 1: intros H; only 1: auto).	0.0130620002747	9
Coq.ZArith.Int.Z_as_Int.i2z_0	40	0.5	search with cache (only 1: bitwise as m ?; only 1: trivial).	0.0181879997253	7
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00854897499084	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.00939893722534	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00791621208191	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	8	search with cache (only 1: now Z.nzsimpl).	1.2246658802	126
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0.1.0.2	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: now Z.nzsimpl).	0.192817926407	15
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	5	search with cache (only 1: trivial).	0.00905704498291	6
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.0093879699707	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00807595252991	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	3	search with cache (only 1: trivial).	0.0098340511322	4
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00900816917419	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00949120521545	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	7.0	search with cache (only 1: symmetry; only 1: trivial).	0.0216901302338	18
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0124981403351	2
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	0.0.2.2.1.2	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: now destruct 1 || intros _; only 1: simpl; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1 || intros _).	0.561091899872	235
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.Powers_of_2.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.00818300247192	1
Coq.ZArith.Zpower.Powers_of_2.shift_pos_equiv	40	3	search with cache (only 1: auto).	0.00805687904358	4
Coq.ZArith.Zpower.Powers_of_2.shift_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_equiv	40	0.1.0.1.1.14.27	search with cache (only 1: Z.nzsimpl'; only 1: exfalso; only 1: apply (Nat.lt_irrefl (S n)); only 1: constructor; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	9.16265797615	4365
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_equiv	40	5.64	search with cache (only 1: Z.nzsimpl'; only 1: now apply Pos.iter_swap_gen).	2.7965798378	5512
Coq.ZArith.Zpower.Powers_of_2.two_p_equiv	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_S	40	1	search with cache (only 1: reflexivity).	0.00971794128418	2
Coq.ZArith.Zpower.Powers_of_2.shift_nat_plus	40	2.0.0.0.0.2.4.2	search with cache (only 1: symmetry; only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: now Nat.nzsimpl; only 1: intro m; only 1: simpl; only 1: now rewrite IHn).	14.2884759903	5383
Coq.ZArith.Zpower.Powers_of_2.shift_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_nat_correct	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_nat	40	0.0.0.52	search with cache (only 1: destruct Pos.ggcd as (g, (aa, bb)); only 1: auto; only 1: auto; only 1: apply Pos2Nat.inj_iter).	5.50131893158	11170
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_nat	40
Coq.ZArith.Zpower.Powers_of_2.shift_pos_correct	40
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_correct	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0113360881805	1
Coq.ZArith.Zpower.Powers_of_2.two_power_pos_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_is_exp	40
Coq.ZArith.Zpower.Powers_of_2.two_p_gt_ZERO	40	1.1.3.6.13.0	search with cache (only 1: Z.swap_greater; only 1: destruct x; only 1: split; only 1: now destruct 1 || intros _; only 1: reflexivity; only 1: now destruct 1).	2.78395104408	2749
Coq.ZArith.Zpower.Powers_of_2.two_p_S	40
Coq.ZArith.Zpower.Powers_of_2.two_p_pred	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_correct	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_ok	40
Coq.ZArith.Zpower.power_div_with_rest.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.wf_proof.Zwf_well_founded	40
Coq.ZArith.Zwf.wf_proof_up.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	1	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0128920078278	2
Coq.ZArith.auxiliary.Zle_left	40
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00883793830872	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.0103080272675	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.00834512710571	2
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.019061088562	5
Coq.ZArith.auxiliary.Zgt_left	40	0.1.1.2.1	search with cache (only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: intuition; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.497550964355	181
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0927579402924	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0228769779205	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	13.5.0.0.0.5.5.1	search with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: case Pos.compare_spec; only 1: congruence; only 1: intros; only 1: auto; only 1: intros H; only 1: now destruct p).	22.9768879414	17144
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	16	search with cache (only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	7.85819101334	3987
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.2.0.0.66	search with cache (only 1: destruct a as [| a| a]; only 1: now Z.nzsimpl; only 1: simpl Zgcd_bound in *; only 1: now Nat.nzsimpl'; only 1: trivial).	5.64782214165	6980
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	0.0.0.0.0.3.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: intro r; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	1.24028587341	244
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40	7.0.4.1.15.1.2	search with cache (only 1: left; only 1: Z.swap_greater; only 1: nzinduct n m; only 1: Z.order; only 1: fix even_spec 1; only 1: intros; only 1: auto).	9.19201803207	4690
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	0.4	search with cache (only 1: intros; only 1: Z.order).	0.400264978409	54
Coq.ZArith.Zorder.Zlt_not_le	40	3	search with cache (only 1: intuition Z.order).	0.260807991028	32
Coq.ZArith.Zorder.Zle_not_gt	40	0.5	search with cache (only 1: unfold Z.le, Z.min; only 1: trivial).	0.222336053848	35
Coq.ZArith.Zorder.Zgt_not_le	40	1.7	search with cache (only 1: intro H; only 1: auto).	0.195784091949	33
Coq.ZArith.Zorder.Znot_ge_lt	40	4.6	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.706934928894	126
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0597550868988	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.0279130935669	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0618607997894	4
Coq.ZArith.Zorder.not_Zne	40
Coq.ZArith.Zorder.Zgt_asym	40	2.2.1	search with cache (only 1: Z.swap_greater; only 1: intro H; only 1: Z.order).	0.405786991119	44
Coq.ZArith.Zorder.Zgt_irrefl	40	0	search with cache (only 1: now Z.nzsimpl').	0.0617249011993	1
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.758373975754	40
Coq.ZArith.Zorder.Zle_gt_trans	40	0.1.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.466622829437	29
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0722188949585	2
Coq.ZArith.Zorder.Zge_trans	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.1228120327	4
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40	0.0.4.3.4	search with cache (only 1: unfold Z.lt; only 1: intro H; only 1: Ltac.reflexivity || destruct H; only 1: rewrite <- 2!Z.add_1_l; only 1: apply Z.add_compare_mono_l).	2.53360700607	584
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0784869194031	4
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0683300495148	2
Coq.ZArith.Zorder.Zsucc_le_reg	40
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.0287430286407	1
Coq.ZArith.Zorder.Zgt_succ	40	0.8	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_diag_r).	0.137579917908	14
Coq.ZArith.Zorder.Znot_le_succ	40	0.30	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.825288057327	519
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0330040454865	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.034038066864	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0531840324402	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.0351049900055	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0598299503326	2
Coq.ZArith.Zorder.Zle_succ_le	40	6.0.4.1.16.45	search with cache (only 1: now destruct 1 || intros _; only 1: nzinduct n m; only 1: Z.order; only 1: fix even_spec 1; only 1: intros; only 1: auto).	34.6843678951	22743
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.0357339382172	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.060870885849	3
Coq.ZArith.Zorder.Zle_neg_pos	40	0.1	search with cache (only 1: intros a ?; only 1: easy).	0.0537919998169	3
Coq.ZArith.Zorder.Zgt_pos_0	40	1.0	search with cache (only 1: intros; only 1: easy).	0.03773188591	3
Coq.ZArith.Zorder.Zle_0_pos	40	0.0	search with cache (only 1: intros n; only 1: easy).	0.0470979213715	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0391850471497	2
Coq.ZArith.Zorder.Zle_0_nat	40	32.0	search with cache (only 1: intros n; only 1: now destruct n).	4.07390093803	4267
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.0307838916779	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.0325541496277	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.0326189994812	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	search with cache (only 1: apply Z.add_le_mono_r).	0.0332798957825	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	1	search with cache (only 1: apply Z.add_lt_mono_l).	0.0822079181671	11
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	2	search with cache (only 1: apply Z.add_lt_mono_r).	0.0813140869141	11
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0666282176971	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0654637813568	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.5.0.0.1.0.1.22	search with cache (only 1: destruct p as [| p| p]; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r; only 1: Z.swap_greater; only 1: symmetry; only 1: discriminate).	8.22303104401	2605
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0553040504456	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0315749645233	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0326719284058	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0829269886017	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	0.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.260714054108	13
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	3.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0871360301971	6
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	5.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.22461104393	15
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0578398704529	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.0315020084381	1
Coq.ZArith.Zorder.Zmult_le_reg_r	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0609140396118	4
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0320971012115	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0907411575317	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.132546901703	2
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	8.3.4	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	0.933065891266	371
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.2.1.2.0.7	search with cache (only 1: destruct m as [| m| m]; only 1: Z.swap_greater; only 1: now repeat split; only 1: simpl; only 1: now destruct n; only 1: easy || now destruct y).	1.99295806885	747
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0604710578918	2
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.5.0.1.17	search with cache (only 1: destruct n as [| n| n]; only 1: easy || now destruct y; only 1: now destruct 1 || intros _; only 1: now destruct m; only 1: easy || now destruct y).	6.82224202156	3013
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0795831680298	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0316820144653	1
Coq.ZArith.Zbool.Zle_cases	40	0.0.1.4.1.1.1.5	search with cache (only 1: unfold Z.le, Z.min; only 1: intuition; only 1: unfold Z.lt, Z.gt; only 1: unfold Z.leb, Z.le; only 1: destruct (PeanoNat.Nat.compare n m); only 1: congruence; only 1: easy; only 1: trivial).	2.55841398239	1151
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	3.0.0.2	search with cache (only 1: case Z.leb_spec; only 1: intro H; only 1: now try Z.order'; only 1: now destruct n).	0.272068023682	28
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0.0.0.14.1.1	search with cache (only 1: unfold Z.geb, Z.leb; only 1: unfold Z.le, Z.max; only 1: case Z.compare; only 1: trivial; only 1: trivial; only 1: easy').	4.46259903908	1722
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	2	search with cache (only 1: now split).	0.0324528217316	3
Coq.ZArith.Zbool.Zone_min_pos	40	7.0	search with cache (only 1: intros Hn; only 1: now destruct n as [| [| | ]| [| | ]]).	0.190588951111	20
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.0.0.8.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: case Z.compare; only 1: easy'; only 1: easy'; only 1: easy').	0.955054044724	116
Coq.ZArith.Zbool.Zge_is_le_bool	40	2.0.10.0	search with cache (only 1: symmetry; only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: now destruct n).	4.74428200722	1157
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	3.2.10.10	search with cache (only 1: unfold Z.gtb, Z.ltb; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	20.108438015	8053
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0665800571442	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	5.59	search with cache (only 1: fix even_spec 1; only 1: auto).	8.70373511314	10211
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.0.0.0.0.2	search with cache (only 1: intro r; only 1: destruct r; only 1: auto with arith; only 1: auto; only 1: right; only 1: trivial).	0.0635800361633	16
Coq.ZArith.ZArith_dec.Zcompare_rect	40	7.0.2.0	search with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: intuition).	6.39637303352	1831
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0534358024597	5
Coq.ZArith.ZArith_dec.decidability.Z_lt_dec	40	19.46	search with cache (only 1: unfold Z.lt, Z.le; only 1: decide equality).	7.69137215614	13169
Coq.ZArith.ZArith_dec.decidability.Z_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_ge_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_le_gt_dec	40
Coq.ZArith.ZArith_dec.decidability.Z_gt_le_dec	40	0.0.2.0.1	search with cache (only 1: elim Z_le_dec; only 1: auto with arith; only 1: constructor; only 1: Z.swap_greater; only 1: now apply Z.nle_gt).	0.347981929779	42
Coq.ZArith.ZArith_dec.decidability.Z_ge_lt_dec	40	3.1.0.0.1	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: constructor; only 1: trivial).	0.0684549808502	15
Coq.ZArith.ZArith_dec.decidability.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	1.2.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: left; only 1: auto).	5.52157592773	1740
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.6.6	search with cache (only 1: intro H; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.823843002319	272
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: reflexivity).	0.00765991210938	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.1.1.2.1.0.4.0	search with cache (only 1: intros Hab; only 1: symmetry; only 1: destruct b as [| p| p]; only 1: simpl; only 1: easy; only 1: unfold Zpower_alt, Z.pow, Z.pow_pos; only 1: easy; only 1: easy).	0.596762895584	447
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl).	0.0397491455078	1
Coq.omega.OmegaLemmas.Zred_factor1	40	0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0148730278015	2
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	6	search with cache (only 1: now Z.nzsimpl).	0.515142917633	65
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.0381760597229	1
Coq.omega.OmegaLemmas.Zred_factor6	40	1.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now Z.nzsimpl; only 1: intro; only 1: Z.nzsimpl; only 1: now Z.nzsimpl).	0.128237962723	6
Coq.omega.OmegaLemmas.new_var	40	15.33	search with cache (only 1: intro n; only 1: now exists n).	3.87628316879	6994
Coq.omega.OmegaLemmas.OMEGA1	40	2.9	search with cache (only 1: intros Hn Hm; only 1: Z.order).	0.0419180393219	49
Coq.omega.OmegaLemmas.OMEGA2	40	2.0	search with cache (only 1: intros Hn Hm; only 1: Z.order_pos).	0.0219790935516	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	2.4.11	search with cache (only 1: intro EQ; only 1: intros ->; only 1: now Z.nzsimpl).	0.488614082336	310
Coq.omega.OmegaLemmas.OMEGA6	40	0.2.1.12	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	1.64768195152	399
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40	2.4.0.2	search with cache (only 1: destruct x; only 1: easy; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	0.363788127899	181
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.0176439285278	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0617611408234	3
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0259289741516	4
Coq.omega.OmegaLemmas.OMEGA16	40	6.9	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: Morphisms.f_equiv).	0.267263174057	129
Coq.omega.OmegaLemmas.OMEGA17	40	1.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0436339378357	3
Coq.omega.OmegaLemmas.OMEGA18	40	7.5.1.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: rewrite H1 in H; only 1: now try split).	0.699489116669	545
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.054408788681	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	8.9.4.0.30	search with cache (only 1: destruct x; only 1: intros EQ; only 1: auto; only 1: easy || now destruct y; only 1: easy || now destruct y).	11.2013568878	12695
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.1.2.4.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.695055961609	307
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.2.14.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.31617712975	1207
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Well_founded.Fix_F_eq	40	2.4.12	search with cache (only 1: intro p; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.61779999733	538
Coq.Program.Wf.Well_founded.Fix_F_inv	40
Coq.Program.Wf.Well_founded.Fix_eq	40
Coq.Program.Wf.Well_founded.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0996840000153	6
Coq.Program.Wf.Measure_well_founded.measure_wf	40
Coq.Program.Wf.Fix_rects.F_unfold	40	3.1	search with cache (only 1: rewrite <- Fix_F_eq; only 1: auto).	0.0286531448364	6
Coq.Program.Wf.Fix_rects.Fix_F_sub_rect	40	2.5.1.3.3.4	search with cache (only 1: intro x; only 1: induction (Rwf x); only 1: induction (Rwf x); only 1: intros; only 1: rewrite <- Init.Wf.Fix_F_eq; only 1: auto).	1.80010604858	1360
Coq.Program.Wf.Fix_rects.eq_Fix_F_sub	40	3.0.0	search with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.0474739074707	6
Coq.Program.Wf.Fix_rects.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.14.0.18	search with cache (only 1: intros A C h1 h2; only 1: intros [x y]; only 1: subst; only 1: Ltac.reflexivity).	2.51013803482	6629
Coq.Program.Equality.JMeq_eq_refl	40	2	search with cache (only 1: apply UIP).	0.00684404373169	3
Coq.Program.Equality.UIP_refl_refl	40	22	search with cache (only 1: apply UIP).	1.14525604248	2878
Coq.Program.Equality.inj_pairT2_refl	40	18	search with cache (only 1: apply UIP).	0.109433889389	145
Coq.Program.Equality.solution_left	40	2.2.3.0	search with cache (only 1: intro eq_rect_eq; only 1: intros y H; only 1: destruct H; only 1: auto).	0.111138105392	54
Coq.Program.Equality.solution_right	40	2.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.0105760097504	5
Coq.Program.Equality.deletion	40	5	search with cache (only 1: trivial).	0.00584983825684	6
Coq.Program.Equality.simplification_heq	40	1.23.10.1	search with cache (only 1: intros h1 h2; only 1: apply h1; only 1: subst; only 1: trivial).	0.738281965256	3182
Coq.Program.Equality.simplification_existT2	40	0.0.0.4.0	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.0212569236755	9
Coq.Program.Equality.simplification_existT1	40	0.13.2.4.12.32	search with cache (only 1: intro eq_dep_eq; only 1: intro H; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	6.31843900681	21642
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.086522102356	3
Coq.Program.Combinators.compose_id_left	40	0.0	search with cache (only 1: intros; only 1: apply (eta_expansion_dep f)).	0.0152978897095	2
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.014771938324	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros A B C Hl Hr; only 1: Ltac.reflexivity).	0.0167939662933	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0152719020844	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0154321193695	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.Perm.multiplicity_In	40	0.0.0.1.0.10.0.4	search with cache (only 1: intros l x; only 1: induction l as [| y l IHl]; only 1: easy; only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: auto with *; only 1: rewrite IHl; only 1: intuition).	20.9189388752	13415
Coq.Sorting.PermutEq.Perm.multiplicity_In_O	40
Coq.Sorting.PermutEq.Perm.multiplicity_In_S	40	0.0.0.0.0.0	search with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.047297000885	6
Coq.Sorting.PermutEq.Perm.multiplicity_NoDup	40
Coq.Sorting.PermutEq.Perm.NoDup_permut	40
Coq.Sorting.PermutEq.Perm.permut_In_In	40
Coq.Sorting.PermutEq.Perm.permut_cons_In	40
Coq.Sorting.PermutEq.Perm.permut_nil	40
Coq.Sorting.PermutEq.Perm.permutation_Permutation	40
Coq.Sorting.PermutEq.Perm.permut_length_1	40	23.36.13	search with cache (only 1: intros H; only 1: apply permut_length_1; only 1: intuition).	24.2385048866	52433
Coq.Sorting.PermutEq.Perm.permut_length_2	40
Coq.Sorting.PermutEq.Perm.permut_length	40
Coq.Sorting.PermutEq.Perm.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40	2.27	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.31146597862	2442
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation.Permutation_refl	40	0.1.0.4	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	0.0211670398712	9
Coq.Sorting.Permutation.Permutation.Permutation_refl'	40
Coq.Sorting.Permutation.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation.Permutation_trans	40	3.7	search with cache (only 1: intros a' y H H0; only 1: eauto).	0.279042005539	201
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: subst; only 1: auto).	0.021115064621	5
Coq.Sorting.Permutation.Permutation_properties.Permutation_in	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_head	40	1.0.0.3.0.0.3.1.2	search with cache (only 1: intros l l1 l2; only 1: revert l1 l2 l; only 1: intro l1; only 1: induction l as [| a l IHl]; only 1: intros H; only 1: auto; only 1: intros H; only 1: simpl; only 1: auto).	11.1520390511	4336
Coq.Sorting.Permutation.Permutation_properties.Permutation_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_add_inside	40	0.3	search with cache (only 1: intros x y l1 l2 Hin; only 1: now intros -> ->).	0.289368867874	60
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle	40	0.1	search with cache (only 1: intro l; only 1: intuition).	0.015074968338	3
Coq.Sorting.Permutation.Permutation_properties.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev	40	0.0.3.0.14.1.8.1	search with cache (only 1: intros; only 1: induction l as [| a l IH]; only 1: now simpl; only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: apply Permutation_cons_app; only 1: rewrite <- app_assoc; only 1: auto).	20.1042511463	10898
Coq.Sorting.Permutation.Permutation_properties.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length'	40	1.0.0.0.0.0.0.2.8.14	search with cache (only 1: intro l; only 1: intro n; only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	28.4415619373	14952
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall	40	4.5.0.20	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: rewrite !Forall_forall; only 1: eauto using Permutation_in).	5.64787912369	4356
Coq.Sorting.Permutation.Permutation_properties.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation	40
Coq.Sorting.Permutation.Permutation_properties.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_properties.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map'	40
Coq.Sorting.Permutation.Permutation_map.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_image	40
Coq.Sorting.Permutation.Permutation_map.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_map.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.Permutation_alt.adapt_injective	40
Coq.Sorting.Permutation.Permutation_alt.adapt_ok	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_alt.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_equiv	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_transp.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.Permut.list_contents_app	40
Coq.Sorting.PermutSetoid.Permut.permut_refl	40	17.2	search with cache (only 1: intros; only 1: split).	0.328499078751	447
Coq.Sorting.PermutSetoid.Permut.permut_sym	40	0.1.2	search with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).	0.0234699249268	6
Coq.Sorting.PermutSetoid.Permut.permut_trans	40	0.3.0.13.0	search with cache (only 1: unfold permutation, meq; only 1: intros x y Hin; only 1: intros; only 1: rewrite H; only 1: trivial).	2.6180369854	1807
Coq.Sorting.PermutSetoid.Permut.permut_cons_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_cons	40	0.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0286900997162	4
Coq.Sorting.PermutSetoid.Permut.permut_app	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_inside	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_add_cons_inside	40	0.0.21.1.0.0	search with cache (only 1: intros; only 1: replace (a :: l) with ([ ] ++ a :: l); only 1: apply permut_add_inside_eq; only 1: reflexivity; only 1: trivial; only 1: trivial).	24.5011031628	12228
Coq.Sorting.PermutSetoid.Permut.permut_middle	40
Coq.Sorting.PermutSetoid.Permut.permut_sym_app	40
Coq.Sorting.PermutSetoid.Permut.permut_rev	40
Coq.Sorting.PermutSetoid.Permut.permut_conv_inv	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv1	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_then	40
Coq.Sorting.PermutSetoid.Permut.permut_app_inv2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.0988998413086	8
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.Permut.permut_remove_hd	40	1.1.0.0.0.3.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: revert H; only 1: lia).	3.73627495766	824
Coq.Sorting.PermutSetoid.Permut.if_eqA_else	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_refl	40
Coq.Sorting.PermutSetoid.Permut.if_eqA	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.Permut.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.Permut.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.04430103302	5
Coq.Sorting.PermutSetoid.Permut.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.Permut.permut_InA_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_cons_InA	40
Coq.Sorting.PermutSetoid.Permut.permut_nil	40	0.0.0.2.0.0.1.0.1.3.6	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: induction l; only 1: simpl; only 1: trivial using permut_refl; only 1: simpl; only 1: intros; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: clear IHl; only 1: lia).	27.3181109428	13007
Coq.Sorting.PermutSetoid.Permut.permut_length_1	40
Coq.Sorting.PermutSetoid.Permut.permut_length_2	40
Coq.Sorting.PermutSetoid.Permut.permut_length	40
Coq.Sorting.PermutSetoid.Permut.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.Permut_map.permut_map	40
Coq.Sorting.PermutSetoid.Permut_permut.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.Permut_permut.permut_eqA	40	0.0.0.7.1.3.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: red; only 1: intro P; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive).	3.00981998444	1734
Coq.Sorting.PermutSetoid.Permut_permut.permutation_Permutation	40
Coq.Sorting.Sorted.defs.HdRel_inv	40	2.0	search with cache (only 1: inversion 1; only 1: auto).	0.0413339138031	4
Coq.Sorting.Sorted.defs.Sorted_inv	40	0.0.8	search with cache (only 1: intros x Hin; only 1: inversion 1; only 1: auto).	0.0957748889923	22
Coq.Sorting.Sorted.defs.Sorted_rect	40
Coq.Sorting.Sorted.defs.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.defs.StronglySorted_inv	40	0.0.5.1	search with cache (only 1: intro l; only 1: intros H; only 1: inversion_clear 1; only 1: eauto).	0.376590967178	67
Coq.Sorting.Sorted.defs.StronglySorted_rect	40
Coq.Sorting.Sorted.defs.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0686719417572	3
Coq.Sorting.Sorted.defs.StronglySorted_Sorted	40
Coq.Sorting.Sorted.defs.Sorted_extends	40
Coq.Sorting.Sorted.defs.Sorted_StronglySorted	40
Coq.Sorting.Heap.defs.leA_Tree_Leaf	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.0906341075897	4
Coq.Sorting.Heap.defs.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0745739936829	2
Coq.Sorting.Heap.defs.invert_heap	40	0.26.19.14	search with cache (only 1: intros H a; only 1: intros y; only 1: inversion_clear 1; only 1: auto with datatypes).	22.3270349503	18064
Coq.Sorting.Heap.defs.is_heap_rect	40
Coq.Sorting.Heap.defs.is_heap_rec	40	0.2.0.0.0.0.1.0.0.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	3.44981694221	647
Coq.Sorting.Heap.defs.low_trans	40	7.3.1.0.2	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: intros a G PG D PD PN; only 1: eauto with *).	2.48265695572	767
Coq.Sorting.Heap.defs.Equivalence_instance_0	40
Coq.Sorting.Heap.defs.Proper_instance_0	40	0.5.1.0.12	search with cache (only 1: intros l1 l2 e; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	1.33264803886	378
Coq.Sorting.Heap.defs.merge	40
Coq.Sorting.Heap.defs.insert	40
Coq.Sorting.Heap.defs.list_to_heap	40
Coq.Sorting.Heap.defs.heap_to_list	40
Coq.Sorting.Heap.defs.treesort	40	0.2.23	search with cache (only 1: unfold permutation, meq; only 1: fix merge0 1; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	1.41702604294	650
Coq.Sorting.CPermutation.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation.CPermutation_refl'	40	3.17.3.2	search with cache (only 1: intros l1; only 1: intros l H; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	3.8585691452	3463
Coq.Sorting.CPermutation.CPermutation.CPermutation_sym	40	2.0.0	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: split).	0.0364179611206	5
Coq.Sorting.CPermutation.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app	40	4.0	search with cache (only 1: intros l l' tl Hperm; only 1: eauto using Add_head, Add_app).	0.0392680168152	6
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_comm	40	2	search with cache (only 1: auto).	0.0211279392242	3
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_app_rot	40	1.0	search with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.0471081733704	11
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_properties.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40	2	search with cache (only 1: now intros ->).	0.132853984833	22
Coq.btauto.Algebra.Decidable_sound	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply -> Decidable_spec; only 1: assumption).	0.0222189426422	3
Coq.btauto.Algebra.Decidable_complete	40	0.0.0	search with cache (only 1: intros P H Hp; only 1: apply <- Decidable_spec; only 1: assumption).	0.0205590724945	3
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: tauto; only 1: tauto).	0.0354840755463	5
Coq.btauto.Algebra.Decidable_complete_alt	40	0.0.0	search with cache (only 1: intros P [wit spec] Hd Hc; only 1: simpl in *; only 1: intuition congruence).	0.0227749347687	3
Coq.btauto.Algebra.Computational.Decidable_PosEq_obligation_1	40	0.0.1.5	search with cache (only 1: rewrite Pos.eqb_eq; only 1: split; only 1: auto; only 1: auto).	0.93314409256	289
Coq.btauto.Algebra.Computational.Decidable_PosLt_obligation_1	40	0.0.0.14.0	search with cache (only 1: unfold Pos.ltb, Pos.lt; only 1: case Pos.compare_spec; only 1: easy'; only 1: easy'; only 1: easy').	0.713454008102	543
Coq.btauto.Algebra.Computational.Decidable_PosLe_obligation_1	40	5.1.5	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto).	1.49123811722	533
Coq.btauto.Algebra.Computational.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Computational.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Computational.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.Validity.valid_le_compat	40
Coq.btauto.Algebra.Validity.linear_le_compat	40	1.0.0.0.15.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: right; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	2.30865979195	2981
Coq.btauto.Algebra.Validity.linear_valid_incl	40
Coq.btauto.Algebra.Evaluation.eval_null_zero	40	0.5.2	search with cache (only 1: intros n m ?; only 1: inversion H; only 1: trivial).	0.0255711078644	10
Coq.btauto.Algebra.Evaluation.eval_extensional_eq_compat	40
Coq.btauto.Algebra.Evaluation.eval_suffix_compat	40
Coq.btauto.Algebra.Algebra.poly_add_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_eval_compat	40
Coq.btauto.Algebra.Reduce.reduce_aux_le_compat	40
Coq.btauto.Algebra.Reduce.linear_reduce_aux	40
Coq.btauto.Algebra.Reduce.linear_reduce	40
Coq.btauto.Reflect.Translation.poly_of_formula_eval_compat	40	3.23.0	search with cache (only 1: intro p; only 1: fix odd_spec 1; only 1: auto).	6.37179613113	7050
Coq.btauto.Reflect.Translation.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.Translation.poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.Completeness.list_nth_base	40	1.1	search with cache (only 1: intros n m Hn; only 1: intuition).	0.0170991420746	4
Coq.btauto.Reflect.Completeness.list_nth_succ	40
Coq.btauto.Reflect.Completeness.list_nth_nil	40
Coq.btauto.Reflect.Completeness.make_last_nth_1	40
Coq.btauto.Reflect.Completeness.make_last_nth_2	40
Coq.btauto.Reflect.Completeness.list_replace_nth_1	40
Coq.btauto.Reflect.Completeness.list_replace_nth_2	40
Coq.btauto.Reflect.Completeness.boolean_witness_nonzero	40
Coq.btauto.Reflect.Completeness.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Well_founded.Acc_inv	40	4.1.20	search with cache (only 1: intro H; only 1: destruct 1; only 1: assumption).	0.339156866074	842
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0176248550415	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0	search with cache (only 1: exact (fun P : A -> Set => well_founded_induction_type P)).	0.00813221931458	1
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	15.0.5.0.4.3.2.0	search with cache (only 1: intro z; only 1: intro p; only 1: destruct p; only 1: intros A P H; only 1: auto; only 1: intro H; only 1: apply False_rec; only 1: auto).	7.37502503395	18006
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0291609764099	6
Coq.Init.Peano.pred_Sn	40	2.0.0.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: split; only 1: simpl; only 1: split).	0.033576965332	12
Coq.Init.Peano.not_eq_S	40	3.3.0	search with cache (only 1: red; only 1: intro A; only 1: auto).	0.0519540309906	45
Coq.Init.Peano.O_S	40	4.1	search with cache (only 1: intro n; only 1: discriminate).	0.0274138450623	22
Coq.Init.Peano.n_Sn	40	5.1.0.2	search with cache (only 1: intro n; only 1: induction n; only 1: discriminate; only 1: auto).	0.0806720256805	92
Coq.Init.Peano.plus_n_O	40	0.2.0.0.1	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.034353017807	15
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0187790393829	6
Coq.Init.Peano.plus_n_Sm	40	0.0.0.4.3	search with cache (only 1: intro n; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.078547000885	59
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0257828235626	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0.0	search with cache (only 1: intro n; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0225670337677	7
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.2.1	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0128190517426	7
Coq.Init.Peano.le_n_S	40	0.0.0	search with cache (only 1: induction 1 as [| m _]; only 1: auto; only 1: auto).	0.0122301578522	3
Coq.Init.Peano.nat_case	40	1.1.7.7	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: auto).	0.399533987045	769
Coq.Init.Peano.nat_double_ind	40	3.1.9.0.0.8.3	search with cache (only 1: intro H; only 1: induction n; only 1: intro n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	6.88020086288	13083
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.0.2.0.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	20.9798409939	11759
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	22.8669641018	14419
Coq.Init.Peano.nat_rect_succ_r	40	4.3.0.0.0.8	search with cache (only 1: induction n as [| p H]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct H; only 1: trivial).	2.03830695152	3247
Coq.Init.Peano.nat_rect_plus	40	0.1.1.3.0.4	search with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	2.46036195755	1714
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	0.6.28.9	search with cache (only 1: intro; only 1: intro A; only 1: destruct 2; only 1: assumption).	0.586144208908	2921
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0167670249939	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.0185809135437	3
Coq.Init.Datatypes.surjective_pairing	40	0.14	search with cache (only 1: destruct p; only 1: reflexivity).	0.0490980148315	91
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0.0	search with cache (only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	0.0266859531403	3
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.1.1.1.0.1.1.1.0.5.2	search with cache (only 1: intro H; only 1: destruct c, c'; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity || destruct H).	11.0570049286	20724
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00426602363586	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	1.1.0.0.3	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00826597213745	14
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.4	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00552988052368	13
Coq.Init.Logic.and_iff_compat_l	40	1.0.1.0.1.0.1.0.0.5	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0853068828583	718
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0649631023407	290
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.515573978424	2316
Coq.Init.Logic.imp_iff_compat_l	40	9.9.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.116866111755	757
Coq.Init.Logic.imp_iff_compat_r	40	2.0.3.0.2.1.2.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.315338850021	1285
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00799012184143	4
Coq.Init.Logic.neg_false	40	1.1.11.0.0.0	search with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.23505616188	1221
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply HypL; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply HypR; only 1: assumption; only 1: apply Hr; only 1: assumption).	37.3266339302	63271
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0935101509094	92
Coq.Init.Logic.and_assoc	40
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.347435951233	639
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.0	search with cache (only 1: intros; only 1: assumption).	0.00689911842346	2
Coq.Init.Logic.iff_to_and	40	1.0.0.0.0.1.3	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intro H; only 1: assumption).	0.186293125153	223
Coq.Init.Logic.universal_quantification.inst	40	1.3	search with cache (only 1: intro H1; only 1: auto).	0.00858092308044	6
Coq.Init.Logic.universal_quantification.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00703310966492	2
Coq.Init.Logic.Logic_lemmas.absurd	40	0.7.2.1	search with cache (only 1: intro A; only 1: intros H ?; only 1: destruct 1; only 1: assumption).	0.10285782814	292
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	1.2	search with cache (only 1: destruct 1; only 1: trivial).	0.0100121498108	5
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00957202911377	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00838112831116	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00811195373535	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	26.1	search with cache (only 1: destruct 2; only 1: auto).	0.34401011467	1346
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	1.1.1	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.00990986824036	6
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00954604148865	3
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00968503952026	3
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.0112471580505	3
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.1.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0156080722809	4
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0104019641876	2
Coq.Init.Logic.rew_opp_l	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0106821060181	2
Coq.Init.Logic.f_equal2	40	0.2.0	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0114531517029	5
Coq.Init.Logic.f_equal3	40	0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0137729644775	4
Coq.Init.Logic.f_equal4	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0174610614777	5
Coq.Init.Logic.f_equal5	40	0.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0235929489136	6
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0103960037231	2
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0105249881744	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0104598999023	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0100021362305	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0110900402069	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.0143129825592	3
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0120589733124	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.0142140388489	2
Coq.Init.Logic.rew_swap	40	0.0	search with cache (only 1: destruct H, 1; only 1: reflexivity).	0.0115809440613	2
Coq.Init.Logic.rew_compose	40	2.0	search with cache (only 1: destruct H2; only 1: reflexivity).	0.0126020908356	4
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.00897312164307	1
Coq.Init.Logic.eq_trans_map_distr	40	1.5.5.1	search with cache (only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.329982042313	319
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.0120739936829	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.1.0	search with cache (only 1: destruct e'; only 1: destruct e; only 1: reflexivity).	0.0171298980713	4
Coq.Init.Logic.eq_trans_rew_distr	40	0.2	search with cache (only 1: destruct e'; only 1: reflexivity).	0.0126311779022	4
Coq.Init.Logic.rew_const	40	0.4	search with cache (only 1: destruct e; only 1: reflexivity).	0.0115671157837	6
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	4.11	search with cache (only 1: intros A B []; only 1: auto).	0.228345155716	626
Coq.Init.Logic.inhabited_covariant	40	0.2	search with cache (only 1: destruct 2; only 1: auto).	0.0115330219269	21
Coq.Init.Logic.eq_stepl	40	0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0160808563232	18
Coq.Init.Logic.iff_stepl	40	0.0.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.012305021286	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0320930480957	20
Coq.Init.Logic.ex2.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0146720409393	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0107438564301	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.010901927948	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.0104038715363	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0187599658966	5
Coq.Init.Logic_Type.identity_ind_r	40	1.8.1	search with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.0941610336304	159
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.013710975647	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.013650894165	3
Coq.Init.Specif.sigT_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0232818126678	2
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0253300666809	2
Coq.Init.Specif.sigT2_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.026703119278	3
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0272700786591	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.7.6	search with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.420156002045	431
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.0.66.49	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	5.63485789299	35589
Coq.Init.Specif.sigT.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0416679382324	4
Coq.Init.Specif.sigT.eq_sigT_uncurried	40
Coq.Init.Specif.sigT.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0382661819458	3
Coq.Init.Specif.sigT.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0382590293884	2
Coq.Init.Specif.sigT.eq_existT_curried_trans	40
Coq.Init.Specif.sigT.eq_existT_curried_congr	40	0.9.22	search with cache (only 1: destruct 1; only 1: destruct r, q, p; only 1: reflexivity).	5.4272351265	4706
Coq.Init.Specif.sigT.eq_sigT_uncurried_iff	40
Coq.Init.Specif.sigT.eq_sigT_rect	40
Coq.Init.Specif.sigT.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0418589115143	2
Coq.Init.Specif.sig.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0533609390259	3
Coq.Init.Specif.sig.eq_sig_uncurried	40	0.0.0.0.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0937168598175	6
Coq.Init.Specif.sig.eq_sig_rect	40
Coq.Init.Specif.sig.eq_sig_uncurried_iff	40	12.3.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	8.62666201591	4791
Coq.Init.Specif.sig.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.048015832901	2
Coq.Init.Specif.sigT2.eq_existT2_uncurried	40
Coq.Init.Specif.sigT2.eq_sigT2_uncurried	40	0.0.0.2.2.1	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.62760591507	129
Coq.Init.Specif.sigT2.eq_sigT2_uncurried_iff	40	4.2.0.1.2.2.1.0.0.7	search with cache (only 1: simpl; only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl; only 1: apply eq_existT2_uncurried).	15.6775760651	8029
Coq.Init.Specif.sigT2.eq_sigT2_rect	40
Coq.Init.Specif.sigT2.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0582919120789	2
Coq.Init.Specif.sig2.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0674409866333	4
Coq.Init.Specif.sig2.eq_sig2_uncurried	40	0.0.0.1.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.134104967117	7
Coq.Init.Specif.sig2.eq_sig2_uncurried_iff	40	9.6.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	27.3659260273	8298
Coq.Init.Specif.sig2.eq_sig2_rect	40
Coq.Init.Specif.sig2.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0636429786682	2
Coq.Init.Specif.Choice_lemmas.Choice	40
Coq.Init.Specif.Choice_lemmas.Choice2	40
Coq.Init.Specif.Choice_lemmas.bool_choice	40
Coq.Init.Specif.Dependent_choice_lemmas.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0302820205688	3
Coq.funind.Recdef.le_lt_SS	40	5	search with cache (only 1: CRelationClasses.simpl_crelation).	0.025838136673	6
Coq.funind.Recdef.Splus_lt	40	118	search with cache (only 1: intuition).	2.46754789352	7800
Coq.funind.Recdef.SSplus_lt	40
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.0.0.1.0.25.7.0.77.0	search with cache (only 1: split; only 1: intros a; only 1: red; only 1: intuition; only 1: contradict H; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	8.38216996193	20276
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0423851013184	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40
Coq.QArith.Qreduction.Qminus'_correct	40	0.2.10	search with cache (only 1: intro n; only 1: intros; only 1: apply Qred_correct).	2.14492702484	1118
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40	2.1.3.0.28.0	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (Qred_correct q), <- (Qred_correct q'); only 1: assumption; only 1: intros; only 1: now rewrite !Qred_correct).	3.77847290039	2986
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	4.0.2	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: apply Qle_Qabs).	0.164029836655	32
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.128820896149	10
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	6.0.47	search with cache (only 1: split; only 1: intros; only 1: now destruct n).	3.31897997856	1659
Coq.QArith.Qfield.Examples.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0262441635132	1
Coq.QArith.Qfield.Examples.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.0315141677856	1
Coq.QArith.Qfield.Examples.ex3	40	0.0.0.0.6.0.4	search with cache (only 1: red; only 1: simpl; only 1: intros Hz; only 1: intros (a1, a2) (b1, b2); only 1: simpl; only 1: simpl_mult; only 1: ring).	2.50290107727	885
Coq.QArith.Qfield.Examples.ex4	40	0	search with cache (only 1: ring).	0.0405621528625	1
Coq.QArith.Qfield.Examples.ex5	40	4	search with cache (only 1: trivial).	0.0348269939423	5
Coq.QArith.Qfield.Examples.ex6	40	0	search with cache (only 1: ring).	0.0477750301361	1
Coq.QArith.Qfield.Examples.ex7	40	1.2	search with cache (only 1: intro z_ne_0; only 1: ring).	0.0642280578613	5
Coq.QArith.Qfield.Examples.ex8	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0585248470306	2
Coq.QArith.Qfield.Examples.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.051873922348	2
Coq.QArith.Qfield.Examples.ex10	40	4.1.0.1.0.11	search with cache (only 1: intros a b Hb; only 1: setoid_replace (a / b * b) with (b * (a / b)) by apply Qmult_comm; only 1: rewrite Qmult_div_r; only 1: ring; only 1: intro; only 1: now Z.nzsimpl').	8.81831407547	2757
Coq.QArith.Qfield.Qopp_plus	40	2.6.0	search with cache (only 1: intros; only 1: symmetry; only 1: ring).	0.420964002609	66
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0821921825409	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40
Coq.QArith.Qcanon.Q2Qc_eq_iff	40	3.4.5.25	search with cache (only 1: revert q; only 1: fix odd_spec 1; only 1: intros a; only 1: auto).	17.5737810135	6461
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	5.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: reflexivity).	0.135375976562	8
Coq.QArith.Qcanon.Qcgt_alt	40	0.1	search with cache (only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0501599311829	3
Coq.QArith.Qcanon.Qcle_alt	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0441300868988	3
Coq.QArith.Qcanon.Qcge_alt	40	0.2.1	search with cache (only 1: destr_bool; only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0841000080109	15
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	7	search with cache (only 1: easy).	0.0492029190063	8
Coq.QArith.Qcanon.Qcplus_assoc	40	0.15.1.10	search with cache (only 1: intros c; only 1: intro i; only 1: fix even_spec 1; only 1: auto).	34.5555160046	13931
Coq.QArith.Qcanon.Qcplus_0_l	40
Coq.QArith.Qcanon.Qcplus_0_r	40
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	2.1.2.2.3	search with cache (only 1: intros; only 1: symmetry; only 1: destruct q; only 1: qc; only 1: ring).	1.26985311508	453
Coq.QArith.Qcanon.Qcplus_opp_r	40
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40
Coq.QArith.Qcanon.Qcmult_0_r	40	0.0.4.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: ring).	0.209717035294	13
Coq.QArith.Qcanon.Qcmult_1_l	40	21.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	12.4762010574	6040
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0867340564728	5
Coq.QArith.Qcanon.Qcmult_comm	40	5.4.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	0.983333826065	276
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	4.0.0.9.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	5.05438899994	1364
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	3.0.1.8.0.0	search with cache (only 1: intros; only 1: qc; only 1: red; only 1: simpl; only 1: simpl_mult; only 1: ring).	3.53678917885	999
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40	0.9.0.0	search with cache (only 1: intros a n **; only 1: qc; only 1: apply Qdiv_mult_l; only 1: auto).	1.58335518837	416
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40
Coq.QArith.Qcanon.Qcle_antisym	40	8.4.0	search with cache (only 1: intros x y; only 1: intros; only 1: intuition).	1.13449311256	258
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	7.16.0.7	search with cache (only 1: intros; only 1: contradict H; only 1: destruct H; only 1: apply Z.lt_irrefl).	31.1361341476	16487
Coq.QArith.Qcanon.Qclt_le_weak	40	8.5.12	search with cache (only 1: intro p; only 1: intro m; only 1: congruence).	26.4427428246	12048
Coq.QArith.Qcanon.Qcle_lt_trans	40	1.1.2.0.17	search with cache (only 1: intros H1; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: assumption; only 1: eauto).	9.35036301613	4843
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	3.2.1.2.3	search with cache (only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	7.69033813477	2058
Coq.QArith.Qcanon.Qcnot_lt_le	40	7.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	0.473279953003	17
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.2	search with cache (only 1: intros a b H; only 1: Z.order).	0.459836006165	59
Coq.QArith.Qcanon.Qclt_not_le	40	1.1	search with cache (only 1: intros n m; only 1: apply Z.lt_nge).	0.441837072372	36
Coq.QArith.Qcanon.Qcle_not_lt	40	5.0.1.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qle, Qlt, Qeq; only 1: intros; only 1: Z.order').	0.182787895203	20
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40	0.6.9.7	search with cache (only 1: intro; only 1: induction p; only 1: fix even_spec 1; only 1: assumption).	6.87949419022	2785
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.2.0.5	search with cache (only 1: induction n; only 1: intros; only 1: tauto; only 1: auto with qarith).	2.4105489254	284
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.1.4.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	1.30394887924	283
Coq.QArith.Qreals.IZR_nz	40	2	search with cache (only 1: auto with real).	0.195510864258	13
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40	1.7.6.0.10.0.16	search with cache (only 1: destruct q; only 1: unfold Qeq; only 1: destruct p; only 1: simpl; only 1: symmetry; only 1: rewrite <- Z.compare_eq_iff; only 1: now split).	18.4258089066	14912
Coq.QArith.QArith_base.Qlt_alt	40	5.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now split).	0.052934885025	18
Coq.QArith.QArith_base.Qgt_alt	40	1.1.2.14.11.14	search with cache (only 1: revert q; only 1: symmetry; only 1: revert q; only 1: fix even_spec 1; only 1: intro q; only 1: trivial).	30.2121400833	22064
Coq.QArith.QArith_base.Qle_alt	40	10	search with cache (only 1: now split).	0.0595140457153	34
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	1.6	search with cache (only 1: red; only 1: now Z.nzsimpl).	0.0471839904785	9
Coq.QArith.QArith_base.Qeq_sym	40	0.0	search with cache (only 1: symmetry; only 1: now Z.nzsimpl').	0.0519189834595	2
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	search with cache (only 1: apply Zeq_is_eq_bool).	0.0212659835815	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.020229101181	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40	20	search with cache (only 1: apply Z.leb_le).	1.25745391846	1134
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0.26	search with cache (only 1: red; only 1: apply Zle_is_le_bool).	0.413547992706	471
Coq.QArith.QArith_base.Qnot_eq_sym	40	3.8	search with cache (only 1: intros Hn Hm; only 1: intuition).	0.324828863144	127
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.0281760692596	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0426499843597	2
Coq.QArith.QArith_base.Qeq_bool_trans	40
Coq.QArith.QArith_base.Qmake_Qdiv	40	8.0.8	search with cache (only 1: Z.bitwise; only 1: simpl; only 1: now Z.nzsimpl).	0.981135845184	332
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.12	search with cache (only 1: intros H; only 1: destr_eq H).	0.201392889023	60
Coq.QArith.QArith_base.Qplus_assoc	40	0.3.10.3	search with cache (only 1: intro l; only 1: fix gcd_divide 1; only 1: intros a b; only 1: auto).	4.75959610939	2108
Coq.QArith.QArith_base.Qplus_0_l	40	1.1.0.12.19	search with cache (only 1: intros H; only 1: unfold Qeq, Qlt, Qcompare; only 1: simpl in *; only 1: Z.nzsimpl; only 1: f_equiv).	8.38387393951	4797
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite ?Pos.mul_1_r; only 1: f_equal; only 1: now Z.nzsimpl).	0.108959197998	6
Coq.QArith.QArith_base.Qplus_comm	40
Coq.QArith.QArith_base.Qopp_involutive	40
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.101314067841	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	10.4.1.0.11	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros n m p; only 1: simpl_mult; only 1: ring).	20.7711501122	9381
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: simpl in *; only 1: trivial).	0.0439789295197	4
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: simpl in *; only 1: now Z.nzsimpl).	0.204766988754	22
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.7.2.4.0.1	search with cache (only 1: red; only 1: simpl; only 1: intros x; only 1: Z.nzsimpl; only 1: simpl_mult; only 1: ring).	25.3450632095	5695
Coq.QArith.QArith_base.Qmult_comm	40	1.0.2.2.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: ring).	0.343591928482	94
Coq.QArith.QArith_base.Qmult_plus_distr_r	40
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.129726171494	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	2.6	search with cache (only 1: compute; only 1: auto).	0.406363010406	48
Coq.QArith.QArith_base.inject_Z_opp	40	10	search with cache (only 1: reflexivity).	0.0347650051117	24
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	2.3.9.0.4.0	search with cache (only 1: red; only 1: intros a b; only 1: simpl; only 1: symmetry; only 1: simpl_mult; only 1: ring).	21.4286990166	6755
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0754098892212	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	52	search with cache (only 1: intuition).	0.973401069641	2137
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.58	search with cache (only 1: apply Z.ge_le_iff; only 1: auto with zarith).	5.40935301781	10335
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	14.22	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	5.28398704529	2088
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	1.2.6	search with cache (only 1: intuition; only 1: apply Z.ge_le_iff; only 1: auto).	0.282073020935	121
Coq.QArith.QArith_base.Qnot_le_lt	40	25.4	search with cache (only 1: intro H; only 1: Z.order).	1.52137422562	1430
Coq.QArith.QArith_base.Qlt_not_le	40
Coq.QArith.QArith_base.Qle_not_lt	40	2.5	search with cache (only 1: red; only 1: apply Z.nlt_ge).	0.0367791652679	9
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	15.8767800331	1435
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	13.5308480263	2022
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0500299930573	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40	1.18.3	search with cache (only 1: intros x x'; only 1: fix even_spec 1; only 1: auto).	4.69655203819	2610
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.2.2	search with cache (only 1: intros a b n; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.96611905098	271
Coq.QArith.Qminmax.Q.plus_min_distr_r	40
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	2.0.8	search with cache (only 1: simpl; only 1: intros; only 1: apply Z.div_1_r).	0.751116991043	303
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.1.0.1.8	search with cache (only 1: intros; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	1.12439417839	732
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.254999876022	48
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.086000919342	9
Coq.QArith.Qabs.Qabs_nonneg	40
Coq.QArith.Qabs.Zabs_Qabs	40	0.0.1	search with cache (only 1: intros n m; only 1: compute; only 1: trivial).	0.190015077591	38
Coq.QArith.Qabs.Qabs_opp	40
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.Proper.eq_proper_proxy	40	0	search with cache (only 1: Ltac.reflexivity).	0.01913189888	1
Coq.Classes.CMorphisms.Proper.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.0199990272522	2
Coq.Classes.CMorphisms.Proper.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0183091163635	1
Coq.Classes.CMorphisms.Relations.pointwise_pointwise	40	5.3.2.3.2	search with cache (only 1: Ltac.split; only 1: destruct 2; only 1: firstorder; only 1: intros X; only 1: firstorder).	0.880710124969	589
Coq.Classes.CMorphisms.Relations.subrelation_id_proper	40	3	search with cache (only 1: firstorder).	0.0211820602417	4
Coq.Classes.CMorphisms.Relations.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0289311408997	1
Coq.Classes.CMorphisms.Relations.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0330610275269	4
Coq.Classes.CMorphisms.Relations.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.0224249362946	1
Coq.Classes.CMorphisms.Relations.proper_subrelation_proper_arrow	40	5	search with cache (only 1: simpl_crelation).	0.135291814804	6
Coq.Classes.CMorphisms.Relations.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.106157064438	1
Coq.Classes.CMorphisms.Relations.forall_subrelation	40	2.0.1	search with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.100914001465	6
Coq.Classes.CMorphisms.iff_impl_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.0256278514862	1
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.0207340717316	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0179929733276	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.0209560394287	1
Coq.Classes.CMorphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.GenericInstances.flip_proper_obligation_1	40	6.6.0	search with cache (only 1: intros A R H B R' H0 x y z X X0 x0 y0 X1; only 1: unfold flip; only 1: firstorder).	1.1405069828	325
Coq.Classes.CMorphisms.GenericInstances.trans_contra_co_type_morphism_obligation_1	40	8.0	search with cache (only 1: reduce; only 1: firstorder).	0.115374088287	16
Coq.Classes.CMorphisms.GenericInstances.trans_contra_inv_impl_type_morphism_obligation_1	40	3	search with cache (only 1: firstorder).	0.0532121658325	4
Coq.Classes.CMorphisms.GenericInstances.trans_co_impl_type_morphism_obligation_1	40	5.0	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	2.00980186462	385
Coq.Classes.CMorphisms.GenericInstances.trans_sym_co_inv_impl_type_morphism_obligation_1	40	2	search with cache (only 1: firstorder).	2.03406310081	441
Coq.Classes.CMorphisms.GenericInstances.trans_sym_contra_arrow_morphism_obligation_1	40	2.3	search with cache (only 1: intros x y H'; only 1: firstorder).	2.57673096657	472
Coq.Classes.CMorphisms.GenericInstances.per_partial_app_type_morphism_obligation_1	40	5.3	search with cache (only 1: destruct 1; only 1: firstorder).	0.194994211197	15
Coq.Classes.CMorphisms.GenericInstances.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.GenericInstances.PER_type_morphism_obligation_1	40	1.6	search with cache (only 1: intros; only 1: firstorder).	2.33523106575	276
Coq.Classes.CMorphisms.GenericInstances.symmetric_equiv_flip	40	4.0	search with cache (only 1: hnf; only 1: firstorder).	0.0300970077515	6
Coq.Classes.CMorphisms.GenericInstances.compose_proper_obligation_1	40	2.5	search with cache (only 1: intros P b H H0; only 1: firstorder).	0.0853900909424	31
Coq.Classes.CMorphisms.GenericInstances.reflexive_eq_dom_reflexive	40	2	search with cache (only 1: simpl_crelation).	0.0346899032593	3
Coq.Classes.CMorphisms.GenericInstances.respectful_morphism	40
Coq.Classes.CMorphisms.GenericInstances.Reflexive_partial_app_morphism	40	8	search with cache (only 1: firstorder).	0.0269918441772	9
Coq.Classes.CMorphisms.GenericInstances.flip_respectful	40	0.0.1	search with cache (only 1: split; only 1: simpl_crelation; only 1: firstorder).	0.0541160106659	4
Coq.Classes.CMorphisms.GenericInstances.flip1	40	0.0	search with cache (only 1: reduce; only 1: auto).	0.0280029773712	2
Coq.Classes.CMorphisms.GenericInstances.flip2	40	0	search with cache (only 1: firstorder).	0.0195288658142	1
Coq.Classes.CMorphisms.GenericInstances.eq_subrelation	40	0.2.2	search with cache (only 1: hnf; only 1: destruct 1; only 1: firstorder).	0.049409866333	13
Coq.Classes.CMorphisms.GenericInstances.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0166330337524	1
Coq.Classes.CMorphisms.GenericInstances.proper_eq	40	0	search with cache (only 1: firstorder).	0.0177369117737	1
Coq.Classes.CMorphisms.proper_proper	40	2.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0411398410797	5
Coq.Classes.CMorphisms.Normalize.proper_normalizes_proper	40	3.0	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0477600097656	5
Coq.Classes.CMorphisms.Normalize.flip_atom	40	1	search with cache (only 1: firstorder).	0.0218989849091	2
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	1.1.0	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder; only 1: simpl_crelation).	0.103194952011	5
Coq.Classes.CMorphisms.proper_sym_flip_2	40	5.1.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: firstorder).	4.38904500008	442
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0509488582611	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.8.0	search with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0; only 1: split; only 1: apply mor; only 1: auto; only 1: auto; only 1: apply mor; only 1: auto; only 1: auto).	11.7371051311	1503
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0566091537476	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	5.4.0.0	search with cache (only 1: intros A R H x x0 y X X0; only 1: transitivity x0; only 1: auto; only 1: auto).	8.0691280365	3771
Coq.Classes.CEquivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00833177566528	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00514197349548	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00672578811646	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.215428829193	1
Coq.Classes.CRelationClasses.Defs.complement_inverse	40	2	search with cache (only 1: Ltac.reflexivity).	0.0179529190063	3
Coq.Classes.CRelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.Defs.subrelation_symmetric	40	0.14	search with cache (only 1: intro p; only 1: firstorder).	0.049036026001	91
Coq.Classes.CRelationClasses.Defs.flip.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.0190181732178	4
Coq.Classes.CRelationClasses.Defs.flip.flip_Antisymmetric	40	9	search with cache (only 1: firstorder).	0.0608110427856	34
Coq.Classes.CRelationClasses.Defs.flip.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0360839366913	3
Coq.Classes.CRelationClasses.Defs.flip.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0330851078033	2
Coq.Classes.CRelationClasses.Defs.flip.flip_PER	40	1	search with cache (only 1: firstorder).	0.0759279727936	2
Coq.Classes.CRelationClasses.Defs.flip.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0543141365051	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0161640644073	2
Coq.Classes.CRelationClasses.Defs.complement.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0191040039062	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	0.0.0.17	search with cache (only 1: hnf; only 1: Ltac.split; only 1: auto; only 1: auto).	0.0954570770264	190
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.0173048973083	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.0190229415894	1
Coq.Classes.CRelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.Binary.relation_implication_preorder	40	2.0.1.0.2	search with cache (only 1: split; only 1: red; only 1: firstorder; only 1: red; only 1: firstorder).	0.0434641838074	11
Coq.Classes.CRelationClasses.Binary.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0324800014496	1
Coq.Classes.CRelationClasses.Binary.PartialOrder_inverse	40	2.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0720009803772	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.3.3	search with cache (only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.238578081131	322
Coq.Classes.Equivalence.Respecting.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00908303260803	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00532007217407	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00991201400757	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.226989984512	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	1.54.17.48	search with cache (only 1: destruct y; only 1: red; only 1: destruct x; only 1: auto).	6.18322396278	17496
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.Defs.complement_inverse	40	2	search with cache (only 1: Ltac.reflexivity).	0.0158250331879	3
Coq.Classes.RelationClasses.Defs.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.Defs.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0137979984283	1
Coq.Classes.RelationClasses.Defs.flip.flip_Reflexive	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.0190651416779	4
Coq.Classes.RelationClasses.Defs.flip.flip_Antisymmetric	40	7.1	search with cache (only 1: hnf; only 1: auto).	0.0400590896606	23
Coq.Classes.RelationClasses.Defs.flip.flip_PreOrder	40	2	search with cache (only 1: firstorder).	0.0346009731293	3
Coq.Classes.RelationClasses.Defs.flip.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.035572052002	2
Coq.Classes.RelationClasses.Defs.flip.flip_PER	40	1	search with cache (only 1: firstorder).	0.0973308086395	2
Coq.Classes.RelationClasses.Defs.flip.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0458149909973	2
Coq.Classes.RelationClasses.Defs.complement.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.016685962677	2
Coq.Classes.RelationClasses.Defs.complement.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.0166149139404	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	11.8.4.0.13.1.17	search with cache (only 1: intro n; only 1: induction n; only 1: hnf; only 1: Ltac.reflexivity; only 1: simpl; only 1: intro m; only 1: firstorder).	9.45885705948	30415
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0348641872406	4
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0301060676575	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.1.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.593514204025	7
Coq.Classes.RelationClasses.Binary.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.Binary.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.0192668437958	2
Coq.Classes.RelationClasses.Binary.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0313429832458	1
Coq.Classes.RelationClasses.Binary.PartialOrder_inverse	40	0.0.0.0	search with cache (only 1: reduce_goal; only 1: pose proof partial_order_equivalence as poe; only 1: do 3 red in poe; only 1: firstorder).	0.107425928116	4
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.0268230438232	1
Coq.Classes.Morphisms.Proper.eq_proper_proxy	40	2	search with cache (only 1: repeat Ltac.split).	0.0153338909149	3
Coq.Classes.Morphisms.Proper.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0143120288849	1
Coq.Classes.Morphisms.Proper.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.0143549442291	1
Coq.Classes.Morphisms.Relations.pointwise_pointwise	40	2.0.7.1.9	search with cache (only 1: repeat Ltac.split; only 1: red; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.515742063522	559
Coq.Classes.Morphisms.Relations.subrelation_id_proper	40	3	search with cache (only 1: firstorder).	0.0262911319733	11
Coq.Classes.Morphisms.Relations.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.021500825882	1
Coq.Classes.Morphisms.Relations.subrelation_refl	40	1.2	search with cache (only 1: reduce; only 1: assumption).	0.0208599567413	5
Coq.Classes.Morphisms.Relations.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.0183639526367	1
Coq.Classes.Morphisms.Relations.proper_subrelation_proper	40	3.5.3	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.455328941345	142
Coq.Classes.Morphisms.Relations.pointwise_subrelation	40	0.0	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0253739356995	2
Coq.Classes.Morphisms.Relations.forall_subrelation	40	1	search with cache (only 1: firstorder).	0.0205519199371	2
Coq.Classes.Morphisms.iff_impl_subrelation	40	1.0	search with cache (only 1: reduce; only 1: firstorder).	0.0194959640503	3
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0.0.0	search with cache (only 1: hnf; only 1: intros A B [H1 H2]; only 1: trivial).	0.0228219032288	3
Coq.Classes.Morphisms.GenericInstances.respectful_per_obligation_2	40
Coq.Classes.Morphisms.GenericInstances.complement_proper_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.flip_proper_obligation_1	40	2.2.17.2	search with cache (only 1: reduce; only 1: apply mor; only 1: intuition; only 1: intuition).	3.85562777519	3580
Coq.Classes.Morphisms.GenericInstances.trans_contra_co_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	0.149579048157	43
Coq.Classes.Morphisms.GenericInstances.trans_contra_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.0670819282532	17
Coq.Classes.Morphisms.GenericInstances.trans_co_impl_morphism_obligation_1	40	6	search with cache (only 1: firstorder).	1.21261096001	409
Coq.Classes.Morphisms.GenericInstances.trans_sym_co_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	1.55161190033	413
Coq.Classes.Morphisms.GenericInstances.trans_sym_contra_impl_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	1.70025110245	451
Coq.Classes.Morphisms.GenericInstances.per_partial_app_morphism_obligation_1	40	5.3	search with cache (only 1: intros; only 1: firstorder).	0.0715711116791	13
Coq.Classes.Morphisms.GenericInstances.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.GenericInstances.PER_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	1.28048586845	113
Coq.Classes.Morphisms.GenericInstances.symmetric_equiv_flip	40	2.0	search with cache (only 1: hnf; only 1: firstorder).	0.0270438194275	4
Coq.Classes.Morphisms.GenericInstances.compose_proper_obligation_1	40	3.1	search with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	0.0483038425446	17
Coq.Classes.Morphisms.GenericInstances.reflexive_eq_dom_reflexive	40	0.0.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0339570045471	5
Coq.Classes.Morphisms.GenericInstances.respectful_morphism	40
Coq.Classes.Morphisms.GenericInstances.Reflexive_partial_app_morphism	40	5	search with cache (only 1: firstorder).	0.0179262161255	6
Coq.Classes.Morphisms.GenericInstances.flip_respectful	40	2.1.0.0.0.1	search with cache (only 1: split; only 1: reduce; only 1: simpl_relation; only 1: reduce; only 1: apply H; only 1: simpl_relation).	0.0785398483276	10
Coq.Classes.Morphisms.GenericInstances.flip1	40	2	search with cache (only 1: apply H).	0.0180249214172	3
Coq.Classes.Morphisms.GenericInstances.flip2	40	0	search with cache (only 1: firstorder).	0.0183119773865	1
Coq.Classes.Morphisms.GenericInstances.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0246300697327	2
Coq.Classes.Morphisms.GenericInstances.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.0139439105988	1
Coq.Classes.Morphisms.GenericInstances.proper_eq	40	0	search with cache (only 1: firstorder).	0.0151298046112	1
Coq.Classes.Morphisms.proper_proper	40	1.0.6.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.578102827072	177
Coq.Classes.Morphisms.Normalize.proper_normalizes_proper	40	7	search with cache (only 1: firstorder).	0.0328290462494	8
Coq.Classes.Morphisms.Normalize.flip_atom	40	1	search with cache (only 1: firstorder).	0.0178060531616	2
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0.1	search with cache (only 1: intros R H x y H0 y0 y1 e H2; only 1: simpl_relation).	0.0340478420258	3
Coq.Classes.Morphisms.proper_sym_flip_2	40	0.2.12	search with cache (only 1: compute; only 1: intros C decide H P H0; only 1: auto).	4.79041314125	1369
Coq.Classes.Morphisms.proper_sym_impl_iff	40	1.0.8.4.3.5	search with cache (only 1: intro n; only 1: intros R H x x0 y H0; only 1: firstorder; only 1: setoid_rewrite  <- H; only 1: simpl_relation; only 1: assumption).	16.6040520668	8678
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40	0.0.4.0.0.4.9.3	search with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: split; only 1: apply H; only 1: auto; only 1: auto; only 1: apply H; only 1: auto; only 1: auto).	20.4379041195	10940
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Reflexive	40	1	search with cache (only 1: firstorder).	0.00927996635437	2
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00980114936829	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.103327989578	1
Coq.Classes.RelationPairs.RelCompFun_Instances.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00958800315857	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Reflexive	40	0	search with cache (only 1: CRelationClasses.simpl_crelation).	0.02161693573	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0191359519958	1
Coq.Classes.RelationPairs.RelProd_Instances.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.284105062485	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0119318962097	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0140511989594	1
Coq.Classes.RelationPairs.RelProd_Instances.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00970101356506	1
Coq.Classes.RelationPairs.RelProd_Instances.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.00994181632996	1
Coq.Classes.RelationPairs.RelProd_Instances.pair_compat	40	0.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: firstorder).	0.0128858089447	2
Coq.Classes.RelationPairs.RelProd_Instances.fst_compat	40	0	search with cache (only 1: firstorder).	0.0098979473114	1
Coq.Classes.RelationPairs.RelProd_Instances.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.0188789367676	3
Coq.Classes.RelationPairs.RelProd_Instances.RelCompFun_compat	40	2.15.0.1.0	search with cache (only 1: repeat red; only 1: intro l; only 1: intros; only 1: compute in *; only 1: intuition).	1.40402293205	1342
Coq.Classes.DecidableClass.Decidable_sound	40	0.10.7.11	search with cache (only 1: intro x; only 1: intros; only 1: apply H; only 1: Ltac.assumption).	1.31921982765	4204
Coq.Classes.DecidableClass.Decidable_complete	40	5.0.0.1.2.0.13.5.16	search with cache (only 1: intro p; only 1: intros n m; only 1: case n; only 1: simpl; only 1: intro H; only 1: destruct H; only 1: auto; only 1: intros [? ?]; only 1: auto).	10.6179471016	38108
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	0.5.12	search with cache (only 1: split; only 1: destr_bool; only 1: destr_bool).	0.406207084656	501
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40	1.0.19	search with cache (only 1: <Coq.Strings.Ascii.t_eqb>; only 1: now apply beq_nat_true; only 1: apply Nat.eqb_refl).	1.23956084251	1575
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	5.0.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Nat.leb_le).	0.046098947525	21
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	9	search with cache (only 1: simpl_relation).	0.0594689846039	35
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.0172100067139	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.0182340145111	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	4.0	search with cache (only 1: intros x y H x0 y0 H0 x1 x2; only 1: firstorder).	0.628787994385	24
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.0935649871826	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	1.5	search with cache (only 1: intros x x' Hxx'; only 1: firstorder).	0.0488979816437	8
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.0346031188965	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0.2	search with cache (only 1: do 2 red; only 1: now symmetry).	0.355758905411	4
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	3.0	search with cache (only 1: intro; only 1: auto).	0.0433099269867	5
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	2	search with cache (only 1: firstorder).	0.0416080951691	3
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	3.0.1.0	search with cache (only 1: unfold to_nat; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: rewrite <- (Nat.mul_1_l 1)  at 1; only 1: now Nat.nzsimpl).	0.131860971451	8
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	2.0.0.0.2	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros <-; only 1: now destruct p).	0.0424978733063	9
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40	0.0.18.1	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite inj_compare, Nat.compare_lt_iff).	23.7008390427	10771
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	2.0.0.0.0.8.1.3	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: f_equal; only 1: trivial).	4.1092839241	1988
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	2.0.0.5.3.6	search with cache (only 1: intros Hy; only 1: intro H2; only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: now intros ->).	2.80445504189	1379
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0341780185699	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	2.0.0.0.0.2.0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: induction n; only 1: f_equal; only 1: f_equal; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	1.29938602448	608
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.7.0.8.0.2.9	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	14.5218758583	10815
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	6.0.1.1	search with cache (only 1: split; only 1: now apply Nat2Pos.inj; only 1: intros; only 1: now Morphisms.f_equiv).	6.06314992905	1820
Coq.PArith.Pnat.SuccNat2Pos.inv	40	4.6.13.1.1	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: intro H; only 1: symmetry in H; only 1: rewrite H; only 1: apply Pos2Nat.id).	14.1617801189	12085
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	9	search with cache (only 1: auto).	0.101953029633	33
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_mult	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ObsoletePmultNat.ZL6	40	1.0.1.1	search with cache (only 1: intros; only 1: unfold Pos.to_nat; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	0.121340036392	26
Coq.PArith.Pnat.ObsoletePmultNat.le_Pmult_nat	40	8.2.4	search with cache (only 1: intro m; only 1: fix le_div2 1; only 1: trivial).	2.97546505928	1938
Coq.PArith.BinPos.Pos.eq_dec	40	8.0	search with cache (only 1: intro n; only 1: decide equality).	0.0797350406647	44
Coq.PArith.BinPos.Pos.xI_succ_xO	40	2	search with cache (only 1: Ltac.reflexivity).	0.00553107261658	3
Coq.PArith.BinPos.Pos.succ_discr	40	6.22.11.15.7.38	search with cache (only 1: destruct p; only 1: intro H1; only 1: discriminate; only 1: discriminate; only 1: simpl; only 1: discriminate).	10.4779810905	40941
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: now destruct p).	0.00751495361328	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.1.0.1.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.100834131241	43
Coq.PArith.BinPos.Pos.double_succ	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0260229110718	7
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1	search with cache (only 1: now destruct p).	0.0160369873047	2
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0171809196472	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.18.6	search with cache (only 1: symmetry; only 1: destruct p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	2.09075593948	3101
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40	1.0.0.1.0.5.1.0	search with cache (only 1: destruct p; only 1: now destruct p; only 1: intro H; only 1: simpl; only 1: apply succ_pred_double; only 1: simpl; only 1: intros; only 1: now f_equal).	27.9535930157	11367
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.10.0.3	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: now destruct p; only 1: simpl; only 1: now f_equal).	4.29126214981	2250
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00860691070557	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00766396522522	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	2.12.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	6.45329999924	3161
Coq.PArith.BinPos.Pos.add_cancel_l	40	3.12.1	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: auto using add_no_neutral).	21.4761869907	12045
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.0.0.0.0.0.0	search with cache (only 1: destruct q; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal).	0.0295379161835	7
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0	search with cache (only 1: Ltac.split).	0.00913596153259	1
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0	search with cache (only 1: now destruct p).	0.0100021362305	1
Coq.PArith.BinPos.Pos.mul_1_r	40	2.1.0.3.1.1.5	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto using add_1_r; only 1: simpl; only 1: now f_equal; only 1: now rewrite ?add_carry_spec, ?IHp).	1.5576941967	1196
Coq.PArith.BinPos.Pos.mul_xO_r	40
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	0.6.0.0	search with cache (only 1: split; only 1: revert q r; only 1: apply mul_reg_r; only 1: congruence).	0.375333070755	119
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.340054988861	107
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0228819847107	1
Coq.PArith.BinPos.Pos.square_xO	40	0.0.9	search with cache (only 1: rewrite mul_xO_r; only 1: simpl; only 1: f_equal).	0.434720039368	197
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	2.0.0.0.3.0.6.1.2	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros A B f; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: split).	3.66876316071	3568
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0276901721954	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40	10.1.8	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: now f_equal).	21.6947190762	14416
Coq.PArith.BinPos.Pos.leb_le	40	11.0.3.0	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: intro m; only 1: easy).	4.39856696129	3054
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40	3.7.6	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	1.2826218605	565
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.1.0.0.0.1	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.170567989349	42
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.2.1.1.7.7	search with cache (only 1: revert q; only 1: intros a; only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	29.1512448788	12172
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40	1.7.7	search with cache (only 1: revert q; only 1: fix even_spec 1; only 1: trivial).	5.90244698524	2346
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0414118766785	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0359179973602	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: now split; only 1: now split).	0.0381989479065	8
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.2	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0452179908752	8
Coq.PArith.BinPos.Pos.compare_xO_xO	40	2.8	search with cache (only 1: unfold gt, le, compare; only 1: split).	0.0673470497131	41
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00692200660706	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.0.1.2.0	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: reflexivity).	0.067015171051	37
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.0.5.3.1	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: rewrite compare_cont_spec; only 1: reflexivity).	0.574835062027	434
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	5.0.0.0.0.17	search with cache (only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: auto).	1.61602306366	2290
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.0.0.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0199091434479	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	9	search with cache (only 1: reflexivity).	0.0648488998413	38
Coq.PArith.BinPos.Pos.gt_lt_iff	40	2.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.214482784271	57
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0163421630859	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00733304023743	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	6.3	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.15837097168	56
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0143702030182	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0072329044342	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40	3.7.8.1	search with cache (only 1: unfold lt; only 1: revert q; only 1: fix odd_spec 1; only 1: now destruct compare || now destruct p).	35.2479159832	14984
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40	0.0.26	search with cache (only 1: apply PeanoNat.Nat.lt_succ_r; only 1: apply lt_eq_cases; only 1: now right).	21.7003781796	17680
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.14	search with cache (only 1: unfold le; only 1: apply compare_succ_l || apply compare_succ_r || now destruct p || now destruct q).	0.74764418602	695
Coq.PArith.BinPos.Pos.nlt_1_r	40	2	search with cache (only 1: now destruct p).	0.0315721035004	13
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0604040622711	36
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0140149593353	2
Coq.PArith.BinPos.Pos.lt_nle	40
Coq.PArith.BinPos.Pos.lt_le_incl	40	9	search with cache (only 1: congruence).	0.283032894135	55
Coq.PArith.BinPos.Pos.lt_lt_succ	40	0.0.2.2	search with cache (only 1: intro H; only 1: rewrite PeanoNat.Nat.lt_succ_r; only 1: apply le_lteq; only 1: auto).	0.0359148979187	20
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40	0.0.0.0.8.1.3.0.0	search with cache (only 1: split; only 1: exact PeanoNat.Nat.lt_irrefl; only 1: intro l; only 1: intro n; only 1: intros H; only 1: rewrite 3!lt_iff_add; only 1: intros (r, Hr) (s, Hs); only 1: exists (r + s); only 1: now rewrite add_assoc, Hr, Hs).	0.663019180298	1096
Coq.PArith.BinPos.Pos.lt_compat	40	3	search with cache (only 1: solve_proper).	0.147804021835	20
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.0	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0121159553528	2
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40	0.0.0.0.3.13	search with cache (only 1: intro H2; only 1: intros H; only 1: apply le_lteq in H; only 1: destruct H; only 1: now apply lt_trans with m; only 1: now subst).	4.93372297287	2576
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.3.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0793399810791	34
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.0.0.7.8.3.1	search with cache (only 1: revert q r; only 1: intro q; only 1: intros a; only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: generalize (compare_succ_r p q); only 1: now split).	37.8750641346	23657
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.0.0.3	search with cache (only 1: rewrite 2!(add_comm _ p); only 1: unfold le; only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.163862943649	54
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.6.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0226678848267	13
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0161950588226	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0164411067963	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0112318992615	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	0.0.0.1.0.1.0.2.1.6	search with cache (only 1: unfold lt, le; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: discriminate; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	7.1407699585	6148
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2	search with cache (only 1: now destruct p).	0.00936388969421	3
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00915884971619	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0198729038239	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0205519199371	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.3	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.146817922592	19
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40
Coq.PArith.BinPos.Pos.sub_diag	40	3.0.1.0.1.5.3	search with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: congruence; only 1: intros r H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	9.51543402672	1235
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0308561325073	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	1.0.0.0.1.0.0.0.1.0	search with cache (only 1: unfold le, min; only 1: intros; only 1: case compare_spec; only 1: auto; only 1: rewrite compare_antisym, CompOpp_iff in H; only 1: intros H'; only 1: apply le_nlt in H; only 1: apply le_nlt in H; only 1: now elim H; only 1: constructor).	2.17498278618	1017
Coq.PArith.BinPos.Pos.max_1_l	40	0.1.6.2.32	search with cache (only 1: induction n; only 1: intuition; only 1: reflexivity || apply f_equal || exfalso; only 1: apply max_l; only 1: easy).	0.935291051865	1293
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0324079990387	9
Coq.PArith.BinPos.Pos.min_1_l	40	0.0.0.1.0.0.0.4	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l).	0.415412902832	281
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0339860916138	9
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.2.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply succ_le_mono).	0.0510439872742	18
Coq.PArith.BinPos.Pos.add_max_distr_l	40	2.0.1.0.0.0.0	search with cache (only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: intros q r; only 1: unfold le, sub; only 1: rewrite add_compare_mono_l; only 1: easy').	0.0563380718231	17
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.3	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0328052043915	7
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0202510356903	5
Coq.PArith.BinPos.Pos.mul_max_distr_l	40
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.2	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0148248672485	5
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0219080448151	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40	0.6.6.10.0.1.5	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: simpl; only 1: auto; only 1: Bool.destr_bool; only 1: reflexivity || apply f_equal || exfalso; only 1: elim H; only 1: trivial).	15.0672841072	21207
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40	8.0.7.0.13	search with cache (only 1: nzinduct n; only 1: trivial; only 1: fix even_spec 1; only 1: intro n; only 1: auto).	14.6010868549	10720
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.1.5.0.0.0.2.2.4	search with cache (only 1: induction n as [| n IHn]; only 1: easy'; only 1: simpl; only 1: intro H; only 1: destruct n; only 1: now f_equal; only 1: f_equal; only 1: simpl; only 1: auto).	29.7859239578	22685
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40	3.4.9	search with cache (only 1: intro n; only 1: fix sqrtrem_spec 1; only 1: easy).	3.07477903366	3215
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.2.43	search with cache (only 1: fix even_spec 1; only 1: intro q; only 1: auto).	1.67967891693	4516
Coq.PArith.BinPos.Pcompare_eq_Gt	40	0.0.0.1.0	search with cache (only 1: unfold Pos.gt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0231120586395	6
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	0.0.3.6.4	search with cache (only 1: intro m; only 1: destruct m; only 1: now intuition; only 1: now intuition; only 1: intuition).	0.603498935699	397
Coq.Arith.Le.le_n_0_eq	40	0.1	search with cache (only 1: inversion 1; only 1: now subst).	0.0717740058899	20
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	10.0.0	search with cache (only 1: fix even_equiv 1; only 1: intro n; only 1: trivial).	0.900895833969	716
Coq.Arith.Even.even_or_odd	40	4.4.50.20	search with cache (only 1: Nat.induct n; only 1: now intuition; only 1: intro p; only 1: intuition).	16.123306036	61986
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n as [| n IHn]; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0226640701294	5
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.0788249969482	1
Coq.Arith.Even.even_even_plus	40	1	search with cache (only 1: parity_binop).	0.0411019325256	2
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0415239334106	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0551137924194	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0396959781647	1
Coq.Arith.Even.even_plus_aux	40
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0398380756378	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.039922952652	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0418610572815	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.042466878891	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0407269001007	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0400168895721	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.040283203125	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0394871234894	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.130498886108	1
Coq.Arith.Even.even_mult_l	40	6	search with cache (only 1: parity_binop).	0.0426700115204	19
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0264558792114	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.042475938797	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.042044878006	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0392329692841	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0263428688049	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0266618728638	1
Coq.Arith.Minus.minus_n_O	40	0	search with cache (only 1: now destruct n).	0.0216991901398	1
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0431170463562	1
Coq.Arith.Minus.minus_diag_reverse	40	1.0.1.0	search with cache (only 1: Nat.induct ltac:(n); only 1: split; only 1: intros n IH; only 1: now rewrite IH).	0.044694185257	6
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	2.1.5	search with cache (only 1: Nat.induct p; only 1: now Nat.nzsimpl; only 1: auto).	0.93331694603	134
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	2.2.1.20	search with cache (only 1: induction n; only 1: simpl; only 1: apply Nat.sub_0_r; only 1: auto).	0.756162881851	488
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: intros a ?; only 1: now Nat.nzsimpl; only 1: intros m H; only 1: destruct m; only 1: inversion H; only 1: simpl; only 1: apply f_equal, IHn, Peano.le_S_n; only 1: trivial).	3.01386284828	917
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.Between.bet_eq	40	7.14.15	search with cache (only 1: intros n m; only 1: induction 1; only 1: left).	15.2012469769	18356
Coq.Arith.Between.Between.between_le	40	1.1.16.2	search with cache (only 1: intros x y H; only 1: elim H; only 1: left; only 1: auto).	4.42339897156	2590
Coq.Arith.Between.Between.between_Sk_l	40
Coq.Arith.Between.Between.between_restr	40
Coq.Arith.Between.Between.exists_le_S	40	0.0.2	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	0.0377011299133	31
Coq.Arith.Between.Between.exists_S_le	40	0.0.1.5.7.2	search with cache (only 1: intros n m; only 1: revert m; only 1: fix le_div2 1; only 1: destruct n; only 1: trivial; only 1: trivial).	4.22867012024	4172
Coq.Arith.Between.Between.in_int_intro	40	0.0.0.8	search with cache (only 1: fix gcd_greatest 1; only 1: intros [| a] b; only 1: auto; only 1: auto).	0.264451980591	161
Coq.Arith.Between.Between.in_int_lt	40	12.4.4	search with cache (only 1: intros n m p; only 1: induction 1; only 1: PeanoNat.Nat.Private_Tac.order).	3.93005800247	2294
Coq.Arith.Between.Between.in_int_p_Sq	40
Coq.Arith.Between.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0110051631927	2
Coq.Arith.Between.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0105419158936	2
Coq.Arith.Between.Between.between_in_int	40
Coq.Arith.Between.Between.in_int_between	40	0.1.14	search with cache (only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	1.09356999397	1248
Coq.Arith.Between.Between.exists_in_int	40	0.0.0.29	search with cache (only 1: fix gcd_divide 1; only 1: induction 1; only 1: auto with arith; only 1: auto with arith).	2.5039870739	4151
Coq.Arith.Between.Between.in_int_exists	40
Coq.Arith.Between.Between.between_or_exists	40
Coq.Arith.Between.Between.between_not_exists	40
Coq.Arith.Between.Between.nth_le	40
Coq.Arith.Between.Between.event_O	40	0.9.1.19.76.1	search with cache (only 1: inversion 1; only 1: revert H H0; only 1: intro m; only 1: inversion 1; only 1: subst; only 1: auto with arith).	15.0069642067	91534
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.0.3.1.0.3.2.1.12	search with cache (only 1: Nat.induct n; only 1: intro H; only 1: now left; only 1: intro; only 1: Nat.cases m; only 1: intro m; only 1: now right; only 1: intros; only 1: now right).	22.616795063	22706
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	0.0.1.10.0.0	search with cache (only 1: intros A A_wd A0 AS; only 1: assert (D : forall n, A n /\ A (S n)); only 1: fix le_div2 1; only 1: assumption; only 1: intro n; only 1: exact (proj1 (D n))).	6.77261805534	2004
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	3.0.9	search with cache (only 1: fix even_equiv 1; only 1: intro m; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.763608932495	285
Coq.Arith.Div2.odd_S2n	40	0.0.1	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0893619060516	21
Coq.Arith.Div2.div2_double	40	1	search with cache (only 1: apply Nat.div2_double).	0.374819993973	64
Coq.Arith.Div2.div2_double_plus_one	40	1.11	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.Private_Tac.order).	2.18520402908	677
Coq.Arith.Plus.plus_assoc_reverse	40	10.1.0.3.0.0.0.0	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: intro; only 1: Nat.nzsimpl; only 1: split; only 1: intro; only 1: auto; only 1: intuition).	29.2449021339	8432
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	1	search with cache (only 1: apply Nat.add_le_mono_l).	0.00806999206543	2
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	0	search with cache (only 1: apply Nat.add_le_mono).	0.00991892814636	1
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40	15.5.1.14	search with cache (only 1: induction 1; only 1: apply Nat.le_add_r; only 1: Nat.nzsimpl; only 1: auto).	9.07611203194	14502
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	2.4.0.0.0.2.0.1.4	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: split; only 1: now Nat.nzsimpl; only 1: assumption; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: intro H; only 1: now split).	6.92349004745	3599
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	0.15.5.2	search with cache (only 1: induction n; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	33.7683169842	17889
Coq.Arith.Lt.lt_le_S	40	0.0.2.0.1	search with cache (only 1: Nat.cases n; only 1: intro H; only 1: Nat.order; only 1: intros n IH; only 1: Nat.order).	0.0343949794769	8
Coq.Arith.Lt.lt_n_Sm_le	40	0	search with cache (only 1: apply le_S_n).	0.00775504112244	1
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0178987979889	4
Coq.Arith.Lt.le_not_lt	40	0.1.5	search with cache (only 1: revert m; only 1: intros m IH; only 1: Nat.order).	0.28399515152	108
Coq.Arith.Lt.lt_not_le	40	1.0.0.0.4	search with cache (only 1: Nat.cases m; only 1: intro H; only 1: Nat.order; only 1: intros m IH; only 1: Nat.order).	0.111617088318	54
Coq.Arith.Lt.neq_0_lt	40	0.1	search with cache (only 1: intro H; only 1: Nat.auto').	0.290993928909	124
Coq.Arith.Lt.lt_0_neq	40	0.0.0.0	search with cache (only 1: intro H; only 1: intro H1; only 1: rewrite H1 in H; only 1: false_hyp H Nat.lt_irrefl).	0.0204110145569	4
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply le_n_S).	0.00774312019348	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.00698590278625	1
Coq.Arith.Lt.S_pred	40	1.0.2.0	search with cache (only 1: Nat.cases n; only 1: inversion 1; only 1: intros; only 1: auto).	0.0450880527496	20
Coq.Arith.Lt.S_pred_pos	40	0.4.2.1	search with cache (only 1: Nat.cases n; only 1: Nat.order; only 1: intro m; only 1: trivial).	0.276718139648	200
Coq.Arith.Lt.lt_pred	40	0.4.19	search with cache (only 1: destruct m; only 1: easy; only 1: apply Nat.succ_lt_mono).	1.06054019928	1405
Coq.Arith.Lt.lt_pred_n_n	40	1.0.1.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: simpl; only 1: intros _; only 1: auto).	0.0289549827576	14
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_ltof	40
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall n (a : A), f a < n -> Acc ltof a); only 1: intro n; only 1: induction n as [| n IHn]; only 1: intros a Ha; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	22.5339748859	9920
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof1	40
Coq.Arith.Wf_nat.Well_founded_Nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.717110872269	182
Coq.Arith.Wf_nat.Well_founded_Nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.0203499794006	1
Coq.Arith.Wf_nat.Well_founded_Nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	search with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.0189869403839	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.0175590515137	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.017205953598	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.019110918045	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.0	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.0368349552155	4
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.0176630020142	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.108868837357	7
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.106551885605	7
Coq.Arith.Wf_nat.LT_WF_REL.acc_lt_rel	40
Coq.Arith.Wf_nat.LT_WF_REL.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40	12.1.6.4.0	search with cache (only 1: Nat.induct ltac:(n); only 1: Nat.order'; only 1: intro m; only 1: simpl; only 1: intuition).	11.5708959103	7166
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	26.0.0.38	search with cache (only 1: induction n; only 1: now left; only 1: right; only 1: intuition).	9.68656206131	15626
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.0.12.3.0.0.3.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	30.9183719158	15264
Coq.Arith.Compare_dec.le_lt_dec	40
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.862415075302	264
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.163534879684	34
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40
Coq.Arith.Compare_dec.lt_dec	40	6.0.0.7.2.1.3.3	search with cache (only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (le_gt_dec n m); only 1: destruct (le_gt_dec n m); only 1: auto with arith; only 1: right; only 1: auto with arith; only 1: auto with arith).	31.3199460506	18556
Coq.Arith.Compare_dec.gt_dec	40	2	search with cache (only 1: apply le_dec).	0.047779083252	23
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.017872095108	2
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40	4	search with cache (only 1: apply Nat.le_decidable).	0.0632381439209	23
Coq.Arith.Compare_dec.dec_gt	40	1	search with cache (only 1: apply Nat.lt_decidable).	0.0564579963684	19
Coq.Arith.Compare_dec.dec_ge	40	2	search with cache (only 1: apply Nat.le_decidable).	0.0300970077515	12
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.0203058719635	1
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.0224249362946	3
Coq.Arith.Compare_dec.not_gt	40	2	search with cache (only 1: apply Nat.le_ngt).	0.0221209526062	3
Coq.Arith.Compare_dec.not_ge	40	1	search with cache (only 1: apply Nat.nle_gt).	0.0219659805298	2
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.nlt_ge).	0.0206670761108	2
Coq.Arith.Compare_dec.nat_compare_lt	40	4.8.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	10.2323608398	4154
Coq.Arith.Compare_dec.nat_compare_gt	40	5.4.2	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	6.53269004822	2527
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40	2.0.1.0.0.3.1.1.3.0.0	search with cache (only 1: revert m; only 1: induction n as [| n IHn]; only 1: destruct m; only 1: auto; only 1: easy; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	28.0965528488	14112
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.0186197757721	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	2.5.6	search with cache (only 1: revert m; only 1: intros H; only 1: apply Nat.compare_gt_iff).	0.452836036682	159
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40	3.3.0	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: easy).	0.945110082626	200
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	5.0.0.0.0.0.2	search with cache (only 1: induction n as [| n IHn]; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: apply Nat.leb_le).	9.34970593452	3528
Coq.Arith.Compare_dec.leb_correct_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0363240242004	3
Coq.Arith.Compare_dec.leb_complete_conv	40	0.1	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.nle_gt).	0.0341060161591	3
Coq.Arith.Compare_dec.leb_compare	40	12.4.1	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	29.7423241138	12761
Coq.Arith.EqNat.eq_nat_refl	40	3.3.6	search with cache (only 1: induction n; only 1: constructor; only 1: trivial).	0.118944883347	106
Coq.Arith.EqNat.eq_nat_is_eq	40	4.0.6.7	search with cache (only 1: revert m; only 1: fix even_spec 1; only 1: intro m; only 1: auto).	14.663421154	6470
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.1.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0331039428711	7
Coq.Arith.EqNat.eq_nat_eq	40	2.1.0.1.0	search with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: apply eq_nat_is_eq).	0.683185100555	139
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.2.0.1.0.0.0.0.1.1.0.0.0	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: intro m; only 1: simpl; only 1: destruct m as [| m]; only 1: auto; only 1: auto; only 1: intro m; only 1: destruct m as [| m]; only 1: auto; only 1: destruct (IHn m); only 1: auto; only 1: now right).	10.9654569626	4557
Coq.Arith.EqNat.beq_nat_refl	40	0.0.0.1.0.51.6	search with cache (only 1: symmetry; only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite ?IHn; only 1: easy).	2.73018980026	7782
Coq.Arith.EqNat.beq_nat_true	40	0.0.0.0.0.0.0.0.0.2	search with cache (only 1: Nat.double_induct n m; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: Bool.destr_bool; only 1: intros n m IH H1; only 1: auto).	1.15301012993	292
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: destr_bool).	0.0128819942474	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	0.2.2.3.2.6	search with cache (only 1: intros A B f r H; only 1: unfold respectful; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	4.03773593903	2953
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0.0	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0240709781647	3
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.0130128860474	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.0139210224152	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.0134930610657	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0298891067505	5
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0338070392609	5
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0334620475769	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0285520553589	5
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0239591598511	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.1	search with cache (only 1: revert m; only 1: intro m; only 1: revert m; only 1: intro m; only 1: split).	0.0484919548035	12
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	4	search with cache (only 1: inversion 1).	0.357284069061	22
Coq.Arith.PeanoNat.Nat.pow_0_r	40	2	search with cache (only 1: now nzsimpl').	0.023206949234	3
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	2.2.0.0	search with cache (only 1: simpl; only 1: inversion 1; only 1: now f_equiv; only 1: trivial).	0.0474941730499	8
Coq.Arith.PeanoNat.Nat.square_spec	40	3	search with cache (only 1: now nzsimpl).	0.0227282047272	4
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.18.35.15	search with cache (only 1: intro n; only 1: case n; only 1: intros H; only 1: now nzsimpl).	17.026293993	24230
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	5.1.0.0	search with cache (only 1: fix even_spec 1; only 1: intro n; only 1: rewrite even_spec; only 1: now split).	0.122152805328	38
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	1.0	search with cache (only 1: intro H; only 1: false_hyp ltac:(H) nlt_0_r).	0.024405002594	3
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	6.2	search with cache (only 1: inversion 1; only 1: trivial).	0.0789959430695	43
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.0201640129089	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	10	search with cache (only 1: apply le_0_l).	0.0914011001587	30
Coq.Arith.PeanoNat.Nat.div2_double	40	0.1.6.0.0.0.6.5	search with cache (only 1: simpl; only 1: nzinduct n; only 1: simpl; only 1: auto; only 1: intro; only 1: simpl; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	17.9392368793	6120
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.0.1.3	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite add_succ_r; only 1: now f_equal).	0.0771930217743	10
Coq.Arith.PeanoNat.Nat.le_div2	40	0.10.0.15	search with cache (only 1: cases ltac:(n); only 1: trivial; only 1: fix odd_spec 1; only 1: trivial).	15.5932750702	13703
Coq.Arith.PeanoNat.Nat.lt_div2	40
Coq.Arith.PeanoNat.Nat.div2_decr	40
Coq.Arith.PeanoNat.Nat.double_twice	40	1.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0445749759674	3
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.0.1.4.1	search with cache (only 1: destr_bool; only 1: nzinduct n; only 1: reflexivity; only 1: intros; only 1: now nzsimpl).	0.150399923325	52
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	0.13.6.0.3.3.1.2	search with cache (only 1: simpl; only 1: unfold odd; only 1: apply eq_true_iff_eq; only 1: nzsimpl; only 1: simpl; only 1: repeat Ltac.split; only 1: fix even_spec 1; only 1: Ltac.assumption).	9.32383108139	5545
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	4.14	search with cache (only 1: fix gcd_greatest 1; only 1: Ltac.assumption).	4.60554885864	2730
Coq.Arith.PeanoNat.Nat.div2_bitwise	40
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.0	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0279450416565	3
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	7.9.0.2	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: solve_max).	32.4029889107	16546
Coq.Arith.PeanoNat.Nat.div2_spec	40	0	search with cache (only 1: trivial).	0.0167188644409	1
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.0196619033813	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.TestOrder.test	40	6.0	search with cache (only 1: intros x y; only 1: Nat.order).	0.0306661128998	8
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00896811485291	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00775599479675	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	0.1.3	search with cache (only 1: destruct m; only 1: apply Nat.lt_succ_lt_pred; only 1: apply Nat.succ_lt_mono).	0.030709028244	20
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00904297828674	1
Coq.Arith.Gt.gt_not_le	40	1	search with cache (only 1: apply Nat.lt_nge).	0.00929498672485	2
Coq.Arith.Gt.le_S_gt	40	7.7	search with cache (only 1: intros; only 1: auto).	0.893300056458	559
Coq.Arith.Gt.gt_S_le	40	1	search with cache (only 1: apply Peano.le_S_n).	0.00801110267639	2
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.00852513313293	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0085768699646	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40
Coq.Arith.Gt.gt_0_eq	40	1.0.1.11	search with cache (only 1: induction n; only 1: right; only 1: auto; only 1: intuition).	7.63162899017	3850
Coq.Arith.Gt.plus_gt_reg_l	40	11.2.5.3.4	search with cache (only 1: nzinduct p; only 1: apply Nat.le_succ_l; only 1: simpl; only 1: intro; only 1: intuition).	15.8555250168	7974
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00828909873962	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.15.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.157329082489	338
Coq.Logic.JMeq.JMeq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0123460292816	3
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0105419158936	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.011666059494	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0113282203674	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0125799179077	4
Coq.Logic.JMeq.JMeq_congr	40	2.1.0.1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0303950309753	12
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0171818733215	3
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00888514518738	2
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0100169181824	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.14.1	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	2.01107907295	1941
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	1.7.5.1	search with cache (only 1: intro m; only 1: intro n; only 1: induction n; only 1: trivial).	0.468117952347	921
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0164320468903	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	6.11	search with cache (only 1: intuition; only 1: tauto).	0.255227088928	252
Coq.Logic.Classical_Prop.not_imply_elim	40	8.3.5.1	search with cache (only 1: intro not_eq_b1_b2; only 1: intro H; only 1: intros Hy; only 1: tauto).	1.5815551281	2633
Coq.Logic.Classical_Prop.not_imply_elim2	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intro; only 1: absurd P; only 1: auto; only 1: trivial).	0.0214159488678	8
Coq.Logic.Classical_Prop.imply_to_or	40	0.10.3	search with cache (only 1: Bool.destr_bool; only 1: apply NNPP; only 1: tauto).	0.840379953384	876
Coq.Logic.Classical_Prop.imply_to_and	40	4.7	search with cache (only 1: intros A P H; only 1: tauto).	1.36252117157	898
Coq.Logic.Classical_Prop.or_to_imply	40	0	search with cache (only 1: tauto).	0.0101318359375	1
Coq.Logic.Classical_Prop.not_and_or	40	0.12	search with cache (only 1: intros n m; only 1: tauto).	0.46568608284	312
Coq.Logic.Classical_Prop.or_not_and	40	2.1.3.0	search with cache (only 1: intros; only 1: red; only 1: intro; only 1: tauto).	0.0462100505829	30
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.0105950832367	1
Coq.Logic.Classical_Prop.and_not_or	40	2.0	search with cache (only 1: simple induction 1; only 1: tauto).	0.0554220676422	31
Coq.Logic.Classical_Prop.imply_and_or	40	0	search with cache (only 1: tauto).	0.00789308547974	1
Coq.Logic.Classical_Prop.imply_and_or2	40	6	search with cache (only 1: tauto).	0.0450959205627	40
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Paradox.Omega	40
Coq.Logic.Hurkens.Generic.Paradox.lemma1	40
Coq.Logic.Hurkens.Generic.Paradox.lemma2	40
Coq.Logic.Hurkens.Generic.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.modal	40	0.6.10	search with cache (only 1: intro m; only 1: destruct m; only 1: eauto).	0.326745986938	379
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.Forall	40	3.32	search with cache (only 1: red; only 1: eauto).	0.376068115234	664
Coq.Logic.Hurkens.NoRetractToModalProposition.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.MParadox.mparadox	40	0.0.0.0.0.1.0.2.0.1.0.0	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: apply p2b; only 1: exact b2p; only 1: exact B; only 1: exact h; only 1: cbn; only 1: auto; only 1: auto; only 1: auto).	2.21998095512	1039
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.Paradox.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.Paradox.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.Paradox.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.EqdepDec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_constant	40
Coq.Logic.Eqdep_dec.EqdepDec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.EqdepDec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.EqdepDec.K_dec_on	40
Coq.Logic.Eqdep_dec.EqdepDec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.linear_search_smallest	40	5.3	search with cache (only 1: intros n' Hn'; only 1: firstorder).	0.0952370166779	10
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Direct.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_implies_acc	40	2.5.10	search with cache (only 1: intro m; only 1: split; only 1: abstract now inversion 1).	0.222013950348	291
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.ConstructiveIndefiniteGroundDescription_Acc.constructive_indefinite_ground_description_nat_Acc	40	0.0.0.0.0.0.0.0.1.1.0.0.1.0.0.1.1.0.4.0	search with cache (only 1: intros H; only 1: pattern 0; only 1: apply Fix_F with (R := R); only 1: intros x IH; only 1: destruct (P_decidable x) as [Px| not_Px]; only 1: exists x; only 1: assumption; only 1: set (y := S x); only 1: assert (Ryx : R y x); only 1: unfold R; only 1: auto; only 1: destruct (IH y Ryx) as [n Hn]; only 1: exists n; only 1: assumption; only 1: elim H; only 1: intros x Px; only 1: apply P_eventually_implies_acc with (n := x); only 1: replace (x + 0) with x; only 1: auto with arith; only 1: auto with arith).	21.0588710308	12537
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.P'_decidable	40	40.1	search with cache (only 1: intro m; only 1: firstorder).	10.4989368916	22924
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.ConstructiveGroundEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.1.0.2.2.1.0.1.19.10.7.1	search with cache (only 1: split; only 1: intuition auto using omniscient_fun_choice_imp_small_drinker, omniscient_fun_choice_imp_fun_choice, fun_choice_and_small_drinker_imp_omniscient_fun_choice; only 1: intros x HPx; only 1: apply H; only 1: firstorder; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	33.8716008663	65308
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.1.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0295939445496	11
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.5.0.6.0	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.279368877411	424
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40	0.11.6.5	search with cache (only 1: intros; only 1: intros x HPx; only 1: apply H; only 1: firstorder).	3.15387296677	3882
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	20.4496629238	13295
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	0.0.0.0.6.0.3.0.0	search with cache (only 1: intros A B SetoidFunChoice R T Hequiv Hexists; only 1: firstorder; only 1: destruct SetoidFunChoice with (R := R) (T := T) as (f, Hf); only 1: easy; only 1: firstorder; only 1: exists f; only 1: intros x; only 1: specialize Hf with x as (Hf, Huniq); only 1: intuition).	16.652230978	1431
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.6.0.9.0.0	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: exact eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	2.64776206017	2445
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	3.14.8.20	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: destruct e; only 1: Ltac.reflexivity).	0.710572004318	2474
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	8.0.0.3.1	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: auto).	0.491383075714	491
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	9.8.0.14.0	search with cache (only 1: intros Ext A Ha; only 1: apply Ext; only 1: split; only 1: trivial; only 1: trivial).	4.29410815239	10117
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.aux	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_gen.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_Prop_Ext_CC.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CIC.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.p2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_EM_CC.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p1	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wp2p2	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_WEM_CC.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.Proof_irrelevance_CCI.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.Weak_proof_irrelevance_CCI.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.Unrestricted_minimization_entails_excluded_middle.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.Excluded_middle_entails_unrestricted_minimization.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.Example_of_undecidable_predicate_with_the_minimization_property.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.Generic.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.Generic.not_ex_all_not	40	0.0.1.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.018385887146	6
Coq.Logic.Classical_Pred_Type.Generic.not_ex_not_all	40	4.0.14	search with cache (only 1: intros x y H'; only 1: apply NNPP; only 1: firstorder).	2.73574090004	4371
Coq.Logic.Classical_Pred_Type.Generic.ex_not_not_all	40	1.0.2.1	search with cache (only 1: intro abs; only 1: intros (c, Hc); only 1: intro all; only 1: auto).	0.195348978043	121
Coq.Logic.Classical_Pred_Type.Generic.all_not_not_ex	40	16.14.0	search with cache (only 1: unfold not; only 1: intros a H; only 1: firstorder).	17.491738081	29674
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.0642290115356	14
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.prop_ext	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.proof_irrel	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	30.8452968597	7128
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.PredExt_RelChoice_imp_EM.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a1'	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0503289699554	2
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.projT1_injective	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.decide	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.ProofIrrel_RelChoice_imp_EqEM.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.ExtensionalEpsilon_imp_EM.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0120580196381	3
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0119199752808	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0126619338989	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0124008655548	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	5.11.0.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: Ltac.reflexivity).	0.411338090897	599
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: Ltac.reflexivity).	0.00763201713562	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	0	search with cache (only 1: eauto using @functional_extensionality_dep).	0.00710010528564	1
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.0.0	search with cache (only 1: intros A P H p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0120439529419	4
Coq.Logic.HLevels.false_hprop	40	0.0	search with cache (only 1: intros p q; only 1: destruct p, q).	0.00647497177124	2
Coq.Logic.HLevels.true_hprop	40	0.1.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: Ltac.reflexivity || destruct H).	0.0087251663208	4
Coq.Logic.HLevels.not_hprop	40	0.1.1.4	search with cache (only 1: intros h1 h2; only 1: intro n; only 1: apply functional_extensionality; only 1: contradiction).	0.0250220298767	29
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.3.21.0.0.8.0	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: firstorder; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: firstorder; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	17.98199296	25187
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_sym	40	0.5.1.0.10	search with cache (only 1: intro; only 1: intro x; only 1: intros; only 1: destruct H; only 1: Ltac.reflexivity).	0.45219707489	326
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.0274159908295	2
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep1_dep	40
Coq.Logic.EqdepFacts.Dependent_Equality.eq_dep_dep1	40	2.36.0	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: Ltac.reflexivity).	1.00041985512	2198
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	2.1	search with cache (only 1: destruct 1; only 1: Ltac.reflexivity).	0.0360569953918	14
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.12.0.0.9.11	search with cache (only 1: Ltac.split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	3.50177598	4811
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.0369248390198	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	0.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0277669429779	2
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.12.0.0.12.0	search with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	3.86528897285	3771
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	0.1.0	search with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: reflexivity).	0.0977780818939	12
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	0.2.5	search with cache (only 1: dependent rewrite H; only 1: destruct H; only 1: split).	0.204503059387	85
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep1_eq_on	40	27.1.5.7	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto).	2.39593482018	4094
Coq.Logic.EqdepFacts.Equivalences.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.Equivalences.eq_dep_eq_on__UIP_on	40	0.4.0.16.15.24.19.12	search with cache (only 1: red; only 1: intros eq_rect_eq; only 1: destruct p1; only 1: intro H; only 1: rewrite <- eq_rect_eq; only 1: Ltac.reflexivity; only 1: destruct H; only 1: apply eq_dep_intro).	33.2626771927	99674
Coq.Logic.EqdepFacts.Equivalences.UIP_on__UIP_refl_on	40	11.0.0.0	search with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros p2; only 1: auto).	0.701045036316	415
Coq.Logic.EqdepFacts.Equivalences.UIP_refl_on__Streicher_K_on	40	1.6.1.3.4.2	search with cache (only 1: red; only 1: intro; only 1: intro UIP; only 1: intros p2; only 1: rewrite H; only 1: apply UIP).	3.05549788475	4138
Coq.Logic.EqdepFacts.Equivalences.Streicher_K_on__eq_rect_eq_on	40	2.11.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto).	0.524499893188	337
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.Corollaries.eq_dep_eq_on__inj_pair2_on	40	3.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0982949733734	27
Coq.Logic.EqdepFacts.f_eq_dep	40	0.1	search with cache (only 1: destruct 1; only 1: Ltac.reflexivity).	0.065614938736	18
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	search with cache (only 1: destruct 1; only 1: Ltac.reflexivity).	0.12039899826	46
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.0	search with cache (only 1: intros * []; only 1: reflexivity).	0.0300800800323	2
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	4	search with cache (only 1: auto).	0.0242879390717	36
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	5.0	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0304100513458	34
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.Berardis_paradox.AC_IF	40
Coq.Logic.Berardi.Berardis_paradox.Retracts.AC	40	1.51	search with cache (only 1: intros [HypL HypR]; only 1: assumption).	14.0214619637	25542
Coq.Logic.Berardi.Berardis_paradox.L1	40
Coq.Logic.Berardi.Berardis_paradox.retract_pow_U_U	40
Coq.Logic.Berardi.Berardis_paradox.not_has_fixpoint	40
Coq.Logic.Berardi.Berardis_paradox.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.4.0.0.0.8.0	search with cache (only 1: intro A; only 1: intro H1; only 1: unfold not; only 1: intro H; only 1: elim H1; only 1: trivial; only 1: contradiction).	2.86939096451	7668
Coq.Logic.Decidable.dec_True	40	0.0.0	search with cache (only 1: unfold decidable; only 1: unfold not; only 1: auto).	0.00902605056763	3
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00684595108032	2
Coq.Logic.Decidable.dec_or	40	1.1.18.8	search with cache (only 1: intro H; only 1: intro p; only 1: unfold decidable; only 1: tauto).	14.1110830307	35298
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0198049545288	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0115821361542	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0144438743591	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0534949302673	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0104169845581	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.00883007049561	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0162580013275	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0169870853424	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0118680000305	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0340750217438	2
Coq.Logic.Decidable.not_true_iff	40	0.2.1.0.0.0	search with cache (only 1: Ltac.split; only 1: intro H; only 1: apply H; only 1: Ltac.split; only 1: intros h1 h2; only 1: apply h1).	0.0142221450806	13
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.0067310333252	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0118041038513	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0140328407288	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0162329673767	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0161831378937	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0167760848999	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0170059204102	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0169949531555	2
Coq.Logic.Decidable.not_or_iff	40	8.0	search with cache (only 1: intros; only 1: tauto).	0.0245881080627	22
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.0092179775238	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0194818973541	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0197141170502	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0179657936096	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	2.0.0.0	search with cache (only 1: intro EQ; only 1: symmetry in EQ; only 1: revert EQ; only 1: now try Z.order').	0.0266451835632	6
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cO	40	1	search with cache (only 1: Ltac.assumption).	0.0310318470001	2
Coq.setoid_ring.Ncring_polynom.MakeRingPol.cI	40	0	search with cache (only 1: exact ring0).	0.0299649238586	1
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi0	40	53.3.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	8.29210090637	7541
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pphi1	40	47.0.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder).	14.0631048679	7659
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.mkX_ok	40	13.0.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	2.03584313393	500
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.POWER2.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.MakeRingPol.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.5211520195	43
Coq.setoid_ring.Ncring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: constructor; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: reflexivity; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	0.238022089005	10
Coq.setoid_ring.Ring.bool_eq_ok	40	0	search with cache (only 1: destr_bool).	0.0403940677643	1
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0293438434601	4
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_ext_Proper	40	11	search with cache (only 1: auto).	0.120679140091	55
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ceqb_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEeval_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_l	40	7	search with cache (only 1: eauto).	0.111039876938	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rsub_0_r	40	15.0	search with cache (only 1: rewrite rsub_def; only 1: let rec Esimpl := let rec rsimpl := gen_srewrite Rsth Reqe ARth in try rewrite_db Esimpl; rsimpl; simpl in Esimpl).	18.4012548923	258
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_simpl	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rmul_reg_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.ropp_neq_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv_r_r	40	27	search with cache (only 1: eauto).	5.13571190834	1107
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv2b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv5	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv3b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv6	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv4b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv7b	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rinv_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.rdiv8	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.cross_product_eq	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_N_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_0	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_cst	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_l	40	4.2.3.2.2.0	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: trivial).	24.5906720161	810
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.pow_pos_div	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEadd_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.855954885483	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.863424777985	3
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEopp_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_ext	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PE_1_r	40	5.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	1.08509683609	9
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_0_r	40	4.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: eauto).	1.11277699471	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_r	40	5.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.86835694313	8
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_1_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_add_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEpow_nz	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.if_true	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEadd_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEsub_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEopp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEpow_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.NPEmul_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PEsimp_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_l	40	0.0.2.0.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: destruct 1; only 1: trivial).	7.34577202797	20
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_cons_inv_r	40	0.0	search with cache (only 1: rewrite PCond_cons; only 1: now destruct 1).	1.98322200775	2
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.PCond_app	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.absurd_PCond_bottom	40	3.0	search with cache (only 1: intros; only 1: now destruct 1).	4.07636404037	11
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.default_isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.isIn_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok1	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_ok_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_l	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.split_nz_r	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fnorm_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_impl.fcons_ok	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.ceqb_spec'	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.MakeFieldPol.AlmostField.Fcons_simpl.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.Complete.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0333170890808	1
Coq.setoid_ring.Field_theory.Complete.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0346400737762	2
Coq.setoid_ring.Field_theory.Complete.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0278949737549	1
Coq.setoid_ring.Field_theory.Complete.AlmostField.add_inj_r	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.Complete.AlmostField.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.Complete.Field.ring_S_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.Complete.Field.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	3.7.1.0	search with cache (only 1: repeat split; only 1: congruence; only 1: intros n Hn; only 1: congruence).	1.79279112816	614
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_gen	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.same_genZ	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.match_compOpp	40	2.0.3.0.4.1	search with cache (only 1: induction x; only 1: reflexivity; only 1: intros; only 1: reflexivity; only 1: intros x y H7; only 1: reflexivity).	3.3861489296	947
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_ext	40	0.6.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0838439464569	9
Coq.setoid_ring.Ncring_initial.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40	0.0.0.0.0.0.0.2	search with cache (only 1: constructor; only 1: constructor; only 1: unfold Symmetric; only 1: auto; only 1: unfold Transitive; only 1: intros; only 1: subst; only 1: reflexivity).	0.0801420211792	10
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40
Coq.setoid_ring.Rings_R.R_one_zero	40	0	search with cache (only 1: auto with real).	0.0207319259644	1
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.Power.pow_pos_add	40
Coq.setoid_ring.Ring_theory.Power.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.0266470909119	4
Coq.setoid_ring.Ring_theory.DEFINITIONS.MORPHISM.get_sign_None_th	40	0	search with cache (only 1: now rewrite ?H, ?IHp).	0.0460081100464	1
Coq.setoid_ring.Ring_theory.DEFINITIONS.IDmorph	40	39	search with cache (only 1: firstorder).	1.3688659668	1286
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eqsth	40	2.2.2.11.1.1.1.8	search with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: congruence; only 1: intro n; only 1: intros x y; only 1: simple destruct 1; only 1: CRelationClasses.simpl_crelation).	7.19748091698	6278
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_s_ext	40	6.6.5	search with cache (only 1: split; only 1: solve_proper; only 1: solve_proper).	1.38332891464	638
Coq.setoid_ring.Ring_theory.ALMOST_RING.Eq_ext	40	0.0.0.53	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	1.17109799385	1612
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.radd_ext1_Proper	40	1	search with cache (only 1: firstorder).	0.0960829257965	11
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.rmul_ext1_Proper	40	3	search with cache (only 1: firstorder).	0.094456911087	12
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_ext	40	3	search with cache (only 1: firstorder).	0.0323550701141	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SReqe_Reqe	40	6	search with cache (only 1: firstorder).	0.0880060195923	20
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_mul_l	40	3	search with cache (only 1: reflexivity).	0.0244162082672	4
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRopp_add	40	0.7	search with cache (only 1: intros a b; only 1: reflexivity).	0.0342910289764	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.0253820419312	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRIDmorph	40	14	search with cache (only 1: now split).	0.925340890884	288
Coq.setoid_ring.Ring_theory.ALMOST_RING.SEMI_RING.SRmorph_Rmorph	40	4	search with cache (only 1: firstorder).	0.0536592006683	5
Coq.setoid_ring.Ring_theory.ALMOST_RING.radd_ext2_Proper	40	6.3.8	search with cache (only 1: intros x y EQ WF; only 1: intro; only 1: firstorder).	1.13409399986	298
Coq.setoid_ring.Ring_theory.ALMOST_RING.rmul_ext2_Proper	40	14.7	search with cache (only 1: intuition; only 1: firstorder).	2.00961089134	567
Coq.setoid_ring.Ring_theory.ALMOST_RING.ropp_ext2_Proper	40	11.2.9	search with cache (only 1: intro y0; only 1: intro Hxz; only 1: firstorder).	2.41077804565	1872
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_add	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Ropp_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cadd_ext_Proper	40	6.5.15	search with cache (only 1: intro H; only 1: intros; only 1: firstorder).	2.79502296448	541
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.cmul_ext_Proper	40	11.11	search with cache (only 1: intro H; only 1: firstorder).	0.911186218262	336
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.copp_ext_Proper	40	27	search with cache (only 1: firstorder).	3.2440700531	1483
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.phi_ext1_Proper	40	8	search with cache (only 1: auto).	0.0340230464935	9
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_opp	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.RING.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARth_SRth	40	51	search with cache (only 1: firstorder).	1.60448598862	1910
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_0_r	40	17.0.2	search with cache (only 1: elim ARth; only 1: intros; only 1: firstorder).	1.16221189499	643
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0455420017242	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0512290000916	1
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARdistr_r	40	0.0.12.0.0.7.1.0	search with cache (only 1: mrewrite; only 1: elim ARth; only 1: intros H1 H2 H3 n; only 1: elim ARth; only 1: intros; only 1: f_equiv; only 1: trivial; only 1: trivial).	26.1698300838	3950
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ALMOST_RING.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.ZMORPHISM.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0542240142822	1
Coq.setoid_ring.InitialRing.ZMORPHISM.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0379090309143	1
Coq.setoid_ring.InitialRing.ZMORPHISM.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0316410064697	1
Coq.setoid_ring.InitialRing.ZMORPHISM.get_signZ_th	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.rsub_ext3_Proper	40	0.2	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.0815489292145	4
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.same_gen	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.ALMOST_RING.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.ZMORPHISM.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0355219841003	1
Coq.setoid_ring.InitialRing.ZMORPHISM.same_genZ	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_ext	40	0.4.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0593781471252	7
Coq.setoid_ring.InitialRing.ZMORPHISM.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40	0.0.0.0.0.0.0.0.10.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: destruct n, m; only 1: now try N.order'; only 1: simpl; only 1: now try N.order'; only 1: simpl; only 1: congruence; only 1: simpl; only 1: rewrite Pos.eqb_eq; only 1: congruence).	7.54667806625	4102
Coq.setoid_ring.InitialRing.NMORPHISM.radd_ext4_Proper	40
Coq.setoid_ring.InitialRing.NMORPHISM.rmul_ext4_Proper	40	58.3	search with cache (only 1: intros x y H; only 1: firstorder).	38.8953461647	20128
Coq.setoid_ring.InitialRing.NMORPHISM.same_genN	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_add	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.NMORPHISM.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0409350395203	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0427041053772	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.034499168396	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0384809970856	1
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros w; only 1: induction w; only 1: intros n; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros n; only 1: destruct n; only 1: norm; only 1: norm).	6.7627120018	790
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwadd_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwopp_ok	40	1.0.0.1	search with cache (only 1: induction x as [| n x IHx]; only 1: norm; only 1: simpl; only 1: reflexivity).	0.130969047546	15
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwscal_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.Nwmul_ok	40
Coq.setoid_ring.InitialRing.NWORDMORPHISM.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.GEN_DIV.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0497488975525	1
Coq.setoid_ring.InitialRing.GEN_DIV.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0549368858337	2
Coq.setoid_ring.InitialRing.GEN_DIV.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0534431934357	3
Coq.setoid_ring.InitialRing.GEN_DIV.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0627858638763	4
Coq.setoid_ring.InitialRing.GEN_DIV.triv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.GEN_DIV.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring.cring_morph	40
Coq.setoid_ring.Cring.cring.cring_power_theory	40	0.0.57	search with cache (only 1: constructor; only 1: intros; only 1: reflexivity).	8.30567097664	1786
Coq.setoid_ring.Cring.cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40	22.0.20.17	search with cache (only 1: red; only 1: intros n m; only 1: apply Ncring_initial.Zsth; only 1: auto with zarith).	14.0982310772	6151
Coq.setoid_ring.Ring_polynom.MakeRingPol.radd_ext_Proper	40	14.12	search with cache (only 1: intros; only 1: firstorder).	1.73750686646	1314
Coq.setoid_ring.Ring_polynom.MakeRingPol.rmul_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ropp_ext_Proper	40	14.13.3.12	search with cache (only 1: intros n1 m1 H; only 1: elim ARth; only 1: intro n; only 1: firstorder).	5.18560695648	5147
Coq.setoid_ring.Ring_polynom.MakeRingPol.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_ext	40	12.3	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.98805713654	1354
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pinj_ext	40	13.3	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	2.87010717392	1021
Coq.setoid_ring.Ring_polynom.MakeRingPol.PX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.jump_add'	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Peq_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi0	40	95.5	search with cache (only 1: simpl; only 1: firstorder).	13.2639040947	21010
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi1	40	98.0	search with cache (only 1: simpl; only 1: firstorder).	19.2665398121	31283
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PsubC_ok	40	0.2.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	19.8460559845	2981
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Popp_ok	40	0.0.1.0.0.1.0.0.3.0.0.0.0	search with cache (only 1: revert l; only 1: induction P as [| | P2 IHP1 p P3 IHP2]; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	24.3795528412	4675
Coq.setoid_ring.Ring_polynom.MakeRingPol.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Padd_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_opp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Psub_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkX_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.POWER.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.NORM_SUBST_REC.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.EVALUATION.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.mkopp_pow_ok	40	0.0.0.1.0.2.0.0.0.0.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: now rewrite ?local_mkpow_ok).	26.0221409798	1566
Coq.setoid_ring.Ring_polynom.MakeRingPol.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.MakeRingPol.ring_rw_correct	40
Coq.setoid_ring.BinList.MakeBinList.jump_tl	40
Coq.setoid_ring.BinList.MakeBinList.jump_succ	40
Coq.setoid_ring.BinList.MakeBinList.jump_add	40
Coq.setoid_ring.BinList.MakeBinList.jump_pred_double	40
Coq.setoid_ring.BinList.MakeBinList.nth_jump	40
Coq.setoid_ring.BinList.MakeBinList.nth_pred_double	40
Coq.setoid_ring.Ncring.Ring.pow_pos_comm	40
Coq.setoid_ring.Ncring.Ring.pow_pos_succ	40
Coq.setoid_ring.Ncring.Ring.pow_pos_add	40
Coq.setoid_ring.Ncring.Ring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.0119850635529	1
Coq.setoid_ring.Ncring.Ring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.Ring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.Ring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.Ring.ring_opp_add	40
Coq.setoid_ring.Ncring.Ring.ring_opp_opp	40
Coq.setoid_ring.Ncring.Ring.ring_sub_ext	40	49	search with cache (only 1: firstorder).	17.5934917927	14843
Coq.setoid_ring.Ncring.Ring.ring_add_0_r	40	0.0.0.0	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.0433421134949	4
Coq.setoid_ring.Ncring.Ring.ring_add_assoc1	40	0.5.12.9.5.14	search with cache (only 1: intros; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_comm; only 1: rewrite ring_add_assoc; only 1: rewrite (ring_add_comm y); only 1: reflexivity).	32.1955151558	13434
Coq.setoid_ring.Ncring.Ring.ring_add_assoc2	40	0.0.0.8.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.354400873184	80
Coq.setoid_ring.Ncring.Ring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.1.2.3	search with cache (only 1: intros w1; only 1: intros Hn Hn'; only 1: apply Zeq_bool_eq; only 1: auto).	0.0515780448914	27
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0.0	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0267040729523	2
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	11	search with cache (only 1: intuition).	0.0261418819427	33
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0499169826508	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	6.0.1.4	search with cache (only 1: destruct s; only 1: eauto with *; only 1: simpl; only 1: intuition_in).	7.98520088196	325
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0	search with cache (only 1: destruct s; only 1: now auto; only 1: simpl; only 1: ok).	0.0282487869263	4
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.994684934616	686
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00884699821472	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0109889507294	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0315680503845	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.1.1.2.6.0	search with cache (only 1: induct s x; only 1: inv; only 1: intuition_in; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.735178947449	263
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.0107591152191	1
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.1.0.0.0	search with cache (only 1: induct s x; only 1: auto; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok; only 1: apply lbal_ok || apply rbal_ok || ok).	0.0977189540863	7
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.71	search with cache (only 1: intros a H; only 1: now simpl).	0.643110990524	3404
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	4.11.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	1.38939595222	596
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0161321163177	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0134570598602	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	7.2.1	search with cache (only 1: revert l1 l2; only 1: induction 1; only 1: now constructor).	0.214601039886	163
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.0.0.0.2	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.0067949295	249
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.1.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0491280555725	9
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.0.0.0.0.3.0.13	search with cache (only 1: inversion 1; only 1: invrb; only 1: trivial; only 1: invrb; only 1: destruct t as [| [| ] l x r]; only 1: invrb; only 1: invrb; only 1: auto; only 1: ok).	2.89038491249	2944
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0423591136932	8
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	95.19.0	search with cache (only 1: unfold singleton; only 1: red; only 1: ok).	18.2737059593	57018
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.7.0.26.0.6	search with cache (only 1: invrb; only 1: destruct t; only 1: now f_equal; only 1: simpl; only 1: invrb; only 1: auto).	18.8665339947	23266
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40	3.0.5.4.12	search with cache (only 1: induction s as [| c l IHl x r IHr]; only 1: reflexivity; only 1: descolor; only 1: destruct 1; only 1: firstorder  (subst; auto)).	32.8749401569	20193
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.3.3.1.0.2.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: Ltac.right; only 1: Ltac.assumption; only 1: intros; only 1: descolor; only 1: auto; only 1: ok).	2.00957512856	1668
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	4.0	search with cache (only 1: invrb; only 1: auto).	0.0132668018341	6
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0	search with cache (only 1: now Nat.nzsimpl).	0.021430015564	1
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	1.0.1.1.0	search with cache (only 1: intros [| x acc]; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: auto).	0.0363249778748	8
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	3.3	search with cache (only 1: unfold partition, filter; only 1: auto_tc).	0.0148351192474	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.2.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0188539028168	7
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.5.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.114969015121	24
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.0.1.0.0.0.0.5	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.811948060989	451
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.114307165146	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	1.1.7.0.0.12.1	search with cache (only 1: unfold union; only 1: intuition; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	15.6286821365	12316
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.1.4.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.18825507164	130
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.0.10.0.0.0	search with cache (only 1: intros; only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.10808897018	1512
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	2.2.1	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.168268918991	25
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	44	search with cache (only 1: firstorder).	0.689065933228	990
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	5.2.4	search with cache (only 1: intro n; only 1: fix even_spec 1; only 1: easy).	1.13901805878	295
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: now intro n; induction n).	0.0418751239777	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	12.38	search with cache (only 1: intros EQ; only 1: now discriminate).	0.897170066833	1537
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40	8.2	search with cache (only 1: fix odd_spec 1; only 1: destr_bool).	1.07856702805	292
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.3	search with cache (only 1: intros; only 1: now rewrite ?Pos.square_xO).	0.213876008987	20
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	1.4.0.1.0.7	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: fix even_spec 1; only 1: now split; only 1: fix odd_spec 1; only 1: destr_bool).	4.35115718842	1708
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	8	search with cache (only 1: destr_bool).	0.114603042603	36
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: easy'; only 1: easy'; only 1: easy'; only 1: easy').	0.122225046158	5
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.105499982834	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lxl	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_gxg	40	13.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.967333078384	546
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0580809116364	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0622780323029	4
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare_bool	40	0.0.0.0.0.0.0.0.1.17	search with cache (only 1: intro l; only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	2.60805296898	1949
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_Leaf	40	1.2.1.5.2	search with cache (only 1: unfold compare, equal; only 1: intro n; only 1: induction n; only 1: Ltac.reflexivity || destruct H; only 1: ct).	1.37199115753	409
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.lt_spec.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40	7.3.7.3	search with cache (only 1: intro l; only 1: intro; only 1: fix odd_spec 1; only 1: intuition discriminate).	9.18062210083	3986
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40	7.2.2.12	search with cache (only 1: intro H; only 1: intro l; only 1: fix even_spec 1; only 1: auto).	13.3854391575	5630
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0511069297791	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.In_1	40	6.48.1	search with cache (only 1: intros H; only 1: rewrite H  at 1; only 1: auto with *).	2.62066197395	7029
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0505731105804	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.add_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_2	40	1.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0544009208679	5
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.remove_3	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0475211143494	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.union_3	40	1.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0506029129028	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0484700202942	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.inter_3	40	0.0.9	search with cache (only 1: intro Hxy; only 1: rewrite inter_spec; only 1: auto).	0.158204078674	61
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0495698451996	2
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.diff_3	40	0.1	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0571970939636	3
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0744841098785	4
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.ImplSpec.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.In_eq_iff	40	0.0.0.0.1.0	search with cache (only 1: intros E; only 1: split; only 1: rewrite E; only 1: auto; only 1: rewrite E; only 1: auto).	0.0956680774689	15
Coq.MSets.MSetFacts.WFactsOn.IffSpec.mem_iff	40	13	search with cache (only 1: intuition).	0.174400091171	101
Coq.MSets.MSetFacts.WFactsOn.IffSpec.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.equal_iff	40	1	search with cache (only 1: intuition).	0.052964925766	2
Coq.MSets.MSetFacts.WFactsOn.IffSpec.subset_iff	40	0	search with cache (only 1: intuition).	0.0518758296967	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.is_empty_iff	40	0	search with cache (only 1: intuition).	0.0519161224365	1
Coq.MSets.MSetFacts.WFactsOn.IffSpec.singleton_iff	40	6.1	search with cache (only 1: compute; only 1: intuition).	0.0425040721893	9
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_iff	40
Coq.MSets.MSetFacts.WFactsOn.IffSpec.add_neq_iff	40	6.4.9.1.0	search with cache (only 1: rewrite add_spec; only 1: intros; only 1: reduce in H; only 1: rewrite <- mem_spec; only 1: intuition).	11.1620571613	5722
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_iff	40	0.0.0.0.9	search with cache (only 1: split; only 1: rewrite remove_spec; only 1: intros [? ?]; only 1: auto with relations; only 1: intuition).	0.531637907028	105
Coq.MSets.MSetFacts.WFactsOn.IffSpec.remove_neq_iff	40	2.1.7	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.486529827118	150
Coq.MSets.MSetFacts.WFactsOn.IffSpec.for_all_iff	40	6	search with cache (only 1: intuition).	0.0977411270142	7
Coq.MSets.MSetFacts.WFactsOn.IffSpec.exists_iff	40	2	search with cache (only 1: intuition).	0.147327899933	16
Coq.MSets.MSetFacts.WFactsOn.IffSpec.elements_iff	40	1	search with cache (only 1: intuition).	0.037887096405	2
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.add_neq_b	40	0.0.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	2.40467905998	238
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.remove_neq_b	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intuition; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.93323397636	205
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.union_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.BoolSpec.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	14.6.10.10	search with cache (only 1: intro n; only 1: unfold Equal; only 1: intros; only 1: firstorder).	12.723181963	12718
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	7.2.0	search with cache (only 1: unfold Equal; only 1: unfold flip, respectful; only 1: firstorder).	0.619863986969	119
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	43	search with cache (only 1: firstorder).	22.0913248062	19680
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	3.5.0.4.2	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: eauto; only 1: now rewrite <- Hx).	18.5413689613	1911
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	5.9	search with cache (only 1: intros EQ; only 1: firstorder).	0.939923048019	483
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.1.0.0.6.1.3.2.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite remove_spec; only 1: intros; only 1: elim H; only 1: elim H; only 1: rewrite !remove_iff, Hx, Hs; only 1: constructor; only 1: auto; only 1: intuition).	27.1455359459	5101
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.107464075089	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.1.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0809960365295	4
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0832710266113	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.8	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	1.43559193611	186
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_refl	40	25	search with cache (only 1: reflexivity).	0.657279968262	306
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_sym	40	0	search with cache (only 1: intuition).	0.0482861995697	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.equal_trans	40	0.9	search with cache (only 1: intros H1; only 1: fsetdec).	0.184864044189	21
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0615818500519	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0946650505066	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_antisym	40	0.0.5.2	search with cache (only 1: intuition; only 1: intros n'; only 1: repeat red; only 1: intuition).	0.153088092804	29
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0805230140686	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0620231628418	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.143481016159	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_diff	40	0.4	search with cache (only 1: intros; only 1: fsetdec).	0.117466211319	6
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.13688993454	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0995061397552	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.in_subset	40	0	search with cache (only 1: fsetdec).	0.103884935379	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.double_inclusion	40	0.0.0.1.2.4	search with cache (only 1: split; only 1: intros; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.974462985992	82
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.110606908798	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0990900993347	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_equal	40	1.0	search with cache (only 1: intros; only 1: fsetdec).	0.164526939392	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_add	40	0	search with cache (only 1: fsetdec).	0.246222019196	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_equal	40	1	search with cache (only 1: fsetdec).	0.175123929977	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.232161998749	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_remove	40	0	search with cache (only 1: fsetdec).	0.222409009933	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_add	40	0	search with cache (only 1: fsetdec).	0.243697881699	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.142025947571	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_singleton_empty	40	1	search with cache (only 1: fsetdec).	0.393038988113	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_sym	40	0	search with cache (only 1: fsetdec).	0.15562415123	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.149856090546	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.189433097839	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.186007022858	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_assoc	40	0	search with cache (only 1: fsetdec).	0.259198904037	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.167500972748	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_add	40	0	search with cache (only 1: fsetdec).	0.28994512558	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_1	40	4.11	search with cache (only 1: intros H; only 1: fsetdec).	3.68816995621	169
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.402060985565	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0767660140991	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0753679275513	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.111824035645	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.114245891571	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.114573955536	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.143451929092	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.13560795784	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.not_in_union	40	1.0	search with cache (only 1: rewrite union_spec; only 1: intuition).	0.088397026062	3
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_sym	40	0	search with cache (only 1: fsetdec).	0.142101049423	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.130928039551	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.166026115417	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.172802209854	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.211369991302	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.292850971222	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.324308872223	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.273348093033	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.209640979767	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0981471538544	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.102566957474	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0815458297729	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0813679695129	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.103896141052	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.114861965179	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.164577960968	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0943858623505	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.180275917053	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.179978132248	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.256799221039	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.228509187698	1
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_add	40	0.0.0.1	search with cache (only 1: unfold Add; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.132839918137	5
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.Add_remove	40	0.0.5	search with cache (only 1: intuition; only 1: expAdd; only 1: fsetdec).	0.26860499382	8
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.526359081268	2
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.union_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.BasicProperties.inter_Add_2	40	1.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.519512891769	3
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40	0.7.7.2	search with cache (only 1: intros n m; only 1: revert n; only 1: fix even_spec 1; only 1: auto).	16.4989728928	5177
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40	2.2.3	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: auto).	0.142503976822	27
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_nodep	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_identity	40	0.2.0.6.2.1.0	search with cache (only 1: intro n; only 1: apply fold_rec_bis; only 1: intros; only 1: fsetdec; only 1: red; only 1: intuition; only 1: fsetdec).	12.7027060986	3300
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1	40	2.0.2.1	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intuition; only 1: fsetdec).	0.35765004158	37
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_1b	40	2.0.0.0.8	search with cache (only 1: intros l' d d' Hlen Hnth; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: fsetdec).	1.51911401749	542
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_empty	40	9.8.0.1	search with cache (only 1: intros; only 1: apply fold_1; only 1: eauto with *; only 1: eauto with *).	11.8168618679	4165
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	0.083300113678	3
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.Fold_More.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.Fold.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40	0.0.0.0.20	search with cache (only 1: intro; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: now destruct l).	4.79736590385	1293
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	5.0	search with cache (only 1: intros n m Hn; only 1: intuition).	0.0629260540009	7
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.1.0.11	search with cache (only 1: intro H2; only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	1.42467498779	771
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros n m ?; only 1: auto with set).	0.0677840709686	3
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0931830406189	3
Coq.MSets.MSetProperties.OrdProperties.FoldOpt.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0942759513855	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	8	search with cache (only 1: intuition).	0.0806918144226	16
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.1.0.1.22	search with cache (only 1: constructor 2; only 1: ok; only 1: intuition_in; only 1: ok; only 1: auto).	6.91289401054	672
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0450229644775	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	0.0.0.0	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.078449010849	4
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto with *).	0.323390960693	70
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0822088718414	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	0.0972518920898	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_mem_2	40	5.4.13	search with cache (only 1: intros H l; only 1: intros; only 1: eauto with set relations).	39.8795421124	22535
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_1	40	1.2.1.1	search with cache (only 1: intros; only 1: generalize (empty_iff y), (mem_iff empty y); only 1: do 2 rewrite <- mem_iff; only 1: intuition).	0.235341072083	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0154700279236	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_1	40	0.0.0.2	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.151604175568	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.172714948654	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_1	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.110175848007	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	0.0928339958191	9
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_equal_add	40	0.0.1.0.0.0	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: auto; only 1: intros; only 1: auto with set).	0.0333859920502	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_3	40	1.1.2.2	search with cache (only 1: generalize (mem_iff s x), (elements_iff s x), (existsb_exists (eqb x) (elements s)); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.13203287125	299
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.mem_4	40	0.2.1	search with cache (only 1: rewrite <- mem_spec; only 1: intuition; only 1: congruence).	0.0919501781464	25
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_refl	40	5.0	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition).	0.0710210800171	26
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_sym	40	2.1.0.2.1.0.0.2	search with cache (only 1: apply eq_true_iff_eq; only 1: split; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	12.6189789772	2156
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_equal	40	0.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0255520343781	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0200390815735	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_refl	40	1	search with cache (only 1: auto with set).	0.0125391483307	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_antisym	40	3.0	search with cache (only 1: intros; only 1: auto with set).	0.0206718444824	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.subset_equal	40	2.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0254139900208	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_mem_3	40	0.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0169968605042	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_equal	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0164401531219	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_equal	40	2.0.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.157106161118	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_1	40	2.2.0.0	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	0.519799947739	83
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_2	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	1.65384578705	354
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.singleton_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_sym	40	0	search with cache (only 1: auto with set).	0.0114300251007	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0340969562531	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0149619579315	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0119390487671	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_assoc	40	0	search with cache (only 1: auto with set).	0.0112721920013	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.053897857666	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_add	40	0	search with cache (only 1: auto with set).	0.0126700401306	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_1	40	1	search with cache (only 1: auto with set).	0.0123479366302	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_2	40	0	search with cache (only 1: auto with set).	0.0108280181885	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0670201778412	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_sym	40	0	search with cache (only 1: auto with set).	0.0116641521454	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0143859386444	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0119259357452	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0117211341858	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0112750530243	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_1	40	0	search with cache (only 1: auto with set).	0.0117609500885	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0117719173431	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0137360095978	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_add_2	40	0.1.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: auto with set).	0.3958568573	38
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0114898681641	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0117120742798	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0321021080017	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset	40	0	search with cache (only 1: auto with set).	0.010910987854	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0130560398102	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.remove_inter_singleton	40	0	search with cache (only 1: auto with set).	0.0123338699341	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_empty	40	0	search with cache (only 1: auto with set).	0.0114290714264	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.BasicProperties.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0112390518188	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0909569263458	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_equal	40	2.0.0.0.1.6	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	16.4876379967	3974
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_add	40	0.9.0.0.0.0.1	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: eauto with *; only 1: auto with set).	15.973072052	5913
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_1	40	1.2.0.0.0.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	2.94651389122	833
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Fold.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	2.0	search with cache (only 1: intros; only 1: auto with set).	0.0921761989594	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0571148395538	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0543959140778	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.4.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: intuition; only 1: congruence; only 1: auto; only 1: auto).	0.856430053711	344
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	5.0	search with cache (only 1: intros; only 1: auto with set).	0.101438045502	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.Comp'	40	7	search with cache (only 1: solve_proper).	0.137652873993	15
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_1	40	17.0	search with cache (only 1: intros; only 1: auto with set).	1.59849214554	1019
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0159838199615	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.add_filter_2	40	0.0.0.0.0.0.0.0.1.0.0.0.1.0.1.0.3.0	search with cache (only 1: unfold Add, MP.Add; only 1: split; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: auto; only 1: auto; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	38.1860859394	11457
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.filter_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_1	40	6.1.1.0.0.7	search with cache (only 1: intros m Hm; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intro H; only 1: auto with set).	1.4341840744	929
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_2	40	0.1.6.3.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.215937852859	173
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0292158126831	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Bool'.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Sum.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: eauto).	0.0146398544312	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.3.0	search with cache (only 1: unfold decidable; only 1: intros a b c Hb; only 1: firstorder).	1.02453899384	6
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	4.0.3.2	search with cache (only 1: split; only 1: intros; only 1: auto with relations; only 1: intuition).	0.1292719841	99
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	3.0.1	search with cache (only 1: intro; only 1: rewrite singleton_spec; only 1: intuition).	0.0177369117737	16
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0322098731995	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0.24.5	search with cache (only 1: unfold Equal, Subset; only 1: intros EQ; only 1: fsetdec).	6.24854707718	6089
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0486390590668	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0870189666748	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0732579231262	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	7.1.1.20	search with cache (only 1: intro x; only 1: intros n m IH H1; only 1: rewrite add_spec; only 1: intuition).	19.1803309917	9361
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.132565021515	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.168674230576	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.8.0.3	search with cache (only 1: intros a b c d ? ?; only 1: intros; only 1: apply H0; only 1: intuition; only 1: eauto with set).	1.02331399918	761
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	3.3.27	search with cache (only 1: intros x y H; only 1: intros n' m; only 1: fsetdec).	4.07581305504	4603
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0474011898041	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.035010099411	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	10.3.8	search with cache (only 1: intro m; only 1: fix odd_spec 1; only 1: intuition_in).	12.8052580357	6961
Coq.MSets.MSetGenTree.Props.isok_iff	40	5.0.3	search with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	0.338479995728	91
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	search with cache (only 1: intros a b c Hb H; only 1: intuition_in).	0.0726521015167	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0353090763092	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	1.10	search with cache (only 1: CRelationClasses.simpl_crelation; only 1: easy).	0.485614061356	343
Coq.MSets.MSetGenTree.Props.gt_leaf	40	2	search with cache (only 1: inversion 1).	0.0387260913849	20
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.3.3.0	search with cache (only 1: intros; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.153873205185	13
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.4.9.1	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	1.71664404869	662
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.6.2.8.6	search with cache (only 1: intros; only 1: red; only 1: intros H0; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	4.05061507225	3582
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	12	search with cache (only 1: eauto using Nat.Private_OrderTac.Tac.eq_trans, Nat.Private_OrderTac.Tac.eq_sym).	0.44716501236	188
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0291121006012	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.0196640491486	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0920839309692	19
Coq.MSets.MSetGenTree.Props.empty_spec	40	23	search with cache (only 1: firstorder).	0.119116067886	255
Coq.MSets.MSetGenTree.Props.empty_ok	40	2	search with cache (only 1: auto).	0.0160720348358	3
Coq.MSets.MSetGenTree.Props.is_empty_spec	40	7.1.5	search with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: auto).	4.69753503799	1698
Coq.MSets.MSetGenTree.Props.mem_spec	40	7.8	search with cache (only 1: fix even_spec 1; only 1: trivial).	2.12777113914	883
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction max_elt s; only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.361957073212	76
Coq.MSets.MSetGenTree.Props.choose_spec1	40	1.0.0.0.0.4.0.4.26	search with cache (only 1: intro; only 1: functional induction min_elt s; only 1: intros; only 1: discriminate; only 1: inversion 1; only 1: auto; only 1: rename _x0 into r; only 1: intros; only 1: auto).	36.4040679932	35236
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40	51	search with cache (only 1: firstorder).	6.99921512604	9002
Coq.MSets.MSetGenTree.Props.eq_Leq	40	2.6.3.0	search with cache (only 1: intros n m; only 1: revert m; only 1: fix odd_spec 1; only 1: auto).	3.30987286568	1411
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40	2.1.6	search with cache (only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	1.50423693657	502
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	0.2.3.2.3.3.32.0	search with cache (only 1: split; only 1: Ltac.split; only 1: auto; only 1: auto; only 1: intro l; only 1: firstorder; only 1: intro l; only 1: firstorder).	5.06080818176	4585
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40	5.14.5.10.0	search with cache (only 1: intro n; only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: destr_bool).	23.359003067	23433
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.Spec.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.Spec.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	6.3.1.2.1.0.16	search with cache (only 1: Ltac.split; only 1: intro l; only 1: intros Hincl; only 1: reflexivity; only 1: intro l; only 1: firstorder; only 1: firstorder).	4.21951889992	1876
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	28	search with cache (only 1: firstorder).	11.1437950134	8967
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.0	search with cache (only 1: intros; only 1: auto with *).	0.0567200183868	2
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	3.0	search with cache (only 1: intros; only 1: Dec.fsetdec).	0.130315065384	5
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	12.0.7.5.2.3	search with cache (only 1: intros m Hm; only 1: red; only 1: intuition; only 1: red; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder).	17.2075941563	9896
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.5.0	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intros; only 1: intuition).	0.114075899124	14
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.In_compat	40	8	search with cache (only 1: solve_proper).	0.671154022217	46
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.mem_spec	40	2.12	search with cache (only 1: fix even_spec 1; only 1: intuition).	0.890413999557	543
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.isok_Ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_ok	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0172970294952	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_ok	40	0.1	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0182089805603	3
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.empty_spec	40	0.1.5.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0383079051971	10
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec1	40	3.1	search with cache (only 1: intros; only 1: intuition).	0.0994729995728	53
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.elements_spec2w	40	2.2.0.0	search with cache (only 1: intros; only 1: induction s; only 1: intuition; only 1: auto).	0.0414760112762	11
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.fold_spec	40	2.0	search with cache (only 1: unfold elements; only 1: constructors).	0.0136301517487	4
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.choose_spec2	40	2.0.1.4.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: induction s; only 1: intro; only 1: intro; only 1: inv; only 1: inversion H).	2.36926794052	1158
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.cardinal_spec	40	0.0	search with cache (only 1: unfold elements; only 1: auto).	0.0193121433258	2
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inf_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_iff	40
Coq.MSets.MSetList.MakeRaw.ForNotations.isok_Ok	40	7	search with cache (only 1: Ltac.assumption).	0.0283479690552	8
Coq.MSets.MSetList.MakeRaw.ForNotations.mem_spec	40	0.0.2.6	search with cache (only 1: intros x l; only 1: fix odd_spec 1; only 1: intro n; only 1: auto).	1.58133792877	243
Coq.MSets.MSetList.MakeRaw.ForNotations.add_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.add_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_ok	40	0.0.0.0.0.0.0.2.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: inv; only 1: auto; only 1: inv; only 1: auto).	10.0453939438	1986
Coq.MSets.MSetList.MakeRaw.ForNotations.remove_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_ok	40	0	search with cache (only 1: intuition).	0.0366971492767	1
Coq.MSets.MSetList.MakeRaw.ForNotations.singleton_spec	40	0.4.5.3	search with cache (only 1: intros; only 1: unfold singleton; only 1: rewrite InA_cons, InA_nil; only 1: intuition).	1.956772089	438
Coq.MSets.MSetList.MakeRaw.ForNotations.union_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.union_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.inter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_inf	40	1.0.2.10.0	search with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	9.61494088173	1665
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.181480884552	3
Coq.MSets.MSetList.MakeRaw.ForNotations.diff_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.equal_spec	40	1.5.11	search with cache (only 1: intro m; only 1: fix even_spec 1; only 1: intuition).	10.41152215	3302
Coq.MSets.MSetList.MakeRaw.ForNotations.subset_spec	40	5.11	search with cache (only 1: fix odd_spec 1; only 1: intuition).	28.9704139233	6541
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_ok	40	37	search with cache (only 1: auto).	0.430402040482	696
Coq.MSets.MSetList.MakeRaw.ForNotations.empty_spec	40	10.28	search with cache (only 1: intro n; only 1: inversion 1).	1.29394698143	1021
Coq.MSets.MSetList.MakeRaw.ForNotations.is_empty_spec	40	8.1.1	search with cache (only 1: fix odd_spec 1; only 1: intro m; only 1: trivial).	1.67295885086	486
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec1	40	4.2.0	search with cache (only 1: induction s; only 1: intuition; only 1: intuition).	0.135043859482	14
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2	40	2.8.0	search with cache (only 1: intro H; only 1: repeat rewrite <- isok_iff; only 1: intuition).	0.287558078766	89
Coq.MSets.MSetList.MakeRaw.ForNotations.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0594818592072	3
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec1	40	0.6.0.1.23	search with cache (only 1: intros [| a l] H; only 1: discriminate; only 1: simpl; only 1: inversion_clear 1; only 1: auto).	6.82823610306	3348
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.min_elt_spec3	40	0.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: discriminate).	0.0623831748962	6
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.ForNotations.fold_spec	40	1.0	search with cache (only 1: intro l; only 1: intuition).	0.0838129520416	3
Coq.MSets.MSetList.MakeRaw.ForNotations.cardinal_spec	40	1.0	search with cache (only 1: intros n H; only 1: intuition).	0.0858631134033	3
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_inf	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_ok	40
Coq.MSets.MSetList.MakeRaw.ForNotations.filter_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.exists_spec	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.ForNotations.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	4	search with cache (only 1: solve_proper).	0.194015979767	33
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: now Z.nzsimpl).	0.0271790027618	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40	4.22.1	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	34.9172821045	12372
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Trans.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_r_clos_rt	40	0.0.5.12.0	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.202059030533	445
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rt_t	40
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_is_equiv	40	3.0.0.1.8.6.1.1.10	search with cache (only 1: constructor; only 1: red; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	30.0394029617	31477
Coq.Relations.Operators_Properties.Properties.Clos_Refl_Sym_Trans.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_t1n_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_tn1_trans	40	0.2.0.1.0.0.8.40	search with cache (only 1: intro H1; only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	5.63372898102	14640
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_step	40	0.0.0.15.5	search with cache (only 1: intro y0; only 1: intro; only 1: right with y; only 1: auto; only 1: left).	0.195011854172	449
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_step	40	1.0.5.5.27.6	search with cache (only 1: intro y0; only 1: intro p; only 1: intro H; only 1: right with y0; only 1: auto; only 1: left).	3.34604501724	9695
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt1n_rt	40	0.0.1.0.2	search with cache (only 1: induction 1 as [x y H| x y z H IHclos_trans1 H0 IHclos_trans2]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.0469360351562	46
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rtn1_rt	40	0.2.0.0.0.3	search with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.101894855499	65
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.Properties.Equivalences.rt1n_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_trans	40	0.4.1.0.24	search with cache (only 1: induction 1 as [? ?| ]; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	9.92769193649	19573
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_rst	40	0.0.0.0.1.2.0.0.0.5	search with cache (only 1: induction 1 as [y H| y z H H0 ?]; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	5.51857304573	3145
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.Properties.Equivalences.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.0.2.0.3.2.1.0.1	search with cache (only 1: intros; only 1: split; only 1: split; only 1: red; only 1: destruct 2; only 1: assumption; only 1: red; only 1: destruct 1; only 1: trivial).	0.627301931381	862
Coq.ssr.ssreflect.master_key	40	4	search with cache (only 1: Ltac.reflexivity).	0.0102388858795	13
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0284008979797	14
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.00820183753967	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.0.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto).	0.0909850597382	3
Coq.ssr.ssreflect.ApplyIff.iffLR	40	0	search with cache (only 1: intuition).	0.0881190299988	1
Coq.ssr.ssreflect.ApplyIff.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.0873248577118	1
Coq.ssr.ssreflect.ApplyIff.iffLRn	40	2	search with cache (only 1: intuition).	0.0133788585663	3
Coq.ssr.ssreflect.ApplyIff.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00684714317322	1
Coq.ssr.ssreflect.abstract_context	40	2.111.175	search with cache (only 1: intro H; only 1: apply H; only 1: Ltac.split).	23.2747070789	286011
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0170478820801	1
Coq.ssr.ssrbool.is_true_true	40	15	search with cache (only 1: reflexivity).	0.0249660015106	91
Coq.ssr.ssrbool.not_false_is_true	40	0	search with cache (only 1: intuition).	0.0102381706238	1
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.0130338668823	2
Coq.ssr.ssrbool.negbT	40	4	search with cache (only 1: Bool.destr_bool).	0.0162410736084	11
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.0122871398926	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.0134451389313	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.0124480724335	1
Coq.ssr.ssrbool.negbK	40	4.73	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.726053953171	3623
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.0112969875336	1
Coq.ssr.ssrbool.negb_inj	40	10.36	search with cache (only 1: intros b b'; only 1: Bool.destr_bool).	0.750362157822	1435
Coq.ssr.ssrbool.negbLR	40	0.0.3	search with cache (only 1: destruct c; only 1: by case : b ; only 1: by case : b ).	0.0853538513184	13
Coq.ssr.ssrbool.negbRL	40	10	search with cache (only 1: Bool.destr_bool).	0.075984954834	33
Coq.ssr.ssrbool.contra	40	4.10	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.326022863388	122
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0192701816559	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0188050270081	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0189189910889	1
Coq.ssr.ssrbool.contraT	40	1.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.307569980621	133
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  =>// ->).	0.0162758827209	1
Coq.ssr.ssrbool.contraFT	40	2.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.61016702652	168
Coq.ssr.ssrbool.contraFN	40	2.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.761153936386	211
Coq.ssr.ssrbool.contraTF	40	2.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.524305105209	129
Coq.ssr.ssrbool.contraNF	40	2.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.63200712204	148
Coq.ssr.ssrbool.contraFF	40	1.4.23	search with cache (only 1: destruct c; only 1: by case : b  =>// ->; only 1: by move /contra =>notb_notc /negbT).	1.42198514938	994
Coq.ssr.ssrbool.contra_not	40	0.5	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.018171787262	7
Coq.ssr.ssrbool.contraPnot	40	0	search with cache (only 1: by auto).	0.0141038894653	1
Coq.ssr.ssrbool.contraTnot	40	0.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.329493045807	108
Coq.ssr.ssrbool.contraNnot	40	0	search with cache (only 1: by case : b ; auto).	0.0151889324188	1
Coq.ssr.ssrbool.contraPT	40	0.12.24.1	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	3.43742585182	3365
Coq.ssr.ssrbool.contra_notT	40	0.14.13.2	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: red; only 1: intuition).	4.49798202515	2731
Coq.ssr.ssrbool.contra_notN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.0247859954834	1
Coq.ssr.ssrbool.contraPN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) nP /nP).	0.0252981185913	1
Coq.ssr.ssrbool.contraFnot	40	0	search with cache (only 1: by case : b ; auto).	0.0217289924622	1
Coq.ssr.ssrbool.contraPF	40	0	search with cache (only 1: by case : b  =>//=; move /(_ isT) =>HP /HP).	0.0227491855621	1
Coq.ssr.ssrbool.contra_notF	40	0	search with cache (only 1: by case : b  =>// /(_ isT)).	0.0233261585236	1
Coq.ssr.ssrbool.BoolIf.ifP	40
Coq.ssr.ssrbool.BoolIf.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.0287919044495	1
Coq.ssr.ssrbool.BoolIf.ifT	40	1	search with cache (only 1: by case : b ).	0.0336809158325	2
Coq.ssr.ssrbool.BoolIf.ifF	40	0	search with cache (only 1: by move ->).	0.0242509841919	1
Coq.ssr.ssrbool.BoolIf.ifN	40	2	search with cache (only 1: by case : b ).	0.0317070484161	3
Coq.ssr.ssrbool.BoolIf.if_same	40	0	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.0222799777985	1
Coq.ssr.ssrbool.BoolIf.if_neg	40	1	search with cache (only 1: by case b).	0.0298120975494	2
Coq.ssr.ssrbool.BoolIf.fun_if	40	0	search with cache (only 1: by case b).	0.0224599838257	1
Coq.ssr.ssrbool.BoolIf.if_arg	40	0	search with cache (only 1: by case b).	0.0233080387115	1
Coq.ssr.ssrbool.BoolIf.ifE	40	12	search with cache (only 1: trivial).	0.086727142334	46
Coq.ssr.ssrbool.ReflectCore.introNTF	40
Coq.ssr.ssrbool.ReflectCore.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.038202047348	1
Coq.ssr.ssrbool.ReflectCore.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0327680110931	1
Coq.ssr.ssrbool.ReflectCore.elimTF	40	0	search with cache (only 1: by move <-; case Hb).	0.0223789215088	1
Coq.ssr.ssrbool.ReflectCore.equivPif	40
Coq.ssr.ssrbool.ReflectCore.xorPif	40	0.0.30	search with cache (only 1: intuition; only 1: by case Hb; auto; only 1: by case Hb; auto).	8.34032607079	572
Coq.ssr.ssrbool.ReflectNegCore.introTFn	40	0.27	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	15.7976419926	607
Coq.ssr.ssrbool.ReflectNegCore.elimTFn	40	0.27	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by move <-; case Hb).	1.29293704033	536
Coq.ssr.ssrbool.ReflectNegCore.equivPifn	40
Coq.ssr.ssrbool.ReflectNegCore.xorPifn	40	0.21	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by <ssreflect_plugin::ssrtclintros@0> case Hb =>[? _ H ?|? H _]; case : H ).	0.513820171356	231
Coq.ssr.ssrbool.Reflect.introT	40
Coq.ssr.ssrbool.Reflect.introF	40
Coq.ssr.ssrbool.Reflect.introN	40
Coq.ssr.ssrbool.Reflect.introNf	40
Coq.ssr.ssrbool.Reflect.introTn	40
Coq.ssr.ssrbool.Reflect.introFn	40
Coq.ssr.ssrbool.Reflect.elimT	40
Coq.ssr.ssrbool.Reflect.elimF	40
Coq.ssr.ssrbool.Reflect.elimN	40
Coq.ssr.ssrbool.Reflect.elimNf	40
Coq.ssr.ssrbool.Reflect.elimTn	40
Coq.ssr.ssrbool.Reflect.elimFn	40
Coq.ssr.ssrbool.Reflect.introP	40
Coq.ssr.ssrbool.Reflect.iffP	40
Coq.ssr.ssrbool.Reflect.equivP	40	0.21	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.421865940094	231
Coq.ssr.ssrbool.Reflect.sumboolP	40
Coq.ssr.ssrbool.Reflect.appP	40
Coq.ssr.ssrbool.Reflect.sameP	40
Coq.ssr.ssrbool.Reflect.decPcases	40
Coq.ssr.ssrbool.Reflect.decP	40	16	search with cache (only 1: by case : Pb ; constructor; auto).	0.128974914551	108
Coq.ssr.ssrbool.Reflect.rwP	40	13	search with cache (only 1: by case : Pb ; constructor; auto).	0.0916860103607	60
Coq.ssr.ssrbool.Reflect.rwP2	40
Coq.ssr.ssrbool.Reflect.altP	40
Coq.ssr.ssrbool.impliesP	40	6.56	search with cache (only 1: destruct 1; only 1: auto).	2.13466906548	5502
Coq.ssr.ssrbool.impliesPn	40	2.16.8.32	search with cache (only 1: red; only 1: Bool.destr_bool; only 1: destruct H; only 1: tauto).	3.65556406975	4217
Coq.ssr.ssrbool.unlessL	40	7.3.35.2	search with cache (only 1: Ltac.split; only 1: red; only 1: intros; only 1: auto).	1.3082818985	2528
Coq.ssr.ssrbool.unlessR	40	11.26.2	search with cache (only 1: repeat Ltac.split; only 1: red; only 1: by auto).	1.45535683632	2860
Coq.ssr.ssrbool.unless_sym	40	2.0.9.19.37.3	search with cache (only 1: Ltac.split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	2.46421909332	6444
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.11	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.076712846756	46
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.AllAnd.all_and2	40	1.0.2.1.0.1.0	search with cache (only 1: repeat Ltac.split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	0.555193901062	204
Coq.ssr.ssrbool.AllAnd.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0243082046509	1
Coq.ssr.ssrbool.AllAnd.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0282161235809	1
Coq.ssr.ssrbool.AllAnd.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0328698158264	1
Coq.ssr.ssrbool.pair_andP	40	7	search with cache (only 1: intuition).	0.170068025589	25
Coq.ssr.ssrbool.ReflectConnectives.idP	40	5.0.8	search with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	0.186547994614	130
Coq.ssr.ssrbool.ReflectConnectives.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.0186991691589	1
Coq.ssr.ssrbool.ReflectConnectives.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.021754026413	1
Coq.ssr.ssrbool.ReflectConnectives.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0215439796448	1
Coq.ssr.ssrbool.ReflectConnectives.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.0173299312592	1
Coq.ssr.ssrbool.ReflectConnectives.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.0222041606903	1
Coq.ssr.ssrbool.ReflectConnectives.andP	40
Coq.ssr.ssrbool.ReflectConnectives.and3P	40
Coq.ssr.ssrbool.ReflectConnectives.and4P	40
Coq.ssr.ssrbool.ReflectConnectives.and5P	40
Coq.ssr.ssrbool.ReflectConnectives.orP	40
Coq.ssr.ssrbool.ReflectConnectives.or3P	40
Coq.ssr.ssrbool.ReflectConnectives.or4P	40
Coq.ssr.ssrbool.ReflectConnectives.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0335409641266	1
Coq.ssr.ssrbool.ReflectConnectives.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0320279598236	1
Coq.ssr.ssrbool.ReflectConnectives.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0254228115082	1
Coq.ssr.ssrbool.andTb	40	7	search with cache (only 1: constructor).	0.0242700576782	8
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.023875951767	1
Coq.ssr.ssrbool.andbT	40	5.14	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.238208055496	201
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.0288000106812	2
Coq.ssr.ssrbool.andbb	40	2.5	search with cache (only 1: intro b1; only 1: by case b1; constructor).	0.0456709861755	11
Coq.ssr.ssrbool.andbC	40	0.9	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0641751289368	21
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.0237619876862	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0257999897003	1
Coq.ssr.ssrbool.andbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0302941799164	1
Coq.ssr.ssrbool.andbACA	40	0.48	search with cache (only 1: intros b b'; only 1: Bool.destr_bool).	1.190969944	1230
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.0183198451996	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.0213229656219	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.0253219604492	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.0211491584778	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.0180079936981	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0238480567932	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0291950702667	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0319931507111	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0404150485992	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0471150875092	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: by case : b ).	0.0232450962067	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.0239279270172	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.024729013443	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0283029079437	1
Coq.ssr.ssrbool.andb_orl	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0425639152527	4
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0337688922882	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0331349372864	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0347769260406	1
Coq.ssr.ssrbool.andb_idl	40	3.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.655370950699	171
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0376009941101	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0413701534271	1
Coq.ssr.ssrbool.andb_id2r	40	1.0.15	search with cache (only 1: destruct c; only 1: by case : a ; case : b  =>// ->; only 1: by case : a ; case : b  =>// ->).	1.14461398125	456
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0510230064392	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0373759269714	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0571689605713	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0499510765076	1
Coq.ssr.ssrbool.negb_and	40	1	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0361130237579	2
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.0306489467621	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0313191413879	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0291879177094	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.0308170318604	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0304160118103	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: by case : b ).	0.0228221416473	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.0235998630524	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.0240139961243	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.022910118103	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : b ).	0.0252768993378	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.0324060916901	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.0324101448059	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0301959514618	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0338189601898	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0309419631958	1
Coq.ssr.ssrbool.implyb_idl	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0372190475464	1
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0381791591644	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0470221042633	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.0217168331146	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.0245800018311	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.0298249721527	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0292928218842	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0348219871521	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0356888771057	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.104959011078	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0521471500397	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0373289585114	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0354020595551	1
Coq.ssr.ssrbool.addKb	40	2	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0348401069641	3
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.0265529155731	1
Coq.ssr.ssrbool.addIb	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0332708358765	1
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0348420143127	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.0230901241302	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.0301828384399	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : a ; case : b ).	0.0297720432281	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0328860282898	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.51	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	3.90701389313	1561
Coq.ssr.ssrbool.subrelUl	40	8.5.6.3.38	search with cache (only 1: red; only 1: red; only 1: intro b1; only 1: simpl; only 1: intuition).	4.30389904976	5326
Coq.ssr.ssrbool.subrelUr	40	14.17.8.5.45	search with cache (only 1: red; only 1: red; only 1: intro b1; only 1: simpl; only 1: intuition).	17.2464649677	25735
Coq.ssr.ssrbool.sub_refl	40	2.18	search with cache (only 1: red; only 1: Bool.destr_bool).	0.163566112518	211
Coq.ssr.ssrbool.PredicateSimplification.mem_topred	40
Coq.ssr.ssrbool.PredicateSimplification.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.0321011543274	1
Coq.ssr.ssrbool.PredicateSimplification.app_predE	40
Coq.ssr.ssrbool.PredicateSimplification.in_applicative	40
Coq.ssr.ssrbool.PredicateSimplification.in_collective	40
Coq.ssr.ssrbool.PredicateSimplification.in_simpl	40	0	search with cache (only 1: by case : msp  =>_ /= ->).	0.0249300003052	1
Coq.ssr.ssrbool.PredicateSimplification.unfold_in	40	8	search with cache (only 1: Ltac.reflexivity).	0.0270228385925	9
Coq.ssr.ssrbool.PredicateSimplification.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.0214991569519	3
Coq.ssr.ssrbool.PredicateSimplification.mem_simpl	40	2	search with cache (only 1: by [  ]).	0.0241649150848	3
Coq.ssr.ssrbool.PredicateSimplification.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.0237231254578	2
Coq.ssr.ssrbool.KeyPred.keyed_predE	40
Coq.ssr.ssrbool.KeyedQualifier.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.RelationProperties.symmetric_from_pre	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_left_transitive	40
Coq.ssr.ssrbool.RelationProperties.PER.sym_right_transitive	40
Coq.ssr.ssrbool.RelationProperties.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.LocalProperties.forE	40	1	search with cache (only 1: Ltac.reflexivity).	0.0193281173706	2
Coq.ssr.ssrbool.LocalGlobal.in1W	40	0.8	search with cache (only 1: intro m; only 1: by [  ]).	0.0396440029144	10
Coq.ssr.ssrbool.LocalGlobal.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0224540233612	1
Coq.ssr.ssrbool.LocalGlobal.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.0284759998322	1
Coq.ssr.ssrbool.LocalGlobal.in1T	40	7	search with cache (only 1: auto).	0.0369658470154	8
Coq.ssr.ssrbool.LocalGlobal.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0315980911255	2
Coq.ssr.ssrbool.LocalGlobal.in3T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0292398929596	1
Coq.ssr.ssrbool.LocalGlobal.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0288770198822	2
Coq.ssr.ssrbool.LocalGlobal.sub_in11	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0334079265594	3
Coq.ssr.ssrbool.LocalGlobal.sub_in111	40	3	search with cache (only 1: by move  =>? ?; auto).	0.170248985291	4
Coq.ssr.ssrbool.LocalGlobal.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.17581319809	1
Coq.ssr.ssrbool.LocalGlobal.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0273220539093	1
Coq.ssr.ssrbool.LocalGlobal.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0291900634766	1
Coq.ssr.ssrbool.LocalGlobal.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0317420959473	2
Coq.ssr.ssrbool.LocalGlobal.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0325939655304	2
Coq.ssr.ssrbool.LocalGlobal.on2T	40	0	search with cache (only 1: by move  =>? ?; auto).	0.0252749919891	1
Coq.ssr.ssrbool.LocalGlobal.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0305008888245	2
Coq.ssr.ssrbool.LocalGlobal.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.0261240005493	1
Coq.ssr.ssrbool.LocalGlobal.subon2	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0372989177704	3
Coq.ssr.ssrbool.LocalGlobal.can_in_inj	40
Coq.ssr.ssrbool.LocalGlobal.canLR_in	40	28.31.33	search with cache (only 1: Bool.destr_bool; only 1: subst; only 1: auto).	17.9310541153	21685
Coq.ssr.ssrbool.LocalGlobal.canRL_in	40
Coq.ssr.ssrbool.LocalGlobal.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0424168109894	1
Coq.ssr.ssrbool.LocalGlobal.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0392849445343	2
Coq.ssr.ssrbool.LocalGlobal.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0419678688049	3
Coq.ssr.ssrbool.LocalGlobal.inW_bij	40
Coq.ssr.ssrbool.LocalGlobal.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0417201519012	1
Coq.ssr.ssrbool.LocalGlobal.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0464799404144	1
Coq.ssr.ssrbool.LocalGlobal.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0444550514221	1
Coq.ssr.ssrbool.LocalGlobal.sub_in_bij	40	0.23	search with cache (only 1: intro n; only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.793305873871	280
Coq.ssr.ssrbool.LocalGlobal.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0461230278015	1
Coq.ssr.ssrbool.sub_in2	40	2.9.24	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.42325305939	1117
Coq.ssr.ssrbool.sub_in3	40	14.4.19	search with cache (only 1: red; only 1: intros; only 1: auto).	2.06650900841	1598
Coq.ssr.ssrbool.sub_in12	40	0.16	search with cache (only 1: intro H; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.444597959518	126
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.0326869487762	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoW	40	5	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.0337598323822	6
Coq.ssr.ssrbool.MonoHomoMorphismTheory.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0276300907135	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.0271592140198	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory.homo_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoLR	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.monoRL	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory.can_mono	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoW_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.mono2W_in	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.0202429294586	2
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.104098081589	1
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.homo_mono_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoLR_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.monoRL_in	40
Coq.ssr.ssrbool.MonoHomoMorphismTheory_in.can_mono_in	40
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym	40	0	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0185329914093	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym	40	1	search with cache (only 1: by move  =>fR y x; apply : fR ).	0.0183820724487	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in	40	17	search with cache (only 1: by move  =>? ?; auto).	0.356725931168	126
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in	40	1	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0212678909302	2
Coq.ssr.ssrbool.HomoMonoMorphismFlip.homo_sym_in11	40	0	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0203850269318	1
Coq.ssr.ssrbool.HomoMonoMorphismFlip.mono_sym_in11	40	0	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.0199859142303	1
Coq.ssr.ssrbool.CancelOn.onW_can	40	5	search with cache (only 1: by move  =>? ?).	0.0192580223083	6
Coq.ssr.ssrbool.CancelOn.onW_can_in	40	14	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.108790159225	75
Coq.ssr.ssrbool.CancelOn.in_onW_can	40	0	search with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.019170999527	1
Coq.ssr.ssrbool.CancelOn.onS_can	40	8.21	search with cache (only 1: intro m; only 1: by move  =>? ?; auto).	0.653417110443	552
Coq.ssr.ssrbool.CancelOn.onS_can_in	40	11.51	search with cache (only 1: intuition; only 1: by move  =>? ?; auto).	2.54887294769	3078
Coq.ssr.ssrbool.CancelOn.in_onS_can	40	1	search with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0239379405975	2
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in_on.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	4	search with cache (only 1: auto).	0.00650691986084	5
Coq.ssr.ssrfun.unitE	40	1.2.4.36	search with cache (only 1: red; only 1: intro n; only 1: induction n; only 1: Ltac.reflexivity || destruct H).	0.257433891296	1184
Coq.ssr.ssrfun.ExtensionalEquality.frefl	40	0	search with cache (only 1: Ltac.split).	0.00652599334717	1
Coq.ssr.ssrfun.ExtensionalEquality.fsym	40	0.6	search with cache (only 1: intros; only 1: by [  ]).	0.014310836792	8
Coq.ssr.ssrfun.ExtensionalEquality.ftrans	40	0.44.16.68	search with cache (only 1: red; only 1: Bool.destr_bool; only 1: rewrite H; only 1: trivial).	6.48372292519	45369
Coq.ssr.ssrfun.ExtensionalEquality.rrefl	40	0	search with cache (only 1: repeat Ltac.split).	0.00586915016174	1
Coq.ssr.ssrfun.Composition.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.0.0	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: Ltac.assumption).	0.0973620414734	5
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0105979442596	1
Coq.ssr.ssrfun.Sig.svalP	40	20	search with cache (only 1: apply proj2_sig).	0.0443971157074	186
Coq.ssr.ssrfun.Sig.s2valP	40	1	search with cache (only 1: by case : u ).	0.00789999961853	2
Coq.ssr.ssrfun.Sig.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00803184509277	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.00922799110413	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0125200748444	1
Coq.ssr.ssrfun.Injections.can_pcan	40
Coq.ssr.ssrfun.Injections.pcan_inj	40
Coq.ssr.ssrfun.Injections.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0085608959198	2
Coq.ssr.ssrfun.Injections.canLR	40	3.5.9	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.195710897446	346
Coq.ssr.ssrfun.Injections.canRL	40	8.3	search with cache (only 1: destruct 2; only 1: auto).	0.0394530296326	79
Coq.ssr.ssrfun.Some_inj	40	0.5.6.14	search with cache (only 1: red; only 1: intros n m; only 1: inversion 1; only 1: trivial).	0.693246126175	927
Coq.ssr.ssrfun.of_voidK	40	0.2.1.24	search with cache (only 1: red; only 1: intro n; only 1: simpl; only 1: contradiction).	0.216975212097	490
Coq.ssr.ssrfun.esymK	40	0.1.52	search with cache (only 1: intro H; only 1: destruct H; only 1: Ltac.reflexivity).	0.382632017136	1565
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.InjectionsTheory.inj_id	40	0.13	search with cache (only 1: red; only 1: Bool.destr_bool).	0.0286929607391	75
Coq.ssr.ssrfun.InjectionsTheory.inj_can_sym	40	12.50	search with cache (only 1: red; only 1: auto).	1.1461648941	4517
Coq.ssr.ssrfun.InjectionsTheory.inj_comp	40	26.15.11	search with cache (only 1: intros Hfst Hsnd; only 1: intros H ?; only 1: auto).	1.0111811161	3228
Coq.ssr.ssrfun.InjectionsTheory.inj_compr	40
Coq.ssr.ssrfun.InjectionsTheory.can_comp	40
Coq.ssr.ssrfun.InjectionsTheory.pcan_pcomp	40
Coq.ssr.ssrfun.InjectionsTheory.eq_inj	40
Coq.ssr.ssrfun.InjectionsTheory.eq_can	40
Coq.ssr.ssrfun.InjectionsTheory.inj_can_eq	40
Coq.ssr.ssrfun.Bijections.bij_inj	40
Coq.ssr.ssrfun.Bijections.bij_can_sym	40
Coq.ssr.ssrfun.Bijections.bij_can_eq	40
Coq.ssr.ssrfun.BijectionsTheory.eq_bij	40
Coq.ssr.ssrfun.BijectionsTheory.bij_comp	40
Coq.ssr.ssrfun.BijectionsTheory.bij_can_bij	40
Coq.ssr.ssrfun.Involutions.inv_inj	40
Coq.ssr.ssrfun.Involutions.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	4.0	search with cache (only 1: intros C decide H P H0; only 1: auto).	0.0134217739105	6
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: auto).	0.00915098190308	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00642609596252	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.00660991668701	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00527215003967	1
Coq.Sets.Uniset.defs.le_refl	40	0	search with cache (only 1: destr_bool).	0.00811386108398	1
Coq.Sets.Uniset.defs.incl_left	40	2.3.4.4.52	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: intros Hfst Hsnd; only 1: rewrite Hfst; only 1: auto).	9.43099784851	31311
Coq.Sets.Uniset.defs.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0138590335846	4
Coq.Sets.Uniset.defs.seq_refl	40	3	search with cache (only 1: auto).	0.00786900520325	4
Coq.Sets.Uniset.defs.seq_trans	40	0.0.3.9.3	search with cache (only 1: destruct x; only 1: intro x; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.0174331665	1231
Coq.Sets.Uniset.defs.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.01411485672	4
Coq.Sets.Uniset.defs.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0611338615417	3
Coq.Sets.Uniset.defs.union_empty_right	40	13.1.1.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	5.20029091835	7210
Coq.Sets.Uniset.defs.union_comm	40	14.0.0.0.2	search with cache (only 1: unfold seq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: intuition).	4.98112511635	5333
Coq.Sets.Uniset.defs.union_ass	40	3.0.1.0.0.1	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: simpl; only 1: auto with bool).	0.428296089172	208
Coq.Sets.Uniset.defs.seq_left	40	0.0.1.1.0.0	search with cache (only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.023656129837	8
Coq.Sets.Uniset.defs.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0400159358978	9
Coq.Sets.Uniset.defs.union_rotate	40
Coq.Sets.Uniset.defs.seq_congr	40
Coq.Sets.Uniset.defs.union_perm_left	40
Coq.Sets.Uniset.defs.uniset_twist1	40
Coq.Sets.Uniset.defs.uniset_twist2	40
Coq.Sets.Uniset.defs.treesort_twist1	40
Coq.Sets.Uniset.defs.treesort_twist2	40	1.1.1.1.0.0.0.0.0.0.2	search with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	14.2394070625	7735
Coq.Sets.Multiset.multiset_defs.meq_refl	40	4	search with cache (only 1: split).	0.0168709754944	11
Coq.Sets.Multiset.multiset_defs.meq_trans	40
Coq.Sets.Multiset.multiset_defs.meq_sym	40	0.0.0.1.0	search with cache (only 1: unfold meq; only 1: destruct x; only 1: intros; only 1: rewrite H; only 1: auto).	0.0289127826691	6
Coq.Sets.Multiset.multiset_defs.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0195090770721	3
Coq.Sets.Multiset.multiset_defs.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0204119682312	5
Coq.Sets.Multiset.multiset_defs.munion_comm	40	14.1.6.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct y; only 1: intuition).	33.0610551834	13595
Coq.Sets.Multiset.multiset_defs.munion_ass	40	0.0.3.2.1	search with cache (only 1: unfold meq; only 1: destruct z; only 1: simpl; only 1: destruct y; only 1: auto with arith).	0.972948074341	266
Coq.Sets.Multiset.multiset_defs.meq_left	40	0.3.4	search with cache (only 1: destruct z; only 1: compute; only 1: auto).	0.696472883224	245
Coq.Sets.Multiset.multiset_defs.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0471930503845	9
Coq.Sets.Multiset.multiset_defs.munion_rotate	40
Coq.Sets.Multiset.multiset_defs.meq_congr	40	0.2.1.2.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: intros; only 1: auto).	0.337193012238	108
Coq.Sets.Multiset.multiset_defs.munion_perm_left	40
Coq.Sets.Multiset.multiset_defs.multiset_twist1	40
Coq.Sets.Multiset.multiset_defs.multiset_twist2	40
Coq.Sets.Multiset.multiset_defs.treesort_twist1	40
Coq.Sets.Multiset.multiset_defs.treesort_twist2	40
Coq.Sets.Multiset.multiset_defs.meq_singleton	40
Coq.Sets.Integers.Integers_sect.le_reflexive	40	0	search with cache (only 1: auto  10 with sets).	0.00761294364929	1
Coq.Sets.Integers.Integers_sect.le_antisym	40	22	search with cache (only 1: intuition).	0.132636785507	231
Coq.Sets.Integers.Integers_sect.le_trans	40	0.1.0.0	search with cache (only 1: red; only 1: intros n m p; only 1: intros; only 1: PeanoNat.Nat.Private_Tac.order).	0.0185468196869	5
Coq.Sets.Integers.Integers_sect.le_Order	40	2.0.2.0.1.2	search with cache (only 1: split; only 1: auto  10 with sets; only 1: red; only 1: PeanoNat.Nat.order; only 1: red; only 1: PeanoNat.Nat.order).	0.848647117615	438
Coq.Sets.Integers.Integers_sect.triv_nat	40	12	search with cache (only 1: now PeanoNat.Nat.nzsimpl').	0.1556828022	190
Coq.Sets.Integers.Integers_sect.nat_po	40	0.1.0.0.4.533	search with cache (only 1: eexists; only 1: auto with sets; only 1: split; only 1: exact le_reflexive; only 1: exact le_trans; only 1: exact le_antisym).	11.2622778416	148327
Coq.Sets.Integers.Integers_sect.le_total_order	40
Coq.Sets.Integers.Integers_sect.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_sect.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_sect.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	0.1.0.4.7	search with cache (only 1: intros A P H; only 1: red; only 1: red; only 1: intros; only 1: auto).	0.345112085342	216
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	0.1.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.411947011948	66
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.0.0.13	search with cache (only 1: Ltac.split; only 1: auto  10 with sets; only 1: red; only 1: auto  10 with sets).	0.0804209709167	113
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40	10.1.1.0.1.1.2.1.3.3	search with cache (only 1: intro A; only 1: apply Definition_of_equivalence; only 1: auto  10 with sets; only 1: red; only 1: intros ? ? ? [? ?] [? ?]; only 1: auto  10 with sets; only 1: red; only 1: intros U R H'; only 1: destruct H'; only 1: auto  10 with sets).	9.91095113754	12697
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	0.9	search with cache (only 1: destruct 1; only 1: auto  10 with sets).	0.168288946152	67
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.0207078456879	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.0.0.1.0.0	search with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: intros; only 1: clear H; only 1: auto with sets).	0.0435030460358	10
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2	search with cache (only 1: auto  10 with sets).	0.013818025589	3
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto with sets).	0.0137808322906	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.2.2.5.0	search with cache (only 1: compute; only 1: intros U R H' x y H'0; only 1: intros; only 1: elim H; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	10.7489271164	10568
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.6.3.0.0.0.0	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	20.1025669575	10036
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.Axiomatisation.cong_congr	40
Coq.Sets.Permut.Axiomatisation.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.031417131424	18
Coq.Sets.Permut.Axiomatisation.comm_left	40	0.2.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.0136489868164	5
Coq.Sets.Permut.Axiomatisation.perm_right	40
Coq.Sets.Permut.Axiomatisation.perm_left	40
Coq.Sets.Permut.Axiomatisation.op_rotate	40	8.0.0.2.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	5.65277004242	2005
Coq.Sets.Permut.Axiomatisation.twist	40
Coq.Sets.Image.Image.Im_def	40
Coq.Sets.Image.Image.Im_add	40
Coq.Sets.Image.Image.image_empty	40	1.0.3.2.0.0.0.1.0.2	search with cache (only 1: intro A; only 1: apply Extensionality_Ensembles; only 1: red; only 1: split; only 1: red; only 1: intros x H'; only 1: unfold In in *; only 1: elim H'; only 1: destruct 1; only 1: destruct 1).	2.23779892921	1136
Coq.Sets.Image.Image.finite_image	40
Coq.Sets.Image.Image.Im_inv	40	0.7.0.6.10	search with cache (only 1: intros x0 H'; only 1: intro K; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	37.197234869	26825
Coq.Sets.Image.Image.not_injective_elim	40
Coq.Sets.Image.Image.cardinal_Im_intro	40
Coq.Sets.Image.Image.In_Image_elim	40
Coq.Sets.Image.Image.injective_preserves_cardinal	40
Coq.Sets.Image.Image.cardinal_decreases	40
Coq.Sets.Image.Image.Pigeonhole	40
Coq.Sets.Image.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_minimal	40	3.5.5	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.760728120804	628
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_Inhabited	40	1.5.2.2.23.112	search with cache (only 1: intro x; only 1: exists x; only 1: split; only 1: intros H'7 H'8; only 1: red; only 1: trivial).	10.7811429501	68265
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_an_order	40	0.0.0.9	search with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.299570083618	50
Coq.Sets.Powerset.The_power_set_partial_order.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0286638736725	1
Coq.Sets.Powerset.The_power_set_partial_order.Power_set_PO	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_Rel_is_Strict_Included	40	0.2	search with cache (only 1: red; only 1: auto  10 with sets).	0.0253231525421	4
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.The_power_set_partial_order.Strict_inclusion_is_transitive	40	0.3.0.0.0.0.0.0.0.6	search with cache (only 1: red; only 1: intros x y z H' H'0; only 1: elim Strict_Rel_is_Strict_Included; only 1: unfold contains; only 1: intros H'1 H'2; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	35.8164069653	4924
Coq.Sets.Powerset.The_power_set_partial_order.Empty_set_is_Bottom	40	3.1.1.0.1.7.17.0	search with cache (only 1: intro X; only 1: Ltac.split; only 1: split; only 1: auto with sets; only 1: intros x H'; only 1: red; only 1: red; only 1: auto with sets).	29.0665149689	20529
Coq.Sets.Powerset.The_power_set_partial_order.Union_minimal	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_maximal	40	1.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: auto with sets).	0.115195035934	19
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_l	40	0	search with cache (only 1: auto with sets).	0.0208370685577	1
Coq.Sets.Powerset.The_power_set_partial_order.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.0223062038422	1
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_l	40	0.0.0.0.0.3	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0844171047211	23
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0439748764038	5
Coq.Sets.Powerset.The_power_set_partial_order.Union_is_Lub	40
Coq.Sets.Powerset.The_power_set_partial_order.Intersection_is_Glb	40
Coq.Sets.Classical_sets.Ensembles_classical.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Ensembles_classical.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_intro	40	1.8.1	search with cache (only 1: intros A x y H'; only 1: RelationClasses.reduce; only 1: auto with sets).	1.1717710495	395
Coq.Sets.Classical_sets.Ensembles_classical.Subtract_inv	40	12.0.1	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: intuition).	1.93612504005	1185
Coq.Sets.Classical_sets.Ensembles_classical.Included_Strict_Included	40
Coq.Sets.Classical_sets.Ensembles_classical.Strict_Included_inv	40
Coq.Sets.Classical_sets.Ensembles_classical.not_SIncl_empty	40	3.0.1.0.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: red in H'; only 1: elim H'; only 1: auto with sets).	0.0534868240356	11
Coq.Sets.Classical_sets.Ensembles_classical.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.0.0.9.4	search with cache (only 1: intros U R; only 1: red; only 1: intros x0 a H'1; only 1: exists a; only 1: auto with sets).	12.921036005	6880
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_in	40	0.0.1.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0485279560089	6
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr	40	0.2.3.0.0	search with cache (only 1: intros A B x H'; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.0773911476135	16
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_soustr_add_r	40	0.0.0.0.1.1.0.0.2.1.0	search with cache (only 1: intros X x H'; only 1: split; only 1: auto with sets; only 1: red; only 1: intro H'1; only 1: lapply (Singleton_inv U x x0); only 1: intro H'4; only 1: apply H'; only 1: rewrite H'4; only 1: auto with sets; only 1: auto with sets).	20.2245628834	6026
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_1	40	0.0.0.0.0.2.0.1.4.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: unfold Subtract; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	15.3080260754	8265
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Included_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Add_covers	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.Sets_as_an_algebra.less_than_singleton	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Partial_order_facts.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero	40	18.0	search with cache (only 1: intro A; only 1: auto  6 with sets).	0.710416078568	573
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0257790088654	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Empty_set_zero'	40	0.11	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.195289134979	104
Coq.Sets.Powerset_facts.Sets_as_an_algebra.less_than_empty	40	2.1	search with cache (only 1: intros X H'; only 1: auto with sets).	0.102168083191	5
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.0187790393829	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_associative	40	8	search with cache (only 1: auto  10 with sets).	0.090714931488	20
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0193691253662	1
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_absorbs	40	3	search with cache (only 1: auto  9 with sets).	0.0304269790649	4
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Couple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_union	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple	40	0.0.0.0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	2.96770405769	1581
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	32.528357029	14344
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_commutative	40	0.0.0.0.0.0.0.0.0.0.9	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	2.04179000854	1201
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Distributivity'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Union_add	40	1.0.1.6	search with cache (only 1: intros A B; only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.74538397789	304
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union	40	1.0.0.1.1.0.0.4.1.1.1.3	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	6.13805198669	4341
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.singlx	40	1.0.2.0.0.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.167838096619	57
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add	40	1.5	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.279737949371	72
Coq.Sets.Powerset_facts.Sets_as_an_algebra.incl_add_x	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative	40	0.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.0549800395966	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_commutative'	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Add_distributes	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.setcover_intro	40	1.0	search with cache (only 1: intros x y z H' H'0; only 1: auto with sets).	0.0183200836182	3
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_l	40	2.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.133841991425	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.116094112396	2
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_l	40	0.0.1.1.1.1.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	0.731183052063	322
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0506088733673	11
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Sets_as_an_algebra.Setminus_Included_empty	40	0.0.0.1.1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: unfold In in *; only 1: inversion_clear H1; only 1: exfalso; only 1: contradict H; only 1: intuition; only 1: intuition).	0.859939098358	359
Coq.Sets.Constructive_sets.Ensembles_facts.Extension	40	1.13.1.13.1.7.3.2	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: Ltac.split; only 1: red; only 1: trivial; only 1: red; only 1: trivial).	15.9335680008	56820
Coq.Sets.Constructive_sets.Ensembles_facts.Noone_in_empty	40	1.5.0	search with cache (only 1: intro n; only 1: unfold not; only 1: contradiction).	0.0116701126099	9
Coq.Sets.Constructive_sets.Ensembles_facts.Included_Empty	40	7.0	search with cache (only 1: intros B C H'; only 1: contradiction).	0.0114870071411	16
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro1	40	1.8.0.8	search with cache (only 1: intros n m; only 1: intros x H; only 1: constructor; only 1: auto with sets).	0.628872156143	1055
Coq.Sets.Constructive_sets.Ensembles_facts.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.010684967041	2
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_add	40	0.7.3.3.0	search with cache (only 1: unfold Add at 1; only 1: intro m; only 1: intro; only 1: exists x; only 1: auto with sets).	0.247997999191	585
Coq.Sets.Constructive_sets.Ensembles_facts.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Ensembles_facts.Add_not_Empty	40	0.22.1.5.0.2	search with cache (only 1: red; only 1: intros A x; only 1: intro; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	28.0369150639	81755
Coq.Sets.Constructive_sets.Ensembles_facts.not_Empty_Add	40	0.2.3.1.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.515594005585	567
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_inv	40	1.1.1	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0146539211273	6
Coq.Sets.Constructive_sets.Ensembles_facts.Singleton_intro	40	0.0.2	search with cache (only 1: intros B C H'; only 1: rewrite H'; only 1: auto with sets).	0.0220999717712	14
Coq.Sets.Constructive_sets.Ensembles_facts.Union_inv	40	0.0.2.4	search with cache (only 1: intros A x; only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.0477578639984	41
Coq.Sets.Constructive_sets.Ensembles_facts.Add_inv	40	1.8.0.0.1.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	2.46041584015	1705
Coq.Sets.Constructive_sets.Ensembles_facts.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0142049789429	3
Coq.Sets.Constructive_sets.Ensembles_facts.Couple_inv	40	0.2.0.0.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0282130241394	16
Coq.Sets.Constructive_sets.Ensembles_facts.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.0115759372711	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.0102279186249	3
Coq.Sets.Constructive_sets.Ensembles_facts.Strict_Included_strict	40	3.7.5	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.457539081573	929
Coq.Sets.Finite_sets_facts.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_finite	40	1.4.0.1.4.11	search with cache (only 1: intro A; only 1: intros y H'1; only 1: elim H'1; only 1: auto with sets; only 1: intros X x H'; only 1: auto using incl_soustr_add_l with sets).	3.15931510925	4679
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Singleton_is_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_Empty	40	0.0.2.1.29	search with cache (only 1: intro H'3; only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	29.341531992	23745
Coq.Sets.Finite_sets_facts.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_invert	40
Coq.Sets.Finite_sets.Ensembles_finis_facts.cardinal_elim	40	4.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0455541610718	11