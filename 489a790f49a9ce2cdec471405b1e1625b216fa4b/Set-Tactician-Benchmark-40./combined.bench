
Coq.micromega.OrderedRing.rplus_morph_Proper	40	30.11.38	search with cache (only 1: intros n m H1; only 1: intros; only 1: firstorder).	19.9980909824	51307
Coq.micromega.OrderedRing.rtimes_morph_Proper	40	20.15.38	search with cache (only 1: intros n m H1; only 1: intros; only 1: firstorder).	28.8079760075	68077
Coq.micromega.OrderedRing.ropp_morph_Proper	40	50.11	search with cache (only 1: intros; only 1: firstorder).	3.01772689819	7858
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	36.15	search with cache (only 1: intros; only 1: intuition).	2.65573716164	3581
Coq.micromega.OrderedRing.Rplus_0_l	40	98.28	search with cache (only 1: intros x; only 1: firstorder).	4.76615405083	29811
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.016398191452	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	3.6	search with cache (only 1: intro; only 1: ring).	0.0243351459503	24
Coq.micromega.OrderedRing.Rplus_comm	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0191509723663	4
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0158910751343	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.1.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0193920135498	4
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	5.7.2.1	search with cache (only 1: intros n m; only 1: rewrite Rlt_le_neq; only 1: intro H; only 1: now destruct H).	0.735913038254	628
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	1.0.0.4.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.919358968735	330
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.ZifyInt63.to_Z_bounded	40	3.9.70	search with cache (only 1: intros i; only 1: case (to_Z_bounded i); only 1: auto with zarith).	12.9114968777	15070
Coq.micromega.ZifyInt63.ltb_lt	40
Coq.micromega.ZifyInt63.leb_le	40
Coq.micromega.ZifyInt63.eqb_eq	40
Coq.micromega.ZifyInt63.eq_int_inj	40	0.3.1.3.4	search with cache (only 1: split; only 1: intro H; only 1: now subst; reflexivity; only 1: intro H; only 1: now apply to_Z_inj in H).	15.4667179585	471
Coq.micromega.ZifyInt63.is_evenE	40
Coq.micromega.Ztac.eq_incl	40	8	search with cache (only 1: intuition Z.order).	0.0644319057465	43
Coq.micromega.Ztac.elim_concl_eq	40	4.1.0	search with cache (only 1: intros n m; only 1: intros; only 1: intuition Z.order).	0.0282590389252	8
Coq.micromega.Ztac.elim_concl_le	40	0.0	search with cache (only 1: intros a b; only 1: Z.order).	0.015533208847	2
Coq.micromega.Ztac.elim_concl_lt	40	6.0	search with cache (only 1: intros x y H; only 1: now apply Z.nle_gt).	0.086434841156	56
Coq.micromega.Ztac.Zlt_le_add_1	40	1.1.3.1.10	search with cache (only 1: etransitivity; only 1: Z.nzsimpl; only 1: reflexivity; only 1: apply Z.le_succ_l; only 1: Z.Private_Tac.order).	2.06415009499	938
Coq.micromega.Ztac.add_le	40	8.3	search with cache (only 1: intros n m H; only 1: now apply Z.add_nonneg_nonneg).	0.350138902664	203
Coq.micromega.Ztac.mul_le	40	1.1.37.0	search with cache (only 1: intros n m Hn Hm; only 1: apply Z.mul_nonneg_nonneg; only 1: auto; only 1: auto).	16.1696541309	17231
Coq.micromega.ZifyInst.eq_pos_inj	40	5.5.1.11	search with cache (only 1: intro n; only 1: split; only 1: congruence; only 1: congruence).	1.86013507843	2196
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	1.2.1.2.34.10	search with cache (only 1: intros H; only 1: destruct H; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: unfold Z.max, Pos.max; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: trivial).	1.77987480164	4902
Coq.micromega.ZifyInst.pow_pos_strict	40	21.7.21	search with cache (only 1: intros b Hb IH; only 1: intros H; only 1: Z.order_pos).	4.8518910408	8933
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40	1	search with cache (only 1: exact (SORplus_wd sor)).	0.113513946533	51
Coq.micromega.ZCoeff.rtimes_morph_Proper	40	1	search with cache (only 1: exact (SORtimes_wd sor)).	0.0150761604309	2
Coq.micromega.ZCoeff.ropp_morph_Proper	40	0	search with cache (only 1: exact (SORopp_wd sor)).	0.0130920410156	1
Coq.micromega.ZCoeff.rle_morph_Proper	40	1	search with cache (only 1: exact (SORle_wd sor)).	0.07248711586	33
Coq.micromega.ZCoeff.rlt_morph_Proper	40	0	search with cache (only 1: exact (SORlt_wd sor)).	0.0125780105591	1
Coq.micromega.ZCoeff.rminus_morph_Proper	40	1	search with cache (only 1: exact (OrderedRing.rminus_morph sor)).	0.196067810059	17
Coq.micromega.ZCoeff.ring_ops_wd	40
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40	8.10.0	search with cache (only 1: intros; only 1: rewrite Rplus_comm; only 1: apply (Rle_lt_0_plus_1 x (Rlt_le 0 x H))).	1.29345321655	1189
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.7.2.0.11.3	search with cache (only 1: pattern 1 at 1; only 1: unfold Rle; only 1: left; only 1: rewrite Rplus_comm; only 1: apply Rle_lt_0_plus_1; only 1: auto with real).	23.004570961	20812
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.0.12.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.03348302841	639
Coq.micromega.ZifyClasses.mkapp2	40	3.10	search with cache (only 1: subst; only 1: auto).	0.0512092113495	81
Coq.micromega.ZifyClasses.mkapp	40	4.0	search with cache (only 1: subst; only 1: auto).	0.0107409954071	6
Coq.micromega.ZifyClasses.mkrel	40	18.0	search with cache (only 1: subst; only 1: auto).	0.108798980713	330
Coq.micromega.ZifyClasses.and_morph	40
Coq.micromega.ZifyClasses.or_morph	40	0.0	search with cache (only 1: intros ? ? ? Fl Fr; only 1: tauto).	0.0213689804077	2
Coq.micromega.ZifyClasses.impl_morph	40	0.1	search with cache (only 1: intros; only 1: tauto).	0.0159449577332	3
Coq.micromega.ZifyClasses.iff_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0270090103149	2
Coq.micromega.ZifyClasses.not_morph	40	0.0	search with cache (only 1: intros; only 1: tauto).	0.0768120288849	2
Coq.micromega.ZifyClasses.eq_iff	40	1.0.1.0.3.6	search with cache (only 1: intro A; only 1: split; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto).	0.260200977325	758
Coq.micromega.ZifyClasses.rew_iff	40	43	search with cache (only 1: tauto).	0.30970287323	1982
Coq.micromega.ZMicromega.eq_le_iff	40	7	search with cache (only 1: intuition Z.order).	0.0174748897552	8
Coq.micromega.ZMicromega.lt_le_iff	40	0	search with cache (only 1: apply Z.lt_le_pred).	0.00868797302246	1
Coq.micromega.ZMicromega.le_0_iff	40	1.1.19.0	search with cache (only 1: intros n m; only 1: split; only 1: apply Z.le_0_sub; only 1: apply Z.le_0_sub).	5.47591590881	4139
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.pop2_bop2	40
Coq.micromega.ZMicromega.Zeval_op2_hold	40
Coq.micromega.ZMicromega.Zeval_formula_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	0.6.0	search with cache (only 1: intros; only 1: simpl; only 1: congruence).	0.0196509361267	9
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40	0.0.0.2.7	search with cache (only 1: intro q; only 1: destruct q; only 1: now split; only 1: now split; only 1: now split).	1.06202697754	489
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.1.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0617299079895	8
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	1.0.32	search with cache (only 1: intros P n v; only 1: rewrite xnnormalise_correct; only 1: now destruct Hn || easy).	20.2053670883	10348
Coq.micromega.ZMicromega.agree_env_subset	40
Coq.micromega.ZMicromega.agree_env_jump	40
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0510721206665	6
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.0119709968567	1
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.b2n_b2z	40	9.45	search with cache (only 1: intro n; only 1: now destruct n).	1.87732505798	4907
Coq.micromega.ZifyBool.b2z_spec	40	2.7.0.3.1.8.14	search with cache (only 1: intro; only 1: destruct b; only 1: simpl; only 1: left; only 1: easy; only 1: right; only 1: now repeat split).	20.1867671013	22042
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	6.0.14.0.0	search with cache (only 1: unfold tail; only 1: unfold jump; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: f_equal; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	2.14576292038	4764
Coq.micromega.Env.jump_succ	40	7.0	search with cache (only 1: rewrite <- !jump_add; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	0.0282740592957	34
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0166101455688	5
Coq.micromega.Env.nth_pred_double	40	2.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0153379440308	5
Coq.micromega.Tauto.eval_f_rew	40
Coq.micromega.Tauto.eiff_refl	40	0.0.5.125	search with cache (only 1: revert x; only 1: induction k as [| k IHk]; only 1: reflexivity; only 1: reflexivity).	2.58375692368	10142
Coq.micromega.Tauto.eiff_sym	40	0.5.0.0.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: tauto; only 1: simpl; only 1: symmetry; only 1: tauto).	0.0690560340881	55
Coq.micromega.Tauto.eiff_trans	40	1.6.0.0.1.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: subst; only 1: intuition).	1.44956207275	1454
Coq.micromega.Tauto.hold_eiff	40
Coq.micromega.Tauto.eiff_eq	40	1.0.1.0.0	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0203700065613	7
Coq.micromega.Tauto.eAnd_morph_Proper	40	2.0.0.1.0.3	search with cache (only 1: destruct k; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: intuition congruence).	0.636020898819	179
Coq.micromega.Tauto.eOR_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0407900810242	6
Coq.micromega.Tauto.eIMPL_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0340220928192	6
Coq.micromega.Tauto.eIFF_morph_Proper	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: intuition congruence).	0.0892200469971	6
Coq.micromega.Tauto.eNOT_morph_Proper	40	2.0.1.0.0.0	search with cache (only 1: intros; only 1: destruct k; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition congruence).	0.0335440635681	9
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	1.0.9	search with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: auto).	0.175138950348	99
Coq.micromega.Tauto.is_bool_inv	40
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	17	search with cache (only 1: destr_bool).	0.251548051834	169
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	2	search with cache (only 1: reflexivity).	0.00750303268433	3
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00623989105225	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	1.3.0.45.16	search with cache (only 1: intro l; only 1: destruct l as [| a l']; only 1: reflexivity; only 1: simpl; only 1: congruence).	25.1454019547	59945
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	0.0.0.0.0.0.0	search with cache (only 1: unfold cnf_tt; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.0262010097504	7
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40	4.4.0.2.1.2.0.0.0	search with cache (only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1 as [| c f1]; only 1: reflexivity; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.05354905128	3979
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	0.0.0.0.0.0.1.0.0.5	search with cache (only 1: unfold or_cnf_opt; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: unfold cnf_tt; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence).	1.35079097748	999
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.and_cnf_opt_cnf_ff_r	40	0.1.3.1	search with cache (only 1: unfold and_cnf_opt; only 1: intros; only 1: rewrite orb_comm; only 1: reflexivity).	0.0269479751587	15
Coq.micromega.Tauto.and_cnf_opt_cnf_ff	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold and_cnf_opt; only 1: rewrite is_cnf_ff_cnf_ff; only 1: reflexivity).	0.0187830924988	4
Coq.micromega.Tauto.and_cnf_opt_cnf_tt	40	0.1.0.1.0.2.1.0.1.0.0.0.7.1	search with cache (only 1: unfold and_cnf_opt; only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1 as [| c f1]; only 1: simpl; only 1: congruence; only 1: simpl; only 1: destruct c; only 1: destruct f1; only 1: reflexivity; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	15.2312788963	16796
Coq.micromega.Tauto.is_bool_abst_simpl	40
Coq.micromega.Tauto.abst_simpl_correct	40
Coq.micromega.Tauto.or_is_X_inv	40
Coq.micromega.Tauto.mk_iff_is_bool	40
Coq.micromega.Tauto.abst_iff_correct	40
Coq.micromega.Tauto.abst_eq_correct	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40	0.0.1.0.4.3.0.4.0.14.0	search with cache (only 1: intros f1; only 1: assert (ACC : fst (nil, nil) = nil); only 1: reflexivity; only 1: induction f1 as [| a f1 IHf1]; only 1: reflexivity; only 1: destruct a; only 1: destruct f1; only 1: reflexivity; only 1: simpl; only 1: congruence; only 1: auto).	22.5270650387	37722
Coq.micromega.Tauto.rxcnf_and_xcnf	40
Coq.micromega.Tauto.rxcnf_or_xcnf	40
Coq.micromega.Tauto.rxcnf_impl_xcnf	40
Coq.micromega.Tauto.rxcnf_iff_xcnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	1.2.2.1.5.2.2.1.40	search with cache (only 1: clear; only 1: split; only 1: unfold cnf_ff; only 1: intros f1; only 1: destruct f1; only 1: simpl; only 1: tauto; only 1: unfold cnf_ff; only 1: congruence).	13.9602251053	31250
Coq.micromega.Tauto.eval_cnf_tt	40	3.0.0	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: tauto).	0.0197930335999	6
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	0.4.2.4.6	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: rewrite make_conj_cons; only 1: unfold eval_clause; only 1: tauto).	1.62218379974	676
Coq.micromega.Tauto.eval_cnf_cons_iff	40	2.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: unfold eval_clause at 2; only 1: tauto).	0.0717990398407	8
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.hold_eTT	40	16.6.4.27.6.10.43	search with cache (only 1: generalize nil as acc; only 1: intros env f; only 1: induction f as [| a f IHf]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto).	32.5326449871	84936
Coq.micromega.Tauto.hold_eFF	40	0.0.0.0.0.1	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0719568729401	7
Coq.micromega.Tauto.hold_eAND	40
Coq.micromega.Tauto.hold_eOR	40
Coq.micromega.Tauto.hold_eNOT	40
Coq.micromega.Tauto.hold_eIMPL	40	0.1.1.0.0.0.4.0.0.0.0	search with cache (only 1: intros k; only 1: destruct k; only 1: simpl; only 1: intros; only 1: apply iff_refl; only 1: simpl; only 1: intros e; only 1: unfold is_true; only 1: destruct e; only 1: intuition congruence; only 1: intuition congruence).	7.91609692574	3494
Coq.micromega.Tauto.hold_eIFF	40	0.0.0.1.0.0.0.0.0.0.3	search with cache (only 1: intros; only 1: destruct k; only 1: simpl; only 1: apply iff_refl; only 1: simpl; only 1: unfold is_true; only 1: destruct e1, e2; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	14.0244748592	4659
Coq.micromega.Tauto.xcnf_impl	40
Coq.micromega.Tauto.hold_eIFF_IMPL	40
Coq.micromega.Tauto.hold_eEQ	40	5.0.0.0.0	search with cache (only 1: simpl; only 1: intros e1 e2; only 1: unfold is_true; only 1: rewrite eqb_true_iff; only 1: tauto).	0.104432106018	17
Coq.micromega.Tauto.xcnf_iff	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40
Coq.micromega.EnvRing.rmul_ext_Proper	40
Coq.micromega.EnvRing.ropp_ext_Proper	40
Coq.micromega.EnvRing.rsub_ext_Proper	40
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40	97	search with cache (only 1: firstorder).	5.78801608086	9979
Coq.micromega.EnvRing.Pphi1	40	79	search with cache (only 1: firstorder).	4.2658560276	7080
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.137624025345	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.1.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.121570825577	9
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.6.0.4.0.10	search with cache (only 1: induction M as [| ? ? IHM| ? ? IHM]; only 1: simpl; only 1: add_permut; only 1: simpl; only 1: rsimpl; only 1: simpl; only 1: rsimpl).	2.68525695801	1067
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40	1	search with cache (only 1: exact (SORplus_wd sor)).	0.240232944489	94
Coq.micromega.RingMicromega.rtimes_morph_Proper	40	2	search with cache (only 1: exact (SORtimes_wd sor)).	0.01229596138	3
Coq.micromega.RingMicromega.ropp_morph_Proper	40	2	search with cache (only 1: exact (SORopp_wd sor)).	0.0119678974152	3
Coq.micromega.RingMicromega.rle_morph_Proper	40	4	search with cache (only 1: exact (SORle_wd sor)).	0.0527248382568	24
Coq.micromega.RingMicromega.rlt_morph_Proper	40	4	search with cache (only 1: exact (SORlt_wd sor)).	0.0133368968964	5
Coq.micromega.RingMicromega.rminus_morph_Proper	40	0.0.0.0.6	search with cache (only 1: intros x1 x2 H1 y1 y2 H2; only 1: rewrite (Rsub_def (SORrt sor) x1 y1); only 1: rewrite (Rsub_def (SORrt sor) x2 y2); only 1: rewrite H1; only 1: now rewrite H2).	0.520838975906	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	24.0.8.6	search with cache (only 1: unfold eval_pol; only 1: intros f' H H0; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	4.40276002884	5332
Coq.micromega.RingMicromega.eval_pol_mul	40
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	0.2.0.1.0.7	search with cache (only 1: intro n; only 1: induction l; only 1: simpl; only 1: auto; only 1: intros Heq; only 1: auto).	0.284132957458	223
Coq.micromega.Refl.make_impl_map	40	14.0.1.6.7	search with cache (only 1: intros H x1 y H0; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: firstorder).	14.3811650276	23581
Coq.micromega.Refl.make_conj_cons	40	5.5.0.2.5.3	search with cache (only 1: intros; only 1: simpl in *; only 1: destruct l as [| x xs]; only 1: intuition; only 1: reflexivity; only 1: now simpl).	3.89653396606	5072
Coq.micromega.Refl.make_conj_impl	40
Coq.micromega.Refl.make_conj_in	40
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	3.0.3.2.0.1	search with cache (only 1: intros A eval l; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: tauto).	3.09110784531	978
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40	38.4.15.0.6	search with cache (only 1: intros H; only 1: unfold Qopp; only 1: intro n; only 1: unfold Qminus; only 1: now destruct n).	25.3493719101	59146
Coq.micromega.QMicromega.QNpower	40	0.0.0	search with cache (only 1: intros r [| n]; only 1: reflexivity; only 1: reflexivity).	0.0184590816498	3
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qlt_bool_iff	40	1.9.4	search with cache (only 1: intros Heq; only 1: fix odd_spec 1; only 1: intuition subst; auto with qarith).	1.9481241703	1155
Coq.micromega.QMicromega.pop2_bop2	40
Coq.micromega.QMicromega.Qeval_op2_hold	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	1.0.0.0.0.0.0.0.0.1.0.0.6.3.35	search with cache (only 1: split; only 1: intros; only 1: apply Rplus_0_l; only 1: intros a b; only 1: auto with real; only 1: symmetry; only 1: apply Rplus_assoc; only 1: auto with real; only 1: auto with real; only 1: intros; only 1: auto with real; only 1: intros; only 1: ring; only 1: reflexivity; only 1: exact Rplus_opp_r).	7.75488710403	8195
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.4	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0286478996277	19
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	7.0.13	search with cache (only 1: unfold Qmult, Qeq, Q2R; only 1: unfold Qnum, Qden; only 1: auto with real).	0.751509904861	736
Coq.micromega.RMicromega.Q2R_1	40	69	search with cache (only 1: apply RIneq.Rinv_1).	1.81968688965	4758
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40	2.0.6.3	search with cache (only 1: intros; only 1: apply Qeq_true; only 1: apply Qeq_bool_iff; only 1: auto).	35.9774901867	10529
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40	0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qeq, Qmult; only 1: simpl; only 1: now rewrite <- Z.mul_eq_0, !Z.mul_1_r).	0.0502841472626	4
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.pop2_bop2	40	0.0.16	search with cache (only 1: fix odd_equiv 1; only 1: unfold is_true; only 1: auto).	4.58478593826	2010
Coq.micromega.RMicromega.Reval_op2_hold	40	1.0.1.2.8.24	search with cache (only 1: intros f; only 1: intros pol; only 1: destruct f; only 1: simpl; only 1: tauto; only 1: apply ZMicromega.pop2_bop2).	3.00506305695	3796
Coq.micromega.RMicromega.Reval_pop2_eval_op2	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.QReval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.Vectors.VectorEq.eqb_nat_eq	40	0.22.1	search with cache (only 1: intro m; only 1: fix even_spec 1; only 1: auto).	5.59862804413	6735
Coq.Vectors.VectorEq.eqb_eq	40	4.28.0.1	search with cache (only 1: intros m n v1; only 1: revert n; only 1: fix even_spec 1; only 1: eauto).	26.1517050266	31146
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.0.3	search with cache (only 1: intros; only 1: subst; only 1: auto).	0.105591058731	34
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_hd	40
Coq.Vectors.VectorSpec.nth_order_tl	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.nth_order_ext	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.2	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.0191931724548	5
Coq.Vectors.VectorSpec.nth_order_replace_eq	40
Coq.Vectors.VectorSpec.nth_order_replace_neq	40
Coq.Vectors.VectorSpec.replace_id	40
Coq.Vectors.VectorSpec.replace_replace_eq	40	1.3.0.0.1.0.0.0.0.2	search with cache (only 1: induction p as [| ? p IHp]; only 1: intros v; only 1: rewrite 2!(eta v); only 1: simpl; only 1: auto; only 1: intros v; only 1: rewrite 2!(eta v); only 1: simpl; only 1: intros; only 1: now rewrite IHp).	6.52802801132	3833
Coq.Vectors.VectorSpec.replace_replace_neq	40
Coq.Vectors.VectorSpec.const_nth	40	1.3.6	search with cache (only 1: induction p as [| ? p IHp]; only 1: reflexivity; only 1: now f_equal).	0.0718197822571	74
Coq.Vectors.VectorSpec.map_id	40	0.0.30.0.1.11	search with cache (only 1: intros n p; only 1: induction p as [| ? p IHp]; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	3.80046916008	10376
Coq.Vectors.VectorSpec.map_map	40	1.0.0.0.0.0.1.8	search with cache (only 1: intros p1 p2 H1; only 1: intros; only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHv; only 1: auto).	0.651579141617	611
Coq.Vectors.VectorSpec.map_ext_in	40
Coq.Vectors.VectorSpec.map_ext	40	0.3.2.0.0.0.9	search with cache (only 1: induction v as [| ? ? v IHv]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by constructor; only 1: rewrite IHv; only 1: auto).	2.35769581795	2144
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	0	search with cache (only 1: auto).	0.00727605819702	1
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	1.0.0.0.0.1.0.0.4	search with cache (only 1: induction p as [| p IHp]; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	5.61107182503	3202
Coq.Vectors.VectorSpec.uncons_cons	40	1.0	search with cache (only 1: do 3 intro; only 1: now constructor).	0.00946307182312	3
Coq.Vectors.VectorSpec.append_comm_cons	40	4.0.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: auto).	0.014683008194	7
Coq.Vectors.VectorSpec.splitat_append	40	2.0.7.3.0.0.4	search with cache (only 1: induction v as [| ? ? v IHv]; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: rewrite IHv; only 1: apply f_equal; only 1: reflexivity).	2.64087295532	2903
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.VectorSpec.Forall_impl	40
Coq.Vectors.VectorSpec.Forall_forall	40
Coq.Vectors.VectorSpec.Forall_nth_order	40
Coq.Vectors.VectorSpec.Forall2_nth_order	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	5.5.5.5.4	search with cache (only 1: induction n; only 1: now PeanoNat.Nat.nzsimpl; only 1: induction p as [| ? p]; only 1: left; only 1: left).	3.62673711777	3588
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40	3.21.2	search with cache (only 1: intros a Ha; only 1: fix even_spec 1; only 1: apply PeanoNat.Nat.even_spec).	32.7251689434	32089
Coq.Vectors.Fin.eqb_eq	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: easy).	6.96712994576	5989
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	9	search with cache (only 1: congruence).	0.0374610424042	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40
Coq.rtauto.Bintree.map_app	40	0.1.0.1.1.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.367619037628	203
Coq.rtauto.Bintree.length_map	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0363111495972	22
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.8.0.1	search with cache (only 1: induction p as [p ?| p ?| ]; only 1: auto; only 1: reflexivity; only 1: auto).	0.110547065735	109
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.4.3.2	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.222399950027	175
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40	7.23.39.5	search with cache (only 1: intros n; only 1: intros a0; only 1: fix odd_spec 1; only 1: auto).	23.3448181152	65890
Coq.rtauto.Rtauto.compose0	40	12.4.1.5.4.15	search with cache (only 1: intro H; only 1: induction F; only 1: unfold push, empty; only 1: auto; only 1: intros r s; only 1: firstorder  discriminate).	34.5512897968	68177
Coq.rtauto.Rtauto.compose1	40	17.7.0.0.0.0	search with cache (only 1: induction F; only 1: intros A H; only 1: simpl; only 1: auto; only 1: intros r s; only 1: firstorder  discriminate).	36.4543020725	65102
Coq.rtauto.Rtauto.compose2	40	0.1.0.1.9.1.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros r s; only 1: intros A H; only 1: simpl; only 1: apply IHF; only 1: auto).	5.25003600121	6869
Coq.rtauto.Rtauto.compose3	40	0.1.0.0.10.0.0.1.0	search with cache (only 1: induction F; only 1: intros A B C H; only 1: simpl; only 1: auto; only 1: intros r s; only 1: intros A B H; only 1: simpl; only 1: apply IHF; only 1: auto).	7.327698946	9290
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40	0.33	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.82904577255	3951
Coq.Setoids.Setoid.Seq_refl	40	23.21	search with cache (only 1: intros; only 1: firstorder).	0.300231933594	1483
Coq.Setoids.Setoid.Seq_sym	40	15.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: now transitivity y).	0.344596862793	619
Coq.Setoids.Setoid.Seq_trans	40	0.0.6.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: transitivity y; only 1: assumption; only 1: assumption).	0.0863659381866	100
Coq.Setoids.Setoid.gen_st	40	8.4.1.0.14.1	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto; only 1: inversion 1; only 1: trivial).	1.16916298866	3509
Coq.Bool.IfProp.Iftrue_inv	40	4.0.5	search with cache (only 1: destruct 1; only 1: auto; only 1: destr_bool).	0.0769610404968	113
Coq.Bool.IfProp.Iffalse_inv	40	0.0.2.1.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: auto with bool).	0.0162010192871	8
Coq.Bool.IfProp.IfProp_true	40	10.15.3.9	search with cache (only 1: intro H; only 1: intro n; only 1: inversion 1; only 1: auto).	2.57723689079	15859
Coq.Bool.IfProp.IfProp_false	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: inversion H; only 1: assumption).	0.0307910442352	20
Coq.Bool.IfProp.IfProp_or	40	0.3.1.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.0166749954224	14
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.BoolOrder.le_refl	40	0	search with cache (only 1: destr_bool).	0.00978994369507	1
Coq.Bool.BoolOrder.le_trans	40	0	search with cache (only 1: destr_bool).	0.0117781162262	1
Coq.Bool.BoolOrder.le_true	40	0	search with cache (only 1: destr_bool).	0.0102820396423	1
Coq.Bool.BoolOrder.false_le	40	0	search with cache (only 1: destr_bool).	0.00848507881165	1
Coq.Bool.BoolOrder.le_compat	40	0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: reduce; only 1: subst; only 1: intuition).	0.0298438072205	18
Coq.Bool.BoolOrder.lt_irrefl	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.0143477916718	2
Coq.Bool.BoolOrder.lt_trans	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0125329494476	2
Coq.Bool.BoolOrder.lt_compat	40	0	search with cache (only 1: intuition).	0.0125741958618	1
Coq.Bool.BoolOrder.lt_trichotomy	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0215401649475	5
Coq.Bool.BoolOrder.lt_total	40	0.0.0.2.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.123528003693	7
Coq.Bool.BoolOrder.lt_le_incl	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.107064962387	2
Coq.Bool.BoolOrder.le_lteq_dec	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.110652923584	4
Coq.Bool.BoolOrder.le_lteq	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0323269367218	6
Coq.Bool.BoolOrder.le_preorder	40	1.7.2.7.1	search with cache (only 1: constructor; only 1: intro l; only 1: destr_bool; only 1: intro l; only 1: destr_bool).	0.357628822327	890
Coq.Bool.BoolOrder.lt_strorder	40	0.5.0.0.5.14	search with cache (only 1: split; only 1: intros b b'; only 1: destr_bool; only 1: intros b1 b2 b3; only 1: destr_bool; only 1: auto).	0.374571084976	973
Coq.Bool.Zerob.zerob_true_intro	40	0.1.8	search with cache (only 1: induction n as [| n IHn]; only 1: easy; only 1: easy).	0.0784821510315	45
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0223619937897	3
Coq.Bool.Zerob.zerob_false_intro	40	1.9.0	search with cache (only 1: destruct n; only 1: now try Nat.order'; only 1: easy).	0.252974033356	129
Coq.Bool.Zerob.zerob_false_elim	40	4.3.5	search with cache (only 1: intros a b Hb; only 1: subst; only 1: easy).	0.751012086868	604
Coq.Bool.DecBool.ifdec_left	40	11.0.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.459542036057	1116
Coq.Bool.DecBool.ifdec_right	40	0.4.0.0	search with cache (only 1: intros; only 1: case H; only 1: contradiction; only 1: auto).	0.0696671009064	44
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.14.1	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.0837271213531	335
Coq.Bool.Sumbool.bool_eq_rec	40	0.0.0.2	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.02619099617	24
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0.0	search with cache (only 1: intros b; only 1: destruct b; only 1: auto; only 1: auto).	0.0142998695374	4
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	1.1.2.1.0	search with cache (only 1: case H1; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.405809879303	324
Coq.Bool.Sumbool.sumbool_not	40	1.1.1.0.0	search with cache (only 1: case H1; only 1: case H1; only 1: auto; only 1: auto; only 1: auto).	0.217365980148	156
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	20	search with cache (only 1: discriminate).	0.135874986649	435
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00700712203979	1
Coq.Bool.Bool.eq_true_false_abs	40	10.10.27.1	search with cache (only 1: intro H; only 1: destruct H; only 1: discriminate; only 1: discriminate).	2.74953317642	16649
Coq.Bool.Bool.not_true_is_false	40	0.17.2	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: auto).	0.314728975296	850
Coq.Bool.Bool.not_false_is_true	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0115129947662	3
Coq.Bool.Bool.not_true_iff_false	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0151901245117	5
Coq.Bool.Bool.not_false_iff_true	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0147290229797	5
Coq.Bool.Bool.le_implb	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.01966381073	9
Coq.Bool.Bool.compare_spec	40	0.1.1.0.0.1	search with cache (only 1: destr_bool; only 1: constructor; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.0197839736938	9
Coq.Bool.Bool.eqb_subst	40	4.0.1	search with cache (only 1: intro H; only 1: intro z; only 1: destr_bool).	0.0148868560791	8
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00766205787659	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00922799110413	1
Coq.Bool.Bool.eqb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0197141170502	9
Coq.Bool.Bool.eqb_false_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0222928524017	9
Coq.Bool.Bool.negb_orb	40	8	search with cache (only 1: destr_bool).	0.0229330062866	24
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00900220870972	1
Coq.Bool.Bool.negb_involutive	40	0	search with cache (only 1: destr_bool).	0.00851607322693	1
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00803422927856	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00961995124817	1
Coq.Bool.Bool.no_fixpoint_negb	40	0	search with cache (only 1: destr_bool).	0.0103011131287	1
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00779986381531	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00824999809265	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00800800323486	1
Coq.Bool.Bool.negb_true_iff	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0142800807953	5
Coq.Bool.Bool.negb_false_iff	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0142149925232	5
Coq.Bool.Bool.orb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.103935003281	9
Coq.Bool.Bool.orb_false_iff	40	0.0.0.1.0.10.2	search with cache (only 1: intro H; only 1: intuition; only 1: destr_bool; only 1: destr_bool; only 1: destruct b2; only 1: destr_bool; only 1: destr_bool).	11.1354079247	12984
Coq.Bool.Bool.orb_true_elim	40	0.0.1.0	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.013002872467	5
Coq.Bool.Bool.orb_prop	40	0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.014594078064	5
Coq.Bool.Bool.orb_true_intro	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destr_bool; only 1: simpl; only 1: destruct b2; only 1: intuition; only 1: intuition).	0.0170478820801	8
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00839400291443	1
Coq.Bool.Bool.orb_false_elim	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0107419490814	2
Coq.Bool.Bool.orb_diag	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0107090473175	9
Coq.Bool.Bool.orb_true_r	40	4.0.1.1	search with cache (only 1: intros; only 1: apply orb_true_iff; only 1: apply orb_true_iff; only 1: destr_bool).	0.0201690196991	15
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.00663805007935	1
Coq.Bool.Bool.orb_false_r	40	2	search with cache (only 1: destr_bool).	0.0100820064545	11
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.0061628818512	1
Coq.Bool.Bool.orb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00647687911987	1
Coq.Bool.Bool.orb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00602197647095	1
Coq.Bool.Bool.orb_comm	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0160539150238	13
Coq.Bool.Bool.orb_assoc	40	7.0	search with cache (only 1: intros; only 1: destr_bool).	0.0326051712036	19
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.118834972382	99
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.025288105011	5
Coq.Bool.Bool.andb_true_eq	40	0.0	search with cache (only 1: destr_bool; only 1: auto).	0.0104849338531	2
Coq.Bool.Bool.andb_false_intro1	40	0	search with cache (only 1: destr_bool).	0.00800895690918	1
Coq.Bool.Bool.andb_false_intro2	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: assumption; only 1: assumption; only 1: destruct b2; only 1: repeat split; only 1: assumption).	0.0195250511169	9
Coq.Bool.Bool.andb_false_r	40	1.5.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.0106289386749	9
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00597095489502	1
Coq.Bool.Bool.andb_diag	40	5.0	search with cache (only 1: intros; only 1: destr_bool).	0.00926303863525	7
Coq.Bool.Bool.andb_true_r	40	0	search with cache (only 1: destr_bool).	0.00571322441101	1
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00595712661743	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.1	search with cache (only 1: destr_bool; only 1: auto; only 1: auto; only 1: auto).	0.0399770736694	43
Coq.Bool.Bool.andb_negb_r	40	0	search with cache (only 1: destr_bool).	0.00682806968689	1
Coq.Bool.Bool.andb_negb_l	40	0	search with cache (only 1: destr_bool).	0.00669884681702	1
Coq.Bool.Bool.andb_comm	40	0.0.1.0.0.2.0	search with cache (only 1: intros; only 1: destruct b2; only 1: destruct b1; only 1: reflexivity; only 1: repeat split; only 1: apply andb_false_iff; only 1: auto).	0.0612239837646	48
Coq.Bool.Bool.andb_assoc	40	2.1.0.0.1.0	search with cache (only 1: intros; only 1: destruct b1; only 1: destruct b2; only 1: reflexivity; only 1: repeat split; only 1: reflexivity).	0.0234570503235	13
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00919508934021	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00912380218506	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00923681259155	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0090491771698	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00664496421814	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.0110070705414	1
Coq.Bool.Bool.implb_true_iff	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0195400714874	9
Coq.Bool.Bool.implb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0225739479065	5
Coq.Bool.Bool.implb_orb	40	0	search with cache (only 1: destr_bool).	0.00743699073792	1
Coq.Bool.Bool.implb_negb_orb	40	0	search with cache (only 1: destr_bool).	0.00621390342712	1
Coq.Bool.Bool.implb_true_r	40	0	search with cache (only 1: destr_bool).	0.00587296485901	1
Coq.Bool.Bool.implb_false_r	40	0	search with cache (only 1: destr_bool).	0.00586819648743	1
Coq.Bool.Bool.implb_true_l	40	0	search with cache (only 1: destr_bool).	0.00576996803284	1
Coq.Bool.Bool.implb_false_l	40	0	search with cache (only 1: destr_bool).	0.00672793388367	1
Coq.Bool.Bool.implb_same	40	0	search with cache (only 1: destr_bool).	0.00685906410217	1
Coq.Bool.Bool.implb_contrapositive	40	0	search with cache (only 1: destr_bool).	0.0070219039917	1
Coq.Bool.Bool.implb_negb	40	0	search with cache (only 1: destr_bool).	0.00700187683105	1
Coq.Bool.Bool.implb_curry	40	0	search with cache (only 1: destr_bool).	0.00894498825073	1
Coq.Bool.Bool.implb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00963401794434	1
Coq.Bool.Bool.implb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00949096679688	1
Coq.Bool.Bool.implb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00993704795837	1
Coq.Bool.Bool.xorb_false_r	40	0.0.2.2	search with cache (only 1: intros; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: auto; only 1: auto).	0.0121510028839	8
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00576210021973	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0058069229126	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.005206823349	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.00570702552795	1
Coq.Bool.Bool.xorb_comm	40	1	search with cache (only 1: destr_bool).	0.0075581073761	2
Coq.Bool.Bool.xorb_assoc_reverse	40	1	search with cache (only 1: destr_bool).	0.0094108581543	2
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00742483139038	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00927805900574	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.00966596603394	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00969791412354	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0100400447845	1
Coq.Bool.Bool.negb_xorb_l	40	1	search with cache (only 1: destr_bool).	0.00772595405579	2
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0922849178314	6
Coq.Bool.Bool.xorb_negb_negb	40	0.0.0.0.0.0	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0141570568085	6
Coq.Bool.Bool.eq_iff_eq_true	40	1.1.1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0242350101471	9
Coq.Bool.Bool.eq_true_iff_eq	40	1.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0146441459656	5
Coq.Bool.Bool.eq_true_negb_classical	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00910520553589	3
Coq.Bool.Bool.eq_true_not_negb	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00975012779236	3
Coq.Bool.Bool.absurd_eq_bool	40	5.5.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.142207145691	215
Coq.Bool.Bool.absurd_eq_true	40	5.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00795197486877	7
Coq.Bool.Bool.trans_eq_bool	40	4	search with cache (only 1: destr_bool).	0.0111927986145	13
Coq.Bool.Bool.Is_true_eq_true	40	0.5.2	search with cache (only 1: intros; only 1: destr_bool; only 1: auto).	0.0113229751587	10
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.00616502761841	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00788307189941	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00524616241455	1
Coq.Bool.Bool.eqb_eq	40	2.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.0109028816223	5
Coq.Bool.Bool.orb_prop_elim	40	0.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct a, b; only 1: auto with bool; only 1: auto with bool; only 1: auto with bool; only 1: destr_bool; only 1: auto).	0.0165221691132	10
Coq.Bool.Bool.orb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00849509239197	2
Coq.Bool.Bool.andb_prop_intro	40	8.0.0.1	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: apply H).	0.498852968216	713
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.015230178833	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0358102321625	23
Coq.Bool.Bool.eq_bool_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: tauto).	0.0134348869324	3
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.00945496559143	3
Coq.Bool.Bool.negb_prop_intro	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00883603096008	2
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00818991661072	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00979709625244	3
Coq.Bool.Bool.andb_if	40	2	search with cache (only 1: destr_bool).	0.0179250240326	23
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00665187835693	1
Coq.Bool.Bool.andb_lazy_alt	40	0.1.1.2.0.0	search with cache (only 1: intros; only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: repeat split; only 1: reflexivity).	0.0146222114563	10
Coq.Bool.Bool.orb_lazy_alt	40	0.0	search with cache (only 1: intros; only 1: trivial).	0.00644588470459	2
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	0.1.3.0	search with cache (only 1: destruct 1; only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intuition; only 1: intuition).	0.0165779590607	8
Coq.Bool.Bool.reflect_dec	40	2.2.2	search with cache (only 1: destruct 1; only 1: intuition; only 1: intuition).	0.0326759815216	24
Coq.Bool.Bool.eqb_spec	40	0.0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.016881942749	6
Coq.Bool.BoolEq.beq_eq_true	40	0.1.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0151710510254	6
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40	12.50.0	search with cache (only 1: intros x y e; only 1: apply eq_iff_eq_true; only 1: intuition).	22.2945981026	93840
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	0.0.7.8.5.0.0.0.0	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: auto; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: intuition; only 1: case (Aeq_dec a a0); only 1: auto with datatypes; only 1: auto with datatypes).	17.3124079704	21475
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	2.2.0.0.4.8.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: Bool.destr_bool; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto).	12.8026549816	7245
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	9	search with cache (only 1: intuition).	0.184804916382	117
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	3.0.2.0.0.0.0.1.1.0.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: auto with datatypes; only 1: simpl; only 1: tauto).	6.79408192635	4785
Coq.Lists.ListSet.set_add_not_empty	40
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40	2.0.1.0.2.1.20	search with cache (only 1: induction l as [| a0 l IHl]; only 1: auto; only 1: simpl; only 1: elim (Aeq_dec b a0); only 1: auto with datatypes; only 1: simpl; only 1: tauto).	2.30932283401	1843
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40	0.3.10.0.0.7.0.2	search with cache (only 1: unfold set_In; only 1: intros a0 x0 Ha0; only 1: elim Ha0; only 1: auto with datatypes; only 1: simpl; only 1: intros; only 1: rewrite set_add_iff; only 1: auto with datatypes).	10.3977320194	11541
Coq.Lists.ListSet.set_union_intro2	40
Coq.Lists.ListSet.set_union_intro	40	0.0.1.1.0.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: intros; only 1: elim H0; only 1: auto with datatypes; only 1: auto with datatypes).	0.138351917267	26
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	1.1.4.0.0.0.0.0.12	search with cache (only 1: simple induction x; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: auto with datatypes).	6.27258610725	3259
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction; only 1: auto || contradiction).	0.107955932617	39
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	8.5	search with cache (only 1: intros; only 1: eauto with datatypes).	1.54821300507	801
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40	1.2.0.11.1.0.4	search with cache (only 1: induction 1 as [| x l H H' IH]; only 1: constructor; only 1: simpl; only 1: apply set_mem_ind2; only 1: auto; only 1: intuition; only 1: now apply set_add_nodup).	11.3184239864	9997
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	10.0.0.0.1.5	search with cache (only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: unfold decidable, not; only 1: auto; only 1: simpl; only 1: intuition).	1.42087697983	1812
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	1.0.47	search with cache (only 1: intro m; only 1: destruct m; only 1: auto).	5.47673583031	25172
Coq.Lists.Streams.tl_nth_tl	40
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	4.17.0.2	search with cache (only 1: intros; only 1: coinduction ltac:(EqSt_reflex); only 1: destruct H; only 1: auto).	2.9608540535	5435
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	3.0.23	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.322089910507	931
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.2	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.024619102478	15
Coq.Lists.Streams.Str_nth_map	40	0.0.0.0.0.5	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: intros s; only 1: apply IHn).	0.1913189888	136
Coq.Lists.Streams.ForAll_map	40
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	5.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0287749767303	20
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.2.0.2.1	search with cache (only 1: unfold Str_nth; only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: simpl in *; only 1: apply IHn).	0.251851081848	167
Coq.Lists.List.nil_cons	40	8.2.7	search with cache (only 1: intro H; only 1: eapply Nat.Private_OrderTac.Tac.lt_irrefl; only 1: CRelationClasses.simpl_crelation).	0.243243932724	375
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	4.0.0.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: firstorder  discriminate; only 1: intros; only 1: inversion 1).	0.0184769630432	9
Coq.Lists.List.length_zero_iff_nil	40
Coq.Lists.List.hd_error_nil	40	4.0	search with cache (only 1: unfold hd_error, tl; only 1: auto).	0.0101699829102	6
Coq.Lists.List.hd_error_cons	40	4.1	search with cache (only 1: simpl; only 1: CRelationClasses.simpl_crelation).	0.0121018886566	7
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	3.3.0.0	search with cache (only 1: simpl; only 1: destruct l; only 1: reflexivity; only 1: auto).	0.018483877182	11
Coq.Lists.List.app_nil_r	40
Coq.Lists.List.app_nil_end	40	0.0.0.1.0.3	search with cache (only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0195479393005	10
Coq.Lists.List.app_assoc	40	0.0.0.0.3	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.0205039978027	8
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.0359029769897	26
Coq.Lists.List.app_comm_cons	40	2.4	search with cache (only 1: simpl; only 1: f_equal).	0.0243060588837	20
Coq.Lists.List.app_eq_nil	40	2.3.0.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: intros H; only 1: discriminate H).	0.450138092041	398
Coq.Lists.List.app_eq_unit	40	0.1.2.13.7.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: firstorder  discriminate; only 1: simpl; only 1: destruct x; only 1: inversion 1; only 1: auto; only 1: intros H; only 1: discriminate H).	20.7036299706	36382
Coq.Lists.List.elt_eq_unit	40
Coq.Lists.List.app_inj_tail_iff	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	3.12.0.2.0.8	search with cache (only 1: intro x; only 1: induction x as [| x l IHl]; only 1: intro x; only 1: split; only 1: simpl; only 1: auto).	6.35322213173	8056
Coq.Lists.List.last_length	40	1.0.2.2.2	search with cache (only 1: intro l; only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.208750963211	118
Coq.Lists.List.app_inv_head_iff	40
Coq.Lists.List.app_inv_head	40
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.app_inv_tail_iff	40
Coq.Lists.List.in_eq	40	0.15.0	search with cache (only 1: intros a b; only 1: left; only 1: auto).	0.197604894638	325
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00949597358704	2
Coq.Lists.List.not_in_cons	40	5.3.0.1.8	search with cache (only 1: simpl; only 1: split; only 1: auto; only 1: intros (Hb, Ha); only 1: intuition).	0.478165864944	576
Coq.Lists.List.in_nil	40	0.0	search with cache (only 1: intros a b; only 1: auto).	0.00909805297852	2
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	15.2.2.0.0.1	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: intros a0 y H H0; only 1: firstorder  discriminate).	7.16476607323	9324
Coq.Lists.List.in_app_iff	40	20.0.7.0.0.2	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: tauto).	18.7306799889	27081
Coq.Lists.List.in_split	40
Coq.Lists.List.in_elt	40	1.5.0.1.1.1	search with cache (only 1: intros x l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.212846040726	270
Coq.Lists.List.in_elt_inv	40	2.0.0.0.1.4.6.0.4	search with cache (only 1: intro H; only 1: intros y H0 H1; only 1: elim H0; only 1: intro H2; only 1: elim H2; only 1: auto; only 1: auto; only 1: simpl; only 1: intuition).	3.63060712814	4931
Coq.Lists.List.in_inv	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.00941801071167	3
Coq.Lists.List.in_dec	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0110549926758	2
Coq.Lists.List.nth_default_eq	40
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.0.0.0.7.0.2	search with cache (only 1: induction l as [| ? ? IHl]; only 1: easy; only 1: destruct n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with arith).	4.19515395164	3111
Coq.Lists.List.app_nth1	40	0.0.0.0.3.0.2	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.55303192139	722
Coq.Lists.List.app_nth2	40
Coq.Lists.List.app_nth2_plus	40	0.0.0.1.1.0	search with cache (only 1: intro l; only 1: induction l as [| ? ? IHl]; only 1: intros l' d [| n]; only 1: auto; only 1: auto; only 1: auto).	0.027153968811	8
Coq.Lists.List.nth_middle	40	0.2.3	search with cache (only 1: induction l; only 1: auto; only 1: auto).	0.0357558727264	29
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_ext	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.0.0.5.1.0	search with cache (only 1: revert n; only 1: induction l as [| ? ? IHl]; only 1: now auto with arith; only 1: intro n; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: auto with arith).	8.2531940937	4811
Coq.Lists.List.nth_error_app2	40	0.0.1.0.3.1.1.0.0.4.0	search with cache (only 1: revert l; only 1: induction n as [| n IHn]; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: now auto with arith; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	3.99111890793	2989
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.0.0.0.1.6	search with cache (only 1: induction l as [| ? ? IHl]; only 1: simpl in *; only 1: easy; only 1: intro n; only 1: destruct n; only 1: simpl; only 1: split; only 1: simpl; only 1: now auto with arith).	5.04919099808	2743
Coq.Lists.List.last_last	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.removelast_last	40
Coq.Lists.List.remove_cons	40
Coq.Lists.List.remove_app	40
Coq.Lists.List.remove_In	40
Coq.Lists.List.notin_remove	40
Coq.Lists.List.in_remove	40
Coq.Lists.List.in_in_remove	40
Coq.Lists.List.remove_remove_comm	40
Coq.Lists.List.remove_remove_eq	40	0.1.3.0.2.0.0.10.0.1.0.11	search with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: symmetry; only 1: destruct (eq_dec x z); only 1: auto; only 1: simpl; only 1: destruct (eq_dec x z); only 1: tauto; only 1: rewrite IHl; only 1: auto).	35.7248239517	38642
Coq.Lists.List.remove_length_le	40
Coq.Lists.List.remove_length_lt	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.0	search with cache (only 1: simpl; only 1: intuition).	0.011342048645	6
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	2.0.0.5	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.137247800827	48
Coq.Lists.List.count_occ_cons_neq	40	0.1.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.0181238651276	4
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	1.0.3.3.1.0.3.23	search with cache (only 1: intro x; only 1: induction x as [| a l IHl]; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	33.8077380657	61679
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.rev_eq_app	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40	0.3.0.0.0.11.2.2	search with cache (only 1: induction l as [| a l IHl]; only 1: easy; only 1: simpl; only 1: rewrite app_length; only 1: simpl; only 1: rewrite <- plus_n_Sm, plus_n_O; only 1: simpl; only 1: auto).	4.48488998413	6983
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	5.5.10	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: auto).	2.12440490723	3914
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	2	search with cache (only 1: auto).	0.0091438293457	3
Coq.Lists.List.concat_cons	40	1.0	search with cache (only 1: intros a b; only 1: auto).	0.0133838653564	3
Coq.Lists.List.concat_app	40
Coq.Lists.List.in_concat	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	2	search with cache (only 1: auto).	0.00811719894409	3
Coq.Lists.List.in_map	40	0.0.2.2.0.0.6	search with cache (only 1: induction l as [| a l IHl]; only 1: intros a H; only 1: inversion_clear H; only 1: simpl; only 1: firstorder; only 1: destruct H; only 1: auto).	0.568650007248	546
Coq.Lists.List.in_map_iff	40	0.0.1.0.0.1.0.0	search with cache (only 1: intro l; only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.0377600193024	10
Coq.Lists.List.map_length	40	4.0.1.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto with arith).	0.0431830883026	21
Coq.Lists.List.map_nth	40	1.0.0.0.1.20.0.0.5.5	search with cache (only 1: induction l as [| ? ? IHl]; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros l2; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: firstorder  (subst; auto)).	34.0864019394	56764
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	0.1.0.0.0.2.8	search with cache (only 1: intros l1; only 1: induction l1 as [| a l1 IHl1]; only 1: auto; only 1: intros l2; only 1: simpl; only 1: f_equal; only 1: auto).	2.33053088188	2088
Coq.Lists.List.map_last	40	0.1.2.0.0.3	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.242901086807	145
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	7.0	search with cache (only 1: intro l; only 1: now destruct l).	0.169926166534	101
Coq.Lists.List.map_eq_cons	40
Coq.Lists.List.map_eq_app	40
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.flat_map_app	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.5.2.2.9	search with cache (only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.847232103348	1058
Coq.Lists.List.concat_map	40
Coq.Lists.List.remove_concat	40
Coq.Lists.List.map_id	40	2.9.1.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: repeat split; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.915990829468	1404
Coq.Lists.List.map_map	40	1.0.0.0.0.9	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.739673852921	804
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	1.2.0.1.0.1.4	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.692351818085	806
Coq.Lists.List.flat_map_ext	40	1.4.0.0.0.0.1.9	search with cache (only 1: intros; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IH; only 1: rewrite H by intuition; only 1: reflexivity).	0.803291082382	1256
Coq.Lists.List.nth_nth_nth_map	40
Coq.Lists.List.fold_left_app	40	11.2.0.2.0	search with cache (only 1: induction l as [| a l IHl]; only 1: repeat split; only 1: intros; only 1: simpl; only 1: auto).	2.23143815994	3105
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	1.7.0.3.0.0.6.1	search with cache (only 1: intros; only 1: induction l as [| a l IHl]; only 1: reflexivity; only 1: simpl; only 1: destruct l as [| x l]; only 1: reflexivity; only 1: rewrite IHl; only 1: auto).	5.74409198761	8025
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.2.1.0.5.9.8	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: split; only 1: simpl; only 1: case (f a); only 1: auto; only 1: simpl; only 1: congruence).	1.3805911541	2510
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	1.2.0.2.0.6	search with cache (only 1: induction l as [| a l IH]; only 1: easy; only 1: simpl; only 1: case_eq (f a); only 1: intuition congruence; only 1: intuition congruence).	0.742582082748	347
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0145001411438	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40
Coq.Lists.List.ext_in_filter	40	9.0.2	search with cache (only 1: intros f g l; only 1: rewrite filter_map; only 1: apply ext_in_map).	0.540266990662	431
Coq.Lists.List.filter_ext_in_iff	40	0.1.1.1.7.1	search with cache (only 1: intros f g l; only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: rewrite filter_map; only 1: apply map_ext_in).	0.421198129654	411
Coq.Lists.List.filter_ext	40	1.2.0	search with cache (only 1: intros f g l H; only 1: apply filter_ext_in; only 1: auto).	0.0134449005127	6
Coq.Lists.List.remove_alt	40	3.4.3.0.0.3.1.19	search with cache (only 1: induction l as [| z l IHl]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct (eq_dec x z); only 1: auto; only 1: rewrite IHl; only 1: auto).	25.9829001427	24537
Coq.Lists.List.count_occ_alt	40
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.2.0.6.0.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.732883930206	594
Coq.Lists.List.split_length_r	40	0.0.0.2.0.6.1	search with cache (only 1: induction l as [| a l IHl]; only 1: auto; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	1.28176498413	1009
Coq.Lists.List.split_combine	40	1.0.2.5.0.0.2.0.6.0	search with cache (only 1: intro l; only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (split l); only 1: subst; only 1: destruct a; only 1: simpl in *; only 1: auto).	11.1454589367	9473
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.2.0.0.0.0.0.1.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: trivial; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	1.49461913109	812
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40
Coq.Lists.List.lel_trans	40
Coq.Lists.List.lel_cons_cons	40	1.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0187530517578	4
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0120890140533	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0127518177032	3
Coq.Lists.List.lel_nil	40	7.0.0.0.1.2.2.0.4	search with cache (only 1: intro l2; only 1: intros Heq; only 1: destruct l2 as [| x2 l2]; only 1: auto; only 1: absurd (length (x2 :: l2 ++ l) <= length l); only 1: simpl; only 1: rewrite app_length; only 1: auto with arith; only 1: now simpl).	2.80948901176	2581
Coq.Lists.List.incl_nil_l	40	2.0.0.2.0	search with cache (only 1: induction l as [| x l]; only 1: auto; only 1: intros a b; only 1: simpl; only 1: auto).	0.0201449394226	9
Coq.Lists.List.incl_l_nil	40	9.9.3.4.17	search with cache (only 1: intros l H; only 1: destruct l as [| x l]; only 1: auto; only 1: specialize (H x); only 1: firstorder).	28.9269509315	50632
Coq.Lists.List.incl_refl	40	1.0	search with cache (only 1: intros l a Hin; only 1: auto).	0.00954914093018	3
Coq.Lists.List.incl_tl	40	1.17	search with cache (only 1: right; only 1: auto).	0.668447971344	730
Coq.Lists.List.incl_tran	40	0	search with cache (only 1: auto).	0.0109431743622	1
Coq.Lists.List.incl_appl	40	2	search with cache (only 1: auto with datatypes).	0.102490901947	14
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.011785030365	1
Coq.Lists.List.incl_cons	40	4.3.2	search with cache (only 1: intros; only 1: intros Hincl; only 1: firstorder  (subst; auto)).	0.224310874939	87
Coq.Lists.List.incl_cons_inv	40	0.1.0.0	search with cache (only 1: unfold incl; only 1: intros x y Hin; only 1: simpl; only 1: auto).	0.0203328132629	5
Coq.Lists.List.incl_app	40	1.4.1.0.4.4	search with cache (only 1: unfold incl; only 1: intros l m a; only 1: elim l; only 1: auto; only 1: intros; only 1: firstorder).	3.43850302696	3117
Coq.Lists.List.incl_app_app	40	0	search with cache (only 1: auto with datatypes).	0.0110142230988	1
Coq.Lists.List.incl_app_inv	40	4.2.2	search with cache (only 1: unfold incl; only 1: intros; only 1: intuition).	0.0996708869934	89
Coq.Lists.List.incl_filter	40
Coq.Lists.List.remove_incl	40
Coq.Lists.List.incl_map	40
Coq.Lists.List.firstn_nil	40	0.0.49	search with cache (only 1: destruct n; only 1: trivial; only 1: auto).	0.405372858047	1334
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.00816297531128	1
Coq.Lists.List.firstn_all	40	0.2.6.0.0.1.11	search with cache (only 1: induction l as [| a l' Hrec]; only 1: now simpl; only 1: destruct l' as [| b l']; only 1: now simpl; only 1: simpl; only 1: f_equal; only 1: now simpl).	1.06647992134	1083
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.00815796852112	2
Coq.Lists.List.firstn_le_length	40
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40	3.0.1.3.7.0.1.0	search with cache (only 1: induction n as [| k iHk]; only 1: now reflexivity; only 1: intro l; only 1: induction l as [| ? l IHl]; only 1: now reflexivity; only 1: simpl in *; only 1: intro H; only 1: now f_equal).	36.9220900536	27026
Coq.Lists.List.firstn_app_2	40	1.0.0.2.4.0.8.1	search with cache (only 1: intros l1 l2; only 1: induction l1 as [| ? ? IHl1]; only 1: unfold firstn at 2, length; only 1: now simpl; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: f_equal; only 1: now simpl).	38.0518319607	30429
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40	2.0.0.2.4.0.8	search with cache (only 1: induction n as [| k iHk]; only 1: now reflexivity; only 1: destruct l as [| x xs]; only 1: apply firstn_all2; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	13.6956679821	11497
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	8	search with cache (only 1: trivial).	0.0161819458008	20
Coq.Lists.List.skipn_nil	40	2.0.4.24	search with cache (only 1: intro l'; only 1: destruct l' as [| b l']; only 1: reflexivity; only 1: reflexivity).	0.489072084427	1057
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00943994522095	1
Coq.Lists.List.skipn_all	40	2.1.36	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: now simpl).	1.92398905754	3296
Coq.Lists.List.skipn_all2	40
Coq.Lists.List.firstn_skipn	40	3.0.3.3.2.1.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: reflexivity; only 1: simpl; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: f_equal; only 1: auto with arith).	3.36968708038	3045
Coq.Lists.List.firstn_length	40	0.0.0.0.5.0.0.0.0	search with cache (only 1: intro l; only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: intro l; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.63278913498	2496
Coq.Lists.List.skipn_length	40	4.0.2.9.4.3	search with cache (only 1: induction n as [| k iHk]; only 1: now intro l; induction l; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto with arith).	6.00924515724	4419
Coq.Lists.List.skipn_app	40	0.0.2.0.1.1.0.1	search with cache (only 1: induction n; only 1: intros l; only 1: auto; only 1: intro l; only 1: destruct l; only 1: auto; only 1: simpl; only 1: auto).	0.923470020294	447
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.removelast_firstn_len	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	2.0.0.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0177710056305	8
Coq.Lists.List.combine_firstn_l	40	3.0.0.3.0.1.0.1.1.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: intros l; only 1: apply length_zero_iff_nil; only 1: auto; only 1: intro l'; only 1: destruct l'; only 1: simpl; only 1: apply length_zero_iff_nil; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	30.8978118896	27109
Coq.Lists.List.combine_firstn_r	40	0.2.0.0.0.0.1.0.1.4.2.4.0	search with cache (only 1: intro l; only 1: induction l as [| x l IHl]; only 1: intro l; only 1: induction l as [| x l IHl]; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with l'; only 1: rewrite <- IHl; only 1: reflexivity).	32.7778799534	35160
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.1.1.6	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder).	0.827921867371	658
Coq.Lists.List.Add_length	40	0.1.2.5	search with cache (only 1: induction 1 as [| ? ? ? ? IHAdd]; only 1: trivial; only 1: simpl in *; only 1: auto).	0.137408018112	79
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0102000236511	2
Coq.Lists.List.NoDup_cons_iff	40	1.5.2.1	search with cache (only 1: split; only 1: inversion_clear 1; only 1: intuition; only 1: now constructor).	0.178943872452	185
Coq.Lists.List.NoDup_rev	40
Coq.Lists.List.NoDup_filter	40
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.nodup_incl	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_incl_NoDup	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.cons_seq	40	2	search with cache (only 1: auto).	0.00647807121277	3
Coq.Lists.List.seq_length	40	3.6.2.3.11	search with cache (only 1: intro n; only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: auto).	1.23632216454	2453
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.seq_S	40	0.1.0.1.0.1.0.2	search with cache (only 1: intro len1; only 1: induction len1 as [| len1' IHlen]; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_0_r; only 1: intros; only 1: simpl in *; only 1: now rewrite Nat.add_succ_r, IHlen).	0.281558990479	276
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nth	40
Coq.Lists.List.Exists_nil	40	14.0	search with cache (only 1: intuition; only 1: easy).	0.133821964264	160
Coq.Lists.List.Exists_cons	40	0.0.0.0.84.29	search with cache (only 1: intuition; only 1: inversion H; only 1: subst; only 1: auto; only 1: subst; only 1: auto).	8.29949498177	37890
Coq.Lists.List.Exists_app	40
Coq.Lists.List.Exists_rev	40
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Exists_fold_right	40	0.0.0.0.4.0.3.4.1.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: simpl; only 1: auto; only 1: induction l; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intuition).	6.83643317223	10116
Coq.Lists.List.incl_Exists	40
Coq.Lists.List.Forall_forall	40
Coq.Lists.List.Forall_nth	40
Coq.Lists.List.Forall_inv	40	3.1.11	search with cache (only 1: intros a b; only 1: intros HE; only 1: now inversion HE; intuition).	0.442975997925	856
Coq.Lists.List.Forall_inv_tail	40	0.2.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: trivial).	0.0128841400146	5
Coq.Lists.List.Forall_app	40
Coq.Lists.List.Forall_elt	40	0.5.1.1.0.1.0.1.11	search with cache (only 1: induction l1; only 1: simpl; only 1: intuition; only 1: inversion H; only 1: intuition; only 1: simpl; only 1: intros HF; only 1: inversion_clear HF; only 1: intuition).	1.63253712654	3197
Coq.Lists.List.Forall_rev	40
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_fold_right	40	2.0.2.0.1.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	3.96929216385	3054
Coq.Lists.List.incl_Forall	40
Coq.Lists.List.map_ext_Forall	40
Coq.Lists.List.Exists_impl	40	0.0.4.9.7.3	search with cache (only 1: intros HE; only 1: intros P H H0 l; only 1: apply Exists_exists; only 1: induction l; only 1: firstorder; only 1: firstorder).	2.3968770504	5627
Coq.Lists.List.Exists_or	40
Coq.Lists.List.Exists_or_inv	40
Coq.Lists.List.Forall_impl	40	0.0.2.0.2.5.5	search with cache (only 1: intro; only 1: intros a l H; only 1: induction 1; only 1: left; only 1: right; only 1: auto; only 1: auto).	3.28129386902	5437
Coq.Lists.List.Forall_and	40	0.0.0.0.6.0.2	search with cache (only 1: intros P Q H l; only 1: rewrite !Forall_forall; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: firstorder).	2.449862957	2179
Coq.Lists.List.Forall_and_inv	40	4.4.0	search with cache (only 1: intros P Q l; only 1: rewrite !Forall_forall; only 1: firstorder).	0.352591991425	241
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40
Coq.Lists.List.Forall_Exists_dec	40
Coq.Lists.List.incl_Forall_in_iff	40	3.0.2.16.5	search with cache (only 1: split; only 1: apply Forall_forall; only 1: induction 1; only 1: easy; only 1: intuition).	6.62546801567	9379
Coq.Lists.List.exists_Forall	40
Coq.Lists.List.Forall_image	40
Coq.Lists.List.concat_nil_Forall	40
Coq.Lists.List.in_flat_map_Exists	40
Coq.Lists.List.notin_flat_map_Forall	40
Coq.Lists.List.Forall2_refl	40	0	search with cache (only 1: auto).	0.00590491294861	1
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	1.1.0.31	search with cache (only 1: induction 1 as [l| x ? ? ? IHAdd]; only 1: auto; only 1: simpl; only 1: auto).	11.5897769928	22059
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	1.1.0.29	search with cache (only 1: induction n; only 1: auto; only 1: simpl in *; only 1: now f_equal).	2.46464204788	3988
Coq.Lists.List.repeat_spec	40	6.0.16.0.16.62	search with cache (only 1: revert n; only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	6.45087599754	40919
Coq.Lists.List.repeat_cons	40	0.31.12.0.82	search with cache (only 1: induction n as [| n IH]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto with arith).	4.37231993675	16636
Coq.Lists.List.repeat_app	40	0.0.0.0.2.1	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.0205388069153	9
Coq.Lists.List.repeat_eq_app	40
Coq.Lists.List.repeat_eq_cons	40	0.1.11.9.8	search with cache (only 1: induction n as [| k Hrec]; only 1: intros [=<- H0]; only 1: intros [=<- H0]; only 1: subst; only 1: auto).	4.08088612556	9389
Coq.Lists.List.repeat_eq_elt	40
Coq.Lists.List.Forall_eq_repeat	40
Coq.Lists.List.repeat_to_concat	40	1.0.0.2.2	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: simpl; only 1: f_equal; only 1: apply IHn).	0.0393879413605	25
Coq.Lists.List.list_sum_app	40
Coq.Lists.List.list_max_app	40
Coq.Lists.List.list_max_le	40
Coq.Lists.List.list_max_lt	40
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: auto).	0.015643119812	3
Coq.Lists.SetoidPermutation.PermutationA_app_head	40
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	1.1.1.0.0.10	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: do 2 (etransitivity; try eassumption)).	2.48306202888	1217
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0176069736481	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	11.1.7.3.6	search with cache (only 1: induction 1; only 1: intuition; only 1: now apply permA_skip; only 1: eauto; only 1: now transitivity l').	3.69123601913	4230
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.3.1	search with cache (only 1: induction 1; only 1: constructor; only 1: auto).	0.0205478668213	7
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40	2.0.2.0.1.0.0.0.2	search with cache (only 1: induction l; only 1: split; only 1: now intuition; only 1: now intuition; only 1: split; only 1: intros HE; only 1: now inversion HE; intuition; only 1: intros HE; only 1: now inversion HE; intuition).	2.34522914886	2091
Coq.Lists.SetoidList.InA_cons	40	1.1.1.15.0.2	search with cache (only 1: intros HE; only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: intuition).	2.16118788719	2937
Coq.Lists.SetoidList.InA_nil	40	11.8.2	search with cache (only 1: intro y; only 1: firstorder; only 1: now intuition).	0.70191693306	1560
Coq.Lists.SetoidList.InA_alt	40	0.0.1.0.6.2.0.5.1	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	9.35150694847	7882
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	0.0.2.0.1	search with cache (only 1: induction l as [| x l]; only 1: intro n; only 1: auto with arith; only 1: intros a b; only 1: auto).	0.0215148925781	8
Coq.Lists.SetoidList.eqlistA_altdef	40	0.2.2.5.0.2.11.8	search with cache (only 1: intro y; only 1: split; only 1: induction 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	21.2401528358	32239
Coq.Lists.SetoidList.equivlist_equiv	40	8	search with cache (only 1: firstorder).	0.0176630020142	9
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.4.5	search with cache (only 1: intros x y z H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.355391979218	123
Coq.Lists.SetoidList.In_InA	40	0.4.0	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0183961391449	7
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40	14.0.4.0.16.3	search with cache (only 1: intros; only 1: induction l1; only 1: auto; only 1: inversion H; only 1: auto; only 1: intuition).	22.6295690536	10944
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.7.17	search with cache (only 1: intuition; only 1: inv; only 1: auto).	0.900245904922	628
Coq.Lists.SetoidList.InA_double_head	40	0.8	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.159119129181	14
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.049565076828	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.2.0.5	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.106736898422	31
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	1.0.0.0	search with cache (only 1: red; only 1: intros; only 1: rewrite !InA_cons; only 1: intuition).	0.0363299846649	5
Coq.Lists.SetoidList.equivlistA_permute_heads	40	1.1.0	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: intuition).	0.0478088855743	5
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.0.0.9	search with cache (only 1: constructor; only 1: rewrite InA_app_iff; only 1: tauto; only 1: rewrite InA_app_iff; only 1: tauto).	0.514701128006	334
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	3.0.0.2.0.3.0.2.5.0.8	search with cache (only 1: induction s1; only 1: simpl; only 1: intros; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: auto; only 1: auto).	3.85233783722	3927
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	0.5.0.6.7.0.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: destruct IHl; only 1: auto).	2.97086906433	3222
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	13.1.1	search with cache (only 1: destruct l; only 1: constructor; only 1: intuition).	14.3579490185	3735
Coq.Lists.SetoidList.InA_InfA	40	3.0.0.0.3	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: eauto).	0.422230958939	73
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	0.4.1.46	search with cache (only 1: induction 1; only 1: auto; only 1: constructor; only 1: auto).	5.37964606285	12252
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	2.21.0.26.3	search with cache (only 1: intro; only 1: induction 1; only 1: auto; only 1: simpl; only 1: auto).	23.4417099953	29948
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.3.1.0.0.1.1.3	search with cache (only 1: induction 1; only 1: simpl in *; only 1: induction 1; only 1: auto; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	4.15384912491	986
Coq.Lists.SetoidList.eqlistA_app	40	0.0.1.0.1	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0359129905701	7
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	3.0.4.1.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: simpl; only 1: apply eqlistA_rev_app; only 1: auto; only 1: auto).	0.475220918655	331
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	1.7.0	search with cache (only 1: intros x0 y; only 1: decide equality; only 1: decide equality).	0.0562059879303	71
Coq.NArith.BinNat.N.discr	40
Coq.NArith.BinNat.N.peano_rect_base	40	0	search with cache (only 1: auto).	0.00741696357727	1
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00838708877563	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.1.0.1.7	search with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.173634052277	93
Coq.NArith.BinNat.N.bi_induction	40
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.00869822502136	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: trivial).	0.00717902183533	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.0072660446167	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00680112838745	1
Coq.NArith.BinNat.N.pos_pred_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: auto).	0.021842956543	7
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.2	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: reflexivity).	0.0123388767242	5
Coq.NArith.BinNat.N.pos_pred_succ	40	0.0.0.0.0.0.1.0.1.0.1.0.0.0.1.1	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	4.88952302933	4506
Coq.NArith.BinNat.N.succ_pos_pred	40	0.0.0.0.0.1.0.2.1.0.0.0.1	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: auto; only 1: reflexivity).	6.96478295326	5003
Coq.NArith.BinNat.N.pred_succ	40	5.0.11	search with cache (only 1: destruct n; only 1: reflexivity; only 1: apply Pos.pred_N_succ).	0.666268110275	845
Coq.NArith.BinNat.N.pred_sub	40	0.1.0.5.0.7	search with cache (only 1: induction n using peano_ind; only 1: reflexivity; only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: now destruct p).	0.27019405365	309
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0918200016022	1
Coq.NArith.BinNat.N.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00730586051941	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0.1.0	search with cache (only 1: destruct n; only 1: auto; only 1: auto).	0.0133428573608	4
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00916695594788	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40	0.18.4	search with cache (only 1: revert m; only 1: fix odd_spec 1; only 1: easy).	6.2639670372	7556
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.2.2.0.2	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	1.05556797981	634
Coq.NArith.BinNat.N.compare_le_iff	40	1.0.0.0.2	search with cache (only 1: unfold leb, le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.132539987564	54
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.2.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: auto; only 1: now destruct 2; only 1: trivial).	0.0227019786835	8
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	4	search with cache (only 1: reflexivity).	0.262001037598	22
Coq.NArith.BinNat.N.succ_double_spec	40	11.6.4	search with cache (only 1: simpl; only 1: nzsimpl'; only 1: now destruct n).	12.3654198647	3083
Coq.NArith.BinNat.N.double_add	40	0.1.1.0.1.0.0.0.0.0.0.1.8	search with cache (only 1: induct n; only 1: nzsimpl; only 1: reflexivity; only 1: intro n; only 1: destruct n, m; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: reflexivity; only 1: unfold succ, add; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	26.5216608047	7595
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.00982999801636	1
Coq.NArith.BinNat.N.double_mul	40	1	search with cache (only 1: now destruct n, m).	0.010293006897	2
Coq.NArith.BinNat.N.succ_double_mul	40
Coq.NArith.BinNat.N.div2_double	40	0.1.0.54	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: auto).	0.493075847626	1951
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00780296325684	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40	0.3.3.0.3.0.1.3.20	search with cache (only 1: destruct n, m; only 1: intro n; only 1: now destruct n; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	3.06884503365	4545
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	3.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: unfold lt in *; only 1: simpl in *; only 1: trivial).	0.0313830375671	11
Coq.NArith.BinNat.N.double_le_mono	40	2.1	search with cache (only 1: intro H; only 1: now destruct n, m).	0.0220060348511	5
Coq.NArith.BinNat.N.succ_double_lt_mono	40	2.1.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: intros H; only 1: easy).	0.044291973114	24
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	0.0202498435974	5
Coq.NArith.BinNat.N.compare_0_r	40	1.0.1.1.23	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: now intuition; only 1: simpl in *; only 1: now intuition).	30.6423280239	29737
Coq.NArith.BinNat.N.pow_0_r	40	1.0	search with cache (only 1: rewrite one_succ; only 1: now rewrite <- one_succ).	0.0113821029663	3
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	10.16	search with cache (only 1: intro H; only 1: false_hyp H nlt_0_r).	0.177054166794	467
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.2.2.11.0.0.2.2.5	search with cache (only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: apply succ_inj_wd; only 1: now rewrite <- one_succ; only 1: easy'; only 1: trivial).	12.4944388866	23725
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0152921676636	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	16.2	search with cache (only 1: intros LT; only 1: now elim (nlt_0_r n)).	0.323611974716	332
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	2	search with cache (only 1: apply le_0_l).	0.275626897812	147
Coq.NArith.BinNat.N.testbit_even_0	40	3.0.9.0.17.14.1.2	search with cache (only 1: rewrite two_succ; only 1: simpl; only 1: destruct (PeanoNat.Nat.eq_decidable a 0) as [EQ| NEQ]; only 1: subst; only 1: easy'; only 1: destruct a as [| a]; only 1: easy'; only 1: easy').	8.86253809929	17027
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00849604606628	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.1.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0183639526367	5
Coq.NArith.BinNat.N.testbit_neg_r	40	8.0	search with cache (only 1: intros H; only 1: false_hyp H nlt_0_r).	0.0175688266754	10
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00952196121216	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40	17.5	search with cache (only 1: unfold ltb, lt; only 1: now rewrite Pos.compare_antisym, CompOpp_iff).	19.469315052	10640
Coq.NArith.BinNat.N.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.902901887894	170
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00869107246399	1
Coq.NArith.BinNat.N.ge_le_iff	40
Coq.NArith.BinNat.N.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.461735010147	86
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00779604911804	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40	2.2.4.2.1.2.24	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: apply Pos.pred_N_succ; only 1: simpl; only 1: now destruct p; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: now nzsimpl).	11.1972649097	8109
Coq.NArith.BinNat.N.iter_swap_gen	40	0.0.0.0.0.0.0.0.0.2.0.0.0.33	search with cache (only 1: induction n; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp).	17.4578361511	21951
Coq.NArith.BinNat.N.iter_swap	40	0.1.1.3.3.28	search with cache (only 1: intro H; only 1: intuition; only 1: destruct H; only 1: auto; only 1: symmetry; only 1: now apply Pos.iter_swap_gen).	3.15245914459	7877
Coq.NArith.BinNat.N.iter_succ	40
Coq.NArith.BinNat.N.iter_succ_r	40	7.0.2.0.0.0.0	search with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: simpl; only 1: trivial; only 1: intros; only 1: now rewrite Pos.iter_succ, Pos.iter_swap).	4.63458919525	3743
Coq.NArith.BinNat.N.iter_add	40
Coq.NArith.BinNat.N.iter_ind	40
Coq.NArith.BinNat.N.iter_invariant	40	0.0.0.11.0.0.0.1	search with cache (only 1: intro n; only 1: destruct n; only 1: intros; only 1: trivial; only 1: intros; only 1: apply Pos.iter_ind; only 1: auto; only 1: auto).	3.57239198685	4436
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40	0.3	search with cache (only 1: rewrite ?Pos.compare_eq_iff; only 1: now apply Pos.eqb_eq).	0.0290539264679	5
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0158457756042	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0323488712311	1
Coq.NArith.Ndec.Neqb_complete	40
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40
Coq.NArith.Ndec.Ndiv2_eq	40	10.0.1	search with cache (only 1: intros H; only 1: eqb2eq; only 1: now subst).	0.910722017288	658
Coq.NArith.Ndec.Ndiv2_neq	40	1.3.0.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: now subst).	0.0770568847656	22
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.1.0	search with cache (only 1: eqb2eq; only 1: intros H H'; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.125494003296	8
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.0128269195557	1
Coq.NArith.Ndec.Nleb_antisym	40	1.1.1	search with cache (only 1: rewrite Nleb_Nle; only 1: rewrite Nleb_Nle; only 1: N.order).	0.128261804581	6
Coq.NArith.Ndec.Nleb_trans	40	0.1	search with cache (only 1: rewrite !Nleb_Nle; only 1: N.order).	0.113555908203	3
Coq.NArith.Ndec.Nleb_ltb_trans	40	2.0.11	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	1.10551595688	590
Coq.NArith.Ndec.Nltb_leb_trans	40	2.0.16	search with cache (only 1: eqb2eq; only 1: rewrite !Nleb_Nle; only 1: N.order).	4.8877658844	3818
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	2.1.0.2.1.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.374279975891	208
Coq.NArith.Ndec.Nltb_double_mono	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0181357860565	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0374400615692	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	7.0.2.21.0	search with cache (only 1: intro n; only 1: N.cases ltac:(n); only 1: auto; only 1: intro n; only 1: now destruct n).	2.47614002228	3962
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40	4.28.0.2.39	search with cache (only 1: intros n; only 1: case n; only 1: trivial; only 1: fix odd_spec 1; only 1: auto).	29.7830731869	8640
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	1.0.11	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.180601835251	185
Coq.NArith.Ndist.ni_min_O_r	40	1.0.2.3.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.19268488884	132
Coq.NArith.Ndist.ni_min_inf_l	40	0	search with cache (only 1: trivial).	0.00645112991333	1
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.2	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.0119428634644	5
Coq.NArith.Ndist.ni_le_refl	40	0.0.0.1.0.0.0.1.0.0.0.45	search with cache (only 1: red; only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: intros; only 1: simpl; only 1: inversion H; only 1: rewrite H1; only 1: rewrite H1; only 1: reflexivity).	2.28385996819	8417
Coq.NArith.Ndist.ni_le_antisym	40	5.1.5.5	search with cache (only 1: intros; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	1.12680506706	1595
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	2.1.3.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.22362112999	153
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.1.0.0.2.0.0	search with cache (only 1: intro a; only 1: destruct a; only 1: intros; only 1: trivial; only 1: intro a; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.0411880016327	10
Coq.NArith.Ndigits.Nshiftr_nat_S	40	0	search with cache (only 1: now destruct a).	0.0100889205933	1
Coq.NArith.Ndigits.Nshiftl_nat_S	40	1	search with cache (only 1: reflexivity).	0.0083270072937	2
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0	search with cache (only 1: auto).	0.00911808013916	1
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00854516029358	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40	0.0.0.1.7.1.7.3.0.0	search with cache (only 1: destruct a, a'; only 1: simpl; only 1: auto; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: rewrite ?BinInt.Z.testbit_0_l, ?xorb_false_l, ?xorb_false_r; only 1: trivial; only 1: simpl; only 1: rewrite <- Ntestbit_Nbit, <- !Ptestbit_Pbit; only 1: apply N.pos_lxor_spec).	8.69268107414	9463
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40	0.0.0.2.0.2.1.0.0	search with cache (only 1: destruct a, a'; only 1: trivial; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: now rewrite orb_false_r; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: apply N.pos_lor_spec).	0.905205965042	633
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40	0.0.1.0.0.0.3.0.0.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: destruct a, a'; only 1: simpl; only 1: auto; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite andb_false_r; only 1: simpl; only 1: apply N.pos_land_spec).	0.774553060532	434
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40	6.0	search with cache (only 1: rewrite <- !Ntestbit_Nbit; only 1: now rewrite N.ldiff_spec).	0.0526940822601	32
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	1.0.0.0.0.1.5.5.1.3.2	search with cache (only 1: intros a; only 1: destruct a; only 1: trivial; only 1: simpl; only 1: rewrite <- !Ptestbit_Pbit; only 1: destruct p as [p| p| ]; only 1: simpl; only 1: easy; only 1: easy; only 1: simpl; only 1: easy).	16.8839759827	23631
Coq.NArith.Ndigits.Ndouble_bit0	40	20.3	search with cache (only 1: intros; only 1: now destruct n).	0.226298809052	475
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	1.0.0.0.0.3	search with cache (only 1: destruct n as [| p]; only 1: split; only 1: destruct p as [p| p| ]; only 1: easy; only 1: easy; only 1: easy).	0.0301630496979	10
Coq.NArith.Ndigits.Ndiv2_double	40
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40
Coq.NArith.Ndigits.Ndiv2_correct	40	1.1.1.3.1.12.13	search with cache (only 1: intros a n; only 1: destruct a; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: trivial).	23.4405860901	19590
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.7	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.145461082458	58
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.2.0.0.0.0.0.1.0.0.0.0.0.0.4.0	search with cache (only 1: intros a a' H H0; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	10.5717351437	7523
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40
Coq.NArith.Ndigits.Nless_def_3	40	0.0.0.0.0.2.0.0.0.0.10.0	search with cache (only 1: intros a a'; only 1: destruct a; only 1: destruct a' as [| p0]; only 1: reflexivity; only 1: trivial; only 1: destruct a' as [| p0]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	11.2189211845	7650
Coq.NArith.Ndigits.Nless_def_4	40	0.0.0.0.0.0.2.1.0.1.7.2.0	search with cache (only 1: intros; only 1: destruct a' as [| p0]; only 1: simpl; only 1: destruct a as [| p]; only 1: reflexivity; only 1: trivial; only 1: destruct a as [| p]; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	6.78001713753	7431
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40	1.1.9.1.9	search with cache (only 1: intros; only 1: destruct a as [| p]; only 1: easy'; only 1: exists p; only 1: trivial).	0.682557821274	992
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.0.3.0.6.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal).	1.86895895004	1482
Coq.NArith.NArith.test	40	0	search with cache (only 1: intuition N.Private_Tac.order).	0.0113589763641	1
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	0.2.0.1.2.4.0	search with cache (only 1: rewrite <- (id a), <- (id a'); only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	3.31155991554	922
Coq.NArith.Nnat.N2Nat.inj_double	40
Coq.NArith.Nnat.N2Nat.inj_succ_double	40
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a as [| p]; only 1: simpl N.to_nat; only 1: reflexivity; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0238540172577	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.4.14	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.608318805695	885
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	2.0.0.1.0.10	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	1.82333111763	894
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.080078125	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.0161919593811	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	4	search with cache (only 1: nat2N).	0.0179641246796	5
Coq.NArith.Nnat.Nat2N.inj_add	40	5	search with cache (only 1: nat2N).	0.0289218425751	11
Coq.NArith.Nnat.Nat2N.inj_sub	40	6	search with cache (only 1: nat2N).	0.0257539749146	11
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.019681930542	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	4	search with cache (only 1: nat2N).	0.0185618400574	5
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	4	search with cache (only 1: nat2N).	0.019730091095	5
Coq.NArith.Nnat.Nat2N.inj_max	40	4	search with cache (only 1: nat2N).	0.0353808403015	5
Coq.NArith.Nnat.Nat2N.inj_iter	40
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40	1.31.46.1.22	search with cache (only 1: symmetry; only 1: apply Pos.eqb_eq; only 1: destr_bool; only 1: destruct x; only 1: destr_bool).	11.2836601734	45133
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0644669532776	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.0109498500824	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0106818675995	1
Coq.Strings.Ascii.eqb_compat	40	0	search with cache (only 1: t_eqb).	0.00901007652283	1
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40	9.4.6	search with cache (only 1: apply Pos.eqb_eq; only 1: destruct x; only 1: destr_bool).	3.87694501877	729
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40	0.3.5	search with cache (only 1: destruct x; only 1: simpl; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	1.0496981144	289
Coq.Strings.String.string_dec	40	0.0.0.0.0.0.0.0.2.5.13.0	search with cache (only 1: intro n; only 1: intros x; only 1: decide equality; only 1: decide equality; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: apply bool_dec; only 1: decide equality).	20.7705898285	11968
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0120089054108	1
Coq.Strings.String.eqb_eq	40
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0126469135284	1
Coq.Strings.String.eqb_compat	40	0.0	search with cache (only 1: intros x x' Exx' y y' Eyy'; only 1: t_eqb).	0.00977993011475	2
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	0.1.6.3.1.0.1	search with cache (only 1: elim s; only 1: auto; only 1: intros b s2'; only 1: simpl; only 1: intros e; only 1: rewrite e; only 1: auto).	0.851181983948	1222
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.2.0.30	search with cache (only 1: destruct x; only 1: reflexivity; only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.751107931137	665
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	10	search with cache (only 1: trivial).	0.0234880447388	26
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	14	search with cache (only 1: trivial).	3.52984905243	2152
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	0	search with cache (only 1: auto).	0.0131030082703	1
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.nsatz.NsatzTactic.psos_r1b	40
Coq.nsatz.NsatzTactic.psos_r1	40	2.0.2.0.0.0	search with cache (only 1: intros x y H; only 1: setoid_replace x with (x - y + y); only 1: setoid_rewrite H; only 1: cring; only 1: setoid_rewrite H; only 1: cring).	0.235808134079	10
Coq.nsatz.NsatzTactic.nsatzR_diff	40
Coq.nsatz.NsatzTactic.P0Z_correct	40	0	search with cache (only 1: auto).	0.0195119380951	1
Coq.nsatz.NsatzTactic.Rext	40
Coq.nsatz.NsatzTactic.Rset	40	5	search with cache (only 1: apply ring_setoid).	0.0181849002838	6
Coq.nsatz.NsatzTactic.Rtheory	40
Coq.nsatz.NsatzTactic.PolZadd_correct	40
Coq.nsatz.NsatzTactic.PolZmul_correct	40
Coq.nsatz.NsatzTactic.R_power_theory	40
Coq.nsatz.NsatzTactic.norm_correct	40
Coq.nsatz.NsatzTactic.PolZeq_correct	40
Coq.nsatz.NsatzTactic.mult_l_correct	40
Coq.nsatz.NsatzTactic.compute_list_correct	40
Coq.nsatz.NsatzTactic.check_correct	40
Coq.nsatz.NsatzTactic.Qri	40
Coq.nsatz.NsatzTactic.Q_one_zero	40	1.1	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0170440673828	4
Coq.nsatz.NsatzTactic.Qcri	40
Coq.nsatz.NsatzTactic.Qdi	40
Coq.nsatz.NsatzTactic.Z_one_zero	40	0	search with cache (only 1: lia).	0.0177669525146	1
Coq.nsatz.NsatzTactic.Zcri	40	5.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0558581352234	14
Coq.nsatz.NsatzTactic.Zdi	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40	167	search with cache (only 1: constructor).	2.55360007286	14151
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40	3.0.0.3.5	search with cache (only 1: unfold IZR, IPR; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	1.57964396477	1263
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	1.1.1.1.1.0	search with cache (only 1: simpl in *; only 1: unfold lt; only 1: destruct l as [| x xs]; only 1: easy; only 1: simpl in *; only 1: trivial).	0.709539890289	250
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	6.5.0.0.2	search with cache (only 1: simple induction l; only 1: intros; only 1: reflexivity; only 1: simpl in *; only 1: auto).	2.17919206619	1615
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.1.2.1.0	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: auto).	0.049870967865	15
Coq.Reals.RList.RList_P19	40	1.2.19.0.9	search with cache (only 1: intro; only 1: induction l as [| a tail]; only 1: firstorder  discriminate; only 1: exists a,tail; only 1: reflexivity).	2.29346895218	3819
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	4.19.3	search with cache (only 1: intros; only 1: f_equal; only 1: auto with arith).	1.53313803673	1986
Coq.Reals.RList.RList_P22	40	3.2.8.0.0.0.5	search with cache (only 1: intro; only 1: induction l1 as [| r l1 Hrecl1]; only 1: simpl; only 1: intros; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	3.64078688622	3356
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.2.1.1.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.107620000839	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.4.0.3.1.0.1	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: firstorder; only 1: ring).	0.845613956451	682
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40	2.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: auto; only 1: auto with real).	0.038850069046	14
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40	0.0.2.5.0.0.5	search with cache (only 1: unfold Rgt; only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: generalize (total_order_T r1 r2); only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intuition eauto  4 with real; only 1: intuition eauto  4 with real).	20.0938868523	11799
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40	0.1.0.0.1	search with cache (only 1: unfold Rmin; only 1: intros r1 r2; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: auto with real; only 1: auto with real).	0.0236821174622	7
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.0355451107025	5
Coq.Reals.Rbasic_fun.Rmin_left	40	1.1.0.0.3	search with cache (only 1: intros x y H; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: reflexivity; only 1: auto with real).	0.594393968582	58
Coq.Reals.Rbasic_fun.Rmin_right	40	1.1.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0262122154236	6
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.1.1.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: auto; only 1: auto).	0.0290269851685	8
Coq.Reals.Rbasic_fun.Rmin_comm	40	1.1.0.2.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	1.28895497322	387
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	4.0.0	search with cache (only 1: intros; only 1: apply Rmin_Rgt_r; only 1: auto).	0.0253748893738	12
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.1.1.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto; only 1: eauto using Rle_trans, Rle_refl).	1.28202605247	54
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: auto with real; only 1: intro; only 1: assumption).	0.0273859500885	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: case (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0213248729706	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.1.0.2.4	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: auto with real).	1.22241401672	415
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.1.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto with real; only 1: auto with real).	0.638547182083	77
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.0.5	search with cache (only 1: intros r1 r2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: intuition eauto  4 with real).	0.618097066879	176
Coq.Reals.Rbasic_fun.Rmax_right	40	2.0.2.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: intros; only 1: auto using Rle_antisym; only 1: intros; only 1: reflexivity).	0.0423099994659	10
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: auto; only 1: eauto using Rle_trans, Rle_refl; only 1: auto).	0.0303540229797	8
Coq.Reals.Rbasic_fun.RmaxRmult	40	0.0.3.0.0.3.0.1	search with cache (only 1: intros x y H H0; only 1: apply Rmax_case_strong; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real).	22.563794136	4196
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	1.0.0.0.1.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto; only 1: intro; only 1: assumption).	0.0410978794098	8
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.2.4	search with cache (only 1: intros x y H' H'0; only 1: apply Rmax_case_strong; only 1: auto with real; only 1: auto with real).	0.379605054855	118
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: auto with real; only 1: auto with real).	0.0161790847778	4
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40	1.0.1.1	search with cache (only 1: intros; only 1: rewrite Rabs_right; only 1: auto with real; only 1: auto with real).	0.108270168304	43
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	0.1.0.4.1.6	search with cache (only 1: unfold Rmax; only 1: intros r1 r2; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto with real; only 1: auto with real).	2.78522181511	1869
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40	0.0.1.0.0.0.3.0	search with cache (only 1: intros; only 1: destruct (total_order_T r1 r2) as [[H| ]| H]; only 1: right; only 1: auto with real; only 1: left; only 1: auto with real; only 1: right; only 1: auto with real).	4.39231514931	468
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	1.3.0	search with cache (only 1: intros x1 x2 H1 x3 x4 H2; only 1: rewrite H1; only 1: now rewrite H2).	0.0338249206543	7
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	3.0	search with cache (only 1: unfold Rle; only 1: intuition eauto  3).	0.0370719432831	17
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40	0.0.20.8.1	search with cache (only 1: intro; only 1: red; only 1: apply Rinv_neq_0_compat; only 1: red; only 1: apply (not_0_INR (fact n) (fact_neq_0 n))).	11.124765873	5562
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40	12.1.8.0	search with cache (only 1: intros; only 1: rewrite pow_ne_zero; only 1: auto; only 1: now elim H).	1.28528785706	1063
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.1.0.4.0	search with cache (only 1: intros; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	1.00949001312	174
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.1.0.6.0	search with cache (only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	3.5798637867	584
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40	0.2.3	search with cache (only 1: intros; only 1: injection H; only 1: auto).	0.0416810512543	16
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40
Coq.Reals.Rfunctions.fact_simpl	40	1.6	search with cache (only 1: simpl; only 1: auto).	0.356748104095	72
Coq.Reals.Rfunctions.simpl_fact	40
Coq.Reals.Rfunctions.pow_O	40	0	search with cache (only 1: auto with real).	0.0154540538788	1
Coq.Reals.Rfunctions.pow_1	40	1.0.1	search with cache (only 1: intro n; only 1: simpl; only 1: auto with real).	0.0270471572876	5
Coq.Reals.Rfunctions.pow_add	40	0.0.2.0.0.0.0.2	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: rewrite H'; only 1: auto with real).	0.634036064148	156
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40
Coq.Reals.Rfunctions.pow_RN_plus	40
Coq.Reals.Rfunctions.pow_lt	40
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	1.0	search with cache (only 1: simpl; only 1: auto with real).	0.0829560756683	3
Coq.Reals.Rfunctions.tech_pow_Rplus	40	0.1.8	search with cache (only 1: intros x y n; only 1: repeat rewrite S_INR; only 1: ring).	0.30933713913	112
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40	10.0.0.9.0.1.1	search with cache (only 1: intro; only 1: case n; only 1: simpl; only 1: contradiction; only 1: simpl; only 1: intros; only 1: auto with real).	18.041520834	8131
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	1.0.6.1.0.0.0.0.5.5	search with cache (only 1: destruct 1; only 1: apply Rge_le; only 1: auto with real rorders; only 1: elim n; only 1: auto with real; only 1: intros; only 1: simpl; only 1: case H; only 1: rewrite Rmult_0_l; only 1: auto with real).	32.5083270073	22743
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	2.3.0.0.0.0.7	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: ring).	2.80750107765	1072
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.4.0.4	search with cache (only 1: simpl; only 1: intros; only 1: rewrite <- Rmult_assoc; only 1: auto with real).	0.329125881195	176
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	1.1	search with cache (only 1: intros; only 1: auto with real).	0.0186409950256	4
Coq.Reals.Rfunctions.powerRZ_1	40	0.10.2	search with cache (only 1: intros; only 1: simpl; only 1: auto with real).	0.672555923462	366
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.053582906723	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	1.1.0.1.48	search with cache (only 1: induction n as [| n Hrecn]; only 1: auto; only 1: simpl; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto with real).	6.30056095123	5693
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	10.12.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	7.09436297417	5687
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	5.2.1	search with cache (only 1: intros; only 1: Nat.nzsimpl; only 1: apply Nat.le_add_r).	0.299196958542	82
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40	2	search with cache (only 1: apply Nat.div2_double).	0.0166230201721	3
Coq.Reals.Exp_prop.div2_S_double	40	3	search with cache (only 1: apply Nat.div2_succ_double).	0.0166690349579	4
Coq.Reals.Exp_prop.div2_not_R0	40	2.0.1.1.6.0.0.32	search with cache (only 1: intro n; only 1: destruct n; only 1: inversion 1; only 1: induction n; only 1: inversion 1; only 1: Nat.order; only 1: intros _; only 1: apply Nat.lt_0_succ).	4.79809188843	5212
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.ClassicalConstructiveReals.RisLinearOrder	40
Coq.Reals.ClassicalConstructiveReals.RdisjunctEpsilon	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_refl	40
Coq.Reals.ClassicalConstructiveReals.Req_constr_leibniz	40
Coq.Reals.ClassicalConstructiveReals.IQR_zero_quot	40
Coq.Reals.ClassicalConstructiveReals.Rring	40
Coq.Reals.ClassicalConstructiveReals.RringExt	40
Coq.Reals.ClassicalConstructiveReals.Rleft_inverse	40
Coq.Reals.ClassicalConstructiveReals.Rinv_pos	40
Coq.Reals.ClassicalConstructiveReals.Rmult_pos	40
Coq.Reals.ClassicalConstructiveReals.Rplus_reg_l	40
Coq.Reals.ClassicalConstructiveReals.Rzero_lt_one	40
Coq.Reals.ClassicalConstructiveReals.plus_IQR	40
Coq.Reals.ClassicalConstructiveReals.mult_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_lt	40
Coq.Reals.ClassicalConstructiveReals.lt_IQR	40
Coq.Reals.ClassicalConstructiveReals.IQR_plus_quot	40
Coq.Reals.ClassicalConstructiveReals.IQR_mult_quot	40
Coq.Reals.ClassicalConstructiveReals.Rabove_pos	40
Coq.Reals.ClassicalConstructiveReals.Rarchimedean	40
Coq.Reals.ClassicalConstructiveReals.RabsLUB	40
Coq.Reals.ClassicalConstructiveReals.Rcomplete	40
Coq.Reals.ClassicalConstructiveReals.Rrepr_morphism	40
Coq.Reals.ClassicalConstructiveReals.Rabst_morphism	40
Coq.Reals.Rpower.P_Rmin	40	0.0.0.0.3	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec b c); only 1: auto with real; only 1: auto with real).	0.270502090454	70
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_neq_0	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_neq_0	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_pow	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40	0.1.0.0.0.5.15.0.2	search with cache (only 1: intros; only 1: unfold Rpower; only 1: unfold ln; only 1: rewrite Rmult_1_l; only 1: decide (Rlt_dec 0 x) with H; only 1: unfold Rln; only 1: destruct (ln_exists {| pos := x; cond_pos := H |} (cond_pos {| pos := x; cond_pos := H |})) as (?, Hex); only 1: symmetry; only 1: apply Hex).	18.563890934	5490
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_nonzero	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_Rlog	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_Rpower	40	0.0.0.5	search with cache (only 1: intros; only 1: unfold Rpower; only 1: rewrite ln_exp; only 1: ring).	0.0502738952637	16
Coq.Reals.Rpower.Rlog_pow	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40
Coq.Reals.Rpower.Rinv_Rdiv	40	5.2.2	search with cache (only 1: symmetry; only 1: field; only 1: now split).	0.639345884323	133
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.RIneq.Rle_refl	40	7.1.2.0	search with cache (only 1: intro; only 1: right; only 1: apply Rquot1; only 1: reflexivity).	0.83992099762	491
Coq.Reals.RIneq.Rge_refl	40	2.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.229207992554	14
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	1.0.0.50.0	search with cache (only 1: intros; only 1: intro n; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.912081003189	4668
Coq.Reals.RIneq.Rlt_not_eq	40
Coq.Reals.RIneq.Rgt_not_eq	40
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.1.0.7.14.0	search with cache (only 1: intros; only 1: destruct H; only 1: apply Rlt_not_eq; only 1: auto with real; only 1: apply not_eq_sym; only 1: apply Rlt_not_eq; only 1: auto with real).	9.20988106728	11980
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.5.1	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0701110363007	19
Coq.Reals.RIneq.Rdichotomy	40	0.1.0.0	search with cache (only 1: unfold not; only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0368461608887	5
Coq.Reals.RIneq.Rlt_le	40	0.0.0	search with cache (only 1: intro; only 1: left; only 1: auto with real).	0.0130212306976	3
Coq.Reals.RIneq.Rgt_ge	40	0.13	search with cache (only 1: left; only 1: auto with real).	0.660093784332	313
Coq.Reals.RIneq.Rle_ge	40	2.1.0.0.0.10.0	search with cache (only 1: intros; only 1: destruct H; only 1: red; only 1: tauto; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	5.66745591164	3210
Coq.Reals.RIneq.Rge_le	40	0.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: intuition eauto  3).	0.027391910553	5
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0115048885345	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.00928688049316	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	4.0.2	search with cache (only 1: intro; only 1: red; only 1: apply Rnot_le_lt).	0.0253369808197	12
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0156991481781	3
Coq.Reals.RIneq.Rnot_lt_le	40	2.2.0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0925829410553	11
Coq.Reals.RIneq.Rnot_gt_le	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0315542221069	8
Coq.Reals.RIneq.Rnot_gt_ge	40	2.3.0.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0333888530731	9
Coq.Reals.RIneq.Rnot_lt_ge	40	0.3.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0295050144196	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	1.0	search with cache (only 1: intros; only 1: auto with real).	0.0368928909302	17
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.2.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto using Rnot_lt_le with rorders; only 1: auto with real).	0.0335018634796	25
Coq.Reals.RIneq.Rle_not_lt	40	0.0.0.2	search with cache (only 1: generalize Rlt_asym, Rlt_dichotomy_converse; only 1: unfold Rle; only 1: unfold not; only 1: intuition eauto  3).	0.139158010483	50
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.1	search with cache (only 1: red; only 1: intros; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.0244011878967	6
Coq.Reals.RIneq.Rle_not_gt	40	0.0.8.4	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: unfold Rle; only 1: intuition).	2.31562995911	785
Coq.Reals.RIneq.Rge_not_gt	40	0.5.1.0	search with cache (only 1: intros; only 1: red; only 1: apply Rle_not_lt; only 1: auto with real).	0.0205931663513	10
Coq.Reals.RIneq.Req_le	40	0.2.0.0	search with cache (only 1: intros; only 1: subst; only 1: red; only 1: auto with real).	0.0320999622345	6
Coq.Reals.RIneq.Req_ge	40	0.0.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0187599658966	3
Coq.Reals.RIneq.Req_le_sym	40	0.0.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0194809436798	3
Coq.Reals.RIneq.Req_ge_sym	40	0.0.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0185511112213	3
Coq.Reals.RIneq.Rgt_asym	40	0.1.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0464608669281	5
Coq.Reals.RIneq.Rle_antisym	40
Coq.Reals.RIneq.Rge_antisym	40	0.1.0	search with cache (only 1: unfold Rge; only 1: intros; only 1: auto with real).	0.0212287902832	4
Coq.Reals.RIneq.Rle_le_eq	40	1.2.1.0	search with cache (only 1: intros r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	0.0518321990967	8
Coq.Reals.RIneq.Rge_ge_eq	40	0.2.1	search with cache (only 1: unfold Rge; only 1: intuition eauto  3; only 1: auto with real).	0.0329298973083	6
Coq.Reals.RIneq.Rlt_eq_compat	40	2.2.2	search with cache (only 1: intros; only 1: subst; only 1: eauto with real).	0.0247559547424	11
Coq.Reals.RIneq.Rgt_eq_compat	40	0.12.1	search with cache (only 1: intros; only 1: subst; only 1: auto with real).	0.730727910995	515
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	1.4.6.15	search with cache (only 1: intros Hb; only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: red; only 1: intuition eauto  3).	19.1122288704	10953
Coq.Reals.RIneq.Rle_lt_trans	40	0.1.0.5	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: intuition eauto  3).	0.397680997849	121
Coq.Reals.RIneq.Rlt_le_trans	40	3.0.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  3).	0.280555963516	88
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.9.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	3.96855211258	1597
Coq.Reals.RIneq.Rle_dec	40	0.11.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	11.7271800041	660
Coq.Reals.RIneq.Rgt_dec	40	1.0.5.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: intuition).	0.093435049057	10
Coq.Reals.RIneq.Rge_dec	40
Coq.Reals.RIneq.Rlt_le_dec	40	0.1.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real).	0.028902053833	4
Coq.Reals.RIneq.Rgt_ge_dec	40	0.0.0.1.0.1.5.2	search with cache (only 1: intros; only 1: edestruct Rle_dec; only 1: right; only 1: eauto with real; only 1: left; only 1: red; only 1: apply Rnot_le_lt; only 1: auto with real).	1.03611493111	656
Coq.Reals.RIneq.Rle_lt_dec	40	0.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.0543148517609	4
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.1.1.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with real).	0.317570209503	148
Coq.Reals.RIneq.Rlt_or_le	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: intuition eauto  4 with real; only 1: unfold Rle; only 1: tauto).	0.0293529033661	7
Coq.Reals.RIneq.Rgt_or_ge	40	2.2.4.2	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: eauto using Rnot_lt_le with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.583227872849	380
Coq.Reals.RIneq.Rle_or_lt	40	0.0.0.0.1.1	search with cache (only 1: intros; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: auto with real; only 1: intuition eauto  4 with real; only 1: unfold Rle; only 1: tauto).	0.126789808273	53
Coq.Reals.RIneq.Rge_or_gt	40	1.1.3.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: eauto using Rnot_lt_le with rorders; only 1: left; only 1: eauto with real).	0.154729127884	72
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.11.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	4.59573602676	796
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40	0.9.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_0; only 1: rewrite CReal_plus_comm; only 1: apply CReal_plus_0_l).	2.08989596367	297
Coq.Reals.RIneq.Rplus_ne	40	22.0	search with cache (only 1: intros; only 1: intuition).	0.31525182724	696
Coq.Reals.RIneq.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	6.50347995758	36
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	1.4.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	0.0762121677399	39
Coq.Reals.RIneq.Rplus_eq_compat_r	40	1.5.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	0.0711419582367	33
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.1.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0416901111603	6
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	0.1.0.0.0.0.0.0.1.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	0.685123205185	189
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	3.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0814590454102	6
Coq.Reals.RIneq.Rinv_r_sym	40	3.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.078183889389	6
Coq.Reals.RIneq.Rmult_0_r	40	0.2.2.1	search with cache (only 1: intros; only 1: replace r with (r + 0); only 1: ring; only 1: eauto with real).	0.0812680721283	19
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0200638771057	2
Coq.Reals.RIneq.Rmult_ne	40	0.6.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: unfold IZR, IPR; only 1: auto with real).	0.0711579322815	38
Coq.Reals.RIneq.Rmult_1_r	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: ring).	0.0893330574036	14
Coq.Reals.RIneq.Rmult_eq_compat_l	40	0.5.0	search with cache (only 1: intros; only 1: apply f_equal; only 1: auto).	0.863820791245	77
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.12.1	search with cache (only 1: intros; only 1: subst; only 1: ring).	19.2708871365	3908
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0180950164795	2
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.0108571052551	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	16.0	search with cache (only 1: intros; only 1: intuition eauto  4 with real).	0.372091054916	323
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.1.2.0	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0512509346008	9
Coq.Reals.RIneq.Rmult_plus_distr_r	40	7.0	search with cache (only 1: intros; only 1: ring).	3.60418796539	29
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	2.2.1.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite H; only 1: replace y with (- x + x + y) by ring; only 1: ring).	0.235395908356	43
Coq.Reals.RIneq.Ropp_0	40	2	search with cache (only 1: ring).	0.016802072525	3
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.5.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.0702381134033	24
Coq.Reals.RIneq.Ropp_involutive	40	3.2	search with cache (only 1: intros; only 1: ring).	0.20515704155	14
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	15.1	search with cache (only 1: intros; only 1: ring).	19.718077898	629
Coq.Reals.RIneq.Ropp_mult_distr_l	40
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0193250179291	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.021411895752	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0202181339264	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0201950073242	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0.0	search with cache (only 1: unfold Rminus; only 1: intros; only 1: ring).	0.539448022842	21
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0205950737	2
Coq.Reals.RIneq.Ropp_minus_distr	40	1.0.0	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.0194561481476	4
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0175809860229	2
Coq.Reals.RIneq.Rminus_diag_eq	40	0.2.1.9	search with cache (only 1: intros x y H; only 1: unfold Rminus; only 1: rewrite H; only 1: ring).	0.720247983932	426
Coq.Reals.RIneq.Rminus_eq_0	40	0.1	search with cache (only 1: unfold Rminus; only 1: ring).	0.0745990276337	3
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	3.2	search with cache (only 1: intros; only 1: ring).	0.0185298919678	7
Coq.Reals.RIneq.Rminus_eq_contra	40	5.0	search with cache (only 1: intros; only 1: auto with real).	0.0911400318146	47
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0247218608856	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: auto with real).	0.0263168811798	4
Coq.Reals.RIneq.Rmult_minus_distr_l	40	1.0	search with cache (only 1: intros; only 1: ring).	0.0403211116791	23
Coq.Reals.RIneq.Rmult_minus_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0218131542206	2
Coq.Reals.RIneq.Rinv_1	40	0	search with cache (only 1: field).	0.0184590816498	1
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.5.2.8	search with cache (only 1: intro abs; only 1: intros; only 1: field; only 1: auto with real).	4.34200596809	1009
Coq.Reals.RIneq.Rinv_mult_distr	40	1.16.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	4.14088106155	1577
Coq.Reals.RIneq.Ropp_inv_permute	40	0.1.1	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0353579521179	5
Coq.Reals.RIneq.Rinv_r_simpl_r	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: auto with real).	0.0400931835175	3
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.100287914276	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.236268997192	39
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	2.0.11	search with cache (only 1: red; only 1: intros; only 1: auto with real).	1.07203102112	699
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	0.3.2.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.13176202774	47
Coq.Reals.RIneq.Rplus_le_compat_l	40	1.0.11.3	search with cache (only 1: intros r r1 r2; only 1: red; only 1: unfold Rle; only 1: intuition).	7.21481394768	1305
Coq.Reals.RIneq.Rplus_ge_compat_l	40	1.2.15.11	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	10.2780618668	2388
Coq.Reals.RIneq.Rplus_le_compat_r	40	0.3.2.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.219171047211	93
Coq.Reals.RIneq.Rplus_ge_compat_r	40	1.2.16.12	search with cache (only 1: intros r1 r2; only 1: unfold Rge; only 1: intro; only 1: intuition).	9.65738201141	2491
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.1.0.0.3	search with cache (only 1: intros; only 1: red; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0346441268921	18
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40	3.5.0.1.3	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	18.1361420155	4750
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.2.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.130856990814	36
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.0.4.6.3.4	search with cache (only 1: intros; only 1: red; only 1: edestruct Rlt_or_le; only 1: eauto with rorders; only 1: apply Rlt_le_trans with (r2 + r3); only 1: eauto with real; only 1: auto with real).	2.61242294312	2361
Coq.Reals.RIneq.Rplus_lt_0_compat	40
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	3.2.0	search with cache (only 1: intros; only 1: pattern x at 1; only 1: intuition).	0.0201420783997	8
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40	0.0.0.0.0.0.4.0.15	search with cache (only 1: unfold Rgt; only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	5.64354395866	3670
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3.4.0	search with cache (only 1: intros; only 1: red; only 1: eauto with real).	0.0476469993591	21
Coq.Reals.RIneq.Ropp_lt_contravar	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0378890037537	10
Coq.Reals.RIneq.Ropp_gt_contravar	40	3.2.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: eauto with rorders).	0.248162031174	29
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	2.0.3.3	search with cache (only 1: intro; only 1: red; only 1: unfold Rle; only 1: intuition).	1.71346497536	341
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	0.2.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0214321613312	6
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0310530662537	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0368549823761	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0189790725708	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0187871456146	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0186820030212	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0214681625366	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	1.3.1	search with cache (only 1: intros; only 1: unfold Rgt; only 1: auto with real).	0.0154349803925	8
Coq.Reals.RIneq.Ropp_le_cancel	40
Coq.Reals.RIneq.Ropp_ge_cancel	40
Coq.Reals.RIneq.Rmult_lt_compat_r	40
Coq.Reals.RIneq.Rmult_gt_compat_r	40	2.5.0	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.0466310977936	26
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.6.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.108062982559	90
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40	6.5.3.4	search with cache (only 1: intros; only 1: rewrite (Rmult_comm r2 r); only 1: rewrite (Rmult_comm r1 r); only 1: eauto using Rmult_le_compat_l with rorders).	13.3233790398	9483
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.1.0.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.033499956131	7
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: auto with real; only 1: auto with real).	0.0200369358063	6
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	1.0.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0292301177979	5
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	1.1.5.0.9	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: auto with real; only 1: auto with real).	6.29053211212	3812
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.1.6.2.0.0	search with cache (only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	3.75568604469	1703
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.0.2.8.1	search with cache (only 1: unfold Rle; only 1: intuition eauto  3; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: auto with real; only 1: auto with real; only 1: ring; only 1: auto with real).	13.0852150917	6241
Coq.Reals.RIneq.Rminus_ge	40
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.2.3	search with cache (only 1: replace 1 with (0 + 1); only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0252199172974	14
Coq.Reals.RIneq.Rle_0_1	40	0.0	search with cache (only 1: left; only 1: auto with real).	0.0132389068604	2
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.1.1.0.1.0.1.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	4.95956802368	1717
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.1.8	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.558284044266	316
Coq.Reals.RIneq.Rlt_plus_1	40	6	search with cache (only 1: apply Rlt_n_Sn).	0.0235848426819	27
Coq.Reals.RIneq.tech_Rgt_minus	40
Coq.Reals.RIneq.S_INR	40	2.0.0.3	search with cache (only 1: intros; only 1: destruct n; only 1: auto with real; only 1: auto with real).	0.0558378696442	15
Coq.Reals.RIneq.S_O_plus_INR	40
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	1.1.3.1.0.0.3	search with cache (only 1: apply le_elim_rel; only 1: simpl; only 1: intro n; only 1: apply pos_INR; only 1: intros n m; only 1: repeat rewrite S_INR; only 1: auto with real).	4.03033995628	1944
Coq.Reals.RIneq.INR_not_0	40	1.0.0.1	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: auto with arith).	0.304769039154	65
Coq.Reals.RIneq.not_0_INR	40	4.7.5.5.5	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: auto with real; only 1: repeat rewrite S_INR; only 1: auto with real).	25.1539130211	16496
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40
Coq.Reals.RIneq.IZN	40	1.0.0.87	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	28.2662088871	53833
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.IZR_NEG	40	0	search with cache (only 1: auto with real).	0.0116078853607	1
Coq.Reals.RIneq.IZR_POS_xO	40	2.11.11.11	search with cache (only 1: induction p as [p| p| ]; only 1: auto with real; only 1: auto with real; only 1: ring).	2.64556789398	2348
Coq.Reals.RIneq.IZR_POS_xI	40	0.1.0.1.0.1.0.0.0.0	search with cache (only 1: intro; only 1: unfold IZR, IPR; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: trivial).	1.32138705254	646
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	3.4.0.0.0.8.0.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	21.2226119041	12056
Coq.Reals.RIneq.opp_IZR	40	3.3.0.0.3.8	search with cache (only 1: intro t; only 1: case t; only 1: auto with real; only 1: reflexivity; only 1: unfold IZR; only 1: auto with real).	1.87184000015	911
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.3.0.1.1.0.6	search with cache (only 1: intro n; only 1: intros z H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto).	38.8289020061	11629
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.3.0.2.10.2.2	search with cache (only 1: intros r r1 r2 H; only 1: destruct H; only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: destruct H; only 1: auto with real).	22.4867300987	10711
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.Ropp_div_den	40	0.2.1.0.0	search with cache (only 1: intros x y; only 1: unfold Rdiv; only 1: intros; only 1: field; only 1: auto with real).	0.107575893402	8
Coq.Reals.RIneq.double	40	3.3	search with cache (only 1: intro; only 1: ring).	0.0479168891907	12
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.0.2.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: auto with real; only 1: auto with real).	0.144505977631	50
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40
Coq.Reals.RIneq.Rdiv_plus_distr	40	0.7.8	search with cache (only 1: intros r r1 r2; only 1: unfold Rdiv; only 1: ring).	28.6966869831	2919
Coq.Reals.RIneq.Rdiv_minus_distr	40	0.0.5	search with cache (only 1: unfold Rdiv; only 1: intros; only 1: ring).	0.135447978973	57
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.RIneq.pos_half_prf	40	0	search with cache (only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.00681304931641	1
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_eq_natpow_inv	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_invneg_le_pow	40
Coq.Reals.ClassicalDedekindReals.Qpower_2_neg_le_one	40	2.0.2.0.1.5.0.0	search with cache (only 1: intros n; only 1: induction n; only 1: intros n; only 1: simpl in *; only 1: now subst; only 1: rewrite Nat2Z.inj_succ, Z.opp_succ, <- Z.sub_1_r; only 1: rewrite Qpower_minus_pos; only 1: lra).	5.15575194359	3615
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealQlimExp2	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_cauchy	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_max_prec_1	40	0.3.0.1.1.1.14	search with cache (only 1: intros E; only 1: intros; only 1: destruct n; only 1: auto using Z.ge_le; only 1: auto with *; only 1: f_equal; only 1: now destruct Hn || easy).	4.63118696213	4022
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_seq_bound	40
Coq.Reals.ClassicalDedekindReals.CReal_of_DReal_bound	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse'	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse''	40	0.0.0.3.0.0.0.1.0.0.0.0.0.0.0	search with cache (only 1: intros x q n H; only 1: unfold DRealAbstr, proj1_sig in H; only 1: match type of H with | context [ if ?a then _ else _ ] => destruct a as [H'| H'] end; only 1: discriminate; only 1: destruct (Z_le_gt_dec n 0) as [Hdec| Hdec]; only 1: specialize (H' (Z.to_nat (- n))); only 1: rewrite (Z2Nat.id (- n) _), Z.opp_involutive in H'; only 1: pose proof (Qpower_pos_lt 2 n); only 1: lra; only 1: specialize (H' (Z.to_nat 0)); only 1: cbn in H'; only 1: pose proof (cauchy x n 0%Z n _ _) as Hxbnd; only 1: apply Qabs_Qlt_condition in Hxbnd; only 1: pose proof (Qpower_le_1_increasing' 2 n _ _); only 1: lra).	6.28095078468	2571
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40	2.7.2	search with cache (only 1: intros n m p; only 1: apply Nat.lt_add_lt_sub_r; only 1: now Nat.nzsimpl).	0.13247013092	100
Coq.Reals.ArithProp.even_odd_cor	40
Coq.Reals.ArithProp.le_double	40	4.27	search with cache (only 1: simpl; only 1: intuition).	2.58437585831	1730
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	6.4.0	search with cache (only 1: intros m IH; only 1: simpl; only 1: intuition auto with arith).	0.324970006943	134
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	0.12.16	search with cache (only 1: intros; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	14.4152598381	4798
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	3.0	search with cache (only 1: intros; only 1: reflexivity).	0.0269727706909	5
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.027575969696	2
Coq.Reals.Ranalysis2.quadruple_var	40	1.0	search with cache (only 1: intros; only 1: field).	0.04168009758	3
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	4.0.0.0	search with cache (only 1: intros; only 1: unfold included; only 1: unfold interior; only 1: auto).	0.0265250205994	14
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	1.0.0	search with cache (only 1: intros; only 1: intros a b; only 1: auto with real).	0.0198390483856	4
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	1.17	search with cache (only 1: intro n; only 1: firstorder).	0.223615884781	392
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	21	search with cache (only 1: easy).	0.172326087952	558
Coq.Reals.Rtopology.open_set_P5	40	3.3.1.10.13.0.3.2.0	search with cache (only 1: unfold open_set; only 1: unfold included, neighbourhood; only 1: unfold included; only 1: unfold disc; only 1: unfold Rminus; only 1: intros a b; only 1: exists {| pos := 1; cond_pos := Rlt_0_1 |}; only 1: intros; only 1: assumption).	10.3696570396	30586
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	3.11.1.1.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite Rplus_def, Rquot2; only 1: rewrite <- CReal_plus_assoc; only 1: reflexivity).	19.034348011	2825
Coq.Reals.Raxioms.Rplus_opp_r	40
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40	10.0.0.0.0	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_mult; only 1: do 2 rewrite Rrepr_mult; only 1: ring).	2.5214099884	499
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.1.2.0.0.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists (N + k)%nat; only 1: intros n nN; only 1: apply Pn; only 1: apply Nat.le_trans with (N + k)%nat; only 1: auto with arith; only 1: auto with arith).	0.166883945465	69
Coq.Reals.Rseries.Un_growing_shift	40	9.4.6	search with cache (only 1: intros * Hgrowing Hle; only 1: simpl; only 1: auto).	0.689420938492	683
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.Cauchy.ConstructiveExtra.Pos_pred_double_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_id	40
Coq.Reals.Cauchy.ConstructiveExtra.Z_inj_nat_inj	40
Coq.Reals.Cauchy.ConstructiveExtra.constructive_indefinite_ground_description_Z	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_proper	40
Coq.Reals.Cauchy.ConstructiveRcomplete.seq_cv_morph	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rfloor	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Rabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qlt_trans_swap_hyp	40	3.2.0	search with cache (only 1: intros q r Hlt; only 1: destruct (QarchimedeanExp2_Z (/ (r - q))) as [n Hn]; only 1: lra).	0.0757901668549	15
Coq.Reals.Cauchy.ConstructiveRcomplete.Qle_trans_swap_hyp	40	7.5	search with cache (only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: lra).	2.17792606354	922
Coq.Reals.Cauchy.ConstructiveRcomplete.Qpower_2powneg_le_inv	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pospow_lin_le_2pow	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_cv_self'	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_limit	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cm_mono	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_cauchy	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rup_pos	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_upper_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_seq	40	8.0	search with cache (only 1: intros y' z'; only 1: reflexivity).	0.0127561092377	10
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_abs_Qabs_diff	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_QR_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLt_RQ_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos2Z_pos_is_pos	40	4	search with cache (only 1: lia).	0.0180058479309	13
Coq.Reals.Cauchy.ConstructiveRcomplete.Pos_log2floor_plus1_spec_Qpower	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Qabs_Qgt_condition	40	17.0.2.1	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold Qle, Qlt; only 1: simpl; only 1: lia).	19.9942748547	11763
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_seq_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CReal_from_cauchy_bound	40
Coq.Reals.Cauchy.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtIsLinear	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealAbsLUB	40
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealComplete	40
Coq.Reals.Cauchy.ConstructiveRcomplete.sumbool_or_not_or	40	3	search with cache (only 1: intuition).	0.0232038497925	4
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_le_iff_lt	40	8.0	search with cache (only 1: intros p q; only 1: lra).	0.127277851105	46
Coq.Reals.Cauchy.ConstructiveRcomplete.Qnot_lt_iff_le	40	2.1	search with cache (only 1: intros x y; only 1: apply Z.nlt_ge).	0.0117700099945	5
Coq.Reals.Cauchy.ConstructiveRcomplete.CRealLtDisjunctEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerAddExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerRemSubExp	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Weaken_Qle_QpowerFac	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_red_scale	40	0	search with cache (only 1: reflexivity).	0.011568069458	1
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0.0.1.2.0.0.0.0.2	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_mult, CReal_mult_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: simplify_Qabs; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	1.71215891838	696
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_scale_sep0_limit	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat_correct	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.6	search with cache (only 1: intros n; only 1: apply (Ropp_ext CReal_isRingExt)).	3.47192001343	50
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	4.2.1	search with cache (only 1: intros r; only 1: rewrite CReal_mult_comm; only 1: apply CReal_mult_1_l).	0.575155973434	72
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40	10.6	search with cache (only 1: intros a b; only 1: ring).	12.8697078228	1391
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBoundSpec	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealLowerBound_lt_scale	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_pos_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_neg_lt_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_r	40	0.0.0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite CReal_mult_comm; only 1: unfold CReal_inv; only 1: destruct rnz; only 1: rewrite <- CReal_opp_mult_distr_l, CReal_opp_mult_distr_r; only 1: apply CReal_inv_l_pos; only 1: apply CReal_inv_l_pos).	13.6133649349	129
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	5.5	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	17.9025149345	444
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	1.0.2.1	search with cache (only 1: intros; only 1: rewrite H; only 1: destruct H; only 1: reflexivity).	0.27573800087	36
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.Rup_nat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_0_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_compat_r	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyRealsMult.CReal_mult_le_reg_r	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_1_r	40
Coq.Reals.Cauchy.PosExtra.Pos_le_multiple	40
Coq.Reals.Cauchy.PosExtra.Pos_pow_le_mono_r	40
Coq.Reals.Cauchy.QExtra.Q_factorDenom	40	6.0.0.0.4.9	search with cache (only 1: intros; only 1: rewrite Qmult_comm; only 1: unfold Qred, Qeq in *; only 1: simpl in *; only 1: rewrite Pos2Z.inj_mul; only 1: auto with zarith).	1.97093915939	1170
Coq.Reals.Cauchy.QExtra.Q_factorNum_l	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qred, Qeq in *; only 1: simpl; only 1: ring).	0.0422520637512	4
Coq.Reals.Cauchy.QExtra.Q_factorNum	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0435328483582	4
Coq.Reals.Cauchy.QExtra.Q_reduce_fl	40	1.0	search with cache (only 1: intros n p; only 1: reflexivity).	0.0191299915314	3
Coq.Reals.Cauchy.QExtra.Qle_neq	40	7.0.3	search with cache (only 1: unfold Qle, Qlt, Qeq; only 1: intros; only 1: intuition).	0.612367153168	257
Coq.Reals.Cauchy.QExtra.Qplus_lt_compat	40	0.0.2.2	search with cache (only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto; only 1: auto with *).	0.566376924515	163
Coq.Reals.Cauchy.QExtra.Qgt_lt	40	5.0.1	search with cache (only 1: unfold Qlt, Qle, Qeq; only 1: intros; only 1: auto).	0.0484659671783	33
Coq.Reals.Cauchy.QExtra.Qlt_gt	40	0.0	search with cache (only 1: intros p q H; only 1: assumption).	0.0109310150146	2
Coq.Reals.Cauchy.QExtra.Qmult_lt_0_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_le_1_compat	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_lt_le_compat_nonneg	40
Coq.Reals.Cauchy.QExtra.Qmult_le_compat_nonneg	40	0.0.0.0.7.3.2.0.0	search with cache (only 1: intros [xn xd] [yn yd] [zn zd] [tn td] [H0lex Hxlty] [H0lez Hzltt]; only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *; only 1: setoid_replace (xn * zn * (Z.pos yd * Z.pos td))%Z with (xn * Z.pos yd * (zn * Z.pos td))%Z by ring; only 1: setoid_replace (yn * tn * (Z.pos xd * Z.pos zd))%Z with (yn * Z.pos xd * (tn * Z.pos zd))%Z by ring; only 1: apply Z.mul_le_mono_nonneg; only 1: lia; only 1: lia; only 1: lia; only 1: lia).	17.2585098743	9535
Coq.Reals.Cauchy.QExtra.Qinv_swap_pos	40	0.0	search with cache (only 1: intros n p; only 1: reflexivity).	0.0141808986664	2
Coq.Reals.Cauchy.QExtra.Qinv_swap_neg	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: lia).	0.0349509716034	4
Coq.Reals.Cauchy.QExtra.Qabs_Qlt_condition	40	1.1.2.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: unfold Qmult, Qlt, Qle, Qnum, Qden in *; only 1: simpl; only 1: auto with *).	0.134005069733	48
Coq.Reals.Cauchy.QExtra.Qabs_gt	40
Coq.Reals.Cauchy.QExtra.Qpower_0_r	40	3.0	search with cache (only 1: simpl; only 1: reflexivity).	0.015349149704	5
Coq.Reals.Cauchy.QExtra.Qpower_1_r	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.012512922287	2
Coq.Reals.Cauchy.QExtra.Qpower_not_0	40
Coq.Reals.Cauchy.QExtra.Qpower_pos_lt	40
Coq.Reals.Cauchy.QExtra.Qpower_minus	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_pos	40
Coq.Reals.Cauchy.QExtra.Qpower_minus_neg	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qzero_eq	40	0.0.0.0	search with cache (only 1: intros; only 1: red; only 1: simpl; only 1: auto).	0.0230000019073	4
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing	40
Coq.Reals.Cauchy.QExtra.Qpower_le_1_increasing'	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat	40
Coq.Reals.Cauchy.QExtra.Qpower_lt_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_le_compat_inv	40
Coq.Reals.Cauchy.QExtra.Qpower_decomp'	40
Coq.Reals.Cauchy.QExtra.QarchimedeanExp2_Pos	40
Coq.Reals.Cauchy.QExtra.Pos_log2floor_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Pos_log2ceil_plus1_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_le_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_leabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_1	40	2	search with cache (only 1: now Z.nzsimpl').	0.0803329944611	3
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_2	40	0	search with cache (only 1: reflexivity).	0.00900506973267	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_3	40	0	search with cache (only 1: reflexivity).	0.00985884666443	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_test_4	40	0	search with cache (only 1: reflexivity).	0.010055065155	1
Coq.Reals.Cauchy.QExtra.Qbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_inv	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_opp	40	1.2.3.0.3.4.5	search with cache (only 1: unfold Qopp; only 1: intros (n, d); only 1: cbn; only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	2.94318079948	2108
Coq.Reals.Cauchy.QExtra.Qlowbound_lt_ZExp2_spec	40
Coq.Reals.Cauchy.QExtra.Qlowbound_ltabs_ZExp2_spec	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qopp_mult_mone	40	2.4	search with cache (only 1: intros; only 1: lra).	0.0233080387115	8
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Qabs_involutive	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLt_RQ_from_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CRealLe_0R_to_single_dist	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_le_abs	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_pos	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_opp	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_appart_0	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_le	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_minus_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_triang_inv2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_gt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.Rabs_def1	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_abs_def2	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_double	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_glb	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_l	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_left	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_right	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt_r	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.posPartAbsMax	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.negPartAbsMin	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_sym	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_mult	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_max_mult_neg	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_lub_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_max_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyAbs.CReal_min_contract	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtForget	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_aboveSig'	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_above_same	40	0.1.0.12.7.1	search with cache (only 1: intros x y n Hapart; only 1: intros p Hp; only 1: pose proof (cauchy x n n p _ _) as HCSx; only 1: pose proof (cauchy y n p n _ _) as HCSy; only 1: rewrite Qabs_Qlt_condition in HCSx, HCSy; only 1: lra).	20.2222979069	9001
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_refl	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_sym	40	5.5.0.0.3	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: apply H; only 1: apply H).	1.3547809124	1756
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealEq_relT	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_l	40	5.1.4.12.7	search with cache (only 1: intros x y z [n inf]; only 1: intro contra; only 1: destruct (CRealLt_dec _ _ y contra); only 1: contradiction; only 1: assumption).	3.20990800858	6761
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_proper_r	40	4.1.3.11.0	search with cache (only 1: intros x y z Hxeqy Hxltz; only 1: destruct Hxeqy as [Hylex Hxley]; only 1: apply (CReal_lt_le_trans _ x); only 1: exact Hxltz; only 1: assumption).	1.61292505264	1904
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_l	40	4.4.3.4.2	search with cache (only 1: intros x y z Hxley Hylez contra; only 1: apply Hylez; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: assumption; only 1: assumption).	2.54701685905	3123
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLe_proper_r	40	7.0.2.3.10.0	search with cache (only 1: intros x y z Hxeqy Hxlez; only 1: intro contra; only 1: apply Hxlez; only 1: apply (CRealLt_morph x y Hxeqy z z); only 1: apply CRealEq_refl; only 1: assumption).	4.21439194679	5954
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_morph_T	40	0.2.0.0.0.2.0.0.9	search with cache (only 1: split; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	0.745139837265	705
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_bound	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_cauchy	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_bound	40	9.1.5.36.11.0	search with cache (only 1: unfold CReal_opp_seq; only 1: intro n; only 1: induction n; only 1: simpl; only 1: intros x; only 1: now rewrite Qabs_opp).	14.7741339207	32103
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_red_seq	40	0.0.0	search with cache (only 1: cbn; only 1: intros a n m H; only 1: congruence).	0.0197350978851	3
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_0_r	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0774099826813	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z Hlt; only 1: apply CRealLt_above in Hlt; only 1: destruct Hlt as [n Hapart]; only 1: exists n; only 1: unfold CReal_plus, CReal_plus_seq in Hapart |- *; only 1: do 2 rewrite CReal_red_seq; only 1: do 2 rewrite Qred_correct; only 1: specialize (Hapart (n - 1)%Z _); only 1: lra).	0.0755519866943	9
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	2.0.4.0.0	search with cache (only 1: intros x y z Hlt contra; only 1: apply Hlt; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact contra).	0.554891824722	82
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat_l	40	0.0.2.21	search with cache (only 1: intro n; only 1: intros x y z Hlt; only 1: apply CReal_plus_lt_reg_l in Hlt; only 1: contradiction).	37.6469891071	8992
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_opp_l	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 3 rewrite CReal_red_seq; only 1: rewrite Qred_correct; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	0.0705018043518	10
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	3.42028808594	1151
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_0	40	3	search with cache (only 1: apply CReal_plus_0_l).	0.00922894477844	4
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_involutive	40	0.0.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: apply CRealEq_diff; only 1: intros n; only 1: unfold CReal_plus, CReal_plus_seq, CReal_opp, CReal_opp_seq, inject_Q; only 1: do 2 rewrite CReal_red_seq; only 1: pose proof (cauchy x n (n - 1)%Z n _ _) as Hxbnd; only 1: apply Qlt_le_weak; only 1: rewrite Qabs_Qlt_condition in Hxbnd |- *; only 1: lra).	4.91222190857	239
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.00904083251953	1
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Q_le	40	0.2.0.0.8	search with cache (only 1: intros x y Hxy; only 1: intros [n Hapart]; only 1: cbn in Hapart; only 1: assert (0 < 2 ^ n)%Q by (apply Qpower_pos_lt; lra); only 1: lra).	0.937350034714	861
Coq.Reals.Cauchy.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.Cauchy.ConstructiveCauchyReals.opp_inject_Z	40	10.19	search with cache (only 1: intuition try easy; only 1: now f_equiv).	0.425101041794	521
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40	3.4.46	search with cache (only 1: assert (int78 : -2 <= 7 / 8 <= 2) by (split; Lra.lra); only 1: case PI_2_aux; only 1: tauto).	1.62235999107	1708
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40	0.4.2	search with cache (only 1: unfold opp_fct; only 1: intros x y H; only 1: auto with real).	0.0369720458984	28
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.0.5.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: unfold limit1_in in H0; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	3.00063204765	1765
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	1.3	search with cache (only 1: intros; only 1: auto).	0.0334658622742	6
Coq.Reals.Ranalysis1.continuity_pt_div	40
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	7.5.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	37.6583800316	17327
Coq.Reals.Ranalysis1.continuity_mult	40
Coq.Reals.Ranalysis1.continuity_const	40
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40	0.0.1.0.7.13	search with cache (only 1: intros z H; only 1: red; only 1: intros; only 1: apply continuity_pt_inv; only 1: auto; only 1: auto).	16.6834859848	9654
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	1.3.0.0.1.0.4.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	3.59338593483	754
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.1.6.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.298763990402	109
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40	3.2.1.1.3.14	search with cache (only 1: intro H7; only 1: intros alpha H1; only 1: elim H1; only 1: simpl; only 1: intros; only 1: now exists x).	3.41182518005	5697
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_fwd	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mirr_rev	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_xeq	40	12.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.535158872604	437
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_opp_rev	40	1.1.0.1.0.0.2.7.0.1.0	search with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: unfold derivable_pt_abs; only 1: apply derivable_pt_lim_ext with (f := fun x => - - f x); only 1: intros; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_opp_fwd; only 1: rewrite Ropp_involutive; only 1: assumption).	3.77789902687	2925
Coq.Reals.Ranalysis1.derivable_pt_mirr	40	0.0.3.0.0.1	search with cache (only 1: intros f x H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: assumption).	0.0748379230499	24
Coq.Reals.Ranalysis1.derivable_pt_mirr_rev	40	2.0.1.0.3.0.0.0.5.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_ext with (f := fun x => mirr_fct f (- x)); only 1: intros; only 1: unfold mirr_fct; only 1: rewrite Ropp_involutive; only 1: reflexivity; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: change (mirr_fct f) with (f o (- id))%F; only 1: assumption).	6.69502902031	6585
Coq.Reals.Ranalysis1.derivable_pt_mirr_prem	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros f x H; only 1: unfold derivable_pt in H; only 1: destruct H as [l H]; only 1: exists (- l); only 1: apply derivable_pt_lim_mirr_rev; only 1: rewrite Ropp_involutive; only 1: rewrite Ropp_involutive; only 1: assumption).	0.0320138931274	9
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_id	40	0.1.0.4	search with cache (only 1: intros EQ; only 1: unfold derivable_pt; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0174078941345	9
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_mirr	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intros; only 1: unfold derivable_pt; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0219700336456	5
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_Rsqr	40
Coq.Reals.Ranalysis1.derive_pt_id	40
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derive_pt_opp	40
Coq.Reals.Ranalysis1.derive_pt_opp_rev	40
Coq.Reals.Ranalysis1.derive_pt_mirr	40	1.1.0.1.6.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: unfold mirr_fct; only 1: apply derivable_pt_lim_mirr_fwd; only 1: rewrite Ropp_involutive; only 1: apply (derive_pt_eq_1 _ _ _ pr1); only 1: reflexivity).	0.719797849655	443
Coq.Reals.Ranalysis1.derive_pt_mirr_rev	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	3.2.20	search with cache (only 1: intros l1 H; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	2.19854283333	1331
Coq.Reals.Ranalysis1.derive_pt_scal	40	2.9.0.8.2.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: apply derivable_pt_lim_scal; only 1: assumption).	8.27019691467	7090
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.5	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.028883934021	18
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.0.1.16.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply derive_pt_eq_0; only 1: apply (derive_pt_eq_1 _ _ _ pr1); only 1: reflexivity).	2.63652610779	2582
Coq.Reals.Ranalysis1.pr_nu_xeq	40
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	8.0.1.1.2.0.26.0	search with cache (only 1: intros; only 1: inversion H as [H1]; only 1: unfold has_lb in H; only 1: elim H; only 1: elim H; only 1: elim H; only 1: intros; only 1: firstorder).	15.6543729305	15734
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40	0.1.1.1.0.0.0.0.1.0.1.1.1.0.1.0	search with cache (only 1: intros; only 1: apply cauchy_bound; only 1: unfold Cauchy_crit; only 1: unfold R_dist; only 1: intros; only 1: elim (H eps H0); only 1: intros; only 1: exists x; only 1: intros; only 1: unfold opp_seq; only 1: rewrite <- Rabs_Ropp; only 1: replace (- (- Un n - - Un m)) with (Un n - Un m); only 1: apply H1; only 1: assumption; only 1: assumption; only 1: ring).	22.2837948799	9702
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40	1	search with cache (only 1: eauto using Rnot_gt_ge with rorders).	0.21337890625	22
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40	1.5.0.0	search with cache (only 1: unfold tan; only 1: rewrite sin_PI; only 1: unfold Rdiv; only 1: ring).	0.0650260448456	10
Coq.Reals.Rtrigo_calc.sin_3PI2	40	0.0.0.1.2.0.1.0.20.50	search with cache (only 1: replace (3 * (PI / 2)) with (PI + PI / 2); only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	10.8158760071	9083
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40	3.1.0.2.0	search with cache (only 1: replace (PI / 6) with (PI / 2 - PI / 3) by field; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.325312137604	58
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	5.18	search with cache (only 1: generalize PI4_RLT_PI2; only 1: Lra.lra).	0.833075046539	682
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.1.1.5.0.0.2.1	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	3.34033513069	836
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.1.0.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_sin; only 1: rewrite neg_cos; only 1: rewrite cos_PI4; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	0.286066055298	45
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40	0.16.2.0.1	search with cache (only 1: intros f x1 x2 H1 H2 Heq; only 1: subst; only 1: destruct H2; only 1: apply derive_pt_eq_0; only 1: assumption).	5.31296801567	3183
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.1.0.0.0.1.1.10.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	4.71427202225	2190
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.2	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.109112024307	6
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.6	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.167470932007	44
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.107905864716	4
Coq.Reals.Ranalysis4.derive_pt_exp	40	2.6.1	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_exp).	0.474646091461	186
Coq.Reals.Ranalysis4.derive_pt_cosh	40
Coq.Reals.Ranalysis4.derive_pt_sinh	40	2.4.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.181624889374	16
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40	8	search with cache (only 1: auto with real).	0.210134029388	76
Coq.Reals.DiscrR.IZR_eq	40	0.3.6.3	search with cache (only 1: intro z; only 1: intros; only 1: elim H; only 1: auto).	2.99333000183	1389
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40	2.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: ring).	0.0316021442413	5
Coq.Reals.R_sqr.Rsqr_mult	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0216147899628	2
Coq.Reals.R_sqr.Rsqr_plus	40
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0292711257935	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0259919166565	2
Coq.Reals.R_sqr.Rsqr_1	40	0.1	search with cache (only 1: unfold Rsqr; only 1: auto with real).	0.0250010490417	3
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	8.0	search with cache (only 1: intros; only 1: auto with real).	0.0273509025574	14
Coq.Reals.R_sqr.Rsqr_div	40	0.2.5.1	search with cache (only 1: unfold Rsqr; only 1: intros a b c; only 1: field; only 1: auto with real).	0.861450195312	340
Coq.Reals.R_sqr.Rsqr_eq_0	40	1.1.2	search with cache (only 1: intros a b; only 1: apply Rsqr_0_uniq; only 1: auto with real).	0.0769000053406	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	0.12	search with cache (only 1: intros z t; only 1: ring_Rsqr).	0.438457965851	221
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.022912979126	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	0.6.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: auto with real).	0.121587991714	21
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.neg_pos_Rsqr_lt	40
Coq.Reals.R_sqr.Rsqr_bounds_le	40
Coq.Reals.R_sqr.Rsqr_bounds_lt	40
Coq.Reals.R_sqr.Rsqr_abs	40	2.9.0.4.1	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hltx| Hgex]; only 1: ring_Rsqr; only 1: auto).	12.3123559952	7260
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: apply Rmult_eq_compat_l; only 1: auto; only 1: auto with real; only 1: auto with real).	0.0484211444855	8
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40	1.0.0.50	search with cache (only 1: intros x y; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	9.21152210236	14802
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40	0.8.0.0.6	search with cache (only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: clear H; only 1: apply derivable_pt_lim_id).	0.910223960876	634
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	9.0	search with cache (only 1: intros; only 1: intuition).	0.179533958435	45
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1_decr	40	0.0.1.0.2	search with cache (only 1: intros f g lb ub x lb_lt_ub x_encad g_wf f_deriv; only 1: apply f_deriv; only 1: apply g_wf; only 1: lra; only 1: lra).	0.17108297348	17
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1_decr	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_decr	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	3.4.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: reflexivity; only 1: auto using Rle_antisym).	0.494280815125	177
Coq.Reals.Rminmax.Rmax_r	40	3.3.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity).	0.0761568546295	29
Coq.Reals.Rminmax.Rmin_l	40	0.0.2.2.1	search with cache (only 1: intros a b c; only 1: unfold Rmin; only 1: destruct (Rle_dec a b); only 1: auto with real; only 1: auto with real).	0.344764947891	103
Coq.Reals.Rminmax.Rmin_r	40	3.3.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: reflexivity).	0.101233959198	26
Coq.Reals.Rminmax.R.plus_max_distr_l	40
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40
Coq.Reals.Rminmax.R.plus_min_distr_r	40
Coq.Reals.Rminmax.R.opp_max_distr	40	0.1.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.025465965271	5
Coq.Reals.Rminmax.R.opp_min_distr	40	1.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0316550731659	5
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.10.0.6	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: trivial; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.273572921753	475
Coq.Reals.Rlimit.eps2	40	0.1	search with cache (only 1: intros; only 1: lra).	0.0176491737366	3
Coq.Reals.Rlimit.eps4	40	2.3	search with cache (only 1: intros; only 1: lra).	0.0498828887939	19
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0167758464813	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.015722990036	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40	13.17	search with cache (only 1: intros; only 1: firstorder).	4.08142781258	5643
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.0.2.0.2	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: auto with real; only 1: apply Rsqrt_positivity).	0.209844112396	94
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	1.0	search with cache (only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0248999595642	3
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0491108894348	5
Coq.Reals.R_sqrt.sqrt_pow2	40	0.0.0.16.0.3	search with cache (only 1: simpl; only 1: intros; only 1: rewrite Rmult_1_r; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	16.5576369762	6275
Coq.Reals.R_sqrt.pow2_sqrt	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	1.0.0	search with cache (only 1: unfold Rsqr; only 1: intros; only 1: apply (sqrt_sqrt x H)).	0.0346658229828	4
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.22.0	search with cache (only 1: intros; only 1: rewrite <- (Rmult_0_r x); only 1: auto with real).	27.0536010265	11781
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.0.12.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	1.59397506714	706
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40	0.0.0.0.0.0.0.5	search with cache (only 1: intros; only 1: apply Rsqr_incrst_0; only 1: rewrite 2!Rsqr_sqrt; only 1: auto with real; only 1: auto with real; only 1: auto with real; only 1: apply sqrt_pos; only 1: apply sqrt_pos).	3.24881696701	1002
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_neg_0	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.0.1.0.6.13	search with cache (only 1: intros x y Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: auto with real; only 1: apply sqrt_pos; only 1: auto with real).	19.1477091312	6689
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.inv_sqrt	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	0.439061880112	217
Coq.Reals.Cauchy_prod.sum_plus	40	1.0.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0738852024078	9
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0543630123138	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40
Coq.Reals.Rtrigo1.PI_4	40	0.30.0.0	search with cache (only 1: left; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	29.9239318371	12191
Coq.Reals.Rtrigo1.PI_neq0	40	0.4.1.0.0	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	0.291416168213	23
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40	0.0.5.0.0.0.2	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite Ropp_minus_distr; only 1: rewrite sin_PI2; only 1: unfold Rminus; only 1: rewrite cos_PI2; only 1: ring).	4.41389703751	888
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	1.0.10.3.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	1.64481687546	801
Coq.Reals.Rtrigo1.cos_2a_cos	40
Coq.Reals.Rtrigo1.cos_2a_sin	40	2.0.1.0.1.1.2.6.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	10.5195450783	2854
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40	1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: unfold sin; only 1: replace (- x)² with x²; only 1: case (exist_sin x²); only 1: intros; only 1: ring; only 1: apply Rsqr_neg).	0.0679030418396	8
Coq.Reals.Rtrigo1.cos_neg	40	1.0.0.0.0	search with cache (only 1: intros; only 1: unfold cos; only 1: replace (- x)² with x²; only 1: reflexivity; only 1: apply Rsqr_neg).	0.0460290908813	6
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40	1.0.7.1	search with cache (only 1: rewrite double; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: ring).	0.522001981735	191
Coq.Reals.Rtrigo1.cos_2PI	40
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.0.0	search with cache (only 1: intro; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0761711597443	5
Coq.Reals.Rtrigo1.sin_PI_x	40	0.0.0.2.0.6.0	search with cache (only 1: intro; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_antisym; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	1.98856210709	585
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40
Coq.Reals.Rtrigo1.sin_shift	40
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro x; only 1: rewrite (sin_cos (PI / 2 + x)); only 1: replace (PI / 2 + (PI / 2 + x)) with (x + PI); only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring; only 1: pattern PI at 1; only 1: rewrite (double_var PI); only 1: ring).	2.42836403847	284
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.11.0.3	search with cache (only 1: unfold PI; only 1: generalize cos_pi2; only 1: destruct pi2_int; only 1: lra).	29.9234778881	5032
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40	0.8.9	search with cache (only 1: apply Rplus_lt_reg_l with (- (4)); only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.325755834579	220
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.2	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0416758060455	16
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.1.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.638684988022	90
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.sin_inj	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.cos_inj	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0156669616699	3
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	4.0	search with cache (only 1: intros; only 1: assumption).	0.0166389942169	6
Coq.Reals.PartSum.scal_sum	40
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	2.0.3.5.0.3	search with cache (only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	1.01523017883	799
Coq.Reals.PartSum.sum_eq	40
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	2.1.0.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.244471073151	71
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40
Coq.Reals.PartSum.sum_growing	40	5.2.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: assumption).	9.52674007416	4855
Coq.Reals.PartSum.Rabs_triang_gen	40	5.3.1.0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	6.41071009636	5376
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40	6.7.0.1.3.12.1.0.14.1.0.0.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: reflexivity; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	37.2414698601	45305
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.Rtrigo_facts.sin2_bound	40
Coq.Reals.Rtrigo_facts.cos2_bound	40
Coq.Reals.Rtrigo_facts.cos_sin	40
Coq.Reals.Rtrigo_facts.cos_sin_opp	40
Coq.Reals.Rtrigo_facts.cos_sin_Rabs	40
Coq.Reals.Rtrigo_facts.sin_cos	40
Coq.Reals.Rtrigo_facts.sin_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_cos_Rabs	40
Coq.Reals.Rtrigo_facts.tan_sin	40
Coq.Reals.Rtrigo_facts.tan_sin_opp	40
Coq.Reals.Rtrigo_facts.tan_cos	40
Coq.Reals.Rtrigo_facts.tan_cos_opp	40
Coq.Reals.Rtrigo_facts.sin_tan	40
Coq.Reals.Rtrigo_facts.cos_tan	40
Coq.Reals.Rtrigo_facts.sin_pi_minus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0618669986725	5
Coq.Reals.Rtrigo_facts.sin_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0673072338104	5
Coq.Reals.Rtrigo_facts.cos_pi_minus	40	0.2.0.0.0.9.1	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite <- cos_sym; only 1: ring).	7.97691488266	2467
Coq.Reals.Rtrigo_facts.cos_pi_plus	40	0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0659120082855	5
Coq.Reals.Rtrigo_facts.tan_pi_minus	40
Coq.Reals.Rtrigo_facts.tan_pi_plus	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.1.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	0.0265710353851	6
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.1.12	search with cache (only 1: intros x; only 1: unfold derivable_pt; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.175708055496	115
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.6.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.529289960861	100
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Abstract.ConstructiveSum.CRsum_eq	40
Coq.Reals.Abstract.ConstructiveSum.sum_eq_R0	40
Coq.Reals.Abstract.ConstructiveSum.sum_const	40
Coq.Reals.Abstract.ConstructiveSum.multiTriangleIneg	40
Coq.Reals.Abstract.ConstructiveSum.sum_assoc	40
Coq.Reals.Abstract.ConstructiveSum.sum_Rle	40
Coq.Reals.Abstract.ConstructiveSum.Abs_sum_maj	40
Coq.Reals.Abstract.ConstructiveSum.cond_pos_sum	40
Coq.Reals.Abstract.ConstructiveSum.pos_sum_more	40
Coq.Reals.Abstract.ConstructiveSum.sum_opp	40
Coq.Reals.Abstract.ConstructiveSum.sum_scale	40
Coq.Reals.Abstract.ConstructiveSum.sum_plus	40
Coq.Reals.Abstract.ConstructiveSum.decomp_sum	40
Coq.Reals.Abstract.ConstructiveSum.reverse_sum	40
Coq.Reals.Abstract.ConstructiveSum.Rplus_le_pos	40
Coq.Reals.Abstract.ConstructiveSum.selectOneInSum	40
Coq.Reals.Abstract.ConstructiveSum.splitSum	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_lt	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_unique	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_cv	40	1.0.0	search with cache (only 1: intros; only 1: destruct (series_cv_abs u cau); only 1: exact s).	0.0146358013153	4
Coq.Reals.Abstract.ConstructiveSum.series_cv_opp	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_scale	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_plus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_minus	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_eq	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_remainder_maj	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_abs_remainder	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_triangle	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift	40
Coq.Reals.Abstract.ConstructiveSum.series_cv_shift'	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_sum	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_INR	40
Coq.Reals.Abstract.ConstructiveSum.CRmorph_series_cv	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_extens	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_opp	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_plus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_unique	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cauchy_eq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_proper	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_morph	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_nat_real	40
Coq.Reals.Abstract.ConstructiveLimits.Un_cv_real_nat	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_minus	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_nonneg	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_scale	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_const	40
Coq.Reals.Abstract.ConstructiveLimits.Rcv_cauchy_mod	40
Coq.Reals.Abstract.ConstructiveLimits.CR_growing_transit	40
Coq.Reals.Abstract.ConstructiveLimits.growing_ineq	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_below	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_open_above	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_down	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_bound_up	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_le	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_abs_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_dist_cont	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift	40
Coq.Reals.Abstract.ConstructiveLimits.CR_cv_shift'	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morph_Proper	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_morphT	40	0.0.0.0.0.0.1	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRmin; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	0.105674982071	26
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRnegPartAbsMin	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_glb	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_min	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morph_Proper	40	0.0.0.0.5.23.5	search with cache (only 1: intros; only 1: destruct (CRltLinear R); only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity; only 1: reflexivity).	6.38550400734	4741
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_morphT	40	0.5.0	search with cache (only 1: intros R x y exy z t ezt; only 1: rewrite exy, ezt; only 1: reflexivity).	0.0791840553284	19
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_l	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_r	40
Coq.Reals.Abstract.ConstructiveMinMax.CRposPartAbsMax	40	0.2.0.0.0.1.7	search with cache (only 1: intros; only 1: apply CRmult_morph; only 1: unfold CRminus; only 1: rewrite CRplus_0_l; only 1: rewrite CRopp_0, CRplus_0_r; only 1: reflexivity; only 1: reflexivity).	0.649477005005	208
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_sym	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_plus	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_left	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_right	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_contract	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_lub_lt	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_assoc	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_min_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRlt_max	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmax_mult	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmin_max_mult_neg	40
Coq.Reals.Abstract.ConstructiveMinMax.CRmorph_min	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le	40	0.3.1.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0185008049011	18
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_zero	40	0.9	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.0391540527344	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_one	40	0.0	search with cache (only 1: intros; only 1: apply CRmorph_rat).	0.00938701629639	2
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_rat_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CR_Q_limit_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Qr	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing_Ql	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.SlowMorph_increasing	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_abs	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cv	40
Coq.Reals.Abstract.ConstructiveRealsMorphisms.CRmorph_cauchy_reverse	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_ge_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_gt_zero	40
Coq.Reals.Abstract.ConstructivePower.CRpow_mult	40
Coq.Reals.Abstract.ConstructivePower.CRpow_one	40
Coq.Reals.Abstract.ConstructivePower.CRpow_proper	40
Coq.Reals.Abstract.ConstructivePower.CRpow_inv	40
Coq.Reals.Abstract.ConstructivePower.CRpow_plus_distr	40
Coq.Reals.Abstract.ConstructivePower.CR_double	40
Coq.Reals.Abstract.ConstructivePower.GeoCvZero	40
Coq.Reals.Abstract.ConstructivePower.GeoFiniteSum	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfBelowTwo	40
Coq.Reals.Abstract.ConstructivePower.GeoHalfTwo	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_asym	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_proper	40
Coq.Reals.Abstract.ConstructiveReals.CRle_refl	40	43.2.1.0	search with cache (only 1: intros; only 1: intro H0; only 1: destruct (CRltLinear R), p; only 1: eauto with bool).	24.8188638687	49322
Coq.Reals.Abstract.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRle_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.Abstract.ConstructiveReals.CReq_refl	40	0.3.4.0.3.4.12.10.1	search with cache (only 1: intros; only 1: red; only 1: intuition; only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H); only 1: intro H; only 1: destruct (CRltLinear R), p; only 1: exact (f x x H H)).	3.51943302155	7981
Coq.Reals.Abstract.ConstructiveReals.CReq_sym	40	2.0.2.5.0.2.0	search with cache (only 1: split; only 1: intro abs; only 1: destruct H, H0; only 1: assumption; only 1: intro abs; only 1: destruct H, H0; only 1: contradiction).	1.13327097893	1429
Coq.Reals.Abstract.ConstructiveReals.CReq_trans	40
Coq.Reals.Abstract.ConstructiveReals.CReq_relT	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRle_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_l	40	9.5	search with cache (only 1: intros H1 H2; only 1: apply H1).	0.0946640968323	146
Coq.Reals.Abstract.ConstructiveReals.CRplus_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_opp_r	40	0.1.1	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Ropp_def).	0.0147829055786	5
Coq.Reals.Abstract.ConstructiveReals.CRopp_0	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRle_minus	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_l	40	16.3.0.7.0.1	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: destruct (CRisRing R); only 1: apply CRplus_lt_compat_l; only 1: exact abs).	9.68428492546	9143
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_le_lt_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_assoc	40	1.1.0.3.1.2	search with cache (only 1: intros; only 1: destruct (CRisRingExt R); only 1: apply CReq_sym; only 1: clear Rmul_ext Ropp_ext; only 1: destruct (CRisRing R); only 1: apply Radd_assoc).	2.46885490417	1102
Coq.Reals.Abstract.ConstructiveReals.CRplus_comm	40	6.2	search with cache (only 1: intros; only 1: apply (Radd_comm (CRisRing R))).	0.035786151886	20
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_Proper	40	8.0.1	search with cache (only 1: destruct (CRisRingExt R); only 1: clear Rmul_ext Ropp_ext; only 1: now rewrite ?Ha).	0.105453014374	120
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_Proper	40	22	search with cache (only 1: apply (CRisRingExt R)).	13.8749549389	7557
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_Proper	40	6	search with cache (only 1: apply (CRisRingExt R)).	0.0307490825653	25
Coq.Reals.Abstract.ConstructiveReals.CRplus_morph_T	40	7.1	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.032674074173	28
Coq.Reals.Abstract.ConstructiveReals.CRmult_morph_T	40	8.2	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.420961856842	241
Coq.Reals.Abstract.ConstructiveReals.CRopp_morph_T	40	9.3	search with cache (only 1: intros; only 1: apply (CRisRingExt R)).	0.0877439975739	105
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.CRminus_morph_T	40	0.0.0.0	search with cache (only 1: intros R x y H x0 y0 H0; only 1: unfold CRminus; only 1: rewrite H, H0; only 1: reflexivity).	0.0280079841614	4
Coq.Reals.Abstract.ConstructiveReals.CRopp_involutive	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_ge_le_contravar	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_l	40	9	search with cache (only 1: apply CRisRing).	0.0131251811981	13
Coq.Reals.Abstract.ConstructiveReals.CRmult_1_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_assoc	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_comm	40	12	search with cache (only 1: apply CRisRing).	0.397359848022	188
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_plus_distr_r	40	2.1.1	search with cache (only 1: intros; only 1: destruct (CRisRing R); only 1: apply Rdistr_l).	0.24955201149	50
Coq.Reals.Abstract.ConstructiveReals.CRzero_double	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_0_l	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.Abstract.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r_half	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_1	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_eq_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_mult_distr	40
Coq.Reals.Abstract.ConstructiveReals.CRinv_morph	40
Coq.Reals.Abstract.ConstructiveReals.CRlt_minus	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_Proper	40
Coq.Reals.Abstract.ConstructiveReals.eq_inject_Q	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_morph_T	40	0.0.0.0.0.0.42	search with cache (only 1: split; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl; only 1: apply CR_of_Q_le; only 1: rewrite H; only 1: apply Qle_refl).	2.50270795822	3381
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.Abstract.ConstructiveReals.CR_of_Q_inv	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_0_compat	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_pos	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_pos_appart_zero	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_le_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRup_nat	40
Coq.Reals.Abstract.ConstructiveReals.CRfloor	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRplus_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_l	40
Coq.Reals.Abstract.ConstructiveReals.CRmult_appart_reg_r	40
Coq.Reals.Abstract.ConstructiveReals.CRapart_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_morph_prop_Proper	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_right	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_opp	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_minus_sym	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_left	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_le	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_triang_inv2	40
Coq.Reals.Abstract.ConstructiveAbs.CR_of_Q_abs	40
Coq.Reals.Abstract.ConstructiveAbs.CRle_abs	40	0.1.3.4	search with cache (only 1: intros; only 1: pose proof (CRabs_def R x (CRabs R x)) as [_ H1]; only 1: apply H1; only 1: apply CRle_refl).	0.091903924942	70
Coq.Reals.Abstract.ConstructiveAbs.CRabs_pos	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_appart_0	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_mult	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_lt	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def1	40
Coq.Reals.Abstract.ConstructiveAbs.CRabs_def2	40
Coq.Reals.Abstract.ConstructiveLUB.CRlt_lpo_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_dec	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_not_epsilon	40
Coq.Reals.Abstract.ConstructiveLUB.DDlow_below_up	40	9.1.4.8	search with cache (only 1: intros [n d]; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: eauto with qarith).	5.42580604553	6030
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit_fix	40	128	search with cache (only 1: eauto with arith).	30.3167259693	97204
Coq.Reals.Abstract.ConstructiveLUB.DDcut_limit	40
Coq.Reals.Abstract.ConstructiveLUB.glb_dec_Q	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_glb	40
Coq.Reals.Abstract.ConstructiveLUB.is_upper_bound_closed	40
Coq.Reals.Abstract.ConstructiveLUB.sig_lub	40
Coq.Reals.Abstract.ConstructiveLUB.CR_sig_lub	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.2.0.1.1.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros a b; only 1: intros x0 y0; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: rewrite Rsqr_sqrt; only 1: rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	15.4746749401	8665
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40	0.0.10.0	search with cache (only 1: intros a b; only 1: split; only 1: auto with real; only 1: auto with real).	0.849000930786	209
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.Array.PArray.default_copy	40
Coq.Array.PArray.default_make	40
Coq.Array.PArray.get_set_same_default	40
Coq.Array.PArray.get_not_default_lt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0	search with cache (only 1: intuition).	0.0292711257935	1
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	2.0	search with cache (only 1: unfold empty, Empty; only 1: auto).	0.0110340118408	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40	0.7.0	search with cache (only 1: intuition; only 1: unfold assert_false, create; only 1: auto).	0.0293259620667	16
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: intuition).	0.0120828151703	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	1.0.0.2.0.0.1.1.0.0.1.0.0.0	search with cache (only 1: intros m1 m2; only 1: functional induction merge m1 m2; only 1: auto; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	27.3641571999	9190
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40	0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: omega_max; only 1: simpl; only 1: auto).	0.0324440002441	5
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0222868919373	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	4.2.2	search with cache (only 1: intro n; only 1: simpl; only 1: inversion_clear 1).	0.224081993103	63
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40	11.1.15.3.5	search with cache (only 1: intros m x; only 1: intros e' eqfind; only 1: apply find_1; only 1: apply (is_bst m); only 1: auto).	7.10641312599	7876
Coq.FSets.FMapFullAVL.IntMake.find_2	40	10.0	search with cache (only 1: intros m x e; only 1: apply find_2).	0.0733258724213	73
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	0.0.0.44	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	35.6560640335	65133
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40	26.0.0.36	search with cache (only 1: intro y1; only 1: unfold elements, MapsTo, eq_key_elt; only 1: apply PX.Sort_NoDupA; only 1: apply L.elements_3).	5.98983693123	18993
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	0.294081926346	19
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	6.5	search with cache (only 1: intros Heq; only 1: intuition Nat.order).	0.0451300144196	75
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	4	search with cache (only 1: intuition Nat.order).	0.0234100818634	18
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	0.2.3.1	search with cache (only 1: induction 1; only 1: auto; only 1: eauto with ordered_type; only 1: auto).	0.0169649124146	10
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40	0.1.1.0.1.1.0.1.0.8.0.35	search with cache (only 1: constructor; only 1: induction 1; only 1: eauto with ordered_type; only 1: induction 1; only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto; only 1: destruct IHIn as (e, He); only 1: exists e; only 1: auto).	2.90812087059	10393
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40	0.0.14.2.7	search with cache (only 1: intros m x y e e'; only 1: induction 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.861337184906	1644
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.1.0.3.4	search with cache (only 1: induction m; only 1: intros; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.44091176987	241
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	0.0.0.1.11	search with cache (only 1: intuition try easy; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	1.30919218063	297
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	0.5.0	search with cache (only 1: intuition_in; only 1: compute; only 1: intuition_in).	0.035089969635	8
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	0.12	search with cache (only 1: intros m x y; only 1: intuition_in).	0.116876125336	160
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	0.0.0.4.2.1	search with cache (only 1: intros m x y; only 1: intros; only 1: inversion_clear 1; only 1: eauto with ordered_type; only 1: auto; only 1: auto).	0.289476156235	95
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.0.1	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0954811573029	15
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0172510147095	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0116081237793	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0156559944153	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0120151042938	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.0.6	search with cache (only 1: induction m; only 1: intuition_in; only 1: eauto with ordered_type).	0.102488040924	54
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0192790031433	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0.1.1.1	search with cache (only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0640590190887	31
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	0	search with cache (only 1: auto).	0.0101099014282	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	0.1.14	search with cache (only 1: intros a b; only 1: unfold empty; only 1: intuition_in).	0.311987161636	265
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40	0.3.0.2.5.1.3.3	search with cache (only 1: intro; only 1: case m; only 1: auto; only 1: unfold empty, Empty; only 1: intros sorted hyp; only 1: intuition_in; only 1: simpl in *; only 1: eauto with ordered_type).	34.5665709972	9324
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	13.0.0.7.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intros sorted belong1; only 1: intuition_in; only 1: simpl; only 1: easy).	11.1698629856	7403
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	0.0.0.6.0.1	search with cache (only 1: intuition_in; only 1: functional induction mem x m; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	0.278565883636	156
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	0.0.0.3.1.0	search with cache (only 1: intros m x; only 1: functional induction find x m; only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	0.058000087738	16
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.3.2.0.0.2.5.3	search with cache (only 1: split; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: auto using find_1, find_2; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	6.6814661026	3499
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40	0.0.0.0.11	search with cache (only 1: right; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.56679391861	411
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	1.3.20.1.2	search with cache (only 1: intros; only 1: generalize y, e; only 1: intros a0 **; only 1: unfold create; only 1: intuition_in).	26.5107321739	9365
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.26.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros H; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	26.2841172218	25948
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	1.14.0.2.0	search with cache (only 1: unfold IfEq; only 1: simpl; only 1: intros; only 1: destruct H; only 1: auto).	1.71210217476	1668
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	1.1.0.10	search with cache (only 1: induction m; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.502366781235	216
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.2.1.2.1	search with cache (only 1: intros m x; only 1: induction m; only 1: inversion_clear 1; only 1: simpl; only 1: intuition_in).	0.422508955002	150
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0576589107513	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	0.0.3.1	search with cache (only 1: intros a b; only 1: simpl; only 1: unfold Raw.empty, Raw.Proofs.Empty; only 1: intuition_in).	0.0416450500488	8
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40	0.3.12.11.0	search with cache (only 1: intros m x e; only 1: generalize (L.find_2 (m:=m) (x:=x)); only 1: intros; only 1: apply find_2; only 1: auto).	1.47712779045	2114
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	8.1.12.8.2.1	search with cache (only 1: unfold elements, MapsTo, eq_key_elt; only 1: intros (y', e') H6; only 1: simpl; only 1: intro; only 1: rewrite elements_mapsto; only 1: auto).	15.224159956	23217
Coq.FSets.FMapAVL.IntMake.elements_3	40
Coq.FSets.FMapAVL.IntMake.elements_3w	40
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	5	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.0347058773041	15
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	1.1.1.0.1.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: auto; only 1: auto; only 1: auto).	2.16247987747	475
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	5.0.5.29.89	search with cache (only 1: intro n; only 1: destruct n; only 1: simpl; only 1: auto; only 1: LO.cmp_solve).	10.394370079	64604
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	6.1	search with cache (only 1: intros a b; only 1: solve_proper).	0.0153419971466	9
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	8.0	search with cache (only 1: intro n; only 1: solve_proper).	0.0142498016357	10
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	59	search with cache (only 1: intuition).	9.73714017868	19610
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	11	search with cache (only 1: intuition).	0.0529000759125	69
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	12	search with cache (only 1: intuition).	0.0517868995667	89
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	2.2.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.237153053284	80
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	2.2	search with cache (only 1: compute; only 1: intuition).	0.0145001411438	6
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.0.0.6.4.0	search with cache (only 1: split; only 1: intro; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	0.258131027222	376
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	15	search with cache (only 1: intuition).	0.33168387413	410
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	20	search with cache (only 1: intuition).	7.04678916931	7835
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	18.18.1	search with cache (only 1: split; only 1: intuition; only 1: intuition).	11.5302479267	8351
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	39	search with cache (only 1: intuition).	1.94055604935	5326
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.4.1.4	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	26.1454548836	7416
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	25.7.0.28	search with cache (only 1: constructor; only 1: auto; only 1: firstorder; only 1: eauto).	1.63271903992	6128
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40	49.0	search with cache (only 1: unfold Equal; only 1: firstorder).	33.1093680859	52852
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40	5.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	0.168179035187	8
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	1.10	search with cache (only 1: intros x y H; only 1: auto).	0.0612089633942	103
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.0	search with cache (only 1: red; only 1: auto).	0.00913596153259	3
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.15.2.1	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: red; only 1: auto).	20.2344410419	8799
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	3.2.0	search with cache (only 1: unfold Subset; only 1: unfold Empty; only 1: firstorder).	0.0116240978241	8
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	1.2.0.9.6.14	search with cache (only 1: intros Hb; only 1: intros; only 1: intro; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: intuition).	7.84092497826	9391
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	1.2.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0698750019073	13
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	1.0.0.3	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite union_iff; only 1: rewrite H0; only 1: intuition).	0.0505819320679	8
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.8.0	search with cache (only 1: unfold Subset; only 1: firstorder; only 1: eauto with set).	0.119674921036	53
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	1.0.0.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: intuition).	0.0299048423767	5
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	0.0.0.1.0.37.0	search with cache (only 1: intros; only 1: intros l; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: auto; only 1: auto; only 1: auto).	4.48496603966	5496
Coq.FSets.FSetPositive.PositiveSet.In_1	40	4.9	search with cache (only 1: intros p q H; only 1: congruence).	0.189446926117	268
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	1.0	search with cache (only 1: intros a b; only 1: solve_proper).	0.00962591171265	3
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	2.3.0	search with cache (only 1: unfold eq, Equal; only 1: intros n m Hn Hm; only 1: now BinInt.Z.nzsimpl).	0.0307428836823	17
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40	15.0.3.0	search with cache (only 1: unfold eq, Equal; only 1: intro n; only 1: intros; only 1: now rewrite H).	3.95578312874	6527
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.3.1.0	search with cache (only 1: intro n; only 1: intros Heq; only 1: revert n; only 1: auto).	0.0198311805725	14
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.0102100372314	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: trivial).	0.00607681274414	1
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	4.0.2	search with cache (only 1: intro n; only 1: unfold In; only 1: destr_bool).	0.0141410827637	17
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	1.0.0	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.107214212418	4
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	17	search with cache (only 1: now rewrite ?IHp, ?IHpe, ?Pms_ok, ?Ring_polynom.Pmul_ok).	0.905742883682	1315
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40	1.23.2	search with cache (only 1: intros Heq; only 1: fix even_spec 1; only 1: auto).	2.01673007011	2494
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0316770076752	6
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0464079380035	16
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40	0.0.11.5.3.0.0.6.1.6.1	search with cache (only 1: intro m; only 1: destruct m; only 1: intro m; only 1: destruct m; only 1: auto; only 1: auto; only 1: cbn in *; only 1: intro m; only 1: destruct m; only 1: auto; only 1: auto).	17.786164999	25040
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40	0.0.3.0.1	search with cache (only 1: intro m; only 1: destruct m; only 1: now split; only 1: now split; only 1: now split).	0.172024011612	29
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40	3.3.3.7.0	search with cache (only 1: intros [| ] [| ]; only 1: now split; only 1: now constructor; only 1: now constructor; only 1: now split).	1.1622159481	708
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0119919776917	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0121140480042	4
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0124590396881	5
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	1.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0131170749664	5
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.20	search with cache (only 1: destr_bool; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor).	1.89984107018	3160
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	2.4.5.1	search with cache (only 1: unfold compare_fun, equal; only 1: induction s as [| l IHl o r IHr]; only 1: auto; only 1: trivial).	0.384837865829	393
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	6.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.0265130996704	17
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	0.0.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: tauto).	0.0319790840149	16
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	0.0.27	search with cache (only 1: intros x y H; only 1: rewrite remove_spec; only 1: tauto).	0.761663198471	1709
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.0328431129456	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	3.2.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: firstorder).	0.035651922226	18
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0134778022766	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0171399116516	3
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0960729122162	47
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.0167191028595	3
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.02357006073	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0328509807587	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40	2.21.6.12	search with cache (only 1: destruct s; only 1: intuition discriminate; only 1: fix even_spec 1; only 1: intuition congruence).	19.9293220043	21812
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0227768421173	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0247550010681	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0151319503784	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40	4.2.7.0.2.7.0.6	search with cache (only 1: induction i; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: reflexivity || apply f_equal || exfalso; only 1: auto; only 1: auto).	10.6858181953	11529
Coq.FSets.FMapPositive.append_neutral_l	40	1.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: auto).	0.0293478965759	8
Coq.FSets.FMapPositive.PositiveMap.gempty	40	1.2.1.12.0	search with cache (only 1: intro n; only 1: case n; only 1: auto; only 1: easy; only 1: auto).	0.392188072205	400
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0319128036499	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.2.8.2	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto; only 1: auto).	0.153941869736	189
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40	0.0.0.0.0.0.1.4	search with cache (only 1: intros; only 1: destruct i; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto).	0.321156024933	124
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	40	search with cache (only 1: congruence).	1.08345007896	4230
Coq.FSets.FMapPositive.PositiveMap.find_1	40	2	search with cache (only 1: auto).	0.0168828964233	3
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0206561088562	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.2.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.143699884415	58
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40	0.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0411760807037	6
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	1.7.0.7.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.467264890671	600
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	22	search with cache (only 1: intuition).	0.471889019012	807
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	2	search with cache (only 1: intuition).	0.0201208591461	16
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	0.4.0.0	search with cache (only 1: unfold In; only 1: intuition; only 1: destruct H as (b, H); only 1: apply (empty_1 H)).	0.10515999794	8
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	2	search with cache (only 1: intuition).	0.100436925888	12
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.5.0.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.0360629558563	17
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.1.8.8.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: apply remove_3 with x; only 1: auto; only 1: apply remove_2; only 1: auto).	2.64708280563	4060
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	1.2	search with cache (only 1: intros; only 1: auto with map).	0.0291821956635	16
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	3.0.5.0.4.4.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: repeat split; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_3; only 1: auto; only 1: auto with map).	0.709068059921	780
Coq.FSets.FMapFacts.WFacts_fun.add_o	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0385701656342	7
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	0.0.0.2.0.3.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: destruct (eq_dec x y); only 1: now intuition; only 1: now intuition).	0.552886962891	178
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	7.0	search with cache (only 1: intros; only 1: split).	0.00949597358704	9
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	2.1.0	search with cache (only 1: red; only 1: intros; only 1: auto with map).	0.0264859199524	6
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	5.2.2.0	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite <- H0; only 1: auto with map).	0.418318986893	313
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	0.0	search with cache (only 1: unfold Equal; only 1: auto).	0.0244560241699	2
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.0.0.24.1.1	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: rewrite <- H0; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply MapsTo_iff; only 1: auto).	22.4194688797	15423
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	0.0.1.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: auto; only 1: auto).	0.163074016571	67
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40	17.1.6	search with cache (only 1: intros k; only 1: rewrite cardinal_1, elements_Empty; only 1: now intros ->).	1.68635392189	1720
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40	0.1.6	search with cache (only 1: intros k; only 1: rewrite <- cardinal_Empty; only 1: auto).	0.0329489707947	23
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40	10.12	search with cache (only 1: intros m1 m2; only 1: firstorder).	1.6690120697	3075
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	6.5.3.7.11	search with cache (only 1: red; only 1: unfold In; only 1: unfold Disjoint; only 1: intros; only 1: firstorder).	5.27173089981	9896
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: set (f := fun (_ : key) (_ : elt) => S); only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.671053886414	437
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40	0.1.0.1.0.0.5.0.0	search with cache (only 1: intros (x, e) (y, e'); only 1: unfold gtb, O.ltk; only 1: compute; only 1: destruct (E.compare x y); only 1: intuition; only 1: order; only 1: intuition; only 1: order; only 1: intuition).	2.47018194199	869
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	2.4	search with cache (only 1: intro n; only 1: inversion 1).	0.025484085083	22
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	9	search with cache (only 1: left).	0.00922513008118	10
Coq.FSets.FMapWeakList.Raw.is_empty_1	40	1.38	search with cache (only 1: fix odd_spec 1; only 1: eauto).	32.4622540474	2421
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	6.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: inversion 1).	0.464933156967	247
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	1.0.0.1.0.0.0.2.0.0.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: generalize Hm; only 1: unfold PX.MapsTo; only 1: functional induction remove x m; only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: inversion_clear 2; only 1: auto; only 1: auto).	14.8811290264	6288
Coq.FSets.FMapWeakList.Raw.remove_3'	40
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.00786995887756	1
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00723910331726	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	0.0.1.0.1.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: inversion_clear Hm; only 1: destruct a as (x', e'); only 1: constructor; only 1: auto; only 1: auto).	0.0362968444824	10
Coq.FSets.FMapWeakList.Raw.fold_1	40
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	1.0.2.0	search with cache (only 1: intros a b; only 1: generalize b; only 1: intro abs; only 1: inversion 1).	0.0186040401459	7
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40	2.43.0	search with cache (only 1: intros m; only 1: fix odd_spec 1; only 1: auto).	13.287498951	27294
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	0	search with cache (only 1: auto).	0.00689816474915	1
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0103549957275	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	7.17	search with cache (only 1: induction m; only 1: auto).	0.232995033264	701
Coq.FSets.FMapWeakList.Make.cardinal_1	40	4	search with cache (only 1: auto).	0.0147030353546	14
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.0177249908447	1
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.1	search with cache (only 1: compute; only 1: auto with extcore).	0.0102899074554	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	12	search with cache (only 1: firstorder).	0.909987926483	373
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	7.0.1.2	search with cache (only 1: red; only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	0.208905935287	161
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	9.0.3	search with cache (only 1: unfold Empty; only 1: unfold Same_set, Included, mkEns, In; only 1: firstorder).	0.685835123062	605
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.6.0.3.6	search with cache (only 1: red; only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: Dec.fsetdec).	0.645693063736	419
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40	0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	7.30893015862	1268
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	1.1.3	search with cache (only 1: intros; only 1: apply is_empty_1; only 1: auto with set).	0.0283329486847	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	10	search with cache (only 1: intuition).	1.00697612762	451
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40	1.1.0.1.1.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	20.3031589985	3479
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	1.09985613823	166
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40	0.0.0.5.1.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_neq_iff s H); only 1: destruct (mem y s); only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	5.48279094696	1328
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.0104179382324	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.0.0.0	search with cache (only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0672919750214	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite mem_iff; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0746259689331	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	3	search with cache (only 1: auto with set).	0.0117609500885	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	2.8.4	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.384943008423	242
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.2.1	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0199160575867	6
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.6.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0421059131622	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	1.2	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0210680961609	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	9	search with cache (only 1: auto with set fset).	0.0250751972198	24
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	0	search with cache (only 1: auto with set).	0.010773897171	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	11	search with cache (only 1: auto with set).	1.24404001236	352
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0.1.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0177838802338	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	5.5	search with cache (only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_iff s x y); only 1: intuition).	2.07727694511	745
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.263775110245	65
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: intuition).	15.8677549362	1420
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	3.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.754287958145	321
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	4.3	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	0.0721690654755	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	2.36949586868	484
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	4.5	search with cache (only 1: generalize (FM.mem_iff (singleton x) y), (FM.singleton_iff x y); only 1: intuition).	1.49743390083	395
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: intuition).	0.020122051239	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0140991210938	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0120480060577	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0114409923553	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00990080833435	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0226011276245	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.0109550952911	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0	search with cache (only 1: auto with set).	0.0102729797363	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.010293006897	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0167999267578	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	3	search with cache (only 1: auto with set).	0.0109879970551	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0110411643982	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.11828494072	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.118058919907	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00996589660645	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0250301361084	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00990700721741	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0117230415344	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	3.3.1.3.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (FM.inter_iff s s' x); only 1: destruct (mem x s'); only 1: intuition; only 1: intuition).	39.9007198811	4470
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00964999198914	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0094039440155	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0167291164398	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0.1	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0303931236267	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0111920833588	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0665099620819	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0226640701294	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00906300544739	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0167090892792	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	0.2.1.1.1.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.694640874863	355
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	1	search with cache (only 1: auto with set fset).	0.0555560588837	31
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	2.2	search with cache (only 1: intros H a; only 1: auto with set fset).	0.024346113205	15
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	10	search with cache (only 1: solve_proper).	0.0288128852844	21
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	4.11	search with cache (only 1: intros m; only 1: auto with set).	0.195411920547	218
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.011647939682	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.1.4.0.1.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	4.22893309593	1056
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	13.1.0.1.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	4.20653486252	2169
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	2.1.1.13	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.267679214478	415
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40	7.4.24	search with cache (only 1: compute; only 1: intros; only 1: eauto with set).	2.63128495216	2917
Coq.FSets.FSetBridge.DepOfNodep.fold	40	7.22.11	search with cache (only 1: simpl; only 1: intro x; only 1: eauto with set).	2.14859604836	7295
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	12.11.13	search with cache (only 1: simpl in *; only 1: intro n; only 1: eauto with set).	1.46603488922	4557
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	5.0.1.0.7.0.3	search with cache (only 1: intro s; only 1: unfold equal; only 1: intro b1; only 1: case M.equal; only 1: intuition; only 1: intuition; only 1: discriminate H).	4.85900783539	5746
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	2.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.111320018768	29
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	1.0.0.0.0.3	search with cache (only 1: intros s x; only 1: unfold elements; only 1: case (M.elements s); only 1: case (M.elements s); only 1: case (M.elements s); only 1: firstorder).	0.728047847748	143
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.00920605659485	5
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0149049758911	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2	search with cache (only 1: intros s x; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.140719175339	57
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0748929977417	11
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	1.0.0.0.0.0.0.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: case (M.remove x s); only 1: firstorder).	0.0961530208588	33
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: case (M.singleton x); only 1: firstorder).	0.0690929889679	11
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0366170406342	11
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: case (M.union s s'); only 1: firstorder).	0.0378568172455	11
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.0409529209137	11
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: case (M.inter s s'); only 1: firstorder).	0.042191028595	11
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0488250255585	11
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: case (M.diff s s'); only 1: firstorder).	0.0500221252441	11
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40	0	search with cache (only 1: decide equality).	0.0116491317749	1
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	15.7.0.14.0	search with cache (only 1: intros; only 1: intro n; only 1: intro l; only 1: intuition; only 1: now rewrite H).	13.1333680153	30837
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.206722021103	14
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	2.0.0.1.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.141103982925	14
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	11.0.0.0.2	search with cache (only 1: intros s x f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition congruence).	7.34964299202	5790
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	2.0.1.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0326671600342	9
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	8	search with cache (only 1: solve_proper).	0.057471036911	25
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	6.7.4	search with cache (only 1: intuition; only 1: red; only 1: intuition).	0.245121002197	296
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.1.0.6.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.628179073334	106
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	0.0.0	search with cache (only 1: split; only 1: fsetdec; only 1: fsetdec).	0.0942130088806	3
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	6	search with cache (only 1: intuition).	0.0200610160828	13
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	5.2	search with cache (only 1: apply subset_2; only 1: intuition).	0.0360970497131	23
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0280058383942	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0.0.1	search with cache (only 1: split; only 1: intuition; only 1: intuition).	0.0142951011658	4
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0224430561066	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0166091918945	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0708889961243	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0291810035706	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0442559719086	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0236539840698	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0480849742889	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.3.8	search with cache (only 1: red; only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.453917980194	127
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0309920310974	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0256569385529	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	1.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0847108364105	11
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.0954170227051	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	1	search with cache (only 1: fsetdec).	0.0559799671173	2
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0699348449707	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.0725820064545	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.0842039585114	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	1	search with cache (only 1: fsetdec).	0.0427010059357	2
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.144914150238	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	5	search with cache (only 1: fsetdec).	0.045961856842	6
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0405280590057	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0608909130096	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.056126832962	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0916080474854	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0468649864197	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.096470117569	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.152682065964	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.140279054642	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0203900337219	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.019180059433	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	2	search with cache (only 1: fsetdec).	0.0335249900818	3
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0347280502319	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0323851108551	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0542190074921	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0379750728607	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	8	search with cache (only 1: fsetdec).	0.636613130569	155
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	3	search with cache (only 1: fsetdec).	0.178943872452	36
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	2	search with cache (only 1: fsetdec).	0.0389041900635	3
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.051057100296	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0623109340668	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0726101398468	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.105127096176	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.105464220047	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	6.2	search with cache (only 1: intuition; only 1: fsetdec).	0.121711015701	13
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0722692012787	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	2	search with cache (only 1: fsetdec).	0.0300171375275	3
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0282518863678	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0192158222198	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0192520618439	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0313899517059	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	4	search with cache (only 1: fsetdec).	0.033340215683	5
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0572040081024	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	2	search with cache (only 1: fsetdec).	0.023225069046	3
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0568819046021	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0536019802094	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0935559272766	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0708558559418	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	3.10.8	search with cache (only 1: split; only 1: fsetdec; only 1: intuition).	1.2047700882	759
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	6.2.22	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	1.67685985565	916
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.2	search with cache (only 1: expAdd; only 1: fsetdec).	0.208407878876	4
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.180823802948	2
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.157294988632	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	0.0.1.0.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: auto; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: auto with set).	0.0855338573456	45
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	10.1.0.4.0.3	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: fsetdec).	8.6602230072	6699
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	6.1.5.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: eauto; only 1: fsetdec).	2.98396110535	2413
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	8.0.0.0.0.0.2.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	2.05485606194	2034
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	2.5.0.0.0.0.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto with set; only 1: auto with set).	1.82960796356	1538
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.8.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.269784927368	98
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40	38.1.8	search with cache (only 1: intro n; only 1: rewrite elements_Empty, M.cardinal_1; only 1: apply length_zero_iff_nil).	31.8215050697	31529
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto).	0.245537996292	46
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with fset; only 1: auto with set).	0.0194239616394	6
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	2.1.10.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.335034132	794
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	3.4.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: intuition).	0.257206201553	44
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto; only 1: expAdd; only 1: auto with set).	0.318593025208	100
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: eauto with set; only 1: auto with set; only 1: auto with set).	0.269903898239	106
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	4	search with cache (only 1: auto with set fset).	0.143821954727	46
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40	1.1.0.1.0.0.1.0.20.11	search with cache (only 1: intros m Hm; only 1: intros; only 1: unfold gtb; only 1: ME.elim_comp; only 1: ME.elim_comp; only 1: auto; only 1: ME.elim_comp; only 1: auto; only 1: ME.elim_comp; only 1: intuition).	10.4745559692	3046
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.1.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0191130638123	4
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0188398361206	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.773188114166	2
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.101134061813	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	0.0.0	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0113799571991	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	1	search with cache (only 1: fsetdec).	0.11018204689	16
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.13122010231	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0123591423035	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	2	search with cache (only 1: fsetdec).	0.0295498371124	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	0.0	search with cache (only 1: unfold Subset; only 1: fsetdec).	0.033539056778	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	1	search with cache (only 1: fsetdec).	0.0586960315704	2
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0671558380127	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0768570899963	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0395629405975	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.134126901627	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.155354976654	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	4.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0647270679474	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	2	search with cache (only 1: fsetdec).	0.0589511394501	17
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0582849979401	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0333449840546	1
Coq.FSets.FMapList.Raw.empty_1	40	3.8	search with cache (only 1: intro n; only 1: inversion_clear 1).	0.855870962143	196
Coq.FSets.FMapList.Raw.empty_sorted	40	13	search with cache (only 1: constructor).	0.0268340110779	70
Coq.FSets.FMapList.Raw.is_empty_1	40	4.43	search with cache (only 1: fix odd_spec 1; only 1: eauto with ordered_type).	29.3053407669	4156
Coq.FSets.FMapList.Raw.is_empty_2	40	1.0.12	search with cache (only 1: fix odd_spec 1; only 1: unfold Empty, PX.MapsTo; only 1: auto).	8.47926783562	1115
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.1.4.0.0.0.0.2	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear Hm; only 1: compute in H0; only 1: simpl; only 1: case (X.compare x x''); only 1: intuition; only 1: auto; only 1: intuition).	13.2030501366	7090
Coq.FSets.FMapList.Raw.elements_1	40	0	search with cache (only 1: auto).	0.00845289230347	1
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00732088088989	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.0	search with cache (only 1: induction m; only 1: auto; only 1: intros; only 1: auto).	0.0158970355988	5
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	1.0.0.0.1	search with cache (only 1: induction m; only 1: intuition; only 1: intuition; only 1: simpl in *; only 1: auto).	0.0356230735779	7
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.3.1.5.0.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: simpl; only 1: intuition).	2.60785102844	2244
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.1.2.0.1.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion H; only 1: subst; only 1: auto).	0.777076005936	362
Coq.FSets.FMapList.Raw.mapi_sorted	40	0.4.2.0.0.0.5	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct a as (x', e'); only 1: inversion_clear 1; only 1: auto).	1.29725718498	977
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40	0.1.17.8.2	search with cache (only 1: intros; only 1: apply InA_eqA with (x, e); only 1: intuition; only 1: eauto with *; only 1: auto).	0.990750074387	1701
Coq.FSets.FMapList.Make.mem_1	40	0.0.24	search with cache (only 1: fix even_spec 1; only 1: intros; only 1: eauto with bool).	9.85467004776	1656
Coq.FSets.FMapList.Make.mem_2	40	4.26	search with cache (only 1: fix even_spec 1; only 1: auto).	1.87802696228	5236
Coq.FSets.FMapList.Make.empty_1	40	4.0	search with cache (only 1: intros a b; only 1: inversion_clear 1).	0.0127649307251	6
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	5.2	search with cache (only 1: intros m; only 1: auto).	0.0104660987854	9
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.00923109054565	2
Coq.FSets.FMapList.Make.elements_3	40	0.18	search with cache (only 1: induction m; only 1: auto).	0.196846961975	322
Coq.FSets.FMapList.Make.elements_3w	40	7.159	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	18.9856910706	169548
Coq.FSets.FMapList.Make.cardinal_1	40	6.1	search with cache (only 1: intros m; only 1: auto).	0.0142891407013	9
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40	5.17	search with cache (only 1: fix odd_spec 1; only 1: auto).	0.6278860569	931
Coq.FSets.FMapList.Make.equal_2	40	4.1.19	search with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: auto).	1.63357210159	1816
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40	5.1.11	search with cache (only 1: fix odd_spec 1; only 1: intros m m'; only 1: destr_bool).	1.06937885284	1170
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40	0.22.3.19.4	search with cache (only 1: intro z; only 1: apply Acc_rect; only 1: intro H; only 1: split; only 1: auto).	6.70628619194	43338
Coq.Wellfounded.Inclusion.wf_incl	40	0.0.7.6	search with cache (only 1: intros; only 1: intro x; only 1: apply Acc_intro; only 1: auto with sets).	0.0932800769806	266
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	10.2.1.0	search with cache (only 1: intro; only 1: intros a b x; only 1: case x; only 1: auto with sets).	8.19137501717	5541
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	1.1.5.3.5.1	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.58073592186	1615
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.24.1.25.10	search with cache (only 1: red; only 1: intro H; only 1: intro n; only 1: constructor; only 1: auto).	3.11747694016	23896
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.0.1.2.9.5.12	search with cache (only 1: intro x; only 1: intros y H2; only 1: intros; only 1: induction H2; only 1: apply Acc_inv with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	6.52421402931	16855
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.0	search with cache (only 1: red; only 1: auto with sets).	0.0116150379181	2
Coq.Numbers.DecimalR.of_IQmake_to_decimal	40
Coq.Numbers.DecimalR.of_to	40
Coq.Numbers.DecimalR.to_of	40
Coq.Numbers.DecimalR.to_decimal_inj	40	2.4.3.1.0.1.0	search with cache (only 1: intros Hnone EQ; only 1: generalize (DecimalQ.of_to q), (DecimalQ.of_to q'); only 1: revert Hnone; only 1: rewrite <- EQ; only 1: case QArith_base.to_decimal; only 1: now intros d _ H1 H2; rewrite <- (H1 d eq_refl), <- (H2 d eq_refl); only 1: now simpl).	6.70521211624	2143
Coq.Numbers.DecimalR.to_decimal_surj	40	3.1	search with cache (only 1: exists (QArith_base.of_decimal d); only 1: apply DecimalQ.to_of).	0.25883603096	67
Coq.Numbers.DecimalR.of_decimal_dnorm	40
Coq.Numbers.DecimalR.of_inj	40
Coq.Numbers.DecimalR.of_iff	40
Coq.Numbers.DecimalFacts.of_list_to_list	40
Coq.Numbers.DecimalFacts.to_list_of_list	40
Coq.Numbers.DecimalFacts.to_list_inj	40
Coq.Numbers.DecimalFacts.of_list_inj	40
Coq.Numbers.DecimalFacts.nb_digits_spec	40
Coq.Numbers.DecimalFacts.nzhead_spec	40
Coq.Numbers.DecimalFacts.unorm_spec	40
Coq.Numbers.DecimalFacts.revapp_spec	40
Coq.Numbers.DecimalFacts.rev_spec	40
Coq.Numbers.DecimalFacts.app_spec	40
Coq.Numbers.DecimalFacts.nztail_spec	40
Coq.Numbers.DecimalFacts.del_head_spec_0	40	0	search with cache (only 1: auto).	0.00851702690125	1
Coq.Numbers.DecimalFacts.del_head_spec_small	40
Coq.Numbers.DecimalFacts.del_head_spec_large	40
Coq.Numbers.DecimalFacts.nb_digits_0	40
Coq.Numbers.DecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: now case d).	0.119207143784	3
Coq.Numbers.DecimalFacts.nb_digits_iter_D0	40	1.5.1.1.3.2	search with cache (only 1: Nat.induct n; only 1: auto; only 1: intro n; only 1: Nat.nzsimpl; only 1: simpl; only 1: auto).	7.49005794525	2173
Coq.Numbers.DecimalFacts.length_lnzhead	40
Coq.Numbers.DecimalFacts.nb_digits_nzhead	40
Coq.Numbers.DecimalFacts.unorm_nzhead	40	1.105.12.9	search with cache (only 1: intros Hb; only 1: f_equal; only 1: symmetry; only 1: now induction u; [ idtac | simpl; rewrite IHu | .. ]).	30.8808069229	62173
Coq.Numbers.DecimalFacts.nb_digits_unorm	40
Coq.Numbers.DecimalFacts.nb_digits_rev	40
Coq.Numbers.DecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.DecimalFacts.unorm_D0	40	15	search with cache (only 1: auto).	0.0595860481262	91
Coq.Numbers.DecimalFacts.app_nil_l	40	0	search with cache (only 1: now unfold unorm; case nzhead).	0.0097599029541	1
Coq.Numbers.DecimalFacts.app_nil_r	40
Coq.Numbers.DecimalFacts.abs_app_int	40
Coq.Numbers.DecimalFacts.abs_norm	40
Coq.Numbers.DecimalFacts.iter_D0_nzhead	40
Coq.Numbers.DecimalFacts.iter_D0_unorm	40
Coq.Numbers.DecimalFacts.nzhead_app_l	40
Coq.Numbers.DecimalFacts.nzhead_app_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.DecimalFacts.nzhead_app_nil	40	2.1.0.0.1.0.1	search with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.216671943665	100
Coq.Numbers.DecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.DecimalFacts.unorm_app_zero	40
Coq.Numbers.DecimalFacts.app_int_nil_r	40
Coq.Numbers.DecimalFacts.unorm_app_l	40
Coq.Numbers.DecimalFacts.unorm_app_r	40
Coq.Numbers.DecimalFacts.norm_app_int	40
Coq.Numbers.DecimalFacts.del_head_nb_digits	40
Coq.Numbers.DecimalFacts.del_tail_nb_digits	40
Coq.Numbers.DecimalFacts.del_head_app	40
Coq.Numbers.DecimalFacts.del_tail_app	40
Coq.Numbers.DecimalFacts.del_tail_app_int	40
Coq.Numbers.DecimalFacts.app_del_tail_head	40
Coq.Numbers.DecimalFacts.app_int_del_tail_head	40
Coq.Numbers.DecimalFacts.del_head_app_int_exact	40
Coq.Numbers.DecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.nzhead_D0	40	0.2	search with cache (only 1: simpl nzhead; only 1: now unfold unorm; case nzhead).	0.0157339572906	4
Coq.Numbers.DecimalFacts.nzhead_iter_D0	40	1.2.70	search with cache (only 1: Nat.induct ltac:(n); only 1: reflexivity; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	2.71557593346	6116
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40
Coq.Numbers.DecimalFacts.unorm_nonnil	40	8	search with cache (only 1: now unfold unorm; case nzhead).	0.262958049774	44
Coq.Numbers.DecimalFacts.unorm_iter_D0	40	0	search with cache (only 1: now induction n).	0.0107748508453	1
Coq.Numbers.DecimalFacts.del_head_nonnil	40
Coq.Numbers.DecimalFacts.del_tail_nonnil	40
Coq.Numbers.DecimalFacts.nzhead_involutive	40	1.0.0.0.0.0.0.0.0.0.2.1.6	search with cache (only 1: induction d; only 1: apply to_list_inj; only 1: now simpl; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	5.04872512817	4329
Coq.Numbers.DecimalFacts.nztail_involutive	40
Coq.Numbers.DecimalFacts.unorm_involutive	40
Coq.Numbers.DecimalFacts.norm_involutive	40
Coq.Numbers.DecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.DecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.DecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.DecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.DecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.DecimalFacts.nzhead_app_nzhead	40	2.1.0.7.4.0	search with cache (only 1: apply to_list_inj; only 1: rewrite !nzhead_spec, app_spec; only 1: rewrite !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now rewrite <- List.app_comm_cons; case h).	3.32858395576	1908
Coq.Numbers.DecimalFacts.unorm_app_unorm	40
Coq.Numbers.DecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalFacts.unorm_app_l_nil	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	6	search with cache (only 1: apply of_lu_double_gen).	1.01788520813	7
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	2	search with cache (only 1: firstorder).	0.0121650695801	3
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	9	search with cache (only 1: auto).	0.0128991603851	11
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0197951793671	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Unsigned.nztail_to_uint	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	1	search with cache (only 1: now induction n).	0.0134649276733	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.DecimalNat.Signed.of_int_norm	40
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40
Coq.Numbers.DecimalN.Unsigned.to_of	40	13.10.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now f_equal).	22.5502538681	15716
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	1	search with cache (only 1: now induction d).	0.0148301124573	2
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.1.1.0.8	search with cache (only 1: destruct (Pos.of_uint d) eqn:Hd, (Pos.of_uint d') eqn:Hd'; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj; only 1: apply Unsigned.of_inj).	0.805400848389	428
Coq.Numbers.DecimalN.Unsigned.of_iff	40
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.2.3.4.0	search with cache (only 1: simpl norm; only 1: unfold N.to_int; only 1: exists (N.of_uint d); only 1: f_equal; only 1: exact (DecimalPos.Unsigned.to_of d)).	6.26879000664	2369
Coq.Numbers.DecimalN.Signed.of_int_norm	40
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_succ	40	1	search with cache (only 1: auto).	0.0218431949615	2
Coq.Numbers.HexadecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalNat.Unsigned.of_to	40
Coq.Numbers.HexadecimalNat.Unsigned.to_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu_sixteenfold	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalNat.Unsigned.to_of	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalNat.Unsigned.of_inj	40
Coq.Numbers.HexadecimalNat.Unsigned.of_iff	40
Coq.Numbers.HexadecimalNat.Signed.of_to	40
Coq.Numbers.HexadecimalNat.Signed.to_of	40
Coq.Numbers.HexadecimalNat.Signed.to_int_inj	40
Coq.Numbers.HexadecimalNat.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalNat.Signed.of_int_norm	40
Coq.Numbers.HexadecimalNat.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	3.1	search with cache (only 1: intros a b; only 1: auto).	0.00990700721741	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	1.0.0.18.6.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold Symmetric, Z.eq; only 1: simpl; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	7.60082912445	2445
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.7.2.0.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: nzsimpl; only 1: now rewrite H).	0.452052116394	284
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40	0.20.3.30.0.0	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intros n m H; only 1: rewrite add_comm; only 1: simpl; only 1: rewrite add_comm in H; only 1: now rewrite H).	25.3273119926	25260
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	0.1.10.0.2.6	search with cache (only 1: intro n; only 1: unfold Z.zero, Z.succ, Z.eq in *; only 1: simpl; only 1: destruct n as [n m]; only 1: simpl; only 1: now rewrite add_succ_r, add_succ_l).	0.892646074295	1394
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.1	search with cache (only 1: unfold Z.pred, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.100589036942	5
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	5.2.2	search with cache (only 1: unfold Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.104408979416	104
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.0587809085846	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	22	search with cache (only 1: now rewrite <- ?BinPos.Pos.compare_antisym).	0.0594029426575	231
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	1.0.1.0	search with cache (only 1: intro n; only 1: unfold Transitive, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.113460063934	6
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.0.11.1	search with cache (only 1: unfold Z.opp, Z.eq; only 1: destruct n as [n m]; only 1: simpl; only 1: now nzsimpl).	0.43904709816	268
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	1.0.5.2.4	search with cache (only 1: intro n; only 1: unfold Z.eq; only 1: intro H1; only 1: simpl; only 1: now nzsimpl).	1.19615101814	470
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.3.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.110074043274	7
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.12.1.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: intro H1; only 1: now nzsimpl).	2.08965706825	1087
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.2.3	search with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.124140977859	28
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40	18.0.7.2	search with cache (only 1: intro n; only 1: intro Dec; only 1: unfold Z.lt, Z.le, Z.eq; only 1: intuition order).	17.4621639252	7347
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.11.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	1.03613901138	792
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.0204319953918	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.1.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0212371349335	4
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.1.2	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.164913892746	36
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.30.9	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	12.9132258892	9957
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40	12.10.0.3	search with cache (only 1: intro m; only 1: intros; only 1: rewrite <- 2!add_opp_r; only 1: now apply add_lt_mono_r).	6.19854593277	5366
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40	9.32.0	search with cache (only 1: intros; only 1: do 2 rewrite <- add_opp_r; only 1: now apply add_le_mono_r).	12.7274699211	10021
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40	0.18.3.5	search with cache (only 1: intro p; only 1: intros; only 1: rewrite add_comm; only 1: now rewrite (sub_lt_mono_r _ _ p), add_simpl_r).	9.26366305351	5384
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40	0.18.3.5	search with cache (only 1: intro p; only 1: intros n m; only 1: rewrite (add_comm p m); only 1: now rewrite (sub_le_mono_r _ _ p), add_simpl_r).	8.79363799095	5090
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.12.0.2.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	2.77960920334	2428
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.3.1.1.0	search with cache (only 1: intros n; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.273836135864	140
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	1.9.0.0.1	search with cache (only 1: intro m; only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	1.10112094879	563
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40	3.11.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred n)  at 2; only 1: nzsimpl; only 1: now rewrite <- add_sub_assoc, sub_diag, add_0_r).	10.7041180134	3998
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	3.14.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.472359895706	612
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40	14.7.0.0	search with cache (only 1: intros n m p; only 1: do 2 rewrite <- add_opp_r; only 1: rewrite mul_add_distr_r; only 1: now rewrite mul_opp_l, <- mul_opp_r).	10.2355051041	4645
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40	7.16.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_r n)  at 1; only 1: now apply mul_le_mono_nonpos_l).	11.4919190407	9351
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.5.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.050039768219	25
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40	8.17.0	search with cache (only 1: intros n m Hn Hm; only 1: rewrite <- (mul_0_r n)  at 1; only 1: now apply mul_le_mono_nonpos_l).	15.0072290897	11759
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.6.5.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	11.7353479862	7966
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: simpl; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.35210704803	1166
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40	0.0.12	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.0507481098175	76
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.14	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.177038908005	155
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40	1.2.1.60	search with cache (only 1: split; only 1: simpl_relation; only 1: firstorder; only 1: congruence).	1.11765289307	2339
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.0.0.0.0.1.7.4.12	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: order).	3.10280203819	1976
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0420219898224	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0578529834747	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0386409759521	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0181248188019	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	12.0.1	search with cache (only 1: intro n; only 1: bitwise; only 1: now nzsimpl).	1.23249101639	395
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	1.0.62	search with cache (only 1: intros H; only 1: bitwise; only 1: reflexivity).	4.70252299309	11304
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	1.0.8	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.108808994293	70
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0205519199371	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.4.0.2.0.4.0.2.5.3	search with cache (only 1: intros a a' Ha n n' Hn; only 1: destruct (le_ge_cases n 0) as [H| H]; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn; only 1: pose proof H as H'; only 1: rewrite Hn in H'; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	11.1955850124	6626
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.199445962906	30
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40	4.10.0	search with cache (only 1: unfold lnot; only 1: rewrite opp_involutive; only 1: now nzsimpl').	0.215776920319	202
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	11.1.27	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	2.94192409515	6951
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	20.1.2	search with cache (only 1: intro n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	3.36920309067	4716
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	2.0.4.15	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	6.29311990738	6978
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	2.2.0.17	search with cache (only 1: pose proof lt_m1_0 as F; only 1: intros a; only 1: bitwise; only 1: now rewrite lnot_spec, bits_m1).	6.35648798943	6287
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	3.10.3.10.7.2	search with cache (only 1: intros; only 1: split; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	9.7264881134	10575
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.0.0	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0138039588928	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	0.1.11	search with cache (only 1: intros; only 1: unfold lnot; only 1: now rewrite <- opp_succ, opp_nonneg_nonpos, le_succ_l).	0.0825591087341	83
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	0.6.5.1.1.5.2.5.1	search with cache (only 1: intro n; only 1: intros; only 1: split; only 1: intros; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intros; only 1: apply pred_wd in H; only 1: now nzsimpl').	8.80317687988	12381
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40	0.0.0.2.1.0.0.0.5.27.3	search with cache (only 1: intros; only 1: destruct_max n; only 1: now split; only 1: split; only 1: intros (p, Hp); only 1: exists (- p); only 1: rewrite Hp; only 1: now rewrite mul_opp_l, mul_opp_r; only 1: intros (p, Hp); only 1: exists (- p); only 1: now rewrite mul_opp_opp).	32.3568041325	40109
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0393738746643	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	4.0.0.0.0.15	search with cache (only 1: intros P n **; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	3.61708307266	3990
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	6.1.0.1.16.2.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: easy).	27.600413084	22523
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	3.3.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: order).	0.0462119579315	18
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.4.0	search with cache (only 1: intros a b g NZ EQ; only 1: rewrite EQ; only 1: rewrite !quot_div_exact; only 1: rewrite gcd_div_factor; only 1: now rewrite <- EQ, div_same; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_l).	5.89909815788	2383
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.1.19.1.0	search with cache (only 1: intros a b Hb; only 1: rewrite (gcd_comm _ b); only 1: rewrite !rem_eq by trivial; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: apply gcd_add_mult_diag_r).	8.87844014168	6896
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.0.0.15.6.5	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: generalize (gcd_nonneg a b); only 1: order; only 1: apply gcd_divide_r).	2.74503493309	3070
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.14.3.4	search with cache (only 1: intros; only 1: unfold lcm; only 1: rewrite abs_eq; only 1: now nzsimpl; only 1: now nzsimpl).	1.17169713974	1453
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.15.22.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply opp_nonneg_nonpos; only 1: now rewrite opp_nonneg_nonpos; only 1: apply divide_0_r; only 1: apply divide_0_r; only 1: trivial).	14.5666189194	22702
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	1.3.3.3.1.5	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1).	0.841074943542	912
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.0.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0210740566254	9
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.0.0.3.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0225977897644	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	1.0.8.1.0.2	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: apply H; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.617918968201	659
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0214729309082	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	4.0.0.0.0.19.5	search with cache (only 1: intros EQ; only 1: intros n; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	31.0477569103	28327
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.13.0.8.0.4.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros; only 1: now apply divide_abs_l).	11.7283599377	10508
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.9.0.0	search with cache (only 1: intros n m p ?; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: auto).	0.39115190506	193
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40	1.1.1.44.11	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	5.06900286674	11778
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	1.1.1.29.1.0	search with cache (only 1: intro n; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	5.17593884468	5434
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	1.1.1.29.3.0	search with cache (only 1: intro; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n 0) as [H1| [H1| H1]]; only 1: intuition; only 1: intuition; only 1: intuition).	3.94501399994	6229
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.1.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0331449508667	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	23.7.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	0.966539144516	1547
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40	0.24.0.3	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.524847984314	1111
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	3.5.22	search with cache (only 1: intro H1; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	1.26555299759	3649
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	21.10.2	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: now apply lt_lt_succ_r).	7.12961101532	14342
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	3.0.1.0.3.0	search with cache (only 1: intros; only 1: apply lt_le_incl; only 1: rewrite <- (succ_pred m); only 1: apply lt_succ_r; only 1: rewrite <- (succ_pred m); only 1: now rewrite pred_succ).	3.27484297752	1171
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40	0.1.0.9.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_le_pred; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	5.81216692924	3162
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	6.0.0	search with cache (only 1: intros; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.142071008682	19
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite <- lt_pred_le; only 1: rewrite pred_succ; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0386230945587	7
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.2.0.1.4.4	search with cache (only 1: intro m; only 1: symmetry; only 1: rewrite lt_le_pred; only 1: rewrite pred_succ; only 1: symmetry; only 1: apply lt_pred_le).	2.02192378044	1412
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	5.2.2.1.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite lt_pred_le; only 1: now rewrite 2!lt_eq_cases, <- succ_lt_mono, succ_inj_wd).	2.49045705795	1282
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	16.2.2	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply neq_sym, neq_succ_diag_l).	1.04403400421	1228
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	5.4.0.1.0	search with cache (only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	0.693229198456	596
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	5.5.0.1.0	search with cache (only 1: unfold sgn; only 1: destruct (compare_spec 0 n); only 1: order'; only 1: order'; only 1: order').	1.93486905098	729
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	2.1.1.3	search with cache (only 1: intros n m; only 1: rewrite abs_neq; only 1: auto with relations; only 1: now rewrite (opp_le_mono n 0), opp_0).	0.294245004654	184
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	1.4.1.1.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.182066917419	120
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.9.7	search with cache (only 1: apply abs_eq; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.0608718395233	199
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	6.5.14.4.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: right; only 1: reflexivity).	9.30466604233	10710
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.7.5.0	search with cache (only 1: intros; only 1: assert (LE : 0 <= abs n) by apply abs_nonneg; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.859014987946	987
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros P n **; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0228140354156	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	9.1.0.9	search with cache (only 1: intros; only 1: destruct_max n; only 1: apply eq_refl; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	2.58186292648	1304
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	1.1.0	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0141549110413	5
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40	1.0.1.0.1.0.1.0.1.32	search with cache (only 1: pose proof lt_m1_0 as F; only 1: split; only 1: destruct_sgn n; only 1: order'; only 1: order'; only 1: order'; only 1: destruct_sgn n; only 1: order'; only 1: order'; only 1: order').	38.1110389233	75019
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.14.1.0.0.0.3.1	search with cache (only 1: intros n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: order'; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: order').	25.270979166	13565
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	19	search with cache (only 1: apply NZQuot.div_pos).	2.2438018322	1577
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.0.0.4.0.5.0.1.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	8.63437604904	5758
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.3.1	search with cache (only 1: intros a b q r **; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.111437797546	28
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.0.0.4.0.5.0.1.0.1	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: intuition order; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	12.0317988396	7356
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.1.1	search with cache (only 1: intros a b q r **; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0226440429688	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40	2.3.1.2.4.0.3.10.7.4	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: destruct (le_gt_cases 0 n); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: now nzsimpl).	15.8740551472	25910
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	1.0.0.0.0.1.0	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: left; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0410299301147	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	1.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: left; only 1: auto; only 1: now nzsimpl).	0.103292942047	29
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.6.10.0.0.2	search with cache (only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: intuition; only 1: apply lt_0_1; only 1: now nzsimpl).	2.17933106422	4143
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0180909633636	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0168151855469	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	1.0.0.1.0.3.0.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	5.72873902321	3582
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	5.1.0.1.0.0.13.1.5.5	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition order; only 1: right; only 1: intuition order; only 1: nzsimpl; only 1: now try split).	24.3087778091	13268
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	1.1.14.0	search with cache (only 1: intros a b ? ?; only 1: apply mod_le; only 1: auto; only 1: auto).	3.80964899063	2426
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	1.7.5	search with cache (only 1: intros a b ? ?; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using div_pos).	0.977114915848	378
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	0.11.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.645510911942	252
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.1.10.0.0.2.4	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	15.204600811	6043
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.2.10.0.0.0.7	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: auto; only 1: auto).	5.16505599022	3083
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0244979858398	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.1.2.0.2	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.398756980896	118
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.1.4.2.3	search with cache (only 1: intros a b **; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	4.14189791679	1591
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	0.5.0.0.5.1	search with cache (only 1: intros a b q **; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: auto; only 1: rewrite mul_comm; only 1: auto).	11.3461999893	5376
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	5.1.5.0.1.1	search with cache (only 1: intros a b **; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	4.85284686089	3823
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	2.1.0.2.1.2.5	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: trivial; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	1.14329195023	1029
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.1.2.0	search with cache (only 1: intros a b c **; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: auto using div_opp_l_nz).	0.0198528766632	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	6.7.0	search with cache (only 1: intros a b c **; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	14.983011961	3543
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.3.2.4	search with cache (only 1: intros a b Hb H; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: auto using div_opp_l_nz).	2.19810509682	1113
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.1.0.2.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	1.04701304436	373
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	5.0.6.4	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.23925900459	1435
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.1.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0259718894958	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	0.0.8.2.0.19	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	2.09987998009	1133
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.1.10	search with cache (only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	2.84968805313	990
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.1.0.2.1.3	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.597841978073	135
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.5.4.1.2.0.1.2.19	search with cache (only 1: split; only 1: intros H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H).	5.94443511963	4959
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40	10.6.1.7.6.1.0	search with cache (only 1: split; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive; only 1: intros; only 1: apply opp_inj; only 1: now rewrite opp_involutive).	20.6919929981	18443
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0	search with cache (only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0096070766449	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.0.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.0209829807281	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.11.2	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	1.79528999329	669
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	10.0.0	search with cache (only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.734480142593	260
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.0	search with cache (only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0150499343872	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	16.0	search with cache (only 1: rewrite <- 2!add_opp_r; only 1: apply add_shuffle0).	1.20909380913	545
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40	0.0.8.0.22.11	search with cache (only 1: rewrite <- add_opp_r; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	37.9811809063	18453
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	10.11	search with cache (only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	0.815606832504	419
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.17	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.630331039429	236
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	4.0	search with cache (only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.0164821147919	6
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	0	search with cache (only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0130670070648	1
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	5.3	search with cache (only 1: rewrite add_comm; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0298418998718	12
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	1.0.1.14	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.730932950974	394
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	4	search with cache (only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.018315076828	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40	0.22	search with cache (only 1: rewrite (add_comm p); only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	4.59078216553	2268
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	5.14	search with cache (only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	3.45138001442	1625
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.12	search with cache (only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	0.179727077484	75
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.8.2.3.21.8.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	4.50438189507	11179
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.2.0.44.5.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	4.3907430172	14955
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.5.0	search with cache (only 1: intros a b ?; only 1: apply div_small; only 1: auto).	0.0577218532562	33
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	7.0	search with cache (only 1: intros; only 1: auto using mod_small).	0.108420133591	46
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.1.2.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.12934088707	77
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.220484972	99
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0164639949799	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0147819519043	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	1.0.3.3.2.9.10.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	3.87365412712	4425
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	4.5.5.8.2.7.7	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: intuition; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: now try split).	24.7325720787	21982
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	4.5	search with cache (only 1: intros a b ? ?; only 1: auto using div_pos).	0.0507221221924	37
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	1.0.7.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: auto using Private_NZDiv.div_pos).	1.47846007347	690
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.4.7.26.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	20.6603889465	14698
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0255589485168	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.11.1.2.0.1	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	14.766368866	6281
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.3.1.4.8	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	4.45007109642	2319
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	4.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: auto; only 1: now rewrite mul_comm).	0.328169822693	138
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	3.0.1.0.1.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.50896692276	330
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	1.0.0.2.1.2.2	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.490812063217	316
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	3.0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: intros EQ; only 1: now destruct (mod_always_pos a b)).	0.0241289138794	10
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	4.5.1	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	4.51267004013	1156
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	5.6.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	4.453166008	988
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.2.2.3.2.2.3.1	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	31.5925059319	9054
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.3.0.2.1.0.0.0	search with cache (only 1: intros a b c ? ? ?; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	2.20765304565	1058
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	4.3	search with cache (only 1: intros a n Hn; only 1: Z.order).	0.0201699733734	9
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40	9.9	search with cache (only 1: intros; only 1: firstorder).	0.896585941315	1354
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.0768520832062	10
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.15.12	search with cache (only 1: intros; only 1: destruct x; only 1: reflexivity).	0.620362997055	1085
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0164749622345	2
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40	3.8.0.3.8.0.15.0	search with cache (only 1: destruct x; only 1: split; only 1: intros; only 1: inversion H; only 1: auto; only 1: intros; only 1: inversion H; only 1: auto).	38.4213957787	17442
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	1.0	search with cache (only 1: intro n; only 1: auto).	0.0243129730225	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.1.4.4	search with cache (only 1: intros; only 1: destruct x; only 1: simpl in *; only 1: auto).	14.0790131092	83
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	1.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0230619907379	5
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	2.0.2.0.2.1.0.5.4.2	search with cache (only 1: simpl; only 1: intro n; only 1: Nat.induct n; only 1: destruct x; only 1: auto; only 1: destruct x; only 1: simpl; only 1: rewrite H; only 1: simpl; only 1: split).	18.8097159863	9722
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.8	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	4.04640293121	37
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	3.5	search with cache (only 1: destruct x; only 1: auto).	2.02486801147	22
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0189189910889	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	3.7.5.0	search with cache (only 1: destruct x; only 1: intros; only 1: injection H; only 1: auto).	33.9279060364	1217
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	3.4.0.2.14	search with cache (only 1: intros n m ?; only 1: destruct m; only 1: simpl in *; only 1: rewrite H; only 1: auto).	2.14060091972	1739
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	3.6.3.0.0.6	search with cache (only 1: destruct x; only 1: simpl in *; only 1: intros; only 1: compute; only 1: rewrite H; only 1: auto).	3.75762104988	1668
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.0	search with cache (only 1: apply recrbis_aux_equiv; only 1: auto).	0.0182011127472	2
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	2.3.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0321099758148	8
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	2.6	search with cache (only 1: destruct x; only 1: auto).	0.0298988819122	13
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	0.4.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0236809253693	7
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0216100215912	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40	0.0.13.4.1	search with cache (only 1: unfold EqShiftL; only 1: simpl; only 1: fix odd_spec 1; only 1: intros; only 1: auto).	32.2180099487	18496
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.00917482376099	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.00937104225159	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0.0	search with cache (only 1: red; only 1: auto).	0.0142250061035	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: reflexivity).	0.0114529132843	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.010262966156	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	0.16	search with cache (only 1: simpl; only 1: reflexivity).	0.519491910934	129
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40	2.0	search with cache (only 1: intros; only 1: auto with arith).	0.0138139724731	4
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	3.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0682299137115	43
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	1.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.216866970062	71
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.0.7	search with cache (only 1: unfold sub31carryc, sub31, interp_carry; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.255926847458	74
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.253953933716	42
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0139849185944	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	2.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.33650302887	74
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	1.2	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0202510356903	5
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	0.4.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: nia).	0.0407350063324	10
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.1.2.0.0.2.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.332711935043	126
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	39	search with cache (only 1: auto with zarith).	0.536795854568	894
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0791981220245	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.1.1.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0785360336304	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	1.1.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: auto with zarith).	0.0321819782257	11
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0483200550079	19
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.0109078884125	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	0.8.0.0	search with cache (only 1: intros; only 1: unfold opp, to_Z; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.575140953064	223
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	2.4.4.0.0	search with cache (only 1: intros; only 1: unfold pred, to_Z, Z.pred; only 1: rewrite <- Zminus_mod_idemp_r; only 1: rewrite <- Zminus_mod_idemp_l; only 1: auto).	3.38307213783	1538
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	2.3	search with cache (only 1: generalize wB_pos; only 1: auto with zarith).	0.0242700576782	7
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	1	search with cache (only 1: auto).	0.00897884368896	2
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.1.0.0.1.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	10.6948468685	1993
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	3.1.13	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: Z.order_pos).	0.261548042297	186
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40	0	search with cache (only 1: Z.order_nz).	0.0208430290222	1
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	25.7	search with cache (only 1: intros Hb; only 1: now elim (Z.lt_irrefl 0)).	0.470870018005	874
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	25	search with cache (only 1: reflexivity).	0.0513820648193	306
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	1	search with cache (only 1: auto).	0.0165140628815	2
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	1	search with cache (only 1: auto).	0.0124070644379	2
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	0	search with cache (only 1: congruence).	0.0126070976257	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0222051143646	3
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.1	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.121728181839	14
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	11.1.36	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: now intros ->).	2.82000994682	5480
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.0106449127197	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.0111520290375	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40	3.17.2	search with cache (only 1: unfold eqm; only 1: repeat rewrite Zmod_mod; only 1: trivial).	2.35339212418	2714
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.1.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.0365509986877	8
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	2.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: now Z.nzsimpl).	0.0486130714417	5
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	5.0.5.9.10.44	search with cache (only 1: apply eq_true_iff_eq; only 1: revert n; only 1: intros s2; only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	31.7203888893	58617
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: auto).	0.0125830173492	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40	8	search with cache (only 1: destr_bool).	0.0389058589935	21
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40	1.12	search with cache (only 1: rewrite Zmod_odd; only 1: now destruct Z.odd).	0.31134390831	107
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40	0.1	search with cache (only 1: rewrite Zmod_even; only 1: now destruct Z.even).	0.0378818511963	3
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40
Coq.Numbers.Cyclic.Int63.Int63.land0	40	0.0.6.3.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: unfold bit; only 1: rewrite lsr0, lsl0, andb_false_r; only 1: auto).	0.776723146439	534
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40	0.1.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite land_spec, bit_0; only 1: rewrite andb_false_r; only 1: auto).	0.0223460197449	6
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40	10.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite lor_spec, bit_0; only 1: now rewrite orb_false_r).	0.759799003601	493
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40	9.6	search with cache (only 1: intros; only 1: firstorder).	0.341750860214	389
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40	1.0	search with cache (only 1: intros x y H; only 1: auto using eqb_correct, eqb_complete).	0.0179419517517	3
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40	8.20.0.1	search with cache (only 1: intros a b; only 1: zify; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	29.1651191711	11524
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.0.1.0	search with cache (only 1: intros; only 1: apply Pos.eqb_eq; only 1: unfold eqb, eq; only 1: easy || lia).	0.0955739021301	27
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40	11.4.6.9.4.3.28.9	search with cache (only 1: constructor; only 1: now repeat constructor; only 1: intro n; only 1: intros; only 1: now subst; only 1: intro n; only 1: intros; only 1: intuition congruence).	8.04005599022	21313
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	0.2.0.0.66	search with cache (only 1: rewrite N.one_succ; only 1: zify; only 1: simpl Z.add; only 1: rewrite <- one_mod_wB  at 2; only 1: now rewrite <- Zplus_mod).	0.881412029266	2688
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	20	search with cache (only 1: firstorder  auto with crelations).	0.157646894455	186
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	0.1.2.1.0	search with cache (only 1: firstorder  auto with crelations; only 1: zify; only 1: rewrite Zmod_small; only 1: reflexivity; only 1: apply ZnZ.spec_to_Z).	0.07439494133	29
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40	0.2.31.1.28	search with cache (only 1: intros l; only 1: zify; only 1: Z.nzsimpl'; only 1: apply Zmod_small; only 1: apply ZnZ.spec_to_Z).	9.13785290718	15082
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.2	search with cache (only 1: simpl; only 1: auto).	0.0114920139313	4
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3.0	search with cache (only 1: simpl; only 1: auto).	0.0104579925537	5
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0116410255432	2
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.HexadecimalQ.of_IQmake_to_hexadecimal'	40
Coq.Numbers.HexadecimalQ.of_to	40
Coq.Numbers.HexadecimalQ.dnorm_spec_i	40
Coq.Numbers.HexadecimalQ.dnorm_spec_f	40
Coq.Numbers.HexadecimalQ.dnorm_spec_e	40	6.0.1.0.0.1.4.1.0.11	search with cache (only 1: destruct d; only 1: now simpl; only 1: simpl; only 1: set (m := match Decimal.norm e with | Decimal.Pos _ | _ => _ end); only 1: unfold m; only 1: case (Decimal.norm e); only 1: clear m e; only 1: intro e; only 1: now case e; clear e; [ idtac | intro e; case e | .. ]; only 1: now simpl).	31.1442389488	7144
Coq.Numbers.HexadecimalQ.dnorm_involutive	40
Coq.Numbers.HexadecimalQ.IZ_to_Z_IZ_of_Z	40	0.0.0.0.0.0.1.1.2.4	search with cache (only 1: case (Z.eq_dec z 2); only 1: case z; only 1: now simpl; only 1: intros ? H; only 1: now simpl; only 1: now simpl; only 1: case z; only 1: now simpl; only 1: now simpl; only 1: now simpl).	1.36014890671	753
Coq.Numbers.HexadecimalQ.dnorm_i_exact	40
Coq.Numbers.HexadecimalQ.dnorm_i_exact'	40
Coq.Numbers.HexadecimalQ.to_of	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalQ.to_hexadecimal_surj	40
Coq.Numbers.HexadecimalQ.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalQ.of_inj	40
Coq.Numbers.HexadecimalQ.of_iff	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40	12	search with cache (only 1: parity_binop).	0.785935163498	393
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40	3	search with cache (only 1: parity_binop).	0.166598081589	49
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	13.0.25	search with cache (only 1: intros H; only 1: rewrite nlt_ge; only 1: apply le_0_l).	1.97010397911	6082
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	13.17.10.5	search with cache (only 1: intro H; only 1: rewrite nle_gt; only 1: apply lt_succ_r; only 1: apply le_0_l).	4.56193089485	15977
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	6.16.11	search with cache (only 1: intro n; only 1: apply lt_succ_r; only 1: apply le_0_l).	0.776472091675	1535
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	2.4.0.8.22.2	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: apply lt_0_succ).	2.61783313751	5824
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.0.6	search with cache (only 1: intros; only 1: destruct (lt_exists_pred _ _ H) as (n', (EQ, LE)); only 1: rewrite EQ; only 1: now rewrite pred_succ).	0.0210819244385	10
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	3.4.11.1.17.0.0.5	search with cache (only 1: intro n; only 1: cases n; only 1: rewrite pred_0; only 1: apply le_0_l; only 1: intros; only 1: apply lt_le_incl; only 1: rewrite pred_succ; only 1: now apply lt_succ_diag_r).	7.75778198242	19677
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	3.4.1.1.0.0.3	search with cache (only 1: intro n; only 1: cases n; only 1: intros H; only 1: now elim H; only 1: intros n _; only 1: rewrite pred_succ; only 1: now apply lt_succ_diag_r).	2.24481701851	2552
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	2.0.4.2.9.0.0.0.0.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: auto; only 1: intros; only 1: rewrite pred_succ; only 1: elim H using le_ind; only 1: solve_proper; only 1: now apply le_le_succ_r; only 1: intros k H1 H2; only 1: now apply le_le_succ_r).	29.8190128803	41545
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	1.1.0.6.4.7.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: auto; only 1: intros m H1 H2; only 1: rewrite pred_succ; only 1: rewrite <- le_succ_l; only 1: order).	15.0873031616	28636
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	7.0.6.0.4.1.0.0	search with cache (only 1: intro n; only 1: cases ltac:(n); only 1: intro n; only 1: rewrite pred_0; only 1: apply lt_le_incl; only 1: intros n m; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	8.31433296204	10793
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40	5.3.2.2.2.4.3.0.2	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: auto; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl; only 1: auto).	19.5183830261	42734
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	11.3.0.0.2.1.2	search with cache (only 1: intros n m; only 1: cases m; only 1: rewrite pred_0; only 1: auto; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	8.70249605179	13884
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	1.0.2.2.0.1.2.0.9.0	search with cache (only 1: intros n m; only 1: cases n; only 1: rewrite pred_0; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl; only 1: intros n IH; only 1: rewrite pred_lt_mono by apply neq_succ_0; only 1: rewrite pred_succ; only 1: rewrite pred_succ in IH; only 1: now rewrite pred_succ).	21.9985899925	22426
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.1.17.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: order).	5.60762190819	5122
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	1.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: now nzsimpl).	0.0336790084839	11
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	0.0.26.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	2.61463403702	5742
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	0.1.4.8.1	search with cache (only 1: intros a b ?; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.866755962372	1123
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	5.2.1	search with cache (only 1: intros; only 1: apply mod_small; only 1: auto').	0.0435512065887	42
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0130920410156	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.1.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.0134949684143	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.0.0.7.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: rewrite one_succ; only 1: intro n; only 1: now apply (neq_succ_diag_l 0); only 1: now nzsimpl).	0.49344086647	703
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	0.7.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.161212921143	208
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0115668773651	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0106160640717	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	13.2.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	2.22072100639	2947
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	2.2.3.1	search with cache (only 1: intros; only 1: apply mod_mul; only 1: auto'; only 1: auto').	0.34001493454	253
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	2.2.10.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.707380056381	632
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.7.0	search with cache (only 1: intros a b (Hb, Hab); only 1: apply div_str_pos; only 1: auto).	0.0549609661102	24
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	2.2.8.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.738435029984	385
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	2.2.2.2.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.807811021805	486
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.1	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0287890434265	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40	0.0.7.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: order; only 1: rewrite mul_comm; only 1: order; only 1: order).	2.13006210327	1321
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40	1.1.8.1.1.3.0	search with cache (only 1: intros; only 1: rewrite <- (Private_NZDiv.div_mul q b); only 1: apply Private_NZDiv.div_le_mono; only 1: auto'; only 1: rewrite mul_comm; only 1: auto'; only 1: auto').	6.39128684998	5048
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	2.1.2.7.5	search with cache (only 1: intros; only 1: apply div_add; only 1: auto'; only 1: auto'; only 1: auto').	5.34252095222	3696
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	2.1.2	search with cache (only 1: intros a b c; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add).	0.206069946289	65
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	2.2.2.3.0	search with cache (only 1: intros; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.791332006454	573
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: intuition; only 1: intuition).	0.0594758987427	20
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	1.1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: intuition; only 1: intuition).	1.35275602341	450
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	2.2.0.0.0.1.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: intuition; only 1: intuition).	1.80195093155	731
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.11.5.4.2.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: apply neq_0_lt_0; only 1: assumption; only 1: now rewrite Private_NZDiv.mod_small_iff).	2.04587697983	2959
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	3.1.0.7.0	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.14355802536	495
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	12.0.3.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: assumption).	1.17968297005	717
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	12.12.5.4.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: assumption; only 1: assumption).	27.2879757881	20476
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	3.0.0.4.0	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.492857933044	179
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	1.0.0.2.11	search with cache (only 1: intros a b Ha Hb; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: intro n; only 1: tauto).	3.7148270607	1775
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	1.0.1.0.4.2.12	search with cache (only 1: intros a b Ha Hb; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: intro n; only 1: tauto; only 1: intro n; only 1: tauto).	21.4992761612	11394
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.542968988419	91
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	12.0.0.2.1.12.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	15.9933810234	11039
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: auto; only 1: auto; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.0309839248657	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	7.5	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.039587020874	82
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	2.0.8.11.4.2	search with cache (only 1: cases n; only 1: rewrite pred_0; only 1: intro H; only 1: now elim H; only 1: intro n; only 1: now rewrite pred_succ).	0.931040048599	2477
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	2.0.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: unfold ltb; only 1: now rewrite recursion_0).	1.01450419426	6
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	1.5.4.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.437453985214	392
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	1.4	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.0090970993042	7
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	1.13.0	search with cache (only 1: unfold even; only 1: intro H; only 1: now rewrite recursion_succ).	0.324733018875	563
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40	2.13	search with cache (only 1: compute; only 1: now rewrite recursion_0).	0.0459070205688	111
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	4.0.0.0.1.0.3	search with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: now nzsimpl).	4.45173001289	457
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40	1.6.3	search with cache (only 1: unfold pow; only 1: intro n; only 1: now rewrite recursion_0).	0.544240951538	76
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.5.1.1.0.0	search with cache (only 1: intros; only 1: unfold pow; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: order; only 1: f_equiv').	6.92473506927	502
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	5.5.2.5.5	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	13.7972228527	12941
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	5	search with cache (only 1: solve_proper).	0.0742819309235	43
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.1.0.0.0.0.2.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: destr_bool; only 1: split; only 1: now try order'; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: split).	2.21026396751	1195
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40	0.0.14	search with cache (only 1: destr_bool; only 1: now try order'; only 1: now try order').	0.10830616951	130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.23	search with cache (only 1: intros; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	2.7440559864	1645
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.1.1.0.0.3.5	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order'; only 1: order_nz).	0.515683889389	349
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	2.0.0.1.1.0.0.1.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.740877866745	434
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.2	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0105738639832	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	1.6.2.3.10	search with cache (only 1: repeat red; only 1: intros; only 1: apply b2n_inj; only 1: do 2 f_equiv; only 1: auto).	3.92148900032	3459
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40	3.0.0.0.2.6.9	search with cache (only 1: repeat red; only 1: intros z n H; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: rewrite shiftr_spec'; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	15.0266931057	6315
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.2.17.19	search with cache (only 1: generalize (lt_succ_diag_r 0); only 1: intros n H; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	8.73959803581	13230
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0.1.6.0.2.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: bitwise as m; only 1: apply testbit_false; only 1: nzsimpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order'; only 1: order_nz).	1.7208211422	1091
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: generalize (lt_succ_diag_r 0); only 1: order; only 1: order_nz).	0.031613111496	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.3.0.1	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: apply log2_lt_cancel; only 1: rewrite log2_pow2; only 1: now order; only 1: trivial using le_0_l).	0.305779933929	135
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40	1.8.2.1.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: auto).	4.20586490631	1565
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.3.6	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.381935119629	155
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0875358581543	15
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.7	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.283793926239	130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0175950527191	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.0.2	search with cache (only 1: intro n; only 1: bitwise; only 1: destr_bool).	0.0574419498444	20
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0188670158386	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	1.0.26	search with cache (only 1: intro H; only 1: bitwise; only 1: reflexivity).	1.3566467762	2130
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	1.0.8	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0576269626617	65
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	5.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply andb_comm).	0.0177810192108	8
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.4.6	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	3.39767408371	479
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.3.1	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.120898008347	22
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.2.9.2	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	2.51683306694	1462
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	5.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: apply lxor_nilpotent).	0.0304009914398	17
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40	0.0.0.0.1.1.1.0.0.1.0.0	search with cache (only 1: intros a n H; only 1: bitwise as m; only 1: destruct (le_gt_cases n m); only 1: rewrite ones_spec_high, lnot_spec_high, bits_above_log2; only 1: trivial; only 1: now apply lt_le_trans with n; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	4.37291789055	2945
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.1.6	search with cache (only 1: unfold lnot; only 1: intros; only 1: bitwise; only 1: apply xorb_assoc_reverse).	0.786086082458	388
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_comm	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.0.1.0.0.0.19.1.0	search with cache (only 1: unfold natural_isomorphism; only 1: repeat red; only 1: intuition; only 1: now rewrite N1.recursion_0; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.466056108475	1295
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	14.4.7	search with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: now apply le_0_l).	1.18448591232	1297
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	4.11.0.0.1.0.0.8	search with cache (only 1: intros n IH; only 1: cases n; only 1: intros H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: nzsimpl; only 1: now nzsimpl').	25.7184808254	32137
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	0.4.4.1.0.1	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	2.25124597549	1499
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	9.1.4.4.6.0	search with cache (only 1: intros n m H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_l 0); only 1: apply add_lt_le_mono; only 1: auto; only 1: now apply le_0_l).	9.01529383659	6362
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	14.4.0.22	search with cache (only 1: intros n IH; only 1: nzsimpl; only 1: order'; only 1: apply le_0_l).	8.82613801956	6328
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.1.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: now apply pow_0_l; only 1: now apply pow_0_l).	0.0233490467072	7
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	3.7.8.29	search with cache (only 1: intro n; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	8.08359193802	9497
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	3.3.3.1.0.0.0.0.0.0.0.0.0.5.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	14.6452138424	6653
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	10.3.8.17.6.0.0	search with cache (only 1: intros a b Ha Hb; only 1: contradict Ha; only 1: apply Private_NZPow.pow_eq_0 with b; only 1: intros H; only 1: rewrite H, pow_0_r in Hb; only 1: order'; only 1: trivial).	22.662509203	44405
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	1.1.2.26.3	search with cache (only 1: intros a b Ha Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: trivial; only 1: trivial).	26.8763949871	13561
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40	14.3.7.6	search with cache (only 1: intros a b ? ?; only 1: apply pow_le_mono_r; only 1: generalize (le_0_l b); only 1: auto').	4.12668514252	6847
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	0.0.0.0.0.0.7	search with cache (only 1: intros a b ? ?; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: intuition order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.470338106155	359
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.4.7.0.5.12.5	search with cache (only 1: intros a b ? ?; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	4.52043104172	8281
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.0.2.0.1.4.3	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.576094150543	650
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	7.0.2.2.0.8	search with cache (only 1: split; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	12.1949570179	11521
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	2.0.0.1.2.0.1.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l).	4.98207712173	2524
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_r).	1.12041282654	434
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40	2.0.0.8.2.0.0.7.2	search with cache (only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply sub_le_mono_r).	12.181896925	7639
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0117800235748	3
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40	0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: auto; only 1: auto; only 1: f_equiv').	7.21879601479	69
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40	1.0.1.2.0.0.0.0.2.8.0.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: symmetry; only 1: setoid_replace n with (S m + (n - S m)); only 1: apply strong_rec0_more_steps; only 1: apply lt_succ_diag_r; only 1: rewrite add_comm; only 1: symmetry; only 1: apply sub_add; only 1: rewrite le_succ_l; only 1: auto).	25.2793879509	14931
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	0.1.3.0.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	0.031476020813	9
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	6.0.5	search with cache (only 1: intros n; only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.266647100449	176
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.3.2	search with cache (only 1: intros; only 1: unfold lcm; only 1: now nzsimpl).	0.0499379634857	14
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.3.1.2.14.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono; only 1: apply divide_0_r; only 1: apply divide_refl; only 1: trivial).	1.89106488228	2745
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	4.0.23.2.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: intros; only 1: now split).	14.4073390961	12184
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	6.0.1.2	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.245381116867	252
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40	3.0.0.0.5.0.4.14	search with cache (only 1: intros z n; only 1: induct ltac:(n); only 1: rewrite sub_succ_r; only 1: now nzsimpl'; only 1: intros n IH; only 1: rewrite sub_succ_r; only 1: rewrite IH; only 1: now nzsimpl').	13.2376739979	11892
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.3.1.0.0.4.0	search with cache (only 1: intros n m p LE; only 1: destruct (le_ge_cases n p) as [LE'| GE]; only 1: rewrite <- sub_0_le in LE'; only 1: rewrite LE'; only 1: apply le_0_l; only 1: apply le_add_le_sub_r; only 1: now rewrite sub_add).	4.16576695442	2045
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.HexadecimalZ.of_to	40
Coq.Numbers.HexadecimalZ.to_of	40
Coq.Numbers.HexadecimalZ.to_int_inj	40	7.9	search with cache (only 1: intros E; only 1: now rewrite <- (Unsigned.of_to n), <- (Unsigned.of_to n'), E).	0.31503200531	353
Coq.Numbers.HexadecimalZ.to_int_surj	40
Coq.Numbers.HexadecimalZ.of_int_norm	40
Coq.Numbers.HexadecimalZ.of_inj	40
Coq.Numbers.HexadecimalZ.of_iff	40
Coq.Numbers.HexadecimalZ.of_hex_uint_iter_D0	40
Coq.Numbers.HexadecimalZ.of_hex_int_iter_D0	40
Coq.Numbers.HexadecimalZ.double_norm	40
Coq.Numbers.HexadecimalZ.of_hex_int_double	40
Coq.Numbers.HexadecimalZ.double_to_hex_int	40
Coq.Numbers.HexadecimalZ.nztail_to_hex_uint_pow16	40
Coq.Numbers.HexadecimalN.Unsigned.of_to	40
Coq.Numbers.HexadecimalN.Unsigned.to_of	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.HexadecimalN.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalN.Unsigned.of_inj	40	7	search with cache (only 1: apply Unsigned.of_inj).	0.0467247962952	20
Coq.Numbers.HexadecimalN.Unsigned.of_iff	40
Coq.Numbers.HexadecimalN.Signed.of_to	40
Coq.Numbers.HexadecimalN.Signed.to_of	40
Coq.Numbers.HexadecimalN.Signed.to_int_inj	40
Coq.Numbers.HexadecimalN.Signed.to_int_pos_surj	40	0.0.2.1.0.0	search with cache (only 1: simpl; only 1: rewrite <- HexadecimalPos.Unsigned.to_of; only 1: unfold N.to_hex_int; only 1: exists (N.of_hex_uint d); only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0900490283966	38
Coq.Numbers.HexadecimalN.Signed.of_int_norm	40
Coq.Numbers.HexadecimalN.Signed.of_inj_pos	40
Coq.Numbers.HexadecimalFacts.of_list_to_list	40
Coq.Numbers.HexadecimalFacts.to_list_of_list	40
Coq.Numbers.HexadecimalFacts.to_list_inj	40
Coq.Numbers.HexadecimalFacts.of_list_inj	40
Coq.Numbers.HexadecimalFacts.nb_digits_spec	40
Coq.Numbers.HexadecimalFacts.nzhead_spec	40
Coq.Numbers.HexadecimalFacts.unorm_spec	40
Coq.Numbers.HexadecimalFacts.revapp_spec	40
Coq.Numbers.HexadecimalFacts.rev_spec	40
Coq.Numbers.HexadecimalFacts.app_spec	40
Coq.Numbers.HexadecimalFacts.nztail_spec	40
Coq.Numbers.HexadecimalFacts.del_head_spec_0	40	2	search with cache (only 1: trivial).	0.00932693481445	3
Coq.Numbers.HexadecimalFacts.del_head_spec_small	40
Coq.Numbers.HexadecimalFacts.del_head_spec_large	40	0.0.0.0.1.1	search with cache (only 1: revert d; only 1: induction n as [| n IHn]; only 1: intro d; only 1: now simpl; only 1: intro d; only 1: now case d; [ idtac | intros d' H; apply IHn, le_S_n.. ]).	0.0444760322571	8
Coq.Numbers.HexadecimalFacts.nb_digits_0	40
Coq.Numbers.HexadecimalFacts.nb_digits_n0	40	1.0	search with cache (only 1: rewrite nb_digits_spec, <- (of_list_to_list d); only 1: now case d).	0.195837974548	3
Coq.Numbers.HexadecimalFacts.nb_digits_iter_D0	40	2.17.1.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	2.13611698151	1646
Coq.Numbers.HexadecimalFacts.length_lnzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_nzhead	40
Coq.Numbers.HexadecimalFacts.nb_digits_unorm	40
Coq.Numbers.HexadecimalFacts.nb_digits_rev	40
Coq.Numbers.HexadecimalFacts.nb_digits_del_head_sub	40
Coq.Numbers.HexadecimalFacts.unorm_D0	40	0	search with cache (only 1: now simpl).	0.00929617881775	1
Coq.Numbers.HexadecimalFacts.app_nil_l	40	13	search with cache (only 1: trivial).	0.0228478908539	60
Coq.Numbers.HexadecimalFacts.app_nil_r	40
Coq.Numbers.HexadecimalFacts.abs_app_int	40
Coq.Numbers.HexadecimalFacts.abs_norm	40
Coq.Numbers.HexadecimalFacts.iter_D0_nzhead	40
Coq.Numbers.HexadecimalFacts.iter_D0_unorm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_l	40
Coq.Numbers.HexadecimalFacts.nzhead_app_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_r	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nil	40	2.1.0.1.0.0.1	search with cache (only 1: intro Hl; only 1: apply to_list_inj; only 1: revert Hl; only 1: rewrite !nb_digits_spec, !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now case h; [ idtac | simpl; rewrite List.app_length; intro Hl; exfalso; revert Hl; apply le_not_lt, le_plus_r.. ]).	0.253000020981	120
Coq.Numbers.HexadecimalFacts.nzhead_app_nil_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_zero	40
Coq.Numbers.HexadecimalFacts.app_int_nil_r	40
Coq.Numbers.HexadecimalFacts.unorm_app_l	40
Coq.Numbers.HexadecimalFacts.unorm_app_r	40
Coq.Numbers.HexadecimalFacts.norm_app_int	40
Coq.Numbers.HexadecimalFacts.del_head_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_tail_nb_digits	40
Coq.Numbers.HexadecimalFacts.del_head_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int	40
Coq.Numbers.HexadecimalFacts.app_del_tail_head	40
Coq.Numbers.HexadecimalFacts.app_int_del_tail_head	40
Coq.Numbers.HexadecimalFacts.del_head_app_int_exact	40
Coq.Numbers.HexadecimalFacts.del_tail_app_int_exact	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp_0	40
Coq.Numbers.HexadecimalFacts.nzhead_revapp	40
Coq.Numbers.HexadecimalFacts.nzhead_rev	40
Coq.Numbers.HexadecimalFacts.rev_rev	40
Coq.Numbers.HexadecimalFacts.rev_nztail_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_D0	40	1	search with cache (only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	0.00986981391907	2
Coq.Numbers.HexadecimalFacts.nzhead_iter_D0	40	5.1.50	search with cache (only 1: Nat.induct n; only 1: now simpl; only 1: now simpl).	2.71410918236	4188
Coq.Numbers.HexadecimalFacts.revapp_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_nil_inv	40
Coq.Numbers.HexadecimalFacts.rev_lnorm_rev	40
Coq.Numbers.HexadecimalFacts.nzhead_nonzero	40
Coq.Numbers.HexadecimalFacts.unorm_0	40
Coq.Numbers.HexadecimalFacts.unorm_nonnil	40
Coq.Numbers.HexadecimalFacts.unorm_iter_D0	40
Coq.Numbers.HexadecimalFacts.del_head_nonnil	40
Coq.Numbers.HexadecimalFacts.del_tail_nonnil	40
Coq.Numbers.HexadecimalFacts.nzhead_involutive	40
Coq.Numbers.HexadecimalFacts.nztail_involutive	40
Coq.Numbers.HexadecimalFacts.unorm_involutive	40
Coq.Numbers.HexadecimalFacts.norm_involutive	40
Coq.Numbers.HexadecimalFacts.lnzhead_neq_d0_head	40
Coq.Numbers.HexadecimalFacts.lnzhead_head_nd0	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead_eq	40
Coq.Numbers.HexadecimalFacts.nzhead_del_tail_nzhead	40
Coq.Numbers.HexadecimalFacts.unorm_del_tail_unorm	40
Coq.Numbers.HexadecimalFacts.norm_del_tail_int_norm	40
Coq.Numbers.HexadecimalFacts.nzhead_app_nzhead	40	2.1.0.7.5.0	search with cache (only 1: apply to_list_inj; only 1: rewrite !nzhead_spec, app_spec; only 1: rewrite !nzhead_spec, app_spec; only 1: induction (to_list d) as [| h t IHl]; only 1: now simpl; only 1: now rewrite <- List.app_comm_cons; case h).	3.38217616081	1622
Coq.Numbers.HexadecimalFacts.unorm_app_unorm	40
Coq.Numbers.HexadecimalFacts.norm_app_int_norm	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40	4.3.14	search with cache (only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: intros [=<-]; only 1: trivial).	14.8429129124	15011
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.DecimalZ.of_uint_iter_D0	40
Coq.Numbers.DecimalZ.of_int_iter_D0	40
Coq.Numbers.DecimalZ.nztail_to_uint_pow10	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	0.16.7	search with cache (only 1: apply sqrt_unique' with 0; only 1: now nzsimpl'; only 1: now nzsimpl).	0.70784497261	773
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40	4.0.0.9.6.0.1.1.2	search with cache (only 1: apply sqrt_unique; only 1: nzsimpl; only 1: split; only 1: order'; only 1: apply lt_succ_r; only 1: nzsimpl'; only 1: rewrite <- succ_le_mono; only 1: rewrite <- succ_le_mono; only 1: now apply lt_le_incl, lt_succ_r).	33.3408930302	17328
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.0.0.0.1.10	search with cache (only 1: unfold sqrt_up; only 1: intros a Ha; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.223505973816	228
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	1.0.7.0.2	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: now nzsimpl; only 1: order; only 1: order).	0.24253988266	385
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.1.8.24	search with cache (only 1: rewrite one_succ; only 1: rewrite <- (mul_0_l 0)  at 1; only 1: rewrite sqrt_up_eqn by now apply lt_succ_r, mul_nonneg_nonneg; only 1: now rewrite pred_succ, sqrt_square).	7.05218505859	9432
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.1.1.0.0.1.0.4.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: auto; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	1.51439380646	1058
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	2.2.1.8.1.63.25	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	32.379942894	59718
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	3.3.0.0.1.1	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: order; only 1: now nzsimpl).	0.612099170685	536
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	1.1.1.3.0.2.4.2	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: auto; only 1: intuition; only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply lt_succ_diag_r; only 1: now nzsimpl).	0.976671934128	1102
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	0.9.0.2.0	search with cache (only 1: intros; only 1: apply div_small; only 1: split; only 1: order'; only 1: order).	0.667336940765	1020
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.1.0.4.0	search with cache (only 1: intros a ?; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.071613073349	53
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.1.12.0	search with cache (only 1: intros a b Ha Hb; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: auto; only 1: auto).	0.783632040024	670
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40	0.1.0.0.2.3.0.0	search with cache (only 1: intro; only 1: intro; only 1: nzinduct n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.828165054321	579
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0458722114563	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	1.0.0.0.1.1	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.181095838547	61
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0188829898834	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	1.0.0.0.1.4.1	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	3.91821312904	1435
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.1.0	search with cache (only 1: intro; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.213777065277	36
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.4.1	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.870531082153	255
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.2	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.277341842651	81
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	1.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0199010372162	4
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	19.4.3.2.0	search with cache (only 1: intro; only 1: intro; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: auto).	11.1459829807	6620
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.2.0.1	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.0178549289703	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	0	search with cache (only 1: intuition order).	0.0081250667572	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	0	search with cache (only 1: intuition order).	0.00907206535339	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	0	search with cache (only 1: intuition order).	0.00835394859314	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	0	search with cache (only 1: intuition order).	0.00860404968262	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	0	search with cache (only 1: intuition order).	0.00853300094604	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	3	search with cache (only 1: intuition order).	0.0261070728302	41
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	3.0	search with cache (only 1: intro n; only 1: intuition order).	0.0251309871674	30
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0	search with cache (only 1: intuition order).	0.00753402709961	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.13.7.3	search with cache (only 1: intros n H; only 1: intro m; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	1.10757803917	4382
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.5.7.4	search with cache (only 1: intros n H; only 1: intro m; only 1: apply lt_le_incl; only 1: now rewrite lt_succ_r).	22.2960658073	8774
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	1.16.4	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: now apply lt_le_incl).	1.8922829628	3422
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	12.3.0.1.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite lt_eq_cases; only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	28.5224289894	15521
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.14.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.163217067719	192
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.14.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.153877019882	276
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.1.0.0.2.12.2.2	search with cache (only 1: rewrite two_succ; only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: transitivity 1; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r).	2.2286939621	4045
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.2.1	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0722959041595	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.5.1	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0673110485077	36
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	5.3.3	search with cache (only 1: intros; only 1: generalize (le_gt_cases n m); only 1: intuition order).	1.38560700417	418
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.0.1.0.25	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	3.9330701828	5081
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.0.2.15	search with cache (only 1: split; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order; only 1: intuition order).	0.457284927368	851
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	3	search with cache (only 1: intuition order).	0.0423460006714	38
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.0092830657959	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.3.3.1.0	search with cache (only 1: intro n; only 1: intro m; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	12.4259059429	539
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.0.1.1	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0318198204041	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.00913405418396	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.00936508178711	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	0.0.6.1.17	search with cache (only 1: compute; only 1: intros n m; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order).	9.74084591866	5064
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.1.2.3	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.223691940308	88
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.0.1.14.0.0	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite lt_succ_r; only 1: split; only 1: order; only 1: order).	4.80299901962	5052
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	36.11	search with cache (only 1: intros RS' n; only 1: intuition order).	0.944562911987	3296
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40	5.0	search with cache (only 1: intro n; only 1: apply right_induction).	0.0129070281982	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40	1.0.1.18.1	search with cache (only 1: simpl_relation; only 1: induction n as [| n IHn]; only 1: apply H; only 1: apply H0; only 1: Tactics.program_simpl).	6.27051186562	1486
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	35	search with cache (only 1: now repeat split).	0.228603124619	621
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	7.1	search with cache (only 1: intro n; only 1: easy).	0.0104560852051	10
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	12.3.11.3	search with cache (only 1: intro n; only 1: induction n; only 1: apply PeanoNat.Nat.lt_succ_diag_r; only 1: now apply PeanoNat.Nat.lt_lt_succ_r).	12.3708879948	17006
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.1.0.5.6.3	search with cache (only 1: intro n; only 1: symmetry; only 1: induction n; only 1: apply add_0_l; only 1: PeanoNat.Nat.nzsimpl; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	5.26385593414	3911
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	10.1	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0597310066223	73
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40	0.12.1.3.11	search with cache (only 1: intro n; only 1: rewrite two_succ; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply lt_le_incl, lt_0_1).	2.59052991867	1924
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.20.4.0	search with cache (only 1: intro n; only 1: rewrite <- (add_0_l 0); only 1: exists 0; only 1: now nzsimpl).	8.13175702095	5567
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.2.0.5.0	search with cache (only 1: intros n m p Hp; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.741490840912	581
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.1.6.23	search with cache (only 1: intros; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl').	0.634831905365	1220
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	4.8.1	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.110852956772	185
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	1.11.5.5.0.0.31	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: apply gcd_divide_r; only 1: apply gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	37.4359240532	51038
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.0.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0309889316559	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	4.0.0.2.0.26.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: now nzsimpl'; only 1: exists n; only 1: now nzsimpl'; only 1: trivial).	26.089577198	29791
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.2.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl'; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0348629951477	12
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0306620597839	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	5.4.0.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial using divide_refl).	8.2617650032	5075
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.12282204628	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros n; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.81916189194	779
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.10.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.474698066711	260
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.1.0.2	search with cache (only 1: intros n m Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: now destruct (even n), (even m)).	0.155352115631	47
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.1.1.0.2.2	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: apply even_spec in Hm; only 1: rewrite even_add; only 1: rewrite even_mul; only 1: now destruct (even n), (even m)).	0.428554773331	256
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40	2.4.2.1.1	search with cache (only 1: intros n m; only 1: apply even_add_even; only 1: rewrite two_succ; only 1: exists m; only 1: now nzsimpl').	0.635842084885	343
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40	2.4.2.1.1	search with cache (only 1: intros n m; only 1: apply odd_add_even; only 1: rewrite two_succ; only 1: exists m; only 1: now nzsimpl').	0.754059076309	454
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.128536939621	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.2.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0775752067566	8
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	0.0.0.0.3.12.5.8	search with cache (only 1: intro n; only 1: intro p; only 1: nzinduct p; only 1: rewrite <- (add_0_l 0); only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	4.3746008873	3815
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0202691555023	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0212359428406	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	8.1.0.0.1.1	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now apply bi_induction).	2.12508606911	1177
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.1	search with cache (only 1: intros; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.263625860214	78
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	3.0.0.3.0.0	search with cache (only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.59157204628	196
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0198559761047	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.4.1	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.055212020874	35
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.7.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	0.399160146713	213
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0.0.0.1	search with cache (only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0139880180359	6
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	0.1.8	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0325260162354	48
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	11	search with cache (only 1: intuition).	0.064670085907	118
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40	6.2.5.3.12.0	search with cache (only 1: intros; only 1: apply imp_iff_compat_r; only 1: split; only 1: apply succ_inj; only 1: intros; only 1: now f_equiv).	2.82670283318	6434
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40	0.0.1.0.0.8.0.0.0.1.0	search with cache (only 1: intros n m p H1 H2; only 1: le_elim H2; only 1: le_elim H1; only 1: apply lt_le_incl; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_lt_mono_pos_l; only 1: apply eq_le_incl; only 1: rewrite <- H1; only 1: now nzsimpl; only 1: apply eq_le_incl; only 1: now rewrite H2).	15.3809769154	8324
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.4.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	0.0668711662292	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	11.2.1.0.2.0.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: order).	5.2109439373	3288
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	0.3.4	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0534851551056	24
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	2.3.4	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.224492073059	107
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40	8.13.1.2.14.4.4	search with cache (only 1: intros; only 1: split; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto; only 1: intro H; only 1: now rewrite H, mul_0_l).	34.4778871536	41981
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.1.9.2	search with cache (only 1: intros n m; only 1: intro H1; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.742619991302	591
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	1.1.2	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	0.0974209308624	37
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	1.4	search with cache (only 1: intros n m p H; only 1: now apply mul_lt_mono_nonneg).	0.0286219120026	14
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	2.2.1.0.1.6	search with cache (only 1: intros n m H1 H2; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_nonneg; only 1: rewrite H2; only 1: now apply eq_le_incl).	1.00111103058	986
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Numbers.HexadecimalR.of_IQmake_to_hexadecimal	40
Coq.Numbers.HexadecimalR.of_to	40
Coq.Numbers.HexadecimalR.to_of	40
Coq.Numbers.HexadecimalR.to_hexadecimal_inj	40
Coq.Numbers.HexadecimalR.to_hexadecimal_surj	40	4.1	search with cache (only 1: exists (QArith_base.of_hexadecimal d); only 1: apply HexadecimalQ.to_of).	0.409976005554	75
Coq.Numbers.HexadecimalR.of_hexadecimal_dnorm	40
Coq.Numbers.HexadecimalR.of_inj	40	0.3.5	search with cache (only 1: intro H; only 1: apply (f_equal (fun x => match x with | Some x => x | _ => d end) (x:=Some (dnorm d)) (y:=Some (dnorm d'))); only 1: now rewrite <- !HexadecimalQ.to_of, H).	0.116451025009	32
Coq.Numbers.HexadecimalR.of_iff	40
Coq.Numbers.HexadecimalString.uint_of_char_spec	40
Coq.Numbers.HexadecimalString.NilEmpty.usu	40
Coq.Numbers.HexadecimalString.NilEmpty.sus	40
Coq.Numbers.HexadecimalString.NilEmpty.isi	40
Coq.Numbers.HexadecimalString.NilEmpty.sis	40
Coq.Numbers.HexadecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.HexadecimalString.NilZero.sus	40
Coq.Numbers.HexadecimalString.NilZero.usu	40
Coq.Numbers.HexadecimalString.NilZero.usu_nil	40	0.5	search with cache (only 1: simpl; only 1: auto).	0.010764837265	7
Coq.Numbers.HexadecimalString.NilZero.usu_gen	40
Coq.Numbers.HexadecimalString.NilZero.isi	40
Coq.Numbers.HexadecimalString.NilZero.isi_posnil	40	6.2	search with cache (only 1: unfold int_of_string; only 1: auto).	0.0167508125305	19
Coq.Numbers.HexadecimalString.NilZero.isi_negnil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.0088951587677	2
Coq.Numbers.HexadecimalString.NilZero.sis	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal	40
Coq.Numbers.DecimalQ.IZ_of_Z_IZ_to_Z	40
Coq.Numbers.DecimalQ.of_IQmake_to_decimal'	40
Coq.Numbers.DecimalQ.of_to	40
Coq.Numbers.DecimalQ.dnorm_spec_i	40
Coq.Numbers.DecimalQ.dnorm_spec_f	40
Coq.Numbers.DecimalQ.dnorm_spec_e	40
Coq.Numbers.DecimalQ.dnorm_involutive	40
Coq.Numbers.DecimalQ.IZ_to_Z_IZ_of_Z	40
Coq.Numbers.DecimalQ.dnorm_i_exact	40
Coq.Numbers.DecimalQ.dnorm_i_exact'	40
Coq.Numbers.DecimalQ.to_of	40
Coq.Numbers.DecimalQ.to_decimal_inj	40
Coq.Numbers.DecimalQ.to_decimal_surj	40
Coq.Numbers.DecimalQ.of_decimal_dnorm	40
Coq.Numbers.DecimalQ.of_inj	40
Coq.Numbers.DecimalQ.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_simpl	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_succ_double	40	15.1.30	search with cache (only 1: revert d; only 1: intro d'; only 1: apply of_lu_double_gen).	10.4576809406	1673
Coq.Numbers.HexadecimalPos.Unsigned.of_to	40
Coq.Numbers.HexadecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.double_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_S	40	1	search with cache (only 1: firstorder).	0.0118379592896	2
Coq.Numbers.HexadecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: auto).	0.0093560218811	1
Coq.Numbers.HexadecimalPos.Unsigned.to_lhex_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.HexadecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.HexadecimalPos.Unsigned.to_of	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0735940933228	3
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.HexadecimalPos.Unsigned.of_inj	40
Coq.Numbers.HexadecimalPos.Unsigned.of_iff	40
Coq.Numbers.HexadecimalPos.Unsigned.nztail_to_hex_uint	40
Coq.Numbers.HexadecimalPos.Unsigned.double_unorm	40
Coq.Numbers.HexadecimalPos.Unsigned.double_nzhead	40
Coq.Numbers.HexadecimalPos.Unsigned.of_hex_uint_double	40
Coq.Numbers.HexadecimalPos.Signed.of_to	40
Coq.Numbers.HexadecimalPos.Signed.to_of	40
Coq.Numbers.HexadecimalPos.Signed.to_int_inj	40
Coq.Numbers.HexadecimalPos.Signed.to_int_pos_surj	40
Coq.Numbers.HexadecimalPos.Signed.of_int_norm	40
Coq.Numbers.HexadecimalPos.Signed.of_inj_pos	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	20	search with cache (only 1: now symmetry).	0.0338590145111	186
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40	6.37.8.0	search with cache (only 1: intros; only 1: intro n; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto).	4.25961899757	28786
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	18	search with cache (only 1: apply (@CRelationClasses.symmetry _ _ _ _)).	0.16291809082	288
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	1	search with cache (only 1: auto with *).	0.0129408836365	2
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	1	search with cache (only 1: eauto using eq_trans, eq_sym).	0.0122368335724	2
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40	0.0.3.1.0.3.2.15.0	search with cache (only 1: intros; only 1: destruct (P.lt_total x y) as [H'| [H'| H']]; only 1: auto; only 1: destruct H; only 1: rewrite ?P.le_lteq; only 1: intuition; only 1: destruct H; only 1: rewrite ?P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	16.3752779961	26915
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	2.2.0.3.2.0	search with cache (only 1: intros x y H; only 1: destruct (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: auto; only 1: rewrite P.le_lteq; only 1: intuition auto; subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	1.66742801666	1423
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.2.2.1	search with cache (only 1: intros x y; only 1: rewrite P.le_lteq; only 1: generalize (P.lt_total x y); only 1: intuition).	0.0354189872742	26
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	4	search with cache (only 1: eauto with *).	0.250013113022	52
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	1.14	search with cache (only 1: intros x y H; only 1: Nat.Private_Tac.order).	0.2005610466	336
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	3.2	search with cache (only 1: intros n m H; only 1: intuition Nat.order).	0.11372089386	32
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	0.0.5.4	search with cache (only 1: intros x y H; only 1: transitivity y; only 1: auto; only 1: auto).	0.282117128372	217
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40	1.2	search with cache (only 1: intros n m; only 1: intuition Z.order).	0.100738048553	39
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	39.1	search with cache (only 1: intro n; only 1: now subst).	1.05965995789	3700
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40	1.2.0.6.0.0	search with cache (only 1: intros (x1, x2); only 1: red; only 1: intros; only 1: simpl; only 1: destruct H; only 1: auto with ordered_type).	0.555334091187	648
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40	1.4.0.12.1.1.1	search with cache (only 1: intros (x1, x2); only 1: unfold eq; only 1: intuition; only 1: MO1.order; only 1: simpl; only 1: simpl in *; only 1: MO2.order).	27.7993319035	33256
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.0.0.1.0.2.2	search with cache (only 1: induction x; only 1: simpl; only 1: eauto; only 1: intuition; only 1: simpl; only 1: intro; only 1: auto).	0.150043010712	71
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40	20	search with cache (only 1: decide equality).	0.816185951233	951
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_lt_nat	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_eq	40
Coq.Structures.OrderedTypeEx.Ascii_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40	31.0.144	search with cache (only 1: inversion_clear 1; only 1: auto; only 1: intuition Nat.order).	33.1298089027	91775
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_antisym	40
Coq.Structures.OrderedTypeEx.String_as_OT.cmp_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_lt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_gt	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare_helper_eq	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.4.1.0	search with cache (only 1: intros; only 1: apply or_iff_compat_r; only 1: compute; only 1: intuition).	0.106280088425	9
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40	0.0.0.0.0.2.0.2.0.2.9	search with cache (only 1: intros x y; only 1: split; only 1: unfold eq, lt, le in *; only 1: case leb; only 1: intuition; only 1: case leb; only 1: intuition; only 1: intuition; only 1: intuition; only 1: unfold eq, lt, le in *; only 1: intuition).	26.6722450256	13339
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	0.0.0.2.43	search with cache (only 1: intros h; only 1: constructor; only 1: destruct h; only 1: auto; only 1: auto).	0.656478881836	2693
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	1.8.0.0.0.4	search with cache (only 1: intro n; only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: intros (cc, pp); only 1: auto).	2.10090899467	2258
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	10.0.7.3	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: apply eqb_eq; only 1: reflexivity).	6.79691410065	10663
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40	54.27.11.49.0.43	search with cache (only 1: constructor; only 1: intro l; only 1: intuition; only 1: intro n; only 1: intuition; only 1: eauto with *).	30.9668638706	193754
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.12	search with cache (only 1: split; only 1: auto; only 1: auto).	0.06218791008	109
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00840592384338	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	5	search with cache (only 1: order).	0.0111660957336	6
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00886797904968	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00791597366333	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.0067150592804	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0	search with cache (only 1: order).	0.00844788551331	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00731587409973	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00755405426025	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.00754714012146	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00661087036133	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00718784332275	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00660800933838	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.00669693946838	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.0062689781189	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.1.0.1.19.5.2	search with cache (only 1: intros; only 1: destruct (compare x y); only 1: eauto; only 1: exfalso; only 1: order; only 1: exfalso; only 1: order).	4.22966313362	11970
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	2.2.0.0.1.0.0.1.0.2.1	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	2.36090803146	3075
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	6.0.1.1.1.1.2	search with cache (only 1: simple induction l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	1.25081396103	1047
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	4.4.1.9.0	search with cache (only 1: intros; only 1: destruct H0; only 1: auto with ordered_type; only 1: right; only 1: order).	11.2133748531	7101
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	3.4.3.16.1	search with cache (only 1: intros; only 1: destruct H0; only 1: auto; only 1: right; only 1: order).	12.8127598763	15420
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.2.4.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.147454977036	149
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	12.5.7.15	search with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: intuition).	2.39685106277	4748
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	2.22.0	search with cache (only 1: intros; only 1: induction H; only 1: auto).	0.583830118179	1505
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	0	search with cache (only 1: intuition).	0.0080509185791	1
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.00582981109619	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0106618404388	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0108950138092	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0	search with cache (only 1: auto with ordered_type).	0.00565719604492	1
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0171720981598	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	7.6.1	search with cache (only 1: unfold eqk, eqke; only 1: intros; only 1: order).	0.48882317543	572
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	2	search with cache (only 1: eauto with ordered_type).	0.0115039348602	3
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0129611492157	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	4.0.4.20.0	search with cache (only 1: unfold eqk, ltk; only 1: intros a Ha; only 1: unfold eqke; only 1: intuition; only 1: order).	11.4579210281	12956
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	2.0.0.5.2	search with cache (only 1: unfold eqk, eqke; only 1: split; only 1: intuition; only 1: intuition; only 1: eauto with ordered_type).	0.12030005455	118
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0228540897369	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.7.15.2.5	search with cache (only 1: split; only 1: unfold eqke, ltk; only 1: intros a b; only 1: order; only 1: eauto with ordered_type).	1.64513301849	3675
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	1.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.0294671058655	18
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0158729553223	4
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	1.0.0	search with cache (only 1: unfold eqk, ltk; only 1: intuition; only 1: eauto with ordered_type).	0.0159058570862	4
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	0.4.6.0.0.14	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with ordered_type).	4.88368391991	4869
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	1.4.2.0.1.23	search with cache (only 1: induction l; only 1: unfold eqk, ltk; only 1: intuition; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	8.48119616508	2985
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40	0.0.0.2.7.6	search with cache (only 1: intros; only 1: inversion H; only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	1.60511398315	959
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.3.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with ordered_type).	0.0212850570679	6
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.2.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.0638349056244	35
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	1.1.1.0	search with cache (only 1: case compare_spec; only 1: easy; only 1: easy; only 1: easy).	0.0233111381531	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	1.0	search with cache (only 1: autorewrite with order; only 1: easy).	0.00945496559143	3
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40	0.3.1.13.24	search with cache (only 1: split; only 1: intro l; only 1: iorder; only 1: repeat red; only 1: iorder).	0.311653137207	1283
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.1.3	search with cache (only 1: repeat red; only 1: compute; only 1: iorder).	0.0147778987885	7
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	0.2	search with cache (only 1: repeat red; only 1: iorder).	0.00824689865112	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	9	search with cache (only 1: iorder).	0.0256140232086	26
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.00788402557373	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	1.1.3.0.0.0	search with cache (only 1: intros x y; only 1: rewrite le_lteq; only 1: destruct (compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.388334989548	207
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	0	search with cache (only 1: iorder).	0.0100829601288	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	4.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0130250453949	6
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	1.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0143918991089	4
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	3.2	search with cache (only 1: intro H; only 1: order).	0.0105450153351	7
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0171232223511	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0180130004883	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	0	search with cache (only 1: order).	0.0115020275116	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.0105860233307	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	2.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	1.52401304245	4
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.0072500705719	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	0	search with cache (only 1: order).	0.00541806221008	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00539517402649	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	0	search with cache (only 1: order).	0.00641798973083	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	0	search with cache (only 1: order).	0.00707697868347	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	2	search with cache (only 1: order).	0.00805687904358	3
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	3	search with cache (only 1: order).	0.00805687904358	4
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	1	search with cache (only 1: order).	0.00588893890381	2
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	2	search with cache (only 1: order).	0.00656700134277	3
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.00711989402771	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.00940799713135	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	1	search with cache (only 1: order).	0.00868701934814	2
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40	5.5.5.4	search with cache (only 1: intuition; only 1: order; only 1: order; only 1: order).	3.90203213692	4237
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40	0.0.11.1.6.2.34.1.0.2.16.13.2	search with cache (only 1: compute; only 1: split; only 1: hnf; only 1: firstorder; only 1: compute; only 1: intro Hxz; only 1: elim (CRelationClasses.StrictOrder_Irreflexive x); only 1: auto; only 1: intro l; only 1: firstorder; only 1: transitivity y; only 1: firstorder; only 1: firstorder).	37.5862591267	234352
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40	0.23	search with cache (only 1: unfold lt; only 1: auto with *).	11.3446238041	17347
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	2.1	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00901484489441	5
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	3.0.0.0.0.0.0	search with cache (only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: apply compare_eq_iff; only 1: now apply compare_eq_iff).	0.0203988552094	16
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0097279548645	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	5	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0284039974213	18
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	1.1.2.1.3	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	1.31708502769	584
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	2.5.3	search with cache (only 1: case leb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.608248949051	287
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	2.3.3	search with cache (only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.142778158188	99
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.8	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.43970990181	170
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.2.0.1.1.8	search with cache (only 1: case leb_spec0; only 1: case ltb_spec0; only 1: now rewrite <- compare_le_iff, compare_ngt_iff; only 1: constructor; only 1: case ltb_spec0; only 1: constructor; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	0.864114999771	703
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	1.30.7	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: constructor).	17.4042909145	28312
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.0.1.2.1.0.13.22	search with cache (only 1: case leb_spec0; only 1: case_eq (x ?= y); only 1: now destruct compare; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	29.2130169868	39728
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	1.0.2	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto).	0.0416979789734	38
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40	5.0.1.1.2.0.2	search with cache (only 1: simple induction l; only 1: intros; only 1: inversion H; only 1: simpl; only 1: intuition; only 1: subst; only 1: intuition).	2.31699800491	2022
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.2.5.5	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: auto).	0.159473896027	208
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	11.4.7.7	search with cache (only 1: induction l; only 1: auto; only 1: constructor; only 1: intuition).	1.65528988838	2951
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	17.7	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: now f_equiv).	1.18336510658	935
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	14	search with cache (only 1: solve_proper).	1.45166802406	358
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.4	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	0.0466179847717	18
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	18.10	search with cache (only 1: intuition; only 1: now rewrite H).	8.74067187309	7476
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	3.2.0	search with cache (only 1: compute; only 1: intros; only 1: intuition).	0.0884079933167	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	7	search with cache (only 1: auto).	0.0086989402771	8
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	6	search with cache (only 1: intuition).	0.00801801681519	7
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1.1.4	search with cache (only 1: destruct 1; only 1: compute in *; only 1: auto).	0.0135090351105	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.00774693489075	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	0	search with cache (only 1: reflexivity).	0.00595211982727	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.00550103187561	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	11	search with cache (only 1: trivial).	0.0191838741302	34
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	0.19	search with cache (only 1: rewrite 2!InA_alt; only 1: firstorder).	0.696947813034	955
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	0.0.0	search with cache (only 1: rewrite In_alt; only 1: firstorder; only 1: now compute).	0.0163240432739	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	3	search with cache (only 1: now intros <-).	0.0925879478455	37
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0344932079315	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40	2.26	search with cache (only 1: rewrite InA_cons; only 1: intuition).	1.34628891945	1097
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	0.4.25.0	search with cache (only 1: firstorder  auto with crelations; only 1: invlist InA; only 1: firstorder; only 1: auto).	2.66219806671	2385
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	1.0.13.2.3	search with cache (only 1: intro n; only 1: destruct n; only 1: intros n d; only 1: destruct d; only 1: auto).	0.935003042221	1201
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	4.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0784850120544	6
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0176510810852	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0	search with cache (only 1: auto).	0.0110199451447	1
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0265829563141	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	3.9.16	search with cache (only 1: intro l'; only 1: intros x; only 1: eauto with *).	4.1827480793	7215
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	0.2.8.2.0.7.1	search with cache (only 1: unfold eqke; only 1: compute; only 1: intuition; only 1: subst; only 1: eauto; only 1: subst; only 1: intuition).	11.1185040474	8058
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	1.0.0.8	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: eauto).	0.110131025314	95
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.03937292099	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.7.0.42	search with cache (only 1: intros x y l; only 1: intuition; only 1: rewrite <- H; only 1: intuition).	21.7686920166	9139
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	0.2.17.0	search with cache (only 1: firstorder; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intuition; only 1: auto).	1.28179192543	1450
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.4.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto using eqke_equiv).	0.597073078156	31
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	1.0.0.6	search with cache (only 1: intro l; only 1: intros x y L E; only 1: rewrite E in L; only 1: auto).	0.0264661312103	28
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	2.0.0.1.0.2.0.0	search with cache (only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.702341079712	1074
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	4.6	search with cache (only 1: apply max_r; only 1: order).	0.026349067688	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	9.7.2.16	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	8.09181904793	8030
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.00902390480042	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	19	search with cache (only 1: solve_max).	0.670307159424	662
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0155708789825	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	18.10	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition order).	33.7850849628	19275
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	2	search with cache (only 1: solve_max).	0.0113699436188	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	2	search with cache (only 1: solve_max).	0.0115029811859	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	2	search with cache (only 1: solve_max).	0.0116930007935	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	2.1.3.0	search with cache (only 1: split; only 1: solve_max; only 1: intuition; only 1: solve_max).	0.0348918437958	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0286858081818	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.105266094208	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0179009437561	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	1.2.1	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0801870822906	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	5.4	search with cache (only 1: apply min_l; only 1: order || (right; order) || (left; order)).	0.0161368846893	26
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	9.8.3.6	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	4.08713793755	3685
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.0096800327301	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	22	search with cache (only 1: solve_min).	1.11010909081	906
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0465838909149	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	1	search with cache (only 1: solve_min).	0.0112898349762	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	1	search with cache (only 1: solve_min).	0.0108070373535	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	1	search with cache (only 1: solve_min).	0.0118730068207	2
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	1.1.3.0	search with cache (only 1: split; only 1: solve_min; only 1: intuition; only 1: solve_min).	0.034795999527	17
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.2.1	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0263760089874	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.101636886597	38
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.1.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0194289684296	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	0.2.1	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.0524370670319	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	1.4	search with cache (only 1: apply max_l; only 1: solve_min).	0.0152089595795	7
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	10.50	search with cache (only 1: apply max_mono; only 1: eauto with *).	9.37194800377	17686
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	3.47	search with cache (only 1: apply min_mono; only 1: congruence).	3.82843708992	7238
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.3.11.11.13	search with cache (only 1: intros n P IH0 IHS; only 1: apply max_case_strong; only 1: intros; only 1: rewrite <- H; only 1: auto; only 1: auto).	7.22391796112	12381
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	1.1.4.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.01597905159	10
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	1.3.0.0.0.8	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.430620908737	582
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	1.1.3.11.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	1.47657012939	1705
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	1.1.5.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.047966003418	43
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	1.3.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.0493268966675	61
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	2.2.0.0.6	search with cache (only 1: intros Heq; only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	0.498697042465	344
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	4.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: trivial).	0.0355010032654	19
Coq.ZArith.Znat.N_nat_Z	40
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0291271209717	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00926804542542	1
Coq.ZArith.Znat.positive_N_nat	40	3.0	search with cache (only 1: simpl; only 1: f_equal).	0.0113010406494	5
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0239241123199	5
Coq.ZArith.Znat.Z_N_nat	40	1.1.6.9.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: trivial).	0.308995962143	538
Coq.ZArith.Znat.Z_nat_N	40	2.8.1.0.38.34.18	search with cache (only 1: bitwise as m; only 1: destruct n as [| n| n]; only 1: trivial; only 1: f_equal; only 1: simpl Z.to_N; only 1: Nat2N.nat2N; only 1: f_equal).	3.03209400177	13260
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.0119459629059	1
Coq.ZArith.Znat.Zabs_nat_N	40
Coq.ZArith.Znat.N2Z.id	40	0.1.4.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: auto).	0.0155138969421	9
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: split; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: destruct n, m; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	9.02703499794	6278
Coq.ZArith.Znat.N2Z.is_nonneg	40	0	search with cache (only 1: now destruct n).	0.0172789096832	1
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.00869512557983	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00839996337891	1
Coq.ZArith.Znat.N2Z.inj_compare	40	1.0.0.0.1.0.0.2.2	search with cache (only 1: destruct n, m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: now rewrite <- ?Pos.compare_antisym).	0.693517923355	408
Coq.ZArith.Znat.N2Z.inj_le	40	0.1	search with cache (only 1: unfold N.le, N.ge; only 1: now destruct n, m).	0.014720916748	3
Coq.ZArith.Znat.N2Z.inj_lt	40	0.5	search with cache (only 1: unfold N.lt, N.gt; only 1: now destruct n, m).	0.0162389278412	15
Coq.ZArith.Znat.N2Z.inj_ge	40
Coq.ZArith.Znat.N2Z.inj_gt	40
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	9	search with cache (only 1: now destruct n, m).	0.0403289794922	27
Coq.ZArith.Znat.N2Z.inj_mul	40	3.1.0	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: now destruct m).	0.0424690246582	17
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.1.0.4	search with cache (only 1: destruct n as [| p]; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0211989879608	9
Coq.ZArith.Znat.N2Z.inj_pred_max	40	38.0.0.9	search with cache (only 1: destruct n as [| p]; only 1: simpl; only 1: trivial; only 1: now destruct p).	7.65904188156	15428
Coq.ZArith.Znat.N2Z.inj_pred	40	0.1.7.0	search with cache (only 1: destruct n; only 1: N.order; only 1: simpl; only 1: now destruct p).	0.110574960709	110
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	27.16.3.0.20	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct p).	5.88471102715	15463
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.0142891407013	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40	0.0.0.0.1.0.4.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial).	0.229056835175	207
Coq.ZArith.Znat.Z2N.id	40	3.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct 1).	0.0202920436859	7
Coq.ZArith.Znat.Z2N.inj	40
Coq.ZArith.Znat.Z2N.inj_iff	40	2.0.0.1.0.5	search with cache (only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.4907450676	531
Coq.ZArith.Znat.Z2N.inj_0	40	4.0	search with cache (only 1: simpl; only 1: auto).	0.0127611160278	6
Coq.ZArith.Znat.Z2N.inj_pos	40	0.1	search with cache (only 1: simpl Z.to_N; only 1: now subst).	0.00898504257202	3
Coq.ZArith.Znat.Z2N.inj_neg	40	2	search with cache (only 1: reflexivity).	0.00791501998901	3
Coq.ZArith.Znat.Z2N.inj_add	40
Coq.ZArith.Znat.Z2N.inj_mul	40	6.3.2	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.435549020767	146
Coq.ZArith.Znat.Z2N.inj_succ	40	0.2.3.0.142	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl Z.to_N; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || now destruct 2).	17.2182118893	39867
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	1.4.0.86	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p; only 1: easy || now destruct Hm).	3.52344989777	7550
Coq.ZArith.Znat.Z2N.inj_compare	40	1.12.9	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	2.56605601311	2276
Coq.ZArith.Znat.Z2N.inj_le	40
Coq.ZArith.Znat.Z2N.inj_lt	40
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	1.26.1.5	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct p; only 1: easy || now destruct Hm).	1.62891197205	2991
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0197999477386	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40	0.0.1.0.0.0.0.0.0.5.8	search with cache (only 1: destruct a as [| a], n; only 1: trivial; only 1: simpl; only 1: now split; only 1: simpl; only 1: now split; only 1: simpl; only 1: now destruct a; only 1: apply Z.testbit_Zpos; only 1: simpl; only 1: now destruct a).	2.30626606941	1735
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	7	search with cache (only 1: now destruct n).	0.0118410587311	8
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	3.0	search with cache (only 1: intros; only 1: now destruct n).	0.0198369026184	5
Coq.ZArith.Znat.Zabs2N.id_abs	40	2.2.1.11	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: trivial; only 1: trivial).	0.640782117844	424
Coq.ZArith.Znat.Zabs2N.id	40	0.0.0.8	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: simpl; only 1: auto).	0.045539855957	38
Coq.ZArith.Znat.Zabs2N.inj_0	40	2	search with cache (only 1: easy).	0.0101780891418	3
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0109579563141	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0107741355896	2
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0168700218201	4
Coq.ZArith.Znat.Zabs2N.inj_succ	40	2.0.0.0.2.1.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: now destruct 1 || intros _).	0.813352108002	375
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.0.0.0.0.0.0.0.0.3	search with cache (only 1: destruct n, m; only 1: easy || now destruct Hm; only 1: trivial; only 1: trivial; only 1: trivial; only 1: reflexivity; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	3.28817391396	1453
Coq.ZArith.Znat.Zabs2N.inj_mul	40	1.0.1.0.3.0.1.0.0.2	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: now case Pos.compare; only 1: reflexivity; only 1: trivial; only 1: reflexivity; only 1: trivial).	5.22367191315	3426
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	0.0.4.4.1.2.0.0	search with cache (only 1: unfold Z.pred; only 1: destruct n; only 1: easy; only 1: simpl; only 1: now destruct p; only 1: unfold Z.lt in *; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	1.10859704018	843
Coq.ZArith.Znat.Zabs2N.inj_compare	40	9	search with cache (only 1: now destruct n, m).	0.264029979706	48
Coq.ZArith.Znat.Zabs2N.inj_le	40
Coq.ZArith.Znat.Zabs2N.inj_lt	40	6.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.0449740886688	23
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto; only 1: trivial; only 1: simpl; only 1: now rewrite ?Pos.add_1_l, ?Pos.add_succ_l).	8.65000605583	4759
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.0136420726776	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	5	search with cache (only 1: auto).	0.00924706459045	6
Coq.ZArith.Znat.Nat2Z.inj_succ	40
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	64	search with cache (only 1: now destruct n).	0.781051874161	2262
Coq.ZArith.Znat.Nat2Z.id	40	0.1.6.1.8	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.39764714241	308
Coq.ZArith.Znat.Nat2Z.inj	40
Coq.ZArith.Znat.Nat2Z.inj_iff	40	0.1.0.1.16	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H).	2.03996896744	986
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.0.0.14.0.0.0.5.2.15	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: intros; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	12.9276340008	15672
Coq.ZArith.Znat.Z2Nat.inj	40	7.5.2	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.598708152771	206
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.1.0.2.1.3.1.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	1.05236101151	334
Coq.ZArith.Znat.Z2Nat.inj_0	40	6	search with cache (only 1: auto).	0.00953412055969	7
Coq.ZArith.Znat.Z2Nat.inj_pos	40	5	search with cache (only 1: trivial).	0.00995898246765	6
Coq.ZArith.Znat.Z2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00945210456848	1
Coq.ZArith.Znat.Z2Nat.inj_add	40
Coq.ZArith.Znat.Z2Nat.inj_mul	40
Coq.ZArith.Znat.Z2Nat.inj_succ	40	1.0.6.2.1.4.1.1.4.0.2.5	search with cache (only 1: destruct n as [| n| n]; only 1: reflexivity; only 1: now destruct 1 || intros _; only 1: simpl; only 1: destruct n; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ; only 1: reflexivity; only 1: reflexivity; only 1: now destruct 1).	20.0853979588	24714
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00940012931824	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.0120530128479	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.3.23	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	3.04985117912	3217
Coq.ZArith.Znat.Zabs2Nat.id	40	0.1.0.26	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.393380880356	463
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.00943803787231	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.00781893730164	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00773215293884	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40	0.2.19.2.2.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite ?Pos.add_1_r, ?Pos.pred_N_succ; only 1: apply Pos2Nat.inj_succ; only 1: now destruct 1).	16.4415011406	15242
Coq.ZArith.Znat.Zabs2Nat.inj_add	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.5.0	search with cache (only 1: intros; only 1: unfold Z.le, N.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0214288234711	8
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	3.1.0	search with cache (only 1: unfold Z.lt; only 1: intros; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0253639221191	7
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	1.1.1.4	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.152836084366	33
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul; only 1: simpl; only 1: trivial using Pos2Nat.inj_mul).	10.2282550335	7453
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: exists (Z.to_nat x); only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now apply Z2Nat.id).	0.0431640148163	11
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	3.1.1.1.6.0.7	search with cache (only 1: intros P Hrec x; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	17.9273881912	8214
Coq.ZArith.Wf_Z.Z_lt_rec	40
Coq.ZArith.Wf_Z.Z_lt_induction	40	2.3.10.3	search with cache (only 1: intros; only 1: apply Zlt_0_rec; only 1: auto; only 1: now apply Zlt_0_rec).	1.48236608505	1430
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40	0.0.0.1.238	search with cache (only 1: induction p as [| p IHp] using Pos.peano_ind; only 1: apply Pos2Nat.inj_iter; only 1: rewrite <- Pos.add_1_r; only 1: unfold Z.pow_pos; only 1: now rewrite Pos.add_comm, Pos.iter_add).	8.27227401733	36878
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40	8.7.0.9.6	search with cache (only 1: intros z n; only 1: intros m; only 1: intros; only 1: Z.swap_greater; only 1: now case Z.compare_spec).	3.72961497307	7960
Coq.ZArith.Zcompare.Zcompare_eq_case	40	4.4.3.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order).	1.70691418648	1515
Coq.ZArith.Zcompare.Zle_compare	40	2.2.2.10.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: Z.Private_Tac.order).	0.963083982468	1165
Coq.ZArith.Zcompare.Zlt_compare	40	7.0.7.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: trivial; only 1: Z.Private_Tac.order).	1.63456201553	1218
Coq.ZArith.Zcompare.Zge_compare	40	6.8.2.0.1	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: auto; only 1: auto; only 1: auto).	2.1914229393	3410
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0156240463257	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40
Coq.ZArith.Zquot.Zrem_0_l	40	2	search with cache (only 1: now destruct a).	0.0250749588013	3
Coq.ZArith.Zquot.Zquot_0_l	40	2	search with cache (only 1: now destruct a).	0.108953952789	26
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold Z.rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	31.5215148926	11683
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.10	search with cache (only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	2.14177107811	545
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.3.1.1	search with cache (only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	1.51021504402	20
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.1.2.1	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.0855629444122	8
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.3.4	search with cache (only 1: generalize (Zrem_lt_pos a b); only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.551445007324	61
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.3.2	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.179799079895	30
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40
Coq.ZArith.Zquot.Zodd_rem	40
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_zero	40	3.8.4.0	search with cache (only 1: intros a b Hb; only 1: rewrite Z.rem_divide; only 1: now rewrite <- Z.mod_divide; only 1: auto).	5.88282513618	2181
Coq.ZArith.Zdigits.binary_value	40	0.35	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	3.43413114548	5994
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.8.1.1	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.38676905632	413
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40	4.38	search with cache (only 1: fix gcd_greatest 1; only 1: auto).	39.9211299419	67105
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	2.1	search with cache (only 1: simpl; only 1: trivial).	0.0486228466034	5
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	4.1	search with cache (only 1: intros; only 1: trivial).	0.316974163055	74
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	1	search with cache (only 1: auto).	0.00977396965027	2
Coq.ZArith.Zdigits.Z_div2_value	40
Coq.ZArith.Zdigits.Pdiv2	40
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.0.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: auto).	0.0233888626099	4
Coq.ZArith.Zdigits.Zeven_bit_value	40	0.0.0.2.4.2	search with cache (only 1: intros n; only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	1.01607990265	422
Coq.ZArith.Zdigits.Zodd_bit_value	40	4.0.3.0.0	search with cache (only 1: destruct z; only 1: easy; only 1: now destruct p; only 1: unfold bit_value; only 1: now try destruct p).	0.484889030457	148
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40	0.0.10	search with cache (only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.134378194809	129
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40	2.0.0.10	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.172330141068	114
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	3.6.0.24	search with cache (only 1: induction n; only 1: trivial; only 1: trivial; only 1: trivial).	0.557955980301	934
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.00705599784851	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.0.5	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.111671924591	64
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40	0.0.0.0.1.0.0.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: simpl; only 1: trivial using pos_sub_opp).	6.63057994843	7186
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2.8	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.0223009586334	36
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.00620102882385	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00739884376526	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: trivial using pos_sub_opp).	0.00955390930176	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.2.0.0.0.0.3.1	search with cache (only 1: unfold succ; only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial using pos_sub_opp; only 1: rewrite !opp_add_distr; only 1: simpl; only 1: trivial).	0.395909070969	303
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.0100190639496	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00809502601624	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00788187980652	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.2.2.0.1	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.18677687645	115
Coq.ZArith.BinInt.Z.compare_le_iff	40
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.443665981293	166
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40	3.5	search with cache (only 1: rewrite <- (add_0_l 0); only 1: now destruct n).	0.158722877502	14
Coq.ZArith.BinInt.Z.abs_neq	40	1.14.1.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now nzsimpl; only 1: trivial).	1.73713612556	1496
Coq.ZArith.BinInt.Z.sgn_null	40	0.0.0.9	search with cache (only 1: destruct n; only 1: trivial using pos_sub_opp; only 1: congruence; only 1: congruence).	0.307842969894	192
Coq.ZArith.BinInt.Z.sgn_pos	40	8.4.1	search with cache (only 1: zero_pos_neg ltac:(n); only 1: now f_equiv; only 1: now destruct n).	1.5578520298	796
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0116879940033	1
Coq.ZArith.BinInt.Z.pow_0_r	40	3	search with cache (only 1: reflexivity).	0.0338900089264	26
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.3.5.0.10	search with cache (only 1: rewrite <- (mul_0_l m)  at 1; only 1: destruct m as [| m| m]; only 1: now nzsimpl; only 1: now nzsimpl; only 1: now destruct 1 || intros _).	2.016726017	882
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: reflexivity).	0.00689315795898	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	22	search with cache (only 1: now destruct n).	1.76973485947	1603
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	1.0.2.3.10	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: trivial).	0.449348926544	328
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	1.1	search with cache (only 1: simpl; only 1: easy).	0.182835102081	66
Coq.ZArith.BinInt.Z.succ_double_spec	40	0.0.2.0.1.0.5.0	search with cache (only 1: simpl; only 1: destruct n as [| p| p]; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: split; only 1: simpl; only 1: easy).	1.62449502945	823
Coq.ZArith.BinInt.Z.pred_double_spec	40	5	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.160997152328	14
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.0923879146576	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.35	search with cache (only 1: apply Private_BootStrap.opp_inj; only 1: destruct a, b; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: trivial; only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r]); only 1: unfold rem; only 1: simpl; only 1: now destruct N.pos_div_eucl as (q, [| r])).	27.0375990868	17863
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	0.0.0.0.0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: now split; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	2.76703095436	1481
Coq.ZArith.BinInt.Z.testbit_Zpos	40	0.0.0.0.0.2.0	search with cache (only 1: rewrite <- testbit_of_N; only 1: intro Hn; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0245931148529	9
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	3	search with cache (only 1: reflexivity).	0.00881600379944	4
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.0.0.1.0.0.18	search with cache (only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: easy; only 1: simpl; only 1: congruence; only 1: unfold testbit; only 1: simpl; only 1: congruence).	0.619585037231	583
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0134270191193	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.00915789604187	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.015506029129	3
Coq.ZArith.BinInt.Z.lt_gt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0150940418243	3
Coq.ZArith.BinInt.Z.ge_le_iff	40
Coq.ZArith.BinInt.Z.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.017126083374	3
Coq.ZArith.BinInt.Z.le_ge	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0170769691467	3
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	1.6.3.0	search with cache (only 1: unfold ltb, lt; only 1: unfold gtb, ltb; only 1: rewrite compare_antisym; only 1: now case compare).	5.79351186752	1951
Coq.ZArith.BinInt.Z.geb_le	40	3.5.3.0	search with cache (only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: unfold leb, le; only 1: now destruct compare).	12.7786910534	3900
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40	1	search with cache (only 1: apply add_cancel_l).	0.0131211280823	2
Coq.ZArith.BinInt.Z.mul_reg_l	40	6	search with cache (only 1: apply mul_cancel_l).	0.0289528369904	11
Coq.ZArith.BinInt.Z.mul_reg_r	40	1.4	search with cache (only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: exact (fun Hp => proj1 (mul_cancel_l n m p Hp))).	0.0238161087036	7
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40	1.9	search with cache (only 1: nzsimpl'; only 1: now nzsimpl').	0.260343074799	34
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.7.0.0.0.0.0.0	search with cache (only 1: destruct (leb_spec 0 i), (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: auto; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: order; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	1.88824391365	1011
Coq.ZArith.BinInt.Pos2Z.id	40	1	search with cache (only 1: now subst).	0.0076699256897	2
Coq.ZArith.BinInt.Pos2Z.inj	40	12	search with cache (only 1: congruence).	0.0869328975677	68
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	1.6.0.4	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.300096988678	154
Coq.ZArith.BinInt.Pos2Z.is_pos	40	1	search with cache (only 1: easy).	0.00967597961426	2
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	0.0	search with cache (only 1: red; only 1: easy').	0.0144040584564	2
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: auto).	0.00965595245361	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	4.0	search with cache (only 1: simpl; only 1: trivial).	0.0120248794556	6
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.011292219162	4
Coq.ZArith.BinInt.Pos2Z.inj_succ	40	7.0	search with cache (only 1: rewrite <- Pos.add_1_r; only 1: trivial).	0.0165910720825	9
Coq.ZArith.BinInt.Pos2Z.inj_add	40	0.0	search with cache (only 1: simpl; only 1: f_equal).	0.0138750076294	2
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40	1.1.1.1.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: easy').	0.0645878314972	20
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	2.0	search with cache (only 1: simpl; only 1: f_equal).	0.0122880935669	4
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00825500488281	1
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00848889350891	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	0	search with cache (only 1: trivial).	0.00710892677307	1
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	5.2.0	search with cache (only 1: simpl; only 1: revert q; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0483598709106	13
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	1.2.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: unfold Z.leb, Z.le; only 1: now split).	0.0533690452576	18
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	9	search with cache (only 1: reflexivity).	0.0086829662323	10
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0.0.2	search with cache (only 1: simpl; only 1: revert q; only 1: congruence).	0.433681964874	176
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	2	search with cache (only 1: auto).	0.00925803184509	3
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	4	search with cache (only 1: auto).	0.00888705253601	5
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40	7.7.2.0.17.41.1	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: now destruct a; only 1: simpl Z.to_N; only 1: trivial; only 1: now destruct Hn).	14.6010270119	27025
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	4	search with cache (only 1: congruence).	0.127604007721	48
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	5.0.2	search with cache (only 1: split; only 1: now injection 1; only 1: congruence).	0.0415670871735	26
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00833797454834	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	4.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0196011066437	9
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: easy).	0.00812911987305	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	0	search with cache (only 1: easy).	0.0109729766846	1
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.00729703903198	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0.0	search with cache (only 1: red; only 1: easy').	0.0140578746796	2
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.0114018917084	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00805592536926	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	4.2	search with cache (only 1: unfold Pos.gt, Pos.le, Pos.compare; only 1: trivial).	0.0104520320892	8
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	3.0	search with cache (only 1: intros; only 1: trivial).	0.00839805603027	5
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.0117220878601	2
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00765800476074	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00861001014709	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00871396064758	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0136780738831	2
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0123870372772	2
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	2	search with cache (only 1: trivial).	0.01016497612	3
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	7.0	search with cache (only 1: simpl; only 1: trivial).	0.0872659683228	41
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00829291343689	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00965905189514	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40	2.0.3.9.0.4.9.3.4.13.10.1	search with cache (only 1: intro Hn; only 1: destruct n as [| n| n]; only 1: simpl; only 1: destruct a as [| a| [a| a| ]]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: trivial; only 1: simpl; only 1: now destruct (Pos.pred_N a); only 1: now destruct Hn).	21.6172749996	45250
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	1	search with cache (only 1: apply Z.testbit_Zpos).	0.00938510894775	2
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40
Coq.ZArith.BinInt.Z2Pos.inj_1	40	1	search with cache (only 1: trivial).	0.00688314437866	2
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0.0.0.2.0	search with cache (only 1: destruct x; only 1: easy; only 1: now destruct 1; only 1: simpl; only 1: easy).	0.0366179943085	17
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	2.0	search with cache (only 1: intros; only 1: now destruct x).	0.147508144379	33
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	0.0.4.0.2.1	search with cache (only 1: destruct x; only 1: now Z.nzsimpl; only 1: simpl; only 1: now destruct p; only 1: simpl; only 1: easy).	0.497146129608	216
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.1.0.0.3.0.0.13.16	search with cache (only 1: intuition; only 1: destruct H; only 1: destruct x; only 1: trivial; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.96377086639	2337
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: easy; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0353500843048	7
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.6	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0883228778839	22
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	1.1.22.2	search with cache (only 1: destruct x; only 1: Z.order; only 1: easy || now destruct y; only 1: easy || now destruct y).	2.76416301727	3954
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0341889858246	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.0.1	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: reflexivity; only 1: easy).	0.0186538696289	6
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy).	0.0278360843658	6
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	5.0	search with cache (only 1: intros; only 1: now f_equal).	0.0118501186371	7
Coq.ZArith.BinInt.ZL0	40	8	search with cache (only 1: now PeanoNat.Nat.nzsimpl).	0.0460488796234	9
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	1.10	search with cache (only 1: Z.nzsimpl'; only 1: f_equal).	0.751373052597	153
Coq.ZArith.BinInt.Z_eq_mult	40	6.56.18	search with cache (only 1: intro H1; only 1: rewrite H1; only 1: reflexivity).	5.63848590851	12909
Coq.ZArith.Zcomplements.floor_gt0	40	1.0.5	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: reflexivity).	0.0186240673065	9
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	22	search with cache (only 1: now destruct n).	1.04171180725	814
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0	search with cache (only 1: auto with zarith).	0.00827193260193	1
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40	51.11.9.43	search with cache (only 1: destruct n as [| n| n]; only 1: easy; only 1: now destruct n; only 1: now destruct n).	8.76399803162	43910
Coq.ZArith.Zeven.Zeven_odd_bool	40	25	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.246807098389	654
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: tauto).	3.82113313675	3043
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	5.72660708427	5038
Coq.ZArith.Zeven.Zeven_not_Zodd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: destruct p; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto; only 1: simpl; only 1: tauto).	3.21652293205	3175
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0841310024261	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0159800052643	1
Coq.ZArith.Zeven.Zodd_div2	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.2	search with cache (only 1: boolify_even_odd; only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: now try Z.order'; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.pred_double_succ; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	15.7096710205	7258
Coq.ZArith.Zeven.Zquot2_odd_eqn	40	0.0.0.0.1.0.0.0.0.1.7.0.2	search with cache (only 1: destruct n as [| [| | ]| [| | ]]; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: simpl; only 1: easy; only 1: simpl; only 1: easy).	16.2014868259	5429
Coq.ZArith.Zeven.Zeven_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0134379863739	1
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0183210372925	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	4.0.1.0	search with cache (only 1: intros Hn Hn'; only 1: apply Zodd_bool_iff in Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.270191907883	28
Coq.ZArith.Zeven.Zquot2_opp	40
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	4.1	search with cache (only 1: exists (Z.div2 n); only 1: now destruct n as [| [| | ]| [| | ]]).	0.0583980083466	14
Coq.ZArith.Zeven.Zodd_ex	40
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.1.1.4.8.3	search with cache (only 1: boolify_even_odd; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	1.24871397018	668
Coq.ZArith.Zeven.Zodd_2p_plus_1	40
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	1.2.0.2.0.66	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: now rewrite Z.odd_add, Ha, Hb).	2.19570088387	3136
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0381338596344	5
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	1.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0401878356934	5
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.0100960731506	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00999116897583	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00861191749573	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	1.1.2.14.1.0	search with cache (only 1: intros a b Hb; only 1: exists (a / b); only 1: rewrite Z.mul_comm; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	6.48755097389	3206
Coq.ZArith.Znumtheory.Zdivide_mod	40
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	1.14.2.0.31	search with cache (only 1: intros b; only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto).	3.92477107048	6047
Coq.ZArith.Znumtheory.Zis_gcd_1	40
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	15.3	search with cache (only 1: intro n; only 1: now Z.nzsimpl').	1.67085504532	805
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	1.1.1.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0364351272583	8
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0604479312897	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.022115945816	4
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	7.9	search with cache (only 1: intros a n Hn; only 1: now apply Zis_gcd_sym).	0.384733915329	760
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	6.0.2.3.13	search with cache (only 1: constructor; only 1: auto with zarith; only 1: exists n; only 1: now Z.nzsimpl'; only 1: auto with zarith).	4.62048482895	2135
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	10	search with cache (only 1: now destruct 1 || intros _).	0.0663290023804	40
Coq.ZArith.Znumtheory.not_prime_1	40	44.4	search with cache (only 1: destruct 1 as [H H0]; only 1: discriminate).	1.80211019516	4139
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	2.2.1.22.3	search with cache (only 1: intros a b; only 1: intros; only 1: apply Z.gcd_greatest; only 1: auto; only 1: auto).	29.9382410049	18081
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	1.0.1.0.0.0.1.2.1.0.1.0	search with cache (only 1: intros Hb; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	10.5787818432	3507
Coq.ZArith.Zdiv.Z_div_mod_eq	40	0.2.0.2.0.2.0	search with cache (only 1: intros Hb; only 1: unfold Z.div, Z.modulo; only 1: Z.swap_greater; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: generalize (Z.div_eucl_eq a b Hb'), (Z.mod_pos_bound a b Hb); only 1: destruct Z.div_eucl; only 1: auto).	1.23372483253	325
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	10	search with cache (only 1: trivial).	0.0310571193695	40
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0346012115479	6
Coq.ZArith.Zdiv.Zdiv_0_l	40	5.0	search with cache (only 1: intros; only 1: auto).	0.0284888744354	18
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0290069580078	6
Coq.ZArith.Zdiv.Zmod_1_r	40	33.0	search with cache (only 1: intros; only 1: now Z.nzsimpl).	5.04416108131	8926
Coq.ZArith.Zdiv.Zdiv_1_r	40	3.1.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: now Z.nzsimpl).	0.0588049888611	13
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0228950977325	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.0.2.0	search with cache (only 1: intros a b **; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.038614988327	6
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40	0.1.4.1.5.11.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.add_mod; only 1: auto).	8.35626602173	7819
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.5.1	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0386769771576	16
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.1.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.169023990631	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40	0.0.4.0.1.15.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod; only 1: repeat rewrite Zmod_mod; only 1: zero_or_not n; only 1: symmetry; only 1: apply Z.mul_mod; only 1: auto).	11.3363530636	9267
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0210728645325	4
Coq.ZArith.Zdiv.eqm_refl	40	8.1	search with cache (only 1: intro n; only 1: now Z.nzsimpl').	0.0284819602966	29
Coq.ZArith.Zdiv.eqm_sym	40	0.0	search with cache (only 1: unfold eqm; only 1: auto).	0.0121841430664	2
Coq.ZArith.Zdiv.eqm_trans	40	2.12.0	search with cache (only 1: unfold eqm; only 1: intros a; only 1: Z.order).	1.56751203537	1302
Coq.ZArith.Zdiv.eqm_setoid	40
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40
Coq.ZArith.Zdiv.Zeven_mod	40	0.0.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0174820423126	3
Coq.ZArith.Zdiv.Z_mod_same	40	0.3.28.2	search with cache (only 1: intros; only 1: rewrite Z.mod_divide; only 1: easy; only 1: now intros ->).	3.27949309349	3392
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	0.0.0	search with cache (only 1: intros a b c **; only 1: apply Z.mod_add; only 1: now intros ->).	0.0199511051178	3
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.6.6.2.0	search with cache (only 1: intros a b; only 1: intros Hb; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: now intros ->; only 1: now intros ->).	2.90711903572	1589
Coq.ZArith.Zdiv.Z_div_exact_2	40	1.6.10.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: now intros ->).	3.07601094246	1598
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	2.1.5.3.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: now intros ->; only 1: now destruct b).	1.49434614182	857
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0.0.2	search with cache (only 1: intros a a' Ha b b' Hb; only 1: Z.bitwise; only 1: now rewrite Ha, Hb).	0.0295100212097	13
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.00821590423584	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40	0.0.0.4.0	search with cache (only 1: intros P n **; only 1: Z.swap_greater; only 1: Z.destruct_max n; only 1: auto; only 1: auto).	0.053662776947	15
Coq.ZArith.Zabs.Zabs_intro	40	6.0	search with cache (only 1: intros; only 1: now destruct n).	0.0127930641174	8
Coq.ZArith.Zabs.Zabs_dec	40	11.16.2.7.9.0	search with cache (only 1: intros n; only 1: destruct n; only 1: auto; only 1: simpl; only 1: auto; only 1: auto).	5.88196086884	10474
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40	5.65.5.65.5	search with cache (only 1: split; only 1: fix odd_spec 1; only 1: easy; only 1: fix odd_spec 1; only 1: easy).	32.4318649769	125072
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	1	search with cache (only 1: now Z.nzsimpl).	0.0417768955231	2
Coq.ZArith.Int.Z_as_Int.i2z_0	40	5	search with cache (only 1: auto).	0.00841593742371	6
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: auto).	0.00747990608215	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	0	search with cache (only 1: reflexivity).	0.00618720054626	1
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00582909584045	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00765919685364	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	0	search with cache (only 1: trivial).	0.0060441493988	1
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00670719146729	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00743103027344	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.00651097297668	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.00741505622864	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00657391548157	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00723218917847	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	1	search with cache (only 1: auto).	0.00693321228027	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	1.3.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: trivial).	0.0259029865265	10
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	1.4.6.2.1	search with cache (only 1: induction n; only 1: trivial; only 1: intros Hn; only 1: apply Pos2Nat.inj_iter; only 1: now destruct 1).	1.25826907158	603
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: now subst).	0.00781393051147	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: trivial).	0.00724577903748	1
Coq.ZArith.Zpower.shift_equiv	40	1.5.0.4.1.6.0.9	search with cache (only 1: intros; only 1: Z.bitwise; only 1: destruct n as [| n| n]; only 1: easy; only 1: simpl Z.shiftl; only 1: rewrite <- (Pos.iter_swap_gen _ _ _ xO) by trivial; only 1: trivial; only 1: easy).	4.8714761734	4228
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	9.5.5.1.88	search with cache (only 1: simpl; only 1: generalize (Pos.sqrtrem_spec p); only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: intros; only 1: now apply Pos.iter_swap_gen).	8.29948210716	13027
Coq.ZArith.Zpower.two_p_equiv	40	3.9.0.5.1.0.0.4.12.36	search with cache (only 1: Morphisms.f_equiv; only 1: intros n Hn; only 1: intros H; only 1: induction n; only 1: destruct H; only 1: now Z.nzsimpl; only 1: destruct H; only 1: now apply Pos.iter_swap_gen; only 1: destruct H; only 1: split).	9.7633061409	7725
Coq.ZArith.Zpower.two_power_nat_S	40	5.0.1	search with cache (only 1: induction n; only 1: trivial; only 1: reflexivity).	0.103224992752	9
Coq.ZArith.Zpower.shift_nat_plus	40
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40	2.1.0.10.20	search with cache (only 1: Z.nzsimpl'; only 1: generalize (Pos.sqrtrem_spec p); only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	1.37315011024	1031
Coq.ZArith.Zpower.two_power_pos_correct	40	1	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00856399536133	2
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	0.1.1.0.2.1	search with cache (only 1: destruct x; only 1: unfold Z.gt; only 1: trivial; only 1: red; only 1: trivial; only 1: easy).	0.247280836105	167
Coq.ZArith.Zpower.two_p_S	40	15.13.0	search with cache (only 1: rewrite !two_p_equiv; only 1: symmetry; only 1: now Z.nzsimpl).	2.89310002327	1316
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0155379772186	1
Coq.ZArith.auxiliary.Zle_left	40	74	search with cache (only 1: apply Z.le_0_sub).	3.77999901772	3575
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0100209712982	1
Coq.ZArith.auxiliary.Zlt_left_rev	40
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00932502746582	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.0.1.0.0.1.10	search with cache (only 1: unfold Z.le, Z.ge; only 1: rewrite Z.compare_sub; only 1: unfold Z.sub; only 1: destruct (n + - m) as [| p| p]; only 1: easy'; only 1: easy'; only 1: easy').	0.874714136124	334
Coq.ZArith.auxiliary.Zgt_left	40	0.2.1.0.6	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	1.64371609688	712
Coq.ZArith.auxiliary.Zgt_left_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0214011669159	4
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0213050842285	2
Coq.ZArith.auxiliary.Zle_mult_approx	40
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40	0.10	search with cache (only 1: unfold Z.le, Z.max; only 1: now case Z.compare_spec).	0.120054960251	33
Coq.ZArith.Zmax.Zpos_max_1	40	4.3.3	search with cache (only 1: unfold Z.max, Pos.max; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.141928195953	76
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40	15	search with cache (only 1: Z.solve_min).	0.272233009338	175
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	4.3.0	search with cache (only 1: unfold Z.min, Pos.min; only 1: simpl; only 1: apply Pos.compare_succ_l || apply Pos.compare_succ_r || now destruct p || now destruct q).	0.0249218940735	10
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	0.0.0.0.3.131	search with cache (only 1: destruct a; only 1: trivial; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	3.18730998039	9896
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	2	search with cache (only 1: Z.order).	0.0115971565247	3
Coq.ZArith.Zorder.Zlt_not_le	40	0	search with cache (only 1: intuition Z.order).	0.0126900672913	1
Coq.ZArith.Zorder.Zle_not_gt	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0202848911285	4
Coq.ZArith.Zorder.Zgt_not_le	40	0.1	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0209310054779	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0205230712891	2
Coq.ZArith.Zorder.Znot_lt_ge	40	2.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0188710689545	4
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00813221931458	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: intuition Z.order).	0.0218410491943	2
Coq.ZArith.Zorder.not_Zne	40	6.0.4.15	search with cache (only 1: intuition; only 1: destruct (Z.eq_decidable n m); only 1: auto; only 1: tauto).	0.87496805191	537
Coq.ZArith.Zorder.Zgt_asym	40	19.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	2.44224786758	1139
Coq.ZArith.Zorder.Zgt_irrefl	40	14.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.11325097084	184
Coq.ZArith.Zorder.Zle_lt_or_eq	40
Coq.ZArith.Zorder.Zgt_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0282850265503	2
Coq.ZArith.Zorder.Zle_gt_trans	40	11.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order || (right; Z.Private_Tac.order) || (left; Z.Private_Tac.order)).	0.11799788475	90
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.0218260288239	2
Coq.ZArith.Zorder.Zge_trans	40	0.1	search with cache (only 1: Z.swap_greater; only 1: Z.Private_Tac.order).	0.028813123703	3
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.151462078094	39
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0194380283356	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	2	search with cache (only 1: apply Z.succ_le_mono).	0.0229229927063	3
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00836396217346	1
Coq.ZArith.Zorder.Zgt_succ	40	5.2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono; only 1: apply Z.lt_succ_diag_r).	0.01726603508	11
Coq.ZArith.Zorder.Znot_le_succ	40	3.28	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.616353988647	1102
Coq.ZArith.Zorder.Zgt_le_succ	40
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.00883483886719	2
Coq.ZArith.Zorder.Zlt_le_succ	40	1	search with cache (only 1: apply Z.le_succ_l).	0.147047996521	23
Coq.ZArith.Zorder.Zgt_succ_le	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.017471075058	3
Coq.ZArith.Zorder.Zlt_succ_le	40	1	search with cache (only 1: apply Z.lt_succ_r).	0.0098078250885	2
Coq.ZArith.Zorder.Zle_succ_gt	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.149558067322	19
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00893998146057	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.14	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.104665994644	91
Coq.ZArith.Zorder.Zle_neg_pos	40	1.0.1	search with cache (only 1: red; only 1: simpl in *; only 1: now intuition).	0.0323641300201	14
Coq.ZArith.Zorder.Zgt_pos_0	40	1.12	search with cache (only 1: intros; only 1: easy).	0.0338449478149	76
Coq.ZArith.Zorder.Zle_0_pos	40	0	search with cache (only 1: easy).	0.0155348777771	1
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.00810503959656	1
Coq.ZArith.Zorder.Zle_0_nat	40	57.6	search with cache (only 1: intros; only 1: now destruct n).	4.23407316208	11479
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	0.22.24.0.5	search with cache (only 1: intros EQ; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: auto).	10.7513477802	16904
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0106048583984	3
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.0124359130859	7
Coq.ZArith.Zorder.Zplus_le_reg_l	40	7	search with cache (only 1: apply Z.add_le_mono_l).	0.0111439228058	8
Coq.ZArith.Zorder.Zplus_le_reg_r	40	5	search with cache (only 1: apply Z.add_le_mono_r).	0.0105080604553	6
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	2	search with cache (only 1: apply Z.add_lt_mono_l).	0.0104029178619	3
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	6	search with cache (only 1: apply Z.add_lt_mono_r).	0.0122818946838	7
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	2.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.0214540958405	4
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	6.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0235619544983	8
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	16.4	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	11.0842251778	4690
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	16.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	3.59418416023	2307
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	3	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0115818977356	4
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	3	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.0126061439514	4
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.030200958252	5
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	2.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0356040000916	5
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	5.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0370879173279	8
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	2.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.0358729362488	11
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	3.0.3	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0643498897552	34
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	17	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.265757083893	200
Coq.ZArith.Zorder.Zmult_le_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0203948020935	5
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	3	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.0108590126038	4
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	3.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.028538942337	5
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	3.0.3	search with cache (only 1: rewrite 2!(Z.mul_comm _ p); only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0788209438324	34
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.28.0	search with cache (only 1: Z.swap_greater; only 1: revert n m; only 1: intros a b Ha Hb; only 1: Z.order_pos).	1.60911083221	1802
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	18.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.525407075882	480
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	27.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	2.20738601685	2382
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	5.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0278768539429	7
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	1	search with cache (only 1: apply Z.le_0_sub).	0.00899481773376	2
Coq.ZArith.Zbool.Zle_cases	40	1.0.1.0.5	search with cache (only 1: unfold Z.geb, Z.leb; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order; only 1: now Z.swap_greater).	0.405335903168	112
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40	0.0.2.0.0.3.1.0.0.0.1.3	search with cache (only 1: destruct (Z.lt_decidable m n); only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.Private_Tac.order; only 1: Z.Private_Tac.order; only 1: now Z.swap_greater; only 1: unfold Z.gtb, Z.ltb; only 1: case Z.compare_spec; only 1: Z.order; only 1: Z.order; only 1: Z.swap_greater; only 1: auto).	1.8213698864	1456
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.0.6.0	search with cache (only 1: unfold Z.leb, Z.le; only 1: destruct (n ?= m); only 1: easy'; only 1: easy'; only 1: easy').	0.14442896843	66
Coq.ZArith.Zbool.Zle_imp_le_bool	40	2	search with cache (only 1: apply Z.leb_le).	0.029345035553	15
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.3	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.Private_Tac.order).	0.0623638629913	20
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	0	search with cache (only 1: easy || now destruct y).	0.0078010559082	1
Coq.ZArith.Zbool.Zone_min_pos	40	5.13.0.3.4	search with cache (only 1: intros H; only 1: apply Z.leb_gt in H; only 1: unfold Z.leb, Z.le; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	3.27866983414	3140
Coq.ZArith.Zbool.Zle_is_le_bool	40	2.4	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0695281028748	30
Coq.ZArith.Zbool.Zge_is_le_bool	40	1.5	search with cache (only 1: rewrite !Z.leb_le; only 1: now Z.swap_greater).	0.211603164673	65
Coq.ZArith.Zbool.Zlt_is_lt_bool	40	22.0	search with cache (only 1: unfold Z.ltb, Z.lt; only 1: now case Z.compare_spec).	10.637638092	6162
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	1.3.5.2	search with cache (only 1: Z.swap_greater; only 1: rewrite Z.gtb_ltb; only 1: symmetry; only 1: apply Z.ltb_lt).	2.63772392273	1056
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.0.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0196089744568	3
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	1.1.1.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: easy'; only 1: easy').	0.099846124649	18
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40	0.1.2.0.0.0.3	search with cache (only 1: destruct r; only 1: left; only 1: left; only 1: auto; only 1: now intuition; only 1: right; only 1: auto).	1.11648988724	609
Coq.ZArith.ZArith_dec.Zcompare_rect	40	1.1.1.0	search with cache (only 1: destruct (n ?= m); only 1: now intuition; only 1: now intuition; only 1: now intuition).	0.0245499610901	7
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.1.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0238080024719	6
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.lt; only 1: unfold Z.ge; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.208930969238	90
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.1.1	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.634520053864	133
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.2.6.0.0.3	search with cache (only 1: elim Z_le_dec; only 1: right; only 1: auto; only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	21.9211511612	8531
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	4.0.1.5	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: auto; only 1: now left).	1.72548913956	832
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40	2.0.1.7.0.10.0	search with cache (only 1: intros x y H; only 1: destruct x; only 1: right; only 1: now Z.nzsimpl; only 1: right; only 1: easy || now destruct y; only 1: now left).	10.5291938782	5347
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40	0.0.8.0	search with cache (only 1: intro n; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.212057113647	126
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	1	search with cache (only 1: auto).	0.0102219581604	2
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	2.4.0.6.0	search with cache (only 1: destruct b as [| b| b]; only 1: easy; only 1: intros Hb; only 1: now elim Hb; only 1: trivial).	1.77634596825	1084
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.omega.OmegaLemmas.Zred_factor0	40	0	search with cache (only 1: now Z.nzsimpl').	0.0353729724884	1
Coq.omega.OmegaLemmas.Zred_factor1	40	1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: rewrite Z.mul_comm; only 1: apply Z.add_diag).	0.0386819839478	12
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40
Coq.omega.OmegaLemmas.Zred_factor4	40
Coq.omega.OmegaLemmas.Zred_factor5	40	1	search with cache (only 1: now Z.nzsimpl).	0.0614340305328	2
Coq.omega.OmegaLemmas.Zred_factor6	40	1	search with cache (only 1: now Z.nzsimpl).	0.653323888779	61
Coq.omega.OmegaLemmas.new_var	40	28	search with cache (only 1: eauto using Z.Private_Tac.eq_trans, Z.Private_Tac.eq_sym).	0.0657739639282	393
Coq.omega.OmegaLemmas.OMEGA1	40	2	search with cache (only 1: Z.order).	0.0136752128601	3
Coq.omega.OmegaLemmas.OMEGA2	40	0.0.2.2.18	search with cache (only 1: destruct x; only 1: Z.nzsimpl; only 1: trivial; only 1: easy || now destruct y; only 1: now destruct 1 || now destruct 2).	3.05876898766	372
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40
Coq.omega.OmegaLemmas.OMEGA6	40	18.0.7.20.19.15	search with cache (only 1: intros a b c; only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: simpl in *; only 1: easy').	26.5944700241	15535
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0257699489594	19
Coq.omega.OmegaLemmas.OMEGA12	40
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0809190273285	13
Coq.omega.OmegaLemmas.OMEGA15	40	3.1.2.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0415849685669	24
Coq.omega.OmegaLemmas.OMEGA16	40
Coq.omega.OmegaLemmas.OMEGA17	40	0.1	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0872189998627	3
Coq.omega.OmegaLemmas.OMEGA18	40	13.4.4	search with cache (only 1: intro; only 1: intro; only 1: now intros ->).	1.95198297501	1686
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.1.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0503129959106	5
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40
Coq.omega.PreOmega.Z.div_0_r_ext	40
Coq.omega.PreOmega.Z.rem_0_r_ext	40
Coq.omega.PreOmega.Z.quot_0_r_ext	40
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.Program.Wf.Fix_F_eq	40	0.4.3	search with cache (only 1: intros; only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0190598964691	10
Coq.Program.Wf.Fix_F_inv	40	0.1.22.9.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: intro p; only 1: destruct p; only 1: apply F_ext; only 1: auto).	11.6829950809	21827
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0209081172943	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.4	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0166819095612	6
Coq.Program.Wf.Fix_F_sub_rect	40	0.9.8.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.4338991642	689
Coq.Program.Wf.eq_Fix_F_sub	40	0.4.5	search with cache (only 1: induction (Rwf x); only 1: rewrite <- 2!Fix_F_eq; only 1: auto).	0.228945016861	96
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	2.1.4.6.7.30	search with cache (only 1: intros r s; only 1: intros H x0; only 1: intro n; only 1: induction n; only 1: subst; only 1: reflexivity).	5.64420413971	27642
Coq.Program.Equality.JMeq_eq_refl	40	6	search with cache (only 1: apply UIP).	0.00832319259644	7
Coq.Program.Equality.UIP_refl_refl	40	7	search with cache (only 1: apply UIP).	0.028568983078	27
Coq.Program.Equality.inj_pairT2_refl	40	31	search with cache (only 1: apply UIP_refl).	0.381403923035	1064
Coq.Program.Equality.solution_left	40	0.8.32	search with cache (only 1: intros Hfst Hsnd; only 1: destruct 1; only 1: auto).	0.324337005615	1647
Coq.Program.Equality.solution_right	40	2.5.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0150499343872	18
Coq.Program.Equality.deletion	40	2.1	search with cache (only 1: intros; only 1: assumption).	0.00769209861755	5
Coq.Program.Equality.simplification_heq	40	3.7.32.10	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1; only 1: reflexivity).	0.69797205925	4041
Coq.Program.Equality.simplification_existT2	40	0.0.45.7.29	search with cache (only 1: intro H; only 1: intros; only 1: apply H; only 1: apply eq_dep_eq; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	5.6472530365	29840
Coq.Program.Equality.simplification_existT1	40	0.4.5.38.13.37	search with cache (only 1: intro Streicher_K; only 1: intros; only 1: apply Streicher_K; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT; only 1: assumption).	11.9788661003	67745
Coq.Program.Equality.simplification_K	40	16.5.9	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.565645933151	2156
Coq.Program.Combinators.compose_id_left	40	1.1.0	search with cache (only 1: intro n; only 1: intros; only 1: trivial).	0.0153081417084	5
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0108571052551	2
Coq.Program.Combinators.compose_assoc	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00996804237366	2
Coq.Program.Combinators.flip_flip	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00912284851074	2
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00989007949829	2
Coq.Program.Combinators.prod_curry_uncurry	40
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0	search with cache (only 1: intros; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.129168987274	5
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.3.1.4.3.0	search with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: destruct H; only 1: apply Sorted_merge; only 1: auto; only 1: auto; only 1: auto).	1.24579119682	1364
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40	1.2.6.3	search with cache (only 1: intro n; only 1: induction n; only 1: discriminate || auto; only 1: auto).	0.0922520160675	154
Coq.Sorting.Permutation.Permutation_refl'	40	2.0.1.1.4.0.4.12.6	search with cache (only 1: intros l HF; only 1: revert l; only 1: intros a b; only 1: remember [] as m in HF; only 1: subst; only 1: induction HF; only 1: discriminate || auto; only 1: constructor; only 1: firstorder).	30.7062630653	49867
Coq.Sorting.Permutation.Permutation_sym	40
Coq.Sorting.Permutation.Permutation_trans	40	3.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.0104649066925	5
Coq.Sorting.Permutation.Permutation_morph_transp	40
Coq.Sorting.Permutation.Permutation_cons	40	0.4.4	search with cache (only 1: intros x y H y0 y1 e; only 1: subst; only 1: auto).	0.0799601078033	78
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.4.0.2.13	search with cache (only 1: induction l; only 1: auto; only 1: intuition; only 1: simpl; only 1: auto).	9.25336503983	2439
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_app_rot	40
Coq.Sorting.Permutation.Permutation_app_swap_app	40
Coq.Sorting.Permutation.Permutation_app_middle	40
Coq.Sorting.Permutation.Permutation_cons_app	40	1.6.33.0	search with cache (only 1: intros; only 1: rewrite H; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	26.1855781078	29576
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	2.1	search with cache (only 1: intro l'; only 1: auto).	0.0132839679718	5
Coq.Sorting.Permutation.Permutation_middle2	40
Coq.Sorting.Permutation.Permutation_elt	40
Coq.Sorting.Permutation.Permutation_rev	40	0.2.6.0.8	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.41192698479	664
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	1.0.0.0.0.6.2.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: constructor; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.840281963348	800
Coq.Sorting.Permutation.Permutation_Forall	40	0.16.3.4.15	search with cache (only 1: intro Dec; only 1: intros; only 1: rewrite !Forall_forall; only 1: intros a Hin; only 1: eauto using Permutation_in).	12.8254659176	18837
Coq.Sorting.Permutation.Permutation_Exists	40
Coq.Sorting.Permutation.Permutation_Forall2	40
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40	0.2.0.6.5	search with cache (only 1: intros; only 1: eapply Permutation_Add_inv; only 1: eauto using Add_app; only 1: eauto using Add_head; only 1: eauto using Add_app).	14.2057929039	270
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_app_inv_m	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.Permutation_vs_elt_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_inv	40
Coq.Sorting.Permutation.Permutation_vs_cons_cons_inv	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_repeat	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	1.0.0.0.0.2.0.1	search with cache (only 1: repeat red; only 1: induction 1; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	20.3182139397	188
Coq.Sorting.Permutation.Permutation_map_inv	40
Coq.Sorting.Permutation.Permutation_image	40
Coq.Sorting.Permutation.Permutation_elt_map_inv	40
Coq.Sorting.Permutation.Permutation_flat_map	40
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.Permutation.Permutation_list_sum	40
Coq.Sorting.Permutation.Permutation_list_max	40
Coq.Sorting.Permutation.Permutation_transp_sym	40
Coq.Sorting.Permutation.Permutation_transp_equiv	40	3.3.5.10.9.5.2.120	search with cache (only 1: constructor; only 1: now constructor; only 1: apply _; only 1: intro n; only 1: intros; only 1: constructor 3 with y; only 1: auto; only 1: auto).	18.4750139713	44380
Coq.Sorting.Permutation.Permutation_transp_cons	40
Coq.Sorting.Permutation.Permutation_Permutation_transp	40
Coq.Sorting.Permutation.Permutation_ind_transp	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	2.7.0	search with cache (only 1: intros; only 1: red; only 1: auto with datatypes).	0.0531239509583	68
Coq.Sorting.PermutSetoid.permut_sym	40	2.0.0	search with cache (only 1: unfold permutation; only 1: intros; only 1: auto with datatypes).	0.0173439979553	5
Coq.Sorting.PermutSetoid.permut_trans	40	0.10.0.0.2	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intros; only 1: rewrite H; only 1: trivial).	3.08796811104	2535
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	2.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0239539146423	6
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	4.0.4.0.1	search with cache (only 1: unfold permutation, meq in *; only 1: intros; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	0.696445941925	303
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40
Coq.Sorting.PermutSetoid.permut_app_inv1	40	0.0.0.3.2.4.0	search with cache (only 1: intros; only 1: unfold permutation, meq; only 1: intro a; only 1: generalize (H a); only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	1.7441971302	1061
Coq.Sorting.PermutSetoid.if_eqA_then	40	28.0.31.5	search with cache (only 1: intros; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto; only 1: congruence).	33.4692080021	51790
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.0.1.0.1.1.0.1	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: lia).	0.891180038452	370
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.0.2.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: destruct (eqA_dec a _) as [Ha| Ha]; only 1: lia; only 1: lia).	1.01371192932	235
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.37.18.0	search with cache (only 1: intros; only 1: destruct (eqA_dec a _) as [Ha| Ha]; only 1: congruence; only 1: auto).	23.9523990154	34587
Coq.Sorting.PermutSetoid.if_eqA_refl	40	42.0.1.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: intuition).	17.8183419704	29123
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.1.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: intros a'; only 1: auto with arith; only 1: auto with arith).	0.0434141159058	7
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	0.0.0.2.0.1	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl; only 1: auto using Equivalence_Reflexive, permut_refl).	0.0397551059723	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.6.13.6.32	search with cache (only 1: intro y; only 1: intros a b; only 1: intros Heq; only 1: inversion_clear Heq; only 1: auto).	34.5933971405	58709
Coq.Sorting.Sorted.Sorted_inv	40	0.0.5.16.12	search with cache (only 1: intros p H; only 1: intro; only 1: inversion H0; only 1: subst; only 1: auto).	1.70235180855	4915
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.23	search with cache (only 1: inversion 1; only 1: firstorder).	1.41253209114	3230
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.0170838832855	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	2.12	search with cache (only 1: red; only 1: auto).	0.143445968628	94
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.012708902359	2
Coq.Sorting.Heap.invert_heap	40	0.40.2	search with cache (only 1: intros l1 l2 e; only 1: inversion 1; only 1: auto with datatypes).	2.04719018936	4203
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40
Coq.Sorting.Heap.low_trans	40	11.0.2.4	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: simpl; only 1: eauto with *).	6.32710003853	4384
Coq.Sorting.Heap.Equivalence_instance_0	40	0.2.1.3.3.8.1.0.4.31	search with cache (only 1: split; only 1: intros H3 H4; only 1: auto with datatypes; only 1: auto with datatypes; only 1: unfold meq; only 1: intro a; only 1: symmetry; only 1: specialize H0 with a0; only 1: specialize H with a0; only 1: Lia.lia).	12.3574068546	14352
Coq.Sorting.Heap.Proper_instance_0	40	0.0.1.9.13	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: red; only 1: intros; only 1: simpl; only 1: auto with datatypes).	0.838434934616	721
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	1.0.10	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.199244976044	164
Coq.Sorting.Heap.list_to_heap	40	10.1	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.18597984314	125
Coq.Sorting.Heap.heap_to_list	40	2.0.14	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.334625959396	498
Coq.Sorting.Heap.treesort	40	10.1	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.132337093353	125
Coq.Sorting.CPermutation.CPermutation_Permutation	40
Coq.Sorting.CPermutation.CPermutation_nil	40
Coq.Sorting.CPermutation.CPermutation_nil_cons	40	1.1.0.30	search with cache (only 1: intros H; only 1: intros l HC; only 1: inversion HC as [l1 l2 Heq]; only 1: now apply app_eq_nil in Heq; destruct Heq; subst).	2.37783312798	5115
Coq.Sorting.CPermutation.CPermutation_nil_app_cons	40
Coq.Sorting.CPermutation.CPermutation_split	40
Coq.Sorting.CPermutation.CPermutation_refl	40
Coq.Sorting.CPermutation.CPermutation_refl'	40	1.4.3.14.2	search with cache (only 1: repeat red; only 1: intros Hnin; only 1: intros l HC; only 1: subst; only 1: now rewrite <- (app_nil_l l)  at 1; rewrite <- (app_nil_r l)  at 2).	2.58886098862	5942
Coq.Sorting.CPermutation.CPermutation_sym	40	18.9	search with cache (only 1: intros ? ? [? ?]; only 1: now constructor).	9.959608078	7711
Coq.Sorting.CPermutation.CPermutation_trans	40
Coq.Sorting.CPermutation.CPermutation_app	40	4.1	search with cache (only 1: intros l1 l2 a HC; only 1: eauto using Add_head, Add_app).	0.0241429805756	16
Coq.Sorting.CPermutation.CPermutation_app_comm	40	0.1	search with cache (only 1: intros; only 1: now transitivity (l1 ++ l2)).	0.013286113739	3
Coq.Sorting.CPermutation.CPermutation_app_rot	40	12.2	search with cache (only 1: intros; only 1: now rewrite (app_assoc l2)).	0.230766057968	209
Coq.Sorting.CPermutation.CPermutation_cons_append	40
Coq.Sorting.CPermutation.CPermutation_morph_cons	40
Coq.Sorting.CPermutation.CPermutation_length_1	40
Coq.Sorting.CPermutation.CPermutation_length_1_inv	40
Coq.Sorting.CPermutation.CPermutation_swap	40
Coq.Sorting.CPermutation.CPermutation_length_2	40
Coq.Sorting.CPermutation.CPermutation_length_2_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_elt_inv	40
Coq.Sorting.CPermutation.CPermutation_vs_cons_inv	40
Coq.Sorting.CPermutation.CPermutation_rev	40
Coq.Sorting.CPermutation.CPermutation_in	40
Coq.Sorting.CPermutation.CPermutation_in'	40
Coq.Sorting.CPermutation.CPermutation_map	40
Coq.Sorting.CPermutation.CPermutation_map_inv	40
Coq.Sorting.CPermutation.CPermutation_image	40
Coq.Sorting.CPermutation.CPermutation_Forall	40
Coq.Sorting.CPermutation.CPermutation_Exists	40
Coq.Sorting.CPermutation.CPermutation_Forall2	40
Coq.Sorting.CPermutation.CPermutation_rewrite_rev	40
Coq.btauto.Algebra.Decidable_sound	40	1.2.2.1	search with cache (only 1: intro n; only 1: intuition; only 1: apply -> Decidable_spec; only 1: intuition).	0.0585770606995	19
Coq.btauto.Algebra.Decidable_complete	40	0.2.3.2	search with cache (only 1: intro n; only 1: intuition; only 1: apply <- Decidable_spec; only 1: intuition).	0.358653783798	61
Coq.btauto.Algebra.Decidable_sound_alt	40	0.0.0.0.1	search with cache (only 1: intros P [wit spec] Hd; only 1: simpl; only 1: destruct wit; only 1: intuition; only 1: intuition).	0.0580968856812	6
Coq.btauto.Algebra.Decidable_complete_alt	40	0.2.0.2.0.0	search with cache (only 1: intros P [wit spec] Hd; only 1: destruct wit; only 1: simpl in *; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.0748951435089	10
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	1.1.21	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	1.06450486183	852
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	7	search with cache (only 1: auto).	0.0105650424957	8
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	3.0.0.1.3.7.9.1	search with cache (only 1: intros A n def; only 1: intros; only 1: induction n using Pos.peano_rect; only 1: auto; only 1: rewrite list_nth_succ; only 1: unfold make_last; only 1: rewrite Pos.peano_rect_succ; only 1: apply IHn).	39.3988997936	24359
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.Init.Wf.Acc_inv	40	2.10	search with cache (only 1: destruct 1; only 1: auto).	0.0271937847137	83
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0116589069366	6
Coq.Init.Wf.well_founded_ind	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.0120298862457	6
Coq.Init.Wf.Fix_F_eq	40
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	0.0.0.2.6.1.4	search with cache (only 1: intro A; only 1: intro H; only 1: intros; only 1: destruct H; only 1: auto; only 1: induction n; only 1: auto).	0.686193943024	2696
Coq.Init.Tactics.decide_right	40	1.0.1.0	search with cache (only 1: intros C decide H P H0; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0105087757111	6
Coq.Init.Peano.pred_Sn	40	3	search with cache (only 1: split).	0.00579214096069	4
Coq.Init.Peano.not_eq_S	40	19	search with cache (only 1: auto).	0.342731952667	954
Coq.Init.Peano.O_S	40	18	search with cache (only 1: discriminate).	0.245808839798	791
Coq.Init.Peano.n_Sn	40	1.0.10	search with cache (only 1: induction n; only 1: discriminate; only 1: auto).	0.0768668651581	183
Coq.Init.Peano.plus_n_O	40	0.3.0.1.5	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0717239379883	122
Coq.Init.Peano.plus_O_n	40	0.0	search with cache (only 1: intro n; only 1: auto).	0.00657105445862	2
Coq.Init.Peano.plus_n_Sm	40	0.1.1.2.2	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0645129680634	61
Coq.Init.Peano.plus_Sn_m	40	0.0.0	search with cache (only 1: intros n m; only 1: simpl; only 1: auto).	0.00864291191101	3
Coq.Init.Peano.mult_n_O	40	0.0.3.3	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.00873303413391	10
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	1.0.4.4	search with cache (only 1: intro n; only 1: induction n; only 1: auto; only 1: auto).	0.0266969203949	68
Coq.Init.Peano.le_n_S	40	1.1.5	search with cache (only 1: induction 1 as [| m _]; only 1: constructor; only 1: auto).	0.0463590621948	58
Coq.Init.Peano.nat_case	40	3.6.12	search with cache (only 1: induction n; only 1: auto; only 1: auto).	0.391965866089	1302
Coq.Init.Peano.nat_double_ind	40	10.7.21.7.5.3	search with cache (only 1: intros H x0; only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	20.4885830879	98399
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40
Coq.Init.Peano.min_l	40
Coq.Init.Peano.min_r	40
Coq.Init.Peano.nat_rect_succ_r	40	0.0.3.1.18	search with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: auto).	1.21522688866	3201
Coq.Init.Peano.nat_rect_plus	40	0.1.4.0.1.3.0	search with cache (only 1: intro n; only 1: induction n as [| n IHn]; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	1.72767877579	2012
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40
Coq.Init.Datatypes.eq_true_ind_r	40	1.66.14	search with cache (only 1: intros A P H; only 1: destruct 1; only 1: assumption).	1.07164907455	16182
Coq.Init.Datatypes.eq_true_rec_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00880193710327	4
Coq.Init.Datatypes.eq_true_rect_r	40	1.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00970315933228	4
Coq.Init.Datatypes.surjective_pairing	40	2.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.00865197181702	5
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.0	search with cache (only 1: destruct H; only 1: trivial).	0.0114040374756	2
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40
Coq.Init.Datatypes.CompOpp_inj	40	0.3.3.3.0.3.3.3.0.1	search with cache (only 1: destruct c, c'; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: reflexivity).	4.400411129	19816
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40	0.7.0.0.7.0.0.5.0.0.12.4.29	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: intros; only 1: red; only 1: destruct c; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto; only 1: constructor; only 1: inversion_clear H; only 1: auto).	34.7704818249	270111
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00258803367615	3
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	2.2.0.1.2	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0151581764221	71
Coq.Init.Logic.iff_sym	40	0.0.0.3	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00465393066406	12
Coq.Init.Logic.and_iff_compat_l	40	0.0.2.0.0.0.2.0.1.3	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.0599210262299	610
Coq.Init.Logic.and_iff_compat_r	40	0.0.1.0.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: auto).	0.0446760654449	261
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.1.0.0.1.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto; only 1: intros [?| ?]; only 1: left; only 1: auto; only 1: right; only 1: auto).	0.141246080399	1007
Coq.Init.Logic.imp_iff_compat_l	40	0.0.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00737619400024	14
Coq.Init.Logic.imp_iff_compat_r	40	0.0.0.3	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00578999519348	14
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00447607040405	4
Coq.Init.Logic.neg_false	40	2.12.9.2.3.3.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	1.59048104286	16373
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.8.3.0.0.8.3.3	search with cache (only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: auto; only 1: auto; only 1: intros [HypL HypR]; only 1: split; only 1: auto; only 1: auto).	1.55908799171	9089
Coq.Init.Logic.and_assoc	40	6.6.0.7.7.3.5.0.7.0.7.3.1.0	search with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: split; only 1: apply HypL; only 1: apply HypR; only 1: apply HypR).	21.4886419773	161603
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.3.11.0.0.0.3.11.3	search with cache (only 1: split; only 1: intros [?| ?]; only 1: right; only 1: auto; only 1: left; only 1: auto; only 1: intros [?| ?]; only 1: right; only 1: auto; only 1: left; only 1: auto).	2.57390117645	19031
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	0.2	search with cache (only 1: intros; only 1: assumption).	0.00612711906433	4
Coq.Init.Logic.iff_to_and	40	0.0.3.3.5	search with cache (only 1: intros; only 1: apply and_iff_compat_r; only 1: split; only 1: auto; only 1: auto).	0.27446103096	652
Coq.Init.Logic.inst	40	9	search with cache (only 1: auto).	0.00801420211792	19
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00641179084778	2
Coq.Init.Logic.absurd	40	8.0.14.6.6.1	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: auto).	0.644595146179	6614
Coq.Init.Logic.eq_sym	40	0.16	search with cache (only 1: destruct 1; only 1: auto).	0.0413498878479	198
Coq.Init.Logic.eq_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00902390480042	4
Coq.Init.Logic.eq_trans_r	40	2.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00815200805664	4
Coq.Init.Logic.f_equal	40	1.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00733184814453	3
Coq.Init.Logic.not_eq_sym	40	26.2	search with cache (only 1: destruct 2; only 1: auto).	0.344425916672	1899
Coq.Init.Logic.eq_sind_r	40	0.6	search with cache (only 1: destruct 2; only 1: auto).	0.0101358890533	15
Coq.Init.Logic.eq_ind_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00852012634277	4
Coq.Init.Logic.eq_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00906801223755	4
Coq.Init.Logic.eq_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00937676429749	4
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.2.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.0113911628723	5
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00822901725769	2
Coq.Init.Logic.rew_opp_l	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00827717781067	2
Coq.Init.Logic.f_equal2	40	1.3.8	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.104506015778	280
Coq.Init.Logic.f_equal3	40	0.1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0120618343353	5
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0138890743256	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0167660713196	7
Coq.Init.Logic.f_equal_compose	40
Coq.Init.Logic.eq_trans_refl_l	40	0.11	search with cache (only 1: destruct e; only 1: reflexivity).	0.0168402194977	46
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00881695747375	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00789713859558	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00846195220947	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0086350440979	2
Coq.Init.Logic.eq_trans_assoc	40
Coq.Init.Logic.rew_map	40	0.2	search with cache (only 1: destruct H; only 1: reflexivity).	0.00916790962219	4
Coq.Init.Logic.eq_trans_map	40
Coq.Init.Logic.map_subst	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00864601135254	2
Coq.Init.Logic.map_subst_map	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00897479057312	2
Coq.Init.Logic.rew_swap	40	0.0	search with cache (only 1: destruct H, 1; only 1: reflexivity).	0.00987792015076	2
Coq.Init.Logic.rew_compose	40	3.0	search with cache (only 1: destruct H2; only 1: reflexivity).	0.0101139545441	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0	search with cache (only 1: reflexivity).	0.00705504417419	1
Coq.Init.Logic.eq_trans_map_distr	40	0.0.2.2.9	search with cache (only 1: unfold f_equal; only 1: destruct e; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.285840988159	372
Coq.Init.Logic.eq_sym_map_distr	40	0.3	search with cache (only 1: destruct e; only 1: reflexivity).	0.0100522041321	5
Coq.Init.Logic.eq_trans_sym_distr	40	0.3.0	search with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0116031169891	6
Coq.Init.Logic.eq_trans_rew_distr	40	0.1	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.0096378326416	3
Coq.Init.Logic.rew_const	40	0.7	search with cache (only 1: destruct e; only 1: reflexivity).	0.00938892364502	9
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	0.10	search with cache (only 1: destruct 1; only 1: auto).	0.171993970871	99
Coq.Init.Logic.inhabited_covariant	40	0.3.9	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.158606052399	85
Coq.Init.Logic.eq_stepl	40	1.4.2.11	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: symmetry; only 1: destruct H; only 1: auto).	0.21777009964	395
Coq.Init.Logic.iff_stepl	40	0.0.2.2	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.153856039047	25
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.5.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0241010189056	17
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.014151096344	2
Coq.Init.Logic_Type.identity_sym	40	3.6	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0110659599304	24
Coq.Init.Logic_Type.identity_trans	40	1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00663304328918	4
Coq.Init.Logic_Type.identity_congr	40	1.0	search with cache (only 1: destruct 1; only 1: reflexivity).	0.00531911849976	3
Coq.Init.Logic_Type.not_identity_sym	40	1.15.2	search with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.168072938919	920
Coq.Init.Logic_Type.identity_ind_r	40	5.19	search with cache (only 1: destruct 2; only 1: assumption).	0.219707012177	944
Coq.Init.Logic_Type.identity_rec_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00785899162292	4
Coq.Init.Logic_Type.identity_rect_r	40	1.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00687885284424	4
Coq.Init.Specif.sigT_eta	40	0.0	search with cache (only 1: destruct p; only 1: auto).	0.010017156601	2
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00632882118225	2
Coq.Init.Specif.sigT2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00647807121277	2
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00694894790649	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.16.15.14	search with cache (only 1: destruct 1; only 1: split; only 1: exists x; only 1: auto).	0.437471151352	4269
Coq.Init.Specif.inhabited_sig_to_exists	40	4.10.0.70.95	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: auto).	4.17454814911	87461
Coq.Init.Specif.eq_existT_uncurried	40	0.1.1.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0137348175049	6
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0111360549927	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0149219036102	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.38.6.8	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: destruct 1; only 1: reflexivity).	7.17371678352	21841
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0116150379181	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.1	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.014298915863	4
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.3.0.7	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: destruct pq as [p q]; only 1: simpl in *; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.248121976852	192
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	0.0.0.4.10.5.1.4	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: apply eq_exist_uncurried).	1.86184501648	5579
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0137701034546	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	2.0.0.4.7.11	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.14290595055	1742
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	0.0.0.2.2.7.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_existT2_uncurried).	7.1982460022	13956
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0130391120911	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0179009437561	4
Coq.Init.Specif.eq_sig2_uncurried	40	2.0.0.4.0.13	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: destruct pqr as [p q r]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	1.15345096588	1235
Coq.Init.Specif.eq_sig2_uncurried_iff	40	0.0.0.2.2.8.6.2.2	search with cache (only 1: split; only 1: intro p; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: apply eq_exist2_uncurried).	9.45395302773	15940
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.013463973999	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.1.1	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.0132279396057	21
Coq.funind.Recdef.le_lt_SS	40	22	search with cache (only 1: intuition).	0.141884088516	241
Coq.funind.Recdef.Splus_lt	40	41	search with cache (only 1: intuition).	1.35298204422	1864
Coq.funind.Recdef.SSplus_lt	40	1.0.25	search with cache (only 1: constructor; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	23.249008894	32037
Coq.funind.Recdef.max	40
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.1.2.0.0.0.5.7	search with cache (only 1: split; only 1: intro; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.627292871475	725
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0276539325714	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	5.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.113940000534	33
Coq.QArith.Qreduction.Qminus'_correct	40
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40
Coq.QArith.Qreduction.Qminus'_comp_Proper	40
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40
Coq.QArith.Qreduction.Qred_le	40
Coq.QArith.Qreduction.Qred_lt	40
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos.ggcd a d) as [x [y z]]; only 1: simpl; only 1: congruence).	0.11820101738	37
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	9.2.0.1.0.3	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: repeat rewrite Qred_correct; only 1: apply Qabs_case; only 1: trivial; only 1: apply (Qopp_le_compat x 0)).	7.30683112144	3446
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.0.0.0.1	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: case Qred_abs; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	0.0509419441223	6
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	21.4.12.2	search with cache (only 1: Qc_unfolds; only 1: set (a := x)  at 1; only 1: fold (this x); only 1: auto using Qle_Qabs).	25.1011412144	16467
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	3.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.903354167938	401
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40	0.0.0.0.1.0.7	search with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: intuition congruence; only 1: simpl in *; only 1: congruence; only 1: simpl in *; only 1: congruence).	1.24869084358	627
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	37.3.0	search with cache (only 1: constructor; only 1: unfold Qeq; only 1: now destruct n).	7.44937396049	6699
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.00570511817932	1
Coq.QArith.Qfield.ex2	40	5	search with cache (only 1: exact Qplus_comm).	0.0267598628998	15
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0174078941345	2
Coq.QArith.Qfield.ex4	40	3	search with cache (only 1: reflexivity).	0.0137159824371	14
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0111730098724	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0772349834442	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intro; only 1: ring).	0.0138981342316	3
Coq.QArith.Qfield.ex8	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0165121555328	3
Coq.QArith.Qfield.ex9	40	1.0	search with cache (only 1: intro; only 1: ring).	0.0135459899902	3
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intro; only 1: intro; only 1: ring).	0.0392000675201	7
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0256481170654	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40
Coq.QArith.Qcanon.Qred_involutive	40	9.2.3	search with cache (only 1: intros; only 1: apply Qred_complete; only 1: apply Qred_correct).	2.92131996155	1930
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.0	search with cache (only 1: unfold Qccompare; only 1: intros; only 1: auto with *).	0.0205008983612	3
Coq.QArith.Qcanon.Qcgt_alt	40	1.2.0.0	search with cache (only 1: intros; only 1: unfold Qccompare; only 1: symmetry; only 1: apply Z.gt_lt_iff).	0.0208151340485	7
Coq.QArith.Qcanon.Qcle_alt	40	4	search with cache (only 1: auto with *).	0.00914311408997	5
Coq.QArith.Qcanon.Qcge_alt	40	2.1	search with cache (only 1: symmetry; only 1: apply Z.ge_le_iff).	0.0173408985138	5
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	5	search with cache (only 1: discriminate).	0.011244058609	6
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	13.2.1.0	search with cache (only 1: unfold Q2Qc; only 1: intros H; only 1: qc; only 1: ring).	0.678808927536	808
Coq.QArith.Qcanon.Qcplus_0_r	40	14.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.696182966232	563
Coq.QArith.Qcanon.Qcplus_comm	40	6.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.0569319725037	9
Coq.QArith.Qcanon.Qcopp_involutive	40	11.1.18	search with cache (only 1: intros Hnin; only 1: qc; only 1: ring).	0.77694606781	1622
Coq.QArith.Qcanon.Qcplus_opp_r	40	1.0.18.1.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: ring).	4.15940594673	1726
Coq.QArith.Qcanon.Qcmult_assoc	40	13.0.14	search with cache (only 1: intros x y H; only 1: qc; only 1: ring).	5.69659090042	5904
Coq.QArith.Qcanon.Qcmult_0_l	40	3.0	search with cache (only 1: intros; only 1: auto with qarith).	0.0383179187775	19
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40
Coq.QArith.Qcanon.Qcmult_1_r	40	10.3.1.0.7.0.0	search with cache (only 1: intros; only 1: qc; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	3.92855811119	3419
Coq.QArith.Qcanon.Qcmult_comm	40	9.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	0.269820928574	132
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40	4.6.2	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: qc; only 1: ring).	1.6480140686	761
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40	8.0.3.3	search with cache (only 1: intros a b; only 1: intros (c, Hc); only 1: qc; only 1: ring).	4.56606793404	2352
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.3.3.2.9	search with cache (only 1: intros (x1, x2); only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	1.51240611076	1733
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.0.57	search with cache (only 1: red; only 1: intros; only 1: auto with qarith).	2.33283495903	11149
Coq.QArith.Qcanon.Qcle_antisym	40	1.0.0.12	search with cache (only 1: intro n; only 1: unfold Qcle; only 1: intros; only 1: auto with qarith).	0.858778953552	463
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40	4.10.5.0	search with cache (only 1: intros; only 1: contradict H; only 1: destruct H; only 1: apply Z.lt_irrefl).	1.16872501373	1063
Coq.QArith.Qcanon.Qclt_le_weak	40	5.0	search with cache (only 1: unfold Qcle; only 1: auto with *).	0.0691440105438	44
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.3.0.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.17529797554	120
Coq.QArith.Qcanon.Qcnot_lt_le	40	2.9.1	search with cache (only 1: unfold Qclt; only 1: intros b c Hc H; only 1: auto with qarith).	0.863896846771	1007
Coq.QArith.Qcanon.Qcnot_le_lt	40	3.0.1	search with cache (only 1: unfold Qclt; only 1: intros; only 1: auto with qarith).	0.058159828186	57
Coq.QArith.Qcanon.Qclt_not_le	40	8.6.2	search with cache (only 1: unfold Qcle; only 1: intros (a1, a2) (b1, b2); only 1: auto with qarith).	2.03484487534	2580
Coq.QArith.Qcanon.Qcle_not_lt	40	0.1.18.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	4.34476709366	5126
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40	0.0.3.0	search with cache (only 1: unfold Qcle, Qclt; only 1: unfold Qlt, Qle; only 1: intros; only 1: exact (Z_lt_le_dec (Qnum x * QDen y) (Qnum y * QDen x))).	0.0312819480896	25
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40	8.2.9.1.0	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: intros (a1, a2) (b1, b2) (c1, c2); only 1: repeat rewrite Qred_correct; only 1: apply Qmult_le_compat_r).	10.5655770302	7686
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40	1.1.12.0.1.0.0.0	search with cache (only 1: unfold Qcmult, Qcle, Qclt; only 1: intros; only 1: simpl in *; only 1: repeat rewrite Qred_correct; only 1: rewrite !Qred_correct in * |-; only 1: apply Qmult_lt_r; only 1: eauto; only 1: eauto).	16.2310512066	10911
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.13.0	search with cache (only 1: induction n; only 1: tauto; only 1: simpl; only 1: auto with qarith).	1.14922809601	1094
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40	0.1.24	search with cache (only 1: fix odd_spec 1; only 1: intros; only 1: auto).	5.30208802223	4883
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.1.4.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite <- Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_r; only 1: auto).	0.918142080307	475
Coq.QArith.Qreals.IZR_nz	40	0	search with cache (only 1: auto with real).	0.0132801532745	1
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40	0.0.2.0.2.0.0	search with cache (only 1: unfold Qeq, Q2R; only 1: intros (x1, x2) (y1, y2); only 1: simpl; only 1: simpl_mult; only 1: do 2 rewrite mult_IZR; only 1: field; only 1: auto).	0.642984867096	227
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	1	search with cache (only 1: reflexivity).	0.00661301612854	2
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	2.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0267338752747	11
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	0.12	search with cache (only 1: compute; only 1: easy).	0.0261619091034	60
Coq.QArith.QArith_base.Qeq_sym	40	0	search with cache (only 1: auto with qarith).	0.00777006149292	1
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40	0.0.5.0	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: decide equality; only 1: apply Pos.eq_dec; only 1: apply Pos.eq_dec).	0.0439131259918	9
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	0	search with cache (only 1: apply Zeq_is_eq_bool).	0.00712609291077	1
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00757122039795	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.00821614265442	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	0.2	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: auto with qarith).	0.0115718841553	4
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: now symmetry).	0.00935316085815	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	1.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: now symmetry).	0.0558860301971	5
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.1.2.0.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.114331960678	47
Coq.QArith.QArith_base.Qmake_Qdiv	40
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	0.4	search with cache (only 1: intro n; only 1: now subst).	0.0116288661957	6
Coq.QArith.QArith_base.Qplus_assoc	40
Coq.QArith.QArith_base.Qplus_0_l	40	0.0.0.17	search with cache (only 1: intros (b, Hb); only 1: unfold Qeq; only 1: simpl in *; only 1: ring).	0.402417898178	743
Coq.QArith.QArith_base.Qplus_0_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.030210018158	5
Coq.QArith.QArith_base.Qplus_comm	40	4.0.0.0.1.11	search with cache (only 1: intros p2; only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	4.01123118401	2536
Coq.QArith.QArith_base.Qopp_involutive	40	1.4.1.4	search with cache (only 1: unfold Qeq; only 1: intros; only 1: simpl in *; only 1: ring).	0.867995023727	127
Coq.QArith.QArith_base.Qplus_opp_r	40	1.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0253529548645	5
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0746119022369	5
Coq.QArith.QArith_base.Qmult_0_l	40	5.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: auto).	0.0168211460114	8
Coq.QArith.QArith_base.Qmult_0_r	40	5.0.2.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.193716049194	123
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	0.1.0.0.0.4	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.857171058655	297
Coq.QArith.QArith_base.Qmult_comm	40	2.3.0.1.6	search with cache (only 1: intros a b; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: ring).	2.81505894661	1769
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0496871471405	5
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0534579753876	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40
Coq.QArith.QArith_base.inject_Z_mult	40	5	search with cache (only 1: now constructor).	0.00823616981506	6
Coq.QArith.QArith_base.inject_Z_opp	40	6	search with cache (only 1: now constructor).	0.00852298736572	7
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0330379009247	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	25.19	search with cache (only 1: red; only 1: f_equiv).	0.368216991425	1767
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40	13.1	search with cache (only 1: unfold Qeq, Qlt, Qcompare; only 1: Z.order).	0.15142416954	241
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	16.9	search with cache (only 1: unfold Qle, Qlt; only 1: Z.order).	1.4656059742	1849
Coq.QArith.QArith_base.Qnot_le_lt	40	12.10	search with cache (only 1: unfold Qle, Qlt; only 1: now apply Z.nle_gt).	0.783732891083	564
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00766396522522	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00736713409424	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.2.3.1.0.1.0.6	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	5.04176712036	3274
Coq.QArith.QArith_base.Qmult_lt_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	1.1.0.2.3.0.5.0.5.6	search with cache (only 1: intros (x1, x2); only 1: red; only 1: simpl; only 1: red; only 1: case x1; only 1: auto; only 1: auto; only 1: simpl; only 1: unfold Qle, Qlt; only 1: auto).	9.61934399605	6653
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	6.0.0.0.2.0.2.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	15.3534369469	6208
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40	4.0.23	search with cache (only 1: intros EQ; only 1: simpl; only 1: now Z.nzsimpl).	0.341241836548	739
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.4.2.0.0	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	1.05936312675	350
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40
Coq.QArith.Qround.Qceiling_comp_Proper	40	2.3.0.0.2.0.0.1.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: auto with *; only 1: unfold Qceiling; only 1: rewrite <- Z.opp_le_mono; only 1: symmetry in H; only 1: auto with *).	5.51984596252	3565
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40	5.4.5.4	search with cache (only 1: intros [[| n| n] d] Ha; only 1: reflexivity; only 1: reflexivity; only 1: now subst).	0.964567899704	1184
Coq.QArith.Qabs.Qabs_neg	40	2.3.3.0.0.0.1.1.1	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	8.35436296463	7822
Coq.QArith.Qabs.Qabs_nonneg	40	1.0.1.0.1.0.7	search with cache (only 1: intros [[| n| n] d] Ha; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate; only 1: simpl in *; only 1: discriminate).	0.509665966034	501
Coq.QArith.Qabs.Zabs_Qabs	40	2.2.0.0.0	search with cache (only 1: simpl; only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: auto).	0.0341110229492	9
Coq.QArith.Qabs.Qabs_opp	40	1.0.0.3.5.3	search with cache (only 1: intros; only 1: simpl; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	1.49099111557	1169
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40
Coq.QArith.Qabs.Qabs_Qinv	40
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.6	search with cache (only 1: red; only 1: auto).	0.00812888145447	8
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	1	search with cache (only 1: firstorder).	0.00707602500916	2
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00576400756836	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	6.7.1.14.2	search with cache (only 1: split; only 1: destruct 2; only 1: firstorder; only 1: red; only 1: firstorder).	5.68512797356	18079
Coq.Classes.CMorphisms.subrelation_id_proper	40	0	search with cache (only 1: firstorder).	0.00734901428223	1
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0106449127197	1
Coq.Classes.CMorphisms.subrelation_refl	40	5.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.0128111839294	8
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: simpl_crelation).	0.0114738941193	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	3	search with cache (only 1: simpl_crelation).	0.0109708309174	4
Coq.Classes.CMorphisms.pointwise_subrelation	40	1	search with cache (only 1: simpl_crelation).	0.012323141098	2
Coq.Classes.CMorphisms.forall_subrelation	40	6.1	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.021742105484	9
Coq.Classes.CMorphisms.iff_impl_subrelation	40	4	search with cache (only 1: simpl_crelation).	0.0112299919128	5
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00772500038147	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0.0	search with cache (only 1: reduce; only 1: firstorder).	0.00989198684692	2
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00763511657715	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	2.7	search with cache (only 1: unfold flip; only 1: firstorder).	0.16520190239	80
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	4.2	search with cache (only 1: reduce; only 1: firstorder).	0.0293309688568	8
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0173518657684	6
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.726885795593	311
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.177020072937	118
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.867223024368	462
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	0.0782279968262	25
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40	9.2	search with cache (only 1: intros A R H x x0 y X X0; only 1: firstorder).	2.66962599754	1535
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	10	search with cache (only 1: firstorder).	0.04922914505	59
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	5.2.0	search with cache (only 1: intros A R H x y X x0 y0 X0; only 1: simpl_crelation; only 1: firstorder).	0.0757868289948	10
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	4	search with cache (only 1: simpl_crelation).	0.0581750869751	5
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	0.4	search with cache (only 1: unfold respectful, relation_equivalence in *; only 1: firstorder).	0.0114140510559	6
Coq.Classes.CMorphisms.flip_respectful	40	9	search with cache (only 1: firstorder).	0.0332798957825	33
Coq.Classes.CMorphisms.flip1	40	3.0.3	search with cache (only 1: hnf; only 1: intros; only 1: auto).	0.0132229328156	9
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00602006912231	1
Coq.Classes.CMorphisms.eq_subrelation	40	2	search with cache (only 1: simpl_crelation).	0.00847101211548	3
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00583815574646	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00506091117859	1
Coq.Classes.CMorphisms.proper_proper	40	0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0130100250244	3
Coq.Classes.CMorphisms.proper_normalizes_proper	40	10	search with cache (only 1: firstorder).	0.0376720428467	40
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00565481185913	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	3.5	search with cache (only 1: intros x y H'; only 1: simpl_crelation).	0.0567619800568	31
Coq.Classes.CMorphisms.proper_sym_flip_2	40	3.0.4.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: intros x x' Hxx'; only 1: simpl_crelation).	0.373472929001	125
Coq.Classes.CMorphisms.proper_sym_impl_iff	40	18.3	search with cache (only 1: simpl_crelation; only 1: firstorder).	1.88603305817	1324
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	7.9	search with cache (only 1: simpl_crelation; only 1: eauto).	0.979742050171	810
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40	0.0.1.0.0.1.11.4	search with cache (only 1: intros A B C RA RB RC f mor x y X x0 y0 X0; only 1: split; only 1: apply mor; only 1: auto; only 1: auto; only 1: apply mor; only 1: auto; only 1: auto).	10.1802949905	5482
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	1.1.0.0.3	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0423901081085	44
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	0.0.2.0	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.0171229839325	6
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00906300544739	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00546097755432	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.0121681690216	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.208670854568	1
Coq.Classes.CRelationClasses.complement_inverse	40	2	search with cache (only 1: auto).	0.00744390487671	3
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00786089897156	2
Coq.Classes.CRelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: assumption).	0.0100429058075	7
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.01713514328	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0227100849152	6
Coq.Classes.CRelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0172741413116	6
Coq.Classes.CRelationClasses.flip_PER	40	5	search with cache (only 1: firstorder).	0.024297952652	6
Coq.Classes.CRelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0257830619812	1
Coq.Classes.CRelationClasses.complement_Irreflexive	40	7	search with cache (only 1: firstorder).	0.0112199783325	14
Coq.Classes.CRelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00728893280029	2
Coq.Classes.CRelationClasses.iffT_Reflexive	40	1	search with cache (only 1: firstorder).	0.0068187713623	2
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.084331035614	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00652194023132	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.00715398788452	2
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0138599872589	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	0	search with cache (only 1: firstorder).	0.0280659198761	1
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	0.0.2.0	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.01970911026	6
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.011412858963	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00531697273254	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00945806503296	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.200023889542	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40	45.39.0	search with cache (only 1: destruct x; only 1: destruct y; only 1: do 2 Morphisms.f_equiv).	5.43603014946	16058
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	2	search with cache (only 1: auto).	0.00917887687683	3
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	1	search with cache (only 1: firstorder).	0.00792503356934	2
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0	search with cache (only 1: hnf; only 1: assumption).	0.00931906700134	7
Coq.Classes.RelationClasses.flip_Antisymmetric	40	7.0	search with cache (only 1: hnf; only 1: firstorder).	0.0208721160889	16
Coq.Classes.RelationClasses.flip_PreOrder	40	5	search with cache (only 1: firstorder).	0.0241119861603	6
Coq.Classes.RelationClasses.flip_StrictOrder	40	5	search with cache (only 1: firstorder).	0.0198900699615	6
Coq.Classes.RelationClasses.flip_PER	40	3	search with cache (only 1: firstorder).	0.0291950702667	4
Coq.Classes.RelationClasses.flip_Equivalence	40	0	search with cache (only 1: firstorder).	0.0277988910675	1
Coq.Classes.RelationClasses.complement_Irreflexive	40	5	search with cache (only 1: firstorder).	0.00844120979309	6
Coq.Classes.RelationClasses.complement_Symmetric	40	1	search with cache (only 1: firstorder).	0.00857186317444	2
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40	0.1.2.2	search with cache (only 1: intro n; only 1: induction n; only 1: firstorder; only 1: firstorder).	0.0132060050964	9
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.0.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.0178709030151	5
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00975298881531	4
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.1.1.0.1.0	search with cache (only 1: intro l; only 1: induction l; only 1: firstorder; only 1: intros x y z H H0 x0; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.550323009491	9
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	1	search with cache (only 1: firstorder).	0.00728893280029	2
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.0143280029297	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	2	search with cache (only 1: firstorder).	0.0353739261627	3
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	5	search with cache (only 1: firstorder).	0.0131189823151	6
Coq.Classes.Morphisms.eq_proper_proxy	40	0.5	search with cache (only 1: red; only 1: auto).	0.00781083106995	7
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00755190849304	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00670289993286	1
Coq.Classes.Morphisms.pointwise_pointwise	40	0.1.12.8.5	search with cache (only 1: reduce_goal; only 1: split; only 1: destruct 2; only 1: firstorder; only 1: firstorder).	0.5968708992	1578
Coq.Classes.Morphisms.subrelation_id_proper	40	1.2	search with cache (only 1: reduce; only 1: firstorder).	0.0102710723877	5
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.0149300098419	1
Coq.Classes.Morphisms.subrelation_refl	40	0	search with cache (only 1: firstorder).	0.00875091552734	1
Coq.Classes.Morphisms.subrelation_proper	40	1	search with cache (only 1: firstorder).	0.00721096992493	2
Coq.Classes.Morphisms.proper_subrelation_proper	40	0.4.3.2	search with cache (only 1: unfold subrelation; only 1: reduce; only 1: subst; only 1: firstorder).	0.21648812294	100
Coq.Classes.Morphisms.pointwise_subrelation	40	1.4	search with cache (only 1: reduce; only 1: firstorder).	0.0110709667206	7
Coq.Classes.Morphisms.forall_subrelation	40	0.4	search with cache (only 1: unfold subrelation; only 1: firstorder).	0.0208210945129	19
Coq.Classes.Morphisms.iff_impl_subrelation	40	1	search with cache (only 1: firstorder).	0.0127720832825	18
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00710821151733	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	0.0.26	search with cache (only 1: compute; only 1: intros H x y H0 a; only 1: intuition).	3.10346388817	4564
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	6.0.1	search with cache (only 1: reduce; only 1: red in H0; only 1: firstorder).	0.0454699993134	21
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	5	search with cache (only 1: firstorder).	0.0255541801453	6
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	8.1	search with cache (only 1: intros R H x x0 y H0 H1; only 1: firstorder).	1.41961503029	716
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	0.10745882988	118
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.893468141556	487
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	13	search with cache (only 1: firstorder).	0.0600018501282	80
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40
Coq.Classes.Morphisms.PER_morphism_obligation_1	40	15.0	search with cache (only 1: intros R H x x0 y H0; only 1: firstorder).	9.71670818329	10774
Coq.Classes.Morphisms.symmetric_equiv_flip	40	11.0	search with cache (only 1: hnf; only 1: firstorder).	0.0311920642853	77
Coq.Classes.Morphisms.compose_proper_obligation_1	40	1.0	search with cache (only 1: intros RA RB RC f mor x y H x0 y0 H0; only 1: firstorder).	0.0113458633423	3
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	3.5.6	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0852379798889	156
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	8	search with cache (only 1: firstorder).	0.00657510757446	9
Coq.Classes.Morphisms.flip_respectful	40	7.3	search with cache (only 1: simpl_relation; only 1: firstorder).	0.100810050964	85
Coq.Classes.Morphisms.flip1	40	5.3	search with cache (only 1: hnf; only 1: apply H).	0.0185611248016	23
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00505900382996	1
Coq.Classes.Morphisms.eq_subrelation	40	2.3	search with cache (only 1: unfold subrelation; only 1: simpl_relation).	0.0169198513031	12
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00578808784485	1
Coq.Classes.Morphisms.proper_eq	40	1	search with cache (only 1: firstorder).	0.00494909286499	2
Coq.Classes.Morphisms.proper_proper	40	1.0.0.0	search with cache (only 1: reduce; only 1: subst; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: firstorder).	0.0156419277191	11
Coq.Classes.Morphisms.proper_normalizes_proper	40	6.0	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0158050060272	8
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.00533986091614	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	2.1	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.0145280361176	16
Coq.Classes.Morphisms.proper_sym_flip_2	40	3.6	search with cache (only 1: unfold flip, respectful; only 1: firstorder).	0.37490606308	202
Coq.Classes.Morphisms.proper_sym_impl_iff	40	0.1.0.1.6.12	search with cache (only 1: intros R H x y H0 x0 y0 H1; only 1: split; only 1: apply H0; only 1: intuition; only 1: apply H0; only 1: intuition).	2.54866290092	3337
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	0	search with cache (only 1: firstorder).	0.0908851623535	1
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00931286811829	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.0227310657501	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00781083106995	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	0	search with cache (only 1: firstorder).	0.00776791572571	1
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0180609226227	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.158442020416	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0.0.5	search with cache (only 1: intros n d; only 1: simpl in *; only 1: firstorder).	0.0223059654236	14
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0103359222412	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00853514671326	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0077850818634	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0095489025116	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.00875401496887	1
Coq.Classes.RelationPairs.snd_compat	40	0	search with cache (only 1: firstorder).	0.00979399681091	1
Coq.Classes.RelationPairs.RelCompFun_compat	40	3.14	search with cache (only 1: compute; only 1: firstorder).	0.348793983459	151
Coq.Classes.DecidableClass.Decidable_sound	40	1.6.1.34.18.3	search with cache (only 1: intro H; only 1: intro n; only 1: case n; only 1: intro z; only 1: intros [? ?]; only 1: auto).	12.853320837	100040
Coq.Classes.DecidableClass.Decidable_complete	40	0.9.4.36.20.6	search with cache (only 1: intro H; only 1: intro n; only 1: case n; only 1: intro z; only 1: intros [? ?]; only 1: assumption).	22.1233730316	153902
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_not_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40	2.0.3.3.8.6	search with cache (only 1: destruct x, y; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: rewrite <- ?negb_true_iff, ?Nat.negb_even, ?Nat.odd_spec, ?Nat.even_spec; only 1: intuition).	2.02988195419	2314
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40	9	search with cache (only 1: apply Nat.leb_le).	0.0836210250854	30
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40	8	search with cache (only 1: apply Z.eqb_eq).	0.081661939621	29
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40	1.60.151	search with cache (only 1: destruct x; only 1: destruct y; only 1: reflexivity).	9.1010351181	29859
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	18	search with cache (only 1: now subst).	0.0901479721069	406
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00584816932678	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00673317909241	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40
Coq.Classes.SetoidClass.equiv_nequiv_trans	40	0.6.1.10.14.1.1	search with cache (only 1: intros a b; only 1: unfold complement; only 1: intros h1 h2; only 1: intro; only 1: intro Hxz; only 1: rewrite Hxz; only 1: auto).	20.9462249279	28542
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40	1.0.1	search with cache (only 1: intros R R' EQ a a' Ha WF; only 1: compute; only 1: firstorder).	0.0235240459442	5
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	5.1.1	search with cache (only 1: intros R R' EQ a a' Ha WF; only 1: compute; only 1: firstorder).	0.076938867569	31
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00895500183105	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	0.0	search with cache (only 1: do 2 red; only 1: auto).	0.00835585594177	2
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	5	search with cache (only 1: firstorder).	0.164021968842	6
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	1.1.1.1.0	search with cache (only 1: intro; only 1: intro; only 1: intro; only 1: intro; only 1: firstorder).	0.032881975174	9
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	0	search with cache (only 1: firstorder).	0.00707316398621	1
Coq.PArith.Pnat.Pos2Nat.inj_succ	40
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	5	search with cache (only 1: auto).	0.00866079330444	6
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40
Coq.PArith.Pnat.Pos2Nat.is_pos	40
Coq.PArith.Pnat.Pos2Nat.id	40
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.1.0.5	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H).	0.274918079376	191
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	7.0.0.0.1.0.3	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	0.491256952286	600
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0160989761353	3
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	7.1.0.0.0.1.17	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: auto; only 1: intro H; only 1: now subst).	2.13533091545	2305
Coq.PArith.Pnat.SuccNat2Pos.inv	40
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.00968909263611	3
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40	6.10.9	search with cache (only 1: intros q; only 1: rewrite !Pmult_nat_mult; only 1: now Nat.nzsimpl).	3.22756791115	4637
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40	8.1	search with cache (only 1: intros x0 y; only 1: decide equality).	0.106796979904	120
Coq.PArith.BinPos.Pos.xI_succ_xO	40	4	search with cache (only 1: auto).	0.00935196876526	5
Coq.PArith.BinPos.Pos.succ_discr	40	48.29.28.2.18	search with cache (only 1: destruct p; only 1: intro n; only 1: easy; only 1: easy; only 1: now PeanoNat.Nat.nzsimpl).	29.8431100845	128088
Coq.PArith.BinPos.Pos.pred_double_spec	40	12	search with cache (only 1: easy).	0.0213060379028	46
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.2.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0960991382599	66
Coq.PArith.BinPos.Pos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.00993514060974	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	1.1.0.1.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now f_equal).	0.0289869308472	11
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0161769390106	1
Coq.PArith.BinPos.Pos.pred_succ	40	2.0.1.0.1.0.1.0.0.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: now destruct p; only 1: now f_equal).	4.05097317696	2139
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.0.5.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: auto).	0.487211942673	360
Coq.PArith.BinPos.Pos.add_1_r	40	5	search with cache (only 1: now destruct p).	0.0154871940613	13
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00611400604248	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.2	search with cache (only 1: simpl; only 1: f_equal).	0.0100572109222	4
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.0104761123657	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.2	search with cache (only 1: apply succ_inj; only 1: auto).	0.0100309848785	4
Coq.PArith.BinPos.Pos.mul_1_r	40
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.1.0.1.6.1.3	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: f_equal).	1.70180106163	795
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.2.3.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.0414779186249	37
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0180559158325	1
Coq.PArith.BinPos.Pos.square_xO	40	4.0.2	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.0211820602417	13
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	0.1.5.1.1.5.0.1.13.3	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: intro q; only 1: intros; only 1: simpl; only 1: f_equal; only 1: now rewrite IHp; only 1: intros; only 1: simpl; only 1: now rewrite IHp; only 1: trivial).	11.2896661758	18495
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_succ_r	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_ind	40
Coq.PArith.BinPos.Pos.iter_invariant	40	5.5.0.1.7.0	search with cache (only 1: intros; only 1: induction p as [| p IHp] using peano_ind; only 1: simpl; only 1: auto; only 1: rewrite iter_succ; only 1: auto).	18.8557889462	4684
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0204598903656	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40	0.19.3	search with cache (only 1: revert p q; only 1: fix even_spec 1; only 1: Bool.destr_bool).	4.39186096191	7170
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.1.4	search with cache (only 1: unfold leb, le; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.726866960526	171
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.2.3	search with cache (only 1: unfold ltb, lt; only 1: rewrite compare_cont_spec; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.475964069366	165
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.184581041336	37
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.1.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.170293092728	37
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	1.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.134869098663	22
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	1.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.162047863007	22
Coq.PArith.BinPos.Pos.compare_xO_xO	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: now split; only 1: trivial; only 1: easy').	0.0137650966644	6
Coq.PArith.BinPos.Pos.compare_xI_xI	40	1.0.1.0	search with cache (only 1: destruct compare; only 1: now split; only 1: trivial; only 1: easy').	0.0135588645935	6
Coq.PArith.BinPos.Pos.compare_xI_xO	40
Coq.PArith.BinPos.Pos.compare_xO_xI	40
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	0.2.7.6.4.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p as [p IHp| p IHp| ]; only 1: trivial; only 1: trivial; only 1: simpl; only 1: auto).	1.19774508476	2815
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	0.1.0.1.0	search with cache (only 1: unfold lt; only 1: destruct compare; only 1: now split; only 1: now split; only 1: now split).	0.0174129009247	7
Coq.PArith.BinPos.Pos.compare_le_iff	40	1.0.0.0.1	search with cache (only 1: unfold le; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0197710990906	7
Coq.PArith.BinPos.Pos.gt_lt_iff	40
Coq.PArith.BinPos.Pos.gt_lt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0568008422852	17
Coq.PArith.BinPos.Pos.lt_gt	40	1.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0557641983032	17
Coq.PArith.BinPos.Pos.ge_le_iff	40	3.0.1	search with cache (only 1: unfold le; only 1: unfold ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.195108175278	42
Coq.PArith.BinPos.Pos.ge_le	40	1.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.137099981308	39
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00593709945679	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	1.8.0	search with cache (only 1: unfold gt, le, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.30739402771	147
Coq.PArith.BinPos.Pos.nlt_1_r	40	1.13.0	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.662285089493	606
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0411839485168	34
Coq.PArith.BinPos.Pos.le_nlt	40	3.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.87563586235	203
Coq.PArith.BinPos.Pos.lt_nle	40	2.5	search with cache (only 1: unfold lt, gt; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.790513038635	197
Coq.PArith.BinPos.Pos.lt_le_incl	40	1.1.2	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: now do 2 destruct compare).	0.261152982712	65
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	0.0.0.2.1	search with cache (only 1: unfold lt, le; only 1: rewrite compare_gt_iff; only 1: rewrite compare_gt_iff; only 1: unfold lt; only 1: now rewrite compare_succ_succ).	0.335075855255	54
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40	9	search with cache (only 1: solve_proper).	0.132885932922	59
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.2	search with cache (only 1: apply le_lteq; only 1: intuition).	0.0750830173492	35
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40	8.2.3.4	search with cache (only 1: unfold lt, le; only 1: rewrite compare_antisym; only 1: rewrite compare_sub_mask; only 1: now case sub_mask_spec).	7.26764297485	4404
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40
Coq.PArith.BinPos.Pos.add_lt_mono_l	40
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	1.0.2.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0370600223541	23
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	1.0.6	search with cache (only 1: unfold lt, le; only 1: rewrite add_compare_mono_l; only 1: reflexivity).	0.0352129936218	11
Coq.PArith.BinPos.Pos.add_le_mono_r	40	1.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.0145070552826	5
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	2.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.186542987823	120
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.013769865036	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	2.1.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.0139560699463	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.3	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.0111420154572	5
Coq.PArith.BinPos.Pos.lt_not_add_l	40
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	0.0.0.2.0.0	search with cache (only 1: destruct p; only 1: simpl; only 1: now f_equal; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0892791748047	8
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.0073869228363	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	5.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0287330150604	16
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.1.0.1	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0546460151672	29
Coq.PArith.BinPos.Pos.sub_xI_xO	40	1.0.3.0	search with cache (only 1: unfold sub; only 1: intros H; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0251660346985	16
Coq.PArith.BinPos.Pos.sub_xO_xI	40	1.1.0.0.0.2.4.0.22.4.0.0	search with cache (only 1: unfold sub; only 1: simpl; only 1: rewrite sub_mask_carry_spec; only 1: case sub_mask_spec; only 1: auto; only 1: destruct r; only 1: auto; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	15.6086709499	27839
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.2.0.4.0.0.0.0.8	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	27.2797729969	13908
Coq.PArith.BinPos.Pos.sub_mask_neg	40	1.0	search with cache (only 1: rewrite lt_iff_add; only 1: apply sub_mask_neg_iff).	0.0240409374237	11
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.27.5	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	24.5746269226	34992
Coq.PArith.BinPos.Pos.sub_diag	40	0.0.2.2.9.0.5.2	search with cache (only 1: unfold le, sub; only 1: case sub_mask_spec; only 1: auto; only 1: intros r H; only 1: contradict H; only 1: rewrite add_comm; only 1: auto using add_no_neutral; only 1: auto).	2.93580198288	4050
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.1.2.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.367153167725	173
Coq.PArith.BinPos.Pos.min_l	40	0.1.2.0.0.0.26.0	search with cache (only 1: intros x y H; only 1: compute; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	35.863368988	49295
Coq.PArith.BinPos.Pos.min_r	40	0.0.1.2.0.0.6.1	search with cache (only 1: intros x y H; only 1: unfold le, min; only 1: case compare_spec; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H; only 1: auto).	3.56714487076	3431
Coq.PArith.BinPos.Pos.max_1_l	40
Coq.PArith.BinPos.Pos.max_1_r	40	0.1.0.2.1.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.212714195251	162
Coq.PArith.BinPos.Pos.min_1_l	40	1.18	search with cache (only 1: apply min_r || apply min_l; only 1: apply le_1_l).	0.32156920433	426
Coq.PArith.BinPos.Pos.min_1_r	40	1.3	search with cache (only 1: apply min_r; only 1: apply le_1_l).	0.126271009445	65
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40
Coq.PArith.BinPos.Pos.add_max_distr_l	40
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.14	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.453557014465	322
Coq.PArith.BinPos.Pos.add_min_distr_r	40
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	6.0.8	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	3.21747803688	1422
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.11	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.317238807678	156
Coq.PArith.BinPos.Pos.mul_min_distr_r	40
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	1.2.0.3.0.1.2.0.5.3.23	search with cache (only 1: PeanoNat.Nat.cases n; only 1: simpl; only 1: intros H; only 1: now destruct H; only 1: simpl; only 1: intros n _; only 1: f_equal; only 1: induction n as [| n IHn]; only 1: trivial; only 1: simpl; only 1: now rewrite IHn).	32.1113860607	56501
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40
Coq.PArith.BinPos.Pos.ggcd_gcd	40
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40
Coq.PArith.BinPos.Pcompare_eq_Gt	40	5.0	search with cache (only 1: unfold Pos.gt; only 1: reflexivity).	0.0871179103851	30
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40	0.0.0.1.5.6	search with cache (only 1: intros; only 1: apply Pos.gt_lt in H; only 1: unfold Pos.sub; only 1: destruct (Pos.sub_mask_pos p q H) as (r, U); only 1: rewrite U; only 1: now apply Pos.sub_mask_pos_iff).	0.537936925888	998
Coq.PArith.BinPos.Dcompare	40	0.0.0.17.19	search with cache (only 1: intro m; only 1: destruct m; only 1: now intuition; only 1: now intuition; only 1: now intuition).	1.48977708817	1257
Coq.Arith.Le.le_n_0_eq	40	2.2.0.2	search with cache (only 1: inversion 1; only 1: Nat.le_elim H; only 1: Nat.auto'; only 1: auto).	0.0249600410461	10
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40	4.7	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.325587034225	308
Coq.Arith.Even.odd_equiv	40
Coq.Arith.Even.even_or_odd	40	4.1.0.94.2	search with cache (only 1: left; only 1: revert n; only 1: fix even_equiv 1; only 1: intros n; only 1: auto).	23.405851841	103168
Coq.Arith.Even.even_odd_dec	40
Coq.Arith.Even.not_even_and_odd	40
Coq.Arith.Even.even_plus_split	40
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.101580858231	1
Coq.Arith.Even.even_even_plus	40	0.2.0.6	search with cache (only 1: Nat.cases n; only 1: parity_binop; only 1: intro p; only 1: parity_binop).	0.30401301384	57
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0410330295563	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0562009811401	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0397219657898	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.137259960175	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0389468669891	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0398461818695	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0551328659058	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0394380092621	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0391609668732	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.118044137955	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0392980575562	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0390510559082	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.107004880905	1
Coq.Arith.Even.even_mult_l	40	14.6.0	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: parity_binop).	1.81046819687	1486
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0681700706482	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0384020805359	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0397009849548	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0593509674072	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0277740955353	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0269150733948	1
Coq.Arith.Minus.minus_n_O	40	2	search with cache (only 1: now destruct n).	0.00894808769226	3
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	0	search with cache (only 1: now Nat.nzsimpl').	0.0197548866272	1
Coq.Arith.Minus.minus_diag_reverse	40	3.5.10.3	search with cache (only 1: Nat.induct ltac:(n); only 1: split; only 1: intro m; only 1: auto).	0.403979063034	613
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40	3.0.11.2	search with cache (only 1: Nat.induct p; only 1: reflexivity; only 1: intros p IH; only 1: now rewrite IH).	0.336983203888	312
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	28	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.205790996552	396
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.2.10.0	search with cache (only 1: rewrite Nat.add_comm; only 1: symmetry; only 1: apply Nat.sub_add; only 1: Nat.Private_Tac.order).	0.557052850723	687
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	12.2.29	search with cache (only 1: intros a b Hb; only 1: subst; only 1: left).	5.35686802864	16309
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40	0.0.10.4.18.0.0	search with cache (only 1: intro n; only 1: induction 1; only 1: auto with arith; only 1: intros; only 1: PeanoNat.Nat.le_elim H1; only 1: auto with arith; only 1: auto with arith).	9.84345602989	17829
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0188040733337	4
Coq.Arith.Between.exists_le_S	40
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.5.0	search with cache (only 1: intro n; only 1: constructor; only 1: auto; only 1: auto).	0.0520968437195	15
Coq.Arith.Between.in_int_lt	40	0.4.30	search with cache (only 1: intros n Hn; only 1: intros m [H3 H4]; only 1: PeanoNat.Nat.Private_Tac.order).	4.35119104385	6626
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.0402889251709	2
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros p q r []; only 1: auto with arith).	0.00816416740417	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	1.2.0	search with cache (only 1: induction 1 as [| l]; only 1: auto with arith; only 1: auto with arith).	0.0170731544495	6
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40
Coq.Arith.Mult.mult_is_one	40
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40
Coq.Arith.Div2.lt_div2	40	1.5.3.10.0.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: Nat.induct ltac:(n); only 1: trivial; only 1: fix le_div2 1; only 1: trivial).	2.45586490631	3830
Coq.Arith.Div2.even_div2	40	2.11.0.14.4	search with cache (only 1: simpl; only 1: Nat.induct n; only 1: trivial; only 1: fix even_equiv 1; only 1: trivial).	23.094630003	31247
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40	5.28.0	search with cache (only 1: rewrite even_equiv; only 1: fix le_div2 1; only 1: trivial).	16.7913579941	18899
Coq.Arith.Div2.div2_odd	40
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	8.0.1	search with cache (only 1: fix even_odd_double 1; only 1: intros n; only 1: auto using div2_odd, div2_even, odd_div2, even_div2).	0.26108789444	278
Coq.Arith.Div2.odd_S2n	40	2.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.013258934021	5
Coq.Arith.Div2.div2_double	40	3.1	search with cache (only 1: simpl Nat.mul; only 1: apply Nat.div2_double).	0.118454933167	73
Coq.Arith.Div2.div2_double_plus_one	40	1.6	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: Nat.Private_Tac.order).	0.0790519714355	60
Coq.Arith.Plus.plus_assoc_reverse	40	1.0.1.0.15.0.7	search with cache (only 1: nzinduct n; only 1: now Nat.nzsimpl; only 1: split; only 1: Nat.nzsimpl; only 1: auto; only 1: Nat.nzsimpl; only 1: auto).	25.8613131046	7904
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	16	search with cache (only 1: apply Nat.add_le_mono_l).	0.153090953827	108
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	8	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0133099555969	9
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40
Coq.Arith.Plus.plus_lt_compat	40
Coq.Arith.Plus.le_plus_l	40	11.0.1.0.17	search with cache (only 1: Nat.induct m; only 1: now Nat.nzsimpl; only 1: intro p; only 1: Nat.nzsimpl; only 1: now right).	2.29618906975	1432
Coq.Arith.Plus.le_plus_r	40	12.0.0.63	search with cache (only 1: induction n; only 1: now Nat.nzsimpl; only 1: Nat.nzsimpl; only 1: now right).	9.461176157	12846
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	25.0.0.5.0.2	search with cache (only 1: Nat.induct n; only 1: Nat.nzsimpl; only 1: intuition; only 1: intros n IH; only 1: Nat.nzsimpl; only 1: now Morphisms.f_equiv).	13.0454058647	9717
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40
Coq.Arith.Lt.lt_le_S	40	9	search with cache (only 1: Nat.order).	0.031574010849	22
Coq.Arith.Lt.lt_n_Sm_le	40	1	search with cache (only 1: apply le_S_n).	0.00618004798889	2
Coq.Arith.Lt.le_lt_n_Sm	40	0.1.2	search with cache (only 1: induction 1; only 1: auto; only 1: auto).	0.0119550228119	6
Coq.Arith.Lt.le_not_lt	40	2	search with cache (only 1: Nat.order).	0.00937414169312	3
Coq.Arith.Lt.lt_not_le	40	0	search with cache (only 1: intuition Nat.order).	0.00937604904175	1
Coq.Arith.Lt.neq_0_lt	40	1	search with cache (only 1: Nat.auto').	0.0193021297455	2
Coq.Arith.Lt.lt_0_neq	40	7.0	search with cache (only 1: intros; only 1: Nat.order).	0.0188200473785	12
Coq.Arith.Lt.lt_n_S	40	4	search with cache (only 1: apply le_n_S).	0.00605797767639	5
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply le_S_n).	0.00541710853577	1
Coq.Arith.Lt.S_pred	40	10.1.28.4	search with cache (only 1: Nat.cases n; only 1: now Nat.nzsimpl; only 1: intros n _; only 1: reflexivity).	3.96785116196	11928
Coq.Arith.Lt.S_pred_pos	40	10.8.0.1.0.7	search with cache (only 1: Nat.cases n; only 1: intros H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros n _; only 1: reflexivity).	2.88398885727	7249
Coq.Arith.Lt.lt_pred	40	2.8.2.16.15	search with cache (only 1: Nat.cases m; only 1: easy; only 1: intros m IH; only 1: apply Nat.succ_lt_mono; only 1: auto).	1.99196004868	5399
Coq.Arith.Lt.lt_pred_n_n	40	7.3.0.0.1.4	search with cache (only 1: Nat.cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply Nat.lt_irrefl with 0; only 1: intros m IH; only 1: auto).	0.572525978088	1083
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40
Coq.Arith.Wf_nat.induction_ltof2	40
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00525379180908	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rect1	40
Coq.Arith.Wf_nat.lt_wf_rect	40	0	search with cache (only 1: exact (fun p P F => induction_ltof1 nat (fun m => m) P F p)).	0.00551700592041	1
Coq.Arith.Wf_nat.lt_wf_rec1	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00554323196411	1
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00556111335754	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun p P F => induction_ltof2 nat (fun m => m) P F p)).	0.00534701347351	1
Coq.Arith.Wf_nat.gt_wf_rect	40	0.0.0.5	search with cache (only 1: intro p; only 1: intros; only 1: elim (lt_wf p); only 1: auto with arith).	0.111428976059	44
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact lt_wf_rect).	0.00709986686707	1
Coq.Arith.Wf_nat.lt_wf_double_rect	40
Coq.Arith.Wf_nat.lt_wf_double_rec	40	0.1.1.0.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.328313112259	185
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.1.1.0.1.2	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rect; only 1: intros n H q; only 1: apply lt_wf_rect; only 1: auto with arith).	0.311480998993	185
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	2.1.2.0.1.0.2.0.0.0.2	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	5.01473999023	2426
Coq.Arith.Compare_dec.le_lt_dec	40	1.2.1.0.2.0.0.0.2	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	1.14134097099	813
Coq.Arith.Compare_dec.le_le_S_dec	40
Coq.Arith.Compare_dec.le_ge_dec	40	3.1.2.0.0.0.2.3.0.0	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m as [| m]; only 1: right; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	3.99731683731	2456
Coq.Arith.Compare_dec.le_gt_dec	40	12	search with cache (only 1: exact (le_lt_dec n m)).	0.0258269309998	46
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	2.3.0.0.3.66	search with cache (only 1: intuition; only 1: elim (le_lt_dec n m); only 1: left; only 1: Nat.Private_Tac.order; only 1: right; only 1: Nat.Private_Tac.order).	3.22800993919	6890
Coq.Arith.Compare_dec.lt_dec	40	2.2.3.1.3.0.0.1.3	search with cache (only 1: induction n as [| n IHn] in m |- *; only 1: destruct m as [| m]; only 1: auto with arith; only 1: auto with arith; only 1: destruct m as [| m]; only 1: auto with arith; only 1: elim (IHn m); only 1: auto with arith; only 1: auto with arith).	10.4768371582	8654
Coq.Arith.Compare_dec.gt_dec	40	16	search with cache (only 1: apply le_dec).	0.482361078262	445
Coq.Arith.Compare_dec.ge_dec	40	5	search with cache (only 1: apply le_dec).	0.170772075653	74
Coq.Arith.Compare_dec.dec_le	40
Coq.Arith.Compare_dec.dec_lt	40
Coq.Arith.Compare_dec.dec_gt	40	15	search with cache (only 1: apply Nat.lt_decidable).	0.362844944	311
Coq.Arith.Compare_dec.dec_ge	40	4	search with cache (only 1: apply Nat.le_decidable).	0.121030092239	50
Coq.Arith.Compare_dec.not_eq	40	2	search with cache (only 1: apply Nat.lt_gt_cases).	0.0166730880737	3
Coq.Arith.Compare_dec.not_le	40	2	search with cache (only 1: apply Nat.lt_nge).	0.00740909576416	3
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00848507881165	1
Coq.Arith.Compare_dec.not_ge	40	6	search with cache (only 1: intuition Nat.order).	0.0805611610413	17
Coq.Arith.Compare_dec.not_lt	40	9	search with cache (only 1: apply Nat.le_ngt).	0.00928902626038	10
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.00702881813049	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.0072009563446	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00831508636475	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: intuition Nat.order).	0.0174450874329	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00713086128235	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	1.31.17	search with cache (only 1: Nat.induct n; only 1: do 2 Morphisms.f_equiv; only 1: auto).	2.32374405861	4231
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.2.0.1.1.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0179870128632	10
Coq.Arith.EqNat.eq_nat_eq	40	1	search with cache (only 1: apply eq_nat_is_eq).	0.146756887436	2
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40	0.0.2.0.0.0.0.0.2.0.0.3	search with cache (only 1: induction n as [| n IHn]; only 1: intro m; only 1: destruct m; only 1: now left; only 1: simpl; only 1: tauto; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: contradiction || auto).	8.52911686897	7828
Coq.Arith.EqNat.beq_nat_refl	40	2.1.2.2.9	search with cache (only 1: induction n as [| n IHn]; only 1: simpl; only 1: auto; only 1: simpl; only 1: easy).	0.191386938095	282
Coq.Arith.EqNat.beq_nat_true	40
Coq.Arith.EqNat.beq_nat_false	40
Coq.Arith.EqNat.beq_nat_eq	40
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	3.1.1.0.0	search with cache (only 1: simpl; only 1: intro n; only 1: intro m; only 1: revert m; only 1: trivial).	0.0194928646088	12
Coq.Arith.PeanoNat.Nat.recursion_succ	40
Coq.Arith.PeanoNat.Nat.pred_succ	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00922679901123	2
Coq.Arith.PeanoNat.Nat.pred_0	40	1.0	search with cache (only 1: simpl; only 1: auto).	0.00787806510925	3
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: auto).	0.00624394416809	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: auto).	0.0061469078064	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: auto).	0.00664710998535	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00836396217346	2
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.1.9	search with cache (only 1: induction n as [| n IHn]; only 1: auto; only 1: auto).	0.0312268733978	49
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: auto).	0.0071120262146	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40	2.0.0.8.7.0.1	search with cache (only 1: constructor; only 1: exact (le_pred (S n) (S m)); only 1: revert m; only 1: induction 1; only 1: auto; only 1: constructor; only 1: trivial).	7.08384895325	13642
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40	0	search with cache (only 1: decide equality).	0.0138640403748	1
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40
Coq.Arith.PeanoNat.Nat.compare_antisym	40
Coq.Arith.PeanoNat.Nat.compare_succ	40	2.0.1.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0175228118896	11
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40	2.0.1.0.0.0.0.0.3.5	search with cache (only 1: induction n as [| n IHn]; only 1: trivial; only 1: intro m; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	35.7884171009	34200
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	31	search with cache (only 1: now nzsimpl).	0.390954971313	486
Coq.Arith.PeanoNat.Nat.pow_0_r	40	5	search with cache (only 1: auto).	0.00816798210144	6
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1	search with cache (only 1: reflexivity).	0.113280057907	24
Coq.Arith.PeanoNat.Nat.square_spec	40	2	search with cache (only 1: auto).	0.00750803947449	3
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	5.1.6.11.20	search with cache (only 1: intro H1; only 1: elim H1; only 1: simpl; only 1: intro; only 1: now nzsimpl).	1.06784796715	3669
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	10.15	search with cache (only 1: fix even_spec 1; only 1: trivial).	3.5235490799	6389
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	9	search with cache (only 1: inversion 1).	0.0189609527588	10
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	4.7	search with cache (only 1: inversion 1; only 1: trivial).	0.674853086472	544
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	0.0.1.0.0.1.3	search with cache (only 1: intros [| a] b; only 1: now exists 0; only 1: simpl; only 1: fold (b mod S a); only 1: destruct (gcd_divide (b mod S a) (S a)) as (H, H'); only 1: set (a' := S a) in *; only 1: auto).	0.183223962784	103
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.3	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00938105583191	5
Coq.Arith.PeanoNat.Nat.gcd_greatest	40	1.13	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.523406028748	466
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	25.28	search with cache (only 1: set (a' := S a) in *; only 1: apply le_0_l).	2.35327887535	4556
Coq.Arith.PeanoNat.Nat.div2_double	40	1.6.0.0.0.8.3	search with cache (only 1: simpl; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: simpl; only 1: now rewrite succ_inj_wd).	3.46140503883	2199
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.1.0.1.2.1	search with cache (only 1: simpl; only 1: nzsimpl; only 1: induction n; only 1: now f_equal; only 1: rewrite add_succ_r; only 1: now f_equal).	0.245486021042	71
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	1.0.10.0.4.2.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: induct ltac:(n); only 1: trivial; only 1: fix le_div2 1; only 1: simpl; only 1: trivial).	7.11071610451	7297
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.5.4	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.112943887711	112
Coq.Arith.PeanoNat.Nat.double_twice	40	0.8.0	search with cache (only 1: intro n; only 1: simpl; only 1: now rewrite !add_0_r).	0.0262680053711	30
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	0.1.23.8	search with cache (only 1: intros; only 1: induction n as [| n IHn]; only 1: easy; only 1: easy).	1.460064888	2591
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40	1.1.5.6.1.1.20.0.0.15.2	search with cache (only 1: nzsimpl'; only 1: simpl; only 1: unfold odd; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: fix odd_spec 1; only 1: rewrite odd_spec; only 1: split; only 1: split).	14.6978800297	30543
Coq.Arith.PeanoNat.Nat.testbit_even_0	40	3.5.9.1.12.4.3.0	search with cache (only 1: unfold testbit; only 1: unfold odd; only 1: simpl; only 1: apply eq_true_iff_eq; only 1: split; only 1: fix odd_spec 1; only 1: trivial; only 1: discriminate).	5.81445097923	11023
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40	4.7.4	search with cache (only 1: unfold testbit, odd; only 1: fix even_spec 1; only 1: trivial).	2.14696717262	2402
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	4.17.5	search with cache (only 1: intro n; only 1: fix le_div2 1; only 1: trivial).	3.34524202347	4230
Coq.Arith.PeanoNat.Nat.odd_bitwise	40	1.6.4.1	search with cache (only 1: unfold odd; only 1: intro H; only 1: fix odd_spec 1; only 1: trivial).	1.21537494659	1168
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	6.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: destr_bool; only 1: trivial).	0.0241720676422	19
Coq.Arith.PeanoNat.Nat.lor_spec	40
Coq.Arith.PeanoNat.Nat.lxor_spec	40	0.0.1.0.1.6.0.0.0.1.0.1.6.0.0.1	search with cache (only 1: apply testbit_bitwise_2; only 1: destr_bool; only 1: destruct (compare_spec a b) as [H| H| H]; only 1: subst; only 1: now rewrite max_l; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l; only 1: destruct (compare_spec a b) as [H| H| H]; only 1: subst; only 1: now rewrite max_l; only 1: apply lt_le_incl in H; only 1: now rewrite max_r; only 1: apply lt_le_incl in H; only 1: now rewrite max_l).	32.1112470627	50771
Coq.Arith.PeanoNat.Nat.div2_spec	40	8	search with cache (only 1: eauto).	0.00875306129456	9
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	12	search with cache (only 1: inversion H).	0.054829120636	63
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	2.4.0	search with cache (only 1: intro n; only 1: symmetry; only 1: intuition Nat.Private_Tac.order).	0.0178549289703	9
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	10	search with cache (only 1: apply Nat.succ_lt_mono).	0.0182628631592	24
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00682902336121	1
Coq.Arith.Gt.gt_S	40
Coq.Arith.Gt.gt_pred	40	6	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.16289806366	52
Coq.Arith.Gt.le_not_gt	40
Coq.Arith.Gt.gt_not_le	40	6	search with cache (only 1: apply Nat.lt_nge).	0.0113508701324	12
Coq.Arith.Gt.le_S_gt	40	6.1	search with cache (only 1: intro; only 1: auto).	0.0263519287109	22
Coq.Arith.Gt.gt_S_le	40	6	search with cache (only 1: apply Peano.le_S_n).	0.0279748439789	20
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0065929889679	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.00724792480469	1
Coq.Arith.Gt.le_gt_trans	40
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40	2.11.9.16.3.0	search with cache (only 1: intros; only 1: apply Nat.le_ngt; only 1: apply Nat.le_ngt; only 1: apply Nat.succ_le_mono; only 1: constructor; only 1: now apply Nat.le_lt_trans with m).	6.51669406891	8531
Coq.Arith.Gt.gt_trans_S	40	6.0.1.1	search with cache (only 1: intro; only 1: intro; only 1: apply Nat.succ_lt_mono; only 1: now apply Nat.le_lt_trans with m).	0.417026996613	194
Coq.Arith.Gt.gt_0_eq	40
Coq.Arith.Gt.plus_gt_reg_l	40
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00728583335876	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	2.0.4.0	search with cache (only 1: intro n; only 1: intros; only 1: destruct H; only 1: trivial).	0.0120987892151	10
Coq.Logic.JMeq.JMeq_trans	40	1.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0109300613403	4
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.012274980545	4
Coq.Logic.JMeq.JMeq_rect	40	1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.0110850334167	4
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0193390846252	13
Coq.Logic.JMeq.JMeq_rect_r	40	2.1.0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0203130245209	13
Coq.Logic.JMeq.JMeq_congr	40	2.1.0.1.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: case JMeq_eq with (1 := H'); only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.0238308906555	12
Coq.Logic.JMeq.JMeq_eq_dep_id	40	1.0.1	search with cache (only 1: intros; only 1: destruct H; only 1: apply eq_dep_intro).	0.0159981250763	5
Coq.Logic.JMeq.eq_dep_id_JMeq	40	4.0	search with cache (only 1: destruct 1; only 1: trivial).	0.010085105896	6
Coq.Logic.JMeq.eq_dep_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00932097434998	2
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	1.2.21.2	search with cache (only 1: destruct 1; only 1: intro; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	1.04387903214	2232
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.0.3.0	search with cache (only 1: intro n; only 1: intro m; only 1: destruct m; only 1: auto).	0.0167419910431	14
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.0182809829712	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	16.5.1.13	search with cache (only 1: unshelve refine (let F := exist (fun P => ~ ~ P -> P) False _ in _); only 1: tauto; only 1: intros h; only 1: tauto).	8.30974006653	11606
Coq.Logic.Classical_Prop.not_imply_elim	40	3.8.7	search with cache (only 1: intros A; only 1: intro n; only 1: tauto).	0.556844949722	955
Coq.Logic.Classical_Prop.not_imply_elim2	40	1	search with cache (only 1: auto).	0.00672101974487	2
Coq.Logic.Classical_Prop.imply_to_or	40	8.2.1.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: tauto).	1.0639591217	954
Coq.Logic.Classical_Prop.imply_to_and	40	3.2	search with cache (only 1: intros a b; only 1: tauto).	0.0208899974823	7
Coq.Logic.Classical_Prop.or_to_imply	40	2.1.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.0264821052551	17
Coq.Logic.Classical_Prop.not_and_or	40	0.19	search with cache (only 1: intros A P H; only 1: tauto).	0.368355989456	624
Coq.Logic.Classical_Prop.or_not_and	40	2	search with cache (only 1: tauto).	0.0535910129547	48
Coq.Logic.Classical_Prop.not_or_and	40	0	search with cache (only 1: tauto).	0.00973296165466	1
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.00902795791626	1
Coq.Logic.Classical_Prop.imply_and_or	40	2.1.1	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.0251610279083	15
Coq.Logic.Classical_Prop.imply_and_or2	40	2.1.1	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition).	0.130751848221	24
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	2.4.3	search with cache (only 1: intro n; only 1: case n; only 1: eauto).	0.0293538570404	50
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	2.14	search with cache (only 1: red; only 1: eauto).	0.0258219242096	129
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40	0.0.0.1.0.0.0.2.0.1.4	search with cache (only 1: intros B; only 1: unshelve refine ((fun h => _) (NoRetractToModalProposition.paradox _ _ _ _ _ _ _ _)); only 1: auto; only 1: exact bool; only 1: auto; only 1: auto; only 1: auto; only 1: exact h; only 1: auto; only 1: auto; only 1: auto).	2.9129087925	3604
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40	44.17.6	search with cache (only 1: intro x; only 1: intuition; only 1: eauto).	19.5128450394	60663
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40	0.0.0.0.0.1.0.0.0.30.3.2	search with cache (only 1: intro H; only 1: assert (H1 : exists n : nat, P' n); only 1: firstorder  (subst; auto); only 1: exists (f x); only 1: unfold P'; only 1: rewrite gof_eq_id; only 1: assumption; only 1: apply (constructive_indefinite_ground_description_nat P' P'_decidable) in H1; only 1: destruct H1 as [n Hn]; only 1: exists (g n); only 1: unfold P' in Hn; only 1: assumption).	23.6427431107	57830
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.2.0.3.0.5	search with cache (only 1: intros D_epsilon A P H; only 1: destruct H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: apply H1).	0.21328997612	234
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	1.2.3.3.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: intros; only 1: firstorder).	1.60955095291	1002
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	1.6.24.5	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: auto).	0.759907007217	3343
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	22.6.11	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: easy).	0.400371074677	3310
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	26	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.624397039413	965
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	1.2.3.4.6	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.802911043167	1397
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.2.3.3.7.11.7	search with cache (only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro abs; only 1: apply notall; only 1: exists n; only 1: apply abs).	15.5961210728	43856
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	11.1	search with cache (only 1: unfold not; only 1: firstorder).	0.346460103989	471
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40	14.0	search with cache (only 1: unfold not; only 1: firstorder).	0.571876049042	910
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.0.1.8.0	search with cache (only 1: intros * H; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: apply eq_dep_eq; only 1: elim H using eq_indd; only 1: reflexivity).	0.276002168655	249
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0114068984985	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	2.5	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0149481296539	14
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.3	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.0131189823151	6
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	1.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0126459598541	5
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	1.0.1	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.0128309726715	5
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	3.5.0.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: clear H g; only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.0626740455627	86
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	6	search with cache (only 1: reflexivity).	0.0086669921875	7
Coq.Logic.FunctionalExtensionality.eta_expansion	40	6	search with cache (only 1: reflexivity).	0.00814390182495	7
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.2.1.0	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0132989883423	8
Coq.Logic.HLevels.false_hprop	40	0.1	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0100491046906	3
Coq.Logic.HLevels.true_hprop	40	4.0.1	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: auto).	0.0129179954529	8
Coq.Logic.HLevels.not_hprop	40	0.5.2.0	search with cache (only 1: intros p q; only 1: intro x; only 1: apply functional_extensionality_dep; only 1: contradiction).	0.063591003418	99
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	0.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	0.0206308364868	7
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.20.8.16.9	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: apply H; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	6.48588681221	14798
Coq.Logic.EqdepFacts.eq_dep_sym	40	1.4.16	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0920460224152	355
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00817608833313	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	3.32.5.34	search with cache (only 1: intros x' x'' Hx' Hx''; only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	4.33571887016	30699
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	1.25.14.16	search with cache (only 1: intro H; only 1: intro n; only 1: inversion 1; only 1: reflexivity).	3.85140395164	18281
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	4.3.0	search with cache (only 1: intros * H; only 1: rewrite H; only 1: reflexivity).	0.0165228843689	10
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.12.1.0.13.17	search with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.13060688972	4554
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.1.7	search with cache (only 1: intros * H; only 1: dependent rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0417370796204	24
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	2.5.0	search with cache (only 1: intros * H; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0228028297424	10
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.13.1.0.14.2	search with cache (only 1: split; only 1: intros * H; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	1.07749414444	2908
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	3.2.0.1	search with cache (only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: simpl; only 1: split).	0.0137228965759	10
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	2.15	search with cache (only 1: dependent rewrite H; only 1: split).	1.3158249855	2254
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	13.3.0.32	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.916749000549	2752
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40	3.40.0.10.0.0.6	search with cache (only 1: intros eq_rect_eq; only 1: intro; only 1: destruct p1; only 1: rewrite <- eq_rect_eq; only 1: reflexivity; only 1: destruct p2; only 1: apply eq_dep_intro).	24.9224491119	134347
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	11.2.1	search with cache (only 1: intro eq_dep_eq; only 1: intros p2; only 1: auto).	0.359550952911	1024
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	4.11.2.1.5	search with cache (only 1: intros; only 1: intro UIP; only 1: intros p2; only 1: rewrite H; only 1: apply UIP).	3.40357398987	17500
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	4.0.0	search with cache (only 1: intro; only 1: intro; only 1: auto).	0.0141680240631	7
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	0.0	search with cache (only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.110378980637	2
Coq.Logic.EqdepFacts.f_eq_dep	40	3.1	search with cache (only 1: destruct 1; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0225059986115	17
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.2	search with cache (only 1: destruct 1; only 1: auto).	0.0208458900452	23
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0152130126953	12
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	7.1	search with cache (only 1: intros Ext A B Equiv; only 1: auto).	0.0208580493927	33
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	7	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.450704813004	11
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	10	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.47298002243	82
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	4.0.21.1	search with cache (only 1: intros; only 1: reflexivity || destruct H; only 1: auto; only 1: contradiction).	1.29425787926	8453
Coq.Logic.Decidable.dec_True	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00753688812256	2
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00811886787415	2
Coq.Logic.Decidable.dec_or	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.01731300354	2
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.020494222641	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.010705947876	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0148680210114	2
Coq.Logic.Decidable.dec_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0189499855042	3
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00857901573181	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0097279548645	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0162899494171	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0153739452362	2
Coq.Logic.Decidable.imp_simp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0746750831604	2
Coq.Logic.Decidable.not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0875849723816	2
Coq.Logic.Decidable.not_true_iff	40	0.0.1	search with cache (only 1: split; only 1: auto; only 1: auto).	0.0077760219574	4
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.00446200370789	1
Coq.Logic.Decidable.not_not_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00820899009705	2
Coq.Logic.Decidable.contrapositive	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0104081630707	2
Coq.Logic.Decidable.or_not_l_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0128538608551	2
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0127601623535	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0121550559998	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0128519535065	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.013885974884	2
Coq.Logic.Decidable.not_or_iff	40	1	search with cache (only 1: tauto).	0.0125720500946	2
Coq.Logic.Decidable.not_and_iff	40	5	search with cache (only 1: tauto).	0.0137209892273	23
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0171978473663	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0168521404266	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.setoid_ring.Rings_Z.Zcri	40	5.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0345120429993	14
Coq.setoid_ring.Rings_Z.Z_one_zero	40	15	search with cache (only 1: auto with zarith).	0.105195045471	91
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	16	search with cache (only 1: auto).	0.0947830677032	108
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.00831890106201	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40	11.3.20	search with cache (only 1: fix odd_spec 1; only 1: intros x y; only 1: auto).	4.14729189873	3935
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	34.11	search with cache (only 1: intros; only 1: Esimpl2).	17.0137860775	3775
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	15.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	13.5697169304	651
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40	0.3.0.2.0.1.0.3	search with cache (only 1: repeat split; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool).	6.26813793182	3372
Coq.setoid_ring.Ring.bool_eq_ok	40	9	search with cache (only 1: destr_bool).	0.0558278560638	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40	24.9.8	search with cache (only 1: intros p0; only 1: intros; only 1: firstorder).	3.75435018539	3089
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40	25.7.6	search with cache (only 1: intros p0; only 1: intros; only 1: firstorder).	4.52638697624	3021
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40	32.2.12.16	search with cache (only 1: elim ARth; only 1: intros x y; only 1: intros; only 1: firstorder).	20.5489768982	15115
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40	27.9.8.6	search with cache (only 1: intros p0; only 1: intros; only 1: let rec norm := gen_srewrite Rsth Reqe ARth in norm; only 1: firstorder).	19.509565115	10810
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	14	search with cache (only 1: auto).	0.195797920227	90
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	9	search with cache (only 1: eauto).	0.197807073593	18
Coq.setoid_ring.Field_theory.rsub_0_r	40	18	search with cache (only 1: let rec rsimpl := gen_srewrite Rsth Reqe ARth in rsimpl).	20.0752429962	755
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	29	search with cache (only 1: eauto).	6.13156294823	982
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40	4.0.0.0.0.1	search with cache (only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: simpl; only 1: now rewrite !IH, ?H; only 1: trivial).	2.83765792847	72
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.838886022568	4
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.1	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.846544027328	4
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	7.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	7.89619612694	63
Coq.setoid_ring.Field_theory.PEpow_0_r	40	9.0	search with cache (only 1: intros l; only 1: eauto).	7.84623503685	96
Coq.setoid_ring.Field_theory.PEpow_1_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.897219181061	3
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	1.3.1.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct 1).	19.8231871128	29
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	5	search with cache (only 1: now destruct 1).	1.42484283447	6
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00775694847107	1
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0080680847168	1
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0105369091034	1
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0	search with cache (only 1: exact eq_equivalence).	0.00716400146484	1
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	2.4.1.0.3.18	search with cache (only 1: intros; only 1: destruct x; only 1: simpl; only 1: let rec mrewrite := repeat (first [ rewrite ring_add_0_l | rewrite <- (ring_add_comm 0) | rewrite ring_mul_1_l | rewrite @ring_mul_0_l | rewrite ring_distr_l | reflexivity ]) in mrewrite; only 1: reflexivity; only 1: reflexivity).	11.8555312157	4921
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	3	search with cache (only 1: reflexivity).	0.00859808921814	4
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	45	search with cache (only 1: easy).	0.214587211609	1036
Coq.setoid_ring.Ring_theory.IDmorph	40	6	search with cache (only 1: easy).	0.0186378955841	7
Coq.setoid_ring.Ring_theory.Eqsth	40	14.1.0.1.0.41	search with cache (only 1: constructor; only 1: intro n; only 1: auto with relations; only 1: intro n; only 1: auto with relations; only 1: congruence).	3.63502502441	6968
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	0.1.5.1.1.2.0.0.23	search with cache (only 1: constructor; only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hy; only 1: setoid_rewrite Hx; only 1: auto with *; only 1: intros x x' Hx y y' Hy; only 1: rewrite <- Hx, <- Hy in *; only 1: rewrite Hx, Hy; only 1: easy).	2.62229919434	2636
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.1	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.113088130951	5
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40	2	search with cache (only 1: firstorder).	0.012640953064	3
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40	3	search with cache (only 1: firstorder).	0.0141258239746	4
Coq.setoid_ring.Ring_theory.SRopp_ext	40	2.4	search with cache (only 1: intros a b; only 1: Tactics.program_simpl).	0.0183730125427	8
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.8.9.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	1.69964408875	1122
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	7.12.8	search with cache (only 1: intro n; only 1: intro p; only 1: solve_proper).	0.39608502388	966
Coq.setoid_ring.Ring_theory.SRopp_add	40	1	search with cache (only 1: reflexivity).	0.00920295715332	2
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.00770092010498	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40	21	search with cache (only 1: easy).	0.175054073334	263
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40	14.3	search with cache (only 1: intuition; only 1: firstorder).	0.740660905838	423
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40	5.23	search with cache (only 1: intros m IH; only 1: firstorder).	1.37498307228	1353
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40	5.5	search with cache (only 1: intros a b; only 1: firstorder).	0.0451028347015	48
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40	25	search with cache (only 1: firstorder).	0.164525985718	306
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40	21	search with cache (only 1: firstorder).	0.138042926788	208
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40	26.30	search with cache (only 1: intros a n; only 1: firstorder).	1.59054708481	3666
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40	30.3	search with cache (only 1: case Smorph; only 1: now try N.order').	0.918550014496	1529
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40	43	search with cache (only 1: firstorder).	0.497799873352	2366
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	3	search with cache (only 1: mrewrite).	0.0146501064301	4
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	1	search with cache (only 1: mrewrite).	0.0148129463196	2
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00788903236389	1
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0088849067688	2
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00993418693542	3
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40	0.14	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.206480979919	178
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	1.12.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	2.65191888809	1015
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	13	search with cache (only 1: exact (Radd_ext Reqe)).	0.118456840515	60
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	11	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0982820987701	33
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.00686001777649	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0084822177887	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.00871777534485	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.00977921485901	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.3.0.0	search with cache (only 1: intros w; only 1: intros n; only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: destruct n; only 1: norm; only 1: norm).	8.73762607574	2444
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.2.9.3	search with cache (only 1: intros x; only 1: induction x as [| n x IHx]; only 1: norm; only 1: norm).	0.262142181396	215
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0289080142975	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0280270576477	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0297470092773	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0232949256897	1
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	146	search with cache (only 1: easy).	32.9976918697	11598
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	9	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0101990699768	10
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	59.26	search with cache (only 1: intuition; only 1: firstorder).	5.55243682861	14865
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40	13.6	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	4.6917579174	1630
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	19.1	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	5.20318007469	1788
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40	0.45.62	search with cache (only 1: induction l as [| y l IHl]; only 1: firstorder; only 1: now symmetry).	14.599011898	16871
Coq.setoid_ring.Ring_polynom.Pphi1	40	62	search with cache (only 1: firstorder).	3.15608501434	3327
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40	1.0.4.0.0.0.12	search with cache (only 1: intros lm; only 1: intros l; only 1: induction l as [| a l IHl]; only 1: intros l; only 1: Esimpl; only 1: intros; only 1: Esimpl).	36.9741518497	3990
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	1.0.1.0.2.1.0.3.1.30	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: Esimpl).	31.9055459499	3385
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.0121669769287	3
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	1.0.1.22	search with cache (only 1: intro x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.687340021133	397
Coq.setoid_ring.Ncring.ring_add_assoc1	40	11.5.8.15	search with cache (only 1: intros; only 1: rewrite <- ring_add_assoc; only 1: rewrite (ring_add_comm x); only 1: mrewrite).	9.23851490021	2984
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.2.1.8.4	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.789793968201	290
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.7.3	search with cache (only 1: intros; only 1: apply Zeq_bool_eq; only 1: auto).	0.162838935852	78
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40
Coq.setoid_ring.Rings_Q.Q_one_zero	40	1.1	search with cache (only 1: unfold Qeq; only 1: auto with qarith).	0.0153198242188	4
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40	0.0.2.47	search with cache (only 1: compute; only 1: intuition; only 1: inv; only 1: MX.order).	2.65848588943	4246
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0	search with cache (only 1: unfold singleton; only 1: intuition_in).	0.0117530822754	2
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	1.0.1.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0588209629059	7
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.2.0	search with cache (only 1: destruct s; only 1: intuition; only 1: simpl; only 1: intuition_in).	0.0453231334686	6
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.1.0.0.0	search with cache (only 1: destruct s; only 1: ok; only 1: ok; only 1: simpl; only 1: auto).	0.169803857803	6
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.1.0.0.0.0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	1.06659793854	1284
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00774192810059	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0.0.80.47	search with cache (only 1: induction l as [| y l]; only 1: compute; only 1: exact (rmatch _ _ _); only 1: exact (rmatch _ _ _)).	10.8996129036	33054
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0285561084747	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	0	search with cache (only 1: eauto with *).	0.00998020172119	1
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	2.11	search with cache (only 1: simpl; only 1: exact (rmatch _ _ _)).	0.342212915421	295
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00841999053955	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	12	search with cache (only 1: ok).	0.66429400444	303
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	2.1.1	search with cache (only 1: intros a b; only 1: simpl; only 1: now simpl).	0.02201795578	7
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	8.0.0.15.0.1	search with cache (only 1: intro n; only 1: intros; only 1: induction n as [| n IH]; only 1: simpl; only 1: easy; only 1: now f_equal).	1.37213182449	1658
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0144650936127	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.1	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.0151088237762	3
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.6.6	search with cache (only 1: inversion_clear 1; only 1: repeat split; only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	0.774827003479	625
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.0.0.0.1.0.0.10	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	1.06538009644	563
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0291121006012	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40	0.0.0.0.0.0.0.1	search with cache (only 1: intros H; only 1: apply Nat.log2_lt_pow2; only 1: destruct s; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: apply maxdepth_cardinal).	0.0335779190063	9
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40	65.0.25	search with cache (only 1: red; only 1: unfold singleton; only 1: eauto).	5.75670099258	19623
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	2.1.3.0.0	search with cache (only 1: destruct t; only 1: invrb; only 1: simpl; only 1: invrb; only 1: auto).	0.370589971542	175
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	2.0.0.0.0.2.0	search with cache (only 1: destruct s; only 1: auto; only 1: descolor; only 1: simpl; only 1: left; only 1: intuition; only 1: now constructor).	0.201081991196	183
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	14	search with cache (only 1: auto).	2.49622797966	1025
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	0.0.0	search with cache (only 1: intro; only 1: simpl; only 1: auto).	0.0141949653625	3
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40	0.0.4.0.3.0.89	search with cache (only 1: intros a Ha; only 1: simpl; only 1: destruct a; only 1: simpl; only 1: easy; only 1: simpl; only 1: auto).	28.6033961773	53465
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	6.0	search with cache (only 1: unfold filter; only 1: now auto_tc).	0.0130059719086	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0273661613464	17
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.0.4.0	search with cache (only 1: rewrite partition_spec; only 1: simpl; only 1: unfold filter; only 1: auto_tc).	0.0183720588684	8
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.1.0.2.0.1.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: tauto; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.392239093781	214
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	1.0.0.2.0.0.0.1	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	1.29486680031	954
Coq.MSets.MSetRBT.BalanceProps.union_rb	40
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.0.0.0	search with cache (only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0256009101868	8
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	1.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0714550018311	4
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40	0.0.6.1.7.7.0.11.11.4.0.4	search with cache (only 1: constructor; only 1: intros a b; only 1: split; only 1: auto; only 1: auto; only 1: constructor; only 1: apply H; only 1: apply H; only 1: intro l; only 1: constructor; only 1: firstorder; only 1: firstorder).	12.3448150158	14884
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	23	search with cache (only 1: now split).	0.552978992462	650
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	0	search with cache (only 1: intuition).	0.0122058391571	1
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	1.0.32	search with cache (only 1: intros GT; only 1: unfold In; only 1: intuition).	1.78575897217	2164
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	0.4.0	search with cache (only 1: intuition; only 1: intro n; only 1: now rewrite ?POrderedType.Positive_as_OT.square_xO).	0.0324668884277	14
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40	2.12	search with cache (only 1: fix odd_spec 1; only 1: intuition).	1.17935395241	704
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.0.0.16.3	search with cache (only 1: intros; only 1: destruct b, b'; only 1: auto; only 1: auto; only 1: auto; only 1: auto).	3.23954701424	2771
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40	0.0.3.1.3	search with cache (only 1: intro m; only 1: destruct m; only 1: now split; only 1: now split; only 1: now split).	0.410458087921	138
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40	0.4.4.0.0	search with cache (only 1: intros [| ] [| ]; only 1: easy'; only 1: now constructor; only 1: now constructor; only 1: easy').	0.239381074905	124
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.022971868515	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	1.0.0.1.13	search with cache (only 1: intros; only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.142286062241	190
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0143539905548	4
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0160899162292	5
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.0151858329773	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40	0.0.0.0.0.0.0.0.16	search with cache (only 1: destr_bool; only 1: ct; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: constructor; only 1: ct).	1.55525612831	1523
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	0.0.0.0.0.3	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: reflexivity; only 1: reflexivity).	0.0604431629181	17
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	1.1.1.5.3.19	search with cache (only 1: intros x x' Hx y y' Hy; only 1: unfold eq in *; only 1: unfold lt; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	23.59598279	13064
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.018501996994	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.1.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0120749473572	4
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.0	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0177750587463	4
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0306560993195	13
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	5.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0183758735657	12
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0140550136566	2
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0147960186005	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0136361122131	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.017254114151	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0965311527252	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0992341041565	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0258591175079	5
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.1.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0299649238586	5
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	5.0.1	search with cache (only 1: intros E; only 1: rewrite E; only 1: intuition).	0.0171899795532	9
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	1.2.11.8	search with cache (only 1: red; only 1: split; only 1: apply <- mem_spec; only 1: apply -> mem_spec).	0.661473989487	589
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	5	search with cache (only 1: intuition).	0.0258917808533	6
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	23	search with cache (only 1: intuition).	0.351706027985	255
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	6	search with cache (only 1: intuition).	0.0467088222504	11
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	1.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0137259960175	3
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	4.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0425970554352	6
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	6.4.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: intuition).	1.2385020256	674
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.2	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0218238830566	4
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0204031467438	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	58	search with cache (only 1: intuition).	4.22877383232	6600
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.036346912384	9
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	8	search with cache (only 1: intuition).	0.0148479938507	9
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40	2.9.5	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: auto).	4.88346815109	704
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40	2.11.0.0.4.11.1	search with cache (only 1: unfold Equal; only 1: intro n; only 1: intros; only 1: rewrite singleton_spec; only 1: rewrite singleton_spec; only 1: rewrite <- H; only 1: intuition).	3.39883303642	3192
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40
Coq.MSets.MSetFacts.WFactsOn.inter_m	40
Coq.MSets.MSetFacts.WFactsOn.diff_m	40
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	5.13.0	search with cache (only 1: repeat red; only 1: intros; only 1: firstorder).	2.70829391479	820
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	0.9.0.276	search with cache (only 1: constructor; only 1: firstorder; only 1: intro n; only 1: firstorder).	15.2123861313	41981
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	10.0.0	search with cache (only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: firstorder).	0.420441150665	285
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	4.2.8	search with cache (only 1: repeat red; only 1: intuition; only 1: firstorder).	0.378590106964	270
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0868179798126	13
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0433809757233	3
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0465750694275	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0350921154022	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.1	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.0961301326752	4
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0392260551453	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.1.0.3.1	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.288486003876	13
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	3	search with cache (only 1: fsetdec).	0.0217680931091	4
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	2	search with cache (only 1: intuition).	0.0172960758209	3
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	8	search with cache (only 1: intuition).	0.0413970947266	23
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	1	search with cache (only 1: fsetdec).	0.0319638252258	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	6.2	search with cache (only 1: intros; only 1: fsetdec).	0.0664610862732	10
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0493760108948	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	2.3.1	search with cache (only 1: apply -> subset_spec; only 1: apply <- subset_spec; only 1: fsetdec).	0.0332841873169	11
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0321040153503	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	1	search with cache (only 1: fsetdec).	0.0288100242615	2
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	3.2	search with cache (only 1: intuition; only 1: fsetdec).	0.0559520721436	7
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0266129970551	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0224070549011	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.1	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.0736339092255	5
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	1	search with cache (only 1: fsetdec).	0.0296149253845	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0465939044952	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	0.1.0	search with cache (only 1: red; only 1: intros; only 1: fsetdec).	0.0451219081879	4
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	2	search with cache (only 1: fsetdec).	0.0817179679871	3
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	3.0	search with cache (only 1: intros; only 1: fsetdec).	0.0569660663605	5
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	2	search with cache (only 1: fsetdec).	0.080824136734	3
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.0692329406738	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.0686919689178	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0558559894562	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.133776903152	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	4	search with cache (only 1: fsetdec).	0.0449819564819	5
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0613648891449	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0565450191498	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0571141242981	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0779359340668	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0573289394379	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.0870599746704	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.155724048615	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.141535997391	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.018326997757	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.018541097641	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0321130752563	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0321230888367	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0327260494232	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0385699272156	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0366220474243	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	5.0	search with cache (only 1: intuition; only 1: fsetdec).	1.94600605965	254
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	1	search with cache (only 1: fsetdec).	0.0429470539093	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0372018814087	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0527620315552	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0502400398254	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0790419578552	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.0942480564117	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.108124017715	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	3.3.0	search with cache (only 1: destruct (mem x (inter s s')); only 1: fsetdec; only 1: fsetdec).	1.64399504662	191
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0694978237152	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0492789745331	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0262949466705	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.018581867218	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0187160968781	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0302338600159	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	1	search with cache (only 1: fsetdec).	0.0311241149902	2
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0402939319611	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	1	search with cache (only 1: fsetdec).	0.0225019454956	2
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0550751686096	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0666971206665	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0865800380707	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0718159675598	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	8.13.25	search with cache (only 1: generalize (F.is_empty_iff s); only 1: red; only 1: fsetdec).	3.41084098816	3039
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	5.16.0	search with cache (only 1: intros; only 1: intros E; only 1: fsetdec).	2.55772995949	1242
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.204585075378	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.170287847519	2
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.147958993912	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40	13.1.11.15.8.2.37.110.14	search with cache (only 1: apply length_zero_iff_nil; only 1: bitwise as m; only 1: unfold PeanoNat.Nat.testbit, PeanoNat.Nat.odd; only 1: rewrite <- ?negb_true_iff, ?PeanoNat.Nat.negb_even, ?PeanoNat.Nat.odd_spec, ?PeanoNat.Nat.even_spec; only 1: apply eq_true_iff_eq; only 1: split; only 1: destr_bool; only 1: fix odd_spec 1; only 1: intuition).	33.052667141	85824
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	0.0.0.0.1.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: auto).	0.0919780731201	46
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	0.1.9.0.0.4.20	search with cache (only 1: intros a b; only 1: red; only 1: apply fold_rec_bis; only 1: intros s s' E; only 1: fsetdec; only 1: auto; only 1: fsetdec).	6.90101313591	2697
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	6.1.0.3.1.3	search with cache (only 1: intro x; only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: reflexivity; only 1: fsetdec).	11.1320860386	3380
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	10.4.0.3.1	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: auto; only 1: split; only 1: fsetdec).	13.8175449371	12289
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40	4.1.14.2	search with cache (only 1: intros; only 1: apply fold_1; only 1: eauto with *; only 1: eauto with *).	12.4071061611	7938
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40	1.1.0.0.0.1.2	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: eauto with *; only 1: eauto with *).	1.69427013397	417
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.12.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set relations).	1.38835096359	662
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.4.2.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: auto).	0.142231941223	60
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.2.0.1.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: intuition; only 1: exists e; only 1: auto with relations).	0.229470968246	46
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0.0.2	search with cache (only 1: rewrite cardinal_fold; only 1: apply fold_1; only 1: auto with *; only 1: auto with set).	0.0199439525604	6
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	2.1.12.0	search with cache (only 1: intros; only 1: generalize (cardinal_inv_2 (s:=s)); only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	1.82854104042	1241
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	8.0	search with cache (only 1: intros; only 1: auto with set relations).	0.286379814148	65
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.1.0.0.0.2.1.0.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: split; only 1: congruence; only 1: congruence; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto; only 1: auto with set).	5.92136383057	2341
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.0.0.5.3	search with cache (only 1: intros; only 1: rewrite (cardinal_2 (s:=remove x s) (s':=s) (x:=x)); only 1: auto with set relations; only 1: auto with set relations; only 1: expAdd; only 1: fsetdec).	0.470293045044	170
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	1.0	search with cache (only 1: intros; only 1: auto with set relations).	0.0954530239105	28
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.0.0.0.8.0.5.0	search with cache (only 1: intros P; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: destruct E.compare; only 1: intuition; only 1: intuition; only 1: intuition).	4.58569502831	2032
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0211992263794	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.023325920105	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	2	search with cache (only 1: intuition_in).	0.0129859447479	3
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	1.4.1.4.0.0.46	search with cache (only 1: right; only 1: intuition eauto; only 1: intuition eauto; only 1: intro; only 1: intuition_in; only 1: intro; only 1: intuition_in).	9.26086401939	3140
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.3.1.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	5.35822796822	982
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.2	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0105948448181	5
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.25093793869	62
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.0310180187225	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40	0.0.0.0.0.1.0.0.1	search with cache (only 1: intros; only 1: generalize (mem_iff s x), (mem_iff s y), (In_eq_iff s H); only 1: destruct (mem x s); only 1: destruct (mem y s); only 1: intuition; only 1: intuition; only 1: destruct (mem y s); only 1: intuition; only 1: intuition).	1.6524810791	246
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	3.4.3	search with cache (only 1: intros; only 1: apply <- is_empty_spec; only 1: auto with set).	0.14737701416	80
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	10	search with cache (only 1: intuition).	0.732592105865	291
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40	1.1.0.1.2.0.1.0.1	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (add x s) y), (FM.mem_iff s y), (FM.add_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	20.0021088123	4085
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.9	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.488440990448	89
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40	0.0.0.0.1.2.2.0.2	search with cache (only 1: intros; only 1: generalize (FM.mem_iff (remove x s) y), (FM.mem_iff s y), (FM.remove_neq_iff s H); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	2.65369319916	702
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set relations).	0.0110590457916	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.0.0.0	search with cache (only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0392668247223	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0494589805603	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	3	search with cache (only 1: auto with set).	0.0106461048126	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	1.3.0.2	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply <- equal_spec; only 1: Dec.fsetdec).	0.10154914856	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.1.2	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0235710144043	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.1.3	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.025102853775	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	3.5	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0306520462036	11
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	10	search with cache (only 1: auto with set).	0.0542747974396	37
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	0	search with cache (only 1: auto with set).	0.0113120079041	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	11	search with cache (only 1: auto with set relations).	2.25339818001	399
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0.2.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set relations).	0.0204250812531	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	5.6	search with cache (only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: intuition).	1.29781794548	334
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.2.0.2.1	search with cache (only 1: destruct (mem y s); only 1: rewrite <- not_mem_iff; only 1: auto with set relations; only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.210877895355	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40	3.16	search with cache (only 1: generalize (FM.mem_iff (inter s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (inter_spec s s' x); only 1: intuition).	9.18659687042	1378
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	3.14	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	3.53361701965	1082
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	4.1	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	0.560795783997	135
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	0.0.0.6	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: destruct (mem y (singleton x)); only 1: intuition; only 1: intuition).	2.8988161087	525
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	4.5	search with cache (only 1: generalize (mem_iff (singleton x) y), (singleton_iff x y); only 1: intuition).	3.00443601608	713
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: intuition).	0.0240800380707	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0180370807648	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.0132150650024	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.0125529766083	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0107858181	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	2	search with cache (only 1: auto with set).	0.0224781036377	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.0122091770172	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0	search with cache (only 1: auto with set).	0.011137008667	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.01145195961	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0	search with cache (only 1: auto with set).	0.0197830200195	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	4	search with cache (only 1: auto with set).	0.0136730670929	5
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0121998786926	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0121259689331	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.0113461017609	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.0108890533447	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0242578983307	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.0114099979401	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	0	search with cache (only 1: auto with set).	0.0122530460358	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.0105049610138	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.0100820064545	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	0	search with cache (only 1: auto with set).	0.0191769599915	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	2	search with cache (only 1: auto with set).	0.0103211402893	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.0121910572052	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.2	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0669949054718	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	1	search with cache (only 1: auto with set).	0.0222411155701	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0107309818268	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0188019275665	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	0.2.1.1.1.0.1	search with cache (only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	0.983140945435	339
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	1.0	search with cache (only 1: intros; only 1: auto with set).	0.0836701393127	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.10.0.0.5.3.0.1	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: destruct (mem x s); only 1: auto with *; only 1: auto with *; only 1: congruence; only 1: auto; only 1: auto).	9.33867192268	6431
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.0233030319214	6
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	23	search with cache (only 1: solve_proper).	1.43939304352	921
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	6	search with cache (only 1: intuition).	0.134295940399	16
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.11372590065	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.1.3.0.0.0.1	search with cache (only 1: unfold Equal; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	4.25055789948	648
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	15.1.2.2.0	search with cache (only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: auto with set).	11.6045589447	3973
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.7	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.0630397796631	31
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.740298986435	2
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.0952260494232	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.00967001914978	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0926048755646	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.137268066406	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0146920681	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	1	search with cache (only 1: fsetdec).	0.031222820282	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	0	search with cache (only 1: fsetdec).	0.044713973999	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0514988899231	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0744199752808	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0784158706665	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	0	search with cache (only 1: fsetdec).	0.0542769432068	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.132548093796	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.172668933868	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	3.5.18.8	search with cache (only 1: intros; only 1: apply -> subset_spec; only 1: intuition; only 1: auto).	2.87374186516	2326
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	1	search with cache (only 1: fsetdec).	0.0471079349518	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0617859363556	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0381119251251	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40	5.4.17	search with cache (only 1: intro H; only 1: fix odd_spec 1; only 1: destr_bool).	2.35963010788	4282
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40	10.9.4	search with cache (only 1: intro n; only 1: fix odd_spec 1; only 1: destr_bool).	4.15300989151	6790
Coq.MSets.MSetGenTree.Props.isok_iff	40	1.18	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	1.46991586685	1633
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.1	search with cache (only 1: intros; only 1: intuition_in).	0.0415320396423	3
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.018082857132	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.1.1	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in).	0.0161459445953	5
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: unfold gt_tree; only 1: inversion 1).	0.0117199420929	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.6.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0592489242554	19
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.7.0	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.205924987793	65
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	0.1	search with cache (only 1: intuition_in; only 1: order).	0.0793890953064	25
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	2.0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto).	0.0198698043823	5
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0137898921967	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	3.0.0	search with cache (only 1: unfold gt_tree; only 1: intuition_in; only 1: eauto).	0.0194890499115	6
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	0.0.1.0.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0280261039734	8
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.1.0.3.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto; only 1: auto; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.382400035858	178
Coq.MSets.MSetGenTree.Props.empty_spec	40	2.4	search with cache (only 1: intro n; only 1: eauto).	0.0492980480194	19
Coq.MSets.MSetGenTree.Props.empty_ok	40	10	search with cache (only 1: auto).	0.0106580257416	21
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40	1.23	search with cache (only 1: fix odd_spec 1; only 1: intuition_in).	20.3477098942	11208
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40	4.19	search with cache (only 1: fix odd_spec 1; only 1: intuition).	4.79553103447	3938
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40	4.0.19.4.8.30	search with cache (only 1: intros H; only 1: destruct H; only 1: constructor 1; only 1: reflexivity; only 1: simpl; only 1: ok).	2.93845796585	11482
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40	0.2.3.4.13.22	search with cache (only 1: intro LS'; only 1: compute; only 1: intros; only 1: subst; only 1: setoid_rewrite  <- H; only 1: auto).	2.60678505898	7194
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	22.10	search with cache (only 1: compute; only 1: firstorder).	0.152823925018	803
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40	4.94	search with cache (only 1: fix even_spec 1; only 1: auto).	15.0068819523	40042
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	41	search with cache (only 1: firstorder).	0.474613904953	1346
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40	0.16.14	search with cache (only 1: intros x x' Hx y y' Hy; only 1: setoid_rewrite Hx; only 1: auto).	37.8413360119	18413
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40	5.1	search with cache (only 1: intuition; only 1: firstorder).	0.139719963074	8
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0	search with cache (only 1: Dec.fsetdec).	0.022087097168	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0	search with cache (only 1: Dec.fsetdec).	0.0240528583527	1
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40	14	search with cache (only 1: firstorder).	1.19274616241	499
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	2.0.108	search with cache (only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	2.75050711632	6405
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	15.5.0.0	search with cache (only 1: intros; only 1: unfold Same_set, Included, mkEns, In; only 1: intuition; only 1: Dec.fsetdec).	11.658657074	10645
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	1.11.43.3	search with cache (only 1: intros; only 1: compute; only 1: intuition; only 1: Dec.fsetdec).	5.09256196022	6999
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	3	search with cache (only 1: solve_proper).	0.0284099578857	4
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40	3.18	search with cache (only 1: fix odd_spec 1; only 1: auto).	1.45749402046	1486
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.1.1.1.0.1.0.0.0.0.15	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	4.2863368988	3350
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	13	search with cache (only 1: intuition).	0.0653948783875	85
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	6	search with cache (only 1: constructors).	0.0100388526917	7
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.4.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition; only 1: inv).	0.0319080352783	9
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	0.0.0.1.0.1	search with cache (only 1: destruct s; only 1: intros; only 1: intuition; only 1: split; only 1: auto; only 1: auto).	0.231897115707	89
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	6.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: auto; only 1: auto).	0.035206079483	16
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	5.0.0.0	search with cache (only 1: unfold elements; only 1: induction s; only 1: auto; only 1: intuition).	0.0337631702423	14
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	2.4.0.4.5	search with cache (only 1: unfold Empty; only 1: intuition; only 1: destruct s; only 1: inv; only 1: inversion H).	6.91413497925	4449
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	0.0	search with cache (only 1: unfold elements; only 1: auto).	0.0183770656586	2
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.00651121139526	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40	0.14.15.3	search with cache (only 1: intro m; only 1: intro H; only 1: fix odd_spec 1; only 1: tauto).	20.5702469349	18459
Coq.MSets.MSetList.MakeRaw.add_inf	40
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.1.0.0.0.0.0.1.0.3.0.4	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: elim_compare x a; only 1: inv; only 1: auto; only 1: auto; only 1: inv; only 1: auto).	12.557945013	4027
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	3	search with cache (only 1: intuition).	0.0166029930115	13
Coq.MSets.MSetList.MakeRaw.singleton_spec	40
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40
Coq.MSets.MSetList.MakeRaw.diff_ok	40	2.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.100057840347	5
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40	1.14.6.3	search with cache (only 1: intros H; only 1: intros x l; only 1: fix even_spec 1; only 1: intuition).	12.5468301773	10127
Coq.MSets.MSetList.MakeRaw.empty_ok	40	0	search with cache (only 1: auto).	0.00758004188538	1
Coq.MSets.MSetList.MakeRaw.empty_spec	40	3.23.5	search with cache (only 1: intro n; only 1: rewrite InA_alt; only 1: firstorder).	1.2776761055	1915
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	4	search with cache (only 1: intuition).	0.0410008430481	29
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	8.7.6	search with cache (only 1: intuition; only 1: inv; only 1: intuition).	0.528869152069	686
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.015725851059	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	4.1.0.0	search with cache (only 1: inversion 1; only 1: induction s as [| x s IH]; only 1: inversion 1; only 1: discriminate).	0.0203499794006	9
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40	1.0.1.0.5.0.3	search with cache (only 1: induction s; only 1: inversion 1; only 1: destruct s; only 1: inversion 1; only 1: auto; only 1: inversion 1; only 1: intuition).	5.65286612511	2531
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0.0	search with cache (only 1: intro s; only 1: auto).	0.0112760066986	2
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0	search with cache (only 1: auto).	0.00789594650269	1
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	3.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0142359733582	5
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	1	search with cache (only 1: now Z.nzsimpl').	0.106677055359	2
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.7.18.0	search with cache (only 1: red; only 1: intros; only 1: destruct H; only 1: auto with sets; only 1: auto with sets).	0.347960948944	1008
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	2.0.0.1.20.1.2.9	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	10.3217878342	16660
Coq.Relations.Operators_Properties.clos_rst_idempotent	40
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	1.2.1.4.1.2.28	search with cache (only 1: induction 1 as [? ?| ]; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	1.84175395966	6304
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	5.0.1.0.1	search with cache (only 1: intro y0; only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0869381427765	152
Coq.Relations.Operators_Properties.clos_rtn1_step	40	5.0.2.2	search with cache (only 1: intro y0; only 1: right with y0; only 1: auto; only 1: left).	0.191770792007	285
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	2.2.4.0.14	search with cache (only 1: induction 1 as [? ?| ]; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	0.530746936798	1700
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40	6.0.0.0.2.1.0.1.0.4.1.1.1.10.5	search with cache (only 1: constructor 1; only 1: induction 1 as [| | x y z H IHclos_refl_trans1 H0 IHclos_refl_trans2]; only 1: apply clos_rt1n_step; only 1: auto; only 1: left; only 1: induction IHclos_refl_trans1 as [| x y z0 H1 ? IH]; only 1: auto; only 1: right with y; only 1: auto; only 1: eapply IH; only 1: apply clos_rt1n_rt; only 1: auto; only 1: auto; only 1: auto; only 1: apply clos_rt1n_rt).	19.1370248795	35123
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	2.5.2.4.1.2.23	search with cache (only 1: induction 1 as [? ?| ]; only 1: apply clos_rt1n_rt; only 1: left; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: auto).	10.8741891384	43930
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	1.4.0.4.4.0.2.1.9	search with cache (only 1: split; only 1: red; only 1: reflexivity; only 1: red; only 1: destruct 1; only 1: trivial; only 1: red; only 1: destruct 1; only 1: reflexivity).	1.87042093277	5920
Coq.ssr.ssreflect.master_key	40	54	search with cache (only 1: reflexivity || destruct H).	0.248032093048	2023
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: destr_bool).	0.0270099639893	13
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.00872993469238	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	3.6.0	search with cache (only 1: intro n; only 1: induction n; only 1: auto).	0.0317590236664	63
Coq.ssr.ssreflect.iffLR	40	0	search with cache (only 1: intuition).	0.0094211101532	1
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.00806307792664	1
Coq.ssr.ssreflect.iffLRn	40	2	search with cache (only 1: intuition).	0.0170199871063	3
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.0087878704071	1
Coq.ssr.ssreflect.abstract_context	40	0.96.74	search with cache (only 1: intro H; only 1: apply H; only 1: auto).	5.39090919495	73318
Coq.ssr.ssrbool.prop_congr	40	6	search with cache (only 1: Bool.destr_bool).	0.0301220417023	32
Coq.ssr.ssrbool.is_true_true	40	3	search with cache (only 1: exact (erefl _)).	0.00730299949646	4
Coq.ssr.ssrbool.not_false_is_true	40	1	search with cache (only 1: Bool.destr_bool).	0.00965595245361	2
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00890588760376	2
Coq.ssr.ssrbool.negbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00979089736938	3
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00922393798828	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00837087631226	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00823783874512	1
Coq.ssr.ssrbool.negbK	40	0.23	search with cache (only 1: intro n; only 1: Bool.destr_bool).	0.0399158000946	280
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00761818885803	1
Coq.ssr.ssrbool.negb_inj	40	0.1.1.0.0.6	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: trivial; only 1: Bool.destr_bool; only 1: Bool.destr_bool; only 1: trivial).	0.180963039398	115
Coq.ssr.ssrbool.negbLR	40	10	search with cache (only 1: Bool.destr_bool).	0.0260591506958	21
Coq.ssr.ssrbool.negbRL	40	11	search with cache (only 1: Bool.destr_bool).	0.0366060733795	33
Coq.ssr.ssrbool.contra	40	6.12	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.247794866562	186
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0114719867706	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.011570930481	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  =>//; case : c ).	0.0115931034088	1
Coq.ssr.ssrbool.contraT	40	10.11	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.340617179871	307
Coq.ssr.ssrbool.wlog_neg	40	3	search with cache (only 1: by case : b  =>// ->).	0.0163028240204	4
Coq.ssr.ssrbool.contraFT	40	6.16	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.642124891281	301
Coq.ssr.ssrbool.contraFN	40	7.17	search with cache (only 1: Bool.destr_bool; only 1: auto).	0.718196868896	370
Coq.ssr.ssrbool.contraTF	40	13.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.804513216019	566
Coq.ssr.ssrbool.contraNF	40	14.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	1.0118560791	655
Coq.ssr.ssrbool.contraFF	40	1.8.14	search with cache (only 1: destruct c; only 1: by case : b  =>// ->; only 1: by move /contra =>notb_notc /negbT).	0.630891799927	615
Coq.ssr.ssrbool.contra_not	40	2	search with cache (only 1: auto).	0.00822591781616	3
Coq.ssr.ssrbool.contraPnot	40	0	search with cache (only 1: by auto).	0.00775599479675	1
Coq.ssr.ssrbool.contraTnot	40	1.23	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.547586917877	352
Coq.ssr.ssrbool.contraNnot	40	0	search with cache (only 1: by case : b ; auto).	0.00879502296448	1
Coq.ssr.ssrbool.contraPT	40	1.34.4.20.1	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: Bool.destr_bool; only 1: intuition; only 1: red; only 1: auto).	30.2796990871	55419
Coq.ssr.ssrbool.contra_notT	40	0.52	search with cache (only 1: red; only 1: by case : b ; auto).	16.1654188633	22003
Coq.ssr.ssrbool.contra_notN	40	0	search with cache (only 1: by case : b  =>//= /(_ isT) HP /(_ HP)).	0.0163161754608	1
Coq.ssr.ssrbool.contraPN	40	6.0	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case : b  =>//= /(_ isT) nP /nP).	0.135767936707	20
Coq.ssr.ssrbool.contraFnot	40	0.17	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.309779167175	173
Coq.ssr.ssrbool.contraPF	40	1.0.57.20	search with cache (only 1: repeat match goal with | p:(_ * _)%type |- _ => destruct p | b:bool |- _ => destruct b end; only 1: intros b b'; only 1: by case : b  =>//; auto; only 1: intuition).	13.7841959	36156
Coq.ssr.ssrbool.contra_notF	40	1	search with cache (only 1: by case : b  =>// /(_ isT)).	0.0114929676056	2
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.00765204429626	1
Coq.ssr.ssrbool.ifT	40	4	search with cache (only 1: by case : b ).	0.0113418102264	5
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move ->).	0.00727081298828	2
Coq.ssr.ssrbool.ifN	40	4	search with cache (only 1: by case : b ).	0.0109128952026	5
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.00638318061829	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case  def_b: b ; constructor; rewrite ?def_b).	0.00653195381165	2
Coq.ssr.ssrbool.fun_if	40	0	search with cache (only 1: by case b).	0.00533699989319	1
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00534892082214	1
Coq.ssr.ssrbool.ifE	40	6	search with cache (only 1: reflexivity).	0.00936603546143	7
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.00841593742371	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.0087730884552	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.00839686393738	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.26	search with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	0.867583990097	991
Coq.ssr.ssrbool.introTFn	40	0.6	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.0179569721222	8
Coq.ssr.ssrbool.elimTFn	40	1.7	search with cache (only 1: rewrite -{+1}[b]negbK; only 1: by case c; case Hb).	0.0174582004547	10
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.20	search with cache (only 1: intuition; only 1: by case : Pb ; constructor; auto).	0.141279935837	208
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40	5	search with cache (only 1: by case : Pb ; constructor; auto).	0.00933694839478	6
Coq.ssr.ssrbool.rwP	40	10	search with cache (only 1: by case : Pb ; constructor; auto).	0.020005941391	21
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	2.16.8	search with cache (only 1: intro p; only 1: destruct p; only 1: auto).	0.219856977463	640
Coq.ssr.ssrbool.impliesPn	40	2.5.18	search with cache (only 1: intuition; only 1: destruct H; only 1: auto).	0.291580915451	400
Coq.ssr.ssrbool.unlessL	40	18.8.24	search with cache (only 1: split; only 1: intros; only 1: by move  =>fK injf' x; apply : injf' ).	0.419607877731	2279
Coq.ssr.ssrbool.unlessR	40	4.33.33	search with cache (only 1: split; only 1: intros H ?; only 1: auto).	0.834070920944	5419
Coq.ssr.ssrbool.unless_sym	40	4.4.25.34.29	search with cache (only 1: split; only 1: intros H ?; only 1: apply H; only 1: auto; only 1: auto).	3.26217889786	24545
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.23	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.0880019664764	290
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40	0.9.27.0.9.27.24.27	search with cache (only 1: split; only 1: split; only 1: intro z; only 1: destruct (H z); only 1: auto; only 1: intro z; only 1: destruct (H z); only 1: auto).	16.7063119411	85082
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.00869512557983	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.00999307632446	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtclintros@0> split =>haveP; <ssreflect_plugin::ssrtclintros@0> split =>x; case : (haveP x) ).	0.0106809139252	1
Coq.ssr.ssrbool.pair_andP	40	14	search with cache (only 1: intuition).	0.0272240638733	81
Coq.ssr.ssrbool.idP	40	11.0.9	search with cache (only 1: destruct b1; only 1: intuition; only 1: now constructor).	9.25878310204	376
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00882697105408	1
Coq.ssr.ssrbool.idPn	40	3	search with cache (only 1: by case b1; constructor).	0.0097668170929	4
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.0115048885345	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor).	0.00839185714722	1
Coq.ssr.ssrbool.negPf	40	6.0.11	search with cache (only 1: destruct b1; only 1: now constructor; only 1: now constructor).	0.256169080734	214
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0111260414124	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0101199150085	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00798416137695	1
Coq.ssr.ssrbool.andTb	40	5	search with cache (only 1: repeat split).	0.00650405883789	6
Coq.ssr.ssrbool.andFb	40	4	search with cache (only 1: repeat split).	0.005038022995	5
Coq.ssr.ssrbool.andbT	40	3.14	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0587220191956	157
Coq.ssr.ssrbool.andbF	40	3.6	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0187208652496	27
Coq.ssr.ssrbool.andbb	40	8	search with cache (only 1: by case).	0.0129809379578	13
Coq.ssr.ssrbool.andbC	40	1.1.0.8	search with cache (only 1: intro b1; only 1: destruct b1; only 1: Bool.destr_bool; only 1: Bool.destr_bool).	0.0539128780365	78
Coq.ssr.ssrbool.andbA	40	1.7	search with cache (only 1: intro b1; only 1: Bool.destr_bool).	0.0168800354004	11
Coq.ssr.ssrbool.andbCA	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00966906547546	4
Coq.ssr.ssrbool.andbAC	40	3	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00994300842285	4
Coq.ssr.ssrbool.andbACA	40	4	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0104269981384	5
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00624704360962	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00591492652893	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00718021392822	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.00587010383606	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00545191764832	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00720500946045	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00861787796021	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0093400478363	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00898599624634	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0136659145355	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00600790977478	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.00627183914185	1
Coq.ssr.ssrbool.orbN	40	2	search with cache (only 1: Bool.destr_bool).	0.00710606575012	3
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0070481300354	1
Coq.ssr.ssrbool.andb_orl	40	7	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.011323928833	8
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0100879669189	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0812230110168	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0100018978119	1
Coq.ssr.ssrbool.andb_idl	40	0.1.2.1.2.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: simpl; only 1: auto; only 1: reflexivity).	0.189666032791	173
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.010046005249	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0111739635468	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0153951644897	1
Coq.ssr.ssrbool.orb_idl	40	2	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0106320381165	3
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0105421543121	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0115699768066	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  =>// ->).	0.0151720046997	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.00942397117615	1
Coq.ssr.ssrbool.negb_or	40	1	search with cache (only 1: by case : a ; case : b ).	0.00970482826233	2
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00904297828674	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00896120071411	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00733709335327	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00756311416626	1
Coq.ssr.ssrbool.implybT	40	0	search with cache (only 1: Bool.destr_bool).	0.00691294670105	1
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: Bool.destr_bool).	0.00671195983887	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.00579500198364	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.00708699226379	1
Coq.ssr.ssrbool.implybb	40	0	search with cache (only 1: by case : b ).	0.00582504272461	1
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.00901484489441	1
Coq.ssr.ssrbool.implybE	40	0	search with cache (only 1: by case : a ; case : b ).	0.00783395767212	1
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00766396522522	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00826191902161	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00848007202148	1
Coq.ssr.ssrbool.implyb_idl	40	10	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0719790458679	21
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.0101940631866	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b  =>// ->).	0.011598110199	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00570201873779	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00500297546387	1
Coq.ssr.ssrbool.addbb	40	23	search with cache (only 1: by case).	0.0888199806213	255
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00648713111877	1
Coq.ssr.ssrbool.addbA	40	0.0.0.8.0.9	search with cache (only 1: intros b b'; only 1: destruct b, b'; only 1: Bool.destr_bool; only 1: by [  ]; only 1: by [  ]; only 1: by [  ]).	0.3150370121	400
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00887703895569	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0095009803772	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 4!case).	0.0146760940552	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00965404510498	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.00899386405945	1
Coq.ssr.ssrbool.addKb	40	0.4.13.12	search with cache (only 1: intro H; only 1: destruct H; only 1: by case; only 1: by [  ]).	0.52996301651	1092
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 2!case).	0.00712299346924	1
Coq.ssr.ssrbool.addIb	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0110459327698	2
Coq.ssr.ssrbool.addbI	40	1	search with cache (only 1: by <ssreflect_plugin::ssrtcldo@0> 3!case).	0.0116939544678	2
Coq.ssr.ssrbool.addTb	40	2	search with cache (only 1: by case : b ).	0.00749492645264	3
Coq.ssr.ssrbool.addbT	40	3	search with cache (only 1: by case : b ).	0.00756287574768	4
Coq.ssr.ssrbool.addbN	40	2	search with cache (only 1: by case : a ; case : b ).	0.0106921195984	3
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00749492645264	1
Coq.ssr.ssrbool.addbP	40	4.3.4.1.23	search with cache (only 1: destruct a, b; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	1.21089196205	1238
Coq.ssr.ssrbool.subrelUl	40	38.6.19.24.19	search with cache (only 1: intro n; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	9.37538719177	36034
Coq.ssr.ssrbool.subrelUr	40	38.14.23.24.24	search with cache (only 1: intro n; only 1: intros; only 1: red; only 1: Bool.destr_bool; only 1: intuition).	13.7722029686	58050
Coq.ssr.ssrbool.sub_refl	40	24	search with cache (only 1: by unlock).	0.117780923843	346
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.00681400299072	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  =>_ /= ->).	0.00745987892151	1
Coq.ssr.ssrbool.unfold_in	40	4	search with cache (only 1: by rewrite -mem_topred).	0.00693798065186	5
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.00609993934631	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.0058069229126	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.00641298294067	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	5	search with cache (only 1: auto).	0.00752401351929	6
Coq.ssr.ssrbool.in1W	40	0.5	search with cache (only 1: intro n; only 1: by [  ]).	0.0736558437347	7
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.0079939365387	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.00775098800659	1
Coq.ssr.ssrbool.in1T	40	11	search with cache (only 1: auto).	0.0411238670349	36
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0115919113159	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0118381977081	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.00914311408997	2
Coq.ssr.ssrbool.sub_in11	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0105171203613	2
Coq.ssr.ssrbool.sub_in111	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0115249156952	2
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.00736093521118	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.00725102424622	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.0083429813385	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.00954604148865	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0101730823517	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0131359100342	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0105009078979	2
Coq.ssr.ssrbool.subon1l	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0109879970551	2
Coq.ssr.ssrbool.subon2	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0121920108795	2
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40
Coq.ssr.ssrbool.canRL_in	40
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0122911930084	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0100340843201	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.00987100601196	3
Coq.ssr.ssrbool.inW_bij	40	5.5.42.100	search with cache (only 1: intros [x y]; only 1: exists x; only 1: by move  =>? ?; only 1: by move  =>? ?).	25.8342280388	89734
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.00954413414001	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0122859477997	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.0127818584442	1
Coq.ssr.ssrbool.sub_in_bij	40	0.17	search with cache (only 1: intro n; only 1: by case  =>g' fK g'K; <ssreflect_plugin::ssrtclintros@0> exists g' =>* ? *; auto).	0.158237934113	145
Coq.ssr.ssrbool.subon_bij	40	5	search with cache (only 1: by move  =>subD [g' fK g'K]; <ssreflect_plugin::ssrtclintros@0> exists g' =>x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.018424987793	6
Coq.ssr.ssrbool.sub_in2	40	16.26	search with cache (only 1: intros; only 1: by move  =>? ?; auto).	0.696428060532	1538
Coq.ssr.ssrbool.sub_in3	40	21.26	search with cache (only 1: red; only 1: by move  =>? ?; auto).	1.17433786392	1867
Coq.ssr.ssrbool.sub_in12	40	1.24	search with cache (only 1: intro p; only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.408978939056	334
Coq.ssr.ssrbool.sub_in21	40	1	search with cache (only 1: by move  =>/= sub_dd'; apply : sub_in111 ).	0.0121350288391	2
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	99	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	1.6112101078	5008
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00702214241028	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00808382034302	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00862598419189	1
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK ?mem_g // ?inE; apply).	0.0172879695892	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrbool.homo_sym	40	4	search with cache (only 1: by move  =>hf x y axy; rewrite hf).	0.0107429027557	5
Coq.ssr.ssrbool.mono_sym	40	9	search with cache (only 1: by move  =>fR y x; apply : fR ).	0.00871896743774	10
Coq.ssr.ssrbool.homo_sym_in	40	0	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0100340843201	1
Coq.ssr.ssrbool.mono_sym_in	40	2	search with cache (only 1: by move  =>mf x y hx hy; rewrite -mf ?mem_g // !fgK ?mem_g).	0.0125019550323	3
Coq.ssr.ssrbool.homo_sym_in11	40	1	search with cache (only 1: by move  =>hf x y hx hy axy; rewrite hf).	0.0130479335785	2
Coq.ssr.ssrbool.mono_sym_in11	40	1	search with cache (only 1: by move  =>fR y x yD xD; apply : fR ).	0.00949215888977	2
Coq.ssr.ssrbool.onW_can	40	7	search with cache (only 1: by move  =>? ?).	0.0096070766449	8
Coq.ssr.ssrbool.onW_can_in	40	11	search with cache (only 1: by move  =>hf x hx ax; rewrite hf).	0.0291771888733	33
Coq.ssr.ssrbool.in_onW_can	40	0	search with cache (only 1: by move  =>fgK x xrD xaD; apply : fgK ).	0.00745916366577	1
Coq.ssr.ssrbool.onS_can	40	44	search with cache (only 1: by move  =>fK injf' x; apply : injf' ).	0.501173019409	990
Coq.ssr.ssrbool.onS_can_in	40	25.54	search with cache (only 1: move  =>f0 fP; only 1: by move  =>? ?; auto).	3.09428095818	6369
Coq.ssr.ssrbool.in_onS_can	40	7	search with cache (only 1: by move  =>mem_g fgK x; apply : fgK ).	0.0116200447083	8
Coq.ssr.ssrbool.inj_can_sym_in_on	40
Coq.ssr.ssrbool.inj_can_sym_on	40
Coq.ssr.ssrbool.inj_can_sym_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.0074360370636	1
Coq.ssr.ssrfun.unitE	40	5.13.2	search with cache (only 1: intro n; only 1: case n; only 1: auto).	0.156278133392	479
Coq.ssr.ssrfun.frefl	40	1.17	search with cache (only 1: intro n; only 1: trivial).	0.0299689769745	166
Coq.ssr.ssrfun.fsym	40	0.10	search with cache (only 1: intros; only 1: by [  ]).	0.0224149227142	33
Coq.ssr.ssrfun.ftrans	40	3.34.26.40	search with cache (only 1: intros Hfst Hsnd; only 1: intro n; only 1: rewrite Hfst; only 1: by [  ]).	5.45990490913	40000
Coq.ssr.ssrfun.rrefl	40	21	search with cache (only 1: split).	0.0282740592957	208
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.0134921073914	1
Coq.ssr.ssrfun.svalP	40	26	search with cache (only 1: apply proj2_sig).	0.166465997696	333
Coq.ssr.ssrfun.s2valP	40	11	search with cache (only 1: by case : u ).	0.0189261436462	33
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.0093400478363	1
Coq.ssr.ssrfun.all_sig	40	1	search with cache (only 1: by move  =>fP; <ssreflect_plugin::ssrtclintros@0> exists (fun x => tag (fP x)) =>x; case : (fP x) ).	0.01606798172	2
Coq.ssr.ssrfun.all_sig2	40	1	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0220801830292	2
Coq.ssr.ssrfun.can_pcan	40	1.12.66.29	search with cache (only 1: intros; only 1: intro b1; only 1: rewrite H; only 1: reflexivity).	12.5588760376	98102
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); <ssreflect_plugin::ssrtclintros@0> rewrite !fK =>[[]]).	0.0114641189575	2
Coq.ssr.ssrfun.canLR	40	19.42.14	search with cache (only 1: intros h1 h2; only 1: subst; only 1: apply h1).	1.45685696602	10151
Coq.ssr.ssrfun.canRL	40	17.22	search with cache (only 1: destruct 2; only 1: auto).	0.374590873718	1447
Coq.ssr.ssrfun.Some_inj	40	1.3.7	search with cache (only 1: intro n; only 1: inversion 1; only 1: reflexivity).	0.159682035446	85
Coq.ssr.ssrfun.of_voidK	40	12.9	search with cache (only 1: intro n; only 1: induction n).	0.183376073837	309
Coq.ssr.ssrfun.esymK	40	0.21.60.9	search with cache (only 1: red; only 1: intro m; only 1: destruct m; only 1: reflexivity).	1.96722793579	14034
Coq.ssr.ssrfun.etrans_id	40
Coq.ssr.ssrfun.inj_id	40	2	search with cache (only 1: by move  =>x y []).	0.115806818008	3
Coq.ssr.ssrfun.inj_can_sym	40	28.63	search with cache (only 1: red; only 1: auto).	2.20389008522	11436
Coq.ssr.ssrfun.inj_comp	40	21.49	search with cache (only 1: red; only 1: auto).	2.12495088577	8111
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.0	search with cache (only 1: intro n; only 1: auto).	0.00775003433228	2
Coq.ssr.ssrunder.Under_rel.Under_relE	40	0	search with cache (only 1: now trivial).	0.00758004188538	1
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00695991516113	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.0082700252533	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00744700431824	1
Coq.Sets.Uniset.le_refl	40	0	search with cache (only 1: destr_bool).	0.00885796546936	1
Coq.Sets.Uniset.incl_left	40
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0164461135864	4
Coq.Sets.Uniset.seq_refl	40	2	search with cache (only 1: auto).	0.0076470375061	3
Coq.Sets.Uniset.seq_trans	40	0.1.2.13.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: intro H; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	1.19969797134	2213
Coq.Sets.Uniset.seq_sym	40	0.1.1.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: destruct y; only 1: simpl; only 1: auto).	0.0197031497955	7
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.0134589672089	3
Coq.Sets.Uniset.union_empty_right	40	0.0.0.11.1.0.0.0.2	search with cache (only 1: destruct x; only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intros; only 1: destruct b; only 1: auto; only 1: simpl; only 1: auto).	4.31508994102	9397
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	0.0.0.1.0.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: unfold union; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with bool).	0.0440628528595	19
Coq.Sets.Uniset.seq_left	40	0.1.2.0.1.1.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: rewrite H; only 1: auto).	5.55394697189	4381
Coq.Sets.Uniset.seq_right	40	0.0.1.1.0.0.1.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct z; only 1: destruct y; only 1: intros; only 1: elim H; only 1: auto).	0.836831092834	424
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40
Coq.Sets.Multiset.meq_refl	40	0.7	search with cache (only 1: compute; only 1: firstorder).	0.0098671913147	9
Coq.Sets.Multiset.meq_trans	40	6.6.0.9.0	search with cache (only 1: destruct x; only 1: intros; only 1: unfold meq; only 1: firstorder; only 1: congruence).	19.0760560036	6228
Coq.Sets.Multiset.meq_sym	40	0.1.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: destruct y; only 1: auto).	0.0168409347534	5
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: auto).	0.0161020755768	3
Coq.Sets.Multiset.munion_empty_right	40	1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0153980255127	5
Coq.Sets.Multiset.munion_comm	40	6.0.4.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: intros; only 1: simpl; only 1: intuition).	2.29528284073	1690
Coq.Sets.Multiset.munion_ass	40	0.0.1.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.0285608768463	7
Coq.Sets.Multiset.meq_left	40	1.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0234820842743	8
Coq.Sets.Multiset.meq_right	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto with arith).	0.0320999622345	13
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	3.1.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct z; only 1: destruct y; only 1: auto).	0.034989118576	13
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	0	search with cache (only 1: intuition).	0.00682783126831	1
Coq.Sets.Integers.le_antisym	40	2.9	search with cache (only 1: intros H H1 H2; only 1: PeanoNat.Nat.Private_Tac.order).	0.0837759971619	53
Coq.Sets.Integers.le_trans	40	13.0	search with cache (only 1: intros a b; only 1: PeanoNat.Nat.order).	0.160309076309	186
Coq.Sets.Integers.le_Order	40	0.5.0.0.1.0.1.196	search with cache (only 1: split; only 1: intuition; only 1: red; only 1: intros n m Hn Hm; only 1: PeanoNat.Nat.Private_Tac.order; only 1: red; only 1: intros n m H; only 1: PeanoNat.Nat.Private_Tac.order).	7.88861298561	23850
Coq.Sets.Integers.triv_nat	40	28	search with cache (only 1: split).	0.669747114182	1813
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	1.9.3.0.16	search with cache (only 1: intros; only 1: intro n; only 1: intros; only 1: intro m; only 1: auto).	0.711079120636	3566
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	7.1.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: auto  10 with sets).	0.257078886032	164
Coq.Sets.Relations_1_facts.contains_is_preorder	40	2.5	search with cache (only 1: intro h; only 1: auto  10 with sets).	0.0124490261078	9
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	1.2.10	search with cache (only 1: intros x y z h; only 1: elim h; only 1: auto  10 with sets).	0.686069011688	1266
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	1.0.0	search with cache (only 1: unfold Symmetric, Complement; only 1: unfold same_relation at 1; only 1: intuition).	0.014867067337	4
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	1.1	search with cache (only 1: unfold same_relation at 1; only 1: intuition).	0.0256609916687	15
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	0	search with cache (only 1: intuition).	0.00889801979065	1
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.00823307037354	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.2.6.1.0.5.2	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	17.2983560562	21690
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	3.2.1	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0358459949493	43
Coq.Sets.Permut.comm_left	40	3.2.1	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.031553030014	31
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.1.7.2.0.16.5	search with cache (only 1: intro H'3; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H'; only 1: elim H'; only 1: destruct 1; only 1: auto with sets).	3.73286390305	6118
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	0.12.4	search with cache (only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	0.28215098381	521
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	13.3.7	search with cache (only 1: intros H'3 H'4; only 1: intro h; only 1: elim h).	0.859483003616	3074
Coq.Sets.Powerset.Power_set_Inhabited	40	9.72.90	search with cache (only 1: intro x; only 1: exists x; only 1: auto  10 with sets).	13.2057509422	191744
Coq.Sets.Powerset.Inclusion_is_an_order	40	22	search with cache (only 1: auto  10 with sets).	0.446624994278	628
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.0089590549469	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0	search with cache (only 1: auto  6 with sets).	0.00716304779053	1
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40
Coq.Sets.Powerset.Empty_set_is_Bottom	40
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	0	search with cache (only 1: auto with sets).	0.0093400478363	1
Coq.Sets.Powerset.Union_increases_l	40	0.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0124797821045	4
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00744009017944	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.2.2.5.4	search with cache (only 1: intros H'1 H'2; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	1.65294790268	1039
Coq.Sets.Powerset.Intersection_decreases_r	40	0.1.1.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0172469615936	7
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	3.0.0.3.0	search with cache (only 1: red; only 1: intros x H; only 1: red; only 1: unfold Setminus at 1; only 1: auto with sets).	0.356245040894	133
Coq.Sets.Classical_sets.Subtract_inv	40	2.3.5.13	search with cache (only 1: intros a b; only 1: intros x H'; only 1: induction H'; only 1: auto with sets).	2.94844985008	5134
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40	0.35.7	search with cache (only 1: intros A NI; only 1: firstorder; only 1: auto  7 using Inhabited_Setminus with sets).	15.3296580315	26334
Coq.Sets.Classical_sets.not_SIncl_empty	40	2.1.2.0.0	search with cache (only 1: intro X; only 1: red; only 1: intro H'; only 1: elim H'; only 1: auto with sets).	0.024894952774	11
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	0.1.10.0.3.0.2.7	search with cache (only 1: generalize Rstar_transitive; only 1: intro T1; only 1: intros U R; only 1: red; only 1: red in T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	9.53404307365	18217
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.0.1.0.0.0	search with cache (only 1: intros X x H'; only 1: unfold Subtract; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.0186560153961	7
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.0.0.7.1	search with cache (only 1: intros a b; only 1: generalize Inclusion_is_transitive; only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	3.09810900688	1848
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	39.11	search with cache (only 1: intro H; only 1: auto  6 with sets).	1.7491710186	4592
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.0118000507355	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.8	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.0321478843689	23
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.0119957923889	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto  6 with sets).	0.0137948989868	1
Coq.Sets.Powerset_facts.Union_associative	40	60.5	search with cache (only 1: intros y H'1; only 1: auto  10 with sets).	27.3994400501	34395
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.0133860111237	1
Coq.Sets.Powerset_facts.Union_absorbs	40	0	search with cache (only 1: auto  6 with sets).	0.0146219730377	1
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.664937973022	864
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets).	22.7094500065	15788
Coq.Sets.Powerset_facts.Intersection_commutative	40
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	8.1.1	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.857409954071	781
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.1.0.1.1.0.0.0.2.1	search with cache (only 1: unfold Add; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: red; only 1: auto with sets).	2.44142913818	2421
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.1.1.2.7.1	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	0.832926034927	1178
Coq.Sets.Powerset_facts.incl_add	40	0.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.00997591018677	2
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	8.0	search with cache (only 1: unfold Add; only 1: auto  9 with sets).	0.110254049301	48
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40	0.0.1.0.0.0.0.0.0.1.0.4.0.6	search with cache (only 1: intros; only 1: unfold Add; only 1: apply Extensionality_Ensembles; only 1: split; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: intros x2 H'1; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	32.553319931	23409
Coq.Sets.Powerset_facts.setcover_intro	40	0	search with cache (only 1: auto with sets).	0.00594592094421	1
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	2.2.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0333578586578	27
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0163209438324	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	0.1.0.1.0.1.0.0.0.2	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x0 H'0; only 1: elim H'0).	0.918195009232	994
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.0282709598541	11
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.1.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: intuition; only 1: contradict H; only 1: intuition; only 1: intros x H1; only 1: inversion_clear H1).	0.244447946548	173
Coq.Sets.Constructive_sets.Extension	40	0.0.1.0.0.1.1.11.2.11	search with cache (only 1: red; only 1: intro; only 1: intros Hfst Hsnd; only 1: split; only 1: subst; only 1: intro n; only 1: auto; only 1: subst; only 1: intro n; only 1: auto).	3.30141687393	15715
Coq.Sets.Constructive_sets.Noone_in_empty	40	12.1	search with cache (only 1: intro n; only 1: inversion 1).	0.0777370929718	269
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.0084011554718	4
Coq.Sets.Constructive_sets.Add_intro1	40	0.7.5.3.3	search with cache (only 1: red; only 1: red; only 1: intros B C H'; only 1: left; only 1: auto with sets).	1.64406299591	4859
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00764894485474	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.22.3.2.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	1.50456094742	9080
Coq.Sets.Constructive_sets.Inhabited_not_empty	40	0.17.1.12.8.2.2	search with cache (only 1: intro; only 1: red; only 1: destruct 1; only 1: intro n; only 1: elim (Noone_in_empty x); only 1: induction n; only 1: auto with sets).	15.5374500751	95152
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.17.8.10.9.0.2	search with cache (only 1: red; only 1: intro H'1; only 1: unfold Add at 1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto with sets).	27.9407799244	170881
Coq.Sets.Constructive_sets.not_Empty_Add	40	1.7.14.5.2.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	4.12938380241	18256
Coq.Sets.Constructive_sets.Singleton_inv	40	0.3.2.1	search with cache (only 1: intros x H'0; only 1: intro H'1; only 1: rewrite H'1; only 1: auto with sets).	0.0168981552124	10
Coq.Sets.Constructive_sets.Singleton_intro	40	1.0.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: trivial with sets).	0.0111768245697	4
Coq.Sets.Constructive_sets.Union_inv	40	1.1.12	search with cache (only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	0.322157859802	585
Coq.Sets.Constructive_sets.Add_inv	40	0.16.0.1.1.0	search with cache (only 1: unfold Add at 1; only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets; only 1: destruct 1; only 1: auto with sets).	26.2883770466	28749
Coq.Sets.Constructive_sets.Intersection_inv	40	0.1.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.0122578144073	4
Coq.Sets.Constructive_sets.Couple_inv	40	2.2.4.0.0.0	search with cache (only 1: intros A x y H'; only 1: induction H'; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.369035005569	682
Coq.Sets.Constructive_sets.Setminus_intro	40	0.0	search with cache (only 1: intros x H'0; only 1: auto with sets).	0.00997614860535	2
Coq.Sets.Constructive_sets.Strict_Included_intro	40	3.0.0.0	search with cache (only 1: intro; only 1: intros x H'0; only 1: red; only 1: auto with sets).	0.0124540328979	7
Coq.Sets.Constructive_sets.Strict_Included_strict	40	0.5.4	search with cache (only 1: intros X H'; only 1: elim H'; only 1: auto with sets).	0.0912389755249	193
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	1.4.1	search with cache (only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0120859146118	9
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	0.30.43	search with cache (only 1: intros; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	1.57834601402	9283
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40	1.0.3.24	search with cache (only 1: inversion 1; only 1: auto with sets; only 1: elim (not_Empty_Add U A x); only 1: auto with sets).	2.25858187675	2739
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	5.0.0	search with cache (only 1: induction 1; only 1: auto; only 1: auto with sets).	0.0192830562592	13