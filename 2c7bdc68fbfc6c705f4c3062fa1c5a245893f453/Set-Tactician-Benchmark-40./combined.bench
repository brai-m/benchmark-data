
Coq.Init.Wf.Well_founded.Acc_inv	40	8.5.2	synth with cache (only 1: intro; only 1: destruct 1; only 1: assumption).	0.105461835861	386
Coq.Init.Wf.Well_founded.well_founded_induction_type	40
Coq.Init.Wf.Well_founded.well_founded_induction	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.009929895401	4
Coq.Init.Wf.Well_founded.well_founded_ind	40	0.0.0.0	synth with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00749683380127	4
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_eq	40	0.96	synth with cache (only 1: intros f [x]; only 1: trivial).	3.03034710884	29546
Coq.Init.Wf.Well_founded.FixPoint.Fix_F_inv	40
Coq.Init.Wf.Well_founded.FixPoint.Fix_eq	40
Coq.Init.Wf.Well_founded_2.well_founded_induction_type_2	40
Coq.Init.Peano.pred_Sn	40	1	synth with cache (only 1: reflexivity).	0.00707006454468	2
Coq.Init.Peano.not_eq_S	40	0.8	synth with cache (only 1: intro H; only 1: auto).	0.0149991512299	19
Coq.Init.Peano.O_S	40	4	synth with cache (only 1: discriminate).	0.0107378959656	14
Coq.Init.Peano.n_Sn	40	3.0.4.27.5	synth with cache (only 1: red; only 1: intro H1; only 1: elim H1; only 1: discriminate; only 1: auto).	1.03936100006	7512
Coq.Init.Peano.plus_n_O	40	0.4.0.9.20	synth with cache (only 1: intros; only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.381209850311	1416
Coq.Init.Peano.plus_O_n	40	0.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0142488479614	5
Coq.Init.Peano.plus_n_Sm	40	1.0.1.2	synth with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.0144670009613	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	synth with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0171020030975	6
Coq.Init.Peano.mult_n_O	40	1.0.0.0.0	synth with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0142300128937	6
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.1.2	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.00876498222351	6
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	synth with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0168828964233	23
Coq.Init.Peano.nat_case	40	0.4.7	synth with cache (only 1: induction n; only 1: auto; only 1: auto).	0.0751571655273	209
Coq.Init.Peano.nat_double_ind	40	3.2.7.1.1	synth with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.341133117676	774
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.2.0.0.0.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	10.2217879295	9059
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	7.4410700798	5181
Coq.Init.Peano.min_r	40	0.0.1.0.1.0.1.0.0.0.0.0.0	synth with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	5.03332400322	4025
Coq.Init.Peano.nat_rect_succ_r	40	0.2.1.0.5	synth with cache (only 1: induction n as [| p H]; only 1: auto; only 1: simpl; only 1: destruct H; only 1: trivial).	0.215933799744	301
Coq.Init.Peano.nat_rect_plus	40	0.0.2.0.1.0	synth with cache (only 1: intros ? ? ? Fl Fr; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.0163900852203	9
Coq.Init.Byte.of_bits_to_bits	40
Coq.Init.Byte.to_bits_of_bits	40
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.0.7.35	synth with cache (only 1: intro H; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	1.18416309357	9216
Coq.Init.Datatypes.eq_true_ind_r	40	0.5.10.10.3.0	synth with cache (only 1: intro; only 1: intro; only 1: intro H1; only 1: intro H; only 1: destruct H; only 1: assumption).	0.214579820633	1902
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00683498382568	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	synth with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00566482543945	3
Coq.Init.Datatypes.surjective_pairing	40	0.6	synth with cache (only 1: intros A B [H1 H2]; only 1: trivial).	0.00856709480286	12
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	2.0.1	synth with cache (only 1: destruct H; only 1: simpl in *; only 1: reflexivity).	0.00985193252563	6
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.0.1	synth with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.0108461380005	6
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	synth with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	8.0560760498	23668
Coq.Init.Datatypes.CompOpp_iff	40
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.Conjunction.proj1	40
Coq.Init.Logic.Conjunction.proj2	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00258994102478	2
Coq.Init.Logic.Equivalence.iff_refl	40
Coq.Init.Logic.Equivalence.iff_trans	40	0.0.0.2.1	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00567698478699	12
Coq.Init.Logic.Equivalence.iff_sym	40	0.0.0.2	synth with cache (only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.00367999076843	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.0.1.0.0.0.0.4	synth with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0677089691162	503
Coq.Init.Logic.and_iff_compat_r	40	2.2.1.0.0.2.2.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.618839025497	5025
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	2.1.2.1.0.0.2.1.2.0.0.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	1.07937884331	8691
Coq.Init.Logic.imp_iff_compat_l	40	8.8.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.0947849750519	615
Coq.Init.Logic.imp_iff_compat_r	40	3.0.1.0.3.2.1.0.0.0	synth with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: apply H; only 1: apply Hr; only 1: assumption; only 1: intros H ?; only 1: apply H; only 1: apply Hl; only 1: assumption).	0.308431863785	1298
Coq.Init.Logic.not_iff_compat	40	0.0.0.0	synth with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00690817832947	4
Coq.Init.Logic.neg_false	40	0.9.11.0.0.0	synth with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.476741075516	3739
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	synth with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.0540730953217	74
Coq.Init.Logic.and_assoc	40	3.3.3.0.2.7.1.2.1.2.4.1.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: apply HypL; only 1: split; only 1: apply HypL; only 1: assumption; only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	9.9983921051	52567
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.0.0.0.0.1.0.0.0	synth with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.315654039383	608
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.0	synth with cache (only 1: intros; only 1: assumption).	0.00768399238586	3
Coq.Init.Logic.iff_to_and	40	0.0.0.0.0.0.0.1.1.0	synth with cache (only 1: intros; only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: destruct 1; only 1: split; only 1: trivial; only 1: trivial).	0.183289051056	296
Coq.Init.Logic.universal_quantification.inst	40	8	synth with cache (only 1: auto).	0.0106360912323	26
Coq.Init.Logic.universal_quantification.gen	40	1.0	synth with cache (only 1: unfold all; only 1: auto).	0.00576591491699	3
Coq.Init.Logic.Logic_lemmas.absurd	40	6.3.7.0.3.1	synth with cache (only 1: intro A; only 1: intro H; only 1: unfold not; only 1: intros; only 1: elim H1; only 1: assumption).	0.821464061737	5969
Coq.Init.Logic.Logic_lemmas.equality.eq_sym	40	0.9	synth with cache (only 1: destruct 1; only 1: trivial).	0.0136308670044	30
Coq.Init.Logic.Logic_lemmas.equality.eq_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00899195671082	3
Coq.Init.Logic.Logic_lemmas.equality.eq_trans_r	40	0.0	synth with cache (only 1: destruct 2; only 1: trivial).	0.00658202171326	2
Coq.Init.Logic.Logic_lemmas.equality.f_equal	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00623202323914	2
Coq.Init.Logic.Logic_lemmas.equality.not_eq_sym	40	20.1	synth with cache (only 1: destruct 2; only 1: auto).	0.266469955444	1084
Coq.Init.Logic.Logic_lemmas.eq_sind_r	40	2.4.2	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: auto).	0.0178520679474	35
Coq.Init.Logic.Logic_lemmas.eq_ind_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00839495658875	4
Coq.Init.Logic.Logic_lemmas.eq_rec_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00797295570374	4
Coq.Init.Logic.Logic_lemmas.eq_rect_r	40	1.0.0	synth with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00888299942017	4
Coq.Init.Logic.equality_dep.f_equal_dep	40
Coq.Init.Logic.equality_dep2.f_equal_dep2	40	0.3.7	synth with cache (only 1: destruct 1; only 1: destruct H; only 1: reflexivity).	0.0626759529114	107
Coq.Init.Logic.rew_opp_r	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00921201705933	2
Coq.Init.Logic.rew_opp_l	40	0.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.0104050636292	3
Coq.Init.Logic.f_equal2	40	0.2.4	synth with cache (only 1: destruct 2; only 1: destruct H; only 1: trivial).	0.0239610671997	38
Coq.Init.Logic.f_equal3	40	0.2.0.1	synth with cache (only 1: destruct 1; only 1: destruct 2; only 1: destruct H; only 1: reflexivity).	0.0122909545898	7
Coq.Init.Logic.f_equal4	40	1.1.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0142178535461	7
Coq.Init.Logic.f_equal5	40	1.1.0.0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0175909996033	8
Coq.Init.Logic.f_equal_compose	40	0.9.3.3	synth with cache (only 1: intros A x P H y H0; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.31027007103	643
Coq.Init.Logic.eq_trans_refl_l	40	0.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00984287261963	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00977611541748	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00896382331848	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00952696800232	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.00925779342651	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.3.0	synth with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	0.0154228210449	8
Coq.Init.Logic.rew_map	40	0.11	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0777139663696	102
Coq.Init.Logic.eq_trans_map	40	4.26.2.3.8	synth with cache (only 1: intros A x P H y H0; only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct Fl; only 1: assumption).	6.18778800964	35539
Coq.Init.Logic.map_subst	40	0.0	synth with cache (only 1: destruct H; only 1: reflexivity).	0.00988006591797	2
Coq.Init.Logic.map_subst_map	40	0.1	synth with cache (only 1: destruct H; only 1: reflexivity).	0.0126330852509	3
Coq.Init.Logic.rew_swap	40	5.0.0	synth with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.0127239227295	8
Coq.Init.Logic.rew_compose	40	2.0.0	synth with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.0136909484863	5
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	synth with cache (only 1: intros; only 1: reflexivity).	0.0121920108795	2
Coq.Init.Logic.eq_trans_map_distr	40	1.1.1.8.0	synth with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.285171985626	376
Coq.Init.Logic.eq_sym_map_distr	40	0.0	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0126938819885	2
Coq.Init.Logic.eq_trans_sym_distr	40	0.6.0	synth with cache (only 1: destruct e; only 1: destruct e'; only 1: reflexivity).	0.0178921222687	13
Coq.Init.Logic.eq_trans_rew_distr	40	0.4	synth with cache (only 1: destruct e'; only 1: reflexivity).	0.0161488056183	14
Coq.Init.Logic.rew_const	40	1.3	synth with cache (only 1: destruct e; only 1: reflexivity).	0.0127749443054	15
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	7.0.0	synth with cache (only 1: intros A P H; only 1: destruct H; only 1: auto).	0.0133948326111	10
Coq.Init.Logic.inhabited_covariant	40	0.3.9	synth with cache (only 1: intros h1 h2; only 1: destruct h2; only 1: auto).	0.0410599708557	124
Coq.Init.Logic.eq_stepl	40	2.0.7	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: auto).	0.0851359367371	117
Coq.Init.Logic.iff_stepl	40	0.0.0.0	synth with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.0129899978638	4
Coq.Init.Logic.ex.eq_ex_uncurried	40
Coq.Init.Logic.ex.rew_ex	40
Coq.Init.Logic.ex2.eq_ex2_uncurried	40	0.2.2.2.5	synth with cache (only 1: destruct pq as [p q]; only 1: destruct H; only 1: destruct p; only 1: destruct q; only 1: reflexivity).	0.119258165359	187
Coq.Init.Logic.ex2.rew_ex2	40	0.0	synth with cache (only 1: destruct H, u; only 1: reflexivity).	0.0163660049438	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_sym	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00752687454224	2
Coq.Init.Logic_Type.identity_is_a_congruence.identity_trans	40	0.0.0	synth with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00808119773865	3
Coq.Init.Logic_Type.identity_is_a_congruence.identity_congr	40	0.0	synth with cache (only 1: destruct 1; only 1: trivial).	0.00609993934631	2
Coq.Init.Logic_Type.identity_is_a_congruence.not_identity_sym	40	0.0.0.0.0	synth with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0097451210022	5
Coq.Init.Logic_Type.identity_ind_r	40	0.18.7	synth with cache (only 1: intros A B C Hl Hr; only 1: destruct 1; only 1: trivial).	0.23104095459	1425
Coq.Init.Logic_Type.identity_rec_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00871896743774	4
Coq.Init.Logic_Type.identity_rect_r	40	0.1.0	synth with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.008131980896	4