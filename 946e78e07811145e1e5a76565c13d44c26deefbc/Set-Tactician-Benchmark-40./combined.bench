
Coq.micromega.OrderedRing.rplus_morph_Proper	40
Coq.micromega.OrderedRing.rtimes_morph_Proper	40
Coq.micromega.OrderedRing.ropp_morph_Proper	40
Coq.micromega.OrderedRing.rle_morph_Proper	40
Coq.micromega.OrderedRing.rlt_morph_Proper	40
Coq.micromega.OrderedRing.rminus_morph_Proper	40
Coq.micromega.OrderedRing.Rneq_symm	40	13.23.18	search with cache (only 1: intros; only 1: intros H0; only 1: now elim H).	3.06016206741	3871
Coq.micromega.OrderedRing.Rplus_0_l	40
Coq.micromega.OrderedRing.Rplus_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0235002040863	2
Coq.micromega.OrderedRing.Rtimes_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0231809616089	2
Coq.micromega.OrderedRing.Rplus_comm	40	6.4.5	search with cache (only 1: intro; only 1: intro; only 1: ring).	0.152200937271	207
Coq.micromega.OrderedRing.Rtimes_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.023068189621	2
Coq.micromega.OrderedRing.Rtimes_comm	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0261259078979	3
Coq.micromega.OrderedRing.Rminus_eq_0	40
Coq.micromega.OrderedRing.Rplus_cancel_l	40
Coq.micromega.OrderedRing.Req_em	40
Coq.micromega.OrderedRing.Req_dne	40
Coq.micromega.OrderedRing.Rle_lt_eq	40
Coq.micromega.OrderedRing.Rlt_trans	40
Coq.micromega.OrderedRing.Rle_lt_trans	40
Coq.micromega.OrderedRing.Rlt_le_trans	40
Coq.micromega.OrderedRing.Rle_gt_cases	40
Coq.micromega.OrderedRing.Rlt_neq	40	0.2.4	search with cache (only 1: intros; only 1: rewrite Rlt_le_neq in H; only 1: now destruct H).	0.120758056641	62
Coq.micromega.OrderedRing.Rle_ngt	40
Coq.micromega.OrderedRing.Rlt_nge	40
Coq.micromega.OrderedRing.Rplus_le_mono_l	40
Coq.micromega.OrderedRing.Rplus_le_mono_r	40
Coq.micromega.OrderedRing.Rplus_lt_mono_l	40
Coq.micromega.OrderedRing.Rplus_lt_mono_r	40	0.0.0.3.1.0	search with cache (only 1: intros n m p; only 1: rewrite (Rplus_comm m p); only 1: rewrite (Rplus_comm n p); only 1: do 2 rewrite Rlt_le_neq; only 1: rewrite Rplus_cancel_l; only 1: now rewrite <- Rplus_le_mono_l).	0.172892093658	42
Coq.micromega.OrderedRing.Rplus_lt_mono	40
Coq.micromega.OrderedRing.Rplus_le_mono	40
Coq.micromega.OrderedRing.Rplus_lt_le_mono	40
Coq.micromega.OrderedRing.Rplus_le_lt_mono	40
Coq.micromega.OrderedRing.Rplus_pos_pos	40
Coq.micromega.OrderedRing.Rplus_pos_nonneg	40
Coq.micromega.OrderedRing.Rplus_nonneg_pos	40
Coq.micromega.OrderedRing.Rplus_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rle_le_minus	40
Coq.micromega.OrderedRing.Rlt_lt_minus	40
Coq.micromega.OrderedRing.Ropp_lt_mono	40
Coq.micromega.OrderedRing.Ropp_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_nonneg_nonneg	40
Coq.micromega.OrderedRing.Rtimes_pos_neg	40
Coq.micromega.OrderedRing.Rtimes_neg_neg	40
Coq.micromega.OrderedRing.Rtimes_square_nonneg	40
Coq.micromega.OrderedRing.Rtimes_neq_0	40
Coq.micromega.OrderedRing.Ropp_neg_pos	40
Coq.micromega.OrderedRing.Rlt_0_1	40
Coq.micromega.OrderedRing.Rlt_succ_r	40
Coq.micromega.OrderedRing.Rlt_lt_succ	40
Coq.micromega.Ztac.eq_incl	40	0.2	search with cache (only 1: intros x IH Hx; only 1: now subst).	0.0116209983826	4
Coq.micromega.Ztac.elim_concl_eq	40
Coq.micromega.Ztac.elim_concl_le	40	1.0	search with cache (only 1: intros; only 1: Z.order).	0.0731360912323	59
Coq.micromega.Ztac.elim_concl_lt	40	2.1.1.0	search with cache (only 1: intros; only 1: destruct (Z_lt_le_dec y x); only 1: Z.order; only 1: Z.order).	0.0209050178528	13
Coq.micromega.Ztac.Zlt_le_add_1	40
Coq.micromega.Ztac.add_le	40	1.1	search with cache (only 1: intros; only 1: now apply Z.add_nonneg_nonneg).	0.00789213180542	4
Coq.micromega.Ztac.mul_le	40
Coq.micromega.ZifyInst.PropAnd	40
Coq.micromega.ZifyInst.PropOr	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0203261375427	2
Coq.micromega.ZifyInst.PropArrow	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.0147528648376	2
Coq.micromega.ZifyInst.PropIff	40	0.0	search with cache (only 1: constructor; only 1: tauto).	0.06915807724	2
Coq.micromega.ZifyInst.PropNot	40	0.0.0	search with cache (only 1: constructor; only 1: intros; only 1: tauto).	0.0123488903046	3
Coq.micromega.ZifyInst.of_nat_to_nat_eq	40	2.3.0.16.16.20	search with cache (only 1: unfold Z.max, N.max; only 1: simpl; only 1: destruct x; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: now rewrite <- Z_N_nat, <- nat_N_Z, N2Nat.id, Z2N.id; only 1: reflexivity).	2.08160305023	7570
Coq.micromega.ZifyInst.z_max_spec	40
Coq.micromega.ZifyInst.z_min_spec	40
Coq.micromega.ZCoeff.req_refl	40
Coq.micromega.ZCoeff.req_sym	40
Coq.micromega.ZCoeff.req_trans	40
Coq.micromega.ZCoeff.rplus_morph_Proper	40
Coq.micromega.ZCoeff.rtimes_morph_Proper	40
Coq.micromega.ZCoeff.ropp_morph_Proper	40
Coq.micromega.ZCoeff.rle_morph_Proper	40
Coq.micromega.ZCoeff.rlt_morph_Proper	40
Coq.micromega.ZCoeff.rminus_morph_Proper	40
Coq.micromega.ZCoeff.ring_ops_wd	40	5.4.7.71.9.11.6	search with cache (only 1: destruct (SORsetoid sor) as (Equivalence_Reflexive, _, _); only 1: destruct (SORsetoid sor) as (_, Equivalence_Symmetric, _); only 1: destruct (SORsetoid sor) as (_, _, Equivalence_Transitive); only 1: split; only 1: exact (SORplus_wd sor); only 1: exact (SORtimes_wd sor); only 1: exact (SORopp_wd sor)).	31.0619320869	82036
Coq.micromega.ZCoeff.Zring_morph	40
Coq.micromega.ZCoeff.phi_pos1_pos	40
Coq.micromega.ZCoeff.phi_pos1_succ	40
Coq.micromega.ZCoeff.clt_pos_morph	40
Coq.micromega.ZCoeff.clt_morph	40
Coq.micromega.ZCoeff.Zcleb_morph	40
Coq.micromega.ZCoeff.Zcneqb_morph	40
Coq.micromega.Fourier_util.Rlt_mult_inv_pos	40	2.0.1.2.0	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: apply Rinv_0_lt_compat; only 1: auto with real).	0.0155639648438	10
Coq.micromega.Fourier_util.Rlt_zero_pos_plus1	40
Coq.micromega.Fourier_util.Rle_zero_pos_plus1	40	0.2.0.1.0.0	search with cache (only 1: intros x H; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: red; only 1: auto with real).	0.0360097885132	14
Coq.micromega.Fourier_util.Rle_mult_inv_pos	40	0.2.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.0887880325317	18
Coq.micromega.ZifyClasses.mkapp2	40
Coq.micromega.ZifyClasses.mkapp	40
Coq.micromega.ZifyClasses.mkapp0	40
Coq.micromega.ZifyClasses.mkrel	40
Coq.micromega.ZMicromega.eq_le_iff	40	0.0.1.0.8.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: apply Z.eq_le_incl; only 1: auto; only 1: apply Z.eq_le_incl; only 1: auto; only 1: destruct x; only 1: intros; only 1: trivial; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial).	5.88788414001	10299
Coq.micromega.ZMicromega.lt_le_iff	40
Coq.micromega.ZMicromega.le_0_iff	40	2.1.0.0	search with cache (only 1: split; only 1: intros; only 1: now rewrite Z.le_0_sub; only 1: now rewrite Z.le_0_sub).	0.0619828701019	20
Coq.micromega.ZMicromega.le_neg	40
Coq.micromega.ZMicromega.eq_cnf	40
Coq.micromega.ZMicromega.Zsor	40
Coq.micromega.ZMicromega.ZSORaddon	40
Coq.micromega.ZMicromega.ZNpower	40
Coq.micromega.ZMicromega.Zeval_expr_compat	40
Coq.micromega.ZMicromega.Zeval_formula_compat'	40
Coq.micromega.ZMicromega.Zeval_nformula_dec	40
Coq.micromega.ZMicromega.ZWeakChecker_sound	40
Coq.micromega.ZMicromega.eval_pol_sub	40
Coq.micromega.ZMicromega.eval_pol_add	40
Coq.micromega.ZMicromega.eval_pol_mul	40
Coq.micromega.ZMicromega.eval_pol_norm	40
Coq.micromega.ZMicromega.Zunsat_sound	40
Coq.micromega.ZMicromega.xnnormalise_correct	40
Coq.micromega.ZMicromega.eval_pol_Pc	40	2.0	search with cache (only 1: intros; only 1: reflexivity).	0.0131080150604	4
Coq.micromega.ZMicromega.xnormalise_correct	40
Coq.micromega.ZMicromega.cnf_of_list_correct	40
Coq.micromega.ZMicromega.normalise_correct	40
Coq.micromega.ZMicromega.xnegate_correct	40
Coq.micromega.ZMicromega.negate_correct	40
Coq.micromega.ZMicromega.Zdivide_ceiling	40
Coq.micromega.ZMicromega.narrow_interval_lower_bound	40
Coq.micromega.ZMicromega.isZ0_0	40
Coq.micromega.ZMicromega.isZ0_n0	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: intuition congruence).	0.0508890151978	7
Coq.micromega.ZMicromega.Zdiv_pol_correct	40
Coq.micromega.ZMicromega.Zgcd_pol_ge	40
Coq.micromega.ZMicromega.Zdivide_pol_Zdivide	40
Coq.micromega.ZMicromega.Zdivide_pol_one	40
Coq.micromega.ZMicromega.Zgcd_minus	40
Coq.micromega.ZMicromega.Zdivide_pol_sub	40
Coq.micromega.ZMicromega.Zdivide_pol_sub_0	40
Coq.micromega.ZMicromega.Zgcd_pol_div	40
Coq.micromega.ZMicromega.Zgcd_pol_correct_lt	40
Coq.micromega.ZMicromega.is_pol_Z0_eval_pol	40
Coq.micromega.ZMicromega.pos_le_add	40
Coq.micromega.ZMicromega.max_var_le	40
Coq.micromega.ZMicromega.max_var_correct	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux	40
Coq.micromega.ZMicromega.max_var_nformulae_mono_aux'	40
Coq.micromega.ZMicromega.max_var_nformulae_correct_aux	40
Coq.micromega.ZMicromega.max_var_nformalae_correct	40
Coq.micromega.ZMicromega.in_bdepth	40
Coq.micromega.ZMicromega.eval_Psatz_sound	40
Coq.micromega.ZMicromega.makeCuttingPlane_ns_sound	40
Coq.micromega.ZMicromega.cutting_plane_sound	40
Coq.micromega.ZMicromega.genCuttingPlaneNone	40
Coq.micromega.ZMicromega.eval_nformula_mk_eq_pos	40
Coq.micromega.ZMicromega.eval_nformula_bound_var	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite xnnormalise_correct; only 1: simpl; only 1: auto).	0.0193841457367	4
Coq.micromega.ZMicromega.agree_env_subset	40	1.0.3.1.23.0.8.1	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite <- H; only 1: trivial; only 1: eapply Pos.le_trans; only 1: eauto; only 1: eauto).	8.20588088036	7528
Coq.micromega.ZMicromega.agree_env_jump	40	10.1.3.0.0.0	search with cache (only 1: unfold agree_env; only 1: intros; only 1: apply H; only 1: apply Pos.add_le_mono; only 1: eauto; only 1: apply Pos.le_refl).	4.22721409798	3579
Coq.micromega.ZMicromega.agree_env_tail	40
Coq.micromega.ZMicromega.max_var_acc	40
Coq.micromega.ZMicromega.agree_env_eval_nformula	40
Coq.micromega.ZMicromega.agree_env_eval_nformulae	40
Coq.micromega.ZMicromega.eq_true_iff_eq	40
Coq.micromega.ZMicromega.ZChecker_sound	40
Coq.micromega.ZMicromega.ZTautoChecker_sound	40
Coq.micromega.ZifyBool.Z_of_bool_bound	40	0.0.1.0.0.0.1.0.11.6	search with cache (only 1: intros; only 1: destruct x; only 1: split; only 1: compute; only 1: congruence; only 1: auto with zarith; only 1: split; only 1: compute; only 1: congruence; only 1: auto with zarith).	1.41592597961	3092
Coq.micromega.ZifyBool.Z_eqb_isZero	40
Coq.micromega.ZifyBool.Z_leb_sub	40
Coq.micromega.ZifyBool.Z_ltb_leb	40
Coq.micromega.ZifyBool.Z_of_nat_eqb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_leb_iff	40
Coq.micromega.ZifyBool.Z_of_nat_ltb_iff	40
Coq.micromega.ZifyBool.Z_eqb_ZSpec_ok	40	0.0.0.3.11	search with cache (only 1: compute; only 1: destruct x; only 1: intuition congruence; only 1: intuition congruence; only 1: intuition congruence).	0.916188955307	796
Coq.micromega.ZifyBool.leZeroSpec_ok	40
Coq.micromega.Env.jump_add	40
Coq.micromega.Env.jump_simpl	40
Coq.micromega.Env.jump_tl	40	0.0.0.35.1.7.0.0	search with cache (only 1: unfold tail; only 1: rewrite <- ?jump_add; only 1: simpl; only 1: unfold jump; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	9.08782792091	31935
Coq.micromega.Env.jump_succ	40	0.0.0.38.8.0	search with cache (only 1: rewrite <- ?jump_add; only 1: simpl; only 1: destruct j; only 1: f_equal; only 1: f_equal; only 1: f_equal).	10.3396840096	35009
Coq.micromega.Env.jump_pred_double	40
Coq.micromega.Env.nth_spec	40
Coq.micromega.Env.nth_jump	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: apply Pos.add_comm).	0.0122339725494	3
Coq.micromega.Env.nth_pred_double	40	0.0.0	search with cache (only 1: unfold hd, nth, tail, jump; only 1: f_equal; only 1: now rewrite Pos.add_1_r, Pos.succ_pred_double, Pos.add_diag).	0.0135271549225	3
Coq.micromega.Tauto.eval_f_morph	40
Coq.micromega.Tauto.map_simpl	40	0.1.1.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0197718143463	7
Coq.micromega.Tauto.is_X_inv	40
Coq.micromega.Tauto.if_same	40	31.7	search with cache (only 1: intros H; only 1: now intros []).	1.43088102341	4122
Coq.micromega.Tauto.is_cnf_tt_cnf_ff	40	1	search with cache (only 1: reflexivity).	0.00637412071228	2
Coq.micromega.Tauto.is_cnf_ff_cnf_ff	40	0	search with cache (only 1: reflexivity).	0.00617003440857	1
Coq.micromega.Tauto.is_cnf_tt_inv	40	2.3.0.23.7	search with cache (only 1: intros H; only 1: induction H as [| a l Hal Hl IH]; only 1: reflexivity; only 1: simpl; only 1: congruence).	1.79627203941	3524
Coq.micromega.Tauto.is_cnf_ff_inv	40
Coq.micromega.Tauto.if_cnf_tt	40	1.0.0.0.8.0	search with cache (only 1: unfold cnf_tt; only 1: destruct f; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.150334835052	183
Coq.micromega.Tauto.or_cnf_opt_cnf_ff	40
Coq.micromega.Tauto.abs_and_pol	40
Coq.micromega.Tauto.abs_or_pol	40
Coq.micromega.Tauto.xcnf_true_mk_arrow_l	40
Coq.micromega.Tauto.or_cnf_opt_cnf_ff_r	40	1.0.0.0.0.0.7.4.0	search with cache (only 1: intros; only 1: unfold or_cnf_opt; only 1: destruct (is_cnf_tt f) eqn:EQ; only 1: rewrite is_cnf_tt_cnf_ff; only 1: simpl; only 1: apply is_cnf_tt_inv in EQ; only 1: congruence; only 1: simpl; only 1: reflexivity).	2.57719016075	2245
Coq.micromega.Tauto.xcnf_true_mk_arrow_r	40
Coq.micromega.Tauto.abst_form_correct	40
Coq.micromega.Tauto.radd_term_term	40
Coq.micromega.Tauto.radd_term_term'	40
Coq.micromega.Tauto.xror_clause_clause	40
Coq.micromega.Tauto.ror_clause_clause	40
Coq.micromega.Tauto.ror_cnf_cnf	40
Coq.micromega.Tauto.ror_opt_cnf_cnf	40
Coq.micromega.Tauto.ratom_cnf	40
Coq.micromega.Tauto.rxcnf_xcnf	40
Coq.micromega.Tauto.eval_cnf_app	40
Coq.micromega.Tauto.eval_cnf_ff	40	14.17.26	search with cache (only 1: clear; only 1: red; only 1: firstorder).	24.6203649044	38858
Coq.micromega.Tauto.eval_cnf_tt	40	0.0.0	search with cache (only 1: unfold cnf_ff, eval_cnf, eval_clause; only 1: simpl; only 1: tauto).	0.0201418399811	3
Coq.micromega.Tauto.eval_cnf_and_opt	40
Coq.micromega.Tauto.add_term_correct	40
Coq.micromega.Tauto.no_middle_eval_tt	40
Coq.micromega.Tauto.or_clause_correct	40
Coq.micromega.Tauto.or_clause_cnf_correct	40
Coq.micromega.Tauto.eval_cnf_cons	40	1.1.7.4.3	search with cache (only 1: unfold eval_cnf; only 1: intros; only 1: repeat rewrite make_conj_cons in *; only 1: unfold eval_clause; only 1: tauto).	5.08058404922	1828
Coq.micromega.Tauto.eval_cnf_cons_iff	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold eval_cnf in *; only 1: rewrite make_conj_cons; only 1: unfold eval_clause at 2; only 1: tauto).	0.055438041687	5
Coq.micromega.Tauto.or_cnf_correct	40
Coq.micromega.Tauto.or_cnf_opt_correct	40
Coq.micromega.Tauto.xcnf_correct	40
Coq.micromega.Tauto.cnf_checker_sound	40
Coq.micromega.Tauto.tauto_checker_sound	40
Coq.micromega.Tauto.eval_bf_map	40
Coq.micromega.ZifyComparison.Z_of_comparison_bound	40	0.0.0.14.0.10.0.0.0.4.0.17.14	search with cache (only 1: intros; only 1: destruct x; only 1: split; only 1: apply Pos2Z.neg_is_nonpos; only 1: auto with zarith; only 1: split; only 1: auto with zarith; only 1: simpl; only 1: auto with zarith; only 1: simpl; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	18.3742990494	50997
Coq.micromega.ZifyComparison.Zcompare_spec	40
Coq.micromega.EnvRing.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0123910903931	2
Coq.micromega.EnvRing.rmul_ext_Proper	40	4	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0118169784546	5
Coq.micromega.EnvRing.ropp_ext_Proper	40	3	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0204331874847	11
Coq.micromega.EnvRing.rsub_ext_Proper	40	3.11	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.239110946655	166
Coq.micromega.EnvRing.Peq_ok	40
Coq.micromega.EnvRing.Peq_spec	40
Coq.micromega.EnvRing.Pphi0	40
Coq.micromega.EnvRing.Pphi1	40
Coq.micromega.EnvRing.env_morph	40
Coq.micromega.EnvRing.Pjump_add	40
Coq.micromega.EnvRing.Pjump_xO_tail	40
Coq.micromega.EnvRing.Pjump_pred_double	40
Coq.micromega.EnvRing.mkPinj_ok	40
Coq.micromega.EnvRing.pow_pos_add	40
Coq.micromega.EnvRing.ceqb_spec	40
Coq.micromega.EnvRing.mkPX_ok	40
Coq.micromega.EnvRing.PaddC_ok	40
Coq.micromega.EnvRing.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	10.941972971	2161
Coq.micromega.EnvRing.PmulC_aux_ok	40
Coq.micromega.EnvRing.PmulC_ok	40
Coq.micromega.EnvRing.Popp_ok	40	0.1.2.0.0.0.0.0.0.1.1.0.3	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	15.4317231178	3059
Coq.micromega.EnvRing.PaddX_ok	40
Coq.micromega.EnvRing.Padd_ok	40
Coq.micromega.EnvRing.PsubX_ok	40
Coq.micromega.EnvRing.Psub_ok	40
Coq.micromega.EnvRing.PmulI_ok	40
Coq.micromega.EnvRing.Pmul_ok	40
Coq.micromega.EnvRing.Psquare_ok	40
Coq.micromega.EnvRing.Mphi_morph	40
Coq.micromega.EnvRing.Mjump_xO_tail	40
Coq.micromega.EnvRing.Mjump_pred_double	40	0.0.0.0	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite jump_pred_double; only 1: now jump_simpl).	0.0812828540802	4
Coq.micromega.EnvRing.Mjump_add	40	0.0.0.0.3	search with cache (only 1: apply Mphi_morph; only 1: intros; only 1: rewrite <- jump_add; only 1: f_equal; only 1: apply Pos.add_comm).	0.101920127869	8
Coq.micromega.EnvRing.mkZmon_ok	40	0.0.3.0.1.14	search with cache (only 1: induction M; only 1: simpl; only 1: Esimpl; only 1: now jump_simpl; only 1: simpl; only 1: rsimpl).	2.35646295547	607
Coq.micromega.EnvRing.zmon_pred_ok	40
Coq.micromega.EnvRing.mkVmon_ok	40
Coq.micromega.EnvRing.Mphi_ok	40
Coq.micromega.EnvRing.POneSubst_ok	40
Coq.micromega.EnvRing.PNSubst1_ok	40
Coq.micromega.EnvRing.PNSubst_ok	40
Coq.micromega.EnvRing.PSubstL1_ok	40
Coq.micromega.EnvRing.PSubstL_ok	40
Coq.micromega.EnvRing.PNSubstL_ok	40
Coq.micromega.EnvRing.mkX_ok	40
Coq.micromega.EnvRing.Ppow_pos_ok	40
Coq.micromega.EnvRing.Ppow_N_ok	40
Coq.micromega.EnvRing.norm_aux_PEadd	40
Coq.micromega.EnvRing.norm_aux_PEopp	40
Coq.micromega.EnvRing.norm_aux_spec	40
Coq.micromega.RingMicromega.rplus_morph_Proper	40
Coq.micromega.RingMicromega.rtimes_morph_Proper	40
Coq.micromega.RingMicromega.ropp_morph_Proper	40
Coq.micromega.RingMicromega.rle_morph_Proper	40
Coq.micromega.RingMicromega.rlt_morph_Proper	40
Coq.micromega.RingMicromega.rminus_morph_Proper	40
Coq.micromega.RingMicromega.cleb_sound	40
Coq.micromega.RingMicromega.cneqb_sound	40
Coq.micromega.RingMicromega.cltb_sound	40
Coq.micromega.RingMicromega.OpMult_sound	40
Coq.micromega.RingMicromega.OpAdd_sound	40
Coq.micromega.RingMicromega.pexpr_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_times_nformula_correct	40
Coq.micromega.RingMicromega.nformula_plus_nformula_correct	40
Coq.micromega.RingMicromega.eval_Psatz_Sound	40
Coq.micromega.RingMicromega.ge_bool_cases	40
Coq.micromega.RingMicromega.extract_hyps_app	40
Coq.micromega.RingMicromega.nhyps_of_psatz_correct	40
Coq.micromega.RingMicromega.check_inconsistent_sound	40
Coq.micromega.RingMicromega.checker_nf_sound	40
Coq.micromega.RingMicromega.eval_pol_sub	40
Coq.micromega.RingMicromega.eval_pol_add	40	5.2.4.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Padd_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	0.38121509552	175
Coq.micromega.RingMicromega.eval_pol_mul	40	6.5.5.0	search with cache (only 1: intros; only 1: unfold eval_pol in *; only 1: rewrite (Pmul_ok (SORsetoid sor) Rops_wd (Rth_ARth (SORsetoid sor) Rops_wd (SORrt sor)) (SORrm addon)); only 1: reflexivity).	0.649671077728	396
Coq.micromega.RingMicromega.eval_pol_opp	40
Coq.micromega.RingMicromega.eval_pol_norm	40
Coq.micromega.RingMicromega.normalise_sound	40
Coq.micromega.RingMicromega.negate_correct	40
Coq.micromega.RingMicromega.cnf_of_list_correct	40
Coq.micromega.RingMicromega.eq0_cnf	40
Coq.micromega.RingMicromega.xnormalise_correct	40
Coq.micromega.RingMicromega.xnegate_correct	40
Coq.micromega.RingMicromega.cnf_normalise_correct	40
Coq.micromega.RingMicromega.cnf_negate_correct	40
Coq.micromega.RingMicromega.eval_nformula_dec	40
Coq.micromega.RingMicromega.xdenorm_correct	40
Coq.micromega.RingMicromega.denorm_correct	40
Coq.micromega.RingMicromega.eval_pexprSC	40
Coq.micromega.RingMicromega.eval_formulaSC	40
Coq.micromega.Refl.make_impl_true	40	9.0.3.1	search with cache (only 1: intros; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.379168987274	630
Coq.micromega.Refl.make_impl_map	40	3.1.3.1.14	search with cache (only 1: intros Q H H'; only 1: intros; only 1: induction l as [| a l IH]; only 1: reflexivity; only 1: firstorder).	4.64256501198	6295
Coq.micromega.Refl.make_conj_cons	40	0.0.0.0.1.2.3.9	search with cache (only 1: simpl; only 1: intros Q H H'; only 1: destruct l as [| x xs]; only 1: split; only 1: firstorder; only 1: firstorder; only 1: simpl; only 1: tauto).	2.35097098351	3440
Coq.micromega.Refl.make_conj_impl	40	9.0.2.0.0.2.0.0	search with cache (only 1: induction l as [| a l IH]; only 1: simpl; only 1: tauto; only 1: simpl; only 1: destruct l; only 1: simpl; only 1: tauto; only 1: firstorder).	23.8730318546	17704
Coq.micromega.Refl.make_conj_in	40	0.3.3.0.0.1.4.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: tauto; only 1: destruct l; only 1: firstorder; only 1: subst; only 1: auto; only 1: firstorder; only 1: subst; only 1: tauto).	19.7009241581	18538
Coq.micromega.Refl.make_conj_app	40
Coq.micromega.Refl.make_conj_rapp	40
Coq.micromega.Refl.not_make_conj_cons	40	2.3.0	search with cache (only 1: intros; only 1: rewrite make_conj_cons; only 1: tauto).	0.0760622024536	31
Coq.micromega.Refl.not_make_conj_app	40
Coq.micromega.QMicromega.Qsor	40
Coq.micromega.QMicromega.QSORaddon	40
Coq.micromega.QMicromega.Qeval_expr_simpl	40
Coq.micromega.QMicromega.QNpower	40
Coq.micromega.QMicromega.Qeval_expr_compat	40
Coq.micromega.QMicromega.Qeval_formula_compat	40
Coq.micromega.QMicromega.Qeval_nformula_dec	40
Coq.micromega.QMicromega.QWeakChecker_sound	40
Coq.micromega.QMicromega.QTautoChecker_sound	40
Coq.micromega.RMicromega.Rsrt	40	2.1.3.0.0.5.2.0.0.0.5.0.1.7	search with cache (only 1: repeat split; only 1: auto with real; only 1: intros; only 1: ring; only 1: intros; only 1: ring; only 1: auto with real; only 1: intros n m; only 1: ring; only 1: intros; only 1: ring; only 1: intros a b c; only 1: field; only 1: auto with real).	17.2128059864	25691
Coq.micromega.RMicromega.Rsor	40
Coq.micromega.RMicromega.Rinv_1	40	0.6	search with cache (only 1: rewrite Rinv_1; only 1: auto with real).	0.0178639888763	8
Coq.micromega.RMicromega.Qeq_true	40
Coq.micromega.RMicromega.Qeq_false	40
Coq.micromega.RMicromega.Qle_true	40
Coq.micromega.RMicromega.Q2R_0	40	1.0.2.0	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: unfold Qnum, Qden; only 1: rewrite Rmult_0_l; only 1: auto).	0.0151391029358	7
Coq.micromega.RMicromega.Q2R_1	40	0.2.9	search with cache (only 1: unfold Qinv, Q2R, Qeq; only 1: rewrite RIneq.Rinv_1; only 1: easy).	0.0433778762817	66
Coq.micromega.RMicromega.Q2R_inv_ext	40
Coq.micromega.RMicromega.QSORaddon	40
Coq.micromega.RMicromega.is_neg_true	40
Coq.micromega.RMicromega.is_neg_false	40
Coq.micromega.RMicromega.Q2R_m_Proper	40
Coq.micromega.RMicromega.Q2R_pow_pos	40
Coq.micromega.RMicromega.Q2R_pow_N	40
Coq.micromega.RMicromega.Qmult_integral	40
Coq.micromega.RMicromega.Qpower_positive_eq_zero	40
Coq.micromega.RMicromega.Qpower_positive_zero	40
Coq.micromega.RMicromega.Q2RpowerRZ	40
Coq.micromega.RMicromega.Qpower0	40
Coq.micromega.RMicromega.Q_of_RcstR	40
Coq.micromega.RMicromega.Reval_formula_compat	40
Coq.micromega.RMicromega.Reval_nformula_dec	40
Coq.micromega.RMicromega.RWeakChecker_sound	40
Coq.micromega.RMicromega.RTautoChecker_sound	40
Coq.rtauto.Bintree.Gt_Psucc	40
Coq.rtauto.Bintree.Psucc_Gt	40	6.2.10	search with cache (only 1: fix sqrtrem_spec 1; only 1: intros; only 1: trivial).	2.17947387695	1764
Coq.rtauto.Bintree.map_app	40	0.29.39.2.2	search with cache (only 1: intros EQ; only 1: intros; only 1: revert m; only 1: fix sqrtrem_spec 1; only 1: auto with arith).	3.93065214157	12389
Coq.rtauto.Bintree.length_map	40	2.3.0.0.0	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: apply f_equal; only 1: apply IHl).	0.0244791507721	10
Coq.rtauto.Bintree.Lget_map	40
Coq.rtauto.Bintree.Lget_app	40	0.1.0.8.0.0.3.5	search with cache (only 1: induction l; only 1: induction i; only 1: trivial; only 1: trivial; only 1: induction i; only 1: trivial; only 1: simpl; only 1: auto).	4.17714285851	5113
Coq.rtauto.Bintree.Lget_app_Some	40
Coq.rtauto.Bintree.Tget_Tempty	40	0.0.1.0.1.14	search with cache (only 1: destruct p; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial).	0.262536048889	440
Coq.rtauto.Bintree.Tget_Tadd	40
Coq.rtauto.Bintree.get_empty	40	0.1.1.4	search with cache (only 1: destruct i; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity || congruence).	0.0219798088074	10
Coq.rtauto.Bintree.get_Full_Gt	40
Coq.rtauto.Bintree.get_Full_Eq	40
Coq.rtauto.Bintree.get_push_Full	40
Coq.rtauto.Bintree.Full_push_compat	40
Coq.rtauto.Bintree.Full_index_one_empty	40
Coq.rtauto.Bintree.push_not_empty	40	0.0.17.10.16	search with cache (only 1: unfold empty, get; only 1: intros; only 1: unfold get, push; only 1: pose proof (Pos.succ_not_1 (index S)) as h; only 1: congruence).	5.95011997223	15863
Coq.rtauto.Bintree.get_In	40
Coq.rtauto.Bintree.Tget_Tmap	40
Coq.rtauto.Bintree.Tmap_Tadd	40
Coq.rtauto.Bintree.get_map	40
Coq.rtauto.Bintree.map_push	40
Coq.rtauto.Bintree.Full_map	40
Coq.rtauto.Rtauto.pos_eq_refl	40
Coq.rtauto.Rtauto.form_eq_refl	40
Coq.rtauto.Rtauto.compose0	40	0.0.5.4.1	search with cache (only 1: induction F; only 1: intros; only 1: assumption; only 1: simpl; only 1: eauto).	0.392852067947	471
Coq.rtauto.Rtauto.compose1	40
Coq.rtauto.Rtauto.compose2	40	1.0.7.0.0.1.0.0	search with cache (only 1: induction F; only 1: intros A B H; only 1: auto; only 1: intros A B H; only 1: simpl; only 1: intro i; only 1: apply IHF; only 1: auto).	1.38785505295	2021
Coq.rtauto.Rtauto.compose3	40
Coq.rtauto.Rtauto.weaken	40
Coq.rtauto.Rtauto.project_In	40
Coq.rtauto.Rtauto.project	40
Coq.rtauto.Rtauto.interp_proof	40
Coq.rtauto.Rtauto.Reflect	40
Coq.nsatz.Nsatz.psos_r1b	40
Coq.nsatz.Nsatz.psos_r1	40	0.0.0	search with cache (only 1: intros x y H; only 1: setoid_rewrite H; only 1: cring).	0.0611009597778	3
Coq.nsatz.Nsatz.nsatzR_diff	40
Coq.nsatz.Nsatz.P0Z_correct	40	24	search with cache (only 1: reflexivity).	4.79214906693	1898
Coq.nsatz.Nsatz.Rext	40
Coq.nsatz.Nsatz.Rset	40
Coq.nsatz.Nsatz.Rtheory	40
Coq.nsatz.Nsatz.PolZadd_correct	40
Coq.nsatz.Nsatz.PolZmul_correct	40
Coq.nsatz.Nsatz.R_power_theory	40
Coq.nsatz.Nsatz.norm_correct	40
Coq.nsatz.Nsatz.PolZeq_correct	40
Coq.nsatz.Nsatz.mult_l_correct	40
Coq.nsatz.Nsatz.compute_list_correct	40
Coq.nsatz.Nsatz.check_correct	40
Coq.nsatz.Nsatz.Rsth	40
Coq.nsatz.Nsatz.Rri	40
Coq.nsatz.Nsatz.R_one_zero	40	2	search with cache (only 1: Lra.lra).	0.0206079483032	3
Coq.nsatz.Nsatz.Rcri	40	18.0.4.7	search with cache (only 1: intros x H; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: auto with real).	0.750067949295	1509
Coq.nsatz.Nsatz.Rdi	40
Coq.nsatz.Nsatz.Qri	40
Coq.nsatz.Nsatz.Q_one_zero	40
Coq.nsatz.Nsatz.Qcri	40
Coq.nsatz.Nsatz.Qdi	40
Coq.nsatz.Nsatz.Z_one_zero	40	0	search with cache (only 1: auto with *).	0.0250079631805	1
Coq.nsatz.Nsatz.Zcri	40	1	search with cache (only 1: auto with *).	0.0232629776001	21
Coq.nsatz.Nsatz.Zdi	40
Coq.omega.OmegaLemmas.Zred_factor0	40
Coq.omega.OmegaLemmas.Zred_factor1	40
Coq.omega.OmegaLemmas.Zred_factor2	40
Coq.omega.OmegaLemmas.Zred_factor3	40	1	search with cache (only 1: now Z.nzsimpl).	0.160827159882	15
Coq.omega.OmegaLemmas.Zred_factor4	40	0.1	search with cache (only 1: rewrite Z.mul_add_distr_l; only 1: now Z.nzsimpl).	0.0408720970154	3
Coq.omega.OmegaLemmas.Zred_factor5	40	0	search with cache (only 1: now Z.nzsimpl).	0.0340700149536	1
Coq.omega.OmegaLemmas.Zred_factor6	40	0	search with cache (only 1: now Z.nzsimpl).	0.0328559875488	1
Coq.omega.OmegaLemmas.new_var	40	0.3.11	search with cache (only 1: intros; only 1: exists x; only 1: trivial).	0.0485928058624	134
Coq.omega.OmegaLemmas.OMEGA1	40	2.0	search with cache (only 1: intros; only 1: now subst).	0.00892901420593	4
Coq.omega.OmegaLemmas.OMEGA2	40	1.1	search with cache (only 1: intros Hn Hm; only 1: now apply Z.add_nonneg_nonneg).	0.177730798721	4
Coq.omega.OmegaLemmas.OMEGA3	40
Coq.omega.OmegaLemmas.OMEGA4	40
Coq.omega.OmegaLemmas.OMEGA5	40	9.0	search with cache (only 1: intros Hx Hxy; only 1: now subst).	0.0795228481293	33
Coq.omega.OmegaLemmas.OMEGA6	40	4.46.1	search with cache (only 1: intros Hx Hxy; only 1: subst; only 1: now Z.nzsimpl).	25.5227818489	19477
Coq.omega.OmegaLemmas.OMEGA7	40
Coq.omega.OmegaLemmas.OMEGA8	40
Coq.omega.OmegaLemmas.OMEGA9	40
Coq.omega.OmegaLemmas.OMEGA10	40
Coq.omega.OmegaLemmas.OMEGA11	40	0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal).	0.0510721206665	29
Coq.omega.OmegaLemmas.OMEGA12	40	0.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: apply Z.add_shuffle3).	0.00994992256165	2
Coq.omega.OmegaLemmas.OMEGA13	40
Coq.omega.OmegaLemmas.OMEGA14	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite Z.add_shuffle1; only 1: rewrite <- Z.mul_add_distr_l, <- Pos2Z.opp_neg, Z.add_opp_diag_r; only 1: now Z.nzsimpl).	0.0968759059906	13
Coq.omega.OmegaLemmas.OMEGA15	40	0.0.1.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: rewrite <- !Z.add_assoc; only 1: f_equal; only 1: apply Z.add_shuffle3).	0.0584571361542	16
Coq.omega.OmegaLemmas.OMEGA16	40	9.0	search with cache (only 1: rewrite ?Z.mul_add_distr_r, ?Z.mul_add_distr_l, ?Z.mul_assoc; only 1: f_equal).	0.0623481273651	51
Coq.omega.OmegaLemmas.OMEGA17	40	0.0	search with cache (only 1: intros H ->; only 1: now Z.nzsimpl).	0.0332341194153	2
Coq.omega.OmegaLemmas.OMEGA18	40	3.1.3.0	search with cache (only 1: unfold Zne, not; only 1: intros; only 1: subst; only 1: now subst).	0.18319106102	79
Coq.omega.OmegaLemmas.OMEGA19	40
Coq.omega.OmegaLemmas.OMEGA20	40	0.0.0.0	search with cache (only 1: unfold Zne, not; only 1: intros NE EQ; only 1: subst; only 1: now Z.nzsimpl).	0.0388600826263	4
Coq.omega.OmegaLemmas.intro_Z	40
Coq.omega.PreOmega.Z.mod_0_r_ext	40	0.0.3.1.4.1.29	search with cache (only 1: destruct x; only 1: trivial; only 1: intros Hm; only 1: now subst; only 1: intros Hm; only 1: subst; only 1: trivial).	2.00614500046	5944
Coq.omega.PreOmega.Z.div_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0265951156616	6
Coq.omega.PreOmega.Z.rem_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: trivial; only 1: trivial).	0.0267539024353	6
Coq.omega.PreOmega.Z.quot_0_r_ext	40	0.0.0.0.0.0	search with cache (only 1: intro; only 1: subst; only 1: destruct x; only 1: trivial; only 1: reflexivity; only 1: reflexivity).	0.0266869068146	6
Coq.omega.PreOmega.Z.rem_bound_pos_pos	40
Coq.omega.PreOmega.Z.rem_bound_neg_pos	40
Coq.omega.PreOmega.Z.rem_bound_pos_neg	40
Coq.omega.PreOmega.Z.rem_bound_neg_neg	40
Coq.btauto.Algebra.Decidable_sound	40	40.52.0	search with cache (only 1: intros l; only 1: intro; only 1: apply H).	14.7382218838	103416
Coq.btauto.Algebra.Decidable_complete	40
Coq.btauto.Algebra.Decidable_sound_alt	40
Coq.btauto.Algebra.Decidable_complete_alt	40
Coq.btauto.Algebra.Decidable_PosEq_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLt_obligation_1	40
Coq.btauto.Algebra.Decidable_PosLe_obligation_1	40
Coq.btauto.Algebra.Decidable_eq_poly_obligation_1	40
Coq.btauto.Algebra.Decidable_null_obligation_3	40
Coq.btauto.Algebra.Decidable_valid_obligation_1	40
Coq.btauto.Algebra.valid_le_compat	40
Coq.btauto.Algebra.linear_le_compat	40	0.0.0.1.0.0.0.0	search with cache (only 1: intros k l p H Hl; only 1: induction H; only 1: constructor; only 1: constructor; only 1: now eapply Pos.lt_le_trans; eassumption; only 1: eauto; only 1: eauto; only 1: eauto).	0.0367710590363	9
Coq.btauto.Algebra.linear_valid_incl	40
Coq.btauto.Algebra.eval_null_zero	40	0.0.5	search with cache (only 1: intros l; only 1: inversion 1; only 1: trivial).	0.0212578773499	8
Coq.btauto.Algebra.eval_extensional_eq_compat	40
Coq.btauto.Algebra.eval_suffix_compat	40
Coq.btauto.Algebra.poly_add_compat	40
Coq.btauto.Algebra.poly_mul_cst_compat	40
Coq.btauto.Algebra.poly_mul_mon_compat	40
Coq.btauto.Algebra.poly_mul_compat	40
Coq.btauto.Algebra.poly_add_valid_compat	40
Coq.btauto.Algebra.poly_mul_cst_valid_compat	40
Coq.btauto.Algebra.poly_mul_mon_null_compat	40
Coq.btauto.Algebra.poly_mul_mon_valid_compat	40
Coq.btauto.Algebra.poly_mul_valid_compat	40
Coq.btauto.Algebra.poly_add_linear_compat	40
Coq.btauto.Algebra.reduce_aux_eval_compat	40
Coq.btauto.Algebra.reduce_eval_compat	40
Coq.btauto.Algebra.reduce_aux_le_compat	40
Coq.btauto.Algebra.linear_reduce_aux	40
Coq.btauto.Algebra.linear_reduce	40
Coq.btauto.Reflect.poly_of_formula_eval_compat	40
Coq.btauto.Reflect.poly_of_formula_valid_compat	40
Coq.btauto.Reflect.poly_of_formula_sound	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound	40
Coq.btauto.Reflect.list_nth_base	40	2	search with cache (only 1: auto).	0.0192909240723	3
Coq.btauto.Reflect.list_nth_succ	40
Coq.btauto.Reflect.list_nth_nil	40
Coq.btauto.Reflect.make_last_nth_1	40
Coq.btauto.Reflect.make_last_nth_2	40	0.0.0.0.10.1.5.5.0.0	search with cache (only 1: intros A n; only 1: induction n using Pos.peano_rect; only 1: unfold list_nth; only 1: reflexivity; only 1: unfold make_last; only 1: zify; only 1: rewrite Pos.peano_rect_succ; only 1: fold (make_last n x def); only 1: rewrite list_nth_succ; only 1: apply IHn).	12.2031650543	22951
Coq.btauto.Reflect.list_replace_nth_1	40
Coq.btauto.Reflect.list_replace_nth_2	40
Coq.btauto.Reflect.boolean_witness_nonzero	40
Coq.btauto.Reflect.reduce_poly_of_formula_sound_alt	40
Coq.funind.Recdef.le_lt_SS	40	0.6	search with cache (only 1: right; only 1: auto with arith).	0.014851808548	8
Coq.funind.Recdef.Splus_lt	40	2.1.3	search with cache (only 1: apply Nat.lt_succ_r; only 1: rewrite Nat.add_comm; only 1: apply Nat.le_add_r).	0.0142760276794	11
Coq.funind.Recdef.SSplus_lt	40	1.0.11	search with cache (only 1: right; only 1: apply Nat.lt_succ_r; only 1: apply Nat.le_add_r).	2.10485291481	1679
Coq.funind.Recdef.max	40
Coq.setoid_ring.Rings_Z.Zcri	40	0.0	search with cache (only 1: red; only 1: exact Z.mul_comm).	0.0113799571991	2
Coq.setoid_ring.Rings_Z.Z_one_zero	40	14.3	search with cache (only 1: intros Hx; only 1: now Z.nzsimpl).	0.457380056381	274
Coq.setoid_ring.Rings_Z.Zdi	40
Coq.setoid_ring.Integral_domain.integral_domain_minus_one_zero	40
Coq.setoid_ring.Integral_domain.pow_not_zero	40
Coq.setoid_ring.Integral_domain.Rintegral_domain_pow	40
Coq.setoid_ring.Ncring_polynom.cO	40	67	search with cache (only 1: assumption).	0.989109992981	2301
Coq.setoid_ring.Ncring_polynom.cI	40	0	search with cache (only 1: exact ring0).	0.015074968338	1
Coq.setoid_ring.Ncring_polynom.Peq_ok	40
Coq.setoid_ring.Ncring_polynom.Pphi0	40
Coq.setoid_ring.Ncring_polynom.Pphi1	40
Coq.setoid_ring.Ncring_polynom.mkPX_ok	40
Coq.setoid_ring.Ncring_polynom.PaddCl_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ncring_polynom.PmulC_ok	40
Coq.setoid_ring.Ncring_polynom.Popp_ok	40
Coq.setoid_ring.Ncring_polynom.PaddXPX	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok2	40
Coq.setoid_ring.Ncring_polynom.Padd_ok	40
Coq.setoid_ring.Ncring_polynom.PaddX_ok	40
Coq.setoid_ring.Ncring_polynom.Psub_ok	40
Coq.setoid_ring.Ncring_polynom.Pmul_ok	40
Coq.setoid_ring.Ncring_polynom.Psquare_ok	40
Coq.setoid_ring.Ncring_polynom.mkX_ok	40	31.0.0	search with cache (only 1: intros; only 1: simpl; only 1: Esimpl).	29.2316379547	6341
Coq.setoid_ring.Ncring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ncring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ncring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ncring_polynom.norm_subst_ok	40	1.0.0	search with cache (only 1: intros; only 1: unfold norm_subst; only 1: apply norm_aux_spec).	1.48125696182	43
Coq.setoid_ring.Ncring_polynom.ring_correct	40
Coq.setoid_ring.Ring.BoolTheory	40
Coq.setoid_ring.Ring.bool_eq_ok	40
Coq.setoid_ring.Field_theory.radd_ext_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext_Proper	40
Coq.setoid_ring.Field_theory.rsub_ext_Proper	40
Coq.setoid_ring.Field_theory.rinv_ext_Proper	40	6	search with cache (only 1: trivial).	0.0159401893616	11
Coq.setoid_ring.Field_theory.ceqb_spec	40
Coq.setoid_ring.Field_theory.NPEequiv_eq	40
Coq.setoid_ring.Field_theory.NPEeval_ext	40
Coq.setoid_ring.Field_theory.rsub_0_l	40	7	search with cache (only 1: eauto).	0.0315420627594	8
Coq.setoid_ring.Field_theory.rsub_0_r	40
Coq.setoid_ring.Field_theory.rdiv_simpl	40
Coq.setoid_ring.Field_theory.rdiv_ext	40
Coq.setoid_ring.Field_theory.rmul_reg_l	40
Coq.setoid_ring.Field_theory.field_is_integral_domain	40
Coq.setoid_ring.Field_theory.ropp_neq_0	40
Coq.setoid_ring.Field_theory.rdiv_r_r	40	27	search with cache (only 1: eauto).	1.72945713997	1090
Coq.setoid_ring.Field_theory.rdiv1	40
Coq.setoid_ring.Field_theory.rdiv2	40
Coq.setoid_ring.Field_theory.rdiv2b	40
Coq.setoid_ring.Field_theory.rdiv5	40
Coq.setoid_ring.Field_theory.rdiv3b	40
Coq.setoid_ring.Field_theory.rdiv6	40
Coq.setoid_ring.Field_theory.rdiv4	40
Coq.setoid_ring.Field_theory.rdiv4b	40
Coq.setoid_ring.Field_theory.rdiv7	40
Coq.setoid_ring.Field_theory.rdiv7b	40
Coq.setoid_ring.Field_theory.rinv_nz	40
Coq.setoid_ring.Field_theory.rdiv8	40
Coq.setoid_ring.Field_theory.cross_product_eq	40
Coq.setoid_ring.Field_theory.pow_ext	40
Coq.setoid_ring.Field_theory.pow_N_ext	40
Coq.setoid_ring.Field_theory.pow_pos_0	40
Coq.setoid_ring.Field_theory.pow_pos_1	40
Coq.setoid_ring.Field_theory.pow_pos_cst	40
Coq.setoid_ring.Field_theory.pow_pos_mul_l	40	0.0.3.3.3.3.0	search with cache (only 1: induction p; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: ring [ IHp ]; only 1: simpl; only 1: trivial).	6.34289693832	745
Coq.setoid_ring.Field_theory.pow_pos_add_r	40
Coq.setoid_ring.Field_theory.pow_pos_mul_r	40
Coq.setoid_ring.Field_theory.pow_pos_nz	40
Coq.setoid_ring.Field_theory.pow_pos_div	40
Coq.setoid_ring.Field_theory.PEadd_ext	40
Coq.setoid_ring.Field_theory.PEsub_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.174499988556	3
Coq.setoid_ring.Field_theory.PEmul_ext	40	0.0.0	search with cache (only 1: intros ? ? E ? ? E' l; only 1: simpl; only 1: now rewrite E, E').	0.227602005005	3
Coq.setoid_ring.Field_theory.PEopp_ext	40
Coq.setoid_ring.Field_theory.PEpow_ext	40
Coq.setoid_ring.Field_theory.PE_1_l	40
Coq.setoid_ring.Field_theory.PE_1_r	40	6.0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: rewrite phi_1; only 1: trivial).	0.240023851395	10
Coq.setoid_ring.Field_theory.PEpow_0_r	40	0.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: eauto).	0.196850061417	3
Coq.setoid_ring.Field_theory.PEpow_1_r	40	3.0.0	search with cache (only 1: intros l; only 1: simpl; only 1: now rewrite !rpow_pow).	0.169319868088	6
Coq.setoid_ring.Field_theory.PEpow_1_l	40
Coq.setoid_ring.Field_theory.PEpow_add_r	40
Coq.setoid_ring.Field_theory.PEpow_mul_l	40
Coq.setoid_ring.Field_theory.PEpow_mul_r	40
Coq.setoid_ring.Field_theory.PEpow_nz	40
Coq.setoid_ring.Field_theory.if_true	40
Coq.setoid_ring.Field_theory.PExpr_eq_semi_ok	40
Coq.setoid_ring.Field_theory.PExpr_eq_spec	40
Coq.setoid_ring.Field_theory.NPEadd_ok	40
Coq.setoid_ring.Field_theory.NPEsub_ok	40
Coq.setoid_ring.Field_theory.NPEopp_ok	40
Coq.setoid_ring.Field_theory.NPEpow_ok	40
Coq.setoid_ring.Field_theory.NPEmul_ok	40
Coq.setoid_ring.Field_theory.PEsimp_ok	40
Coq.setoid_ring.Field_theory.PCond_cons	40
Coq.setoid_ring.Field_theory.PCond_cons_inv_l	40	0.1.0.5.0.2	search with cache (only 1: simpl; only 1: destruct l1; only 1: intro; only 1: trivial; only 1: destruct 1; only 1: trivial).	27.4207310677	660
Coq.setoid_ring.Field_theory.PCond_cons_inv_r	40	4.0.0.0	search with cache (only 1: destruct l1; only 1: simpl; only 1: trivial; only 1: now destruct 1).	2.42009305954	30
Coq.setoid_ring.Field_theory.PCond_app	40
Coq.setoid_ring.Field_theory.absurd_PCond_bottom	40	3.1	search with cache (only 1: simpl; only 1: now destruct 1).	0.35332608223	6
Coq.setoid_ring.Field_theory.Z_pos_sub_gt	40
Coq.setoid_ring.Field_theory.default_isIn_ok	40
Coq.setoid_ring.Field_theory.isIn_ok	40
Coq.setoid_ring.Field_theory.split_aux_ok1	40
Coq.setoid_ring.Field_theory.split_aux_ok	40
Coq.setoid_ring.Field_theory.split_ok_l	40
Coq.setoid_ring.Field_theory.split_ok_r	40
Coq.setoid_ring.Field_theory.split_nz_l	40
Coq.setoid_ring.Field_theory.split_nz_r	40
Coq.setoid_ring.Field_theory.Pcond_Fnorm	40
Coq.setoid_ring.Field_theory.Fnorm_FEeval_PEeval	40
Coq.setoid_ring.Field_theory.Fnorm_crossproduct	40
Coq.setoid_ring.Field_theory.Fnorm_ok	40
Coq.setoid_ring.Field_theory.Field_rw_correct	40
Coq.setoid_ring.Field_theory.Field_rw_pow_correct	40
Coq.setoid_ring.Field_theory.Field_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_aux_ok	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_pow_in_correct	40
Coq.setoid_ring.Field_theory.Field_simplify_eq_in_correct	40
Coq.setoid_ring.Field_theory.fcons_ok	40
Coq.setoid_ring.Field_theory.PFcons_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons0_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons00_fcons_inv	40
Coq.setoid_ring.Field_theory.ceqb_spec'	40
Coq.setoid_ring.Field_theory.PFcons1_fcons_inv	40
Coq.setoid_ring.Field_theory.PFcons2_fcons_inv	40
Coq.setoid_ring.Field_theory.radd_ext3_Proper	40
Coq.setoid_ring.Field_theory.rmul_ext3_Proper	40
Coq.setoid_ring.Field_theory.ropp_ext3_Proper	40
Coq.setoid_ring.Field_theory.add_inj_r	40
Coq.setoid_ring.Field_theory.gen_phiPOS_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_inj	40
Coq.setoid_ring.Field_theory.gen_phiN_complete	40
Coq.setoid_ring.Field_theory.ring_S_inj	40
Coq.setoid_ring.Field_theory.gen_phiPOS_discr_sgn	40
Coq.setoid_ring.Field_theory.gen_phiZ_inj	40
Coq.setoid_ring.Field_theory.gen_phiZ_complete	40
Coq.setoid_ring.Ncring_initial.Zsth	40	0.3.1.14.48.0.14.188	search with cache (only 1: split; only 1: intro; only 1: trivial; only 1: easy; only 1: intro; only 1: intros; only 1: subst; only 1: trivial).	22.2540841103	60371
Coq.setoid_ring.Ncring_initial.Zr	40
Coq.setoid_ring.Ncring_initial.same_gen	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_add	40
Coq.setoid_ring.Ncring_initial.ARgen_phiPOS_mult	40
Coq.setoid_ring.Ncring_initial.same_genZ	40
Coq.setoid_ring.Ncring_initial.gen_Zeqb_ok	40
Coq.setoid_ring.Ncring_initial.gen_phiZ1_add_pos_neg	40
Coq.setoid_ring.Ncring_initial.match_compOpp	40	4.4.4.3	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	9.39007592201	2943
Coq.setoid_ring.Ncring_initial.gen_phiZ_add	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_opp	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_mul	40
Coq.setoid_ring.Ncring_initial.gen_phiZ_ext	40	0.6.0	search with cache (only 1: intros x y H7; only 1: subst; only 1: reflexivity).	0.0496838092804	9
Coq.setoid_ring.Ncring_initial.gen_phiZ_morph	40
Coq.setoid_ring.ArithRing.natSRth	40
Coq.setoid_ring.ArithRing.nat_morph_N	40
Coq.setoid_ring.Rings_R.Rsth	40
Coq.setoid_ring.Rings_R.Rri	40
Coq.setoid_ring.Rings_R.Rcri	40	18.0.4.6	search with cache (only 1: intros x H; only 1: unfold equality; only 1: unfold eq_notation in *; only 1: auto with real).	0.773841142654	1443
Coq.setoid_ring.Rings_R.R_one_zero	40	3.0	search with cache (only 1: red; only 1: Lra.lra).	0.0362770557404	5
Coq.setoid_ring.Rings_R.Rdi	40
Coq.setoid_ring.RealField.RTheory	40
Coq.setoid_ring.RealField.Rfield	40
Coq.setoid_ring.RealField.Rlt_n_Sn	40
Coq.setoid_ring.RealField.Rlt_0_2	40
Coq.setoid_ring.RealField.Rgen_phiPOS	40
Coq.setoid_ring.RealField.Rgen_phiPOS_not_0	40
Coq.setoid_ring.RealField.Rdef_pow_add	40
Coq.setoid_ring.RealField.R_power_theory	40
Coq.setoid_ring.Ring_theory.pow_pos_swap	40
Coq.setoid_ring.Ring_theory.pow_pos_succ	40
Coq.setoid_ring.Ring_theory.pow_pos_add	40
Coq.setoid_ring.Ring_theory.pow_N_pow_N	40	2	search with cache (only 1: reflexivity).	0.00755882263184	3
Coq.setoid_ring.Ring_theory.get_sign_None_th	40	21.0.149	search with cache (only 1: repeat split; only 1: intros; only 1: discriminate).	1.28585410118	15855
Coq.setoid_ring.Ring_theory.IDmorph	40
Coq.setoid_ring.Ring_theory.Eqsth	40
Coq.setoid_ring.Ring_theory.Eq_s_ext	40	3.2.3.2.15	search with cache (only 1: constructor; only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb; only 1: intros a a' Ha b b' Hb; only 1: now rewrite Ha, Hb).	0.319178104401	620
Coq.setoid_ring.Ring_theory.Eq_ext	40	0.0.0.0	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: solve_proper).	0.0483818054199	4
Coq.setoid_ring.Ring_theory.radd_ext1_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext1_Proper	40
Coq.setoid_ring.Ring_theory.SRopp_ext	40	27	search with cache (only 1: trivial).	0.198945999146	458
Coq.setoid_ring.Ring_theory.SReqe_Reqe	40	0.0.2.2.4	search with cache (only 1: constructor; only 1: solve_proper; only 1: solve_proper; only 1: intros x y H; only 1: exact H).	0.167829036713	110
Coq.setoid_ring.Ring_theory.SRopp_mul_l	40	6	search with cache (only 1: solve_proper).	0.00831007957458	7
Coq.setoid_ring.Ring_theory.SRopp_add	40	0	search with cache (only 1: reflexivity).	0.00763893127441	1
Coq.setoid_ring.Ring_theory.SRsub_def	40	0	search with cache (only 1: reflexivity).	0.00706887245178	1
Coq.setoid_ring.Ring_theory.SRIDmorph	40
Coq.setoid_ring.Ring_theory.SRmorph_Rmorph	40
Coq.setoid_ring.Ring_theory.radd_ext2_Proper	40
Coq.setoid_ring.Ring_theory.rmul_ext2_Proper	40
Coq.setoid_ring.Ring_theory.ropp_ext2_Proper	40
Coq.setoid_ring.Ring_theory.Rmul_0_l	40
Coq.setoid_ring.Ring_theory.Ropp_mul_l	40
Coq.setoid_ring.Ring_theory.Ropp_add	40
Coq.setoid_ring.Ring_theory.Ropp_opp	40
Coq.setoid_ring.Ring_theory.cadd_ext_Proper	40
Coq.setoid_ring.Ring_theory.cmul_ext_Proper	40
Coq.setoid_ring.Ring_theory.copp_ext_Proper	40
Coq.setoid_ring.Ring_theory.phi_ext1_Proper	40
Coq.setoid_ring.Ring_theory.Smorph_opp	40
Coq.setoid_ring.Ring_theory.Smorph_sub	40
Coq.setoid_ring.Ring_theory.ARth_SRth	40
Coq.setoid_ring.Ring_theory.ARsub_ext	40
Coq.setoid_ring.Ring_theory.ARadd_0_r	40
Coq.setoid_ring.Ring_theory.ARmul_1_r	40	0	search with cache (only 1: mrewrite).	0.0138580799103	1
Coq.setoid_ring.Ring_theory.ARmul_0_r	40	0	search with cache (only 1: mrewrite).	0.0150620937347	1
Coq.setoid_ring.Ring_theory.ARdistr_r	40
Coq.setoid_ring.Ring_theory.ARadd_assoc1	40
Coq.setoid_ring.Ring_theory.ARadd_assoc2	40
Coq.setoid_ring.Ring_theory.ARmul_assoc1	40
Coq.setoid_ring.Ring_theory.ARmul_assoc2	40
Coq.setoid_ring.Ring_theory.ARopp_mul_r	40
Coq.setoid_ring.Ring_theory.ARopp_zero	40
Coq.setoid_ring.InitialRing.Zth	40
Coq.setoid_ring.InitialRing.radd_ext3_Proper	40
Coq.setoid_ring.InitialRing.rmul_ext3_Proper	40
Coq.setoid_ring.InitialRing.ropp_ext3_Proper	40
Coq.setoid_ring.InitialRing.get_signZ_th	40
Coq.setoid_ring.InitialRing.rsub_ext3_Proper	40
Coq.setoid_ring.InitialRing.same_gen	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_Psucc	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_add	40
Coq.setoid_ring.InitialRing.ARgen_phiPOS_mult	40
Coq.setoid_ring.InitialRing.rsub_ext4_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.013335943222	1
Coq.setoid_ring.InitialRing.same_genZ	40
Coq.setoid_ring.InitialRing.gen_Zeqb_ok	40
Coq.setoid_ring.InitialRing.gen_phiZ1_pos_sub	40
Coq.setoid_ring.InitialRing.gen_phiZ_add	40
Coq.setoid_ring.InitialRing.gen_phiZ_mul	40
Coq.setoid_ring.InitialRing.gen_phiZ_ext	40	0.4.0	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: rrefl).	0.0363049507141	7
Coq.setoid_ring.InitialRing.gen_phiZ_morph	40
Coq.setoid_ring.InitialRing.Nth	40
Coq.setoid_ring.InitialRing.Neqb_ok	40
Coq.setoid_ring.InitialRing.radd_ext4_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0129959583282	1
Coq.setoid_ring.InitialRing.rmul_ext4_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0140681266785	2
Coq.setoid_ring.InitialRing.same_genN	40
Coq.setoid_ring.InitialRing.gen_phiN_add	40
Coq.setoid_ring.InitialRing.gen_phiN_mult	40
Coq.setoid_ring.InitialRing.gen_phiN_sub	40
Coq.setoid_ring.InitialRing.gen_phiN_morph	40
Coq.setoid_ring.InitialRing.radd_ext5_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0106120109558	1
Coq.setoid_ring.InitialRing.rmul_ext5_Proper	40	0	search with cache (only 1: exact (Rmul_ext Reqe)).	0.010803937912	1
Coq.setoid_ring.InitialRing.ropp_ext5_Proper	40	0	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0112061500549	1
Coq.setoid_ring.InitialRing.rsub_ext7_Proper	40	0	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0148410797119	1
Coq.setoid_ring.InitialRing.gen_phiNword0_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_cons	40
Coq.setoid_ring.InitialRing.gen_phiNword_Nwcons	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction w; only 1: destruct n; only 1: simpl; only 1: norm; only 1: simpl; only 1: norm; only 1: intros; only 1: destruct n; only 1: norm; only 1: norm).	0.14418387413	10
Coq.setoid_ring.InitialRing.gen_phiNword_ok	40
Coq.setoid_ring.InitialRing.Nwadd_ok	40
Coq.setoid_ring.InitialRing.Nwopp_ok	40	0.3.0.3	search with cache (only 1: induction x; only 1: norm; only 1: simpl; only 1: norm).	0.0631439685822	18
Coq.setoid_ring.InitialRing.Nwscal_ok	40
Coq.setoid_ring.InitialRing.Nwmul_ok	40
Coq.setoid_ring.InitialRing.gen_phiNword_morph	40
Coq.setoid_ring.InitialRing.radd_ext_Proper	40	0	search with cache (only 1: exact (Radd_ext Reqe)).	0.0180690288544	1
Coq.setoid_ring.InitialRing.rmul_ext_Proper	40	1	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0195410251617	2
Coq.setoid_ring.InitialRing.ropp_ext_Proper	40	2	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0195469856262	3
Coq.setoid_ring.InitialRing.rsub_ext_Proper	40	3	search with cache (only 1: exact (ARsub_ext Rsth Reqe ARth)).	0.0213279724121	4
Coq.setoid_ring.InitialRing.triv_div_th	40
Coq.setoid_ring.InitialRing.Ztriv_div_th	40
Coq.setoid_ring.InitialRing.Ntriv_div_th	40
Coq.setoid_ring.Cring.cring_eq_ext	40
Coq.setoid_ring.Cring.cring_almost_ring_theory	40
Coq.setoid_ring.Cring.cring_morph	40
Coq.setoid_ring.Cring.cring_power_theory	40	76	search with cache (only 1: let rec Esimpl3 := let rec Esimpl2 := let rec Esimpl := let rec rsimpl := repeat gen_rewrite || rewrite phiCR_comm in repeat progress match goal with | |- context [ @Pphi ?l ?P ] => match P with | P0 => rewrite (Pphi0 (C:=l)) | P1 => rewrite (Pphi1 (C:=l)) | @mkPX ?P ?i ?n ?Q => rewrite (@mkPX_ok l P i n Q) end | |- context [ [?c] ] => match c with | 0 => rewrite ring_morphism0 | 1 => rewrite ring_morphism1 | ?x + ?y => rewrite ring_morphism_add | ?x * ?y => rewrite ring_morphism_mul | ?x - ?y => rewrite ring_morphism_sub | - ?x => rewrite ring_morphism_opp end end; simpl; rsimpl in Esimpl; repeat progress match goal with | |- context [ @Pphi ?l (@PaddCl ?c ?P) ] => rewrite (@PaddCl_ok c P l) | |- context [ @Pphi ?l (@PmulC ?P ?c) ] => rewrite (@PmulC_ok c P l) | |- context [ @Pphi ?l (@Popp ?P) ] => rewrite (@Popp_ok P l) end; Esimpl in repeat match goal with | |- context [ @Pphi ?l (@Padd ?P1 ?P2) ] => rewrite (@Padd_ok P1 P2 l) | |- context [ @Pphi ?l (@Psub ?P1 ?P2) ] => rewrite (@Psub_ok P1 P2 l) end; try Esimpl2; try reflexivity; try apply ring_add_comm in now Esimpl3).	11.9560129642	2958
Coq.setoid_ring.Cring.cring_div_theory	40
Coq.setoid_ring.Cring.Zcri	40
Coq.setoid_ring.Ring_polynom.radd_ext_Proper	40	1	search with cache (only 1: exact (Radd_ext Reqe)).	0.0105361938477	2
Coq.setoid_ring.Ring_polynom.rmul_ext_Proper	40	3	search with cache (only 1: exact (Rmul_ext Reqe)).	0.0124909877777	4
Coq.setoid_ring.Ring_polynom.ropp_ext_Proper	40	3	search with cache (only 1: exact (Ropp_ext Reqe)).	0.0205130577087	11
Coq.setoid_ring.Ring_polynom.rsub_ext_Proper	40	3.11	search with cache (only 1: intros x1 x2 Ex y1 y2 Ey; only 1: now rewrite !(ARsub_def ARth), Ex, Ey).	0.265204906464	166
Coq.setoid_ring.Ring_polynom.Pequiv_eq	40
Coq.setoid_ring.Ring_polynom.Pphi_ext	40
Coq.setoid_ring.Ring_polynom.Pinj_ext	40	30.4	search with cache (only 1: unfold Pequiv; only 1: solve_proper).	26.1657800674	12011
Coq.setoid_ring.Ring_polynom.PX_ext	40
Coq.setoid_ring.Ring_polynom.jump_add'	40
Coq.setoid_ring.Ring_polynom.Peq_ok	40
Coq.setoid_ring.Ring_polynom.Peq_spec	40
Coq.setoid_ring.Ring_polynom.Pphi0	40
Coq.setoid_ring.Ring_polynom.Pphi1	40
Coq.setoid_ring.Ring_polynom.mkPinj_ok	40
Coq.setoid_ring.Ring_polynom.mkPinj_ext	40
Coq.setoid_ring.Ring_polynom.pow_pos_add	40
Coq.setoid_ring.Ring_polynom.ceqb_spec	40
Coq.setoid_ring.Ring_polynom.mkPX_ok	40
Coq.setoid_ring.Ring_polynom.mkPX_ext	40
Coq.setoid_ring.Ring_polynom.PaddC_ok	40
Coq.setoid_ring.Ring_polynom.PsubC_ok	40	0.2.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP2; only 1: rsimpl).	13.5792272091	2437
Coq.setoid_ring.Ring_polynom.PmulC_aux_ok	40
Coq.setoid_ring.Ring_polynom.PmulC_ok	40
Coq.setoid_ring.Ring_polynom.Popp_ok	40	0.4.0.0.0.0.0.1.1.1.0.3	search with cache (only 1: revert l; only 1: induction P; only 1: simpl; only 1: intros; only 1: Esimpl; only 1: simpl; only 1: intros; only 1: trivial; only 1: simpl; only 1: intros; only 1: rewrite IHP1, IHP2; only 1: rsimpl).	13.1398420334	2829
Coq.setoid_ring.Ring_polynom.PaddX_ok	40
Coq.setoid_ring.Ring_polynom.Padd_ok	40
Coq.setoid_ring.Ring_polynom.Psub_opp	40
Coq.setoid_ring.Ring_polynom.Psub_ok	40
Coq.setoid_ring.Ring_polynom.PmulI_ok	40
Coq.setoid_ring.Ring_polynom.Pmul_ok	40
Coq.setoid_ring.Ring_polynom.mkZmon_ok	40
Coq.setoid_ring.Ring_polynom.zmon_pred_ok	40
Coq.setoid_ring.Ring_polynom.mkVmon_ok	40
Coq.setoid_ring.Ring_polynom.Mcphi_ok	40
Coq.setoid_ring.Ring_polynom.Mphi_ok	40
Coq.setoid_ring.Ring_polynom.POneSubst_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst1_ok	40
Coq.setoid_ring.Ring_polynom.PNSubst_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL1_ok	40
Coq.setoid_ring.Ring_polynom.PSubstL_ok	40
Coq.setoid_ring.Ring_polynom.PNSubstL_ok	40
Coq.setoid_ring.Ring_polynom.mkX_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_pos_ok	40
Coq.setoid_ring.Ring_polynom.Ppow_N_ok	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEadd	40
Coq.setoid_ring.Ring_polynom.norm_aux_PEopp	40
Coq.setoid_ring.Ring_polynom.norm_aux_spec	40
Coq.setoid_ring.Ring_polynom.norm_subst_spec	40
Coq.setoid_ring.Ring_polynom.mon_of_pol_ok	40
Coq.setoid_ring.Ring_polynom.interp_PElist_ok	40
Coq.setoid_ring.Ring_polynom.norm_subst_ok	40
Coq.setoid_ring.Ring_polynom.ring_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_rec_ok	40
Coq.setoid_ring.Ring_polynom.mkmult1_ok	40
Coq.setoid_ring.Ring_polynom.mkmultm1_ok	40
Coq.setoid_ring.Ring_polynom.r_list_pow_rev	40
Coq.setoid_ring.Ring_polynom.mkmult_c_pos_ok	40
Coq.setoid_ring.Ring_polynom.mkmult_c_ok	40
Coq.setoid_ring.Ring_polynom.mkadd_mult_ok	40
Coq.setoid_ring.Ring_polynom.add_pow_list_ok	40
Coq.setoid_ring.Ring_polynom.add_mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.mult_dev_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_avoid_ok	40
Coq.setoid_ring.Ring_polynom.local_mkpow_ok	40
Coq.setoid_ring.Ring_polynom.Pphi_pow_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_pow_correct	40
Coq.setoid_ring.Ring_polynom.mkmult_pow_ok	40
Coq.setoid_ring.Ring_polynom.mkpow_ok	40
Coq.setoid_ring.Ring_polynom.mkopp_pow_ok	40	0.0.0.0.1.2.0.0.0.1.0.2	search with cache (only 1: destruct p; only 1: simpl; only 1: Esimpl; only 1: rewrite !mkmult_pow_ok; only 1: Esimpl; only 1: simpl; only 1: rewrite mkmult_pow_ok; only 1: Esimpl; only 1: change x with (x ^ 1)  at 1; only 1: now rewrite <- pow_pos_add, Pos.add_1_r, Pos.succ_pred_double; only 1: simpl; only 1: Esimpl).	38.3311679363	1892
Coq.setoid_ring.Ring_polynom.Pphi_dev_ok	40
Coq.setoid_ring.Ring_polynom.ring_rw_correct	40
Coq.setoid_ring.BinList.jump_tl	40
Coq.setoid_ring.BinList.jump_succ	40
Coq.setoid_ring.BinList.jump_add	40
Coq.setoid_ring.BinList.jump_pred_double	40
Coq.setoid_ring.BinList.nth_jump	40
Coq.setoid_ring.BinList.nth_pred_double	40
Coq.setoid_ring.Ncring.pow_pos_comm	40
Coq.setoid_ring.Ncring.pow_pos_succ	40
Coq.setoid_ring.Ncring.pow_pos_add	40
Coq.setoid_ring.Ncring.pow_N_pow_N	40	0	search with cache (only 1: reflexivity).	0.00870680809021	1
Coq.setoid_ring.Ncring.ring_mul_0_l	40
Coq.setoid_ring.Ncring.ring_mul_0_r	40
Coq.setoid_ring.Ncring.ring_opp_mul_l	40
Coq.setoid_ring.Ncring.ring_opp_mul_r	40
Coq.setoid_ring.Ncring.ring_opp_add	40
Coq.setoid_ring.Ncring.ring_opp_opp	40
Coq.setoid_ring.Ncring.ring_sub_ext	40
Coq.setoid_ring.Ncring.ring_add_0_r	40	0.0.0.14	search with cache (only 1: intros x; only 1: rewrite (ring_add_comm x); only 1: rewrite ring_add_0_l; only 1: reflexivity).	0.300156116486	131
Coq.setoid_ring.Ncring.ring_add_assoc1	40
Coq.setoid_ring.Ncring.ring_add_assoc2	40	0.0.0.11.0	search with cache (only 1: intros; only 1: rewrite (ring_add_comm y); only 1: rewrite <- (ring_add_assoc x); only 1: rewrite (ring_add_comm x); only 1: reflexivity).	0.592889070511	251
Coq.setoid_ring.Ncring.ring_opp_zero	40
Coq.setoid_ring.Ncring_tac.Zeqb_ok	40	0.0.0.2.13	search with cache (only 1: intros x y H7; only 1: apply Zsth; only 1: pose proof (Zeq_bool_eq x y H7) as H10; only 1: rewrite H10; only 1: reflexivity).	0.470280885696	327
Coq.setoid_ring.Ncring_tac.comm	40
Coq.setoid_ring.Rings_Q.Qri	40
Coq.setoid_ring.Rings_Q.Qcri	40	3.32.7.4	search with cache (only 1: intros p Hp; only 1: apply Q_Setoid; only 1: rewrite Qmult_comm; only 1: apply Q_Setoid).	10.8138809204	9661
Coq.setoid_ring.Rings_Q.Q_one_zero	40	0	search with cache (only 1: discriminate).	0.0116879940033	1
Coq.setoid_ring.Rings_Q.Qdi	40
Coq.ssr.ssreflect.master_key	40	0	search with cache (only 1: tauto).	0.00516295433044	1
Coq.ssr.ssreflect.lock	40
Coq.ssr.ssreflect.not_locked_false_eq_true	40	0.3	search with cache (only 1: unlock; only 1: discriminate).	0.0193169116974	12
Coq.ssr.ssreflect.unlock	40
Coq.ssr.ssreflect.locked_withE	40
Coq.ssr.ssreflect.unlock_with	40	1	search with cache (only 1: by case : k ).	0.0064640045166	2
Coq.ssr.ssreflect.nary_congruence	40
Coq.ssr.ssreflect.ssr_congr_arrow	40	0.10.13	search with cache (only 1: intro H; only 1: rewrite H; only 1: trivial).	0.087112903595	479
Coq.ssr.ssreflect.iffLR	40	2	search with cache (only 1: intuition).	0.00794696807861	3
Coq.ssr.ssreflect.iffRL	40	0	search with cache (only 1: by case : eqPQ ).	0.0062108039856	1
Coq.ssr.ssreflect.iffLRn	40	3	search with cache (only 1: intuition).	0.0140268802643	4
Coq.ssr.ssreflect.iffRLn	40	0	search with cache (only 1: by move  =>nP tQ; case : nP ; case : eqPQ tQ ).	0.00660800933838	1
Coq.ssr.ssreflect.abstract_context	40	0.106.82	search with cache (only 1: intro H; only 1: apply H; only 1: split).	5.29338383675	74278
Coq.ssr.ssrbool.prop_congr	40	0	search with cache (only 1: Bool.destr_bool).	0.0091438293457	1
Coq.ssr.ssrbool.is_true_true	40	24	search with cache (only 1: reflexivity).	0.0238409042358	280
Coq.ssr.ssrbool.not_false_is_true	40	2	search with cache (only 1: by [  ]).	0.00614190101624	3
Coq.ssr.ssrbool.is_true_locked_true	40	0.0	search with cache (only 1: unlock; only 1: by [  ]).	0.00629210472107	2
Coq.ssr.ssrbool.negbT	40	1	search with cache (only 1: Bool.destr_bool).	0.00599408149719	2
Coq.ssr.ssrbool.negbTE	40	0	search with cache (only 1: by case : b ).	0.00620102882385	1
Coq.ssr.ssrbool.negbF	40	0	search with cache (only 1: by case : b ).	0.00628805160522	1
Coq.ssr.ssrbool.negbFE	40	0	search with cache (only 1: by case : b ).	0.00620794296265	1
Coq.ssr.ssrbool.negbK	40	2	search with cache (only 1: by case).	0.0067241191864	3
Coq.ssr.ssrbool.negbNE	40	0	search with cache (only 1: by case : b ).	0.00474810600281	1
Coq.ssr.ssrbool.negb_inj	40	0.23	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.066498041153	280
Coq.ssr.ssrbool.negbLR	40	3	search with cache (only 1: Bool.destr_bool).	0.0115129947662	13
Coq.ssr.ssrbool.negbRL	40	4	search with cache (only 1: Bool.destr_bool).	0.0116739273071	13
Coq.ssr.ssrbool.contra	40	6.55	search with cache (only 1: Bool.destr_bool; only 1: auto).	1.8627269268	5747
Coq.ssr.ssrbool.contraL	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00938010215759	1
Coq.ssr.ssrbool.contraR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00914001464844	1
Coq.ssr.ssrbool.contraLR	40	0	search with cache (only 1: by case : b  => //; case : c ).	0.00893115997314	1
Coq.ssr.ssrbool.contraT	40	1.14	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.193460941315	109
Coq.ssr.ssrbool.wlog_neg	40	0	search with cache (only 1: by case : b  => // ->).	0.00751900672913	1
Coq.ssr.ssrbool.contraFT	40	4.15	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.453485965729	196
Coq.ssr.ssrbool.contraFN	40	4.16	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.484683990479	218
Coq.ssr.ssrbool.contraTF	40	1.19	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.4413189888	209
Coq.ssr.ssrbool.contraNF	40	1.20	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.53040099144	232
Coq.ssr.ssrbool.contraFF	40	0.34.30	search with cache (only 1: Bool.destr_bool; only 1: symmetry; only 1: intuition).	6.18187618256	18725
Coq.ssr.ssrbool.ifP	40
Coq.ssr.ssrbool.ifPn	40	0	search with cache (only 1: by case  def_b: b ; constructor).	0.00745892524719	1
Coq.ssr.ssrbool.ifT	40	18	search with cache (only 1: by case : b ).	0.147886991501	250
Coq.ssr.ssrbool.ifF	40	1	search with cache (only 1: by move ->).	0.00718092918396	2
Coq.ssr.ssrbool.ifN	40	3	search with cache (only 1: by case : b ).	0.0109460353851	4
Coq.ssr.ssrbool.if_same	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.00742292404175	3
Coq.ssr.ssrbool.if_neg	40	1	search with cache (only 1: by case b).	0.00712299346924	2
Coq.ssr.ssrbool.fun_if	40	2	search with cache (only 1: by case  def_b: b ; constructor).	0.00766491889954	3
Coq.ssr.ssrbool.if_arg	40	0	search with cache (only 1: by case b).	0.00625109672546	1
Coq.ssr.ssrbool.ifE	40	7	search with cache (only 1: trivial).	0.0113439559937	8
Coq.ssr.ssrbool.introNTF	40
Coq.ssr.ssrbool.introTF	40	0	search with cache (only 1: by case c; case Hb).	0.00940704345703	1
Coq.ssr.ssrbool.elimNTF	40	0	search with cache (only 1: by case c; case Hb).	0.00988984107971	1
Coq.ssr.ssrbool.elimTF	40	0	search with cache (only 1: by case c; case Hb).	0.00981497764587	1
Coq.ssr.ssrbool.equivPif	40
Coq.ssr.ssrbool.xorPif	40	0.0.57	search with cache (only 1: destruct 1; only 1: by case Hb; auto; only 1: by case Hb; auto).	1.08099603653	1792
Coq.ssr.ssrbool.introTFn	40
Coq.ssr.ssrbool.elimTFn	40
Coq.ssr.ssrbool.equivPifn	40
Coq.ssr.ssrbool.xorPifn	40
Coq.ssr.ssrbool.introT	40
Coq.ssr.ssrbool.introF	40
Coq.ssr.ssrbool.introN	40
Coq.ssr.ssrbool.introNf	40
Coq.ssr.ssrbool.introTn	40
Coq.ssr.ssrbool.introFn	40
Coq.ssr.ssrbool.elimT	40
Coq.ssr.ssrbool.elimF	40
Coq.ssr.ssrbool.elimN	40
Coq.ssr.ssrbool.elimNf	40
Coq.ssr.ssrbool.elimTn	40
Coq.ssr.ssrbool.elimFn	40
Coq.ssr.ssrbool.introP	40
Coq.ssr.ssrbool.iffP	40
Coq.ssr.ssrbool.equivP	40	0.26	search with cache (only 1: intros [? ?]; only 1: by case : Pb ; constructor; auto).	0.205302000046	361
Coq.ssr.ssrbool.sumboolP	40
Coq.ssr.ssrbool.appP	40
Coq.ssr.ssrbool.sameP	40
Coq.ssr.ssrbool.decPcases	40
Coq.ssr.ssrbool.decP	40
Coq.ssr.ssrbool.rwP	40	14	search with cache (only 1: by case : Pb ; constructor; auto).	0.0427660942078	75
Coq.ssr.ssrbool.rwP2	40
Coq.ssr.ssrbool.altP	40
Coq.ssr.ssrbool.impliesP	40	8.63	search with cache (only 1: destruct 1; only 1: trivial).	0.826595067978	3768
Coq.ssr.ssrbool.impliesPn	40	1.2.7.65	search with cache (only 1: destruct 1; only 1: red; only 1: intros h1 h2; only 1: tauto).	3.19593787193	11675
Coq.ssr.ssrbool.unlessL	40	5.23.1	search with cache (only 1: repeat split; only 1: intros H ?; only 1: auto).	0.23451590538	950
Coq.ssr.ssrbool.unlessR	40	2.44.3	search with cache (only 1: repeat split; only 1: red; only 1: auto).	0.459706068039	2450
Coq.ssr.ssrbool.unless_sym	40	4.1.24.31.43.0	search with cache (only 1: split; only 1: red; only 1: intros; only 1: apply H; only 1: auto; only 1: auto).	4.09460306168	23325
Coq.ssr.ssrbool.unlessP	40
Coq.ssr.ssrbool.bind_unless	40
Coq.ssr.ssrbool.unless_contra	40
Coq.ssr.ssrbool.classicP	40
Coq.ssr.ssrbool.classicW	40	0.5	search with cache (only 1: red; only 1: by move  =>b b' ->).	0.00785493850708	7
Coq.ssr.ssrbool.classic_bind	40
Coq.ssr.ssrbool.classic_EM	40
Coq.ssr.ssrbool.classic_pick	40
Coq.ssr.ssrbool.classic_imply	40
Coq.ssr.ssrbool.all_and2	40
Coq.ssr.ssrbool.all_and3	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.010381937027	1
Coq.ssr.ssrbool.all_and4	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0106499195099	1
Coq.ssr.ssrbool.all_and5	40	0	search with cache (only 1: by split => haveP; split => x; case : (haveP x) ).	0.0124840736389	1
Coq.ssr.ssrbool.pair_andP	40	9	search with cache (only 1: intuition).	0.0140631198883	15
Coq.ssr.ssrbool.idP	40
Coq.ssr.ssrbool.boolP	40	0	search with cache (only 1: by case b1; constructor).	0.00595808029175	1
Coq.ssr.ssrbool.idPn	40	0	search with cache (only 1: by case b1; constructor).	0.00599598884583	1
Coq.ssr.ssrbool.negP	40	0	search with cache (only 1: by case b1; constructor).	0.00791501998901	1
Coq.ssr.ssrbool.negPn	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00604510307312	1
Coq.ssr.ssrbool.negPf	40	0	search with cache (only 1: by case b1; constructor; auto).	0.00632691383362	1
Coq.ssr.ssrbool.andP	40
Coq.ssr.ssrbool.and3P	40
Coq.ssr.ssrbool.and4P	40
Coq.ssr.ssrbool.and5P	40
Coq.ssr.ssrbool.orP	40
Coq.ssr.ssrbool.or3P	40
Coq.ssr.ssrbool.or4P	40
Coq.ssr.ssrbool.nandP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.0102190971375	1
Coq.ssr.ssrbool.norP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case; auto).	0.0102260112762	1
Coq.ssr.ssrbool.implyP	40	0	search with cache (only 1: by case b1; case b2; constructor; auto; case).	0.00723099708557	1
Coq.ssr.ssrbool.andTb	40	1	search with cache (only 1: constructor).	0.00568199157715	2
Coq.ssr.ssrbool.andFb	40	0	search with cache (only 1: by [  ]).	0.0054829120636	1
Coq.ssr.ssrbool.andbT	40	1.44	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.368893861771	1084
Coq.ssr.ssrbool.andbF	40	1	search with cache (only 1: by case).	0.00733304023743	2
Coq.ssr.ssrbool.andbb	40	0	search with cache (only 1: by case).	0.00598096847534	1
Coq.ssr.ssrbool.andbC	40	0.47	search with cache (only 1: intro H; only 1: Bool.destr_bool).	0.383720874786	1180
Coq.ssr.ssrbool.andbA	40	0	search with cache (only 1: by case).	0.00674700737	1
Coq.ssr.ssrbool.andbCA	40	0	search with cache (only 1: by do 2!case).	0.00786304473877	1
Coq.ssr.ssrbool.andbAC	40	1	search with cache (only 1: by do 3!case).	0.0117399692535	2
Coq.ssr.ssrbool.andbACA	40	16	search with cache (only 1: by do 3!case).	0.0498838424683	108
Coq.ssr.ssrbool.orTb	40	0	search with cache (only 1: reflexivity).	0.00617098808289	1
Coq.ssr.ssrbool.orFb	40	0	search with cache (only 1: by [  ]).	0.00547409057617	1
Coq.ssr.ssrbool.orbT	40	2	search with cache (only 1: Bool.destr_bool).	0.00760006904602	3
Coq.ssr.ssrbool.orbF	40	0	search with cache (only 1: by case).	0.00611519813538	1
Coq.ssr.ssrbool.orbb	40	0	search with cache (only 1: by case).	0.00599503517151	1
Coq.ssr.ssrbool.orbC	40	0	search with cache (only 1: by do 2!case).	0.00661706924438	1
Coq.ssr.ssrbool.orbA	40	0	search with cache (only 1: by do 3!case).	0.00909113883972	1
Coq.ssr.ssrbool.orbCA	40	0	search with cache (only 1: by do 3!case).	0.00947713851929	1
Coq.ssr.ssrbool.orbAC	40	0	search with cache (only 1: by do 3!case).	0.0095579624176	1
Coq.ssr.ssrbool.orbACA	40	0	search with cache (only 1: by do 4!case).	0.0133810043335	1
Coq.ssr.ssrbool.andbN	40	0	search with cache (only 1: Bool.destr_bool).	0.00697302818298	1
Coq.ssr.ssrbool.andNb	40	0	search with cache (only 1: by case : b ).	0.00655102729797	1
Coq.ssr.ssrbool.orbN	40	0	search with cache (only 1: by case : b ).	0.00641298294067	1
Coq.ssr.ssrbool.orNb	40	0	search with cache (only 1: by case : b ).	0.0064480304718	1
Coq.ssr.ssrbool.andb_orl	40	5	search with cache (only 1: by do 3!case).	0.0141658782959	6
Coq.ssr.ssrbool.andb_orr	40	0	search with cache (only 1: by do 3!case).	0.0093891620636	1
Coq.ssr.ssrbool.orb_andl	40	0	search with cache (only 1: by do 3!case).	0.00878715515137	1
Coq.ssr.ssrbool.orb_andr	40	0	search with cache (only 1: by do 3!case).	0.00956916809082	1
Coq.ssr.ssrbool.andb_idl	40	2.18	search with cache (only 1: Bool.destr_bool; only 1: intuition).	0.159203052521	211
Coq.ssr.ssrbool.andb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00967311859131	1
Coq.ssr.ssrbool.andb_id2l	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0111520290375	1
Coq.ssr.ssrbool.andb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0139489173889	1
Coq.ssr.ssrbool.orb_idl	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0100629329681	1
Coq.ssr.ssrbool.orb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0101299285889	1
Coq.ssr.ssrbool.orb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0140769481659	1
Coq.ssr.ssrbool.orb_id2r	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0142471790314	1
Coq.ssr.ssrbool.negb_and	40	0	search with cache (only 1: Bool.destr_bool).	0.00748896598816	1
Coq.ssr.ssrbool.negb_or	40	0	search with cache (only 1: by case : a ; case : b ).	0.00834012031555	1
Coq.ssr.ssrbool.andbK	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.00819206237793	1
Coq.ssr.ssrbool.andKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00775980949402	1
Coq.ssr.ssrbool.orbK	40	0	search with cache (only 1: by case : a ; case : b ).	0.00780510902405	1
Coq.ssr.ssrbool.orKb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00768709182739	1
Coq.ssr.ssrbool.implybT	40	1	search with cache (only 1: by case : b ).	0.00774002075195	2
Coq.ssr.ssrbool.implybF	40	0	search with cache (only 1: by case : b ).	0.00645399093628	1
Coq.ssr.ssrbool.implyFb	40	0	search with cache (only 1: by case : b ).	0.00656199455261	1
Coq.ssr.ssrbool.implyTb	40	0	search with cache (only 1: by case : b ).	0.00617909431458	1
Coq.ssr.ssrbool.implybb	40	1	search with cache (only 1: by case : b ).	0.00747990608215	2
Coq.ssr.ssrbool.negb_imply	40	0	search with cache (only 1: by case : a ; case : b ).	0.00798106193542	1
Coq.ssr.ssrbool.implybE	40	2	search with cache (only 1: by case : a ; case : b ).	0.0244407653809	3
Coq.ssr.ssrbool.implyNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.0212788581848	1
Coq.ssr.ssrbool.implybN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00778317451477	1
Coq.ssr.ssrbool.implybNN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00778794288635	1
Coq.ssr.ssrbool.implyb_idl	40	2	search with cache (only 1: by case : a ; case : b  => // ->).	0.015918970108	3
Coq.ssr.ssrbool.implyb_idr	40	0	search with cache (only 1: by case : a ; case : b  => // ->).	0.0103418827057	1
Coq.ssr.ssrbool.implyb_id2l	40	0	search with cache (only 1: by case : a ; case : b ; case : c  => // ->).	0.0139350891113	1
Coq.ssr.ssrbool.addFb	40	0	search with cache (only 1: by [  ]).	0.00586986541748	1
Coq.ssr.ssrbool.addbF	40	0	search with cache (only 1: by case).	0.00596594810486	1
Coq.ssr.ssrbool.addbb	40	1	search with cache (only 1: by case).	0.00696706771851	2
Coq.ssr.ssrbool.addbC	40	0	search with cache (only 1: by do 2!case).	0.00730013847351	1
Coq.ssr.ssrbool.addbA	40	0	search with cache (only 1: by do 3!case).	0.00913381576538	1
Coq.ssr.ssrbool.addbCA	40	0	search with cache (only 1: by do 3!case).	0.00929284095764	1
Coq.ssr.ssrbool.addbAC	40	0	search with cache (only 1: by do 3!case).	0.00960302352905	1
Coq.ssr.ssrbool.addbACA	40	0	search with cache (only 1: by do 4!case).	0.0138959884644	1
Coq.ssr.ssrbool.andb_addl	40	0	search with cache (only 1: by do 3!case).	0.00973510742188	1
Coq.ssr.ssrbool.andb_addr	40	0	search with cache (only 1: by do 3!case).	0.00932288169861	1
Coq.ssr.ssrbool.addKb	40	0	search with cache (only 1: by do 2!case).	0.00784707069397	1
Coq.ssr.ssrbool.addbK	40	0	search with cache (only 1: by do 2!case).	0.00746297836304	1
Coq.ssr.ssrbool.addIb	40	2	search with cache (only 1: by do 3!case).	0.0128040313721	3
Coq.ssr.ssrbool.addbI	40	0	search with cache (only 1: by do 3!case).	0.0105490684509	1
Coq.ssr.ssrbool.addTb	40	0	search with cache (only 1: by case : b ).	0.00674390792847	1
Coq.ssr.ssrbool.addbT	40	1	search with cache (only 1: by case : b ).	0.00734090805054	2
Coq.ssr.ssrbool.addbN	40	0	search with cache (only 1: by case : a ; case : b ).	0.00788903236389	1
Coq.ssr.ssrbool.addNb	40	0	search with cache (only 1: by case : a ; case : b ).	0.00844407081604	1
Coq.ssr.ssrbool.addbP	40	0.0.0.0.50	search with cache (only 1: Bool.destr_bool; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor).	1.61909580231	1505
Coq.ssr.ssrbool.subrelUl	40	5.4.22	search with cache (only 1: red; only 1: simpl in *; only 1: by move  =>b b' ->).	0.34304690361	1278
Coq.ssr.ssrbool.subrelUr	40	11.27.4.15	search with cache (only 1: intro H; only 1: simpl in *; only 1: red; only 1: intuition).	2.54562306404	10907
Coq.ssr.ssrbool.sub_refl	40	1.6	search with cache (only 1: red; only 1: trivial).	0.00832390785217	9
Coq.ssr.ssrbool.mem_topred	40
Coq.ssr.ssrbool.topredE	40	0	search with cache (only 1: by case : pT pp ).	0.00719213485718	1
Coq.ssr.ssrbool.app_predE	40
Coq.ssr.ssrbool.in_applicative	40
Coq.ssr.ssrbool.in_collective	40
Coq.ssr.ssrbool.in_simpl	40	0	search with cache (only 1: by case : msp  => _ /= ->).	0.00804996490479	1
Coq.ssr.ssrbool.unfold_in	40	3	search with cache (only 1: by rewrite -mem_topred).	0.00840401649475	4
Coq.ssr.ssrbool.simpl_predE	40	2	search with cache (only 1: by [  ]).	0.00627994537354	3
Coq.ssr.ssrbool.mem_simpl	40	0	search with cache (only 1: by [  ]).	0.00683498382568	1
Coq.ssr.ssrbool.mem_mem	40
Coq.ssr.ssrbool.qualifE	40	1	search with cache (only 1: by [  ]).	0.00731992721558	2
Coq.ssr.ssrbool.keyed_predE	40
Coq.ssr.ssrbool.keyed_qualifier_suproof	40
Coq.ssr.ssrbool.all_tag_cond_dep	40
Coq.ssr.ssrbool.all_tag_cond	40
Coq.ssr.ssrbool.all_sig_cond_dep	40
Coq.ssr.ssrbool.all_sig_cond	40
Coq.ssr.ssrbool.symmetric_from_pre	40
Coq.ssr.ssrbool.sym_left_transitive	40
Coq.ssr.ssrbool.sym_right_transitive	40
Coq.ssr.ssrbool.equivalence_relP	40
Coq.ssr.ssrbool.rev_trans	40
Coq.ssr.ssrbool.forE	40	0	search with cache (only 1: reflexivity).	0.00664806365967	1
Coq.ssr.ssrbool.in1W	40	0.40	search with cache (only 1: intros; only 1: by [  ]).	0.445611953735	858
Coq.ssr.ssrbool.in2W	40	0	search with cache (only 1: by move  =>? ?).	0.00786280632019	1
Coq.ssr.ssrbool.in3W	40	0	search with cache (only 1: by move  =>? ?).	0.00836896896362	1
Coq.ssr.ssrbool.in1T	40	36	search with cache (only 1: auto).	0.393160104752	658
Coq.ssr.ssrbool.in2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0139329433441	2
Coq.ssr.ssrbool.in3T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0143218040466	2
Coq.ssr.ssrbool.sub_in1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0124070644379	2
Coq.ssr.ssrbool.sub_in11	40	2	search with cache (only 1: by move  =>? ?; auto).	0.0160419940948	3
Coq.ssr.ssrbool.sub_in111	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0190670490265	4
Coq.ssr.ssrbool.on1W	40	0	search with cache (only 1: by move  =>? ?).	0.00777411460876	1
Coq.ssr.ssrbool.on1lW	40	0	search with cache (only 1: by move  =>? ?).	0.0079550743103	1
Coq.ssr.ssrbool.on2W	40	0	search with cache (only 1: by move  =>? ?).	0.00789594650269	1
Coq.ssr.ssrbool.on1T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0144469738007	2
Coq.ssr.ssrbool.on1lT	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0140609741211	2
Coq.ssr.ssrbool.on2T	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0140540599823	2
Coq.ssr.ssrbool.subon1	40	1	search with cache (only 1: by move  =>? ?; auto).	0.0147950649261	2
Coq.ssr.ssrbool.subon1l	40	0	search with cache (only 1: by move  =>allQ x /sub2; apply : allQ ).	0.00983285903931	1
Coq.ssr.ssrbool.subon2	40	3	search with cache (only 1: by move  =>? ?; auto).	0.0183320045471	4
Coq.ssr.ssrbool.can_in_inj	40
Coq.ssr.ssrbool.canLR_in	40	25.39.17.44	search with cache (only 1: symmetry; only 1: symmetry; only 1: subst; only 1: auto).	8.27791595459	24963
Coq.ssr.ssrbool.canRL_in	40	13.15.12.87	search with cache (only 1: move  =>f0 fP; only 1: destruct 1; only 1: symmetry; only 1: auto).	13.0166730881	39890
Coq.ssr.ssrbool.on_can_inj	40	0	search with cache (only 1: by move  =>fK x y /fK {+2}<- /fK {+2}<- ->).	0.0127689838409	1
Coq.ssr.ssrbool.canLR_on	40	1	search with cache (only 1: by move  =>fK D1y ->; rewrite fK).	0.0100870132446	2
Coq.ssr.ssrbool.canRL_on	40	2	search with cache (only 1: by move  =>fK D1x <-; rewrite fK).	0.0103321075439	3
Coq.ssr.ssrbool.inW_bij	40
Coq.ssr.ssrbool.onW_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0101389884949	1
Coq.ssr.ssrbool.inT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0133111476898	1
Coq.ssr.ssrbool.onT_bij	40	0	search with cache (only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	0.0133490562439	1
Coq.ssr.ssrbool.sub_in_bij	40	3.111	search with cache (only 1: intro H; only 1: by case  =>g' fK g'K; exists g' => * ? *; auto).	8.95065784454	22119
Coq.ssr.ssrbool.subon_bij	40	0	search with cache (only 1: by move  =>subD [g' fK g'K]; exists g' => x; move /subD ; [ apply : fK  | apply : g'K  ]).	0.0153150558472	1
Coq.ssr.ssrbool.sub_in2	40	38.56	search with cache (only 1: red; only 1: auto).	2.96762800217	10141
Coq.ssr.ssrbool.sub_in3	40	29.31	search with cache (only 1: red; only 1: auto).	1.20039200783	2343
Coq.ssr.ssrbool.sub_in12	40	7.73	search with cache (only 1: red; only 1: by move  =>? ?; auto).	1.99063491821	3397
Coq.ssr.ssrbool.sub_in21	40	0	search with cache (only 1: by move  =>/= sub1 sub; apply : sub_in111 ).	0.00918817520142	1
Coq.ssr.ssrbool.equivalence_relP_in	40
Coq.ssr.ssrbool.monoW	40	35	search with cache (only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	0.587872982025	751
Coq.ssr.ssrbool.mono2W	40	0	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00809717178345	1
Coq.ssr.ssrbool.homoRL	40
Coq.ssr.ssrbool.homoLR	40	0	search with cache (only 1: by move  =>Hf x y /Hf; rewrite fgK).	0.00843501091003	1
Coq.ssr.ssrbool.homo_mono	40
Coq.ssr.ssrbool.monoLR	40
Coq.ssr.ssrbool.monoRL	40
Coq.ssr.ssrbool.can_mono	40
Coq.ssr.ssrbool.monoW_in	40
Coq.ssr.ssrbool.mono2W_in	40	1	search with cache (only 1: by move  =>hf x ax; rewrite hf).	0.00858402252197	2
Coq.ssr.ssrbool.homoRL_in	40
Coq.ssr.ssrbool.homoLR_in	40	0	search with cache (only 1: by move  =>Hf x y hx hy /Hf; rewrite fgK_on //; apply).	0.0141801834106	1
Coq.ssr.ssrbool.homo_mono_in	40
Coq.ssr.ssrbool.monoLR_in	40
Coq.ssr.ssrbool.monoRL_in	40
Coq.ssr.ssrbool.can_mono_in	40
Coq.ssr.ssrsetoid.compat_Reflexive	40	0	search with cache (only 1: tauto).	0.00450611114502	1
Coq.ssr.ssrfun.unitE	40	0.9.4.20	search with cache (only 1: intro H; only 1: intuition; only 1: reflexivity || destruct H; only 1: tauto).	0.331695079803	981
Coq.ssr.ssrfun.frefl	40	3	search with cache (only 1: split).	0.00670981407166	4
Coq.ssr.ssrfun.fsym	40	2.5	search with cache (only 1: intros; only 1: by [  ]).	0.0123269557953	9
Coq.ssr.ssrfun.ftrans	40	7.41.59.16	search with cache (only 1: intros; only 1: intro H1; only 1: rewrite H; only 1: auto).	9.02448296547	55107
Coq.ssr.ssrfun.rrefl	40	2	search with cache (only 1: split).	0.00734210014343	3
Coq.ssr.ssrfun.eq_comp	40
Coq.ssr.ssrfun.all_tag	40	0.0.0.3.1	search with cache (only 1: intro H; only 1: exists (fun z => projT1 (H z)); only 1: intro z; only 1: destruct (H z); only 1: assumption).	0.0175778865814	9
Coq.ssr.ssrfun.all_tag2	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0129351615906	1
Coq.ssr.ssrfun.svalP	40	23	search with cache (only 1: apply proj2_sig).	0.0660960674286	255
Coq.ssr.ssrfun.s2valP	40	0	search with cache (only 1: by case : u ).	0.0090639591217	1
Coq.ssr.ssrfun.s2valP'	40	0	search with cache (only 1: by case : u ).	0.00911498069763	1
Coq.ssr.ssrfun.all_sig	40	0	search with cache (only 1: by move  =>fP; exists (fun x => tag (fP x)) => x; case : (fP x) ).	0.0105819702148	1
Coq.ssr.ssrfun.all_sig2	40	0	search with cache (only 1: by case /all_tag =>f /all_pair []; exists f).	0.0150139331818	1
Coq.ssr.ssrfun.can_pcan	40	0.44.9.4.4	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	4.24277710915	26298
Coq.ssr.ssrfun.pcan_inj	40
Coq.ssr.ssrfun.can_inj	40	1	search with cache (only 1: by move  =>fK x y /(congr1 g); rewrite !fK => [[]]).	0.012542963028	2
Coq.ssr.ssrfun.canLR	40	2.4.17	search with cache (only 1: intros; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.365800857544	679
Coq.ssr.ssrfun.canRL	40	5.13	search with cache (only 1: destruct 2; only 1: auto).	0.187716007233	253
Coq.ssr.ssrfun.Some_inj	40
Coq.ssr.ssrfun.of_voidK	40	1.10	search with cache (only 1: intro H; only 1: destruct H).	0.0295040607452	47
Coq.ssr.ssrfun.esymK	40	0.1.63	search with cache (only 1: intro H; only 1: destruct H; only 1: reflexivity).	0.810451030731	4274
Coq.ssr.ssrfun.etrans_id	40	0.32	search with cache (only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.214368104935	565
Coq.ssr.ssrfun.inj_id	40	8	search with cache (only 1: by move  =>eq_fg x).	0.0101380348206	9
Coq.ssr.ssrfun.inj_can_sym	40	1.56.4	search with cache (only 1: intros; only 1: intro; only 1: auto).	1.04616212845	4203
Coq.ssr.ssrfun.inj_comp	40	13.54.14	search with cache (only 1: intros; only 1: red; only 1: auto).	3.22576498985	11327
Coq.ssr.ssrfun.inj_compr	40
Coq.ssr.ssrfun.can_comp	40	24.35.69	search with cache (only 1: red; only 1: simpl in *; only 1: by move  =>eq_fg eq_gh x; rewrite eq_fg).	11.0987889767	58716
Coq.ssr.ssrfun.pcan_pcomp	40
Coq.ssr.ssrfun.eq_inj	40
Coq.ssr.ssrfun.eq_can	40
Coq.ssr.ssrfun.inj_can_eq	40
Coq.ssr.ssrfun.bij_inj	40
Coq.ssr.ssrfun.bij_can_sym	40
Coq.ssr.ssrfun.bij_can_eq	40
Coq.ssr.ssrfun.eq_bij	40
Coq.ssr.ssrfun.bij_comp	40
Coq.ssr.ssrfun.bij_can_bij	40
Coq.ssr.ssrfun.inv_inj	40
Coq.ssr.ssrfun.inv_bij	40	20.20.25	search with cache (only 1: exists f; only 1: by [  ]; only 1: by [  ]).	0.959267854691	5445
Coq.ssr.ssrunder.Under_rel.Under_rel_from_rel	40	0.3	search with cache (only 1: intros; only 1: trivial).	0.00759696960449	5
Coq.ssr.ssrunder.Under_rel.Under_relE	40	1	search with cache (only 1: split).	0.00602602958679	2
Coq.ssr.ssrunder.Under_rel.over_rel	40	0	search with cache (only 1: now trivial).	0.00621604919434	1
Coq.ssr.ssrunder.Under_rel.over_rel_done	40	0	search with cache (only 1: now trivial).	0.0058479309082	1
Coq.ssr.ssrunder.Under_rel.under_rel_done	40	0	search with cache (only 1: now unfold Over_rel).	0.00596594810486	1
Coq.Vectors.VectorEq.eqb_nat_eq	40
Coq.Vectors.VectorEq.eqb_eq	40
Coq.Vectors.VectorEq.eq_dec	40
Coq.Vectors.VectorEq.cast	40	0.1.6.9.5	search with cache (only 1: intros; only 1: generalize dependent m; only 1: intros H v; only 1: intros <-; only 1: exact v).	1.01901888847	1927
Coq.Vectors.VectorDef.trunc	40
Coq.Vectors.VectorSpec.eta	40
Coq.Vectors.VectorSpec.eq_nth_iff	40
Coq.Vectors.VectorSpec.nth_order_last	40
Coq.Vectors.VectorSpec.shiftin_nth	40
Coq.Vectors.VectorSpec.shiftin_last	40
Coq.Vectors.VectorSpec.shiftrepeat_nth	40
Coq.Vectors.VectorSpec.shiftrepeat_last	40	0.0.6	search with cache (only 1: refine (@rectS _ _ _ _); only 1: now simpl; only 1: now simpl).	0.270225048065	86
Coq.Vectors.VectorSpec.const_nth	40	1.3.18	search with cache (only 1: induction p; only 1: now simpl; only 1: now simpl).	0.397233009338	591
Coq.Vectors.VectorSpec.nth_map	40
Coq.Vectors.VectorSpec.nth_map2	40
Coq.Vectors.VectorSpec.fold_left_right_assoc_eq	40
Coq.Vectors.VectorSpec.to_list_of_list_opp	40
Coq.Vectors.VectorSpec.take_O	40	2	search with cache (only 1: reflexivity).	0.00661301612854	3
Coq.Vectors.VectorSpec.take_idem	40
Coq.Vectors.VectorSpec.take_app	40
Coq.Vectors.VectorSpec.take_prf_irr	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: intros n v le le'; only 1: auto; only 1: intros n v le le'; only 1: destruct v; only 1: inversion le; only 1: simpl; only 1: apply f_equal; only 1: apply IHp).	0.0304780006409	9
Coq.Vectors.VectorSpec.uncons_cons	40	0.1	search with cache (only 1: intros; only 1: now simpl).	0.00909304618835	3
Coq.Vectors.VectorSpec.append_comm_cons	40	3.0.1.1.0	search with cache (only 1: intros m w le; only 1: simpl; only 1: intros; only 1: apply f_equal; only 1: reflexivity).	0.0201871395111	11
Coq.Vectors.VectorSpec.splitat_append	40
Coq.Vectors.VectorSpec.append_splitat	40
Coq.Vectors.Fin.of_nat_ext	40
Coq.Vectors.Fin.of_nat_to_nat_inv	40
Coq.Vectors.Fin.to_nat_of_nat	40
Coq.Vectors.Fin.to_nat_inj	40
Coq.Vectors.Fin.L_sanity	40
Coq.Vectors.Fin.L_R	40	19.13.1.20	search with cache (only 1: destruct n; only 1: assumption; only 1: destruct (to_nat (L n p)); only 1: left).	23.8623290062	66867
Coq.Vectors.Fin.R_sanity	40
Coq.Vectors.Fin.depair_sanity	40
Coq.Vectors.Fin.eqb_nat_eq	40
Coq.Vectors.Fin.eqb_eq	40
Coq.Vectors.Fin.eq_dec	40
Coq.Vectors.Fin.cast	40	6.0.2.0.0	search with cache (only 1: intros m n p; only 1: revert n; only 1: intros; only 1: subst p; only 1: trivial).	0.381103992462	393
Coq.Setoids.Setoid.Seq_refl	40	0	search with cache (only 1: firstorder).	0.00677108764648	1
Coq.Setoids.Setoid.Seq_sym	40	2.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: firstorder).	0.0139880180359	13
Coq.Setoids.Setoid.Seq_trans	40	3.0.0.0.0.0.0	search with cache (only 1: unfold Setoid_Theory in s; only 1: intros; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: now transitivity y).	0.0252170562744	16
Coq.Setoids.Setoid.gen_st	40	2	search with cache (only 1: CRelationClasses.simpl_crelation).	0.00823497772217	3
Coq.Bool.IfProp.Iftrue_inv	40	2.0.0	search with cache (only 1: destruct 1; only 1: intuition; only 1: discriminate).	0.00864601135254	5
Coq.Bool.IfProp.Iffalse_inv	40	1.0.0.0.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: case diff_true_false; only 1: auto with bool; only 1: intros; only 1: auto with bool).	0.0156500339508	11
Coq.Bool.IfProp.IfProp_true	40	0.41.10	search with cache (only 1: intros; only 1: inversion_clear H; only 1: auto with bool).	10.8293619156	58825
Coq.Bool.IfProp.IfProp_false	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: assumption).	0.00770688056946	3
Coq.Bool.IfProp.IfProp_or	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: left; only 1: auto with bool; only 1: right; only 1: auto with bool).	0.0139608383179	17
Coq.Bool.IfProp.IfProp_sum	40
Coq.Bool.Zerob.zerob_true_intro	40	0.0.3	search with cache (only 1: intros; only 1: subst; only 1: trivial).	0.00987482070923	6
Coq.Bool.Zerob.zerob_true_elim	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial with bool; only 1: inversion 1).	0.0102760791779	3
Coq.Bool.Zerob.zerob_false_intro	40	2.22.0	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial with bool).	0.282418966293	930
Coq.Bool.Zerob.zerob_false_elim	40	1.1.3.0	search with cache (only 1: destruct n; only 1: inversion 1; only 1: inversion 1; only 1: inversion 1).	0.0228390693665	24
Coq.Bool.DecBool.ifdec_left	40	0.1.12	search with cache (only 1: destruct H; only 1: reflexivity; only 1: contradiction).	0.265735149384	703
Coq.Bool.DecBool.ifdec_right	40	0.7.1.0.0	search with cache (only 1: intros; only 1: case H; only 1: intro; only 1: contradiction; only 1: auto).	0.489640951157	720
Coq.Bool.Sumbool.sumbool_of_bool	40	0.0.15.0	search with cache (only 1: intro H; only 1: destruct H; only 1: auto; only 1: auto).	0.06960105896	362
Coq.Bool.Sumbool.bool_eq_rec	40	0.1.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00821900367737	4
Coq.Bool.Sumbool.bool_eq_ind	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.00711894035339	3
Coq.Bool.Sumbool.sumbool_and	40
Coq.Bool.Sumbool.sumbool_or	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0129060745239	7
Coq.Bool.Sumbool.sumbool_not	40	0.0.0.0.0.0.0	search with cache (only 1: case H1; only 1: case H2; only 1: auto; only 1: auto; only 1: case H2; only 1: auto; only 1: auto).	0.0115540027618	7
Coq.Bool.Sumbool.bool_of_sumbool	40
Coq.Bool.Bool.bool_dec	40
Coq.Bool.Bool.diff_true_false	40	1	search with cache (only 1: discriminate).	0.00450301170349	2
Coq.Bool.Bool.diff_false_true	40	0	search with cache (only 1: discriminate).	0.00406408309937	1
Coq.Bool.Bool.eq_true_false_abs	40	1.1.4.2.0	search with cache (only 1: intro H; only 1: intro z; only 1: destruct H; only 1: discriminate; only 1: discriminate).	0.0435450077057	149
Coq.Bool.Bool.not_true_is_false	40	3.11.0	search with cache (only 1: destr_bool; only 1: reflexivity || destruct H; only 1: trivial).	0.120662927628	446
Coq.Bool.Bool.not_false_is_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00712394714355	2
Coq.Bool.Bool.not_true_iff_false	40	0.0.0.13	search with cache (only 1: split; only 1: destr_bool; only 1: intuition; only 1: destr_bool).	0.281646966934	639
Coq.Bool.Bool.not_false_iff_true	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0105249881744	3
Coq.Bool.Bool.leb_implb	40	1.0.1.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0436429977417	58
Coq.Bool.Bool.eqb_subst	40	0	search with cache (only 1: destr_bool).	0.00642704963684	1
Coq.Bool.Bool.eqb_reflx	40	0	search with cache (only 1: destr_bool).	0.00497913360596	1
Coq.Bool.Bool.eqb_prop	40	0	search with cache (only 1: destr_bool).	0.00578618049622	1
Coq.Bool.Bool.eqb_true_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0127279758453	5
Coq.Bool.Bool.eqb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0164778232574	5
Coq.Bool.Bool.negb_orb	40	0	search with cache (only 1: destr_bool).	0.00610184669495	1
Coq.Bool.Bool.negb_andb	40	0	search with cache (only 1: destr_bool).	0.00611615180969	1
Coq.Bool.Bool.negb_involutive	40	1	search with cache (only 1: destr_bool).	0.00473213195801	2
Coq.Bool.Bool.negb_involutive_reverse	40	0	search with cache (only 1: destr_bool).	0.00468301773071	1
Coq.Bool.Bool.negb_sym	40	0	search with cache (only 1: destr_bool).	0.00659513473511	1
Coq.Bool.Bool.no_fixpoint_negb	40	1	search with cache (only 1: destr_bool).	0.00591015815735	2
Coq.Bool.Bool.eqb_negb1	40	0	search with cache (only 1: destr_bool).	0.00507688522339	1
Coq.Bool.Bool.eqb_negb2	40	0	search with cache (only 1: destr_bool).	0.00475192070007	1
Coq.Bool.Bool.if_negb	40	0	search with cache (only 1: destr_bool).	0.00477480888367	1
Coq.Bool.Bool.negb_true_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00939989089966	3
Coq.Bool.Bool.negb_false_iff	40	0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.00932908058167	3
Coq.Bool.Bool.orb_true_iff	40	1.0.0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0173277854919	7
Coq.Bool.Bool.orb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0176348686218	5
Coq.Bool.Bool.orb_true_elim	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0135028362274	4
Coq.Bool.Bool.orb_prop	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition).	0.0130460262299	4
Coq.Bool.Bool.orb_true_intro	40	1.1	search with cache (only 1: destr_bool; only 1: intuition).	0.108091831207	44
Coq.Bool.Bool.orb_false_intro	40	0	search with cache (only 1: destr_bool).	0.00582313537598	1
Coq.Bool.Bool.orb_false_elim	40	1.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00940084457397	3
Coq.Bool.Bool.orb_diag	40	0	search with cache (only 1: destr_bool).	0.0055148601532	1
Coq.Bool.Bool.orb_true_r	40	1	search with cache (only 1: destr_bool).	0.00512480735779	2
Coq.Bool.Bool.orb_true_l	40	0	search with cache (only 1: destr_bool).	0.0048201084137	1
Coq.Bool.Bool.orb_false_r	40	2	search with cache (only 1: destr_bool).	0.00500702857971	3
Coq.Bool.Bool.orb_false_l	40	0	search with cache (only 1: destr_bool).	0.00510501861572	1
Coq.Bool.Bool.orb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00532484054565	2
Coq.Bool.Bool.orb_comm	40	0	search with cache (only 1: destr_bool).	0.00571393966675	1
Coq.Bool.Bool.orb_assoc	40	0	search with cache (only 1: destr_bool).	0.0086350440979	1
Coq.Bool.Bool.andb_true_iff	40	0.0.0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.296136856079	199
Coq.Bool.Bool.andb_false_iff	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.016744852066	5
Coq.Bool.Bool.andb_true_eq	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a, b; only 1: repeat split; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: repeat split; only 1: assumption; only 1: assumption).	0.0159289836884	9
Coq.Bool.Bool.andb_false_intro1	40	1	search with cache (only 1: destr_bool).	0.00616407394409	2
Coq.Bool.Bool.andb_false_intro2	40	0.0.0	search with cache (only 1: intros; only 1: apply andb_false_iff; only 1: auto).	0.00762891769409	3
Coq.Bool.Bool.andb_false_r	40	4	search with cache (only 1: destr_bool).	0.00498914718628	5
Coq.Bool.Bool.andb_false_l	40	0	search with cache (only 1: destr_bool).	0.00474190711975	1
Coq.Bool.Bool.andb_diag	40	1	search with cache (only 1: destr_bool).	0.00498390197754	2
Coq.Bool.Bool.andb_true_r	40	1	search with cache (only 1: destr_bool).	0.00482702255249	2
Coq.Bool.Bool.andb_true_l	40	0	search with cache (only 1: destr_bool).	0.00482487678528	1
Coq.Bool.Bool.andb_false_elim	40	0.0.0.0.0	search with cache (only 1: destruct b1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0100989341736	5
Coq.Bool.Bool.andb_negb_r	40	1	search with cache (only 1: destr_bool).	0.00502800941467	2
Coq.Bool.Bool.andb_comm	40	0	search with cache (only 1: destr_bool).	0.00573682785034	1
Coq.Bool.Bool.andb_assoc	40	0	search with cache (only 1: destr_bool).	0.00810480117798	1
Coq.Bool.Bool.andb_orb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.0081901550293	1
Coq.Bool.Bool.andb_orb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.0083339214325	1
Coq.Bool.Bool.orb_andb_distrib_r	40	0	search with cache (only 1: destr_bool).	0.00816798210144	1
Coq.Bool.Bool.orb_andb_distrib_l	40	0	search with cache (only 1: destr_bool).	0.00830507278442	1
Coq.Bool.Bool.absorption_andb	40	0	search with cache (only 1: destr_bool).	0.00662088394165	1
Coq.Bool.Bool.absorption_orb	40	0	search with cache (only 1: destr_bool).	0.00613498687744	1
Coq.Bool.Bool.xorb_false_r	40	0	search with cache (only 1: destr_bool).	0.00508499145508	1
Coq.Bool.Bool.xorb_false_l	40	0	search with cache (only 1: destr_bool).	0.00476503372192	1
Coq.Bool.Bool.xorb_true_r	40	0	search with cache (only 1: destr_bool).	0.0048770904541	1
Coq.Bool.Bool.xorb_true_l	40	0	search with cache (only 1: reflexivity).	0.00374293327332	1
Coq.Bool.Bool.xorb_nilpotent	40	0	search with cache (only 1: destr_bool).	0.0047709941864	1
Coq.Bool.Bool.xorb_comm	40	0	search with cache (only 1: destr_bool).	0.00636291503906	1
Coq.Bool.Bool.xorb_assoc_reverse	40	0	search with cache (only 1: destr_bool).	0.00870895385742	1
Coq.Bool.Bool.xorb_eq	40	0	search with cache (only 1: destr_bool).	0.00674700737	1
Coq.Bool.Bool.xorb_move_l_r_1	40	0	search with cache (only 1: destr_bool).	0.00793480873108	1
Coq.Bool.Bool.xorb_move_l_r_2	40	0	search with cache (only 1: destr_bool).	0.0085289478302	1
Coq.Bool.Bool.xorb_move_r_l_1	40	0	search with cache (only 1: destr_bool).	0.00847816467285	1
Coq.Bool.Bool.xorb_move_r_l_2	40	0	search with cache (only 1: destr_bool).	0.0264658927917	1
Coq.Bool.Bool.negb_xorb_l	40	0	search with cache (only 1: destr_bool).	0.00618100166321	1
Coq.Bool.Bool.negb_xorb_r	40	0.0.0.0.0	search with cache (only 1: destruct b, b'; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	0.0103781223297	5
Coq.Bool.Bool.xorb_negb_negb	40	0	search with cache (only 1: destr_bool).	0.00622415542603	1
Coq.Bool.Bool.eq_iff_eq_true	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.0192110538483	5
Coq.Bool.Bool.eq_true_iff_eq	40	3.3.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.01349401474	9
Coq.Bool.Bool.eq_true_negb_classical	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00897693634033	2
Coq.Bool.Bool.eq_true_not_negb	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.0074770450592	2
Coq.Bool.Bool.absurd_eq_bool	40	0.0.2	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0129110813141	18
Coq.Bool.Bool.absurd_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00660610198975	2
Coq.Bool.Bool.trans_eq_bool	40	0	search with cache (only 1: destr_bool).	0.00845694541931	1
Coq.Bool.Bool.Is_true_eq_true	40	0.0	search with cache (only 1: destr_bool; only 1: intuition).	0.00736999511719	2
Coq.Bool.Bool.Is_true_eq_left	40	0	search with cache (only 1: destr_bool).	0.0056779384613	1
Coq.Bool.Bool.Is_true_eq_right	40	0.0.0	search with cache (only 1: intros; only 1: subst; only 1: auto with bool).	0.00669193267822	3
Coq.Bool.Bool.eqb_refl	40	0	search with cache (only 1: destr_bool).	0.00455617904663	1
Coq.Bool.Bool.eqb_eq	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0092658996582	3
Coq.Bool.Bool.orb_prop_elim	40	2.1.1.2.1.2.3.3	search with cache (only 1: destruct a, b; only 1: intuition; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: intros; only 1: auto).	3.75504302979	9980
Coq.Bool.Bool.orb_prop_intro	40	5.0.0.0.3	search with cache (only 1: destruct a, b; only 1: destr_bool; only 1: destr_bool; only 1: destr_bool; only 1: intuition).	0.275372028351	403
Coq.Bool.Bool.andb_prop_intro	40	0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto).	0.00984382629395	4
Coq.Bool.Bool.andb_prop_elim	40	0.0.0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto; only 1: tauto; only 1: tauto).	0.0115048885345	5
Coq.Bool.Bool.eq_bool_prop_intro	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.0107278823853	3
Coq.Bool.Bool.eq_bool_prop_elim	40	0.1.0	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.0097918510437	4
Coq.Bool.Bool.negb_prop_elim	40	0.0.0	search with cache (only 1: destr_bool; only 1: auto; only 1: tauto).	0.00717401504517	3
Coq.Bool.Bool.negb_prop_intro	40	1.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00785398483276	3
Coq.Bool.Bool.negb_prop_classical	40	0.0	search with cache (only 1: destr_bool; only 1: tauto).	0.00646090507507	2
Coq.Bool.Bool.negb_prop_involutive	40	0.0.0	search with cache (only 1: destr_bool; only 1: tauto; only 1: tauto).	0.00733184814453	3
Coq.Bool.Bool.andb_if	40	1	search with cache (only 1: destr_bool).	0.00728583335876	11
Coq.Bool.Bool.negb_if	40	0	search with cache (only 1: destr_bool).	0.00556111335754	1
Coq.Bool.Bool.andb_lazy_alt	40	0	search with cache (only 1: destr_bool).	0.00589609146118	1
Coq.Bool.Bool.orb_lazy_alt	40	0	search with cache (only 1: reflexivity).	0.00435400009155	1
Coq.Bool.Bool.reflect_iff	40
Coq.Bool.Bool.iff_reflect	40	10.1.1	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition).	0.198697090149	319
Coq.Bool.Bool.reflect_dec	40	0.1.0.0	search with cache (only 1: destruct 1; only 1: constructor; only 1: intuition; only 1: intuition).	0.00913596153259	5
Coq.Bool.Bool.eqb_spec	40	0.4.4.0.6	search with cache (only 1: destr_bool; only 1: intuition; only 1: intuition; only 1: intuition; only 1: intuition).	0.11851978302	284
Coq.Bool.BoolEq.beq_eq_true	40	2.4.3	search with cache (only 1: destr_bool; only 1: destruct H; only 1: intuition).	0.0466170310974	61
Coq.Bool.BoolEq.beq_eq_not_false	40
Coq.Bool.BoolEq.beq_false_not_eq	40
Coq.Bool.BoolEq.exists_beq_eq	40
Coq.Bool.BoolEq.not_eq_false_beq	40
Coq.Bool.BoolEq.eq_dec	40
Coq.Lists.ListSet.set_In_dec	40
Coq.Lists.ListSet.set_mem_ind	40	3.2.4.1.2.0.0	search with cache (only 1: simple induction x; only 1: auto; only 1: simpl; only 1: intros a0 x0 Ha0; only 1: case (Aeq_dec a a0); only 1: auto; only 1: auto with datatypes).	25.7329399586	18213
Coq.Lists.ListSet.set_mem_ind2	40
Coq.Lists.ListSet.set_mem_correct1	40	2.5.0.4.1.3.3.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: intros; only 1: discriminate H; only 1: intros a0 x0 Ha0; only 1: simpl; only 1: elim (Aeq_dec a a0); only 1: auto; only 1: auto with datatypes).	29.1122539043	17336
Coq.Lists.ListSet.set_mem_correct2	40
Coq.Lists.ListSet.set_mem_complete1	40
Coq.Lists.ListSet.set_mem_complete2	40	0.0.0.0.3.0.1.0.0.0.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros; only 1: elim (Aeq_dec a a0); only 1: intro Hneg; only 1: absurd (a0 = a); only 1: auto with datatypes; only 1: auto with datatypes; only 1: auto with datatypes).	7.40412807465	3115
Coq.Lists.ListSet.set_add_intro1	40
Coq.Lists.ListSet.set_add_intro2	40
Coq.Lists.ListSet.set_add_intro	40	2.0.9	search with cache (only 1: intros H H0 H1 [| ]; only 1: auto with datatypes; only 1: auto with datatypes).	1.23234510422	867
Coq.Lists.ListSet.set_add_elim	40
Coq.Lists.ListSet.set_add_elim2	40	0.0.0.0.1.0.0.0.0.0.0.4.0.0.1	search with cache (only 1: unfold set_In; only 1: simple induction x; only 1: simpl; only 1: intros [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec b a0); only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros H0 [| ]; only 1: tauto; only 1: tauto).	8.87716603279	4589
Coq.Lists.ListSet.set_add_not_empty	40	6.5.5.1.1.0.3.0.2	search with cache (only 1: simple induction x; only 1: simpl; only 1: discriminate; only 1: simpl; only 1: do 3 intro; only 1: elim (Aeq_dec a a0); only 1: discriminate; only 1: intro eq; only 1: discriminate).	20.5397460461	18719
Coq.Lists.ListSet.set_add_iff	40
Coq.Lists.ListSet.set_add_nodup	40
Coq.Lists.ListSet.set_remove_1	40
Coq.Lists.ListSet.set_remove_2	40
Coq.Lists.ListSet.set_remove_3	40
Coq.Lists.ListSet.set_remove_iff	40
Coq.Lists.ListSet.set_remove_nodup	40
Coq.Lists.ListSet.set_union_intro1	40
Coq.Lists.ListSet.set_union_intro2	40	0.0.4.0.8.0.0	search with cache (only 1: simple induction y; only 1: simpl; only 1: tauto; only 1: simpl; only 1: intros a0 l H [Ha0a| Hal]; only 1: auto with datatypes; only 1: auto with datatypes).	6.59575891495	4113
Coq.Lists.ListSet.set_union_intro	40	0.0.2	search with cache (only 1: intros a b x [H1| H2]; only 1: auto with datatypes; only 1: auto with datatypes).	0.177629232407	60
Coq.Lists.ListSet.set_union_elim	40
Coq.Lists.ListSet.set_union_iff	40
Coq.Lists.ListSet.set_union_nodup	40
Coq.Lists.ListSet.set_union_emptyL	40	0.0.0.0.0.0.0.0.5	search with cache (only 1: simple induction x; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: generalize (set_add_elim _ _ _ H0); only 1: intros [H1| H1]; only 1: auto with datatypes; only 1: tauto).	2.86259698868	960
Coq.Lists.ListSet.set_union_emptyR	40	0.0.0.0	search with cache (only 1: intros a x H; only 1: case (set_union_elim _ _ _ H); only 1: auto || contradiction; only 1: auto || contradiction).	0.021075963974	4
Coq.Lists.ListSet.set_inter_intro	40
Coq.Lists.ListSet.set_inter_elim1	40
Coq.Lists.ListSet.set_inter_elim2	40
Coq.Lists.ListSet.set_inter_elim	40	1.2.0.1.0	search with cache (only 1: simple induction x; only 1: simpl; only 1: tauto; only 1: intros; only 1: eauto with datatypes).	0.250705003738	24
Coq.Lists.ListSet.set_inter_iff	40
Coq.Lists.ListSet.set_inter_nodup	40
Coq.Lists.ListSet.set_diff_intro	40
Coq.Lists.ListSet.set_diff_elim1	40
Coq.Lists.ListSet.set_diff_elim2	40
Coq.Lists.ListSet.set_diff_iff	40
Coq.Lists.ListSet.set_diff_nodup	40
Coq.Lists.ListSet.set_diff_trivial	40
Coq.Lists.ListDec.In_decidable	40	1.0.0.43	search with cache (only 1: induction l; only 1: firstorder; only 1: simpl; only 1: intuition).	20.1429810524	3058
Coq.Lists.ListDec.incl_decidable	40
Coq.Lists.ListDec.NoDup_decidable	40
Coq.Lists.ListDec.incl_dec	40
Coq.Lists.ListDec.NoDup_dec	40
Coq.Lists.ListDec.uniquify_map	40
Coq.Lists.ListDec.uniquify	40
Coq.Lists.Streams.unfold_Stream	40	0.1.18	search with cache (only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.0410408973694	211
Coq.Lists.Streams.tl_nth_tl	40	0.1.0.7.4.0.1.1	search with cache (only 1: intro x; only 1: case x; only 1: trivial; only 1: simpl; only 1: induction n; only 1: trivial; only 1: simpl; only 1: trivial).	2.56477999687	4358
Coq.Lists.Streams.Str_nth_tl_plus	40
Coq.Lists.Streams.Str_nth_plus	40
Coq.Lists.Streams.EqSt_reflex	40
Coq.Lists.Streams.sym_EqSt	40	11.20.9	search with cache (only 1: destruct 1; only 1: coinduction ltac:(EqSt_reflex); only 1: auto).	1.28623104095	6588
Coq.Lists.Streams.trans_EqSt	40
Coq.Lists.Streams.eqst_ntheq	40
Coq.Lists.Streams.ntheq_eqst	40
Coq.Lists.Streams.ForAll_Str_nth_tl	40
Coq.Lists.Streams.ForAll_coind	40	26.9.9	search with cache (only 1: coinduction ltac:(EqSt_reflex); only 1: auto; only 1: auto).	0.619368076324	3227
Coq.Lists.Streams.Str_nth_tl_map	40	0.0.0.0.0	search with cache (only 1: simple induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0133020877838	5
Coq.Lists.Streams.Str_nth_map	40	0.1.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros s; only 1: apply IHn).	0.0124788284302	5
Coq.Lists.Streams.ForAll_map	40	0.14.13.0.13.13.14.3	search with cache (only 1: intros s; only 1: split; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption; only 1: destruct 1; only 1: let rec coinduction proof := cofix proof; intros; constructor; [ clear proof | try (apply proof; clear proof) ] in coinduction ltac:(ForAll_coind); only 1: assumption).	13.7043581009	80538
Coq.Lists.Streams.Exists_map	40
Coq.Lists.Streams.Str_nth_tl_zipWith	40	1.0.0.5	search with cache (only 1: simple induction n; only 1: reflexivity; only 1: simpl; only 1: auto).	0.118436813354	119
Coq.Lists.Streams.Str_nth_zipWith	40	0.0.1.0.0.0	search with cache (only 1: induction n; only 1: reflexivity; only 1: intros [x xs] [y ys]; only 1: unfold Str_nth in *; only 1: simpl in *; only 1: apply IHn).	0.0193159580231	7
Coq.Lists.List.nil_cons	40	6.9	search with cache (only 1: intros a n Ha; only 1: discriminate).	0.127004861832	222
Coq.Lists.List.destruct_list	40
Coq.Lists.List.hd_error_tl_repr	40
Coq.Lists.List.hd_error_some_nil	40	0.0.3.0.0.0	search with cache (only 1: destruct l as [| x xs]; only 1: unfold hd_error, tl; only 1: intros a r; only 1: discriminate; only 1: intros; only 1: discriminate).	0.0193870067596	9
Coq.Lists.List.length_zero_iff_nil	40	0.1.4.0.1.4.2	search with cache (only 1: split; only 1: destruct l; only 1: reflexivity; only 1: now discriminate; only 1: destruct l; only 1: reflexivity; only 1: now discriminate).	0.350589990616	564
Coq.Lists.List.hd_error_nil	40	0.0	search with cache (only 1: unfold hd_error, tl; only 1: reflexivity).	0.00766801834106	2
Coq.Lists.List.hd_error_cons	40	1.1.0	search with cache (only 1: intros; only 1: simpl; only 1: auto).	0.00984287261963	5
Coq.Lists.List.in_eq	40	4.2.0	search with cache (only 1: intros; only 1: simpl; only 1: firstorder  discriminate).	0.0112860202789	9
Coq.Lists.List.in_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00756907463074	2
Coq.Lists.List.not_in_cons	40	5.3.3.15.5.0.1.0	search with cache (only 1: split; only 1: simpl; only 1: auto; only 1: intros; only 1: inversion 1; only 1: subst; only 1: firstorder  discriminate; only 1: firstorder  discriminate).	8.46740603447	15288
Coq.Lists.List.in_nil	40	2.1.0	search with cache (only 1: simpl; only 1: intros; only 1: firstorder  discriminate).	0.00774192810059	6
Coq.Lists.List.in_split	40
Coq.Lists.List.in_inv	40	0	search with cache (only 1: auto).	0.00611805915833	1
Coq.Lists.List.in_dec	40
Coq.Lists.List.app_cons_not_nil	40
Coq.Lists.List.app_nil_l	40	1.0.0	search with cache (only 1: simpl; only 1: intros; only 1: split).	0.00999283790588	4
Coq.Lists.List.app_nil_r	40	0.6.1.0.6	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: apply f_equal; only 1: auto).	0.291438102722	385
Coq.Lists.List.app_nil_end	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.0183870792389	7
Coq.Lists.List.app_assoc	40	0.0.10.0.2.0.12	search with cache (only 1: induction l; only 1: intros a r; only 1: split; only 1: simpl; only 1: intros; only 1: f_equal; only 1: auto).	19.0395901203	37189
Coq.Lists.List.app_assoc_reverse	40	0.0.0.0.0.0.0	search with cache (only 1: intros l m n; only 1: induction l; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: f_equal; only 1: auto).	0.0226681232452	7
Coq.Lists.List.app_comm_cons	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x as [| a l]; only 1: intros; only 1: simpl; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: f_equal).	0.0212769508362	7
Coq.Lists.List.app_eq_nil	40	0.0.3.0.4.11	search with cache (only 1: destruct l as [| x xs]; only 1: destruct 1; only 1: firstorder  discriminate; only 1: simpl; only 1: intros; only 1: discriminate H).	0.828270196915	1095
Coq.Lists.List.app_eq_unit	40
Coq.Lists.List.app_inj_tail	40
Coq.Lists.List.app_length	40	2.0.1.11	search with cache (only 1: induction l; only 1: reflexivity; only 1: simpl; only 1: auto).	1.57245612144	1428
Coq.Lists.List.in_app_or	40
Coq.Lists.List.in_or_app	40	10.0.0.7.0.0.0	search with cache (only 1: intros l m a; only 1: elim l; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros a0 y H H0; only 1: intuition).	18.9575669765	31209
Coq.Lists.List.in_app_iff	40
Coq.Lists.List.app_inv_head	40	0.17.0.3.0.6	search with cache (only 1: intros l m n; only 1: induction l; only 1: auto; only 1: simpl; only 1: inversion 1; only 1: auto).	6.78448200226	12906
Coq.Lists.List.app_inv_tail	40
Coq.Lists.List.nth_in_or_default	40
Coq.Lists.List.nth_S_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.0088050365448	2
Coq.Lists.List.nth_default_eq	40	1.3.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: intros n l d; only 1: revert n; only 1: induction l; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: intros [| n]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (IHl n); only 1: auto).	6.31750702858	5823
Coq.Lists.List.nth_In	40
Coq.Lists.List.In_nth	40
Coq.Lists.List.nth_overflow	40
Coq.Lists.List.nth_indep	40	0.1.0.2.1.0.1	search with cache (only 1: induction l; only 1: easy; only 1: intros [| n]; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.36450910568	969
Coq.Lists.List.app_nth1	40	0.0.0.0.6.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.33177709579	926
Coq.Lists.List.app_nth2	40	0.0.0.0.4.0.0.0.0	search with cache (only 1: induction l; only 1: inversion 1; only 1: auto with arith; only 1: auto with arith; only 1: inversion 1; only 1: simpl; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	1.40692615509	852
Coq.Lists.List.nth_split	40
Coq.Lists.List.nth_error_In	40
Coq.Lists.List.In_nth_error	40
Coq.Lists.List.nth_error_None	40
Coq.Lists.List.nth_error_Some	40
Coq.Lists.List.nth_error_split	40
Coq.Lists.List.nth_error_app1	40	1.0.0.0.2.1.0.0	search with cache (only 1: revert n; only 1: induction l; only 1: inversion 1; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: auto with arith).	1.30410313606	572
Coq.Lists.List.nth_error_app2	40	0.0.0.1.0.0.1.1.0.0.0	search with cache (only 1: revert l; only 1: induction n; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: inversion H; only 1: intros [| a l] H; only 1: auto; only 1: simpl in *; only 1: apply IHn; only 1: auto with arith).	0.954880952835	566
Coq.Lists.List.nth_error_nth	40
Coq.Lists.List.nth_error_nth'	40	1.0.0.0.0.2.2	search with cache (only 1: induction l; only 1: easy; only 1: destruct n; only 1: simpl; only 1: now auto with arith; only 1: simpl; only 1: now auto with arith).	2.76540517807	1035
Coq.Lists.List.remove_In	40
Coq.Lists.List.app_removelast_last	40
Coq.Lists.List.exists_last	40
Coq.Lists.List.removelast_app	40
Coq.Lists.List.count_occ_In	40
Coq.Lists.List.count_occ_not_In	40
Coq.Lists.List.count_occ_nil	40	4.1	search with cache (only 1: simpl; only 1: split).	0.0105240345001	7
Coq.Lists.List.count_occ_inv_nil	40
Coq.Lists.List.count_occ_cons_eq	40	0.2.0.2	search with cache (only 1: simpl; only 1: destruct eq_dec as [->| Hneq]; only 1: intuition; only 1: intuition).	0.0420861244202	20
Coq.Lists.List.count_occ_cons_neq	40	0.0.0	search with cache (only 1: intros H; only 1: simpl; only 1: now destruct (eq_dec x y)).	0.016921043396	3
Coq.Lists.List.rev_app_distr	40
Coq.Lists.List.rev_unit	40	0.0.0.1.1.0.15	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: auto).	14.513078928	14464
Coq.Lists.List.rev_involutive	40
Coq.Lists.List.in_rev	40
Coq.Lists.List.rev_length	40
Coq.Lists.List.rev_nth	40
Coq.Lists.List.rev_append_rev	40
Coq.Lists.List.rev_alt	40
Coq.Lists.List.rev_list_ind	40	4.5.0.5	search with cache (only 1: simpl; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.731328964233	1054
Coq.Lists.List.rev_ind	40
Coq.Lists.List.concat_nil	40	0.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00876402854919	2
Coq.Lists.List.concat_cons	40	0.0.1.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: trivial).	0.0172071456909	5
Coq.Lists.List.concat_app	40
Coq.Lists.List.list_eq_dec	40
Coq.Lists.List.map_cons	40	0.0	search with cache (only 1: simpl; only 1: auto).	0.00998520851135	2
Coq.Lists.List.in_map	40	1.1.5.3.1.2.7	search with cache (only 1: induction l; only 1: simpl; only 1: inversion 2; only 1: simpl; only 1: intuition; only 1: subst; only 1: auto).	24.8521749973	23422
Coq.Lists.List.in_map_iff	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.050311088562	3
Coq.Lists.List.map_length	40	0.1.0.0	search with cache (only 1: induction l; only 1: firstorder  (subst; auto); only 1: simpl; only 1: firstorder  (subst; auto)).	0.017676115036	5
Coq.Lists.List.map_nth	40	0.0.2.0.0.5.0	search with cache (only 1: induction l; only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto); only 1: destruct n; only 1: firstorder  (subst; auto); only 1: firstorder  (subst; auto)).	0.858669042587	626
Coq.Lists.List.map_nth_error	40
Coq.Lists.List.map_app	40	2.1.0.0.0.3	search with cache (only 1: induction l; only 1: reflexivity; only 1: intro y; only 1: simpl; only 1: rewrite (IHl y); only 1: trivial).	0.307113170624	179
Coq.Lists.List.map_rev	40
Coq.Lists.List.map_eq_nil	40	2.3.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto); only 1: discriminate).	0.19762802124	121
Coq.Lists.List.count_occ_map	40
Coq.Lists.List.in_flat_map	40
Coq.Lists.List.flat_map_concat_map	40	0.0.0.0.0.5.2	search with cache (only 1: intros l2; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.288367986679	188
Coq.Lists.List.concat_map	40	0.0.3.0.0.0.0.0	search with cache (only 1: intros A B f l; only 1: induction l as [| x l IH]; only 1: simpl; only 1: auto; only 1: simpl; only 1: rewrite map_app; only 1: rewrite IH; only 1: reflexivity).	0.179760217667	135
Coq.Lists.List.map_id	40	0.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: f_equal; only 1: auto).	0.141956090927	96
Coq.Lists.List.map_map	40	1.4.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHl; only 1: reflexivity).	0.516462087631	345
Coq.Lists.List.map_ext_in	40
Coq.Lists.List.ext_in_map	40
Coq.Lists.List.map_ext_in_iff	40
Coq.Lists.List.map_ext	40	0.2.2.1.3.1	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto).	0.596668958664	498
Coq.Lists.List.fold_left_app	40	1.0.1.0.0.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite IHl; only 1: auto).	0.0247280597687	8
Coq.Lists.List.fold_left_length	40
Coq.Lists.List.fold_right_app	40	0.2.0.0.0.0.2	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.3343501091	156
Coq.Lists.List.fold_left_rev_right	40
Coq.Lists.List.fold_symmetric	40
Coq.Lists.List.existsb_exists	40
Coq.Lists.List.existsb_nth	40
Coq.Lists.List.existsb_app	40	1.5.0.0.31.0	search with cache (only 1: firstorder; only 1: induction l1 as [| x l1 IH]; only 1: firstorder; only 1: simpl; only 1: rewrite IH; only 1: firstorder).	1.66003203392	3420
Coq.Lists.List.forallb_forall	40
Coq.Lists.List.forallb_app	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l1; only 1: intros l2; only 1: simpl; only 1: solve [ auto ]; only 1: intros l2; only 1: simpl; only 1: case (f a); only 1: simpl; only 1: solve [ auto ]; only 1: simpl; only 1: solve [ auto ]).	0.604038000107	241
Coq.Lists.List.filter_In	40
Coq.Lists.List.filter_app	40
Coq.Lists.List.concat_filter_map	40
Coq.Lists.List.find_some	40	0.0.1.0.0.0.1.0.7	search with cache (only 1: induction l; only 1: simpl; only 1: intuition congruence; only 1: simpl; only 1: case_eq (f a); only 1: intros; only 1: intuition congruence; only 1: intros; only 1: intuition congruence).	3.08785295486	1083
Coq.Lists.List.find_none	40
Coq.Lists.List.partition_cons1	40
Coq.Lists.List.partition_cons2	40	0.0	search with cache (only 1: simpl; only 1: now intros -> ->).	0.0128629207611	2
Coq.Lists.List.partition_length	40
Coq.Lists.List.partition_inv_nil	40	11.0.0.0.1.1.4.0.5	search with cache (only 1: split; only 1: induction l as [| a l' Hrec]; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (f a), (partition l') as (left, right); only 1: intros [=<- <-]; only 1: intros [=<- <-]; only 1: now intros ->).	7.30126094818	7672
Coq.Lists.List.elements_in_partition	40
Coq.Lists.List.filter_map	40
Coq.Lists.List.filter_ext_in	40	0.1.1.0.0.1.0.1.0	search with cache (only 1: induction l as [| a l IHl]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite H by intuition; only 1: rewrite IHl; only 1: auto; only 1: auto).	1.3822619915	622
Coq.Lists.List.ext_in_filter	40	6.6.0.1	search with cache (only 1: induction l as [| a l IHl]; only 1: intros [=] ? []; only 1: rewrite filter_map; only 1: apply ext_in_map).	6.22013497353	3767
Coq.Lists.List.filter_ext_in_iff	40	0.0.0.2.0.2.2	search with cache (only 1: split; only 1: rewrite filter_map; only 1: apply ext_in_map; only 1: intros; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.991952896118	557
Coq.Lists.List.filter_ext	40	0.0.0.0	search with cache (only 1: intros f g l H; only 1: rewrite filter_map; only 1: apply map_ext_in; only 1: auto).	0.0186550617218	4
Coq.Lists.List.in_split_l	40
Coq.Lists.List.in_split_r	40	0.0.0.1.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct p; only 1: destruct a; only 1: destruct (split l); only 1: simpl in *; only 1: destruct H; only 1: injection H; only 1: auto; only 1: right; only 1: apply (IHl (a0, b) H)).	16.4142501354	6035
Coq.Lists.List.split_nth	40
Coq.Lists.List.split_length_l	40	0.0.0.0.2.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: destruct a; only 1: simpl; only 1: destruct (split l); only 1: simpl in *; only 1: auto).	0.0653059482574	20
Coq.Lists.List.split_length_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: auto).	0.0353498458862	8
Coq.Lists.List.split_combine	40	2.10.0.2.0.0.2.0.0	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: destruct a; only 1: destruct (split l); only 1: simpl; only 1: rewrite IHl; only 1: auto).	37.8341679573	29004
Coq.Lists.List.combine_split	40
Coq.Lists.List.in_combine_l	40	4.0.0.0.0.0.2.0.0.0.0.0.0	search with cache (only 1: induction l, l'; only 1: simpl; only 1: intros; only 1: contradiction; only 1: simpl; only 1: trivial; only 1: firstorder  (subst; auto); only 1: simpl; only 1: intros; only 1: destruct H; only 1: injection H; only 1: auto; only 1: firstorder).	37.6614570618	20035
Coq.Lists.List.in_combine_r	40
Coq.Lists.List.combine_length	40	0.0.1.0.0.0.0.1	search with cache (only 1: induction l; only 1: simpl; only 1: reflexivity; only 1: destruct l'; only 1: simpl; only 1: trivial; only 1: simpl; only 1: auto).	0.074508190155	10
Coq.Lists.List.combine_nth	40
Coq.Lists.List.in_prod_aux	40	1.0.0.4	search with cache (only 1: induction l; only 1: simpl; only 1: auto; only 1: firstorder  (subst; auto)).	0.027242898941	18
Coq.Lists.List.in_prod	40
Coq.Lists.List.in_prod_iff	40
Coq.Lists.List.prod_length	40
Coq.Lists.List.lel_refl	40	56	search with cache (only 1: left).	1.36037898064	2832
Coq.Lists.List.lel_trans	40	7.0	search with cache (only 1: unfold lel; only 1: now intros -> ->).	0.014927148819	9
Coq.Lists.List.lel_cons_cons	40	0.3.2.0	search with cache (only 1: intros; only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0357420444489	15
Coq.Lists.List.lel_cons	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0122201442719	3
Coq.Lists.List.lel_tail	40	0.0.0	search with cache (only 1: unfold lel; only 1: simpl; only 1: auto with arith).	0.0122261047363	3
Coq.Lists.List.lel_nil	40
Coq.Lists.List.incl_refl	40	0	search with cache (only 1: solve [ auto ]).	0.00628018379211	1
Coq.Lists.List.incl_tl	40	2.3	search with cache (only 1: intros a' y H H0; only 1: intuition).	0.0532910823822	27
Coq.Lists.List.incl_tran	40	4.1.0.1	search with cache (only 1: induction l; only 1: intros l1 l2; only 1: auto; only 1: firstorder  (subst; auto)).	0.0624167919159	17
Coq.Lists.List.incl_appl	40	0	search with cache (only 1: auto with datatypes).	0.0106611251831	1
Coq.Lists.List.incl_appr	40	0	search with cache (only 1: auto with datatypes).	0.0121550559998	1
Coq.Lists.List.incl_cons	40	30	search with cache (only 1: firstorder  (subst; auto)).	5.27520704269	6206
Coq.Lists.List.incl_app	40	2.0.0.2	search with cache (only 1: induction l; only 1: auto with datatypes; only 1: intro y; only 1: firstorder).	0.230323076248	12
Coq.Lists.List.firstn_nil	40	1.0.0.57	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.439030885696	1918
Coq.Lists.List.firstn_cons	40	0	search with cache (only 1: now simpl).	0.0086190700531	1
Coq.Lists.List.firstn_all	40	0.0.0.1.3	search with cache (only 1: induction l as [| x l]; only 1: now simpl; only 1: simpl; only 1: rewrite IHl; only 1: auto).	0.0326619148254	17
Coq.Lists.List.firstn_all2	40
Coq.Lists.List.firstn_O	40	1	search with cache (only 1: now simpl).	0.00828790664673	2
Coq.Lists.List.firstn_le_length	40	5.0.5.0.2.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intro; only 1: auto with arith; only 1: destruct l as [| x xs]; only 1: auto with arith; only 1: simpl; only 1: auto with arith).	5.42604088783	5363
Coq.Lists.List.firstn_length_le	40
Coq.Lists.List.firstn_app	40
Coq.Lists.List.firstn_app_2	40
Coq.Lists.List.firstn_firstn	40
Coq.Lists.List.firstn_skipn_comm	40
Coq.Lists.List.skipn_firstn_comm	40
Coq.Lists.List.skipn_O	40	0.0.0.2	search with cache (only 1: induction l as [| a l IHl]; only 1: now simpl; only 1: simpl; only 1: auto).	0.0162658691406	6
Coq.Lists.List.skipn_nil	40	0.0.8	search with cache (only 1: induction n; only 1: now simpl; only 1: now simpl).	0.0361008644104	44
Coq.Lists.List.skipn_cons	40	0	search with cache (only 1: now simpl).	0.00732111930847	1
Coq.Lists.List.skipn_none	40	0.0.3.7	search with cache (only 1: intro; only 1: induction l as [| x l]; only 1: now simpl; only 1: trivial).	0.304968118668	234
Coq.Lists.List.skipn_all2	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: now induction l; only 1: destruct l as [| x xs]; only 1: simpl; only 1: now reflexivity; only 1: simpl; only 1: intro H; only 1: apply Peano.le_S_n in H; only 1: apply iHk, H).	0.0396308898926	9
Coq.Lists.List.firstn_skipn	40
Coq.Lists.List.firstn_length	40	3.0.0.0.1.0.1.7	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct l as [| x xs]; only 1: now simpl; only 1: simpl; only 1: auto).	37.6822280884	24726
Coq.Lists.List.skipn_length	40	1.0.0.0.0.1.2	search with cache (only 1: induction n as [| k iHk]; only 1: auto with arith; only 1: destruct l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.477803945541	241
Coq.Lists.List.skipn_all	40	0	search with cache (only 1: now induction l).	0.00814604759216	1
Coq.Lists.List.skipn_app	40	0.0.0.5.0.0.0.0.0	search with cache (only 1: induction n as [| k iHk]; only 1: intros l1 l2; only 1: now simpl; only 1: intros l1 l2; only 1: destruct l1 as [| x xs]; only 1: now rewrite 2!app_nil_l, <- minus_n_O; only 1: rewrite <- app_comm_cons; only 1: simpl; only 1: apply iHk).	1.63256621361	1028
Coq.Lists.List.firstn_skipn_rev	40
Coq.Lists.List.firstn_rev	40
Coq.Lists.List.skipn_rev	40
Coq.Lists.List.removelast_firstn	40
Coq.Lists.List.firstn_removelast	40
Coq.Lists.List.combine_nil	40	0.0.0.0.3	search with cache (only 1: induction l; only 1: simpl in *; only 1: auto; only 1: simpl in *; only 1: auto).	0.018707036972	8
Coq.Lists.List.combine_firstn_l	40	1.0.0.0.0.1.0.3	search with cache (only 1: induction l; only 1: now simpl; only 1: destruct l'; only 1: simpl; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto).	0.747586965561	341
Coq.Lists.List.combine_firstn_r	40	0.0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: induction l as [| x l IHl]; only 1: intros l'; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: reflexivity; only 1: intros l'; only 1: simpl; only 1: destruct l' as [| x' l']; only 1: reflexivity; only 1: simpl; only 1: specialize IHl with (l' := l'); only 1: rewrite <- IHl; only 1: reflexivity).	2.35091686249	1303
Coq.Lists.List.combine_firstn	40
Coq.Lists.List.Add_app	40
Coq.Lists.List.Add_split	40
Coq.Lists.List.Add_in	40	4.0.0.15.1	search with cache (only 1: simpl; only 1: induction 1; only 1: simpl; only 1: intuition congruence; only 1: firstorder  (subst; auto)).	38.2824499607	27468
Coq.Lists.List.Add_length	40	3.0.0.1.0	search with cache (only 1: induction 1; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0198609828949	9
Coq.Lists.List.Add_inv	40
Coq.Lists.List.incl_Add_inv	40
Coq.Lists.List.NoDup_Add	40
Coq.Lists.List.NoDup_remove	40
Coq.Lists.List.NoDup_remove_1	40
Coq.Lists.List.NoDup_remove_2	40	0.0	search with cache (only 1: apply NoDup_Add; only 1: apply Add_app).	0.0107710361481	2
Coq.Lists.List.NoDup_cons_iff	40	0.0.0.0	search with cache (only 1: split; only 1: inversion_clear 1; only 1: now split; only 1: now constructor).	0.0267698764801	4
Coq.Lists.List.nodup_fixed_point	40
Coq.Lists.List.nodup_In	40
Coq.Lists.List.NoDup_nodup	40
Coq.Lists.List.nodup_inv	40
Coq.Lists.List.NoDup_count_occ	40
Coq.Lists.List.NoDup_count_occ'	40
Coq.Lists.List.NoDup_nth_error	40
Coq.Lists.List.NoDup_nth	40
Coq.Lists.List.NoDup_incl_length	40
Coq.Lists.List.NoDup_length_incl	40
Coq.Lists.List.NoDup_map_inv	40
Coq.Lists.List.seq_length	40	2.1.0.16.28	search with cache (only 1: intros l; only 1: induction l as [| x xs Hrec]; only 1: now simpl; only 1: simpl; only 1: auto).	10.4249889851	21631
Coq.Lists.List.seq_nth	40
Coq.Lists.List.seq_shift	40	0.9.0.2.0.3	search with cache (only 1: induction len; only 1: auto; only 1: intros; only 1: simpl; only 1: f_equal; only 1: auto).	2.51825213432	2424
Coq.Lists.List.in_seq	40
Coq.Lists.List.seq_NoDup	40
Coq.Lists.List.seq_app	40
Coq.Lists.List.Exists_exists	40
Coq.Lists.List.Exists_nil	40	15.0	search with cache (only 1: firstorder; only 1: inversion_clear H).	0.321422100067	442
Coq.Lists.List.Exists_cons	40	1.0.0.6.2	search with cache (only 1: split; only 1: inversion_clear 1; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.375872135162	363
Coq.Lists.List.Exists_dec	40
Coq.Lists.List.Forall_forall	40	0.0.2.0.0.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto; only 1: induction l; only 1: firstorder; only 1: firstorder).	0.367456912994	216
Coq.Lists.List.Forall_inv	40	0.7	search with cache (only 1: inversion 1; only 1: auto).	0.0616788864136	53
Coq.Lists.List.Forall_rect	40
Coq.Lists.List.Forall_dec	40
Coq.Lists.List.Forall_inv_tail	40	0.0.0	search with cache (only 1: intros; only 1: inversion H; only 1: trivial).	0.0128111839294	3
Coq.Lists.List.Exists_impl	40	0.9.1.4.7.11.5.0	search with cache (only 1: intros f g H l; only 1: induction l as [| a l' Hrec]; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: constructor; only 1: auto; only 1: firstorder; only 1: now apply Exists_cons_tl).	9.52909183502	22620
Coq.Lists.List.Forall_Exists_neg	40
Coq.Lists.List.Exists_Forall_neg	40
Coq.Lists.List.neg_Forall_Exists_neg	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro Dec; only 1: intros NF; only 1: induction l as [| a l IH]; only 1: destruct NF; only 1: constructor; only 1: destruct (Dec a) as [Ha| Ha]; only 1: apply Exists_cons_tl, IH; only 1: contradict NF; only 1: now constructor; only 1: now apply Exists_cons_hd).	0.034245967865	10
Coq.Lists.List.Forall_Exists_dec	40	3.0.0.0.0.0.1.1.0.1.1.1	search with cache (only 1: intro Pdec; only 1: induction l as [| a l' Hrec]; only 1: left; only 1: constructor; only 1: destruct Hrec as [Hl'| Hl']; only 1: destruct (Pdec a) as [Ha| Ha]; only 1: left; only 1: now apply Forall_cons; only 1: right; only 1: now apply Exists_cons_hd; only 1: right; only 1: now apply Exists_cons_tl).	16.0385169983	8569
Coq.Lists.List.Forall_impl	40	0.0.0.3.0.3.0	search with cache (only 1: intros P Q H xs H0; only 1: apply Forall_forall with (l := xs); only 1: induction H0; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.453805208206	440
Coq.Lists.List.Forall2_refl	40	1	search with cache (only 1: auto).	0.00599193572998	2
Coq.Lists.List.Forall2_app_inv_l	40
Coq.Lists.List.Forall2_app_inv_r	40
Coq.Lists.List.Forall2_app	40	2.2.0.4.0.0.0.1.1.1	search with cache (only 1: induction l1; only 1: induction l1'; only 1: auto; only 1: intros; only 1: inversion H; only 1: intros; only 1: inversion H; only 1: subst; only 1: simpl; only 1: auto).	7.11886191368	7500
Coq.Lists.List.ForallOrdPairs_In	40
Coq.Lists.List.ForallPairs_ForallOrdPairs	40
Coq.Lists.List.ForallOrdPairs_ForallPairs	40
Coq.Lists.List.repeat_length	40	2.0.0.10	search with cache (only 1: induction n; only 1: now simpl; only 1: simpl; only 1: auto).	0.159836053848	110
Coq.Lists.List.repeat_spec	40	1.1.0.3.2.7	search with cache (only 1: induction n as [| k Hrec]; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intros; only 1: intuition).	0.428503036499	580
Coq.Lists.SetoidPermutation.Equivalence_instance_0	40
Coq.Lists.SetoidPermutation.PermutationA_cons	40	0.0.0.1	search with cache (only 1: intros x x' Hxx' l l' Hll'; only 1: apply permA_skip; only 1: auto; only 1: intuition).	0.0205919742584	5
Coq.Lists.SetoidPermutation.PermutationA_app_head	40	1.0.1.4	search with cache (only 1: induction l; only 1: intuition; only 1: simpl in *; only 1: intuition).	0.512966871262	99
Coq.Lists.SetoidPermutation.PermutationA_app	40
Coq.Lists.SetoidPermutation.PermutationA_app_tail	40	0.0.0.0.0.0.0.0.9	search with cache (only 1: induction 1; only 1: easy; only 1: now apply permA_skip; only 1: etransitivity; only 1: rewrite <- !app_comm_cons; only 1: now apply permA_swap; only 1: rewrite !app_comm_cons; only 1: now apply PermutationA_app_head; only 1: do 2 (etransitivity; try eassumption)).	3.60463213921	1630
Coq.Lists.SetoidPermutation.PermutationA_cons_append	40	7.4.0.1.1.5.14	search with cache (only 1: induction l; only 1: simpl; only 1: intuition; only 1: etransitivity; only 1: now apply permA_swap; only 1: rewrite <- !app_comm_cons; only 1: intuition).	15.8252770901	6768
Coq.Lists.SetoidPermutation.PermutationA_app_comm	40
Coq.Lists.SetoidPermutation.PermutationA_cons_app	40
Coq.Lists.SetoidPermutation.PermutationA_middle	40	0	search with cache (only 1: now rewrite app_comm_cons, (PermutationA_cons_append l₁ x), <- app_assoc).	0.0171740055084	1
Coq.Lists.SetoidPermutation.PermutationA_equivlistA	40
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_PermutationA	40
Coq.Lists.SetoidPermutation.Permutation_eqlistA_commute	40
Coq.Lists.SetoidPermutation.PermutationA_decompose	40
Coq.Lists.SetoidPermutation.Permutation_PermutationA	40	19.0.1.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: intuition; only 1: eauto; only 1: eauto).	13.2607309818	14547
Coq.Lists.SetoidPermutation.eqlistA_PermutationA	40	0.0.0	search with cache (only 1: induction 1; only 1: intuition; only 1: now constructor).	0.0172309875488	3
Coq.Lists.SetoidPermutation.NoDupA_equivlistA_decompose	40
Coq.Lists.SetoidPermutation.PermutationA_preserves_NoDupA	40
Coq.Lists.StreamMemo.memo_get_correct	40
Coq.Lists.StreamMemo.imemo_get_correct	40
Coq.Lists.StreamMemo.dmemo_get_correct	40
Coq.Lists.StreamMemo.dimemo_get_correct	40
Coq.Lists.SetoidList.InA_altdef	40
Coq.Lists.SetoidList.InA_cons	40	0.0.1.0.0.5.1	search with cache (only 1: split; only 1: inversion 1; only 1: auto; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.640295028687	426
Coq.Lists.SetoidList.InA_nil	40	0.5.0	search with cache (only 1: split; only 1: inversion 1; only 1: induction 1).	0.0186200141907	16
Coq.Lists.SetoidList.InA_alt	40	0.1.0.0.2.0.0.0.0	search with cache (only 1: split; only 1: induction 1; only 1: firstorder; only 1: firstorder; only 1: induction l; only 1: firstorder; only 1: firstorder; only 1: subst; only 1: auto).	0.88814997673	409
Coq.Lists.SetoidList.NoDupA_altdef	40
Coq.Lists.SetoidList.incl_nil	40	4	search with cache (only 1: now simpl).	0.0183708667755	5
Coq.Lists.SetoidList.eqlistA_altdef	40	0.2.1.1.1.1.2	search with cache (only 1: split; only 1: induction 1; only 1: apply Forall2_nil; only 1: auto; only 1: induction 1; only 1: auto; only 1: auto).	0.527223110199	478
Coq.Lists.SetoidList.equivlist_equiv	40
Coq.Lists.SetoidList.eqlistA_equiv	40
Coq.Lists.SetoidList.eqlistA_equivlistA	40
Coq.Lists.SetoidList.InA_compat	40
Coq.Lists.SetoidList.InA_eqA	40	0.0.4	search with cache (only 1: intros x x' H; only 1: rewrite 2!InA_alt; only 1: firstorder).	0.381797075272	18
Coq.Lists.SetoidList.In_InA	40	4.0.2	search with cache (only 1: intros; only 1: rewrite InA_alt; only 1: firstorder).	0.0181198120117	9
Coq.Lists.SetoidList.InA_split	40
Coq.Lists.SetoidList.InA_app	40
Coq.Lists.SetoidList.InA_app_iff	40
Coq.Lists.SetoidList.InA_rev	40
Coq.Lists.SetoidList.InA_singleton	40	0.0.5	search with cache (only 1: intuition; only 1: invlist InA; only 1: auto).	0.889601945877	14
Coq.Lists.SetoidList.InA_double_head	40	0.0	search with cache (only 1: rewrite 2!InA_cons; only 1: intuition).	0.03182721138	2
Coq.Lists.SetoidList.InA_permute_heads	40	0.0	search with cache (only 1: rewrite !InA_cons; only 1: tauto).	0.0419449806213	2
Coq.Lists.SetoidList.InA_app_idem	40
Coq.Lists.SetoidList.NoDupA_app	40
Coq.Lists.SetoidList.NoDupA_rev	40
Coq.Lists.SetoidList.NoDupA_split	40
Coq.Lists.SetoidList.NoDupA_swap	40
Coq.Lists.SetoidList.NoDupA_singleton	40	0.0.1.0	search with cache (only 1: constructor; only 1: intro; only 1: inv; only 1: auto).	0.0178129673004	5
Coq.Lists.SetoidList.equivlistA_cons_proper	40
Coq.Lists.SetoidList.equivlistA_app_proper	40
Coq.Lists.SetoidList.equivlistA_cons_nil	40
Coq.Lists.SetoidList.equivlistA_nil_eq	40
Coq.Lists.SetoidList.equivlistA_double_head	40	0.0.1	search with cache (only 1: intros H; only 1: rewrite !InA_cons; only 1: tauto).	0.0905749797821	4
Coq.Lists.SetoidList.equivlistA_permute_heads	40	0.0.1	search with cache (only 1: intro; only 1: rewrite !InA_cons; only 1: tauto).	0.0996911525726	4
Coq.Lists.SetoidList.equivlistA_app_idem	40	0.0.2	search with cache (only 1: intros H; only 1: rewrite InA_app_iff; only 1: tauto).	0.242197990417	87
Coq.Lists.SetoidList.equivlistA_NoDupA_split	40
Coq.Lists.SetoidList.fold_right_eqlistA	40
Coq.Lists.SetoidList.ForallOrdPairs_inclA	40
Coq.Lists.SetoidList.fold_right_commutes_restr	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr	40
Coq.Lists.SetoidList.fold_right_add_restr	40
Coq.Lists.SetoidList.fold_right_commutes	40	4.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction s1; only 1: simpl; only 1: auto with relations; only 1: simpl; only 1: intros; only 1: transitivity (f a (f x (fold_right f i (s1 ++ s2)))); only 1: apply Comp; only 1: auto; only 1: apply IHs1; only 1: auto).	1.11540603638	610
Coq.Lists.SetoidList.fold_right_equivlistA	40
Coq.Lists.SetoidList.fold_right_add	40
Coq.Lists.SetoidList.fold_right_eqlistA2	40
Coq.Lists.SetoidList.fold_right_commutes_restr2	40
Coq.Lists.SetoidList.fold_right_equivlistA_restr2	40
Coq.Lists.SetoidList.fold_right_add_restr2	40
Coq.Lists.SetoidList.fold_right_commutes2	40
Coq.Lists.SetoidList.fold_right_equivlistA2	40
Coq.Lists.SetoidList.fold_right_add2	40
Coq.Lists.SetoidList.InA_dec	40
Coq.Lists.SetoidList.removeA_filter	40	3.1.0.2.13.2.0	search with cache (only 1: induction l; only 1: auto; only 1: simpl in *; only 1: destruct IHl; only 1: destruct (eqA_dec x a); only 1: auto; only 1: auto).	18.8980569839	13144
Coq.Lists.SetoidList.removeA_InA	40
Coq.Lists.SetoidList.removeA_NoDupA	40
Coq.Lists.SetoidList.removeA_equivlistA	40
Coq.Lists.SetoidList.InfA_ltA	40
Coq.Lists.SetoidList.InfA_compat	40
Coq.Lists.SetoidList.InfA_eqA	40
Coq.Lists.SetoidList.SortA_InfA_InA	40
Coq.Lists.SetoidList.In_InfA	40	7.1.0	search with cache (only 1: simple induction l; only 1: constructor; only 1: intuition).	1.15793704987	261
Coq.Lists.SetoidList.InA_InfA	40	0.0.1.0.1.0	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto).	0.034569978714	8
Coq.Lists.SetoidList.InfA_alt	40
Coq.Lists.SetoidList.InfA_app	40	1.1.0.0.1.21	search with cache (only 1: induction 1; only 1: intros; only 1: eauto; only 1: intuition; only 1: constructor; only 1: auto).	5.35663318634	3767
Coq.Lists.SetoidList.SortA_app	40
Coq.Lists.SetoidList.SortA_NoDupA	40
Coq.Lists.SetoidList.eqlistA_length	40	1.10.0.26	search with cache (only 1: induction 1; only 1: constructor; only 1: simpl; only 1: intuition).	26.1129579544	30702
Coq.Lists.SetoidList.app_eqlistA_compat	40	0.4.1.0.1.0.2.7	search with cache (only 1: induction 1; only 1: induction 1; only 1: intuition; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro; only 1: auto).	8.20590305328	1249
Coq.Lists.SetoidList.eqlistA_app	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: simpl; only 1: intuition; only 1: simpl; only 1: auto).	0.0315890312195	5
Coq.Lists.SetoidList.eqlistA_rev_app	40
Coq.Lists.SetoidList.rev_eqlistA_compat	40
Coq.Lists.SetoidList.eqlistA_rev	40	12.0	search with cache (only 1: intros; only 1: now rewrite H).	0.575263023376	248
Coq.Lists.SetoidList.SortA_equivlistA_eqlistA	40
Coq.Lists.SetoidList.filter_sort	40
Coq.Lists.SetoidList.filter_InA	40
Coq.Lists.SetoidList.filter_split	40
Coq.Lists.SetoidList.findA_NoDupA	40
Coq.NArith.BinNat.N.eq_dec	40	0.46.27	search with cache (only 1: intros H; only 1: fix sqrtrem_spec 1; only 1: trivial).	28.2581181526	123393
Coq.NArith.BinNat.N.discr	40	9.4.8.4	search with cache (only 1: destruct n; only 1: auto; only 1: revert p; only 1: eauto with *).	0.634441137314	1598
Coq.NArith.BinNat.N.peano_rect_base	40	7	search with cache (only 1: auto).	0.00651407241821	8
Coq.NArith.BinNat.N.peano_rect_succ	40
Coq.NArith.BinNat.N.peano_rec_base	40	0	search with cache (only 1: reflexivity).	0.00544595718384	1
Coq.NArith.BinNat.N.peano_rec_succ	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.peano_rect_succ).	0.0159702301025	5
Coq.NArith.BinNat.N.bi_induction	40	0.43.28.0.1.0	search with cache (only 1: intros; only 1: destruct n; only 1: trivial; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	25.0671410561	130985
Coq.NArith.BinNat.N.recursion_wd	40
Coq.NArith.BinNat.N.recursion_0	40	0	search with cache (only 1: trivial).	0.00542092323303	1
Coq.NArith.BinNat.N.recursion_succ	40
Coq.NArith.BinNat.N.one_succ	40	0	search with cache (only 1: auto).	0.00548791885376	1
Coq.NArith.BinNat.N.two_succ	40	0	search with cache (only 1: reflexivity).	0.00455689430237	1
Coq.NArith.BinNat.N.pred_0	40	0	search with cache (only 1: reflexivity).	0.00474500656128	1
Coq.NArith.BinNat.N.pos_pred_spec	40	1	search with cache (only 1: reflexivity).	0.00520801544189	2
Coq.NArith.BinNat.N.succ_pos_spec	40	0.0.1	search with cache (only 1: destruct n; only 1: reflexivity; only 1: reflexivity).	0.00943279266357	4
Coq.NArith.BinNat.N.pos_pred_succ	40	0.7.14.1.4	search with cache (only 1: destruct n; only 1: reflexivity; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: now destruct p).	0.894825935364	1953
Coq.NArith.BinNat.N.succ_pos_pred	40	4.14.17	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: auto).	1.93546390533	3747
Coq.NArith.BinNat.N.pred_succ	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: apply Pos.pred_N_succ).	0.00916719436646	3
Coq.NArith.BinNat.N.pred_sub	40	0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: now destruct p).	0.0101749897003	3
Coq.NArith.BinNat.N.succ_0_discr	40	0	search with cache (only 1: now destruct n).	0.0124521255493	1
Coq.NArith.BinNat.N.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00620913505554	1
Coq.NArith.BinNat.N.add_succ_l	40
Coq.NArith.BinNat.N.sub_0_r	40	0	search with cache (only 1: now destruct n as [| [p| p| ]]).	0.00670695304871	1
Coq.NArith.BinNat.N.sub_succ_r	40
Coq.NArith.BinNat.N.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00504398345947	1
Coq.NArith.BinNat.N.mul_succ_l	40
Coq.NArith.BinNat.N.eqb_eq	40
Coq.NArith.BinNat.N.ltb_lt	40
Coq.NArith.BinNat.N.leb_le	40
Coq.NArith.BinNat.N.compare_eq_iff	40
Coq.NArith.BinNat.N.compare_lt_iff	40	0.0.0.0.0	search with cache (only 1: unfold ltb, lt; only 1: destruct compare; only 1: easy'; only 1: easy'; only 1: easy').	0.0131459236145	5
Coq.NArith.BinNat.N.compare_le_iff	40	1	search with cache (only 1: easy').	0.132480144501	77
Coq.NArith.BinNat.N.compare_antisym	40
Coq.NArith.BinNat.N.min_l	40
Coq.NArith.BinNat.N.min_r	40
Coq.NArith.BinNat.N.max_l	40
Coq.NArith.BinNat.N.max_r	40	0.1.0.0.0.0	search with cache (only 1: unfold max, le; only 1: rewrite compare_antisym; only 1: case compare_spec; only 1: trivial; only 1: now destruct 2; only 1: trivial).	0.0174829959869	7
Coq.NArith.BinNat.N.lt_succ_r	40
Coq.NArith.BinNat.N.double_spec	40	17	search with cache (only 1: reflexivity).	0.0335609912872	126
Coq.NArith.BinNat.N.succ_double_spec	40
Coq.NArith.BinNat.N.double_add	40
Coq.NArith.BinNat.N.succ_double_add	40	0	search with cache (only 1: now destruct n, m).	0.00750708580017	1
Coq.NArith.BinNat.N.double_mul	40	2	search with cache (only 1: now destruct n, m).	0.00759196281433	3
Coq.NArith.BinNat.N.succ_double_mul	40	1.23	search with cache (only 1: rewrite add_comm; only 1: now destruct n, m).	1.46256303787	662
Coq.NArith.BinNat.N.div2_double	40	0.0.0.0.6	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0234680175781	27
Coq.NArith.BinNat.N.div2_succ_double	40	0	search with cache (only 1: now destruct n).	0.00583100318909	1
Coq.NArith.BinNat.N.double_inj	40
Coq.NArith.BinNat.N.succ_double_inj	40
Coq.NArith.BinNat.N.succ_double_lt	40
Coq.NArith.BinNat.N.double_lt_mono	40	2	search with cache (only 1: now destruct n, m).	0.336565971375	246
Coq.NArith.BinNat.N.double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0184791088104	9
Coq.NArith.BinNat.N.succ_double_lt_mono	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0217440128326	11
Coq.NArith.BinNat.N.succ_double_le_mono	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| n], m as [| m]; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy).	0.0183539390564	9
Coq.NArith.BinNat.N.compare_0_r	40	26	search with cache (only 1: now destruct n).	0.225833892822	489
Coq.NArith.BinNat.N.pow_0_r	40	0	search with cache (only 1: reflexivity).	0.0052661895752	1
Coq.NArith.BinNat.N.pow_succ_r	40
Coq.NArith.BinNat.N.pow_neg_r	40	0.2.0.3.1.2.0.0.1	search with cache (only 1: destruct n, p; only 1: intro; only 1: simpl; only 1: easy; only 1: reflexivity; only 1: easy; only 1: simpl; only 1: intro H; only 1: easy).	2.71176195145	3418
Coq.NArith.BinNat.N.square_spec	40
Coq.NArith.BinNat.N.size_log2	40
Coq.NArith.BinNat.N.size_gt	40
Coq.NArith.BinNat.N.size_le	40
Coq.NArith.BinNat.N.log2_spec	40
Coq.NArith.BinNat.N.log2_nonpos	40	0.0.1.0.2.0.0	search with cache (only 1: destruct n as [| [n| n| ]]; only 1: trivial; only 1: intros H; only 1: easy; only 1: intros H; only 1: easy; only 1: trivial).	0.0187640190125	10
Coq.NArith.BinNat.N.even_spec	40
Coq.NArith.BinNat.N.odd_spec	40
Coq.NArith.BinNat.N.pos_div_eucl_spec	40
Coq.NArith.BinNat.N.div_eucl_spec	40
Coq.NArith.BinNat.N.div_mod'	40
Coq.NArith.BinNat.N.div_mod	40	0.0.0	search with cache (only 1: generalize (div_eucl_spec a b); only 1: unfold div, modulo; only 1: now destruct div_eucl).	0.0111200809479	3
Coq.NArith.BinNat.N.pos_div_eucl_remainder	40
Coq.NArith.BinNat.N.mod_lt	40
Coq.NArith.BinNat.N.mod_bound_pos	40
Coq.NArith.BinNat.N.sqrtrem_sqrt	40
Coq.NArith.BinNat.N.sqrtrem_spec	40
Coq.NArith.BinNat.N.sqrt_spec	40
Coq.NArith.BinNat.N.sqrt_neg	40	0.0.0.0.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: unfold sqrtrem, sqrt, Pos.sqrt; only 1: destruct (Pos.sqrtrem p) as (s, r); only 1: now destruct r).	0.0223340988159	5
Coq.NArith.BinNat.N.ggcd_gcd	40
Coq.NArith.BinNat.N.ggcd_correct_divisors	40
Coq.NArith.BinNat.N.gcd_divide_l	40
Coq.NArith.BinNat.N.gcd_divide_r	40
Coq.NArith.BinNat.N.gcd_greatest	40
Coq.NArith.BinNat.N.gcd_nonneg	40	0	search with cache (only 1: apply le_0_l).	0.00562787055969	1
Coq.NArith.BinNat.N.testbit_even_0	40	0.0.37	search with cache (only 1: destruct a as [| a]; only 1: reflexivity; only 1: reflexivity).	0.464606046677	1927
Coq.NArith.BinNat.N.testbit_odd_0	40	0	search with cache (only 1: now destruct a).	0.00662589073181	1
Coq.NArith.BinNat.N.testbit_succ_r_div2	40
Coq.NArith.BinNat.N.testbit_odd_succ	40
Coq.NArith.BinNat.N.testbit_even_succ	40	0.0.0.0	search with cache (only 1: intros H; only 1: rewrite testbit_succ_r_div2 by trivial; only 1: f_equal; only 1: now destruct a).	0.0149409770966	4
Coq.NArith.BinNat.N.testbit_neg_r	40	12	search with cache (only 1: now destruct n).	0.598487138748	366
Coq.NArith.BinNat.N.shiftr_succ_r	40
Coq.NArith.BinNat.N.shiftl_succ_r	40
Coq.NArith.BinNat.N.shiftr_spec	40
Coq.NArith.BinNat.N.shiftl_spec_high	40
Coq.NArith.BinNat.N.shiftl_spec_low	40
Coq.NArith.BinNat.N.div2_spec	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00714898109436	2
Coq.NArith.BinNat.N.pos_lxor_spec	40
Coq.NArith.BinNat.N.lxor_spec	40
Coq.NArith.BinNat.N.pos_lor_spec	40
Coq.NArith.BinNat.N.lor_spec	40
Coq.NArith.BinNat.N.pos_land_spec	40
Coq.NArith.BinNat.N.land_spec	40
Coq.NArith.BinNat.N.pos_ldiff_spec	40
Coq.NArith.BinNat.N.ldiff_spec	40
Coq.NArith.BinNat.N.gt_lt_iff	40
Coq.NArith.BinNat.N.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0475149154663	2
Coq.NArith.BinNat.N.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.0057098865509	1
Coq.NArith.BinNat.N.ge_le_iff	40	8.8.7	search with cache (only 1: split; only 1: apply le_ngt; only 1: apply le_ngt).	22.9299898148	3542
Coq.NArith.BinNat.N.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0113258361816	2
Coq.NArith.BinNat.N.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0056209564209	1
Coq.NArith.BinNat.N.pos_pred_shiftl_low	40
Coq.NArith.BinNat.N.pos_pred_shiftl_high	40
Coq.NArith.BinNat.N.pred_div2_up	40
Coq.NArith.Ndec.Peqb_complete	40
Coq.NArith.Ndec.Peqb_Pcompare	40
Coq.NArith.Ndec.Pcompare_Peqb	40	0	search with cache (only 1: now rewrite Pos.compare_eq_iff, <- Pos.eqb_eq).	0.0139899253845	1
Coq.NArith.Ndec.Neqb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Neqb	40	0	search with cache (only 1: now rewrite N.compare_eq_iff, <- N.eqb_eq).	0.0138211250305	1
Coq.NArith.Ndec.Neqb_complete	40	1	search with cache (only 1: now rewrite N.eqb_eq, <- N.compare_eq_iff).	0.0123438835144	2
Coq.NArith.Ndec.Nxor_eq_true	40
Coq.NArith.Ndec.Nxor_eq_false	40
Coq.NArith.Ndec.Nodd_not_double	40
Coq.NArith.Ndec.Nnot_div2_not_double	40
Coq.NArith.Ndec.Neven_not_double_plus_one	40	2.2.0.12.0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: intros <-; only 1: absurd (false = true); only 1: auto with bool; only 1: inversion H; only 1: apply Ndouble_plus_one_bit0).	3.41979598999	6105
Coq.NArith.Ndec.Nnot_div2_not_double_plus_one	40
Coq.NArith.Ndec.Nbit0_neq	40	0.3.0.13.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: contradict H; only 1: rewrite H, H0; only 1: reflexivity).	4.71190905571	3310
Coq.NArith.Ndec.Ndiv2_eq	40	0.0.0.0	search with cache (only 1: intros H; only 1: eqb2eq; only 1: subst; only 1: reflexivity).	0.0148360729218	4
Coq.NArith.Ndec.Ndiv2_neq	40	0.0.0	search with cache (only 1: intros; only 1: eqb2eq; only 1: now intros <-).	0.0177388191223	3
Coq.NArith.Ndec.Ndiv2_bit_eq	40
Coq.NArith.Ndec.Ndiv2_bit_neq	40	0.3.0.2	search with cache (only 1: intros H H'; only 1: eqb2eq; only 1: contradict H; only 1: now rewrite (N.div2_odd a), (N.div2_odd a'), H, H').	0.237171888351	79
Coq.NArith.Ndec.Nneq_elim	40
Coq.NArith.Ndec.Ndouble_or_double_plus_un	40
Coq.NArith.Ndec.Nleb_alt	40
Coq.NArith.Ndec.Nleb_Nle	40
Coq.NArith.Ndec.Nleb_refl	40	0	search with cache (only 1: now rewrite Nleb_alt, N.leb_le).	0.00790596008301	1
Coq.NArith.Ndec.Nleb_antisym	40
Coq.NArith.Ndec.Nleb_trans	40	3.5.3.5.0.11.5	search with cache (only 1: rewrite Nleb_Nle; only 1: induction a using N.binary_rec; only 1: now rewrite Nleb_alt, N.leb_le; only 1: rewrite !Nleb_Nle; only 1: now intros <-; only 1: rewrite !Nleb_Nle; only 1: now intros <-).	27.2261431217	42891
Coq.NArith.Ndec.Nleb_ltb_trans	40
Coq.NArith.Ndec.Nltb_leb_trans	40
Coq.NArith.Ndec.Nltb_trans	40
Coq.NArith.Ndec.Nltb_leb_weak	40
Coq.NArith.Ndec.Nleb_double_mono	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono	40
Coq.NArith.Ndec.Nleb_double_mono_conv	40
Coq.NArith.Ndec.Nleb_double_plus_one_mono_conv	40	0.0.0.0.4.0	search with cache (only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: intro; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	0.14820599556	64
Coq.NArith.Ndec.Nltb_double_mono	40	0.0.0.13.0.2.5.1	search with cache (only 1: intros; only 1: eqb2eq; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_double; only 1: contradict H; only 1: apply leb_correct; only 1: apply (mult_S_le_reg_l 1); only 1: now apply leb_complete).	21.2540061474	24420
Coq.NArith.Ndec.Nltb_double_plus_one_mono	40	0.6.1.4.0.0.0.0.1	search with cache (only 1: intros; only 1: elim (sumbool_of_bool (Nleb (N.double a) (N.double b))); only 1: intro H0; only 1: rewrite (Nleb_double_mono_conv _ _ H0) in H; only 1: discriminate H; only 1: unfold Nleb; only 1: rewrite !N2Nat.inj_succ_double; only 1: rewrite !N2Nat.inj_double; only 1: trivial).	23.684679985	19813
Coq.NArith.Ndec.Nltb_double_mono_conv	40
Coq.NArith.Ndec.Nltb_double_plus_one_mono_conv	40
Coq.NArith.Ndec.Nltb_Ncompare	40
Coq.NArith.Ndec.Ncompare_Gt_Nltb	40	0	search with cache (only 1: now rewrite N.compare_nle_iff, <- Nleb_Nle, not_true_iff_false).	0.0935530662537	1
Coq.NArith.Ndec.Ncompare_Lt_Nltb	40
Coq.NArith.Ndec.Nmin_le_1	40
Coq.NArith.Ndec.Nmin_le_2	40
Coq.NArith.Ndec.Nmin_le_3	40
Coq.NArith.Ndec.Nmin_le_4	40
Coq.NArith.Ndec.Nmin_le_5	40
Coq.NArith.Ndec.Nmin_lt_3	40
Coq.NArith.Ndec.Nmin_lt_4	40	0.0.1	search with cache (only 1: rewrite <- !not_true_iff_false, !Nleb_Nle; only 1: rewrite N.min_le_iff; only 1: auto).	0.0283868312836	4
Coq.NArith.Ndiv_def.Pdiv_eucl_remainder	40
Coq.NArith.Ndist.Nplength_infty	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: induction a as [| p]; only 1: intro H; only 1: reflexivity; only 1: intro H; only 1: exfalso; only 1: induction p as [| p IHp| ]; only 1: discriminate || simpl; only 1: discriminate || simpl; only 1: discriminate || simpl).	0.0224769115448	10
Coq.NArith.Ndist.Nplength_zeros	40
Coq.NArith.Ndist.Nplength_one	40
Coq.NArith.Ndist.Nplength_first_one	40
Coq.NArith.Ndist.ni_min_idemp	40
Coq.NArith.Ndist.ni_min_comm	40
Coq.NArith.Ndist.ni_min_assoc	40
Coq.NArith.Ndist.ni_min_O_l	40	0.0.0.0.1.0.2	search with cache (only 1: simple induction d; only 1: unfold ni_min; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0259428024292	37
Coq.NArith.Ndist.ni_min_O_r	40	0.0.0.1.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: unfold ni_min; only 1: simple induction n; only 1: trivial; only 1: trivial).	0.0150759220123	7
Coq.NArith.Ndist.ni_min_inf_l	40	0.0.0	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.00981116294861	3
Coq.NArith.Ndist.ni_min_inf_r	40	0.0.1	search with cache (only 1: simple induction d; only 1: trivial; only 1: trivial).	0.00949907302856	4
Coq.NArith.Ndist.ni_le_refl	40
Coq.NArith.Ndist.ni_le_antisym	40	0.5.9.1.2.0.1	search with cache (only 1: simple induction d'; only 1: trivial; only 1: intros; only 1: generalize H0; only 1: inversion H; only 1: rewrite ni_min_comm; only 1: trivial).	3.78096699715	8746
Coq.NArith.Ndist.ni_le_trans	40
Coq.NArith.Ndist.ni_le_min_1	40
Coq.NArith.Ndist.ni_le_min_2	40	0.1.0.0.0	search with cache (only 1: unfold ni_le; only 1: intros; only 1: rewrite ni_min_assoc; only 1: rewrite ni_min_idemp; only 1: reflexivity).	0.0130801200867	6
Coq.NArith.Ndist.ni_min_case	40
Coq.NArith.Ndist.ni_le_total	40
Coq.NArith.Ndist.ni_le_min_induc	40
Coq.NArith.Ndist.le_ni_le	40
Coq.NArith.Ndist.ni_le_le	40
Coq.NArith.Ndist.Nplength_lb	40
Coq.NArith.Ndist.Nplength_ub	40
Coq.NArith.Ndist.Npdist_eq_1	40
Coq.NArith.Ndist.Npdist_eq_2	40
Coq.NArith.Ndist.Npdist_comm	40
Coq.NArith.Ndist.Nplength_ultra_1	40
Coq.NArith.Ndist.Nplength_ultra	40
Coq.NArith.Ndist.Npdist_ultra	40
Coq.NArith.Ndigits.Ptestbit_Pbit	40
Coq.NArith.Ndigits.Ntestbit_Nbit	40
Coq.NArith.Ndigits.Pbit_Ptestbit	40
Coq.NArith.Ndigits.Nbit_Ntestbit	40	0.4.4.0.2	search with cache (only 1: destruct a; only 1: trivial; only 1: intros; only 1: simpl; only 1: now rewrite <- Ptestbit_Pbit, N2Nat.id).	0.249986886978	373
Coq.NArith.Ndigits.Nshiftr_nat_S	40	4.3	search with cache (only 1: intros; only 1: trivial).	0.0519139766693	27
Coq.NArith.Ndigits.Nshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00667905807495	1
Coq.NArith.Ndigits.Nshiftr_nat_equiv	40
Coq.NArith.Ndigits.Nshiftr_equiv_nat	40
Coq.NArith.Ndigits.Nshiftl_nat_equiv	40
Coq.NArith.Ndigits.Nshiftl_equiv_nat	40
Coq.NArith.Ndigits.Nshiftr_nat_spec	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_high	40
Coq.NArith.Ndigits.Nshiftl_nat_spec_low	40
Coq.NArith.Ndigits.Pshiftl_nat_0	40	0.2	search with cache (only 1: simpl; only 1: reflexivity).	0.00790405273438	4
Coq.NArith.Ndigits.Pshiftl_nat_S	40	0	search with cache (only 1: reflexivity).	0.00603795051575	1
Coq.NArith.Ndigits.Pshiftl_nat_N	40
Coq.NArith.Ndigits.Pshiftl_nat_plus	40
Coq.NArith.Ndigits.Pxor_semantics	40
Coq.NArith.Ndigits.Nxor_semantics	40
Coq.NArith.Ndigits.Por_semantics	40
Coq.NArith.Ndigits.Nor_semantics	40
Coq.NArith.Ndigits.Pand_semantics	40
Coq.NArith.Ndigits.Nand_semantics	40
Coq.NArith.Ndigits.Pdiff_semantics	40
Coq.NArith.Ndigits.Ndiff_semantics	40
Coq.NArith.Ndigits.Pbit_faithful_0	40
Coq.NArith.Ndigits.Pbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful	40
Coq.NArith.Ndigits.Nbit_faithful_iff	40
Coq.NArith.Ndigits.Nbit0_correct	40	0.0.0.0.0.0.11.4.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: induction p as [p IH| p IH| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.879791021347	2145
Coq.NArith.Ndigits.Ndouble_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.0108571052551	3
Coq.NArith.Ndigits.Ndouble_plus_one_bit0	40	0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: trivial).	0.010204076767	3
Coq.NArith.Ndigits.Ndiv2_double	40	3.0.3.21.0.5	search with cache (only 1: destruct n; only 1: now try rewrite H; only 1: destruct p; only 1: now try rewrite H; only 1: auto; only 1: now try rewrite H).	6.21542406082	14995
Coq.NArith.Ndigits.Ndiv2_double_plus_one	40	3.0.2.0.2.0.0.2.0	search with cache (only 1: destruct n; only 1: now try rewrite H; only 1: destruct p; only 1: intro H; only 1: reflexivity; only 1: intros; only 1: discriminate H; only 1: intro H; only 1: reflexivity).	2.8919479847	3203
Coq.NArith.Ndigits.Ndiv2_correct	40	0.0.0.0.0.0.4.0.0.2	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: reflexivity).	0.884954929352	944
Coq.NArith.Ndigits.Nxor_bit0	40
Coq.NArith.Ndigits.Nxor_div2	40
Coq.NArith.Ndigits.Nneg_bit0	40
Coq.NArith.Ndigits.Nneg_bit0_1	40
Coq.NArith.Ndigits.Nneg_bit0_2	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Nneg_bit0; only 1: rewrite H; only 1: reflexivity).	0.0137088298798	4
Coq.NArith.Ndigits.Nsame_bit0	40
Coq.NArith.Ndigits.Nbit0_less	40
Coq.NArith.Ndigits.Nbit0_gt	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: destruct (N.discr (N.lxor a a')) as [(p, H2)| H1]; only 1: unfold Nless; only 1: rewrite H2; only 1: destruct p; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H1 : N.odd (N.lxor a a') = false) by (rewrite H2; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H1; only 1: discriminate H1; only 1: simpl; only 1: rewrite H, H0; only 1: reflexivity; only 1: assert (H2 : N.odd (N.lxor a a') = false) by (rewrite H1; reflexivity); only 1: rewrite (Nxor_bit0 a a'), H, H0 in H2; only 1: discriminate H2).	2.61659002304	2432
Coq.NArith.Ndigits.Nless_not_refl	40
Coq.NArith.Ndigits.Nless_def_1	40
Coq.NArith.Ndigits.Nless_def_2	40	0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: destruct a; only 1: destruct a'; only 1: reflexivity; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: trivial).	1.04796409607	797
Coq.NArith.Ndigits.Nless_def_3	40	0.0.4.5.3.0.1.0.0.2.8	search with cache (only 1: destruct a; only 1: destruct a'; only 1: trivial; only 1: trivial; only 1: destruct a'; only 1: trivial; only 1: unfold Nless; only 1: simpl; only 1: destruct (Pos.lxor p p0); only 1: reflexivity; only 1: reflexivity).	24.1136348248	44123
Coq.NArith.Ndigits.Nless_def_4	40
Coq.NArith.Ndigits.Nless_z	40
Coq.NArith.Ndigits.N0_less_1	40
Coq.NArith.Ndigits.N0_less_2	40
Coq.NArith.Ndigits.Nless_trans	40
Coq.NArith.Ndigits.Nless_total	40
Coq.NArith.Ndigits.Bv2N_N2Bv	40
Coq.NArith.Ndigits.Bv2N_Nsize	40
Coq.NArith.Ndigits.Bv2N_Nsize_1	40
Coq.NArith.Ndigits.Bv2N_upper_bound	40
Coq.NArith.Ndigits.ByteV2N_upper_bound	40
Coq.NArith.Ndigits.N2Bv_N2Bv_gen	40	2.0.0.0.0.0.0.0.0.0.4	search with cache (only 1: destruct a; only 1: simpl; only 1: reflexivity; only 1: induction p; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: simpl in *; only 1: rewrite IHp; only 1: auto; only 1: trivial).	0.824297904968	749
Coq.NArith.Ndigits.N2Bv_N2Bv_gen_above	40
Coq.NArith.Ndigits.N2Bv_Bv2N	40
Coq.NArith.Ndigits.Nbit0_Blow	40	1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: apply Vector.rectS; only 1: intros; only 1: simpl; only 1: destruct a; only 1: reflexivity; only 1: trivial; only 1: intros; only 1: simpl; only 1: destruct a, (Bv2N v); only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: reflexivity; only 1: trivial; only 1: trivial).	2.93796396255	2408
Coq.NArith.Ndigits.Bnth_Nbit	40
Coq.NArith.Ndigits.Nbit_Nsize	40
Coq.NArith.Ndigits.Nbit_Bth	40
Coq.NArith.Ndigits.Nxor_BVxor	40
Coq.NArith.Ndigits.Nand_BVand	40
Coq.NArith.Ndigits.N2Bv_sized_Nsize	40	0.0.0.3.0.0.3.0.0.0.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: induction p; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: unfold Bcons; only 1: congruence; only 1: simpl; only 1: auto).	1.45865106583	1774
Coq.NArith.Ndigits.N2Bv_sized_Bv2N	40
Coq.NArith.Ndigits.N2Bv_N2Bv_sized_above	40	0.0.0.0.0.0.0.1.0.1.0.1	search with cache (only 1: destruct a; only 1: simpl; only 1: f_equal; only 1: simpl; only 1: induction p; only 1: simpl; only 1: f_equal; only 1: auto; only 1: simpl; only 1: f_equal; only 1: auto; only 1: auto).	0.752307891846	616
Coq.NArith.NArith.test	40
Coq.NArith.Nnat.N2Nat.id	40
Coq.NArith.Nnat.N2Nat.inj	40
Coq.NArith.Nnat.N2Nat.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: rewrite <- (id a), <- (id a'); only 1: now f_equal; only 1: intro H; only 1: now f_equal).	0.0192999839783	8
Coq.NArith.Nnat.N2Nat.inj_double	40	0.3.11.20.1.4.1.14	search with cache (only 1: destruct a as [| p]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	4.92778396606	15176
Coq.NArith.Nnat.N2Nat.inj_succ_double	40	1.5.2.13.0.1.1.1	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: simpl; only 1: rewrite Pmult_nat_mult, Nat.mul_comm; only 1: trivial).	5.68373608589	10630
Coq.NArith.Nnat.N2Nat.inj_succ	40	2.0.0.0.0.0	search with cache (only 1: destruct a; only 1: simpl N.to_nat; only 1: trivial; only 1: simpl N.to_nat; only 1: unfold Pos.to_nat; only 1: now rewrite !Pmult_nat_mult, Pos2Nat.inj_succ).	0.0193779468536	8
Coq.NArith.Nnat.N2Nat.inj_add	40
Coq.NArith.Nnat.N2Nat.inj_mul	40
Coq.NArith.Nnat.N2Nat.inj_sub	40
Coq.NArith.Nnat.N2Nat.inj_pred	40
Coq.NArith.Nnat.N2Nat.inj_div2	40
Coq.NArith.Nnat.N2Nat.inj_compare	40
Coq.NArith.Nnat.N2Nat.inj_max	40
Coq.NArith.Nnat.N2Nat.inj_min	40
Coq.NArith.Nnat.N2Nat.inj_iter	40
Coq.NArith.Nnat.Nat2N.id	40	0.0.3.0.1.15	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite Pos.of_nat_succ; only 1: now apply Nat2Pos.id).	0.207195043564	363
Coq.NArith.Nnat.Nat2N.inj	40
Coq.NArith.Nnat.Nat2N.inj_iff	40	1.0.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (id n), <- (id n'); only 1: now f_equal; only 1: intros H; only 1: now f_equal).	0.0183608531952	8
Coq.NArith.Nnat.Nat2N.inj_double	40
Coq.NArith.Nnat.Nat2N.inj_succ_double	40	0	search with cache (only 1: nat2N).	0.0175981521606	1
Coq.NArith.Nnat.Nat2N.inj_succ	40	0	search with cache (only 1: nat2N).	0.014436006546	1
Coq.NArith.Nnat.Nat2N.inj_pred	40	0	search with cache (only 1: nat2N).	0.014533996582	1
Coq.NArith.Nnat.Nat2N.inj_add	40	8	search with cache (only 1: nat2N).	0.0184359550476	9
Coq.NArith.Nnat.Nat2N.inj_sub	40	0	search with cache (only 1: nat2N).	0.0883750915527	1
Coq.NArith.Nnat.Nat2N.inj_mul	40	0	search with cache (only 1: nat2N).	0.0163187980652	1
Coq.NArith.Nnat.Nat2N.inj_div2	40	0	search with cache (only 1: nat2N).	0.0149550437927	1
Coq.NArith.Nnat.Nat2N.inj_compare	40
Coq.NArith.Nnat.Nat2N.inj_min	40	0	search with cache (only 1: nat2N).	0.0163271427155	1
Coq.NArith.Nnat.Nat2N.inj_max	40	0	search with cache (only 1: nat2N).	0.0165991783142	1
Coq.NArith.Nnat.Nat2N.inj_iter	40	5.0.12.6.1.18.0.7	search with cache (only 1: induction n; only 1: trivial; only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos.iter_succ; only 1: f_equal; only 1: trivial).	5.81647896767	14770
Coq.Strings.Ascii.ascii_dec	40
Coq.Strings.Ascii.eqb_spec	40
Coq.Strings.Ascii.eqb_refl	40
Coq.Strings.Ascii.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.00906300544739	1
Coq.Strings.Ascii.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.00907301902771	1
Coq.Strings.Ascii.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.00931692123413	1
Coq.Strings.Ascii.eqb_compat	40	1	search with cache (only 1: t_eqb).	0.00721502304077	2
Coq.Strings.Ascii.ascii_N_embedding	40
Coq.Strings.Ascii.N_ascii_embedding	40
Coq.Strings.Ascii.N_ascii_bounded	40
Coq.Strings.Ascii.ascii_nat_embedding	40
Coq.Strings.Ascii.nat_ascii_embedding	40
Coq.Strings.Ascii.nat_ascii_bounded	40
Coq.Strings.Ascii.ascii_of_byte_of_ascii	40
Coq.Strings.Ascii.byte_of_ascii_of_byte	40
Coq.Strings.Ascii.ascii_of_byte_via_N	40
Coq.Strings.Ascii.ascii_of_byte_via_nat	40
Coq.Strings.Ascii.byte_of_ascii_via_N	40
Coq.Strings.Ascii.byte_of_ascii_via_nat	40
Coq.Strings.String.string_dec	40
Coq.Strings.String.eqb_spec	40
Coq.Strings.String.eqb_refl	40
Coq.Strings.String.eqb_sym	40	0	search with cache (only 1: t_eqb).	0.0112290382385	1
Coq.Strings.String.eqb_eq	40	0	search with cache (only 1: t_eqb).	0.00979495048523	1
Coq.Strings.String.eqb_neq	40	0	search with cache (only 1: t_eqb).	0.0105497837067	1
Coq.Strings.String.eqb_compat	40	3	search with cache (only 1: t_eqb).	0.00778102874756	4
Coq.Strings.String.get_correct	40
Coq.Strings.String.append_correct1	40
Coq.Strings.String.append_correct2	40
Coq.Strings.String.substring_correct1	40
Coq.Strings.String.substring_correct2	40
Coq.Strings.String.prefix_correct	40
Coq.Strings.String.index_correct1	40
Coq.Strings.String.index_correct2	40
Coq.Strings.String.index_correct3	40
Coq.Strings.String.index_correct4	40
Coq.Strings.String.string_of_list_ascii_of_string	40	4.0.8.2.1.0	search with cache (only 1: elim s; only 1: auto; only 1: simpl; only 1: intros m s1; only 1: intros ->; only 1: auto).	1.15836286545	2336
Coq.Strings.String.list_ascii_of_string_of_list_ascii	40	0.1.2.0	search with cache (only 1: induction s as [| ? ? IHs]; only 1: reflexivity; only 1: cbn; only 1: apply f_equal, IHs).	0.0144340991974	7
Coq.Strings.String.string_of_list_byte_of_string	40
Coq.Strings.String.list_byte_of_string_of_list_byte	40
Coq.Strings.Byte.byte_dec_lb	40
Coq.Strings.Byte.byte_dec_bl	40
Coq.Strings.Byte.eqb_false	40
Coq.Strings.Byte.of_to_nat	40
Coq.Strings.Byte.to_of_nat	40
Coq.Strings.Byte.to_of_nat_iff	40
Coq.Strings.Byte.to_of_nat_option_map	40
Coq.Strings.Byte.to_nat_bounded	40
Coq.Strings.Byte.of_nat_None_iff	40
Coq.Strings.Byte.of_to_N	40
Coq.Strings.Byte.to_of_N	40
Coq.Strings.Byte.to_of_N_iff	40
Coq.Strings.Byte.to_of_N_option_map	40	0.8	search with cache (only 1: cbv[of_N]; only 1: repeat match goal with | |- context [ match ?x with | _ => _ end ] => is_var x; destruct x | _ => intro | _ => reflexivity | _ => progress subst | H:Some ?a = Some ?b |- _ => assert (a = b) by refine match H with | eq_refl => eq_refl end; clear H | H:None = Some _ |- _ => solve [ inversion H ] end).	0.574717998505	27
Coq.Strings.Byte.to_N_bounded	40
Coq.Strings.Byte.of_N_None_iff	40
Coq.Strings.Byte.to_N_via_nat	40
Coq.Strings.Byte.to_nat_via_N	40
Coq.Strings.Byte.of_N_via_nat	40
Coq.Strings.Byte.of_nat_via_N	40
Coq.Strings.HexString.Raw.to_N_of_pos	40	1	search with cache (only 1: auto).	0.00717401504517	2
Coq.Strings.HexString.to_N_of_N	40
Coq.Strings.HexString.to_Z_of_Z	40
Coq.Strings.HexString.to_nat_of_nat	40
Coq.Strings.HexString.to_pos_of_pos	40
Coq.Strings.OctalString.Raw.to_N_of_pos	40	1	search with cache (only 1: auto).	0.00855016708374	2
Coq.Strings.OctalString.to_N_of_N	40
Coq.Strings.OctalString.to_Z_of_Z	40
Coq.Strings.OctalString.to_nat_of_nat	40
Coq.Strings.OctalString.to_pos_of_pos	40
Coq.Strings.BinaryString.Raw.to_N_of_pos	40	1	search with cache (only 1: auto).	0.00743412971497	2
Coq.Strings.BinaryString.to_N_of_N	40
Coq.Strings.BinaryString.Z_of_of_Z	40
Coq.Strings.BinaryString.to_nat_of_nat	40
Coq.Strings.BinaryString.to_pos_of_pos	40
Coq.Reals.Rdefinitions.total_order_T	40
Coq.Reals.Rdefinitions.Req_appart_dec	40
Coq.Reals.Rdefinitions.Rrepr_appart_0	40
Coq.Reals.Rdefinitions.up	40
Coq.Reals.Rtrigo_alt.pre_sin_bound	40
Coq.Reals.Rtrigo_alt.pre_cos_bound	40
Coq.Reals.Ratan.Ropp_div	40	15.8	search with cache (only 1: unfold Rdiv; only 1: intuition).	3.32408809662	1766
Coq.Reals.Ratan.pos_half_prf	40	0	search with cache (only 1: lra).	0.0211160182953	1
Coq.Reals.Ratan.Boule_half_to_interval	40
Coq.Reals.Ratan.Boule_lt	40
Coq.Reals.Ratan.Un_cv_ext	40
Coq.Reals.Ratan.Alt_first_term_bound	40
Coq.Reals.Ratan.Alt_CVU	40
Coq.Reals.Ratan.pow2_ge_0	40
Coq.Reals.Ratan.pow2_abs	40
Coq.Reals.Ratan.derivable_pt_tan	40
Coq.Reals.Ratan.derive_pt_tan	40
Coq.Reals.Ratan.derive_increasing_interv	40
Coq.Reals.Ratan.plus_Rsqr_gt_0	40
Coq.Reals.Ratan.PI2_lower_bound	40
Coq.Reals.Ratan.PI2_3_2	40
Coq.Reals.Ratan.PI2_1	40
Coq.Reals.Ratan.tan_increasing	40
Coq.Reals.Ratan.tan_is_inj	40
Coq.Reals.Ratan.exists_atan_in_frame	40
Coq.Reals.Ratan.tan_1_gt_1	40
Coq.Reals.Ratan.frame_tan	40
Coq.Reals.Ratan.ub_opp	40	4.8	search with cache (only 1: intros Pc; only 1: lra).	0.657365083694	427
Coq.Reals.Ratan.pos_opp_lt	40	2.0	search with cache (only 1: intros x h; only 1: lra).	0.0173461437225	4
Coq.Reals.Ratan.tech_opp_tan	40
Coq.Reals.Ratan.pre_atan	40
Coq.Reals.Ratan.atan_bound	40
Coq.Reals.Ratan.atan_right_inv	40
Coq.Reals.Ratan.atan_opp	40
Coq.Reals.Ratan.derivable_pt_atan	40
Coq.Reals.Ratan.atan_increasing	40
Coq.Reals.Ratan.atan_0	40
Coq.Reals.Ratan.atan_1	40
Coq.Reals.Ratan.derive_pt_atan	40
Coq.Reals.Ratan.derivable_pt_lim_atan	40
Coq.Reals.Ratan.Ratan_seq_decreasing	40
Coq.Reals.Ratan.Ratan_seq_converging	40
Coq.Reals.Ratan.ps_atan_exists_01	40
Coq.Reals.Ratan.Ratan_seq_opp	40
Coq.Reals.Ratan.sum_Ratan_seq_opp	40
Coq.Reals.Ratan.ps_atan_exists_1	40
Coq.Reals.Ratan.in_int	40
Coq.Reals.Ratan.ps_atan0_0	40
Coq.Reals.Ratan.ps_atan_exists_1_opp	40
Coq.Reals.Ratan.ps_atan_opp	40
Coq.Reals.Ratan.ps_atanSeq_continuity_pt_1	40
Coq.Reals.Ratan.pow_lt_1_compat	40
Coq.Reals.Ratan.Datan_seq_Rabs	40
Coq.Reals.Ratan.Datan_seq_pos	40	0.3.0	search with cache (only 1: intros x n hx; only 1: apply pow_lt; only 1: assumption).	0.0182139873505	6
Coq.Reals.Ratan.Datan_sum_eq	40
Coq.Reals.Ratan.Datan_seq_increasing	40
Coq.Reals.Ratan.Datan_seq_decreasing	40
Coq.Reals.Ratan.Datan_seq_CV_0	40
Coq.Reals.Ratan.Datan_lim	40
Coq.Reals.Ratan.Datan_CVU_prelim	40
Coq.Reals.Ratan.Datan_is_datan	40
Coq.Reals.Ratan.Ratan_CVU'	40
Coq.Reals.Ratan.Ratan_CVU	40
Coq.Reals.Ratan.Alt_PI_tg	40	0.0.0.2.1.0.0	search with cache (only 1: symmetry; only 1: unfold Ratan_seq, PI_tg; only 1: simpl; only 1: rewrite pow1; only 1: unfold Rdiv; only 1: rewrite Rmult_1_l; only 1: ring).	0.0446858406067	10
Coq.Reals.Ratan.Ratan_is_ps_atan	40
Coq.Reals.Ratan.Datan_continuity	40
Coq.Reals.Ratan.derivable_pt_lim_ps_atan	40
Coq.Reals.Ratan.derivable_pt_ps_atan	40
Coq.Reals.Ratan.ps_atan_continuity_pt_1	40
Coq.Reals.Ratan.Datan_eq_DatanSeq_interv	40
Coq.Reals.Ratan.atan_eq_ps_atan	40
Coq.Reals.Ratan.Alt_PI_eq	40
Coq.Reals.Ratan.PI_ineq	40
Coq.Reals.RList.MaxRlist_P1	40
Coq.Reals.RList.MinRlist_P1	40
Coq.Reals.RList.AbsList_P1	40
Coq.Reals.RList.MinRlist_P2	40
Coq.Reals.RList.AbsList_P2	40
Coq.Reals.RList.MaxRlist_P2	40
Coq.Reals.RList.pos_Rl_P1	40	0.1.8.5.2.0	search with cache (only 1: intros; only 1: induction l as [| r0 l Hrecl0]; only 1: simpl in H; only 1: easy; only 1: simpl; only 1: reflexivity).	4.53350496292	4097
Coq.Reals.RList.pos_Rl_P2	40
Coq.Reals.RList.Rlist_P1	40
Coq.Reals.RList.RList_P0	40
Coq.Reals.RList.RList_P1	40
Coq.Reals.RList.RList_P2	40
Coq.Reals.RList.RList_P3	40
Coq.Reals.RList.RList_P4	40
Coq.Reals.RList.RList_P5	40
Coq.Reals.RList.RList_P6	40
Coq.Reals.RList.RList_P7	40
Coq.Reals.RList.RList_P8	40
Coq.Reals.RList.RList_P9	40
Coq.Reals.RList.RList_P10	40
Coq.Reals.RList.RList_P11	40
Coq.Reals.RList.RList_P12	40
Coq.Reals.RList.RList_P13	40
Coq.Reals.RList.RList_P14	40	0.0.0.0.0.6	search with cache (only 1: induction l as [| r l Hrecl]; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	0.836030960083	693
Coq.Reals.RList.RList_P15	40
Coq.Reals.RList.RList_P16	40
Coq.Reals.RList.RList_P17	40
Coq.Reals.RList.RList_P18	40	0.0.0.1.5.1	search with cache (only 1: intros; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: simpl; only 1: rewrite Hrecl; only 1: reflexivity).	1.10321617126	954
Coq.Reals.RList.RList_P19	40
Coq.Reals.RList.RList_P20	40
Coq.Reals.RList.RList_P21	40	0.1.0.3.0	search with cache (only 1: intros; only 1: elim H; only 1: induction l as [| r l Hrecl]; only 1: reflexivity; only 1: reflexivity).	0.0338821411133	30
Coq.Reals.RList.RList_P22	40	1.0.1.4.0	search with cache (only 1: intros; only 1: induction l1 as [| r l1 Hrecl1]; only 1: elim H; only 1: reflexivity; only 1: reflexivity).	0.338155984879	183
Coq.Reals.RList.RList_P23	40	0.0.0.9.0.0.0.0.0	search with cache (only 1: simple induction l1; only 1: intro; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: apply INR_eq; only 1: rewrite S_INR; only 1: ring).	6.40988588333	5653
Coq.Reals.RList.RList_P24	40
Coq.Reals.RList.RList_P25	40
Coq.Reals.RList.RList_P26	40	0.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction l1; only 1: intros; only 1: elim (Nat.nlt_0_r _ H); only 1: intros; only 1: induction i as [| i Hreci]; only 1: reflexivity; only 1: simpl; only 1: apply H; only 1: apply lt_S_n; only 1: apply H0).	1.10096907616	613
Coq.Reals.RList.RList_P27	40	0.8.7.0.0.1.1	search with cache (only 1: simple induction l1; only 1: intros; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	5.10180282593	7018
Coq.Reals.RList.RList_P28	40	1.4.0.0.2.29	search with cache (only 1: simple induction l; only 1: reflexivity; only 1: intros; only 1: simpl; only 1: rewrite H; only 1: reflexivity).	17.5924539566	38824
Coq.Reals.RList.RList_P29	40
Coq.Reals.Sqrt_reg.sqrt_var_maj	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt_R1	40
Coq.Reals.Sqrt_reg.sqrt_continuity_pt	40
Coq.Reals.Sqrt_reg.derivable_pt_lim_sqrt	40
Coq.Reals.Sqrt_reg.derivable_pt_sqrt	40
Coq.Reals.Sqrt_reg.derive_pt_sqrt	40
Coq.Reals.Sqrt_reg.continuity_pt_sqrt	40
Coq.Reals.Rsigma.sigma_split	40
Coq.Reals.Rsigma.sigma_diff	40
Coq.Reals.Rsigma.sigma_diff_neg	40	0.1.0.0.0.0.0.0.0	search with cache (only 1: intros low high k H1 H2; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: rewrite (sigma_split H1 H2); only 1: ring).	0.0604000091553	13
Coq.Reals.Rsigma.sigma_first	40
Coq.Reals.Rsigma.sigma_last	40
Coq.Reals.Rsigma.sigma_eq_arg	40	0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: unfold sigma; only 1: rewrite <- minus_n_n; only 1: simpl; only 1: replace (low + 0)%nat with low; only 1: reflexivity; only 1: ring).	0.116564035416	21
Coq.Reals.Rbasic_fun.Rmin_case	40
Coq.Reals.Rbasic_fun.Rmin_case_strong	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_l	40
Coq.Reals.Rbasic_fun.Rmin_Rgt_r	40
Coq.Reals.Rbasic_fun.Rmin_Rgt	40
Coq.Reals.Rbasic_fun.Rmin_l	40
Coq.Reals.Rbasic_fun.Rmin_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.0610327720642	7
Coq.Reals.Rbasic_fun.Rmin_left	40	5.0.0.1.1.1.4	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2); only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	1.98619318008	1462
Coq.Reals.Rbasic_fun.Rmin_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0270848274231	4
Coq.Reals.Rbasic_fun.Rle_min_compat_r	40
Coq.Reals.Rbasic_fun.Rle_min_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmin_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0324149131775	6
Coq.Reals.Rbasic_fun.Rmin_comm	40	0.0.0.0.0.0.0.0.0.0.8.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto using Rle_antisym; only 1: apply Rmin_case_strong; only 1: intro H1; only 1: auto using Rle_antisym; only 1: intro H1; only 1: auto using Rle_antisym).	2.08047699928	1878
Coq.Reals.Rbasic_fun.Rmin_stable_in_posreal	40
Coq.Reals.Rbasic_fun.Rmin_pos	40	0.0.3.0.4.4	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: case (Rle_dec r1 r2); only 1: intros; only 1: assumption; only 1: auto).	2.16089701653	2035
Coq.Reals.Rbasic_fun.Rmin_glb	40	0.0.0.0.0.3.0	search with cache (only 1: intros r1 r2 r; only 1: unfold Rmin; only 1: destruct (Rle_dec r1 r2) as [Hle| Hnle]; only 1: intros; only 1: assumption; only 1: intros; only 1: assumption).	0.0322179794312	10
Coq.Reals.Rbasic_fun.Rmin_glb_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro; only 1: eauto using Rle_trans, Rle_refl; only 1: intro; only 1: assumption).	0.0334379673004	7
Coq.Reals.Rbasic_fun.Rmax_case	40
Coq.Reals.Rbasic_fun.Rmax_case_strong	40	0.0.0.0.0	search with cache (only 1: intros r1 r2 P H1 H2; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2); only 1: auto with real; only 1: auto with real).	0.0350079536438	5
Coq.Reals.Rbasic_fun.Rmax_Rle	40
Coq.Reals.Rbasic_fun.Rmax_comm	40
Coq.Reals.Rbasic_fun.Rmax_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	0.0331680774689	7
Coq.Reals.Rbasic_fun.Rmax_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro H1; only 1: auto with real; only 1: intro H1; only 1: auto with real).	0.037477016449	7
Coq.Reals.Rbasic_fun.Rmax_left	40	0.0.0.5.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0333271026611	10
Coq.Reals.Rbasic_fun.Rmax_right	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0274648666382	4
Coq.Reals.Rbasic_fun.Rle_max_compat_r	40
Coq.Reals.Rbasic_fun.Rle_max_compat_l	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 (apply Rmax_case_strong; intro); only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl; only 1: eauto using Rle_trans, Rle_refl).	0.0321350097656	6
Coq.Reals.Rbasic_fun.RmaxRmult	40
Coq.Reals.Rbasic_fun.Rmax_stable_in_negreal	40
Coq.Reals.Rbasic_fun.Rmax_lub	40	0.1.0.0.1.2	search with cache (only 1: intros r1 r2 r; only 1: intro; only 1: unfold Rmax; only 1: destruct (Rle_dec r1 r2) as [| Hnle]; only 1: auto; only 1: auto).	0.354193925858	142
Coq.Reals.Rbasic_fun.Rmax_lub_lt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rmax; only 1: case (Rle_dec x y); only 1: intro; only 1: assumption; only 1: intro; only 1: assumption).	0.0328919887543	7
Coq.Reals.Rbasic_fun.Rmax_Rlt	40
Coq.Reals.Rbasic_fun.Rmax_neg	40	2.2.1.0	search with cache (only 1: intros; only 1: apply Rmax_lub_lt; only 1: assumption; only 1: assumption).	0.026673078537	9
Coq.Reals.Rbasic_fun.Rcase_abs	40
Coq.Reals.Rbasic_fun.Rabs_R0	40
Coq.Reals.Rbasic_fun.Rabs_R1	40
Coq.Reals.Rbasic_fun.Rabs_no_R0	40
Coq.Reals.Rbasic_fun.Rabs_left	40
Coq.Reals.Rbasic_fun.Rabs_right	40
Coq.Reals.Rbasic_fun.Rabs_left1	40
Coq.Reals.Rbasic_fun.Rabs_pos	40
Coq.Reals.Rbasic_fun.Rle_abs	40
Coq.Reals.Rbasic_fun.Rabs_le	40
Coq.Reals.Rbasic_fun.Rabs_pos_eq	40
Coq.Reals.Rbasic_fun.Rabs_Rabsolu	40
Coq.Reals.Rbasic_fun.Rabs_pos_lt	40
Coq.Reals.Rbasic_fun.Rabs_minus_sym	40
Coq.Reals.Rbasic_fun.Rabs_mult	40
Coq.Reals.Rbasic_fun.Rabs_Rinv	40
Coq.Reals.Rbasic_fun.Rabs_Ropp	40
Coq.Reals.Rbasic_fun.Rabs_triang	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv	40
Coq.Reals.Rbasic_fun.Rabs_triang_inv2	40
Coq.Reals.Rbasic_fun.Rabs_def1	40
Coq.Reals.Rbasic_fun.Rabs_def2	40
Coq.Reals.Rbasic_fun.RmaxAbs	40
Coq.Reals.Rbasic_fun.Rabs_Zabs	40
Coq.Reals.Rbasic_fun.abs_IZR	40
Coq.Reals.Rbasic_fun.Ropp_Rmax	40	3.0.3.0.2.2.1.0.0	search with cache (only 1: intros p q; only 1: unfold Rmax; only 1: case (Rle_dec p q); only 1: apply Rmin_case_strong; only 1: auto with real; only 1: auto; only 1: apply Rmin_case_strong; only 1: auto; only 1: auto with real).	16.7967751026	13941
Coq.Reals.Rbasic_fun.Ropp_Rmin	40
Coq.Reals.Rbasic_fun.Rmax_assoc	40
Coq.Reals.Rbasic_fun.Rminmax	40	0.0.0.0.0.5.1.3	search with cache (only 1: intros x y; only 1: unfold Rmax; only 1: unfold Rmin; only 1: case (Rle_dec x y); only 1: intro H1; only 1: assumption; only 1: intro H1; only 1: auto with real).	8.12623810768	8377
Coq.Reals.Rbasic_fun.Rmin_assoc	40
Coq.Reals.ROrderedType.Req_dec	40
Coq.Reals.ROrderedType.Reqb_eq	40
Coq.Reals.ROrderedType.Rcompare_spec	40
Coq.Reals.ROrderedType.R_as_OT.lt_strorder	40
Coq.Reals.ROrderedType.R_as_OT.lt_compat	40	18	search with cache (only 1: auto with *).	0.248814821243	383
Coq.Reals.ROrderedType.R_as_OT.le_lteq	40	4.1	search with cache (only 1: intros; only 1: auto with *).	0.0178070068359	16
Coq.Reals.SeqSeries.sum_maj1	40
Coq.Reals.SeqSeries.Rseries_CV_comp	40
Coq.Reals.SeqSeries.Cesaro	40
Coq.Reals.SeqSeries.Cesaro_1	40
Coq.Reals.Rtrigo_def.exp_cof_no_R0	40
Coq.Reals.Rtrigo_def.exist_exp	40
Coq.Reals.Rtrigo_def.pow_i	40
Coq.Reals.Rtrigo_def.exist_exp0	40
Coq.Reals.Rtrigo_def.exp_0	40
Coq.Reals.Rtrigo_def.cosh_0	40
Coq.Reals.Rtrigo_def.sinh_0	40
Coq.Reals.Rtrigo_def.simpl_cos_n	40
Coq.Reals.Rtrigo_def.archimed_cor1	40
Coq.Reals.Rtrigo_def.Alembert_cos	40
Coq.Reals.Rtrigo_def.cosn_no_R0	40	0.0.0.0.1.1.2	search with cache (only 1: red; only 1: intro H7; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.183232069016	113
Coq.Reals.Rtrigo_def.exist_cos	40
Coq.Reals.Rtrigo_def.simpl_sin_n	40
Coq.Reals.Rtrigo_def.Alembert_sin	40
Coq.Reals.Rtrigo_def.sin_no_R0	40	0.0.0.0.1.0.3	search with cache (only 1: red; only 1: intro; only 1: apply Rmult_integral_contrapositive_currified; only 1: apply pow_nonzero; only 1: discrR; only 1: apply Rinv_neq_0_compat; only 1: apply INR_fact_neq_0).	0.135421037674	100
Coq.Reals.Rtrigo_def.exist_sin	40
Coq.Reals.Rtrigo_def.cos_sym	40
Coq.Reals.Rtrigo_def.sin_antisym	40
Coq.Reals.Rtrigo_def.sin_0	40
Coq.Reals.Rtrigo_def.exist_cos0	40
Coq.Reals.Rtrigo_def.cos_0	40
Coq.Reals.NewtonInt.FTCN_step1	40
Coq.Reals.NewtonInt.FTC_Newton	40	2.0	search with cache (only 1: intros f a b; only 1: split).	0.0114932060242	4
Coq.Reals.NewtonInt.NewtonInt_P1	40
Coq.Reals.NewtonInt.NewtonInt_P2	40
Coq.Reals.NewtonInt.NewtonInt_P3	40
Coq.Reals.NewtonInt.NewtonInt_P4	40
Coq.Reals.NewtonInt.NewtonInt_P5	40
Coq.Reals.NewtonInt.antiderivative_P1	40
Coq.Reals.NewtonInt.NewtonInt_P6	40
Coq.Reals.NewtonInt.antiderivative_P2	40
Coq.Reals.NewtonInt.antiderivative_P3	40
Coq.Reals.NewtonInt.antiderivative_P4	40
Coq.Reals.NewtonInt.NewtonInt_P7	40
Coq.Reals.NewtonInt.NewtonInt_P8	40
Coq.Reals.NewtonInt.NewtonInt_P9	40
Coq.Reals.Runcountable.in_holed_interval_dec	40
Coq.Reals.Runcountable.middle_in_interval	40
Coq.Reals.Runcountable.point_in_holed_interval_works	40
Coq.Reals.Runcountable.first_in_holed_interval	40
Coq.Reals.Runcountable.first_in_holed_interval_works	40
Coq.Reals.Runcountable.split_couple_eq	40
Coq.Reals.Runcountable.first_two_in_interval_works	40
Coq.Reals.Runcountable.tearing_sequences	40
Coq.Reals.Runcountable.tearing_sequences_projsig	40
Coq.Reals.Runcountable.tearing_sequences_inc_dec	40
Coq.Reals.Runcountable.split_lt_succ	40
Coq.Reals.Runcountable.increase_seq_transit	40
Coq.Reals.Runcountable.decrease_seq_transit	40
Coq.Reals.Runcountable.tearing_sequences_ordered_forall	40
Coq.Reals.Runcountable.torn_number	40
Coq.Reals.Runcountable.torn_number_above_first_sequence	40
Coq.Reals.Runcountable.torn_number_below_second_sequence	40
Coq.Reals.Runcountable.limit_index_above_all_indices	40
Coq.Reals.Runcountable.first_indices_increasing	40
Coq.Reals.Runcountable.R_uncountable	40
Coq.Reals.Rfunctions.INR_fact_neq_0	40	0.26	search with cache (only 1: fix ind_0_1_SS 1; only 1: reflexivity || assumption).	0.743160009384	2546
Coq.Reals.Rfunctions.fact_simpl	40	3.1.4	search with cache (only 1: simpl; only 1: intro; only 1: f_equal).	0.0393898487091	36
Coq.Reals.Rfunctions.simpl_fact	40	8.106	search with cache (only 1: fix even_equiv 1; only 1: assumption).	27.5013210773	90630
Coq.Reals.Rfunctions.pow_O	40	8.0.7	search with cache (only 1: unfold IZR at 1; only 1: intro; only 1: reflexivity || assumption).	0.164793014526	409
Coq.Reals.Rfunctions.pow_1	40	14.1	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0947229862213	268
Coq.Reals.Rfunctions.pow_add	40
Coq.Reals.Rfunctions.Rpow_mult_distr	40
Coq.Reals.Rfunctions.pow_nonzero	40	0.0.4.5.0.2	search with cache (only 1: intro; only 1: intro; only 1: elim n; only 1: auto with real; only 1: simpl; only 1: auto with real).	4.44909405708	1648
Coq.Reals.Rfunctions.pow_RN_plus	40	1.11.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' m; only 1: repeat rewrite Rmult_assoc; only 1: auto with real).	23.5366230011	13269
Coq.Reals.Rfunctions.pow_lt	40	2.2.7.0.0.3.0.0.0	search with cache (only 1: intro; only 1: simple induction n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto; only 1: auto).	12.7995538712	19547
Coq.Reals.Rfunctions.Rlt_pow_R1	40
Coq.Reals.Rfunctions.Rlt_pow	40
Coq.Reals.Rfunctions.tech_pow_Rmult	40	0.1.0	search with cache (only 1: simpl; only 1: intros; only 1: auto).	0.0103459358215	4
Coq.Reals.Rfunctions.tech_pow_Rplus	40	6.6.0.5.0.0.1	search with cache (only 1: intros x y n; only 1: elim n; only 1: simpl; only 1: ring_Rsqr; only 1: simpl; only 1: intros; only 1: field).	37.5988430977	26525
Coq.Reals.Rfunctions.poly	40
Coq.Reals.Rfunctions.Power_monotonic	40
Coq.Reals.Rfunctions.RPow_abs	40
Coq.Reals.Rfunctions.Pow_x_infinity	40
Coq.Reals.Rfunctions.pow_ne_zero	40
Coq.Reals.Rfunctions.Rinv_pow	40
Coq.Reals.Rfunctions.pow_lt_1_zero	40
Coq.Reals.Rfunctions.pow_R1	40
Coq.Reals.Rfunctions.pow_Rsqr	40
Coq.Reals.Rfunctions.pow_le	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: intros n0 H' H'0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: auto with real).	0.0386521816254	9
Coq.Reals.Rfunctions.pow_1_even	40
Coq.Reals.Rfunctions.pow_1_odd	40
Coq.Reals.Rfunctions.pow_1_abs	40
Coq.Reals.Rfunctions.pow_mult	40
Coq.Reals.Rfunctions.pow_incr	40
Coq.Reals.Rfunctions.pow_R1_Rle	40	0.1.2.2.0.1.0.0.1	search with cache (only 1: intros x n; only 1: elim n; only 1: simpl; only 1: auto with real; only 1: intros; only 1: replace 1 with (1 * 1); only 1: unfold pow; only 1: auto with real; only 1: auto with real).	5.59010505676	3927
Coq.Reals.Rfunctions.Rle_pow	40
Coq.Reals.Rfunctions.pow1	40	0.0.0.0.0.3.0.0.2.0	search with cache (only 1: intro; only 1: induction n as [| n Hrecn]; only 1: simpl; only 1: reflexivity; only 1: replace (S n) with (n + 1)%nat; only 1: rewrite pow_add; only 1: rewrite Hrecn; only 1: simpl; only 1: ring; only 1: ring).	1.70011997223	946
Coq.Reals.Rfunctions.pow_Rabs	40
Coq.Reals.Rfunctions.pow_maj_Rabs	40
Coq.Reals.Rfunctions.Rsqr_pow2	40	1.20.5.1	search with cache (only 1: intros; only 1: simpl; only 1: rewrite Rmult_1_r; only 1: reflexivity).	1.28045105934	2366
Coq.Reals.Rfunctions.intP	40
Coq.Reals.Rfunctions.Zpower_NR0	40
Coq.Reals.Rfunctions.powerRZ_O	40	0	search with cache (only 1: reflexivity).	0.00721287727356	1
Coq.Reals.Rfunctions.powerRZ_1	40	0.1	search with cache (only 1: simpl; only 1: auto with real).	0.00995302200317	3
Coq.Reals.Rfunctions.powerRZ_NOR	40
Coq.Reals.Rfunctions.powerRZ_pos_sub	40
Coq.Reals.Rfunctions.powerRZ_add	40
Coq.Reals.Rfunctions.Zpower_nat_powerRZ	40
Coq.Reals.Rfunctions.Zpower_pos_powerRZ	40
Coq.Reals.Rfunctions.powerRZ_lt	40	0.0.2.0.0.1.1	search with cache (only 1: destruct z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	1.02020001411	633
Coq.Reals.Rfunctions.powerRZ_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros x z; only 1: case z; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real; only 1: simpl; only 1: auto with real).	0.0293660163879	8
Coq.Reals.Rfunctions.Zpower_nat_powerRZ_absolu	40
Coq.Reals.Rfunctions.powerRZ_R1	40
Coq.Reals.Rfunctions.pow_powerRZ	40	0.0.0.0.0.0.0	search with cache (only 1: case n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: intros m2; only 1: rewrite SuccNat2Pos.id_succ; only 1: auto).	0.0236599445343	7
Coq.Reals.Rfunctions.powerRZ_ind	40
Coq.Reals.Rfunctions.powerRZ_inv	40
Coq.Reals.Rfunctions.powerRZ_neg	40
Coq.Reals.Rfunctions.powerRZ_mult_distr	40
Coq.Reals.Rfunctions.GP_finite	40
Coq.Reals.Rfunctions.sum_f_R0_triangle	40
Coq.Reals.Rfunctions.R_dist_pos	40
Coq.Reals.Rfunctions.R_dist_sym	40
Coq.Reals.Rfunctions.R_dist_refl	40
Coq.Reals.Rfunctions.R_dist_eq	40	7.4.0.0.0	search with cache (only 1: unfold R_dist; only 1: intros; only 1: split_Rabs; only 1: ring; only 1: ring).	0.662202119827	841
Coq.Reals.Rfunctions.R_dist_tri	40
Coq.Reals.Rfunctions.R_dist_plus	40
Coq.Reals.Rfunctions.R_dist_mult_l	40	0.0.9.4.5.1.8.3	search with cache (only 1: intros x n; only 1: unfold R_dist; only 1: symmetry; only 1: rewrite <- Rmult_1_r; only 1: rewrite <- Rmult_minus_distr_l; only 1: rewrite Rmult_1_r; only 1: symmetry; only 1: apply Rabs_mult).	25.6566178799	30958
Coq.Reals.Rprod.prod_SO_split	40
Coq.Reals.Rprod.prod_SO_pos	40
Coq.Reals.Rprod.prod_SO_Rle	40
Coq.Reals.Rprod.fact_prodSO	40
Coq.Reals.Rprod.le_n_2n	40	24	search with cache (only 1: lia).	4.68072199821	4587
Coq.Reals.Rprod.RfactN_fact2N_factk	40
Coq.Reals.Rprod.INR_fact_lt_0	40
Coq.Reals.Rprod.C_maj	40
Coq.Reals.Exp_prop.E1_cvg	40
Coq.Reals.Exp_prop.exp_form	40
Coq.Reals.Exp_prop.div2_double	40
Coq.Reals.Exp_prop.div2_S_double	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: intro; only 1: induction N as [| N HrecN]; only 1: reflexivity; only 1: replace (2 * S N)%nat with (S (S (2 * N))); only 1: simpl; only 1: simpl in HrecN; only 1: rewrite HrecN; only 1: reflexivity; only 1: ring).	0.471210956573	278
Coq.Reals.Exp_prop.div2_not_R0	40
Coq.Reals.Exp_prop.Reste_E_maj	40
Coq.Reals.Exp_prop.maj_Reste_cv_R0	40
Coq.Reals.Exp_prop.Reste_E_cv	40
Coq.Reals.Exp_prop.exp_plus	40
Coq.Reals.Exp_prop.exp_pos_pos	40
Coq.Reals.Exp_prop.exp_pos	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp_0	40
Coq.Reals.Exp_prop.derivable_pt_lim_exp	40
Coq.Reals.Rpower.P_Rmin	40
Coq.Reals.Rpower.exp_le_3	40
Coq.Reals.Rpower.exp_increasing	40
Coq.Reals.Rpower.exp_lt_inv	40
Coq.Reals.Rpower.exp_ineq1	40
Coq.Reals.Rpower.ln_exists1	40
Coq.Reals.Rpower.ln_exists	40
Coq.Reals.Rpower.exp_ln	40
Coq.Reals.Rpower.exp_inv	40
Coq.Reals.Rpower.exp_Ropp	40
Coq.Reals.Rpower.ln_increasing	40
Coq.Reals.Rpower.ln_exp	40
Coq.Reals.Rpower.ln_1	40	0.11.2.20	search with cache (only 1: apply exp_inv; only 1: rewrite exp_0; only 1: apply exp_ln; only 1: apply Rlt_0_1).	1.56678199768	2388
Coq.Reals.Rpower.ln_lt_inv	40
Coq.Reals.Rpower.ln_inv	40
Coq.Reals.Rpower.ln_mult	40
Coq.Reals.Rpower.ln_Rinv	40
Coq.Reals.Rpower.ln_continue	40
Coq.Reals.Rpower.Rpower_plus	40
Coq.Reals.Rpower.Rpower_mult	40
Coq.Reals.Rpower.Rpower_O	40
Coq.Reals.Rpower.Rpower_1	40
Coq.Reals.Rpower.Rpower_pow	40
Coq.Reals.Rpower.Rpower_lt	40
Coq.Reals.Rpower.Rpower_sqrt	40
Coq.Reals.Rpower.Rpower_Ropp	40
Coq.Reals.Rpower.powerRZ_Rpower	40
Coq.Reals.Rpower.Rle_Rpower	40
Coq.Reals.Rpower.ln_lt_2	40
Coq.Reals.Rpower.limit1_ext	40
Coq.Reals.Rpower.limit1_imp	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros f g D l x H; only 1: unfold limit1_in, limit_in; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: auto).	1.17382097244	497
Coq.Reals.Rpower.Rinv_Rdiv	40
Coq.Reals.Rpower.Dln	40
Coq.Reals.Rpower.derivable_pt_lim_ln	40
Coq.Reals.Rpower.D_in_imp	40
Coq.Reals.Rpower.D_in_ext	40	0.0.2.1.1.2.0.0.0.1.0	search with cache (only 1: intros f g D D1 x H; only 1: intros H0 eps H1; only 1: case (H0 eps); only 1: auto; only 1: intros x0 [H2 H3]; only 1: exists x0; only 1: split; only 1: auto; only 1: intros x1 [H4 H5]; only 1: rewrite <- H; only 1: auto).	25.8259379864	11213
Coq.Reals.Rpower.Dpower	40
Coq.Reals.Rpower.derivable_pt_lim_power	40
Coq.Reals.Rpower.Rpower_mult_distr	40
Coq.Reals.Rpower.Rlt_Rpower_l	40	4.0.1.0.14.0.0.1	search with cache (only 1: intros x0 [H2 H3]; only 1: unfold Rpower; only 1: apply exp_increasing; only 1: apply Rmult_lt_compat_l; only 1: auto; only 1: apply ln_increasing; only 1: auto; only 1: auto).	18.3515880108	19987
Coq.Reals.Rpower.Rle_Rpower_l	40
Coq.Reals.Rpower.arcsinh_sinh	40
Coq.Reals.Rpower.sinh_arcsinh	40
Coq.Reals.Rpower.derivable_pt_lim_arcsinh	40
Coq.Reals.Rpower.arcsinh_lt	40
Coq.Reals.Rpower.arcsinh_le	40
Coq.Reals.Rpower.arcsinh_0	40
Coq.Reals.ConstructiveRcomplete.CReal_absSmall	40
Coq.Reals.ConstructiveRcomplete.Un_cv_mod_eq	40
Coq.Reals.ConstructiveRcomplete.Rfloor	40
Coq.Reals.ConstructiveRcomplete.FQ_dense	40
Coq.Reals.ConstructiveRcomplete.RQ_limit	40
Coq.Reals.ConstructiveRcomplete.Rdiag_cauchy_sequence	40
Coq.Reals.ConstructiveRcomplete.doubleLeCovariant	40
Coq.Reals.ConstructiveRcomplete.CReal_cv_self	40
Coq.Reals.ConstructiveRcomplete.Un_cv_extens	40
Coq.Reals.ConstructiveRcomplete.R_has_all_rational_limits	40
Coq.Reals.ConstructiveRcomplete.Rcauchy_complete	40
Coq.Reals.ConstructiveRcomplete.CRealImplem	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_increasing_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_unique	40
Coq.Reals.ConstructiveRealsMorphisms.Endomorph_id	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_proper	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_compose	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le	40	2.0.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: apply CRmorph_increasing_inv in abs; only 1: contradiction).	0.0250520706177	14
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_le_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_one	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_opp	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_pos_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRplus_neg_rat_lt	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_plus	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos	40
Coq.Reals.ConstructiveRealsMorphisms.NatOfZ	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_int	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos_le	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult_pos_pos	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_mult	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_appart_zero	40
Coq.Reals.ConstructiveRealsMorphisms.CRmorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Ql	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphism	40
Coq.Reals.ConstructiveRealsMorphisms.RightBound	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_rat	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing_Qr	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inv_increasing	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorphismInv	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_surject	40
Coq.Reals.ConstructiveRealsMorphisms.CauchyMorph_inject	40
Coq.Reals.RIneq.Rle_refl	40	0.2.0	search with cache (only 1: intros; only 1: right; only 1: auto).	0.0214219093323	19
Coq.Reals.RIneq.Rge_refl	40	0.0.0	search with cache (only 1: intro; only 1: right; only 1: reflexivity).	0.00925898551941	3
Coq.Reals.RIneq.Rlt_irrefl	40
Coq.Reals.RIneq.Rgt_irrefl	40	0.0.0.0	search with cache (only 1: intros r H; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0113871097565	4
Coq.Reals.RIneq.Rlt_not_eq	40	0.0.0.1.0.1	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	0.0183918476105	8
Coq.Reals.RIneq.Rgt_not_eq	40	1.0.0.5.3.2	search with cache (only 1: intros; only 1: intro abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	1.46037912369	2132
Coq.Reals.RIneq.Rlt_dichotomy_converse	40	0.0.2.1.0.0.2.4.2	search with cache (only 1: intros x y [H| H] abs; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto; only 1: destruct abs; only 1: eapply Rlt_asym; only 1: eauto; only 1: eauto).	7.67085599899	8406
Coq.Reals.RIneq.Req_dec	40
Coq.Reals.RIneq.Rtotal_order	40	0.0.6.0	search with cache (only 1: intuition eauto  3; only 1: generalize (total_order_T r1 r2), Rlt_dichotomy_converse; only 1: unfold not; only 1: intuition eauto  3).	0.0935411453247	42
Coq.Reals.RIneq.Rdichotomy	40	0.0.0	search with cache (only 1: intuition; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.021703004837	3
Coq.Reals.RIneq.Rlt_le	40	0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0157680511475	4
Coq.Reals.RIneq.Rgt_ge	40	0.3.0	search with cache (only 1: intros; only 1: red; only 1: tauto).	0.0113940238953	6
Coq.Reals.RIneq.Rle_ge	40
Coq.Reals.RIneq.Rge_le	40	1.0.0.0.0	search with cache (only 1: destruct 1; only 1: red; only 1: tauto; only 1: red; only 1: auto with real).	0.0171477794647	6
Coq.Reals.RIneq.Rlt_gt	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.0081799030304	2
Coq.Reals.RIneq.Rgt_lt	40	0	search with cache (only 1: trivial).	0.0062038898468	1
Coq.Reals.RIneq.Rnot_le_lt	40
Coq.Reals.RIneq.Rnot_ge_gt	40
Coq.Reals.RIneq.Rnot_le_gt	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: tauto).	0.0175528526306	4
Coq.Reals.RIneq.Rnot_ge_lt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: auto with real).	0.0109810829163	3
Coq.Reals.RIneq.Rnot_lt_le	40	1.2.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rtotal_order r1 r2); only 1: unfold Rle; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0397610664368	8
Coq.Reals.RIneq.Rnot_gt_le	40	0.2.1.0	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: tauto).	0.0194370746613	7
Coq.Reals.RIneq.Rnot_gt_ge	40	1.3.0.1	search with cache (only 1: intros; only 1: red; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  3).	0.0255551338196	9
Coq.Reals.RIneq.Rnot_lt_ge	40	2.0.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: destruct (Rtotal_order r1 r2) as [| [H0| H0]]; only 1: contradiction; only 1: subst; only 1: auto with rorders; only 1: eauto using Rnot_lt_le with rorders).	0.0194439888	8
Coq.Reals.RIneq.Rlt_not_le	40
Coq.Reals.RIneq.Rgt_not_le	40	0.0	search with cache (only 1: intros; only 1: auto with real).	0.00978994369507	2
Coq.Reals.RIneq.Rlt_not_ge	40
Coq.Reals.RIneq.Rgt_not_ge	40	0.0.0.4.0	search with cache (only 1: intros; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.0205068588257	17
Coq.Reals.RIneq.Rle_not_lt	40	1.0.0.0.0	search with cache (only 1: intros r1 r2 H; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: auto with real).	0.01416015625	6
Coq.Reals.RIneq.Rge_not_lt	40	0.0.0.0.2	search with cache (only 1: intros r1 r2 H; only 1: intro abs; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real).	0.281689882278	53
Coq.Reals.RIneq.Rle_not_gt	40	0.2.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0211389064789	12
Coq.Reals.RIneq.Rge_not_gt	40	0.0.0	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: auto with real).	0.0100419521332	3
Coq.Reals.RIneq.Req_le	40	0.0.1	search with cache (only 1: red; only 1: intros; only 1: auto with real).	0.0102980136871	4
Coq.Reals.RIneq.Req_ge	40	0.1	search with cache (only 1: red; only 1: tauto).	0.00963997840881	3
Coq.Reals.RIneq.Req_le_sym	40	0.1.0	search with cache (only 1: unfold Rle; only 1: intros; only 1: auto with real).	0.0775320529938	4
Coq.Reals.RIneq.Req_ge_sym	40	1.0	search with cache (only 1: unfold Rge; only 1: auto).	0.076751947403	3
Coq.Reals.RIneq.Rgt_asym	40	0.0.3.1	search with cache (only 1: intros; only 1: apply Rle_not_lt; only 1: red; only 1: auto with real).	0.0851340293884	8
Coq.Reals.RIneq.Rle_antisym	40	1.8.0.1.2.2	search with cache (only 1: intros x y [H| H] abs; only 1: exfalso; only 1: eapply Rlt_not_le; only 1: eauto with real; only 1: eauto with real; only 1: auto).	2.09339094162	3673
Coq.Reals.RIneq.Rge_antisym	40	1	search with cache (only 1: intuition).	0.0345320701599	31
Coq.Reals.RIneq.Rle_le_eq	40	0.0.0.0	search with cache (only 1: intros r1 r2; only 1: generalize (Rlt_asym r1 r2); only 1: unfold Rle; only 1: intuition).	0.0241870880127	4
Coq.Reals.RIneq.Rge_ge_eq	40	0	search with cache (only 1: intuition).	0.0141229629517	1
Coq.Reals.RIneq.Rlt_eq_compat	40	1.4.2	search with cache (only 1: intuition eauto  3; only 1: subst; only 1: trivial).	0.0299248695374	20
Coq.Reals.RIneq.Rgt_eq_compat	40	0.0.0.0.0	search with cache (only 1: intros x x' y y'; only 1: intros; only 1: replace x with x'; only 1: replace y with y'; only 1: assumption).	0.0148890018463	5
Coq.Reals.RIneq.Rle_trans	40
Coq.Reals.RIneq.Rge_trans	40
Coq.Reals.RIneq.Rgt_trans	40	2.9.0	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: intros n0 H' m; only 1: eauto using Rle_trans with rorders).	0.57918214798	662
Coq.Reals.RIneq.Rle_lt_trans	40	0.0.2	search with cache (only 1: generalize eq_trans, Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.055762052536	48
Coq.Reals.RIneq.Rlt_le_trans	40	0.0.0	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition eauto  2).	0.0150270462036	3
Coq.Reals.RIneq.Rge_gt_trans	40
Coq.Reals.RIneq.Rgt_ge_trans	40
Coq.Reals.RIneq.Rlt_dec	40	0.3.7.0	search with cache (only 1: intros; only 1: generalize (Rlt_asym r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: generalize (total_order_T r1 r2); only 1: tauto).	2.94258093834	1069
Coq.Reals.RIneq.Rle_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.0465340614319	3
Coq.Reals.RIneq.Rgt_dec	40	0.0.1.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition eauto  4 with real; only 1: auto with real).	0.0462169647217	5
Coq.Reals.RIneq.Rge_dec	40	1.1.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.116742134094	18
Coq.Reals.RIneq.Rlt_le_dec	40	0.5.0	search with cache (only 1: intros r1 r2; only 1: generalize (total_order_T r1 r2), (Rlt_dichotomy_converse r1 r2); only 1: intuition).	0.556515932083	107
Coq.Reals.RIneq.Rgt_ge_dec	40	1.2.0	search with cache (only 1: do 2 intro; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0286540985107	6
Coq.Reals.RIneq.Rle_lt_dec	40	0.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0682239532471	3
Coq.Reals.RIneq.Rge_gt_dec	40	0.1.0.1.1.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.172046899796	61
Coq.Reals.RIneq.Rlt_or_le	40	1.0.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.0288670063019	4
Coq.Reals.RIneq.Rgt_or_ge	40	0.1.0.0.2.0	search with cache (only 1: intros; only 1: edestruct Rlt_le_dec; only 1: left; only 1: eauto with rorders; only 1: right; only 1: eauto with rorders).	0.117063999176	78
Coq.Reals.RIneq.Rle_or_lt	40	1.0.1	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.176523208618	77
Coq.Reals.RIneq.Rge_or_gt	40	0.1.0.1.0.0	search with cache (only 1: intros; only 1: edestruct Rlt_or_le; only 1: right; only 1: eauto with rorders; only 1: left; only 1: eauto with rorders).	0.055605173111	39
Coq.Reals.RIneq.Rle_lt_or_eq_dec	40	0.8.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition).	0.529489040375	225
Coq.Reals.RIneq.inser_trans_R	40
Coq.Reals.RIneq.Rplus_0_r	40
Coq.Reals.RIneq.Rplus_ne	40	12	search with cache (only 1: intuition eauto  4 with real).	0.0838651657104	160
Coq.Reals.RIneq.Rplus_opp_l	40	4.0	search with cache (only 1: intros; only 1: ring).	3.07444190979	33
Coq.Reals.RIneq.Rplus_opp_r_uniq	40
Coq.Reals.RIneq.Rplus_eq_compat_l	40	4.1	search with cache (only 1: intros; only 1: auto with real).	0.0108799934387	7
Coq.Reals.RIneq.Rplus_eq_compat_r	40	0.1.7.2	search with cache (only 1: intros; only 1: subst; only 1: apply f_equal; only 1: reflexivity).	0.261919021606	213
Coq.Reals.RIneq.Rplus_eq_reg_l	40
Coq.Reals.RIneq.Rplus_eq_reg_r	40
Coq.Reals.RIneq.Rplus_0_r_uniq	40	0.0.0.0.0	search with cache (only 1: intros x y H; only 1: replace y with (- x + x + y) by ring; only 1: rewrite Rplus_assoc; only 1: rewrite H; only 1: ring).	0.0289301872253	5
Coq.Reals.RIneq.Rplus_eq_0_l	40
Coq.Reals.RIneq.Rplus_eq_R0	40	2.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b H [H0| H0] H1; only 1: absurd (0 < a + b); only 1: rewrite H1; only 1: auto with real; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real; only 1: rewrite <- H0, Rplus_0_r in H1; only 1: auto with real).	4.67141413689	1010
Coq.Reals.RIneq.Rinv_r	40
Coq.Reals.RIneq.Rinv_l_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0224449634552	4
Coq.Reals.RIneq.Rinv_r_sym	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0222151279449	4
Coq.Reals.RIneq.Rmult_0_r	40	4.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: rewrite Rmult_comm; only 1: field).	0.0533571243286	26
Coq.Reals.RIneq.Rmult_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0139110088348	2
Coq.Reals.RIneq.Rmult_ne	40	0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0322279930115	8
Coq.Reals.RIneq.Rmult_1_r	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rmult_comm; only 1: apply Rquot1; only 1: rewrite Rrepr_mult, Rrepr_1; only 1: apply CReal_mult_1_l).	0.0226979255676	5
Coq.Reals.RIneq.Rmult_eq_compat_l	40	6.0	search with cache (only 1: intros; only 1: auto with real).	0.0343379974365	14
Coq.Reals.RIneq.Rmult_eq_compat_r	40	2.7.1	search with cache (only 1: intros; only 1: rewrite <- H; only 1: auto with real).	0.542213916779	242
Coq.Reals.RIneq.Rmult_eq_reg_l	40
Coq.Reals.RIneq.Rmult_eq_reg_r	40
Coq.Reals.RIneq.Rmult_integral	40
Coq.Reals.RIneq.Rmult_eq_0_compat	40
Coq.Reals.RIneq.Rmult_eq_0_compat_r	40	0.0.1	search with cache (only 1: intros; only 1: rewrite H; only 1: auto with real).	0.0122950077057	4
Coq.Reals.RIneq.Rmult_eq_0_compat_l	40	0	search with cache (only 1: auto with real).	0.00762104988098	1
Coq.Reals.RIneq.Rmult_neq_0_reg	40	7.2	search with cache (only 1: intros a b; only 1: intuition).	0.265943050385	214
Coq.Reals.RIneq.Rmult_integral_contrapositive	40
Coq.Reals.RIneq.Rmult_integral_contrapositive_currified	40	0.0.0.0.3.0	search with cache (only 1: red; only 1: intros; only 1: case (Rmult_integral r1 r2); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0351719856262	16
Coq.Reals.RIneq.Rmult_plus_distr_r	40	8.0	search with cache (only 1: intros; only 1: ring).	5.40698003769	56
Coq.Reals.RIneq.Rsqr_0	40
Coq.Reals.RIneq.Rsqr_0_uniq	40
Coq.Reals.RIneq.Ropp_eq_compat	40	7.0.0	search with cache (only 1: intros r b; only 1: pattern r at 2; only 1: intuition eauto  4 with real).	0.804456949234	106
Coq.Reals.RIneq.Ropp_0	40	2.1	search with cache (only 1: unfold IZR; only 1: ring).	0.0157918930054	11
Coq.Reals.RIneq.Ropp_eq_0_compat	40	0.1.1	search with cache (only 1: intros; only 1: rewrite H; only 1: ring).	0.0164289474487	5
Coq.Reals.RIneq.Ropp_involutive	40	2.0	search with cache (only 1: intros; only 1: ring).	0.381006002426	11
Coq.Reals.RIneq.Ropp_neq_0_compat	40
Coq.Reals.RIneq.Ropp_plus_distr	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0153601169586	3
Coq.Reals.RIneq.Ropp_mult_distr_l	40	0.1	search with cache (only 1: intros; only 1: ring).	0.015851020813	3
Coq.Reals.RIneq.Ropp_mult_distr_l_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0149619579315	2
Coq.Reals.RIneq.Rmult_opp_opp	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0150032043457	2
Coq.Reals.RIneq.Ropp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0150961875916	2
Coq.Reals.RIneq.Ropp_mult_distr_r_reverse	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0151689052582	2
Coq.Reals.RIneq.Rminus_0_r	40	1.0	search with cache (only 1: intros; only 1: ring).	0.0134499073029	3
Coq.Reals.RIneq.Rminus_0_l	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0140137672424	2
Coq.Reals.RIneq.Ropp_minus_distr	40	1.1	search with cache (only 1: intros; only 1: ring).	0.0149419307709	4
Coq.Reals.RIneq.Ropp_minus_distr'	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0194427967072	2
Coq.Reals.RIneq.Rminus_diag_eq	40	9.0.1	search with cache (only 1: intros x y H; only 1: rewrite H; only 1: ring).	6.12433505058	1207
Coq.Reals.RIneq.Rminus_diag_uniq	40
Coq.Reals.RIneq.Rminus_diag_uniq_sym	40
Coq.Reals.RIneq.Rplus_minus	40	1.0.2	search with cache (only 1: intros; only 1: unfold Rminus; only 1: ring).	0.022008895874	15
Coq.Reals.RIneq.Rminus_eq_contra	40	1.4.0	search with cache (only 1: intros; only 1: generalize (total_order_T r1 r2); only 1: intuition eauto  4 with real).	0.0856139659882	21
Coq.Reals.RIneq.Rminus_not_eq	40	0.0.0.0	search with cache (only 1: red; only 1: intros r1 r2 H H0; only 1: apply H; only 1: auto with real).	0.0159299373627	4
Coq.Reals.RIneq.Rminus_not_eq_right	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: apply Rminus_diag_eq; only 1: auto).	0.0169160366058	5
Coq.Reals.RIneq.Rmult_minus_distr_l	40	5.0	search with cache (only 1: intros; only 1: ring).	0.768905162811	20
Coq.Reals.RIneq.Rinv_1	40	2.2	search with cache (only 1: unfold IZR, IPR; only 1: field).	0.0235390663147	13
Coq.Reals.RIneq.Rinv_neq_0_compat	40
Coq.Reals.RIneq.Rinv_involutive	40	0.0.1	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.028776884079	4
Coq.Reals.RIneq.Rinv_mult_distr	40
Coq.Reals.RIneq.Ropp_inv_permute	40	0.0.0	search with cache (only 1: intros; only 1: field; only 1: trivial).	0.0755100250244	3
Coq.Reals.RIneq.Rinv_r_simpl_r	40	1.0.0.0.1.1	search with cache (only 1: intros; only 1: field; only 1: red; only 1: intro; only 1: apply H; only 1: trivial).	0.0508902072906	11
Coq.Reals.RIneq.Rinv_r_simpl_l	40	0.0.3.0.0	search with cache (only 1: intros; only 1: transitivity (1 * r2); only 1: field; only 1: auto with real; only 1: auto with real).	0.0655100345612	16
Coq.Reals.RIneq.Rinv_r_simpl_m	40	0.0.5.0.0	search with cache (only 1: intros; only 1: transitivity (r2 * 1); only 1: field; only 1: auto with real; only 1: auto with real).	0.24797296524	59
Coq.Reals.RIneq.Rinv_mult_simpl	40
Coq.Reals.RIneq.Rplus_gt_compat_l	40	12	search with cache (only 1: intuition).	0.656620025635	227
Coq.Reals.RIneq.Rplus_lt_compat_r	40
Coq.Reals.RIneq.Rplus_gt_compat_r	40	3.1.0.1	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.01580286026	9
Coq.Reals.RIneq.Rplus_le_compat_l	40	4.0.6	search with cache (only 1: generalize Rlt_trans, Rlt_eq_compat; only 1: unfold Rle; only 1: intuition).	0.937183856964	271
Coq.Reals.RIneq.Rplus_ge_compat_l	40	0.0.0.0.3.0.0.0.0.19	search with cache (only 1: unfold Rge; only 1: intros; only 1: elim H; only 1: intro; only 1: left; only 1: auto with zarith real; only 1: intro; only 1: right; only 1: rewrite <- H0; only 1: auto with zarith real).	33.0672781467	11363
Coq.Reals.RIneq.Rplus_le_compat_r	40	3.1.0.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.60126209259	277
Coq.Reals.RIneq.Rplus_ge_compat_r	40	2.1.0.2	search with cache (only 1: intros; only 1: rewrite (Rplus_comm r1 r); only 1: rewrite (Rplus_comm r2 r); only 1: auto with real).	0.0279939174652	9
Coq.Reals.RIneq.Rplus_lt_compat	40
Coq.Reals.RIneq.Rplus_le_compat	40
Coq.Reals.RIneq.Rplus_gt_compat	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Rlt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0163760185242	14
Coq.Reals.RIneq.Rplus_ge_compat	40
Coq.Reals.RIneq.Rplus_lt_le_compat	40
Coq.Reals.RIneq.Rplus_le_lt_compat	40
Coq.Reals.RIneq.Rplus_gt_ge_compat	40	0.0.1.3	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0386810302734	28
Coq.Reals.RIneq.Rplus_ge_gt_compat	40	0.0.2.4	search with cache (only 1: intros; only 1: apply Rlt_le_trans with (r2 + r3); only 1: auto with real; only 1: auto with real).	0.0575129985809	34
Coq.Reals.RIneq.Rplus_lt_0_compat	40	0.1.0.0.3.8	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: auto with real; only 1: auto using Rplus_lt_compat_l with real).	1.01480102539	1046
Coq.Reals.RIneq.Rplus_le_lt_0_compat	40	0.0.0.0.0.10	search with cache (only 1: intros a b; only 1: intros; only 1: apply Rle_lt_trans with (a + 0); only 1: rewrite Rplus_0_r; only 1: assumption; only 1: auto using Rplus_lt_compat_l with real).	4.60362005234	4529
Coq.Reals.RIneq.Rplus_lt_le_0_compat	40
Coq.Reals.RIneq.Rplus_le_le_0_compat	40
Coq.Reals.RIneq.sum_inequa_Rle_lt	40	4.0	search with cache (only 1: intros; only 1: auto with real).	0.134666919708	12
Coq.Reals.RIneq.Rplus_lt_reg_l	40
Coq.Reals.RIneq.Rplus_lt_reg_r	40	3.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: apply CRealLtForget; only 1: apply (CReal_plus_lt_reg_l (Rrepr r)); only 1: rewrite <- Rrepr_plus, <- Rrepr_plus; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: now rewrite 2!(Rplus_comm r)).	1.46309614182	135
Coq.Reals.RIneq.Rplus_le_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_l	40
Coq.Reals.RIneq.Rplus_ge_reg_l	40
Coq.Reals.RIneq.Rplus_le_reg_pos_r	40
Coq.Reals.RIneq.Rplus_lt_reg_pos_r	40
Coq.Reals.RIneq.Rplus_ge_reg_neg_r	40
Coq.Reals.RIneq.Rplus_gt_reg_neg_r	40
Coq.Reals.RIneq.Ropp_gt_lt_contravar	40
Coq.Reals.RIneq.Ropp_lt_gt_contravar	40	3	search with cache (only 1: intuition).	0.458917140961	41
Coq.Reals.RIneq.Ropp_lt_contravar	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.027704000473	8
Coq.Reals.RIneq.Ropp_gt_contravar	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rgt; only 1: rewrite Rlt_def; only 1: rewrite Rrepr_opp, Rrepr_opp; only 1: apply CRealLtForget; only 1: apply CReal_opp_gt_lt_contravar; only 1: unfold Rgt in H; only 1: rewrite Rlt_def in H; only 1: apply CRealLtEpsilon; only 1: exact H).	0.0300250053406	10
Coq.Reals.RIneq.Ropp_le_ge_contravar	40	0.2.0.4.0	search with cache (only 1: destruct 1; only 1: red; only 1: auto with real; only 1: red; only 1: auto with real).	0.198507070541	77
Coq.Reals.RIneq.Ropp_ge_le_contravar	40	3.0	search with cache (only 1: unfold Rge; only 1: intuition).	0.065328836441	35
Coq.Reals.RIneq.Ropp_le_contravar	40	0.0.0.0	search with cache (only 1: unfold Rle; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0300409793854	4
Coq.Reals.RIneq.Ropp_ge_contravar	40	0.0.0.0	search with cache (only 1: unfold Rge; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0317530632019	4
Coq.Reals.RIneq.Ropp_0_lt_gt_contravar	40
Coq.Reals.RIneq.Ropp_0_gt_lt_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0129671096802	4
Coq.Reals.RIneq.Ropp_lt_gt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0128948688507	4
Coq.Reals.RIneq.Ropp_gt_lt_0_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0131030082703	4
Coq.Reals.RIneq.Ropp_0_le_ge_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.0131058692932	4
Coq.Reals.RIneq.Ropp_0_ge_le_contravar	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	0.014387845993	4
Coq.Reals.RIneq.Ropp_lt_cancel	40
Coq.Reals.RIneq.Ropp_gt_cancel	40	0.0.1	search with cache (only 1: intros; only 1: red; only 1: auto with real).	0.00935292243958	4
Coq.Reals.RIneq.Ropp_le_cancel	40	0.0.0.5	search with cache (only 1: intros x y H'; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.385499000549	221
Coq.Reals.RIneq.Ropp_ge_cancel	40	0.0.0.3	search with cache (only 1: intros x y H; only 1: rewrite <- (Ropp_involutive x); only 1: rewrite <- (Ropp_involutive y); only 1: auto with real).	0.144148826599	45
Coq.Reals.RIneq.Rmult_lt_compat_r	40	3.4.0	search with cache (only 1: intros; only 1: rewrite <- 2!(Rmult_comm r); only 1: auto with real).	0.0162351131439	10
Coq.Reals.RIneq.Rmult_gt_compat_r	40	6	search with cache (only 1: eauto using Rlt_trans with rorders).	0.198751926422	153
Coq.Reals.RIneq.Rmult_gt_compat_l	40	2.0.8	search with cache (only 1: unfold Rgt; only 1: intros; only 1: auto with real).	0.502235889435	456
Coq.Reals.RIneq.Rmult_le_compat_l	40
Coq.Reals.RIneq.Rmult_le_compat_r	40
Coq.Reals.RIneq.Rmult_ge_compat_l	40
Coq.Reals.RIneq.Rmult_ge_compat_r	40
Coq.Reals.RIneq.Rmult_le_compat	40
Coq.Reals.RIneq.Rmult_ge_compat	40	0.0.0.16	search with cache (only 1: intros n m p q; only 1: intros; only 1: generalize (Rlt_le_dec m q); only 1: intuition).	1.36701703072	1209
Coq.Reals.RIneq.Rmult_gt_0_lt_compat	40
Coq.Reals.RIneq.Rmult_le_0_lt_compat	40
Coq.Reals.RIneq.Rmult_lt_0_compat	40
Coq.Reals.RIneq.Rmult_le_compat_neg_l	40
Coq.Reals.RIneq.Rmult_le_ge_compat_neg_l	40	0.1.0.0.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0247569084167	6
Coq.Reals.RIneq.Rmult_lt_gt_compat_neg_l	40	0.1.0.6.0	search with cache (only 1: intros; only 1: replace r with (- - r); only 1: do 2 rewrite (Ropp_mult_distr_l_reverse (- r)); only 1: auto with real; only 1: auto with real).	0.0818049907684	88
Coq.Reals.RIneq.Rmult_lt_reg_l	40
Coq.Reals.RIneq.Rmult_lt_reg_r	40
Coq.Reals.RIneq.Rmult_gt_reg_l	40	3.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: apply Rmult_lt_reg_l with r; only 1: exact H; only 1: auto with real).	0.0344128608704	13
Coq.Reals.RIneq.Rmult_le_reg_l	40
Coq.Reals.RIneq.Rmult_le_reg_r	40
Coq.Reals.RIneq.Rlt_minus	40
Coq.Reals.RIneq.Rgt_minus	40	0.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: apply (Rplus_lt_reg_l r2); only 1: replace (r2 + (r1 - r2)) with r1 by ring; only 1: now rewrite Rplus_0_r).	0.0218181610107	5
Coq.Reals.RIneq.Rlt_Rminus	40
Coq.Reals.RIneq.Rle_minus	40	1.4.0.1	search with cache (only 1: red; only 1: intros r1 r2 [H| H]; only 1: auto with real; only 1: auto with real).	0.0841898918152	27
Coq.Reals.RIneq.Rge_minus	40
Coq.Reals.RIneq.Rminus_lt	40
Coq.Reals.RIneq.Rminus_gt	40	0.0.0.8.0.0.0.0	search with cache (only 1: intros; only 1: replace r1 with (r1 - r2 + r2); only 1: pattern r2 at 3; only 1: replace r2 with (0 + r2); only 1: apply (Rplus_lt_reg_l r2); only 1: auto with real; only 1: auto with real; only 1: ring).	6.29264879227	4614
Coq.Reals.RIneq.Rminus_gt_0_lt	40
Coq.Reals.RIneq.Rminus_le	40	0.0.0.0.0.4	search with cache (only 1: intros; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	0.555824041367	251
Coq.Reals.RIneq.Rminus_ge	40	0.0.0.1.1.7.5	search with cache (only 1: intros; only 1: apply Rle_ge; only 1: replace r2 with (0 + r2); only 1: replace r1 with (r1 - r2 + r2); only 1: auto with real; only 1: ring; only 1: auto with real).	19.2108948231	11887
Coq.Reals.RIneq.tech_Rplus	40
Coq.Reals.RIneq.Rle_0_sqr	40
Coq.Reals.RIneq.Rlt_0_sqr	40
Coq.Reals.RIneq.Rplus_sqr_eq_0_l	40
Coq.Reals.RIneq.Rplus_sqr_eq_0	40
Coq.Reals.RIneq.Rlt_0_1	40	0.1.0.0.0.0.1	search with cache (only 1: replace 1 with (0 + 1); only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: rewrite Rplus_comm; only 1: apply Rlt_n_Sn; only 1: apply Rplus_0_l).	0.0233180522919	15
Coq.Reals.RIneq.Rle_0_1	40	0.0.0.1	search with cache (only 1: replace 1 with 1²; only 1: auto with real; only 1: unfold Rsqr; only 1: auto with real).	0.0107910633087	5
Coq.Reals.RIneq.Rinv_0_lt_compat	40
Coq.Reals.RIneq.Rinv_lt_0_compat	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Rnot_le_lt; only 1: red; only 1: intros; only 1: absurd (1 <= 0); only 1: auto with real; only 1: replace 1 with (r * / r); only 1: replace 0 with (r * 0); only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.519438028336	225
Coq.Reals.RIneq.Rinv_lt_contravar	40
Coq.Reals.RIneq.Rinv_1_lt_contravar	40
Coq.Reals.RIneq.Rle_lt_0_plus_1	40	0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (0 + 0); only 1: auto with real; only 1: auto with real).	0.013503074646	4
Coq.Reals.RIneq.Rlt_plus_1	40
Coq.Reals.RIneq.tech_Rgt_minus	40	0.0.0.0.0.0.1.11	search with cache (only 1: intros x y; only 1: intros Eq0; only 1: pattern x at 1; only 1: rewrite <- (Rplus_0_r x); only 1: apply Rplus_lt_compat_l; only 1: replace 0 with (- 0); only 1: auto with real; only 1: auto with real).	16.4109618664	14162
Coq.Reals.RIneq.S_INR	40
Coq.Reals.RIneq.S_O_plus_INR	40	0.0.0.9.0	search with cache (only 1: intro; only 1: rewrite Rplus_comm; only 1: case n; only 1: auto with real; only 1: auto with real).	3.34901618958	1142
Coq.Reals.RIneq.plus_INR	40
Coq.Reals.RIneq.minus_INR	40
Coq.Reals.RIneq.mult_INR	40
Coq.Reals.RIneq.pow_INR	40
Coq.Reals.RIneq.lt_0_INR	40
Coq.Reals.RIneq.lt_INR	40
Coq.Reals.RIneq.lt_1_INR	40
Coq.Reals.RIneq.pos_INR_nat_of_P	40
Coq.Reals.RIneq.pos_INR	40
Coq.Reals.RIneq.INR_lt	40
Coq.Reals.RIneq.le_INR	40	2.3.4	search with cache (only 1: simple induction 1; only 1: auto with real; only 1: auto with arith real).	0.511426210403	488
Coq.Reals.RIneq.INR_not_0	40	4.0.0.0.0	search with cache (only 1: red; only 1: intros; only 1: elim H; only 1: rewrite H0; only 1: trivial).	0.0209200382233	9
Coq.Reals.RIneq.not_0_INR	40
Coq.Reals.RIneq.not_INR	40
Coq.Reals.RIneq.INR_eq	40
Coq.Reals.RIneq.INR_le	40
Coq.Reals.RIneq.not_1_INR	40	2.0.0.1	search with cache (only 1: red; only 1: intros n H H1; only 1: apply H; only 1: now apply not_INR in H).	0.332539081573	162
Coq.Reals.RIneq.IZN	40
Coq.Reals.RIneq.INR_IPR	40
Coq.Reals.RIneq.INR_IZR_INZ	40
Coq.Reals.RIneq.plus_IZR_NEG_POS	40
Coq.Reals.RIneq.plus_IZR	40
Coq.Reals.RIneq.mult_IZR	40
Coq.Reals.RIneq.pow_IZR	40
Coq.Reals.RIneq.succ_IZR	40	4.5.0.0.0.2.2.0.0	search with cache (only 1: intro t; only 1: destruct t; only 1: auto with real; only 1: simpl; only 1: unfold IZR; only 1: rewrite <- 3!INR_IPR, Pos2Nat.inj_add; only 1: apply plus_INR; only 1: rewrite Rplus_comm; only 1: apply plus_IZR_NEG_POS).	24.1389331818	20138
Coq.Reals.RIneq.opp_IZR	40	2.4.3.2.6.4	search with cache (only 1: intro; only 1: unfold IZR; only 1: case n; only 1: auto with real; only 1: auto with real; only 1: auto with real).	3.51976013184	3940
Coq.Reals.RIneq.minus_IZR	40
Coq.Reals.RIneq.Z_R_minus	40
Coq.Reals.RIneq.lt_0_IZR	40
Coq.Reals.RIneq.lt_IZR	40
Coq.Reals.RIneq.eq_IZR_R0	40
Coq.Reals.RIneq.eq_IZR	40
Coq.Reals.RIneq.not_0_IZR	40
Coq.Reals.RIneq.le_0_IZR	40
Coq.Reals.RIneq.le_IZR	40
Coq.Reals.RIneq.le_IZR_R1	40
Coq.Reals.RIneq.IZR_ge	40
Coq.Reals.RIneq.IZR_le	40
Coq.Reals.RIneq.IZR_lt	40
Coq.Reals.RIneq.IZR_neq	40	0.2.0.0.0.0	search with cache (only 1: intros z1 z2 H; only 1: red; only 1: intros H0; only 1: case H; only 1: apply eq_IZR; only 1: auto with zarith real).	0.0148220062256	8
Coq.Reals.RIneq.one_IZR_lt1	40
Coq.Reals.RIneq.one_IZR_r_R1	40
Coq.Reals.RIneq.single_z_r_R1	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: intros; only 1: apply Zminus_eq; only 1: apply one_IZR_lt1; only 1: rewrite <- Z_R_minus; only 1: split; only 1: replace (-1) with (r - (r + 1)); only 1: unfold Rminus; only 1: apply Rplus_lt_le_compat; only 1: auto with real; only 1: auto with real; only 1: ring; only 1: replace 1 with (r + 1 - r); only 1: unfold Rminus; only 1: apply Rplus_le_lt_compat; only 1: auto with real; only 1: auto with real; only 1: ring).	10.5946550369	7067
Coq.Reals.RIneq.tech_single_z_r_R1	40
Coq.Reals.RIneq.Rmult_le_pos	40	0.0.1.1	search with cache (only 1: intros; only 1: replace 0 with (0 * r2); only 1: auto with real; only 1: auto with real).	0.15088891983	109
Coq.Reals.RIneq.Rinv_le_contravar	40
Coq.Reals.RIneq.Rle_Rinv	40
Coq.Reals.RIneq.Ropp_div	40
Coq.Reals.RIneq.double	40	15.7	search with cache (only 1: intro H1; only 1: ring).	0.339770078659	473
Coq.Reals.RIneq.double_var	40
Coq.Reals.RIneq.R_rm	40
Coq.Reals.RIneq.Zeq_bool_IZR	40
Coq.Reals.RIneq.Rmult_ge_0_gt_0_lt_compat	40	0.1.2.0.1.0	search with cache (only 1: intros; only 1: apply Rle_lt_trans with (r2 * r3); only 1: apply Rmult_le_compat_r; only 1: auto with real; only 1: auto with real; only 1: auto with real).	0.0781500339508	51
Coq.Reals.RIneq.le_epsilon	40
Coq.Reals.RIneq.completeness_weak	40
Coq.Reals.RIneq.Rdiv_lt_0_compat	40	1.2.2.0.8.1	search with cache (only 1: intros a b; only 1: unfold Rdiv; only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	3.21313095093	3675
Coq.Reals.RIneq.Rdiv_plus_distr	40	2.0.0.1	search with cache (only 1: intro; only 1: intros x y; only 1: unfold Rdiv; only 1: ring).	0.0835227966309	7
Coq.Reals.RIneq.Rdiv_minus_distr	40	7.1.1.1	search with cache (only 1: intros x y; only 1: intro; only 1: unfold Rdiv; only 1: ring).	0.32377409935	299
Coq.Reals.RIneq.Req_EM_T	40
Coq.Reals.ClassicalDedekindReals.isLowerCut_hprop	40
Coq.Reals.ClassicalDedekindReals.lowerCutBelow	40
Coq.Reals.ClassicalDedekindReals.lowerCutAbove	40
Coq.Reals.ClassicalDedekindReals.DRealQlim_rec	40
Coq.Reals.ClassicalDedekindReals.DRealQlim	40
Coq.Reals.ClassicalDedekindReals.DRealAbstr	40
Coq.Reals.ClassicalDedekindReals.UpperAboveLower	40
Coq.Reals.ClassicalDedekindReals.DRealRepr	40
Coq.Reals.ClassicalDedekindReals.Rle_antisym	40
Coq.Reals.ClassicalDedekindReals.lowerUpper	40
Coq.Reals.ClassicalDedekindReals.DRealOpen	40
Coq.Reals.ClassicalDedekindReals.DRealReprQ	40
Coq.Reals.ClassicalDedekindReals.DRealReprQup	40
Coq.Reals.ClassicalDedekindReals.DRealQuot1	40
Coq.Reals.ClassicalDedekindReals.DRealAbstrFalse	40
Coq.Reals.ClassicalDedekindReals.DRealQuot2	40
Coq.Reals.ArithProp.minus_neq_O	40
Coq.Reals.ArithProp.le_minusni_n	40
Coq.Reals.ArithProp.lt_minus_O_lt	40
Coq.Reals.ArithProp.even_odd_cor	40	5.1.2	search with cache (only 1: simpl; only 1: fix even_odd_double 1; only 1: auto with arith).	0.130419015884	82
Coq.Reals.ArithProp.le_double	40
Coq.Reals.ArithProp.euclidian_division	40
Coq.Reals.ArithProp.tech8	40	12.0.5.1	search with cache (only 1: intros; only 1: apply le_S_n; only 1: simpl; only 1: auto with arith).	8.52746510506	14177
Coq.Reals.R_Ifp.tech_up	40
Coq.Reals.R_Ifp.up_tech	40
Coq.Reals.R_Ifp.fp_R0	40
Coq.Reals.R_Ifp.for_base_fp	40
Coq.Reals.R_Ifp.base_fp	40
Coq.Reals.R_Ifp.base_Int_part	40
Coq.Reals.R_Ifp.Int_part_INR	40
Coq.Reals.R_Ifp.fp_nat	40
Coq.Reals.R_Ifp.R0_fp_O	40
Coq.Reals.R_Ifp.Rminus_Int_part1	40
Coq.Reals.R_Ifp.Rminus_Int_part2	40
Coq.Reals.R_Ifp.Rminus_fp1	40
Coq.Reals.R_Ifp.Rminus_fp2	40
Coq.Reals.R_Ifp.plus_Int_part1	40
Coq.Reals.R_Ifp.plus_Int_part2	40
Coq.Reals.R_Ifp.plus_frac_part1	40
Coq.Reals.R_Ifp.plus_frac_part2	40
Coq.Reals.Machin.atan_sub_correct	40
Coq.Reals.Machin.tech	40
Coq.Reals.Machin.Machin_2_3	40
Coq.Reals.Machin.Machin_4_5_239	40
Coq.Reals.Machin.Machin_2_3_7	40
Coq.Reals.Machin.PI_2_3_7_ineq	40
Coq.Reals.RiemannInt.phi_sequence_prop	40
Coq.Reals.RiemannInt.RiemannInt_P1	40
Coq.Reals.RiemannInt.RiemannInt_P2	40
Coq.Reals.RiemannInt.RiemannInt_P3	40
Coq.Reals.RiemannInt.RiemannInt_exists	40
Coq.Reals.RiemannInt.RiemannInt_P4	40
Coq.Reals.RiemannInt.RinvN_pos	40	127	search with cache (only 1: auto with real).	5.52174806595	43639
Coq.Reals.RiemannInt.RinvN_cv	40
Coq.Reals.RiemannInt.Riemann_integrable_ext	40
Coq.Reals.RiemannInt.RiemannInt_P5	40
Coq.Reals.RiemannInt.maxN	40
Coq.Reals.RiemannInt.Heine_cor1	40
Coq.Reals.RiemannInt.Heine_cor2	40
Coq.Reals.RiemannInt.SubEqui_P1	40	1.0.0	search with cache (only 1: simpl; only 1: intros; only 1: reflexivity || apply Rle_antisym).	0.13015794754	50
Coq.Reals.RiemannInt.SubEqui_P2	40
Coq.Reals.RiemannInt.SubEqui_P3	40
Coq.Reals.RiemannInt.SubEqui_P4	40
Coq.Reals.RiemannInt.SubEqui_P5	40
Coq.Reals.RiemannInt.SubEqui_P6	40
Coq.Reals.RiemannInt.SubEqui_P7	40
Coq.Reals.RiemannInt.SubEqui_P8	40
Coq.Reals.RiemannInt.SubEqui_P9	40
Coq.Reals.RiemannInt.RiemannInt_P6	40
Coq.Reals.RiemannInt.RiemannInt_P7	40
Coq.Reals.RiemannInt.continuity_implies_RiemannInt	40
Coq.Reals.RiemannInt.RiemannInt_P8	40
Coq.Reals.RiemannInt.RiemannInt_P9	40
Coq.Reals.RiemannInt.RiemannInt_P10	40
Coq.Reals.RiemannInt.RiemannInt_P11	40
Coq.Reals.RiemannInt.RiemannInt_P12	40
Coq.Reals.RiemannInt.RiemannInt_P13	40
Coq.Reals.RiemannInt.RiemannInt_P14	40
Coq.Reals.RiemannInt.RiemannInt_P15	40
Coq.Reals.RiemannInt.RiemannInt_P16	40
Coq.Reals.RiemannInt.Rle_cv_lim	40
Coq.Reals.RiemannInt.RiemannInt_P17	40
Coq.Reals.RiemannInt.RiemannInt_P18	40
Coq.Reals.RiemannInt.RiemannInt_P19	40
Coq.Reals.RiemannInt.FTC_P1	40
Coq.Reals.RiemannInt.RiemannInt_P20	40
Coq.Reals.RiemannInt.RiemannInt_P21	40
Coq.Reals.RiemannInt.RiemannInt_P22	40
Coq.Reals.RiemannInt.RiemannInt_P23	40
Coq.Reals.RiemannInt.RiemannInt_P24	40
Coq.Reals.RiemannInt.RiemannInt_P25	40
Coq.Reals.RiemannInt.RiemannInt_P26	40
Coq.Reals.RiemannInt.RiemannInt_P27	40
Coq.Reals.RiemannInt.RiemannInt_P28	40
Coq.Reals.RiemannInt.RiemannInt_P29	40
Coq.Reals.RiemannInt.RiemannInt_P30	40
Coq.Reals.RiemannInt.RiemannInt_P31	40
Coq.Reals.RiemannInt.RiemannInt_P32	40
Coq.Reals.RiemannInt.RiemannInt_P33	40
Coq.Reals.RiemannInt.FTC_Riemann	40
Coq.Reals.RiemannInt.RiemannInt_const_bound	40
Coq.Reals.RiemannInt.Riemann_integrable_scal	40
Coq.Reals.RiemannInt.Riemann_integrable_Ropp	40
Coq.Reals.Ranalysis2.formule	40
Coq.Reals.Ranalysis2.maj_term1	40
Coq.Reals.Ranalysis2.maj_term2	40
Coq.Reals.Ranalysis2.maj_term3	40
Coq.Reals.Ranalysis2.maj_term4	40
Coq.Reals.Ranalysis2.D_x_no_cond	40
Coq.Reals.Ranalysis2.Rabs_4	40
Coq.Reals.Ranalysis2.Rlt_4	40
Coq.Reals.Ranalysis2.quadruple	40	4.2	search with cache (only 1: symmetry; only 1: ring).	0.0312910079956	13
Coq.Reals.Ranalysis2.quadruple_var	40	18.33.1	search with cache (only 1: intro; only 1: rewrite double_var; only 1: field).	3.85695886612	7988
Coq.Reals.Ranalysis2.continuous_neq_0	40
Coq.Reals.Rtopology.interior_P1	40
Coq.Reals.Rtopology.interior_P2	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0349819660187	60
Coq.Reals.Rtopology.adherence_P1	40
Coq.Reals.Rtopology.included_trans	40	3.2	search with cache (only 1: intros; only 1: firstorder).	0.100177049637	33
Coq.Reals.Rtopology.interior_P3	40
Coq.Reals.Rtopology.complementary_P1	40	10.19	search with cache (only 1: unfold intersection_domain; only 1: firstorder).	0.61820602417	2549
Coq.Reals.Rtopology.adherence_P2	40
Coq.Reals.Rtopology.adherence_P3	40
Coq.Reals.Rtopology.open_set_P1	40
Coq.Reals.Rtopology.closed_set_P1	40
Coq.Reals.Rtopology.neighbourhood_P1	40	20.0.3	search with cache (only 1: intros P allnot exP; only 1: intros; only 1: firstorder).	8.65260505676	18630
Coq.Reals.Rtopology.open_set_P2	40
Coq.Reals.Rtopology.open_set_P3	40
Coq.Reals.Rtopology.open_set_P4	40	18.3.0	search with cache (only 1: unfold open_set, complementary, point_adherent; only 1: intros del1 H; only 1: elim H).	0.990175962448	3739
Coq.Reals.Rtopology.open_set_P5	40
Coq.Reals.Rtopology.disc_P1	40
Coq.Reals.Rtopology.continuity_P1	40
Coq.Reals.Rtopology.continuity_P2	40
Coq.Reals.Rtopology.continuity_P3	40
Coq.Reals.Rtopology.Rsepare	40
Coq.Reals.Rtopology.restriction_family	40
Coq.Reals.Rtopology.family_P1	40	9.5.1.0.2.12.2.3	search with cache (only 1: intros EM R H; only 1: red; only 1: unfold open_set; only 1: simpl; only 1: intros V0 H6; only 1: intros; only 1: elim H0; only 1: firstorder).	9.78077411652	23239
Coq.Reals.Rtopology.open_set_P6	40
Coq.Reals.Rtopology.compact_P1	40
Coq.Reals.Rtopology.compact_P2	40
Coq.Reals.Rtopology.compact_EMP	40
Coq.Reals.Rtopology.compact_eqDom	40
Coq.Reals.Rtopology.compact_P3	40
Coq.Reals.Rtopology.compact_P4	40
Coq.Reals.Rtopology.compact_P5	40
Coq.Reals.Rtopology.compact_carac	40
Coq.Reals.Rtopology.continuity_compact	40
Coq.Reals.Rtopology.prolongement_C0	40
Coq.Reals.Rtopology.continuity_ab_maj	40
Coq.Reals.Rtopology.continuity_ab_min	40
Coq.Reals.Rtopology.ValAdh_un_exists	40
Coq.Reals.Rtopology.ValAdh_un_prop	40
Coq.Reals.Rtopology.adherence_P4	40
Coq.Reals.Rtopology.compact_P6	40
Coq.Reals.Rtopology.Bolzano_Weierstrass	40
Coq.Reals.Rtopology.is_lub_u	40
Coq.Reals.Rtopology.domain_P1	40
Coq.Reals.Rtopology.Heine	40
Coq.Reals.Raxioms.Rrepr_0	40
Coq.Reals.Raxioms.Rrepr_1	40
Coq.Reals.Raxioms.Rrepr_plus	40
Coq.Reals.Raxioms.Rrepr_opp	40
Coq.Reals.Raxioms.Rrepr_minus	40
Coq.Reals.Raxioms.Rrepr_mult	40
Coq.Reals.Raxioms.Rrepr_inv	40
Coq.Reals.Raxioms.Rrepr_le	40
Coq.Reals.Raxioms.Rrepr_appart	40
Coq.Reals.Raxioms.Rappart_repr	40
Coq.Reals.Raxioms.Rplus_comm	40
Coq.Reals.Raxioms.Rplus_assoc	40	1.14.4.0.0.1	search with cache (only 1: intros; only 1: apply Rquot1; only 1: do 2 rewrite Rrepr_plus; only 1: do 2 rewrite Rrepr_plus; only 1: ring_simplify; only 1: reflexivity).	20.7240309715	3159
Coq.Reals.Raxioms.Rplus_opp_r	40	9.1.14.0.6.0.2	search with cache (only 1: unfold IZR; only 1: intros; only 1: apply Rquot1; only 1: rewrite Rrepr_plus, Rrepr_opp; only 1: ring_simplify; only 1: rewrite R0_def, (Rquot2 0); only 1: reflexivity).	22.8749139309	21838
Coq.Reals.Raxioms.Rplus_0_l	40
Coq.Reals.Raxioms.Rmult_comm	40
Coq.Reals.Raxioms.Rmult_assoc	40
Coq.Reals.Raxioms.Rinv_l	40
Coq.Reals.Raxioms.Rmult_1_l	40
Coq.Reals.Raxioms.R1_neq_R0	40
Coq.Reals.Raxioms.Rmult_plus_distr_l	40
Coq.Reals.Raxioms.Rlt_asym	40
Coq.Reals.Raxioms.Rlt_trans	40
Coq.Reals.Raxioms.Rplus_lt_compat_l	40
Coq.Reals.Raxioms.Rmult_lt_compat_l	40
Coq.Reals.Raxioms.Rrepr_INR	40
Coq.Reals.Raxioms.Rrepr_IPR2	40
Coq.Reals.Raxioms.Rrepr_IPR	40
Coq.Reals.Raxioms.Rrepr_IZR	40
Coq.Reals.Raxioms.archimed	40
Coq.Reals.Raxioms.completeness	40
Coq.Reals.Rseries.EUn_noempty	40
Coq.Reals.Rseries.Un_in_EUn	40
Coq.Reals.Rseries.Un_bound_imp	40	2.1.0.0.3.0.1.4.7.11	search with cache (only 1: unfold Rle; only 1: intros; only 1: intro; only 1: intro; only 1: elim H0; only 1: intro; only 1: intro; only 1: rewrite H1; only 1: unfold Rle; only 1: trivial).	28.7559940815	60183
Coq.Reals.Rseries.growing_prop	40
Coq.Reals.Rseries.Un_cv_crit_lub	40
Coq.Reals.Rseries.Un_cv_crit	40
Coq.Reals.Rseries.finite_greater	40
Coq.Reals.Rseries.cauchy_bound	40
Coq.Reals.Rseries.GP_infinite	40
Coq.Reals.Rseries.CV_shift	40
Coq.Reals.Rseries.CV_shift'	40	0.0.0.6.0.0	search with cache (only 1: intros f' k l cvfk eps ep; only 1: destruct (cvfk eps ep) as [N Pn]; only 1: exists N; only 1: intros n nN; only 1: apply Pn; only 1: auto with arith).	0.541723966599	308
Coq.Reals.Rseries.Un_growing_shift	40	8.0.2.0.1.12.8	search with cache (only 1: simple induction n; only 1: cut ((n + 1)%nat = S n); only 1: auto; only 1: ring; only 1: simpl; only 1: intro m; only 1: auto).	5.44757795334	12299
Coq.Reals.Binomial.pascal_step1	40
Coq.Reals.Binomial.pascal_step2	40
Coq.Reals.Binomial.pascal_step3	40
Coq.Reals.Binomial.pascal	40
Coq.Reals.Binomial.binomial	40
Coq.Reals.PSeries_reg.Boule_convex	40
Coq.Reals.PSeries_reg.boule_of_interval	40
Coq.Reals.PSeries_reg.boule_in_interval	40
Coq.Reals.PSeries_reg.Ball_in_inter	40
Coq.Reals.PSeries_reg.Boule_center	40	0.0.1.1.0.20.5.12	search with cache (only 1: intros y h; only 1: unfold Boule; only 1: destruct h as [cmp1 cmp2]; only 1: simpl; only 1: unfold Rminus; only 1: rewrite Rplus_opp_r; only 1: rewrite Rabs_R0; only 1: assumption).	17.4094269276	41114
Coq.Reals.PSeries_reg.CVN_CVU	40
Coq.Reals.PSeries_reg.CVU_continuity	40
Coq.Reals.PSeries_reg.continuity_pt_finite_SF	40
Coq.Reals.PSeries_reg.SFL_continuity_pt	40
Coq.Reals.PSeries_reg.SFL_continuity	40
Coq.Reals.PSeries_reg.CVN_R_CVS	40
Coq.Reals.PSeries_reg.CVU_cv	40
Coq.Reals.PSeries_reg.CVU_ext_lim	40
Coq.Reals.PSeries_reg.CVU_derivable	40
Coq.Reals.Ranalysis_reg.AppVar	40
Coq.Reals.MVT.MVT	40
Coq.Reals.MVT.MVT_cor1	40
Coq.Reals.MVT.MVT_cor2	40
Coq.Reals.MVT.MVT_cor3	40
Coq.Reals.MVT.Rolle	40
Coq.Reals.MVT.nonneg_derivative_1	40
Coq.Reals.MVT.nonpos_derivative_0	40
Coq.Reals.MVT.increasing_decreasing_opp	40
Coq.Reals.MVT.nonpos_derivative_1	40
Coq.Reals.MVT.positive_derivative	40
Coq.Reals.MVT.strictincreasing_strictdecreasing_opp	40
Coq.Reals.MVT.negative_derivative	40
Coq.Reals.MVT.null_derivative_0	40
Coq.Reals.MVT.increasing_decreasing	40
Coq.Reals.MVT.null_derivative_1	40
Coq.Reals.MVT.derive_increasing_interv_ax	40
Coq.Reals.MVT.derive_increasing_interv	40
Coq.Reals.MVT.derive_increasing_interv_var	40
Coq.Reals.MVT.IAF	40
Coq.Reals.MVT.IAF_var	40
Coq.Reals.MVT.null_derivative_loc	40
Coq.Reals.MVT.antiderivative_Ucte	40
Coq.Reals.MVT.MVT_abs	40
Coq.Reals.Ranalysis1.continuity_pt_locally_ext	40
Coq.Reals.Ranalysis1.continuity_pt_plus	40
Coq.Reals.Ranalysis1.continuity_pt_opp	40
Coq.Reals.Ranalysis1.continuity_pt_minus	40	0.2.0.1.0.0.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: unfold continue_in; only 1: intros; only 1: apply limit_plus; only 1: assumption; only 1: apply limit_Ropp; only 1: assumption).	0.0512609481812	10
Coq.Reals.Ranalysis1.continuity_pt_mult	40
Coq.Reals.Ranalysis1.continuity_pt_const	40
Coq.Reals.Ranalysis1.continuity_pt_scal	40
Coq.Reals.Ranalysis1.continuity_pt_inv	40
Coq.Reals.Ranalysis1.div_eq_inv	40	7.0.0	search with cache (only 1: intros; only 1: unfold inv_fct; only 1: reflexivity).	0.0325191020966	10
Coq.Reals.Ranalysis1.continuity_pt_div	40	0.0.1.0.3.1.0	search with cache (only 1: intros; only 1: unfold continuity_pt; only 1: apply limit_mul; only 1: assumption; only 1: apply limit_inv; only 1: assumption; only 1: assumption).	0.615386962891	132
Coq.Reals.Ranalysis1.continuity_pt_comp	40
Coq.Reals.Ranalysis1.continuity_plus	40	2.2.0.18.3.0	search with cache (only 1: unfold continuity_pt, plus_fct; only 1: intros; only 1: intro; only 1: apply limit_plus; only 1: apply H; only 1: apply H0).	4.61327695847	3635
Coq.Reals.Ranalysis1.continuity_opp	40
Coq.Reals.Ranalysis1.continuity_minus	40	2.2.0.4.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, minus_fct; only 1: intros; only 1: apply limit_minus; only 1: apply H; only 1: apply H0).	4.19995117188	1845
Coq.Reals.Ranalysis1.continuity_mult	40	2.2.0.1.0.0	search with cache (only 1: unfold continuity; only 1: unfold continuity_pt, mult_fct; only 1: intros; only 1: apply limit_mul; only 1: apply H; only 1: apply H0).	0.97763299942	326
Coq.Reals.Ranalysis1.continuity_const	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold continuity; only 1: unfold constant, continuity_pt; only 1: unfold continue_in; only 1: unfold limit1_in; only 1: unfold limit_in; only 1: intros; only 1: exists 1; only 1: split; only 1: apply Rlt_0_1; only 1: intros; only 1: generalize (H x x0); only 1: intro; only 1: rewrite H2; only 1: simpl; only 1: rewrite R_dist_eq; only 1: assumption).	4.17753314972	2394
Coq.Reals.Ranalysis1.continuity_scal	40
Coq.Reals.Ranalysis1.continuity_inv	40
Coq.Reals.Ranalysis1.continuity_div	40
Coq.Reals.Ranalysis1.continuity_comp	40
Coq.Reals.Ranalysis1.uniqueness_step1	40
Coq.Reals.Ranalysis1.uniqueness_step2	40
Coq.Reals.Ranalysis1.uniqueness_step3	40
Coq.Reals.Ranalysis1.uniqueness_limite	40
Coq.Reals.Ranalysis1.derive_pt_eq	40
Coq.Reals.Ranalysis1.derive_pt_eq_0	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derivable_pt_abs in H1; only 1: pose proof (uniqueness_limite _ _ _ _ H H1) as H2; only 1: unfold derive_pt; only 1: unfold derivable_pt_abs; only 1: symmetry; only 1: assumption).	0.0545229911804	8
Coq.Reals.Ranalysis1.derive_pt_eq_1	40	0.0.0.0.0	search with cache (only 1: intros; only 1: pose proof (proj2_sig pr) as H1; only 1: unfold derive_pt in H; only 1: rewrite H in H1; only 1: assumption).	0.0399119853973	5
Coq.Reals.Ranalysis1.derive_pt_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_D_in	40
Coq.Reals.Ranalysis1.derivable_pt_lim_ext	40
Coq.Reals.Ranalysis1.derivable_pt_lim_locally_ext	40
Coq.Reals.Ranalysis1.derivable_derive	40
Coq.Reals.Ranalysis1.derivable_continuous_pt	40
Coq.Reals.Ranalysis1.derivable_continuous	40
Coq.Reals.Ranalysis1.derivable_pt_lim_plus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_opp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_minus	40
Coq.Reals.Ranalysis1.derivable_pt_lim_mult	40
Coq.Reals.Ranalysis1.derivable_pt_lim_const	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_div_scal	40
Coq.Reals.Ranalysis1.derivable_pt_lim_scal_right	40
Coq.Reals.Ranalysis1.derivable_pt_lim_id	40
Coq.Reals.Ranalysis1.derivable_pt_lim_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_lim_comp	40
Coq.Reals.Ranalysis1.derivable_pt_plus	40
Coq.Reals.Ranalysis1.derivable_pt_opp	40
Coq.Reals.Ranalysis1.derivable_pt_minus	40
Coq.Reals.Ranalysis1.derivable_pt_mult	40
Coq.Reals.Ranalysis1.derivable_pt_const	40
Coq.Reals.Ranalysis1.derivable_pt_scal	40
Coq.Reals.Ranalysis1.derivable_pt_id	40
Coq.Reals.Ranalysis1.derivable_pt_Rsqr	40
Coq.Reals.Ranalysis1.derivable_pt_comp	40
Coq.Reals.Ranalysis1.derivable_plus	40
Coq.Reals.Ranalysis1.derivable_opp	40
Coq.Reals.Ranalysis1.derivable_minus	40
Coq.Reals.Ranalysis1.derivable_mult	40
Coq.Reals.Ranalysis1.derivable_const	40	0.2.0	search with cache (only 1: intros; only 1: exists 0; only 1: apply derivable_pt_lim_const).	0.0297410488129	12
Coq.Reals.Ranalysis1.derivable_scal	40
Coq.Reals.Ranalysis1.derivable_id	40	0.0.0.0.0	search with cache (only 1: unfold derivable, continuity; only 1: unfold derivable_pt; only 1: intro; only 1: exists 1; only 1: apply derivable_pt_lim_id).	0.0320010185242	5
Coq.Reals.Ranalysis1.derivable_Rsqr	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (2 * x); only 1: apply derivable_pt_lim_Rsqr).	0.0331318378448	5
Coq.Reals.Ranalysis1.derivable_comp	40
Coq.Reals.Ranalysis1.derive_pt_plus	40
Coq.Reals.Ranalysis1.derive_pt_opp	40	2.1.15.0.1	search with cache (only 1: unfold derivable_pt; only 1: intros f x X; only 1: apply derive_pt_eq_0; only 1: elim X; only 1: apply derivable_pt_lim_opp).	11.8675990105	11743
Coq.Reals.Ranalysis1.derive_pt_minus	40
Coq.Reals.Ranalysis1.derive_pt_mult	40
Coq.Reals.Ranalysis1.derive_pt_const	40	2.14.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_const).	2.69568800926	2486
Coq.Reals.Ranalysis1.derive_pt_scal	40
Coq.Reals.Ranalysis1.derive_pt_id	40	1.9.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_id).	0.19468998909	105
Coq.Reals.Ranalysis1.derive_pt_Rsqr	40	1.12.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_Rsqr).	0.878757953644	413
Coq.Reals.Ranalysis1.derive_pt_comp	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow_pos	40
Coq.Reals.Ranalysis1.derivable_pt_lim_pow	40
Coq.Reals.Ranalysis1.derivable_pt_pow	40
Coq.Reals.Ranalysis1.derivable_pow	40	0.0.0.0.1	search with cache (only 1: unfold derivable, continuity; only 1: intros; only 1: unfold derivable_pt; only 1: exists (INR n * x ^ Init.Nat.pred n); only 1: apply derivable_pt_lim_pow).	0.0472958087921	24
Coq.Reals.Ranalysis1.derive_pt_pow	40
Coq.Reals.Ranalysis1.pr_nu	40	0.0.2.3.2.0.0.0.2.1.1.0	search with cache (only 1: intros; only 1: pose proof (derivable_derive (- f)%F x (derivable_pt_opp _ _ pr1)) as H0; only 1: elim H0; only 1: elim H0; only 1: clear H0; only 1: intros l2 H0; only 1: intros l1 H; only 1: apply derive_pt_eq_0; only 1: pose proof (proj2_sig pr1) as H3; only 1: pose proof (proj2_sig pr2) as H4; only 1: unfold derive_pt in H0; only 1: assumption).	17.414265871	14049
Coq.Reals.Ranalysis1.deriv_maximum	40
Coq.Reals.Ranalysis1.deriv_minimum	40
Coq.Reals.Ranalysis1.deriv_constant2	40
Coq.Reals.Ranalysis1.nonneg_derivative_0	40
Coq.Reals.SeqProp.growing_cv	40
Coq.Reals.SeqProp.decreasing_growing	40
Coq.Reals.SeqProp.decreasing_cv	40
Coq.Reals.SeqProp.ub_to_lub	40
Coq.Reals.SeqProp.lb_to_glb	40
Coq.Reals.SeqProp.maj_ss	40
Coq.Reals.SeqProp.min_ss	40	0.0.0.0.0.0.0.2.1.0.1.0	search with cache (only 1: intros; only 1: elim H; only 1: intros; only 1: unfold is_upper_bound in H0; only 1: exists x; only 1: unfold is_upper_bound; only 1: intros; only 1: apply H0; only 1: elim H1; only 1: intros; only 1: exists (k + x1)%nat; only 1: assumption).	2.06624412537	1369
Coq.Reals.SeqProp.Wn_decreasing	40
Coq.Reals.SeqProp.Vn_growing	40
Coq.Reals.SeqProp.Vn_Un_Wn_order	40
Coq.Reals.SeqProp.min_maj	40
Coq.Reals.SeqProp.maj_min	40
Coq.Reals.SeqProp.cauchy_maj	40
Coq.Reals.SeqProp.cauchy_opp	40
Coq.Reals.SeqProp.cauchy_min	40
Coq.Reals.SeqProp.maj_cv	40
Coq.Reals.SeqProp.min_cv	40
Coq.Reals.SeqProp.cond_eq	40
Coq.Reals.SeqProp.not_Rlt	40
Coq.Reals.SeqProp.approx_maj	40
Coq.Reals.SeqProp.approx_min	40
Coq.Reals.SeqProp.UL_sequence	40
Coq.Reals.SeqProp.CV_plus	40
Coq.Reals.SeqProp.cv_cvabs	40
Coq.Reals.SeqProp.CV_Cauchy	40
Coq.Reals.SeqProp.maj_by_pos	40
Coq.Reals.SeqProp.CV_mult	40
Coq.Reals.SeqProp.tech9	40
Coq.Reals.SeqProp.tech13	40
Coq.Reals.SeqProp.growing_ineq	40
Coq.Reals.SeqProp.CV_opp	40
Coq.Reals.SeqProp.decreasing_ineq	40
Coq.Reals.SeqProp.CV_minus	40
Coq.Reals.SeqProp.cv_infty_cv_R0	40
Coq.Reals.SeqProp.decreasing_prop	40
Coq.Reals.SeqProp.cv_speed_pow_fact	40
Coq.Reals.Rcomplete.R_complete	40
Coq.Reals.Rtrigo_calc.tan_PI	40
Coq.Reals.Rtrigo_calc.sin_3PI2	40
Coq.Reals.Rtrigo_calc.tan_2PI	40
Coq.Reals.Rtrigo_calc.sin_cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI3_cos_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI6_cos_PI3	40
Coq.Reals.Rtrigo_calc.PI6_RGT_0	40
Coq.Reals.Rtrigo_calc.PI6_RLT_PI2	40
Coq.Reals.Rtrigo_calc.sin_PI6	40
Coq.Reals.Rtrigo_calc.sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.R1_sqrt2_neq_0	40
Coq.Reals.Rtrigo_calc.sqrt3_2_neq_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt2_0	40
Coq.Reals.Rtrigo_calc.Rlt_sqrt3_0	40
Coq.Reals.Rtrigo_calc.PI4_RGT_0	40	2.0.0.0.1	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.0173408985138	8
Coq.Reals.Rtrigo_calc.cos_PI4	40
Coq.Reals.Rtrigo_calc.sin_PI4	40
Coq.Reals.Rtrigo_calc.tan_PI4	40
Coq.Reals.Rtrigo_calc.cos_3PI4	40
Coq.Reals.Rtrigo_calc.sin_3PI4	40
Coq.Reals.Rtrigo_calc.cos_PI6	40
Coq.Reals.Rtrigo_calc.tan_PI6	40
Coq.Reals.Rtrigo_calc.sin_PI3	40
Coq.Reals.Rtrigo_calc.cos_PI3	40
Coq.Reals.Rtrigo_calc.tan_PI3	40
Coq.Reals.Rtrigo_calc.sin_2PI3	40
Coq.Reals.Rtrigo_calc.cos_2PI3	40
Coq.Reals.Rtrigo_calc.tan_2PI3	40
Coq.Reals.Rtrigo_calc.cos_5PI4	40
Coq.Reals.Rtrigo_calc.sin_5PI4	40	0.0.1.4.8.0.6.0	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite Rmult_0_r; only 1: rewrite cos_PI; only 1: rewrite sin_PI4; only 1: unfold Rdiv; only 1: ring).	15.6395390034	6958
Coq.Reals.Rtrigo_calc.sin_cos5PI4	40	0.0.0.0.2.5.6	search with cache (only 1: replace (5 * (PI / 4)) with (PI / 4 + PI) by field; only 1: rewrite neg_cos; only 1: rewrite neg_sin; only 1: rewrite cos_sin; only 1: replace (PI / 2 + PI / 4) with (- (PI / 4) + PI) by field; only 1: rewrite neg_sin, sin_neg; only 1: ring).	1.4201939106	595
Coq.Reals.Rtrigo_calc.Rgt_3PI2_0	40	0.0.0.0.0.0.18	search with cache (only 1: unfold Rdiv; only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply Rmult_lt_0_compat; only 1: apply PI_RGT_0; only 1: apply Rinv_0_lt_compat; only 1: prove_sup0).	0.642735958099	531
Coq.Reals.Rtrigo_calc.Rgt_2PI_0	40	0.0.0	search with cache (only 1: apply Rmult_lt_0_compat; only 1: prove_sup0; only 1: apply PI_RGT_0).	0.0121879577637	3
Coq.Reals.Rtrigo_calc.Rlt_PI_3PI2	40
Coq.Reals.Rtrigo_calc.Rlt_3PI2_2PI	40
Coq.Reals.Rtrigo_calc.rad_deg	40
Coq.Reals.Rtrigo_calc.toRad_inj	40
Coq.Reals.Rtrigo_calc.deg_rad	40
Coq.Reals.Rtrigo_calc.Rsqr_sin_cos_d_one	40
Coq.Reals.Rtrigo_calc.sin_lb_ge_0	40
Coq.Reals.Ranalysis4.derivable_pt_inv	40
Coq.Reals.Ranalysis4.pr_nu_var	40
Coq.Reals.Ranalysis4.pr_nu_var2	40
Coq.Reals.Ranalysis4.derivable_inv	40
Coq.Reals.Ranalysis4.derive_pt_inv	40
Coq.Reals.Ranalysis4.Rabs_derive_1	40
Coq.Reals.Ranalysis4.Rabs_derive_2	40
Coq.Reals.Ranalysis4.Rderivable_pt_abs	40
Coq.Reals.Ranalysis4.Rcontinuity_abs	40
Coq.Reals.Ranalysis4.continuity_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_lim_fs	40
Coq.Reals.Ranalysis4.derivable_pt_lim_finite_sum	40
Coq.Reals.Ranalysis4.derivable_pt_finite_sum	40
Coq.Reals.Ranalysis4.derivable_finite_sum	40	0.0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: unfold derivable_pt; only 1: pose proof (derivable_pt_lim_finite_sum An x N) as H; only 1: induction N as [| N HrecN]; only 1: exists 0; only 1: apply H; only 1: exists (sum_f_R0 (fun k : nat => INR (S k) * An (S k) * x ^ k) (Init.Nat.pred (S N))); only 1: apply H).	0.52556681633	211
Coq.Reals.Ranalysis4.derivable_pt_lim_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_lim_sinh	40
Coq.Reals.Ranalysis4.derivable_pt_exp	40
Coq.Reals.Ranalysis4.derivable_pt_cosh	40
Coq.Reals.Ranalysis4.derivable_pt_sinh	40
Coq.Reals.Ranalysis4.derivable_exp	40	0.0.0.0.6	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (exp x); only 1: apply derivable_pt_lim_exp).	0.0743188858032	52
Coq.Reals.Ranalysis4.derivable_cosh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (sinh x); only 1: apply derivable_pt_lim_cosh).	0.0156791210175	5
Coq.Reals.Ranalysis4.derivable_sinh	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: intro; only 1: unfold derivable_pt; only 1: exists (cosh x); only 1: apply derivable_pt_lim_sinh).	0.015175819397	5
Coq.Reals.Ranalysis4.derive_pt_exp	40
Coq.Reals.Ranalysis4.derive_pt_cosh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cosh).	0.42981004715	108
Coq.Reals.Ranalysis4.derive_pt_sinh	40	1.0.0	search with cache (only 1: intro; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_sinh).	0.434041023254	108
Coq.Reals.Ranalysis4.sinh_lt	40
Coq.Reals.Ranalysis3.derivable_pt_lim_div	40
Coq.Reals.Ranalysis3.derivable_pt_div	40
Coq.Reals.Ranalysis3.derivable_div	40
Coq.Reals.Ranalysis3.derive_pt_div	40
Coq.Reals.DiscrR.Rlt_R0_R2	40
Coq.Reals.DiscrR.IZR_eq	40	1.2.1.4	search with cache (only 1: intros g c; only 1: intros; only 1: subst; only 1: reflexivity).	0.0868430137634	116
Coq.Reals.ConstructiveReals.CRlt_asym	40
Coq.Reals.ConstructiveReals.CRlt_proper	40
Coq.Reals.ConstructiveReals.CRle_refl	40
Coq.Reals.ConstructiveReals.CRle_lt_trans	40
Coq.Reals.ConstructiveReals.CRlt_le_trans	40
Coq.Reals.ConstructiveReals.CRle_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans	40
Coq.Reals.ConstructiveReals.CRlt_trans_flip	40
Coq.Reals.ConstructiveReals.CReq_refl	40	0.13.0.13.13.1.0	search with cache (only 1: intros; only 1: destruct (CRltLinear R), p; only 1: split; only 1: intro; only 1: exact (f x x H H); only 1: intro; only 1: exact (f x x H H)).	3.41391682625	11006
Coq.Reals.ConstructiveReals.CReq_sym	40	0.0.0.9	search with cache (only 1: simple induction 1; only 1: split; only 1: assumption; only 1: assumption).	0.407133102417	511
Coq.Reals.ConstructiveReals.CReq_trans	40
Coq.Reals.ConstructiveReals.CR_setoid	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: split; only 1: split; only 1: apply CRle_refl; only 1: apply CRle_refl; only 1: split; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: destruct H; only 1: intro abs; only 1: contradiction; only 1: split; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction; only 1: destruct H, H0; only 1: destruct (CRltLinear R), p; only 1: intro abs; only 1: destruct (s _ y _ abs); only 1: contradiction; only 1: contradiction).	39.4403018951	42747
Coq.Reals.ConstructiveReals.CRplus_0_r	40
Coq.Reals.ConstructiveReals.CRmult_1_r	40
Coq.Reals.ConstructiveReals.CRplus_opp_l	40
Coq.Reals.ConstructiveReals.CRplus_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_l	40
Coq.Reals.ConstructiveReals.CRplus_le_compat_r	40
Coq.Reals.ConstructiveReals.CRplus_le_reg_l	40	0.2.2.0.0	search with cache (only 1: intros; only 1: intros abs; only 1: apply H; only 1: apply CRplus_lt_compat_l; only 1: exact abs).	0.022078037262	13
Coq.Reals.ConstructiveReals.CRplus_le_reg_r	40
Coq.Reals.ConstructiveReals.CRplus_lt_le_compat	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_l	40
Coq.Reals.ConstructiveReals.CRplus_eq_reg_r	40
Coq.Reals.ConstructiveReals.CRopp_involutive	40
Coq.Reals.ConstructiveReals.CRopp_gt_lt_contravar	40
Coq.Reals.ConstructiveReals.CRopp_lt_cancel	40
Coq.Reals.ConstructiveReals.CRopp_plus_distr	40
Coq.Reals.ConstructiveReals.CRmult_plus_distr_l	40
Coq.Reals.ConstructiveReals.CRzero_double	40
Coq.Reals.ConstructiveReals.CRmult_0_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_r	40
Coq.Reals.ConstructiveReals.CRopp_mult_distr_l	40
Coq.Reals.ConstructiveReals.CRmult_lt_compat_r	40
Coq.Reals.ConstructiveReals.CRinv_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_r	40
Coq.Reals.ConstructiveReals.CRmult_lt_reg_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_l	40
Coq.Reals.ConstructiveReals.CRmult_le_compat_r	40
Coq.Reals.ConstructiveReals.CRmult_eq_reg_r	40
Coq.Reals.ConstructiveReals.CR_of_Q_proper	40
Coq.Reals.ConstructiveReals.CR_of_Q_zero	40
Coq.Reals.ConstructiveReals.CR_of_Q_opp	40
Coq.Reals.ConstructiveReals.CR_of_Q_le	40
Coq.Reals.ConstructiveReals.CR_of_Q_pos	40
Coq.Reals.ConstructiveReals.CR_cv_above_rat	40
Coq.Reals.ConstructiveReals.CR_cv_below_rat	40
Coq.Reals.ConstructiveReals.CR_cv_const	40
Coq.Reals.ConstructiveCauchyRealsMult.BoundFromZero	40
Coq.Reals.ConstructiveCauchyRealsMult.QCauchySeq_bounded	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_cauchy	40
Coq.Reals.ConstructiveCauchyRealsMult.linear_max	40	0.2.0.0.1.0.3.0.0.9	search with cache (only 1: intros; only 1: rewrite Pos2Nat.inj_mul; only 1: rewrite max_l; only 1: apply Nat.mul_le_mono_nonneg; only 1: rewrite Pos2Nat.inj_mul; only 1: apply Nat.le_0_l; only 1: apply Nat.le_refl; only 1: apply Nat.le_0_l; only 1: assumption; only 1: apply Nat.le_refl).	1.97674703598	2088
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult	40	29.2	search with cache (only 1: destruct x as [xn limx]; only 1: assumption).	1.51699185371	3430
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_unfold	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc_bounded_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_assoc	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_comm	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_proper_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_0_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_plus_distr_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRingExt	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_isRing	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_morph_T	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_Proper	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	0.613610982895	37
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_morph_T	40	0.0.0.0.1.0.0.0.0	search with cache (only 1: intros x y H; only 1: apply (CReal_plus_eq_reg_l x); only 1: apply (CRealEq_trans _ 0); only 1: apply CReal_plus_opp_r; only 1: apply CRealEq_sym; only 1: apply (CRealEq_trans _ (y + - y)); only 1: apply CReal_plus_proper_r; only 1: apply H; only 1: apply CReal_plus_opp_r).	0.615706920624	37
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_Proper	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_minus_morph_T	40	0.0.0.1	search with cache (only 1: intros x y H z t H0; only 1: unfold CReal_minus; only 1: rewrite H, H0; only 1: reflexivity).	0.0514230728149	5
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_0_r	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0242149829865	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_1_r	40	3.4	search with cache (only 1: intro; only 1: ring).	6.26399517059	200
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_opp_mult_distr_r	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0268261432648	2
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_compat_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_abs_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealArchimedean	40
Coq.Reals.ConstructiveCauchyRealsMult.Rup_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealLtDisjunctEpsilon	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftReal	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealShiftEqual	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealNegShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealPosShift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_neg	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_pos	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_0_lt_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_linear_shift_eq	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_1	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_inv_mult_distr	40
Coq.Reals.ConstructiveCauchyRealsMult.Rinv_eq_compat	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_l	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_lt_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_reg_r	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_l	40	3.3	search with cache (only 1: intros x y z; only 1: apply CReal_mult_proper_l).	0.108011007309	54
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_eq_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: reflexivity).	0.0269191265106	3
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_pos_appart_zero	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_mult_le_compat_l_half	40
Coq.Reals.ConstructiveCauchyRealsMult.CReal_invQ	40
Coq.Reals.ConstructiveCauchyRealsMult.CRealQ_dense	40
Coq.Reals.ConstructiveCauchyRealsMult.inject_Q_mult	40
Coq.Reals.Rtrigo_fun.Alembert_exp	40
Coq.Reals.Alembert.Alembert_C1	40
Coq.Reals.Alembert.Alembert_C2	40
Coq.Reals.Alembert.AlembertC3_step1	40
Coq.Reals.Alembert.AlembertC3_step2	40
Coq.Reals.Alembert.Alembert_C3	40
Coq.Reals.Alembert.Alembert_C4	40
Coq.Reals.Alembert.Alembert_C5	40
Coq.Reals.Alembert.Alembert_C6	40
Coq.Reals.R_sqr.Rsqr_neg	40
Coq.Reals.R_sqr.Rsqr_mult	40	30.0	search with cache (only 1: intros; only 1: ring_Rsqr).	2.692964077	6129
Coq.Reals.R_sqr.Rsqr_plus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0191738605499	2
Coq.Reals.R_sqr.Rsqr_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0193519592285	2
Coq.Reals.R_sqr.Rsqr_neg_minus	40	8.1	search with cache (only 1: intros p q; only 1: ring_Rsqr).	0.0442318916321	74
Coq.Reals.R_sqr.Rsqr_1	40
Coq.Reals.R_sqr.Rsqr_gt_0_0	40
Coq.Reals.R_sqr.Rsqr_pos_lt	40	11.1	search with cache (only 1: intro; only 1: auto with real).	0.907973051071	1160
Coq.Reals.R_sqr.Rsqr_div	40
Coq.Reals.R_sqr.Rsqr_eq_0	40
Coq.Reals.R_sqr.Rsqr_minus_plus	40	1.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0879259109497	19
Coq.Reals.R_sqr.Rsqr_plus_minus	40	0.0	search with cache (only 1: intros; only 1: ring_Rsqr).	0.0770390033722	2
Coq.Reals.R_sqr.Rsqr_incr_0	40
Coq.Reals.R_sqr.Rsqr_incr_0_var	40
Coq.Reals.R_sqr.Rsqr_incr_1	40	1.0.1.5	search with cache (only 1: intro X; only 1: unfold Rsqr; only 1: intros; only 1: auto with real).	0.102653980255	132
Coq.Reals.R_sqr.Rsqr_incrst_0	40
Coq.Reals.R_sqr.Rsqr_incrst_1	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_0	40
Coq.Reals.R_sqr.Rsqr_neg_pos_le_1	40
Coq.Reals.R_sqr.neg_pos_Rsqr_le	40
Coq.Reals.R_sqr.Rsqr_abs	40	0.0.0.8.0	search with cache (only 1: intros; only 1: unfold Rabs; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: ring_Rsqr; only 1: auto with real).	0.420138835907	385
Coq.Reals.R_sqr.Rsqr_le_abs_0	40
Coq.Reals.R_sqr.Rsqr_le_abs_1	40
Coq.Reals.R_sqr.Rsqr_lt_abs_0	40
Coq.Reals.R_sqr.Rsqr_lt_abs_1	40
Coq.Reals.R_sqr.Rsqr_inj	40
Coq.Reals.R_sqr.Rsqr_eq_abs_0	40
Coq.Reals.R_sqr.Rsqr_eq_asb_1	40
Coq.Reals.R_sqr.triangle_rectangle	40
Coq.Reals.R_sqr.triangle_rectangle_lt	40
Coq.Reals.R_sqr.triangle_rectangle_le	40
Coq.Reals.R_sqr.Rsqr_inv	40	0.0.0.0.4.0.0	search with cache (only 1: intro; only 1: intros; only 1: unfold Rsqr; only 1: rewrite Rinv_mult_distr; only 1: reflexivity; only 1: assumption; only 1: assumption).	0.273507118225	161
Coq.Reals.R_sqr.canonical_Rsqr	40
Coq.Reals.R_sqr.Rsqr_eq	40
Coq.Reals.RiemannInt_SF.IZN_var	40
Coq.Reals.RiemannInt_SF.Nzorn	40
Coq.Reals.RiemannInt_SF.StepFun_P1	40	0.6.24.4.8	search with cache (only 1: intros n; only 1: intros x [H1 H2]; only 1: elim H2; only 1: intros d [H4 H5]; only 1: auto).	12.3966360092	32523
Coq.Reals.RiemannInt_SF.StepFun_P2	40
Coq.Reals.RiemannInt_SF.StepFun_P3	40
Coq.Reals.RiemannInt_SF.StepFun_P4	40
Coq.Reals.RiemannInt_SF.StepFun_P5	40
Coq.Reals.RiemannInt_SF.StepFun_P6	40
Coq.Reals.RiemannInt_SF.StepFun_P7	40
Coq.Reals.RiemannInt_SF.StepFun_P8	40
Coq.Reals.RiemannInt_SF.StepFun_P9	40
Coq.Reals.RiemannInt_SF.StepFun_P10	40
Coq.Reals.RiemannInt_SF.StepFun_P11	40
Coq.Reals.RiemannInt_SF.StepFun_P12	40
Coq.Reals.RiemannInt_SF.StepFun_P13	40
Coq.Reals.RiemannInt_SF.StepFun_P14	40
Coq.Reals.RiemannInt_SF.StepFun_P15	40
Coq.Reals.RiemannInt_SF.StepFun_P16	40
Coq.Reals.RiemannInt_SF.StepFun_P17	40
Coq.Reals.RiemannInt_SF.StepFun_P18	40
Coq.Reals.RiemannInt_SF.StepFun_P19	40
Coq.Reals.RiemannInt_SF.StepFun_P20	40
Coq.Reals.RiemannInt_SF.StepFun_P21	40
Coq.Reals.RiemannInt_SF.StepFun_P22	40
Coq.Reals.RiemannInt_SF.StepFun_P23	40
Coq.Reals.RiemannInt_SF.StepFun_P24	40
Coq.Reals.RiemannInt_SF.StepFun_P25	40
Coq.Reals.RiemannInt_SF.StepFun_P26	40
Coq.Reals.RiemannInt_SF.StepFun_P27	40
Coq.Reals.RiemannInt_SF.StepFun_P28	40
Coq.Reals.RiemannInt_SF.StepFun_P29	40
Coq.Reals.RiemannInt_SF.StepFun_P30	40
Coq.Reals.RiemannInt_SF.StepFun_P31	40
Coq.Reals.RiemannInt_SF.StepFun_P32	40
Coq.Reals.RiemannInt_SF.StepFun_P33	40
Coq.Reals.RiemannInt_SF.StepFun_P34	40
Coq.Reals.RiemannInt_SF.StepFun_P35	40
Coq.Reals.RiemannInt_SF.StepFun_P36	40
Coq.Reals.RiemannInt_SF.StepFun_P37	40
Coq.Reals.RiemannInt_SF.StepFun_P38	40
Coq.Reals.RiemannInt_SF.StepFun_P39	40
Coq.Reals.RiemannInt_SF.StepFun_P40	40
Coq.Reals.RiemannInt_SF.StepFun_P41	40
Coq.Reals.RiemannInt_SF.StepFun_P42	40
Coq.Reals.RiemannInt_SF.StepFun_P43	40
Coq.Reals.RiemannInt_SF.StepFun_P44	40
Coq.Reals.RiemannInt_SF.StepFun_P45	40
Coq.Reals.RiemannInt_SF.StepFun_P46	40
Coq.Reals.Cos_rel.cos_plus_form	40
Coq.Reals.Cos_rel.pow_sqr	40
Coq.Reals.Cos_rel.A1_cvg	40
Coq.Reals.Cos_rel.C1_cvg	40
Coq.Reals.Cos_rel.B1_cvg	40
Coq.Reals.Ranalysis5.f_incr_implies_g_incr_interv	40
Coq.Reals.Ranalysis5.derivable_pt_id_interv	40
Coq.Reals.Ranalysis5.pr_nu_var2_interv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv	40
Coq.Reals.Ranalysis5.leftinv_is_rightinv_interv	40
Coq.Reals.Ranalysis5.IVT_interv_prelim0	40
Coq.Reals.Ranalysis5.IVT_interv_prelim1	40
Coq.Reals.Ranalysis5.IVT_interv	40
Coq.Reals.Ranalysis5.f_interv_is_interv	40
Coq.Reals.Ranalysis5.continuity_pt_recip_prelim	40
Coq.Reals.Ranalysis5.continuity_pt_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_lim_recip_interv	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derivable_pt_recip_interv_prelim1	40	5.0.0	search with cache (only 1: intros f g lb ub lb_lt_ub f_incr_interv f_eq_g g_wf; only 1: intro y_encad1; only 1: intuition).	0.317636966705	37
Coq.Reals.Ranalysis5.derivable_pt_recip_interv	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_0	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv_prelim1_1	40
Coq.Reals.Ranalysis5.derive_pt_recip_interv	40
Coq.Reals.Ranalysis5.ub_lt_2_pos	40
Coq.Reals.Ranalysis5.mkposreal_lb_ub	40
Coq.Reals.Ranalysis5.derivable_pt_lim_CVU	40
Coq.Reals.AltSeries.CV_ALT_step0	40
Coq.Reals.AltSeries.CV_ALT_step1	40
Coq.Reals.AltSeries.CV_ALT_step2	40
Coq.Reals.AltSeries.CV_ALT_step3	40
Coq.Reals.AltSeries.CV_ALT_step4	40
Coq.Reals.AltSeries.CV_ALT	40
Coq.Reals.AltSeries.alternated_series	40
Coq.Reals.AltSeries.alternated_series_ineq	40
Coq.Reals.AltSeries.PI_tg_pos	40
Coq.Reals.AltSeries.PI_tg_decreasing	40
Coq.Reals.AltSeries.PI_tg_cv	40
Coq.Reals.AltSeries.exist_PI	40
Coq.Reals.AltSeries.Alt_PI_ineq	40
Coq.Reals.AltSeries.Alt_PI_RGT_0	40
Coq.Reals.Rminmax.Rmax_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0305290222168	4
Coq.Reals.Rminmax.Rmax_r	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmax_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0306789875031	4
Coq.Reals.Rminmax.Rmin_l	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Rmin_case_strong; only 1: auto using Rle_antisym; only 1: auto using Rle_antisym).	0.0303049087524	4
Coq.Reals.Rminmax.Rmin_r	40	0.0.0.0.0	search with cache (only 1: unfold Rmin; only 1: intros; only 1: destruct Rle_dec as [H'| H']; only 1: reflexivity || (apply Rle_antisym; assumption || auto with real); only 1: reflexivity || (apply Rle_antisym; assumption || auto with real)).	0.0340149402618	5
Coq.Reals.Rminmax.R.plus_max_distr_l	40	0.4.1.0.0.0.0	search with cache (only 1: intros; only 1: apply max_mono; only 1: eauto with *; only 1: repeat red; only 1: unfold Rle; only 1: intros; only 1: intuition).	4.35859799385	396
Coq.Reals.Rminmax.R.plus_max_distr_r	40
Coq.Reals.Rminmax.R.plus_min_distr_l	40	0.0.0.3.0	search with cache (only 1: intros; only 1: apply min_mono; only 1: eauto with *; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0696079730988	8
Coq.Reals.Rminmax.R.plus_min_distr_r	40	0.0.0.1.0	search with cache (only 1: intros; only 1: rewrite (Rplus_comm n p), (Rplus_comm m p), (Rplus_comm _ p); only 1: apply min_monotone; only 1: intros x y; only 1: apply Rplus_le_compat_l).	0.0334138870239	6
Coq.Reals.Rminmax.R.opp_max_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmax_case_strong; only 1: now intros w; rewrite Rmin_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmin_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0329349040985	4
Coq.Reals.Rminmax.R.opp_min_distr	40	0.0.0.0	search with cache (only 1: intros x y; only 1: apply Rmin_case_strong; only 1: now intros w; rewrite Rmax_left; [  | apply Rge_le, Ropp_le_ge_contravar ]; only 1: now intros w; rewrite Rmax_right; [  | apply Rge_le, Ropp_le_ge_contravar ]).	0.0331499576569	4
Coq.Reals.Rminmax.R.minus_max_distr_l	40
Coq.Reals.Rminmax.R.minus_max_distr_r	40
Coq.Reals.Rminmax.R.minus_min_distr_l	40
Coq.Reals.Rminmax.R.minus_min_distr_r	40
Coq.Reals.Rlimit.eps2_Rgt_R0	40	0.0.51.19.3.0	search with cache (only 1: intro; only 1: intro; only 1: unfold Rgt in H; only 1: apply Rmult_lt_0_compat; only 1: auto with real; only 1: auto with real).	9.22591710091	31050
Coq.Reals.Rlimit.eps2	40	4.14	search with cache (only 1: intro; only 1: field).	0.105403900146	181
Coq.Reals.Rlimit.eps4	40	6.5	search with cache (only 1: intro esp; only 1: field).	0.0934121608734	79
Coq.Reals.Rlimit.Rlt_eps2_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.0120570659637	2
Coq.Reals.Rlimit.Rlt_eps4_eps	40	0.0	search with cache (only 1: intros; only 1: lra).	0.012717962265	2
Coq.Reals.Rlimit.prop_eps	40
Coq.Reals.Rlimit.mul_factor_wd	40
Coq.Reals.Rlimit.mul_factor_gt	40
Coq.Reals.Rlimit.mul_factor_gt_f	40
Coq.Reals.Rlimit.tech_limit	40
Coq.Reals.Rlimit.tech_limit_contr	40
Coq.Reals.Rlimit.lim_x	40
Coq.Reals.Rlimit.limit_plus	40
Coq.Reals.Rlimit.limit_Ropp	40
Coq.Reals.Rlimit.limit_minus	40
Coq.Reals.Rlimit.limit_free	40
Coq.Reals.Rlimit.limit_mul	40
Coq.Reals.Rlimit.single_limit	40
Coq.Reals.Rlimit.limit_comp	40
Coq.Reals.Rlimit.limit_inv	40
Coq.Reals.R_sqrt.sqrt_pos	40
Coq.Reals.R_sqrt.sqrt_positivity	40	0.2.0.1.0.0.1	search with cache (only 1: intros x; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [H| H]; only 1: intro; only 1: apply Rle_refl; only 1: intro; only 1: apply Rsqrt_positivity).	0.412987947464	186
Coq.Reals.R_sqrt.sqrt_sqrt	40
Coq.Reals.R_sqrt.sqrt_0	40
Coq.Reals.R_sqrt.sqrt_1	40
Coq.Reals.R_sqrt.sqrt_eq_0	40
Coq.Reals.R_sqrt.sqrt_lem_0	40
Coq.Reals.R_sqrt.sqrt_lem_1	40
Coq.Reals.R_sqrt.sqrt_def	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt; only 1: destruct (Rcase_abs x) as [Hlt| Hge]; only 1: elim (Rlt_irrefl _ (Rlt_le_trans _ _ _ Hlt H)); only 1: rewrite Rsqrt_Rsqrt; only 1: reflexivity).	0.0270330905914	6
Coq.Reals.R_sqrt.sqrt_square	40
Coq.Reals.R_sqrt.sqrt_Rsqr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (Rsqr_inj (sqrt x²) x (sqrt_positivity x² (Rle_0_sqr x)) H); only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x² (Rle_0_sqr x))).	0.0193808078766	5
Coq.Reals.R_sqrt.sqrt_pow2	40
Coq.Reals.R_sqrt.sqrt_Rsqr_abs	40
Coq.Reals.R_sqrt.Rsqr_sqrt	40	0.0.0	search with cache (only 1: intros; only 1: unfold Rsqr; only 1: apply (sqrt_sqrt x H)).	0.0139849185944	3
Coq.Reals.R_sqrt.sqrt_mult_alt	40
Coq.Reals.R_sqrt.sqrt_mult	40
Coq.Reals.R_sqrt.sqrt_lt_R0	40
Coq.Reals.R_sqrt.Rlt_mult_inv_pos	40	0.4.1.0.0	search with cache (only 1: intros; only 1: apply Rmult_lt_0_compat; only 1: assumption; only 1: apply Rinv_0_lt_compat; only 1: assumption).	0.0282390117645	12
Coq.Reals.R_sqrt.Rle_mult_inv_pos	40	0.3.0.0	search with cache (only 1: intros x y H H0; only 1: replace 0 with (x * 0); only 1: auto with real; only 1: ring).	0.23152589798	40
Coq.Reals.R_sqrt.sqrt_div_alt	40
Coq.Reals.R_sqrt.sqrt_div	40
Coq.Reals.R_sqrt.sqrt_lt_0_alt	40
Coq.Reals.R_sqrt.sqrt_lt_0	40
Coq.Reals.R_sqrt.sqrt_lt_1_alt	40
Coq.Reals.R_sqrt.sqrt_lt_1	40
Coq.Reals.R_sqrt.sqrt_le_0	40
Coq.Reals.R_sqrt.sqrt_le_1_alt	40
Coq.Reals.R_sqrt.sqrt_le_1	40
Coq.Reals.R_sqrt.sqrt_inj	40
Coq.Reals.R_sqrt.sqrt_less_alt	40
Coq.Reals.R_sqrt.sqrt_less	40	0.1.0.0.1.1.0.1.6.2	search with cache (only 1: intros x H1; only 1: intros Hx; only 1: pose proof (Rle_lt_trans _ _ _ Rle_0_1 Hx) as Hx1; only 1: apply Rsqr_incrst_0; only 1: rewrite Rsqr_sqrt; only 1: rewrite <- (Rmult_1_l x)  at 1; only 1: now apply Rmult_lt_compat_r; only 1: trivial; only 1: apply sqrt_pos; only 1: trivial).	7.23813819885	3482
Coq.Reals.R_sqrt.sqrt_more	40
Coq.Reals.R_sqrt.sqrt_cauchy	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_1	40
Coq.Reals.R_sqrt.Rsqr_sol_eq_0_0	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_dec	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_epsilon	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_not_epsilon	40
Coq.Reals.ConstructiveRealsLUB.DDlow_below_up	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit_fix	40
Coq.Reals.ConstructiveRealsLUB.DDcut_limit	40
Coq.Reals.ConstructiveRealsLUB.glb_dec_Q	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_glb	40
Coq.Reals.ConstructiveRealsLUB.is_upper_bound_closed	40
Coq.Reals.ConstructiveRealsLUB.sig_lub	40
Coq.Reals.ConstructiveRealsLUB.CR_sig_lub	40
Coq.Reals.Rderiv.cont_deriv	40
Coq.Reals.Rderiv.Dconst	40
Coq.Reals.Rderiv.Dx	40
Coq.Reals.Rderiv.Dadd	40
Coq.Reals.Rderiv.Dmult	40
Coq.Reals.Rderiv.Dmult_const	40
Coq.Reals.Rderiv.Dopp	40
Coq.Reals.Rderiv.Dminus	40
Coq.Reals.Rderiv.Dx_pow_n	40
Coq.Reals.Rderiv.Dcomp	40
Coq.Reals.Rderiv.D_pow_n	40
Coq.Reals.Cauchy_prod.sum_N_predN	40	8.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: elim (Nat.lt_irrefl _ H); only 1: reflexivity).	2.89394283295	933
Coq.Reals.Cauchy_prod.sum_plus	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.122073173523	7
Coq.Reals.Cauchy_prod.cauchy_finite	40
Coq.Reals.Rlogic.sig_forall_dec	40
Coq.Reals.Rlogic.not_not_archimedean	40
Coq.Reals.Rlogic.sig_not_dec	40
Coq.Reals.Rtrigo1.CVN_R_cos	40
Coq.Reals.Rtrigo1.continuity_cos	40
Coq.Reals.Rtrigo1.sin_gt_cos_7_8	40
Coq.Reals.Rtrigo1.PI_2_aux	40
Coq.Reals.Rtrigo1.cos_pi2	40
Coq.Reals.Rtrigo1.pi2_int	40
Coq.Reals.Rtrigo1.cos_minus	40
Coq.Reals.Rtrigo1.sin2_cos2	40
Coq.Reals.Rtrigo1.cos2	40
Coq.Reals.Rtrigo1.sin2	40	0.0.0	search with cache (only 1: intros x; only 1: rewrite <- (sin2_cos2 x); only 1: ring).	0.0218532085419	3
Coq.Reals.Rtrigo1.cos_PI2	40
Coq.Reals.Rtrigo1.sin_pos_tech	40
Coq.Reals.Rtrigo1.sin_PI2	40
Coq.Reals.Rtrigo1.PI_RGT_0	40	1.5.13	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.357517957687	277
Coq.Reals.Rtrigo1.PI_4	40	0.15.9.0	search with cache (only 1: replace 4 with (2 ^ 2) by field; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	2.6476252079	1746
Coq.Reals.Rtrigo1.PI_neq0	40	0.1.1.5	search with cache (only 1: red; only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.258677959442	163
Coq.Reals.Rtrigo1.cos_PI	40
Coq.Reals.Rtrigo1.sin_PI	40
Coq.Reals.Rtrigo1.sin_bound	40
Coq.Reals.Rtrigo1.cos_bound	40
Coq.Reals.Rtrigo1.neg_cos	40
Coq.Reals.Rtrigo1.sin_cos	40
Coq.Reals.Rtrigo1.sin_plus	40
Coq.Reals.Rtrigo1.sin_minus	40
Coq.Reals.Rtrigo1.tan_plus	40
Coq.Reals.Rtrigo1.sin_2a	40
Coq.Reals.Rtrigo1.cos_2a	40	3.1.16.4.0	search with cache (only 1: intros; only 1: unfold Rminus; only 1: rewrite double; only 1: rewrite cos_plus; only 1: ring).	7.45765686035	6707
Coq.Reals.Rtrigo1.cos_2a_cos	40	5.2.0.5.2.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: rewrite double; only 1: rewrite <- (sin2_cos2 x); only 1: unfold Rsqr; only 1: rewrite cos_plus; only 1: ring).	19.2309150696	8279
Coq.Reals.Rtrigo1.cos_2a_sin	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intro x; only 1: rewrite double; only 1: unfold Rminus; only 1: rewrite Rmult_assoc; only 1: rewrite cos_plus; only 1: generalize (sin2_cos2 x); only 1: rewrite double; only 1: intro H1; only 1: rewrite <- H1; only 1: ring_Rsqr).	0.0624439716339	10
Coq.Reals.Rtrigo1.tan_2a	40
Coq.Reals.Rtrigo1.sin_neg	40
Coq.Reals.Rtrigo1.cos_neg	40
Coq.Reals.Rtrigo1.tan_0	40
Coq.Reals.Rtrigo1.tan_neg	40
Coq.Reals.Rtrigo1.tan_minus	40
Coq.Reals.Rtrigo1.cos_3PI2	40
Coq.Reals.Rtrigo1.sin_2PI	40
Coq.Reals.Rtrigo1.cos_2PI	40	0.6.3.2.8	search with cache (only 1: rewrite double; only 1: rewrite cos_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	8.47180294991	5189
Coq.Reals.Rtrigo1.neg_sin	40	0.0.0.2.1	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: ring).	0.0993518829346	29
Coq.Reals.Rtrigo1.sin_PI_x	40	0.2.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Rminus; only 1: rewrite sin_plus; only 1: rewrite sin_PI; only 1: rewrite cos_PI; only 1: rewrite sin_neg; only 1: ring).	0.0426459312439	9
Coq.Reals.Rtrigo1.sin_period	40
Coq.Reals.Rtrigo1.cos_period	40	0.0.0.0.0.0.12.0.0.0.0.0.0	search with cache (only 1: intros x k; only 1: induction k as [| k Hreck]; only 1: simpl; only 1: ring_simplify (x + 2 * 0 * PI); only 1: trivial; only 1: replace (x + 2 * INR (S k) * PI) with (x + 2 * INR k * PI + 2 * PI); only 1: rewrite cos_plus; only 1: rewrite sin_2PI; only 1: rewrite cos_2PI; only 1: ring_simplify; only 1: trivial; only 1: rewrite S_INR; only 1: ring).	31.9838528633	15389
Coq.Reals.Rtrigo1.sin_shift	40	0.0.0.3.0	search with cache (only 1: intro x; only 1: rewrite sin_minus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	0.203714847565	58
Coq.Reals.Rtrigo1.cos_shift	40
Coq.Reals.Rtrigo1.cos_sin	40	0.0.0.10.0	search with cache (only 1: intro x; only 1: rewrite sin_plus; only 1: rewrite sin_PI2; only 1: rewrite cos_PI2; only 1: ring).	1.24821901321	534
Coq.Reals.Rtrigo1.PI2_RGT_0	40	0.0.1.2.3	search with cache (only 1: unfold PI; only 1: apply Rmult_lt_0_compat; only 1: destruct pi2_int; only 1: lra; only 1: apply Rinv_0_lt_compat, Rlt_0_2).	0.306927204132	103
Coq.Reals.Rtrigo1.SIN_bound	40
Coq.Reals.Rtrigo1.COS_bound	40
Coq.Reals.Rtrigo1.cos_sin_0	40
Coq.Reals.Rtrigo1.cos_sin_0_var	40
Coq.Reals.Rtrigo1.sin_lb_gt_0	40
Coq.Reals.Rtrigo1.SIN	40
Coq.Reals.Rtrigo1.COS	40
Coq.Reals.Rtrigo1._PI2_RLT_0	40	0.4.2	search with cache (only 1: unfold PI; only 1: destruct pi2_int; only 1: lra).	0.24452996254	52
Coq.Reals.Rtrigo1.PI4_RLT_PI2	40
Coq.Reals.Rtrigo1.PI2_Rlt_PI	40	0.10	search with cache (only 1: pose proof PI_RGT_0 as H; only 1: lra).	0.0423700809479	63
Coq.Reals.Rtrigo1.sin_gt_0	40
Coq.Reals.Rtrigo1.cos_gt_0	40
Coq.Reals.Rtrigo1.sin_ge_0	40
Coq.Reals.Rtrigo1.cos_ge_0	40
Coq.Reals.Rtrigo1.sin_le_0	40
Coq.Reals.Rtrigo1.cos_le_0	40
Coq.Reals.Rtrigo1.sin_lt_0	40
Coq.Reals.Rtrigo1.sin_lt_0_var	40
Coq.Reals.Rtrigo1.cos_lt_0	40
Coq.Reals.Rtrigo1.tan_gt_0	40
Coq.Reals.Rtrigo1.tan_lt_0	40
Coq.Reals.Rtrigo1.cos_ge_0_3PI2	40
Coq.Reals.Rtrigo1.form1	40
Coq.Reals.Rtrigo1.form2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: rewrite <- (cos_neg q); only 1: replace (- q) with ((p - q) / 2 - (p + q) / 2) by field; only 1: rewrite cos_plus; only 1: rewrite cos_minus; only 1: ring).	0.113717079163	8
Coq.Reals.Rtrigo1.form3	40
Coq.Reals.Rtrigo1.form4	40	0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: intros p q; only 1: pattern p at 1; only 1: replace p with ((p - q) / 2 + (p + q) / 2) by field; only 1: pattern q at 3; only 1: replace q with ((p + q) / 2 - (p - q) / 2); only 1: rewrite sin_plus; only 1: rewrite sin_minus; only 1: ring; only 1: pattern q at 3; only 1: rewrite double_var; only 1: unfold Rdiv; only 1: ring).	10.8583550453	2877
Coq.Reals.Rtrigo1.sin_increasing_0	40
Coq.Reals.Rtrigo1.sin_increasing_1	40
Coq.Reals.Rtrigo1.sin_decreasing_0	40
Coq.Reals.Rtrigo1.sin_decreasing_1	40
Coq.Reals.Rtrigo1.cos_increasing_0	40
Coq.Reals.Rtrigo1.cos_increasing_1	40
Coq.Reals.Rtrigo1.cos_decreasing_0	40
Coq.Reals.Rtrigo1.cos_decreasing_1	40
Coq.Reals.Rtrigo1.tan_diff	40
Coq.Reals.Rtrigo1.tan_increasing_0	40
Coq.Reals.Rtrigo1.tan_increasing_1	40
Coq.Reals.Rtrigo1.sin_incr_0	40
Coq.Reals.Rtrigo1.sin_incr_1	40
Coq.Reals.Rtrigo1.sin_decr_0	40
Coq.Reals.Rtrigo1.sin_decr_1	40
Coq.Reals.Rtrigo1.cos_incr_0	40
Coq.Reals.Rtrigo1.cos_incr_1	40
Coq.Reals.Rtrigo1.cos_decr_0	40
Coq.Reals.Rtrigo1.cos_decr_1	40
Coq.Reals.Rtrigo1.tan_incr_0	40
Coq.Reals.Rtrigo1.tan_incr_1	40
Coq.Reals.Rtrigo1.sin_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_0	40
Coq.Reals.Rtrigo1.cos_eq_0_1	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_0	40
Coq.Reals.Rtrigo1.sin_eq_O_2PI_1	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_0	40
Coq.Reals.Rtrigo1.cos_eq_0_2PI_1	40
Coq.Reals.PartSum.tech1	40
Coq.Reals.PartSum.tech2	40
Coq.Reals.PartSum.tech3	40
Coq.Reals.PartSum.tech4	40
Coq.Reals.PartSum.tech5	40	0	search with cache (only 1: reflexivity).	0.00828504562378	1
Coq.Reals.PartSum.tech6	40
Coq.Reals.PartSum.tech7	40
Coq.Reals.PartSum.tech11	40
Coq.Reals.PartSum.tech12	40	8.0.1	search with cache (only 1: intros An l; only 1: intros; only 1: assumption).	0.0705058574677	111
Coq.Reals.PartSum.scal_sum	40	13.10.0.1.1.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: rewrite tech5; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite tech5; only 1: rewrite HrecN; only 1: ring).	4.8430480957	9033
Coq.Reals.PartSum.decomp_sum	40
Coq.Reals.PartSum.plus_sum	40	0.0.1.0.1.1.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: reflexivity; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0457921028137	10
Coq.Reals.PartSum.sum_eq	40	0.0.0.0.0.0.0.0.5.0.0.1.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: apply le_n; only 1: do 2 rewrite tech5; only 1: rewrite HrecN; only 1: rewrite (H (S N)); only 1: ring; only 1: apply le_n; only 1: intros; only 1: apply H; only 1: apply le_S; only 1: assumption).	27.1214790344	10019
Coq.Reals.PartSum.uniqueness_sum	40
Coq.Reals.PartSum.minus_sum	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: do 3 rewrite tech5; only 1: rewrite HrecN; only 1: ring).	0.0502181053162	7
Coq.Reals.PartSum.sum_decomposition	40
Coq.Reals.PartSum.sum_Rle	40
Coq.Reals.PartSum.Rsum_abs	40
Coq.Reals.PartSum.sum_cte	40	2.0.0.3.10.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: ring; only 1: simpl; only 1: rewrite HrecN; only 1: rewrite Rmult_plus_distr_l; only 1: rewrite Rmult_1_r; only 1: reflexivity).	13.3772408962	8847
Coq.Reals.PartSum.sum_growing	40	1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: apply H; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (sum_f_R0 An N + Bn (S N)); only 1: apply Rplus_le_compat_l; only 1: apply H; only 1: do 2 rewrite <- (Rplus_comm (Bn (S N))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	1.13521099091	351
Coq.Reals.PartSum.Rabs_triang_gen	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction N as [| N HrecN]; only 1: simpl; only 1: right; only 1: reflexivity; only 1: do 2 rewrite tech5; only 1: apply Rle_trans with (Rabs (sum_f_R0 An N) + Rabs (An (S N))); only 1: apply Rabs_triang; only 1: do 2 rewrite <- (Rplus_comm (Rabs (An (S N)))); only 1: apply Rplus_le_compat_l; only 1: apply HrecN).	0.277852058411	117
Coq.Reals.PartSum.cond_pos_sum	40
Coq.Reals.PartSum.cauchy_abs	40
Coq.Reals.PartSum.cv_cauchy_1	40
Coq.Reals.PartSum.cv_cauchy_2	40
Coq.Reals.PartSum.sum_eq_R0	40
Coq.Reals.PartSum.sum_incr	40
Coq.Reals.PartSum.sum_cv_maj	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_sym	40
Coq.Reals.ConstructiveCauchyReals.factorDenom	40	0.0.0.5	search with cache (only 1: intros [| n| n]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0161988735199	9
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_sym	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquivEx_trans	40
Coq.Reals.ConstructiveCauchyReals.QSeqEquiv_cau_r	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_inc	40
Coq.Reals.ConstructiveCauchyReals.increasing_modulus_max	40
Coq.Reals.ConstructiveCauchyReals.standard_modulus	40
Coq.Reals.ConstructiveCauchyReals.CRealLtEpsilon	40
Coq.Reals.ConstructiveCauchyReals.CRealLtForget	40	0.0.0.0.2.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: assert (exists n : nat, n <> 0%nat /\ (2 # Pos.of_nat n < proj1_sig y n - proj1_sig x n)%Q); only 1: destruct H as [n maj]; only 1: exists (Pos.to_nat n); only 1: split; only 1: intro abs; only 1: destruct (Pos2Nat.is_succ n); only 1: rewrite H in abs; only 1: inversion abs; only 1: rewrite Pos2Nat.id; only 1: apply maj; only 1: destruct H0 as [n maj]; only 1: exists (Pos.of_nat n); only 1: rewrite Nat2Pos.id; only 1: apply maj; only 1: apply maj).	5.47723793983	4165
Coq.Reals.ConstructiveCauchyReals.CRealLt_lpo_dec	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_not_lt	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_diff	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_modindep	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_aboveSig	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_above_same	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_asym	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_irrefl	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_refl	40	0.3	search with cache (only 1: intros x abs; only 1: exact (CRealLt_asym x x abs abs)).	0.0208468437195	25
Coq.Reals.ConstructiveCauchyReals.CRealEq_refl	40	0.3.0.3.2	search with cache (only 1: split; only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs); only 1: intro abs; only 1: exact (CRealLt_asym x x abs abs)).	0.356142997742	357
Coq.Reals.ConstructiveCauchyReals.CRealEq_sym	40	1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: apply H; only 1: apply H).	0.0125780105591	6
Coq.Reals.ConstructiveCauchyReals.CRealLt_dec	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_le_trans	40
Coq.Reals.ConstructiveCauchyReals.CReal_lt_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_trans	40
Coq.Reals.ConstructiveCauchyReals.CRealEq_relT	40	0.0.0.0.0.0.0.0.0.0.20.3.3.20	search with cache (only 1: split; only 1: auto with *; only 1: auto with *; only 1: split; only 1: destruct H, H0; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction; only 1: destruct H, H0; only 1: intro abs; only 1: destruct (CRealLt_dec _ _ y abs); only 1: contradiction; only 1: contradiction).	31.1857330799	32889
Coq.Reals.ConstructiveCauchyReals.CRealLt_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealGt_morph	40
Coq.Reals.ConstructiveCauchyReals.CReal_appart_morph	40
Coq.Reals.ConstructiveCauchyReals.CRealLtProp_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealGe_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_l	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_l	40	2.0.8.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H0; only 1: apply (CRealLt_morph z z (CRealEq_refl z) x y); only 1: apply H; only 1: assumption).	0.914041996002	941
Coq.Reals.ConstructiveCauchyReals.CRealLe_proper_r	40	1.4.5	search with cache (only 1: intros x y H; only 1: apply CRealLe_morph; only 1: apply CRealEq_refl).	0.332186937332	313
Coq.Reals.ConstructiveCauchyReals.ConstCauchy	40
Coq.Reals.ConstructiveCauchyReals.inject_Q	40
Coq.Reals.ConstructiveCauchyReals.CRealLt_0_1	40
Coq.Reals.ConstructiveCauchyReals.CReal_injectQPos	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQ	40
Coq.Reals.ConstructiveCauchyReals.CRealLtQopp	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_compare	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_morph_T	40	0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: rewrite H in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	0.959457159042	559
Coq.Reals.ConstructiveCauchyReals.CReal_plus_cauchy	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_nth	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_unfold	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp	40	33	search with cache (only 1: assumption).	0.222992897034	781
Coq.Reals.ConstructiveCauchyReals.belowMultiple	40	0.1.0.3.0.0.0.5	search with cache (only 1: intros; only 1: rewrite <- (Nat.mul_1_l n); only 1: apply Nat.mul_le_mono_nonneg; only 1: auto; only 1: assumption; only 1: apply Nat.le_0_l; only 1: rewrite Nat.mul_1_l; only 1: apply Nat.le_refl).	0.646155118942	539
Coq.Reals.ConstructiveCauchyReals.CReal_plus_assoc	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_comm	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_0_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_compat_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_lt_reg_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_l	40	1.2.13.5.2.6	search with cache (only 1: unfold CReal_plus, proj1_sig; only 1: intros; only 1: intro abs; only 1: apply H; only 1: apply CReal_plus_lt_compat_l; only 1: assumption).	23.9330821037	18833
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_reg_r	40	1.1.0.0.0.0.0	search with cache (only 1: intros; only 1: intro abs; only 1: apply H; only 1: clear H; only 1: do 2 rewrite <- (CReal_plus_comm x); only 1: apply CReal_plus_lt_compat_l; only 1: exact abs).	0.166213035583	9
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_lt_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_le_compat	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_opp_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_r	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_proper_l	40	0.0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: split; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction; only 1: intro abs; only 1: apply CReal_plus_lt_reg_l in abs; only 1: destruct H; only 1: contradiction).	3.88745999336	728
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_Proper	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_morph_T	40
Coq.Reals.ConstructiveCauchyReals.CReal_plus_eq_reg_l	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_0	40	0.0.0.0.9.0.0.5	search with cache (only 1: apply CRealEq_diff; only 1: intro n; only 1: unfold CReal_plus, CReal_opp, inject_Q, proj1_sig; only 1: unfold Qle; only 1: simpl; only 1: unfold Z.le; only 1: intro absurd; only 1: inversion absurd).	27.2383630276	1441
Coq.Reals.ConstructiveCauchyReals.CReal_opp_plus_distr	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_involutive	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_gt_lt_contravar	40
Coq.Reals.ConstructiveCauchyReals.CReal_opp_ge_le_contravar	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_plus	40	0.0.0.1.2.0.0.0.1.2.1	search with cache (only 1: split; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs; only 1: intros [n abs]; only 1: simpl in abs; only 1: unfold Qminus in abs; only 1: rewrite Qplus_opp_r in abs; only 1: discriminate abs).	34.7564649582	5769
Coq.Reals.ConstructiveCauchyReals.inject_Q_one	40	0	search with cache (only 1: reflexivity).	0.00661706924438	1
Coq.Reals.ConstructiveCauchyReals.inject_Q_lt	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.lt_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.le_inject_Q	40
Coq.Reals.ConstructiveCauchyReals.inject_Q_le	40
Coq.Reals.ConstructiveCauchyReals.inject_Z_plus	40
Coq.Reals.ConstructiveCauchyReals.opp_inject_Z	40
Coq.Reals.Rtrigo_reg.continuity_sin	40
Coq.Reals.Rtrigo_reg.CVN_R_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos_0	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_lim_cos	40
Coq.Reals.Rtrigo_reg.derivable_pt_sin	40
Coq.Reals.Rtrigo_reg.derivable_pt_cos	40
Coq.Reals.Rtrigo_reg.derivable_sin	40	0.0.8.22	search with cache (only 1: intro; only 1: unfold derivable_pt; only 1: exists (cos x); only 1: apply derivable_pt_lim_sin).	1.48554992676	2634
Coq.Reals.Rtrigo_reg.derivable_cos	40	0.0.0.0.0	search with cache (only 1: unfold derivable; only 1: unfold derivable_pt; only 1: intro; only 1: exists (- sin x); only 1: apply derivable_pt_lim_cos).	0.0168781280518	5
Coq.Reals.Rtrigo_reg.derive_pt_sin	40
Coq.Reals.Rtrigo_reg.derive_pt_cos	40	3.0.0	search with cache (only 1: intros; only 1: apply derive_pt_eq_0; only 1: apply derivable_pt_lim_cos).	0.678481817245	146
Coq.Reals.Cos_plus.Majxy_cv_R0	40
Coq.Reals.Cos_plus.reste1_maj	40
Coq.Reals.Cos_plus.reste2_maj	40
Coq.Reals.Cos_plus.reste1_cv_R0	40
Coq.Reals.Cos_plus.reste2_cv_R0	40
Coq.Reals.Cos_plus.reste_cv_R0	40
Coq.Reals.Cos_plus.cos_plus	40
Coq.Reals.Rgeom.distance_refl	40
Coq.Reals.Rgeom.distance_symm	40	0.0.0.0.0.0.0.2.1.0.0.0.0.0.0.0.0.3.0.1	search with cache (only 1: intros; only 1: unfold dist_euc; only 1: apply Rsqr_inj; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply sqrt_positivity; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: repeat rewrite Rsqr_sqrt; only 1: unfold Rsqr; only 1: ring; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr; only 1: apply Rplus_le_le_0_compat; only 1: apply Rle_0_sqr; only 1: apply Rle_0_sqr).	4.72835206985	7750
Coq.Reals.Rgeom.law_cosines	40
Coq.Reals.Rgeom.triangle	40
Coq.Reals.Rgeom.translation_0	40
Coq.Reals.Rgeom.isometric_translation	40
Coq.Reals.Rgeom.rotation_0	40
Coq.Reals.Rgeom.rotation_PI2	40
Coq.Reals.Rgeom.isometric_rotation_0	40
Coq.Reals.Rgeom.isometric_rotation	40
Coq.Reals.Rgeom.isometric_rot_trans	40
Coq.Reals.Rgeom.isometric_trans_rot	40
Coq.Reals.Rsqrt_def.dicho_comp	40
Coq.Reals.Rsqrt_def.dicho_lb_growing	40
Coq.Reals.Rsqrt_def.dicho_up_decreasing	40
Coq.Reals.Rsqrt_def.dicho_lb_maj_y	40
Coq.Reals.Rsqrt_def.dicho_lb_maj	40
Coq.Reals.Rsqrt_def.dicho_up_min_x	40
Coq.Reals.Rsqrt_def.dicho_up_min	40
Coq.Reals.Rsqrt_def.dicho_lb_cv	40
Coq.Reals.Rsqrt_def.dicho_up_cv	40
Coq.Reals.Rsqrt_def.dicho_lb_dicho_up	40
Coq.Reals.Rsqrt_def.pow_2_n_neq_R0	40	0.1.1.0	search with cache (only 1: red; only 1: intro; only 1: apply pow_nonzero; only 1: discrR).	0.0308260917664	26
Coq.Reals.Rsqrt_def.pow_2_n_growing	40
Coq.Reals.Rsqrt_def.pow_2_n_infty	40
Coq.Reals.Rsqrt_def.cv_dicho	40
Coq.Reals.Rsqrt_def.continuity_seq	40
Coq.Reals.Rsqrt_def.dicho_lb_car	40
Coq.Reals.Rsqrt_def.dicho_up_car	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: induction n as [| n Hrecn]; only 1: assumption; only 1: simpl; only 1: destruct (sumbool_of_bool (P ((Dichotomy_lb x y P n + Dichotomy_ub x y P n) / 2))) as [Heq| Heq]; only 1: rewrite Heq; only 1: assumption; only 1: rewrite Heq; only 1: assumption).	0.0523707866669	10
Coq.Reals.Rsqrt_def.cv_pow_half	40
Coq.Reals.Rsqrt_def.IVT	40
Coq.Reals.Rsqrt_def.IVT_cor	40
Coq.Reals.Rsqrt_def.Rsqrt_exists	40
Coq.Reals.Rsqrt_def.Rsqrt_positivity	40
Coq.Reals.Rsqrt_def.Rsqrt_Rsqrt	40
Coq.FSets.FMapFullAVL.AvlProofs.height_non_negative	40
Coq.FSets.FMapFullAVL.AvlProofs.avl_node	40	0.0	search with cache (only 1: intros; only 1: intuition).	0.0142059326172	2
Coq.FSets.FMapFullAVL.AvlProofs.height_0	40
Coq.FSets.FMapFullAVL.AvlProofs.empty_avl	40	3	search with cache (only 1: auto).	0.00675892829895	4
Coq.FSets.FMapFullAVL.AvlProofs.create_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.create_height	40	0	search with cache (only 1: auto).	0.00849199295044	1
Coq.FSets.FMapFullAVL.AvlProofs.bal_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_1	40
Coq.FSets.FMapFullAVL.AvlProofs.bal_height_2	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.add_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_min_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.merge_avl	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: intros m1 m2; only 1: functional induction (merge m1 m2); only 1: intros; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: auto; only 1: intros; only 1: factornode _x _x0 _x1 _x2 _x3 as m1; only 1: generalize (remove_min_avl_1 H0); only 1: rewrite e1; only 1: destruct 1; only 1: apply bal_avl; only 1: auto; only 1: auto; only 1: omega_max).	8.05814194679	2549
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.remove_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl_1	40
Coq.FSets.FMapFullAVL.AvlProofs.join_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.concat_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.split_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_height	40
Coq.FSets.FMapFullAVL.AvlProofs.map_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.mapi_height	40	0.0.0.0.0	search with cache (only 1: destruct m; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0232830047607	5
Coq.FSets.FMapFullAVL.AvlProofs.mapi_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map_option_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_opt_avl	40
Coq.FSets.FMapFullAVL.AvlProofs.map2_avl	40
Coq.FSets.FMapFullAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_1	40
Coq.FSets.FMapFullAVL.IntMake.mem_2	40
Coq.FSets.FMapFullAVL.IntMake.empty_1	40	11.2.17	search with cache (only 1: intros m x; only 1: intuition; only 1: inversion_clear H).	1.06431913376	1142
Coq.FSets.FMapFullAVL.IntMake.is_empty_1	40
Coq.FSets.FMapFullAVL.IntMake.is_empty_2	40
Coq.FSets.FMapFullAVL.IntMake.add_1	40
Coq.FSets.FMapFullAVL.IntMake.add_2	40
Coq.FSets.FMapFullAVL.IntMake.add_3	40
Coq.FSets.FMapFullAVL.IntMake.remove_1	40
Coq.FSets.FMapFullAVL.IntMake.remove_2	40
Coq.FSets.FMapFullAVL.IntMake.remove_3	40
Coq.FSets.FMapFullAVL.IntMake.find_1	40
Coq.FSets.FMapFullAVL.IntMake.find_2	40
Coq.FSets.FMapFullAVL.IntMake.fold_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_1	40
Coq.FSets.FMapFullAVL.IntMake.elements_2	40	9.0.0.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: auto).	1.0579161644	1223
Coq.FSets.FMapFullAVL.IntMake.elements_3	40
Coq.FSets.FMapFullAVL.IntMake.elements_3w	40
Coq.FSets.FMapFullAVL.IntMake.cardinal_1	40
Coq.FSets.FMapFullAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapFullAVL.IntMake.equal_1	40
Coq.FSets.FMapFullAVL.IntMake.equal_2	40	0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b, a) (m', b', a') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	1.23751211166	541
Coq.FSets.FMapFullAVL.IntMake.map_1	40
Coq.FSets.FMapFullAVL.IntMake.map_2	40
Coq.FSets.FMapFullAVL.IntMake.mapi_1	40
Coq.FSets.FMapFullAVL.IntMake.mapi_2	40
Coq.FSets.FMapFullAVL.IntMake.map2_1	40
Coq.FSets.FMapFullAVL.IntMake.map2_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_cardinal_e	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_tcc	40
Coq.FSets.FMapFullAVL.IntMake_ord.cons_Cmp	40	1.2.1.2.1.2.26.47	search with cache (only 1: intros m; only 1: induction m; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve; only 1: intuition; only 1: LO.cmp_solve).	5.10194396973	19857
Coq.FSets.FMapFullAVL.IntMake_ord.compare_aux_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapFullAVL.IntMake_ord.compare	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: intros; only 1: intuition).	0.0104508399963	3
Coq.FSets.FMapFullAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.00858783721924	2
Coq.FSets.FMapFullAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapFullAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapFullAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_In	40	1.1.0.23.4.5	search with cache (only 1: induction m; only 1: inversion 1; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	7.35002803802	12089
Coq.FSets.FMapAVL.Raw.Proofs.In_MapsTo	40
Coq.FSets.FMapAVL.Raw.Proofs.In_alt	40
Coq.FSets.FMapAVL.Raw.Proofs.MapsTo_1	40
Coq.FSets.FMapAVL.Raw.Proofs.In_1	40	0.0.0.0.0.0	search with cache (only 1: induction m; only 1: intuition_in; only 1: intuition_in; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.250919103622	6
Coq.FSets.FMapAVL.Raw.Proofs.In_node_iff	40	3.5	search with cache (only 1: intros m x e f; only 1: intuition_in).	0.111897945404	28
Coq.FSets.FMapAVL.Raw.Proofs.lt_leaf	40	85.2	search with cache (only 1: intros; only 1: inversion_clear 1).	2.41599488258	10600
Coq.FSets.FMapAVL.Raw.Proofs.gt_leaf	40	86.1	search with cache (only 1: intros; only 1: inversion_clear 1).	2.41572403908	10604
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_node	40	0.5.9.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: eauto with ordered_type).	2.26426506042	388
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_node	40	0.6.10.1	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	23.2004160881	568
Coq.FSets.FMapAVL.Raw.Proofs.lt_left	40	0.0	search with cache (only 1: unfold lt_tree in *; only 1: intuition_in).	0.0150589942932	2
Coq.FSets.FMapAVL.Raw.Proofs.lt_right	40	0	search with cache (only 1: intuition_in).	0.0108151435852	1
Coq.FSets.FMapAVL.Raw.Proofs.gt_left	40	0.0	search with cache (only 1: unfold gt_tree in *; only 1: intuition_in).	0.0141379833221	2
Coq.FSets.FMapAVL.Raw.Proofs.gt_right	40	0	search with cache (only 1: intuition_in).	0.0106949806213	1
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_not_in	40	3.0.4.12	search with cache (only 1: intuition_in; only 1: induction m; only 1: intuition_in; only 1: order).	23.6385900974	3832
Coq.FSets.FMapAVL.Raw.Proofs.lt_tree_trans	40	0.0.0.0.0	search with cache (only 1: intros m x y; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0233819484711	5
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_not_in	40	0.0.0.0	search with cache (only 1: intros; only 1: intro; only 1: generalize (H _ H0); only 1: order).	0.0181820392609	4
Coq.FSets.FMapAVL.Raw.Proofs.gt_tree_trans	40	0	search with cache (only 1: eauto with ordered_type).	0.0160331726074	1
Coq.FSets.FMapAVL.Raw.Proofs.empty_bst	40	7	search with cache (only 1: intuition).	0.00885796546936	8
Coq.FSets.FMapAVL.Raw.Proofs.empty_1	40	14.16.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intuition_in).	0.792618989944	1469
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_1	40
Coq.FSets.FMapAVL.Raw.Proofs.is_empty_2	40	7.0.0.0.1.3.0	search with cache (only 1: destruct m as [| r x e l h]; only 1: intro H; only 1: unfold empty, Empty; only 1: intuition_in; only 1: simpl; only 1: intro H; only 1: discriminate).	2.87851905823	1807
Coq.FSets.FMapAVL.Raw.Proofs.mem_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mem_2	40	1.0.1.2.0.0.0	search with cache (only 1: intros m x; only 1: functional induction (mem x m); only 1: intros; only 1: discriminate; only 1: auto; only 1: auto; only 1: auto).	0.208400964737	90
Coq.FSets.FMapAVL.Raw.Proofs.find_1	40
Coq.FSets.FMapAVL.Raw.Proofs.find_2	40
Coq.FSets.FMapAVL.Raw.Proofs.find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in	40	2.2.2.7.0.0	search with cache (only 1: intros m x; only 1: functional induction (find x m); only 1: intuition_in; only 1: auto; only 1: auto; only 1: auto).	5.2833340168	1796
Coq.FSets.FMapAVL.Raw.Proofs.in_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_iff	40	0.0.0.3.0.0.0.0.0.0.3.1	search with cache (only 1: split; only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply MapsTo_In with e; only 1: apply find_2; only 1: auto; only 1: congruence; only 1: intros; only 1: destruct (In_MapsTo H0) as (d, Hd); only 1: rewrite (find_1 H Hd); only 1: discriminate).	3.02552509308	1944
Coq.FSets.FMapAVL.Raw.Proofs.not_find_iff	40
Coq.FSets.FMapAVL.Raw.Proofs.find_find	40
Coq.FSets.FMapAVL.Raw.Proofs.find_mapsto_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.find_in_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.create_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.create_in	40	0.1	search with cache (only 1: unfold create; only 1: intuition_in).	0.122423887253	15
Coq.FSets.FMapAVL.Raw.Proofs.bal_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_in	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.bal_find	40
Coq.FSets.FMapAVL.Raw.Proofs.add_in	40
Coq.FSets.FMapAVL.Raw.Proofs.add_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.add_1	40
Coq.FSets.FMapAVL.Raw.Proofs.add_2	40
Coq.FSets.FMapAVL.Raw.Proofs.add_3	40
Coq.FSets.FMapAVL.Raw.Proofs.add_find	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_min_find	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_in	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.merge_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_in	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_1	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_2	40
Coq.FSets.FMapAVL.Raw.Proofs.remove_3	40
Coq.FSets.FMapAVL.Raw.Proofs.join_in	40
Coq.FSets.FMapAVL.Raw.Proofs.join_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.join_find	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_1	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_2	40
Coq.FSets.FMapAVL.Raw.Proofs.split_in_3	40
Coq.FSets.FMapAVL.Raw.Proofs.split_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.split_lt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_gt_tree	40
Coq.FSets.FMapAVL.Raw.Proofs.split_find	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_in	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.concat_find	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_mapsto	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_in	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_sort	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_nodup	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_aux_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_cardinal	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_app	40
Coq.FSets.FMapAVL.Raw.Proofs.elements_node	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv_aux	40	3.9.0.0.0.0.0.0	search with cache (only 1: induction s as [| l Hl x e r Hr h]; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: rewrite Hl; only 1: simpl; only 1: auto with *).	20.0058290958	11435
Coq.FSets.FMapAVL.Raw.Proofs.fold_equiv	40
Coq.FSets.FMapAVL.Raw.Proofs.fold_1	40
Coq.FSets.FMapAVL.Raw.Proofs.flatten_e_elements	40	0.0.0.0.0	search with cache (only 1: unfold elements; only 1: simpl; only 1: intros; only 1: rewrite !elements_app, !app_nil_r, !app_assoc_reverse; only 1: auto).	0.115514993668	5
Coq.FSets.FMapAVL.Raw.Proofs.cons_1	40
Coq.FSets.FMapAVL.Raw.Proofs.cons_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_end_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_more_IfEq	40	3.1.0.1.7.0.4	search with cache (only 1: simpl flatten_e; only 1: unfold IfEq; only 1: intros x e0 y0 H H6; only 1: simpl; only 1: intros; only 1: rewrite H0; only 1: auto).	19.6983048916	5868
Coq.FSets.FMapAVL.Raw.Proofs.equal_cont_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_IfEq	40
Coq.FSets.FMapAVL.Raw.Proofs.Equivb_elements	40
Coq.FSets.FMapAVL.Raw.Proofs.equal_Equivb	40
Coq.FSets.FMapAVL.Raw.Proofs.map_1	40	1.0.9.6.3.3.7.6	search with cache (only 1: intros m x; only 1: induction m; only 1: simpl; only 1: firstorder; only 1: intuition_in; only 1: simpl; only 1: intros; only 1: solve [ inv MapsTo; auto ]).	28.6992478371	21270
Coq.FSets.FMapAVL.Raw.Proofs.map_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0560741424561	8
Coq.FSets.FMapAVL.Raw.Proofs.map_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_1	40
Coq.FSets.FMapAVL.Raw.Proofs.mapi_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: inversion_clear 1; only 1: simpl; only 1: inversion_clear 1; only 1: auto; only 1: auto; only 1: auto).	0.0585501194	8
Coq.FSets.FMapAVL.Raw.Proofs.mapi_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map_option_find	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_2	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_opt_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_bst	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_1	40
Coq.FSets.FMapAVL.Raw.Proofs.map2_2	40
Coq.FSets.FMapAVL.IntMake.MapsTo_1	40
Coq.FSets.FMapAVL.IntMake.mem_1	40
Coq.FSets.FMapAVL.IntMake.mem_2	40
Coq.FSets.FMapAVL.IntMake.empty_1	40	14.5.3.15	search with cache (only 1: intros m x; only 1: rewrite <- elements_mapsto; only 1: intuition; only 1: inversion_clear H).	5.76589107513	5564
Coq.FSets.FMapAVL.IntMake.is_empty_1	40
Coq.FSets.FMapAVL.IntMake.is_empty_2	40
Coq.FSets.FMapAVL.IntMake.add_1	40
Coq.FSets.FMapAVL.IntMake.add_2	40
Coq.FSets.FMapAVL.IntMake.add_3	40
Coq.FSets.FMapAVL.IntMake.remove_1	40
Coq.FSets.FMapAVL.IntMake.remove_2	40
Coq.FSets.FMapAVL.IntMake.remove_3	40
Coq.FSets.FMapAVL.IntMake.find_1	40
Coq.FSets.FMapAVL.IntMake.find_2	40
Coq.FSets.FMapAVL.IntMake.fold_1	40
Coq.FSets.FMapAVL.IntMake.elements_1	40
Coq.FSets.FMapAVL.IntMake.elements_2	40	5.0.0.3	search with cache (only 1: intros m x e; only 1: unfold elements, MapsTo, eq_key_elt; only 1: rewrite elements_mapsto; only 1: intuition).	0.17906999588	214
Coq.FSets.FMapAVL.IntMake.elements_3	40	4.0.0.1.0.2.0.0	search with cache (only 1: intros; only 1: unfold elements, MapsTo, eq_key_elt; only 1: unfold Raw.elements; only 1: apply elements_aux_sort; only 1: apply (is_bst m); only 1: auto; only 1: intros; only 1: inversion_clear H).	0.584457159042	629
Coq.FSets.FMapAVL.IntMake.elements_3w	40	0.3.0	search with cache (only 1: intros m; only 1: apply PX.Sort_NoDupA; only 1: exact (elements_sort (is_bst m))).	0.0291481018066	22
Coq.FSets.FMapAVL.IntMake.cardinal_1	40	0	search with cache (only 1: exact (fun m : Raw.tree elt => elements_aux_cardinal nil)).	0.00788307189941	1
Coq.FSets.FMapAVL.IntMake.Equivb_Equivb	40
Coq.FSets.FMapAVL.IntMake.equal_1	40
Coq.FSets.FMapAVL.IntMake.equal_2	40	0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold equal; only 1: intros (m, b) (m', b') cmp; only 1: rewrite Equivb_Equivb; only 1: simpl in *; only 1: rewrite equal_Equivb; only 1: intros; only 1: auto; only 1: auto; only 1: auto).	2.16310214996	555
Coq.FSets.FMapAVL.IntMake.map_1	40
Coq.FSets.FMapAVL.IntMake.map_2	40
Coq.FSets.FMapAVL.IntMake.mapi_1	40
Coq.FSets.FMapAVL.IntMake.mapi_2	40
Coq.FSets.FMapAVL.IntMake.map2_1	40
Coq.FSets.FMapAVL.IntMake.map2_2	40
Coq.FSets.FMapAVL.IntMake_ord.cons_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_end_Cmp	40	1.0.0.0.0.17.4.0	search with cache (only 1: destruct e2; only 1: simpl; only 1: trivial; only 1: red; only 1: red; only 1: red; only 1: red; only 1: auto).	4.04235887527	17745
Coq.FSets.FMapAVL.IntMake_ord.compare_more_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_cont_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare_Cmp	40
Coq.FSets.FMapAVL.IntMake_ord.compare	40
Coq.FSets.FMapAVL.IntMake_ord.eq_seq	40	1.0	search with cache (only 1: red; only 1: intuition).	0.0119888782501	11
Coq.FSets.FMapAVL.IntMake_ord.lt_slt	40	1	search with cache (only 1: intuition).	0.00786185264587	2
Coq.FSets.FMapAVL.IntMake_ord.eq_1	40
Coq.FSets.FMapAVL.IntMake_ord.eq_2	40
Coq.FSets.FMapAVL.IntMake_ord.eq_refl	40
Coq.FSets.FMapAVL.IntMake_ord.eq_sym	40
Coq.FSets.FMapAVL.IntMake_ord.eq_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_trans	40
Coq.FSets.FMapAVL.IntMake_ord.lt_not_eq	40
Coq.FSets.FSetFacts.WFacts_fun.In_eq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.mem_iff	40	5	search with cache (only 1: intuition).	0.0500478744507	25
Coq.FSets.FSetFacts.WFacts_fun.not_mem_iff	40	8.32	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	1.93858599663	6180
Coq.FSets.FSetFacts.WFacts_fun.equal_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.135690927505	68
Coq.FSets.FSetFacts.WFacts_fun.subset_iff	40	5	search with cache (only 1: intuition).	0.109571933746	58
Coq.FSets.FSetFacts.WFacts_fun.empty_iff	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_iff	40	3.3.1	search with cache (only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	0.0843091011047	57
Coq.FSets.FSetFacts.WFacts_fun.singleton_iff	40	2	search with cache (only 1: intuition).	0.0175709724426	15
Coq.FSets.FSetFacts.WFacts_fun.add_iff	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_iff	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_iff	40	0.0.17	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.738827943802	1992
Coq.FSets.FSetFacts.WFacts_fun.union_iff	40	5	search with cache (only 1: intuition).	0.0770101547241	87
Coq.FSets.FSetFacts.WFacts_fun.inter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.diff_iff	40
Coq.FSets.FSetFacts.WFacts_fun.filter_iff	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_iff	40	4	search with cache (only 1: intuition).	0.0431411266327	17
Coq.FSets.FSetFacts.WFacts_fun.exists_iff	40	6	search with cache (only 1: intuition).	0.0326750278473	22
Coq.FSets.FSetFacts.WFacts_fun.elements_iff	40	5	search with cache (only 1: intuition).	0.0150599479675	15
Coq.FSets.FSetFacts.WFacts_fun.mem_b	40
Coq.FSets.FSetFacts.WFacts_fun.empty_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_b	40
Coq.FSets.FSetFacts.WFacts_fun.add_neq_b	40	0.0.0.0.0.0.1.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.0870821475983	9
Coq.FSets.FSetFacts.WFacts_fun.remove_b	40
Coq.FSets.FSetFacts.WFacts_fun.remove_neq_b	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.22586297989	228
Coq.FSets.FSetFacts.WFacts_fun.singleton_b	40
Coq.FSets.FSetFacts.WFacts_fun.union_b	40
Coq.FSets.FSetFacts.WFacts_fun.inter_b	40
Coq.FSets.FSetFacts.WFacts_fun.diff_b	40
Coq.FSets.FSetFacts.WFacts_fun.elements_b	40
Coq.FSets.FSetFacts.WFacts_fun.filter_b	40
Coq.FSets.FSetFacts.WFacts_fun.for_all_b	40
Coq.FSets.FSetFacts.WFacts_fun.exists_b	40
Coq.FSets.FSetFacts.WFacts_fun.E_ST	40	0.7.17.7.7.8	search with cache (only 1: split; only 1: auto; only 1: auto; only 1: red; only 1: intros x y H; only 1: eauto).	0.931549072266	5522
Coq.FSets.FSetFacts.WFacts_fun.Equal_ST	40
Coq.FSets.FSetFacts.WFacts_fun.In_m	40
Coq.FSets.FSetFacts.WFacts_fun.is_empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.Empty_m	40
Coq.FSets.FSetFacts.WFacts_fun.mem_m	40
Coq.FSets.FSetFacts.WFacts_fun.singleton_m	40
Coq.FSets.FSetFacts.WFacts_fun.add_m	40
Coq.FSets.FSetFacts.WFacts_fun.remove_m	40
Coq.FSets.FSetFacts.WFacts_fun.union_m	40
Coq.FSets.FSetFacts.WFacts_fun.inter_m	40
Coq.FSets.FSetFacts.WFacts_fun.diff_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.subset_m	40
Coq.FSets.FSetFacts.WFacts_fun.equal_m	40
Coq.FSets.FSetFacts.WFacts_fun.Subset_refl	40	2.0.5	search with cache (only 1: repeat red; only 1: intros s s' H; only 1: auto).	0.00946593284607	10
Coq.FSets.FSetFacts.WFacts_fun.Subset_trans	40	1.18	search with cache (only 1: intros s s' H s'' s''' H0; only 1: intuition).	0.553359031677	610
Coq.FSets.FSetFacts.WFacts_fun.In_s_m	40	0.1.0.5.1	search with cache (only 1: intros x y H s s' H0; only 1: generalize (H0 x); only 1: clear H0; only 1: rewrite (In_eq_iff s' H); only 1: intuition).	1.24966096878	382
Coq.FSets.FSetFacts.WFacts_fun.Empty_s_m_Proper	40	0.5.3.1.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: auto).	0.51894903183	606
Coq.FSets.FSetFacts.WFacts_fun.add_s_m_Proper	40	0.0.0.0.5	search with cache (only 1: intros x y H s s' H0 a; only 1: do 2 rewrite add_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.343732833862	53
Coq.FSets.FSetFacts.WFacts_fun.remove_s_m_Proper	40	2.0.0.0.0	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: do 2 rewrite remove_iff; only 1: rewrite H; only 1: intuition).	0.0364189147949	7
Coq.FSets.FSetFacts.WFacts_fun.union_s_m_Proper	40	2.0.4.0	search with cache (only 1: unfold Subset; only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite union_iff; only 1: intuition).	0.219689130783	35
Coq.FSets.FSetFacts.WFacts_fun.inter_s_m_Proper	40	0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite inter_iff; only 1: intuition).	0.0223569869995	4
Coq.FSets.FSetFacts.WFacts_fun.diff_s_m_Proper	40	0.0.0.0.1	search with cache (only 1: intros s s' H s'' s''' H0 a; only 1: do 2 rewrite diff_iff; only 1: rewrite H; only 1: rewrite H0; only 1: intuition).	0.101194143295	6
Coq.FSets.FSetFacts.WFacts_fun.filter_equal	40
Coq.FSets.FSetFacts.WFacts_fun.filter_ext	40
Coq.FSets.FSetFacts.WFacts_fun.filter_subset	40	4.1.3.3	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: do 2 (rewrite filter_iff; auto); only 1: intuition).	1.23824095726	645
Coq.FSets.FSetPositive.PositiveSet.In_1	40	1.11	search with cache (only 1: intros ? ? LT ->; only 1: trivial).	0.457763910294	328
Coq.FSets.FSetPositive.PositiveSet.eq_refl	40	0.0.12.2	search with cache (only 1: intro H; only 1: constructor; only 1: trivial; only 1: trivial).	0.136172056198	344
Coq.FSets.FSetPositive.PositiveSet.eq_sym	40	31	search with cache (only 1: now subst).	10.3822879791	18578
Coq.FSets.FSetPositive.PositiveSet.eq_trans	40
Coq.FSets.FSetPositive.PositiveSet.mem_1	40	0.8	search with cache (only 1: intros; only 1: trivial).	0.0105681419373	14
Coq.FSets.FSetPositive.PositiveSet.mem_2	40	0.0	search with cache (only 1: unfold In; only 1: trivial).	0.00708794593811	2
Coq.FSets.FSetPositive.PositiveSet.mem_Leaf	40	3.1	search with cache (only 1: intros; only 1: auto with arith).	0.00857496261597	6
Coq.FSets.FSetPositive.PositiveSet.empty_1	40	9	search with cache (only 1: now subst).	0.0916740894318	21
Coq.FSets.FSetPositive.PositiveSet.mem_node	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_spec	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_1	40
Coq.FSets.FSetPositive.PositiveSet.is_empty_2	40	0.0.1	search with cache (only 1: intro; only 1: rewrite is_empty_spec; only 1: trivial).	0.0441470146179	49
Coq.FSets.FSetPositive.PositiveSet.subset_Leaf_s	40	13.2.0.4.8	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: red; only 1: unfold In; only 1: trivial; only 1: discriminate).	2.24865484238	4684
Coq.FSets.FSetPositive.PositiveSet.subset_spec	40
Coq.FSets.FSetPositive.PositiveSet.subset_1	40
Coq.FSets.FSetPositive.PositiveSet.subset_2	40
Coq.FSets.FSetPositive.PositiveSet.equal_subset	40
Coq.FSets.FSetPositive.PositiveSet.equal_spec	40
Coq.FSets.FSetPositive.PositiveSet.equal_1	40	0.0.0.0.0.2	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.517847061157	200
Coq.FSets.FSetPositive.PositiveSet.equal_2	40	0.0.0.0.0.0	search with cache (only 1: intros s s'; only 1: rewrite equal_subset; only 1: rewrite andb_true_iff; only 1: rewrite <- 2!subset_spec; only 1: unfold Equal, Subset; only 1: firstorder).	0.0267081260681	6
Coq.FSets.FSetPositive.PositiveSet.eq_dec	40
Coq.FSets.FSetPositive.PositiveSet.lex_Opp	40	1.1.0.5.3.6.2.18	search with cache (only 1: intros x l o r; only 1: intros EQ; only 1: subst; only 1: destruct o; only 1: intros; only 1: auto; only 1: reflexivity; only 1: reflexivity).	38.5153830051	108796
Coq.FSets.FSetPositive.PositiveSet.compare_bool_inv	40
Coq.FSets.FSetPositive.PositiveSet.compare_inv	40
Coq.FSets.FSetPositive.PositiveSet.lex_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_bool_Eq	40
Coq.FSets.FSetPositive.PositiveSet.compare_equal	40
Coq.FSets.FSetPositive.PositiveSet.compare_gt	40
Coq.FSets.FSetPositive.PositiveSet.compare_eq	40
Coq.FSets.FSetPositive.PositiveSet.compare	40
Coq.FSets.FSetPositive.PositiveSet.ct_cxe	40
Coq.FSets.FSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.101953029633	4
Coq.FSets.FSetPositive.PositiveSet.ct_lxl	40	1.18.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.276580095291	812
Coq.FSets.FSetPositive.PositiveSet.ct_gxg	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00826287269592	5
Coq.FSets.FSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00809812545776	4
Coq.FSets.FSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00812602043152	4
Coq.FSets.FSetPositive.PositiveSet.ct_lex	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_bool	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_Leaf	40	1.0.0.0.0.0.13	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: tauto; only 1: unfold compare_fun, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.693344116211	1647
Coq.FSets.FSetPositive.PositiveSet.compare_empty_x	40
Coq.FSets.FSetPositive.PositiveSet.compare_x_empty	40
Coq.FSets.FSetPositive.PositiveSet.ct_compare_fun	40
Coq.FSets.FSetPositive.PositiveSet.lt_trans	40
Coq.FSets.FSetPositive.PositiveSet.lt_not_eq	40
Coq.FSets.FSetPositive.PositiveSet.add_spec	40
Coq.FSets.FSetPositive.PositiveSet.add_1	40
Coq.FSets.FSetPositive.PositiveSet.add_2	40	7.0.1	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: intuition congruence).	0.251065969467	178
Coq.FSets.FSetPositive.PositiveSet.add_3	40
Coq.FSets.FSetPositive.PositiveSet.remove_spec	40
Coq.FSets.FSetPositive.PositiveSet.remove_1	40
Coq.FSets.FSetPositive.PositiveSet.remove_2	40	1.2.1	search with cache (only 1: intros s x y H; only 1: rewrite remove_spec; only 1: tauto).	0.0342271327972	31
Coq.FSets.FSetPositive.PositiveSet.remove_3	40	1.0.1.0.1.0.10	search with cache (only 1: induction y; only 1: rewrite remove_spec; only 1: tauto; only 1: rewrite remove_spec; only 1: tauto; only 1: rewrite remove_spec; only 1: tauto).	0.991074800491	1559
Coq.FSets.FSetPositive.PositiveSet.singleton_1	40
Coq.FSets.FSetPositive.PositiveSet.singleton_2	40	0.0.0.0.0.0	search with cache (only 1: unfold singleton; only 1: intros x y; only 1: rewrite add_spec; only 1: unfold In; only 1: rewrite mem_Leaf; only 1: intuition discriminate).	0.018718957901	6
Coq.FSets.FSetPositive.PositiveSet.union_spec	40
Coq.FSets.FSetPositive.PositiveSet.union_1	40
Coq.FSets.FSetPositive.PositiveSet.union_2	40
Coq.FSets.FSetPositive.PositiveSet.union_3	40	0.6.0.0	search with cache (only 1: intros; only 1: apply <- union_spec; only 1: right; only 1: assumption).	0.0942299365997	38
Coq.FSets.FSetPositive.PositiveSet.inter_spec	40
Coq.FSets.FSetPositive.PositiveSet.inter_1	40
Coq.FSets.FSetPositive.PositiveSet.inter_2	40	0.0.0	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.0548830032349	3
Coq.FSets.FSetPositive.PositiveSet.inter_3	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite inter_spec; only 1: tauto).	0.278752088547	186
Coq.FSets.FSetPositive.PositiveSet.diff_spec	40
Coq.FSets.FSetPositive.PositiveSet.diff_1	40
Coq.FSets.FSetPositive.PositiveSet.diff_2	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.159080982208	116
Coq.FSets.FSetPositive.PositiveSet.diff_3	40	0.0.1	search with cache (only 1: intros s s' x; only 1: rewrite diff_spec; only 1: tauto).	0.287693977356	150
Coq.FSets.FSetPositive.PositiveSet.fold_1	40
Coq.FSets.FSetPositive.PositiveSet.cardinal_1	40
Coq.FSets.FSetPositive.PositiveSet.xfilter_spec	40
Coq.FSets.FSetPositive.PositiveSet.filter_1	40
Coq.FSets.FSetPositive.PositiveSet.filter_2	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0168061256409	4
Coq.FSets.FSetPositive.PositiveSet.filter_3	40	0.0.0.0	search with cache (only 1: unfold filter; only 1: intros s x f _; only 1: rewrite xfilter_spec; only 1: tauto).	0.0198619365692	4
Coq.FSets.FSetPositive.PositiveSet.xforall_spec	40
Coq.FSets.FSetPositive.PositiveSet.for_all_1	40
Coq.FSets.FSetPositive.PositiveSet.for_all_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold for_all; only 1: rewrite xforall_spec; only 1: trivial).	0.0164489746094	4
Coq.FSets.FSetPositive.PositiveSet.xexists_spec	40
Coq.FSets.FSetPositive.PositiveSet.exists_1	40
Coq.FSets.FSetPositive.PositiveSet.exists_2	40	0.0.0.0	search with cache (only 1: intros s f _; only 1: unfold exists_; only 1: rewrite xexists_spec; only 1: trivial).	0.0159831047058	4
Coq.FSets.FSetPositive.PositiveSet.partition_filter	40
Coq.FSets.FSetPositive.PositiveSet.partition_1	40
Coq.FSets.FSetPositive.PositiveSet.partition_2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: apply eq_refl).	0.0106949806213	3
Coq.FSets.FSetPositive.PositiveSet.xelements_spec	40
Coq.FSets.FSetPositive.PositiveSet.elements_1	40
Coq.FSets.FSetPositive.PositiveSet.elements_2	40
Coq.FSets.FSetPositive.PositiveSet.lt_rev_append	40
Coq.FSets.FSetPositive.PositiveSet.elements_3	40
Coq.FSets.FSetPositive.PositiveSet.elements_3w	40
Coq.FSets.FSetPositive.PositiveSet.choose_1	40
Coq.FSets.FSetPositive.PositiveSet.choose_2	40
Coq.FSets.FSetPositive.PositiveSet.choose_empty	40
Coq.FSets.FSetPositive.PositiveSet.choose_3'	40
Coq.FSets.FSetPositive.PositiveSet.choose_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.min_elt_2	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_1	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_3	40
Coq.FSets.FSetPositive.PositiveSet.max_elt_2	40
Coq.FSets.FMapPositive.append_assoc_0	40
Coq.FSets.FMapPositive.append_assoc_1	40
Coq.FSets.FMapPositive.append_neutral_r	40
Coq.FSets.FMapPositive.append_neutral_l	40	0.0.1.0.1.0.0	search with cache (only 1: induction i; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence).	0.016793012619	9
Coq.FSets.FMapPositive.PositiveMap.gempty	40	1.0.0.20.25	search with cache (only 1: compute; only 1: induction i; only 1: intuition; only 1: intuition; only 1: congruence).	1.52083897591	5813
Coq.FSets.FMapPositive.PositiveMap.gss	40
Coq.FSets.FMapPositive.PositiveMap.gleaf	40	0.0.0.0.0.0.0	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0171620845795	7
Coq.FSets.FMapPositive.PositiveMap.gso	40
Coq.FSets.FMapPositive.PositiveMap.rleaf	40	0.0.0.0.0.0.1	search with cache (only 1: destruct i; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0175030231476	8
Coq.FSets.FMapPositive.PositiveMap.grs	40
Coq.FSets.FMapPositive.PositiveMap.gro	40
Coq.FSets.FMapPositive.PositiveMap.xelements_correct	40
Coq.FSets.FMapPositive.PositiveMap.elements_correct	40
Coq.FSets.FMapPositive.PositiveMap.xfind_left	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ii	40
Coq.FSets.FMapPositive.PositiveMap.xelements_io	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oo	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oi	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct o; only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: destruct (in_inv H0); only 1: congruence; only 1: apply (IHm2 _ _ _ H1); only 1: simpl; only 1: intro H; only 1: destruct (in_app_or _ _ _ H); only 1: apply (IHm1 _ _ _ H0); only 1: apply (IHm2 _ _ _ H0)).	20.1091821194	8686
Coq.FSets.FMapPositive.PositiveMap.xelements_ih	40
Coq.FSets.FMapPositive.PositiveMap.xelements_oh	40
Coq.FSets.FMapPositive.PositiveMap.xelements_hi	40
Coq.FSets.FMapPositive.PositiveMap.xelements_ho	40
Coq.FSets.FMapPositive.PositiveMap.find_xfind_h	40
Coq.FSets.FMapPositive.PositiveMap.xelements_complete	40
Coq.FSets.FMapPositive.PositiveMap.elements_complete	40
Coq.FSets.FMapPositive.PositiveMap.cardinal_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_find	40
Coq.FSets.FMapPositive.PositiveMap.Empty_alt	40
Coq.FSets.FMapPositive.PositiveMap.Empty_Node	40
Coq.FSets.FMapPositive.PositiveMap.mem_1	40
Coq.FSets.FMapPositive.PositiveMap.mem_2	40
Coq.FSets.FMapPositive.PositiveMap.MapsTo_1	40	11	search with cache (only 1: congruence).	0.112053155899	60
Coq.FSets.FMapPositive.PositiveMap.find_1	40	0	search with cache (only 1: auto).	0.00870013237	1
Coq.FSets.FMapPositive.PositiveMap.find_2	40	0.0	search with cache (only 1: unfold MapsTo; only 1: auto).	0.0110008716583	2
Coq.FSets.FMapPositive.PositiveMap.empty_1	40	4.5	search with cache (only 1: rewrite Empty_alt; only 1: exact gempty).	0.186008930206	143
Coq.FSets.FMapPositive.PositiveMap.is_empty_1	40
Coq.FSets.FMapPositive.PositiveMap.is_empty_2	40
Coq.FSets.FMapPositive.PositiveMap.add_1	40
Coq.FSets.FMapPositive.PositiveMap.add_2	40
Coq.FSets.FMapPositive.PositiveMap.add_3	40	0.0.1.3.0	search with cache (only 1: unfold MapsTo; only 1: intro H; only 1: rewrite gso; only 1: auto; only 1: auto).	0.0559818744659	25
Coq.FSets.FMapPositive.PositiveMap.remove_1	40
Coq.FSets.FMapPositive.PositiveMap.remove_2	40
Coq.FSets.FMapPositive.PositiveMap.remove_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_1	40
Coq.FSets.FMapPositive.PositiveMap.elements_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_1	40
Coq.FSets.FMapPositive.PositiveMap.xelements_bits_lt_2	40
Coq.FSets.FMapPositive.PositiveMap.xelements_sort	40
Coq.FSets.FMapPositive.PositiveMap.elements_3	40
Coq.FSets.FMapPositive.PositiveMap.elements_3w	40
Coq.FSets.FMapPositive.PositiveMap.xgmapi	40
Coq.FSets.FMapPositive.PositiveMap.gmapi	40
Coq.FSets.FMapPositive.PositiveMap.mapi_1	40
Coq.FSets.FMapPositive.PositiveMap.mapi_2	40
Coq.FSets.FMapPositive.PositiveMap.map_1	40
Coq.FSets.FMapPositive.PositiveMap.map_2	40	0.0.0.0.0.0.0.3.0.0.0.0.0	search with cache (only 1: intros; only 1: apply mem_2; only 1: rewrite mem_find; only 1: destruct H as (v, H); only 1: generalize (find_1 H); only 1: unfold map; only 1: clear H; only 1: intros; only 1: rewrite gmapi in H; only 1: destruct (find x m); only 1: auto; only 1: simpl in *; only 1: discriminate).	10.9006898403	5707
Coq.FSets.FMapPositive.PositiveMap.xgmap2_l	40
Coq.FSets.FMapPositive.PositiveMap.xgmap2_r	40
Coq.FSets.FMapPositive.PositiveMap.gmap2	40
Coq.FSets.FMapPositive.PositiveMap.map2_1	40
Coq.FSets.FMapPositive.PositiveMap.map2_2	40
Coq.FSets.FMapPositive.PositiveMap.xfoldi_1	40
Coq.FSets.FMapPositive.PositiveMap.fold_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_1	40
Coq.FSets.FMapPositive.PositiveMap.equal_2	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsspec	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.gsident	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.xmap2_lr	40
Coq.FSets.FMapPositive.PositiveMapAdditionalFacts.map2_commut	40
Coq.FSets.FMapFacts.WFacts_fun.eq_bool_alt	40
Coq.FSets.FMapFacts.WFacts_fun.eq_option_alt	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_fun	40
Coq.FSets.FMapFacts.WFacts_fun.In_iff	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_iff	40	0.4.0.4.0	search with cache (only 1: split; only 1: intros; only 1: apply (MapsTo_1 H H0); only 1: intros; only 1: apply (MapsTo_1 (E.eq_sym H) H0)).	0.0722618103027	127
Coq.FSets.FMapFacts.WFacts_fun.mem_in_iff	40	5	search with cache (only 1: intuition).	0.0528140068054	60
Coq.FSets.FMapFacts.WFacts_fun.not_mem_in_iff	40	15.17.8	search with cache (only 1: intros; only 1: Ndec.eqb2eq; only 1: intuition).	7.68662905693	21751
Coq.FSets.FMapFacts.WFacts_fun.In_dec	40
Coq.FSets.FMapFacts.WFacts_fun.find_mapsto_iff	40	16	search with cache (only 1: intuition).	0.285526990891	503
Coq.FSets.FMapFacts.WFacts_fun.not_find_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.in_find_iff	40
Coq.FSets.FMapFacts.WFacts_fun.equal_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.empty_in_iff	40	3.2.2.2.4.1.0.5.8.0	search with cache (only 1: intuition; only 1: elim H; only 1: intro e; only 1: intro H'; only 1: elim H; only 1: intuition; only 1: elim H; only 1: clear H H0; only 1: intuition; only 1: apply (empty_1 H)).	25.586263895	29355
Coq.FSets.FMapFacts.WFacts_fun.is_empty_iff	40	6.1	search with cache (only 1: intros; only 1: intuition).	0.10163807869	18
Coq.FSets.FMapFacts.WFacts_fun.add_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_mapsto_iff	40	0.0.0.4.0	search with cache (only 1: intros; only 1: intuition; only 1: apply add_3 with x e; only 1: auto; only 1: auto).	0.021458864212	9
Coq.FSets.FMapFacts.WFacts_fun.add_neq_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_mapsto_iff	40	0.0.5	search with cache (only 1: intuition; only 1: apply remove_3 with x; only 1: auto).	0.147742033005	83
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_in_iff	40	0.0.0.1.0.0.0.0.0.1	search with cache (only 1: split; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_3 with x; only 1: auto; only 1: intros (e', H0); only 1: exists e'; only 1: apply remove_2; only 1: auto; only 1: auto).	0.21250295639	228
Coq.FSets.FMapFacts.WFacts_fun.elements_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.elements_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.map_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_in_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_inv	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.mem_find_b	40	0.0.0.0.0.0.4.11.0.13.0	search with cache (only 1: intros; only 1: case_eq (find x m); only 1: intros; only 1: apply mem_1; only 1: exists e; only 1: apply find_2; only 1: auto with map; only 1: rewrite <- not_find_in_iff, mem_in_iff; only 1: destruct (mem x m); only 1: intuition; only 1: intuition).	3.03568506241	5581
Coq.FSets.FMapFacts.WFacts_fun.mem_b	40
Coq.FSets.FMapFacts.WFacts_fun.find_o	40
Coq.FSets.FMapFacts.WFacts_fun.empty_o	40	0.0.8.3.0.0.2.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- find_mapsto_iff; only 1: intuition; only 1: rewrite empty_mapsto_iff in H; only 1: elim H; only 1: discriminate).	2.34176087379	2605
Coq.FSets.FMapFacts.WFacts_fun.empty_a	40
Coq.FSets.FMapFacts.WFacts_fun.add_eq_o	40	0.0.1	search with cache (only 1: intros; only 1: apply find_1; only 1: auto with map).	0.012736082077	4
Coq.FSets.FMapFacts.WFacts_fun.add_neq_o	40	1.2.0.2.0.4.5	search with cache (only 1: intro e; only 1: intuition; only 1: rewrite eq_option_alt; only 1: intros; only 1: rewrite <- 2!find_mapsto_iff; only 1: intuition; only 1: apply (add_3 H H0)).	0.818109989166	904
Coq.FSets.FMapFacts.WFacts_fun.add_o	40	0.0.0.0.0.0.3.12.1	search with cache (only 1: intros; only 1: destruct (eq_dec x y) as [E| E]; only 1: apply find_1; only 1: auto with map; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- 2!find_mapsto_iff; only 1: apply add_neq_mapsto_iff; only 1: auto).	6.79865193367	5508
Coq.FSets.FMapFacts.WFacts_fun.add_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.add_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_o	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_o	40	0.2.0.1.0	search with cache (only 1: intros; only 1: rewrite eq_option_alt; only 1: intro e'; only 1: rewrite <- find_mapsto_iff, remove_mapsto_iff; only 1: now intuition).	0.0470991134644	14
Coq.FSets.FMapFacts.WFacts_fun.remove_o	40	3.3.0.0	search with cache (only 1: intros; only 1: destruct (eq_dec x y); only 1: auto with map; only 1: auto with map).	0.0864548683167	26
Coq.FSets.FMapFacts.WFacts_fun.remove_eq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_neq_b	40
Coq.FSets.FMapFacts.WFacts_fun.remove_b	40	0.0.0.0.0.0.0.1.0.0.1.0.5.0	search with cache (only 1: intros; only 1: unfold eqb; only 1: destruct (eq_dec x y); only 1: rewrite mem_find_b; only 1: rewrite remove_eq_o; only 1: rewrite mem_find_b; only 1: simpl; only 1: auto; only 1: auto; only 1: do 2 rewrite mem_find_b; only 1: rewrite remove_neq_o; only 1: simpl; only 1: auto; only 1: auto).	34.2125601768	17398
Coq.FSets.FMapFacts.WFacts_fun.map_o	40
Coq.FSets.FMapFacts.WFacts_fun.map_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_b	40
Coq.FSets.FMapFacts.WFacts_fun.mapi_o	40
Coq.FSets.FMapFacts.WFacts_fun.map2_1bis	40
Coq.FSets.FMapFacts.WFacts_fun.elements_o	40
Coq.FSets.FMapFacts.WFacts_fun.elements_b	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_mapsto_iff	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equiv	40
Coq.FSets.FMapFacts.WFacts_fun.Equiv_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_Equivb_eqdec	40
Coq.FSets.FMapFacts.WFacts_fun.Equal_refl	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: intro k; only 1: rewrite eq_option_alt; only 1: intro e; only 1: split; only 1: auto; only 1: auto).	0.022824048996	7
Coq.FSets.FMapFacts.WFacts_fun.Equal_sym	40	1.6.0	search with cache (only 1: intros; only 1: intro k; only 1: auto).	0.332312822342	50
Coq.FSets.FMapFacts.WFacts_fun.Equal_trans	40	4.5.2.1	search with cache (only 1: unfold Equal; only 1: intros; only 1: rewrite H; only 1: auto).	8.49664711952	2334
Coq.FSets.FMapFacts.WFacts_fun.Equal_ST	40	3	search with cache (only 1: dintuition).	0.0394098758698	13
Coq.FSets.FMapFacts.WFacts_fun.In_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.MapsTo_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.Empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.is_empty_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.mem_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.find_m_Proper	40	0.0.2.1.4.0	search with cache (only 1: intros k k' Hk m m' Hm; only 1: rewrite eq_option_alt; only 1: intro e; only 1: rewrite <- 2!find_mapsto_iff; only 1: rewrite (MapsTo_iff m e Hk), find_mapsto_iff, find_mapsto_iff, Hm; only 1: intuition).	1.05991482735	397
Coq.FSets.FMapFacts.WFacts_fun.add_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.remove_m_Proper	40
Coq.FSets.FMapFacts.WFacts_fun.map_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.eqk_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.eqke_equiv	40
Coq.FSets.FMapFacts.WProperties_fun.InA_eqke_eqk	40
Coq.FSets.FMapFacts.WProperties_fun.NoDupA_eqk_eqke	40
Coq.FSets.FMapFacts.WProperties_fun.findA_rev	40
Coq.FSets.FMapFacts.WProperties_fun.elements_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.elements_empty	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_1b	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_2	40
Coq.FSets.FMapFacts.WProperties_fun.of_list_3	40
Coq.FSets.FMapFacts.WProperties_fun.fold_spec_right	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_nodep	40	1.0.1.0.1.0	search with cache (only 1: intros A P f i m Hempty Hstep; only 1: apply fold_rec; only 1: intros; only 1: auto; only 1: intros; only 1: auto).	0.235342979431	80
Coq.FSets.FMapFacts.WProperties_fun.fold_rec_weak	40
Coq.FSets.FMapFacts.WProperties_fun.fold_rel	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction	40
Coq.FSets.FMapFacts.WProperties_fun.map_induction_bis	40
Coq.FSets.FMapFacts.WProperties_fun.fold_identity	40
Coq.FSets.FMapFacts.WProperties_fun.fold_init	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.fold_commutes	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Equal2	40
Coq.FSets.FMapFacts.WProperties_fun.fold_Add	40
Coq.FSets.FMapFacts.WProperties_fun.fold_add	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_fold	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Equal_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_2	40	0.0.0.0.0.0.1.5.1.7	search with cache (only 1: intros i m k e Hnotin; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Add; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: red; only 1: auto).	2.34625411034	2049
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_inv_2b	40	0.0.0.0.0.0.0.5.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in *; only 1: generalize (elements_mapsto_iff m); only 1: destruct (elements m); only 1: generalize (elements_mapsto_iff m); only 1: intuition; only 1: exists p; only 1: rewrite H0; only 1: destruct p; only 1: simpl; only 1: constructor; only 1: red; only 1: auto).	23.1606400013	10998
Coq.FSets.FMapFacts.WProperties_fun.filter_iff	40
Coq.FSets.FMapFacts.WProperties_fun.for_all_iff	40
Coq.FSets.FMapFacts.WProperties_fun.exists_iff	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_alt	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_1	40
Coq.FSets.FMapFacts.WProperties_fun.partition_iff_2	40
Coq.FSets.FMapFacts.WProperties_fun.partition_Partition	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_In	40
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_sym	40	6.0.7.0.0	search with cache (only 1: intros; only 1: rewrite Disjoint_alt; only 1: intros Hiff; only 1: intros k e e'; only 1: firstorder).	0.667109012604	839
Coq.FSets.FMapFacts.WProperties_fun.Partition_sym	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Empty	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_Add	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_fold	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_cardinal	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_partition	40
Coq.FSets.FMapFacts.WProperties_fun.update_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.update_dec	40
Coq.FSets.FMapFacts.WProperties_fun.update_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.diff_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_mapsto_iff	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_in_iff	40
Coq.FSets.FMapFacts.WProperties_fun.cardinal_m_Proper	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_Equal with (eqA := eq); only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto; only 1: compute; only 1: auto).	0.146642923355	88
Coq.FSets.FMapFacts.WProperties_fun.Disjoint_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.Partition_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.update_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.restrict_m_Proper	40
Coq.FSets.FMapFacts.WProperties_fun.diff_m_Proper	40
Coq.FSets.FMapFacts.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.gtb_1	40
Coq.FSets.FMapFacts.OrdProperties.leb_1	40
Coq.FSets.FMapFacts.OrdProperties.gtb_compat	40
Coq.FSets.FMapFacts.OrdProperties.leb_compat	40
Coq.FSets.FMapFacts.OrdProperties.elements_split	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.elements_Add_Below	40
Coq.FSets.FMapFacts.OrdProperties.elements_Equal_eqlistA	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Above	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.max_elt_Empty	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Below	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_MapsTo	40
Coq.FSets.FMapFacts.OrdProperties.min_elt_Empty	40	2.1.0.0.6.1.0	search with cache (only 1: intros; only 1: rewrite elements_Empty; only 1: unfold min_elt in *; only 1: induction (elements m); only 1: auto; only 1: destruct a; only 1: discriminate).	6.73087906837	5122
Coq.FSets.FMapFacts.OrdProperties.map_induction_max	40
Coq.FSets.FMapFacts.OrdProperties.map_induction_min	40
Coq.FSets.FMapFacts.OrdProperties.fold_Equal	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Above	40
Coq.FSets.FMapFacts.OrdProperties.fold_Add_Below	40
Coq.FSets.FMapWeakList.Raw.empty_1	40	0.2	search with cache (only 1: repeat red; only 1: inversion 1).	0.0112020969391	4
Coq.FSets.FMapWeakList.Raw.empty_NoDup	40	1.0.21	search with cache (only 1: unfold Empty, empty; only 1: unfold PX.eqk, PX.eqke; only 1: eauto).	0.0822019577026	312
Coq.FSets.FMapWeakList.Raw.is_empty_1	40
Coq.FSets.FMapWeakList.Raw.is_empty_2	40	0.2.0.0.0.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: destruct p; only 1: absurd (InA eqke (t0, e) ((t0, e) :: l)); only 1: intuition; only 1: auto).	0.633105993271	281
Coq.FSets.FMapWeakList.Raw.mem_1	40
Coq.FSets.FMapWeakList.Raw.mem_2	40
Coq.FSets.FMapWeakList.Raw.find_2	40
Coq.FSets.FMapWeakList.Raw.find_1	40
Coq.FSets.FMapWeakList.Raw.find_eq	40
Coq.FSets.FMapWeakList.Raw.add_1	40
Coq.FSets.FMapWeakList.Raw.add_2	40
Coq.FSets.FMapWeakList.Raw.add_3	40
Coq.FSets.FMapWeakList.Raw.add_3'	40
Coq.FSets.FMapWeakList.Raw.add_NoDup	40
Coq.FSets.FMapWeakList.Raw.add_eq	40
Coq.FSets.FMapWeakList.Raw.add_not_eq	40
Coq.FSets.FMapWeakList.Raw.remove_1	40
Coq.FSets.FMapWeakList.Raw.remove_2	40
Coq.FSets.FMapWeakList.Raw.remove_3	40	0.0.1.1.0.0.0.1.0	search with cache (only 1: intros m Hm x y e; only 1: clear Hm; only 1: unfold PX.MapsTo; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: inversion_clear 1; only 1: auto; only 1: auto).	4.34726500511	1388
Coq.FSets.FMapWeakList.Raw.remove_3'	40	0.0.0.0.0.0.2.0	search with cache (only 1: intros m Hm x y e; only 1: generalize Hm; only 1: functional induction (remove x m); only 1: auto; only 1: auto; only 1: do 2 inversion_clear 1; only 1: auto; only 1: auto).	0.368554115295	82
Coq.FSets.FMapWeakList.Raw.remove_NoDup	40
Coq.FSets.FMapWeakList.Raw.elements_1	40	0.0.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros p l inlist; only 1: intros NoDup hyp; only 1: auto).	0.0282959938049	6
Coq.FSets.FMapWeakList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00667810440063	1
Coq.FSets.FMapWeakList.Raw.elements_3w	40	5.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: auto).	0.160308122635	30
Coq.FSets.FMapWeakList.Raw.fold_1	40	1.1.2.1.0.1.11	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: simpl; only 1: destruct a as (a', b'); only 1: simpl; only 1: auto).	5.97625398636	4921
Coq.FSets.FMapWeakList.Raw.submap_1	40
Coq.FSets.FMapWeakList.Raw.submap_2	40
Coq.FSets.FMapWeakList.Raw.equal_1	40
Coq.FSets.FMapWeakList.Raw.equal_2	40
Coq.FSets.FMapWeakList.Raw.map_1	40
Coq.FSets.FMapWeakList.Raw.map_2	40
Coq.FSets.FMapWeakList.Raw.map_NoDup	40
Coq.FSets.FMapWeakList.Raw.mapi_1	40
Coq.FSets.FMapWeakList.Raw.mapi_2	40
Coq.FSets.FMapWeakList.Raw.mapi_NoDup	40	1.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: contradict H; only 1: clear IHm H0; only 1: induction m; only 1: inversion H; only 1: destruct a; only 1: inversion H; only 1: auto; only 1: auto; only 1: auto).	33.6767950058	9998
Coq.FSets.FMapWeakList.Raw.fold_right_pair_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_NoDup	40
Coq.FSets.FMapWeakList.Raw.combine_l_1	40
Coq.FSets.FMapWeakList.Raw.combine_r_1	40
Coq.FSets.FMapWeakList.Raw.combine_1	40
Coq.FSets.FMapWeakList.Raw.map2_NoDup	40
Coq.FSets.FMapWeakList.Raw.map2_0	40
Coq.FSets.FMapWeakList.Raw.map2_1	40
Coq.FSets.FMapWeakList.Raw.map2_2	40
Coq.FSets.FMapWeakList.Make.MapsTo_1	40
Coq.FSets.FMapWeakList.Make.mem_1	40
Coq.FSets.FMapWeakList.Make.mem_2	40
Coq.FSets.FMapWeakList.Make.empty_1	40	80	search with cache (only 1: inversion_clear 1).	0.272670030594	3286
Coq.FSets.FMapWeakList.Make.is_empty_1	40
Coq.FSets.FMapWeakList.Make.is_empty_2	40
Coq.FSets.FMapWeakList.Make.add_1	40
Coq.FSets.FMapWeakList.Make.add_2	40
Coq.FSets.FMapWeakList.Make.add_3	40
Coq.FSets.FMapWeakList.Make.remove_1	40
Coq.FSets.FMapWeakList.Make.remove_2	40
Coq.FSets.FMapWeakList.Make.remove_3	40
Coq.FSets.FMapWeakList.Make.find_1	40
Coq.FSets.FMapWeakList.Make.find_2	40
Coq.FSets.FMapWeakList.Make.elements_1	40	1	search with cache (only 1: auto).	0.0174601078033	14
Coq.FSets.FMapWeakList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0105359554291	2
Coq.FSets.FMapWeakList.Make.elements_3w	40	1.44	search with cache (only 1: induction m; only 1: auto).	0.536082983017	2961
Coq.FSets.FMapWeakList.Make.cardinal_1	40	4	search with cache (only 1: auto).	0.0107760429382	14
Coq.FSets.FMapWeakList.Make.fold_1	40
Coq.FSets.FMapWeakList.Make.equal_1	40
Coq.FSets.FMapWeakList.Make.equal_2	40
Coq.FSets.FMapWeakList.Make.map_1	40
Coq.FSets.FMapWeakList.Make.map_2	40
Coq.FSets.FMapWeakList.Make.mapi_1	40
Coq.FSets.FMapWeakList.Make.mapi_2	40
Coq.FSets.FMapWeakList.Make.map2_1	40
Coq.FSets.FMapWeakList.Make.map2_2	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.In_In	40	0.1.4.1	search with cache (only 1: intros s Hsame; only 1: rewrite elements_iff; only 1: symmetry; only 1: apply elements_iff).	0.0283839702606	17
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0.0	search with cache (only 1: compute; only 1: intros; only 1: auto with extcore).	0.0101330280304	3
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	4.0.6.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.294892787933	393
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.0.0.1.0.1.1.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate; only 1: intuition).	2.11235594749	1925
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.5.1	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.101485967636	81
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	2.68062400818	1126
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.0.0.0.3.0.2.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	30.8638818264	4791
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.FSets.FSetToFiniteSet.WS_to_Finite_set.Ens_to_FSet	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_eq	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.empty_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_equal_empty	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_1	40	3.2	search with cache (only 1: intros; only 1: auto with set).	0.0426390171051	68
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.00839996337891	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_1	40	0	search with cache (only 1: auto with set).	0.00869584083557	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.0110919475555	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.00765705108643	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_3	40	0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: tauto).	0.0361731052399	29
Coq.FSets.FSetEqProperties.WEqProperties_fun.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: tauto).	0.0186040401459	12
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_refl	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0157630443573	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_sym	40	3.0.3.0.6.15	search with cache (only 1: apply eq_true_iff_eq; only 1: intuition; only 1: rewrite (equal_2 H); only 1: auto with set; only 1: rewrite (equal_2 H); only 1: auto with set).	6.89084005356	5027
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_trans	40	6.12.1.1	search with cache (only 1: intros; only 1: apply equal_1; only 1: rewrite (equal_2 H); only 1: intuition).	22.1313998699	16669
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0139138698578	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0129458904266	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_refl	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0146100521088	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_antisym	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.023561000824	13
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_trans	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_equal	40	3.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0156419277191	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.choose_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_mem_3	40	0.2	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0957059860229	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_equal	40	0	search with cache (only 1: auto with set).	0.00801801681519	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_mem_3	40	4.3	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set).	0.0934739112854	9
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_equal	40	0.0.0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0823559761047	21
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_remove	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_add	40	3.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.122065067291	28
Coq.FSets.FSetEqProperties.WEqProperties_fun.is_empty_cardinal	40	0.0.0.0.0.0.7.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_1; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	1.10501503944	787
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_1	40	0	search with cache (only 1: auto with set).	0.00752902030945	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_2	40	4.2.3	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.308963060379	74
Coq.FSets.FSetEqProperties.WEqProperties_fun.singleton_mem_3	40	1.3.5.0.0.1	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto; only 1: intuition; only 1: discriminate).	0.530048847198	867
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_sym	40	0	search with cache (only 1: auto with set).	0.00765705108643	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0113391876221	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00809288024902	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00798487663269	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_assoc	40	0	search with cache (only 1: auto with set).	0.00780296325684	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0497100353241	3
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_add	40	0	search with cache (only 1: auto with set).	0.00725507736206	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.019150018692	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00681805610657	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.0487480163574	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_sym	40	0	search with cache (only 1: auto with set).	0.00758600234985	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.0090057849884	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.00821805000305	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00792479515076	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00711512565613	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0178599357605	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00721311569214	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_1	40	4.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0868098735809	7
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_add_2	40	1.4	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.119682073593	22
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0200288295746	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00736689567566	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0224289894104	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset	40	0	search with cache (only 1: auto with set).	0.0075409412384	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00952315330505	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0560009479523	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_empty	40	3	search with cache (only 1: auto with set).	0.0175919532776	4
Coq.FSets.FSetEqProperties.WEqProperties_fun.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.00712108612061	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.set_rec	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exclusive_set	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0138149261475	2
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_equal	40	2.0.0.0.3.5	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	16.9490969181	6984
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_add	40	0.0.3.0.0.0.0.2.4	search with cache (only 1: symmetry; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: rewrite not_mem_iff; only 1: auto; only 1: auto with set).	5.72490000725	2904
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_fold	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_1	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0460839271545	10
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_fold_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_union	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_1	40	0	search with cache (only 1: auto with set fset).	0.00819492340088	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.0263080596924	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.025691986084	8
Coq.FSets.FSetEqProperties.WEqProperties_fun.remove_cardinal_2	40	0.5.23	search with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: auto with set fset).	17.6312141418	22444
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_cardinal	40	0.4.4.4.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto).	0.77336192131	1001
Coq.FSets.FSetEqProperties.WEqProperties_fun.subset_cardinal	40	7	search with cache (only 1: auto with set fset).	0.0392220020294	38
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.2.0	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: auto).	0.0311040878296	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_mem	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_1	40	14.1.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: auto with set).	26.030454874	14259
Coq.FSets.FSetEqProperties.WEqProperties_fun.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0107328891754	1
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_add_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_iff; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	6.94011497498	1815
Coq.FSets.FSetEqProperties.WEqProperties_fun.union_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.filter_union	40	0.0.0.0.4.1.0.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_iff; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	8.21989607811	1360
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_1	40	0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: auto with set).	0.901826858521	612
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_2	40	0.1.9.0.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.199520111084	192
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.for_all_exists	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.Comp'	40	0.0.0.1	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.015200138092	5
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_1	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_2	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_3	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.exists_mem_4	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_plus	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_filter	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.fold_compat	40
Coq.FSets.FSetEqProperties.WEqProperties_fun.sum_compat	40
Coq.FSets.FSetBridge.DepOfNodep.empty	40
Coq.FSets.FSetBridge.DepOfNodep.is_empty	40
Coq.FSets.FSetBridge.DepOfNodep.mem	40
Coq.FSets.FSetBridge.DepOfNodep.add	40
Coq.FSets.FSetBridge.DepOfNodep.singleton	40
Coq.FSets.FSetBridge.DepOfNodep.remove	40
Coq.FSets.FSetBridge.DepOfNodep.union	40
Coq.FSets.FSetBridge.DepOfNodep.inter	40
Coq.FSets.FSetBridge.DepOfNodep.diff	40
Coq.FSets.FSetBridge.DepOfNodep.equal	40
Coq.FSets.FSetBridge.DepOfNodep.subset	40
Coq.FSets.FSetBridge.DepOfNodep.elements	40
Coq.FSets.FSetBridge.DepOfNodep.fold	40	40.0.5.51	search with cache (only 1: intros y Hy; only 1: simpl; only 1: intros; only 1: eauto with set).	12.4661679268	52360
Coq.FSets.FSetBridge.DepOfNodep.cardinal	40	25.0.9	search with cache (only 1: simpl; only 1: intros; only 1: eauto with set).	1.26004600525	2710
Coq.FSets.FSetBridge.DepOfNodep.compat_P_aux	40
Coq.FSets.FSetBridge.DepOfNodep.filter	40
Coq.FSets.FSetBridge.DepOfNodep.for_all	40
Coq.FSets.FSetBridge.DepOfNodep.exists_	40
Coq.FSets.FSetBridge.DepOfNodep.partition	40
Coq.FSets.FSetBridge.DepOfNodep.choose_aux	40
Coq.FSets.FSetBridge.DepOfNodep.choose	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok1	40
Coq.FSets.FSetBridge.DepOfNodep.choose_ok2	40
Coq.FSets.FSetBridge.DepOfNodep.choose_equal	40
Coq.FSets.FSetBridge.DepOfNodep.min_elt	40
Coq.FSets.FSetBridge.DepOfNodep.max_elt	40
Coq.FSets.FSetBridge.NodepOfDep.empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_1	40
Coq.FSets.FSetBridge.NodepOfDep.is_empty_2	40
Coq.FSets.FSetBridge.NodepOfDep.mem_1	40
Coq.FSets.FSetBridge.NodepOfDep.mem_2	40
Coq.FSets.FSetBridge.NodepOfDep.equal_1	40
Coq.FSets.FSetBridge.NodepOfDep.equal_2	40	0.0.0.0.0.2	search with cache (only 1: intros s x; only 1: unfold equal; only 1: case M.equal; only 1: auto; only 1: intros; only 1: discriminate H).	0.0560209751129	46
Coq.FSets.FSetBridge.NodepOfDep.subset_1	40
Coq.FSets.FSetBridge.NodepOfDep.subset_2	40	0.0.0.0.0.1	search with cache (only 1: intros s s'; only 1: unfold subset; only 1: case M.subset; only 1: intuition; only 1: intuition; only 1: inversion H).	0.181815862656	51
Coq.FSets.FSetBridge.NodepOfDep.choose_1	40
Coq.FSets.FSetBridge.NodepOfDep.choose_2	40	0.4.0.0.0.1.3	search with cache (only 1: intro s; only 1: unfold choose; only 1: case (M.choose s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.757019996643	808
Coq.FSets.FSetBridge.NodepOfDep.choose_3	40
Coq.FSets.FSetBridge.NodepOfDep.elements_1	40
Coq.FSets.FSetBridge.NodepOfDep.elements_2	40	0.0.4.1	search with cache (only 1: unfold elements; only 1: intros s x; only 1: case (M.elements s); only 1: firstorder).	0.0406980514526	36
Coq.FSets.FSetBridge.NodepOfDep.elements_3	40	0.0.1.0	search with cache (only 1: intros; only 1: unfold elements; only 1: case (M.elements s); only 1: firstorder).	0.0156888961792	5
Coq.FSets.FSetBridge.NodepOfDep.elements_3w	40	2.0	search with cache (only 1: intros; only 1: firstorder).	0.0261919498444	25
Coq.FSets.FSetBridge.NodepOfDep.min_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_2	40
Coq.FSets.FSetBridge.NodepOfDep.min_elt_3	40	0.0.0.0.0.0.2.0	search with cache (only 1: intro s; only 1: unfold min_elt; only 1: case (M.min_elt s); only 1: simple destruct s0; only 1: intros; only 1: intuition; only 1: discriminate H; only 1: auto).	0.0315430164337	17
Coq.FSets.FSetBridge.NodepOfDep.max_elt_1	40
Coq.FSets.FSetBridge.NodepOfDep.max_elt_2	40	0.0.0.0.0.0.0.0.0.1.0.1	search with cache (only 1: intros s x; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: unfold For_all; only 1: simple destruct s0; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: firstorder; only 1: intros; only 1: discriminate H).	35.228402853	3442
Coq.FSets.FSetBridge.NodepOfDep.max_elt_3	40	0.0.0.0.1.3.0	search with cache (only 1: intro s; only 1: unfold max_elt; only 1: case (M.max_elt s); only 1: simple destruct s0; only 1: intros; only 1: discriminate H; only 1: auto).	0.391909122467	152
Coq.FSets.FSetBridge.NodepOfDep.add_1	40
Coq.FSets.FSetBridge.NodepOfDep.add_2	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.114956140518	5
Coq.FSets.FSetBridge.NodepOfDep.add_3	40	0.0.0.0.2	search with cache (only 1: intros s x y; only 1: unfold add; only 1: case (M.add x s); only 1: unfold Add; only 1: firstorder).	0.0347259044647	22
Coq.FSets.FSetBridge.NodepOfDep.remove_1	40
Coq.FSets.FSetBridge.NodepOfDep.remove_2	40	0.0.0.0	search with cache (only 1: intros; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0166490077972	4
Coq.FSets.FSetBridge.NodepOfDep.remove_3	40	0.0.0.1	search with cache (only 1: intros s x y; only 1: unfold remove; only 1: case (M.remove x s); only 1: firstorder).	0.0594861507416	31
Coq.FSets.FSetBridge.NodepOfDep.singleton_1	40
Coq.FSets.FSetBridge.NodepOfDep.singleton_2	40	0.0.0.0	search with cache (only 1: intros x y; only 1: unfold singleton; only 1: case (M.singleton x); only 1: firstorder).	0.013444185257	4
Coq.FSets.FSetBridge.NodepOfDep.union_1	40
Coq.FSets.FSetBridge.NodepOfDep.union_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0134518146515	4
Coq.FSets.FSetBridge.NodepOfDep.union_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold union; only 1: case (M.union s s'); only 1: firstorder).	0.0141949653625	4
Coq.FSets.FSetBridge.NodepOfDep.inter_1	40
Coq.FSets.FSetBridge.NodepOfDep.inter_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.0141868591309	4
Coq.FSets.FSetBridge.NodepOfDep.inter_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold inter; only 1: case (M.inter s s'); only 1: firstorder).	0.014554977417	4
Coq.FSets.FSetBridge.NodepOfDep.diff_1	40
Coq.FSets.FSetBridge.NodepOfDep.diff_2	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0141491889954	4
Coq.FSets.FSetBridge.NodepOfDep.diff_3	40	0.0.0.0	search with cache (only 1: intros s s' x; only 1: unfold diff; only 1: case (M.diff s s'); only 1: firstorder).	0.0145418643951	4
Coq.FSets.FSetBridge.NodepOfDep.cardinal_1	40
Coq.FSets.FSetBridge.NodepOfDep.fold_1	40
Coq.FSets.FSetBridge.NodepOfDep.f_dec	40
Coq.FSets.FSetBridge.NodepOfDep.compat_P_aux	40	9.5.1.24.0	search with cache (only 1: intros; only 1: intro s; only 1: intros; only 1: rewrite <- (H _ _ H0); only 1: intuition).	3.63779401779	9302
Coq.FSets.FSetBridge.NodepOfDep.filter_1	40
Coq.FSets.FSetBridge.NodepOfDep.filter_2	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.209664821625	7
Coq.FSets.FSetBridge.NodepOfDep.filter_3	40	0.1.0.0.0.0	search with cache (only 1: intros s x f; only 1: unfold filter; only 1: destruct M.filter as (x0, Hiff); only 1: intuition; only 1: generalize (Hiff (compat_P_aux H)); only 1: firstorder).	0.227417945862	7
Coq.FSets.FSetBridge.NodepOfDep.for_all_1	40
Coq.FSets.FSetBridge.NodepOfDep.for_all_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold for_all; only 1: case M.for_all; only 1: intuition; only 1: intuition; only 1: firstorder).	0.0259230136871	6
Coq.FSets.FSetBridge.NodepOfDep.exists_1	40
Coq.FSets.FSetBridge.NodepOfDep.exists_2	40	0.0.0.0.0.0	search with cache (only 1: intros s f; only 1: unfold exists_; only 1: case M.exists_; only 1: intuition; only 1: intuition; only 1: inversion H0).	0.0475928783417	6
Coq.FSets.FSetBridge.NodepOfDep.partition_1	40
Coq.FSets.FSetBridge.NodepOfDep.partition_2	40
Coq.FSets.FSetCompat.Backport_Sets.lt_not_eq	40
Coq.FSets.FSetCompat.Backport_Sets.compare	40
Coq.FSets.FSetCompat.Update_WSets.In_compat	40	0.0.0.0.0.7.2	search with cache (only 1: simpl_relation; only 1: rewrite H; only 1: split; only 1: intros; only 1: eauto with set; only 1: intros; only 1: eauto with set).	0.425768852234	661
Coq.FSets.FSetCompat.Update_WSets.mem_spec	40	2.24.7	search with cache (only 1: intuition; only 1: repeat red; only 1: intuition).	4.51523780823	14006
Coq.FSets.FSetCompat.Update_WSets.equal_spec	40
Coq.FSets.FSetCompat.Update_WSets.subset_spec	40
Coq.FSets.FSetCompat.Update_WSets.is_empty_spec	40
Coq.FSets.FSetCompat.Update_WSets.add_spec	40
Coq.FSets.FSetCompat.Update_WSets.remove_spec	40
Coq.FSets.FSetCompat.Update_WSets.singleton_spec	40
Coq.FSets.FSetCompat.Update_WSets.elements_spec1	40	5.14.1.6	search with cache (only 1: intuition; only 1: apply MF.mem_iff; only 1: apply MF.mem_iff; only 1: intuition).	3.5382771492	9380
Coq.FSets.FSetCompat.Update_WSets.for_all_spec	40
Coq.FSets.FSetCompat.Update_WSets.exists_spec	40
Coq.FSets.FSetCompat.Update_Sets.lt_strorder	40
Coq.FSets.FSetCompat.Update_Sets.lt_compat	40
Coq.FSets.FSetCompat.Update_Sets.compare_spec	40
Coq.FSets.FSetProperties.WProperties_fun.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0463998317719	5
Coq.FSets.FSetProperties.WProperties_fun.Add_Equal	40
Coq.FSets.FSetProperties.WProperties_fun.equal_refl	40	11	search with cache (only 1: fsetdec).	0.0628061294556	61
Coq.FSets.FSetProperties.WProperties_fun.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0258710384369	1
Coq.FSets.FSetProperties.WProperties_fun.equal_trans	40	0	search with cache (only 1: fsetdec).	0.0356388092041	1
Coq.FSets.FSetProperties.WProperties_fun.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0132720470428	1
Coq.FSets.FSetProperties.WProperties_fun.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0267989635468	1
Coq.FSets.FSetProperties.WProperties_fun.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0552461147308	1
Coq.FSets.FSetProperties.WProperties_fun.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0215449333191	1
Coq.FSets.FSetProperties.WProperties_fun.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0152080059052	1
Coq.FSets.FSetProperties.WProperties_fun.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0294408798218	1
Coq.FSets.FSetProperties.WProperties_fun.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0282719135284	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0486040115356	1
Coq.FSets.FSetProperties.WProperties_fun.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.0239460468292	1
Coq.FSets.FSetProperties.WProperties_fun.in_subset	40	0	search with cache (only 1: fsetdec).	0.0215899944305	1
Coq.FSets.FSetProperties.WProperties_fun.double_inclusion	40	0.0.0.1.2	search with cache (only 1: split; only 1: split; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	0.0962378978729	8
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0481898784637	1
Coq.FSets.FSetProperties.WProperties_fun.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0249691009521	1
Coq.FSets.FSetProperties.WProperties_fun.add_equal	40	6.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: fsetdec).	0.108660936356	21
Coq.FSets.FSetProperties.WProperties_fun.add_add	40	0	search with cache (only 1: fsetdec).	0.0928938388824	1
Coq.FSets.FSetProperties.WProperties_fun.remove_equal	40	0	search with cache (only 1: fsetdec).	0.070296049118	1
Coq.FSets.FSetProperties.WProperties_fun.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0684859752655	1
Coq.FSets.FSetProperties.WProperties_fun.add_remove	40	0	search with cache (only 1: fsetdec).	0.0778539180756	1
Coq.FSets.FSetProperties.WProperties_fun.remove_add	40	0	search with cache (only 1: fsetdec).	0.0907480716705	1
Coq.FSets.FSetProperties.WProperties_fun.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0492060184479	1
Coq.FSets.FSetProperties.WProperties_fun.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.179415941238	1
Coq.FSets.FSetProperties.WProperties_fun.union_sym	40	0	search with cache (only 1: fsetdec).	0.0472600460052	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0399079322815	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0617060661316	1
Coq.FSets.FSetProperties.WProperties_fun.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0712258815765	1
Coq.FSets.FSetProperties.WProperties_fun.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0879888534546	1
Coq.FSets.FSetProperties.WProperties_fun.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0538191795349	1
Coq.FSets.FSetProperties.WProperties_fun.union_add	40	0	search with cache (only 1: fsetdec).	0.103083133698	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.180489063263	1
Coq.FSets.FSetProperties.WProperties_fun.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.157512903214	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.018541097641	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.0177547931671	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0436849594116	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0325748920441	1
Coq.FSets.FSetProperties.WProperties_fun.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0314650535583	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0405669212341	1
Coq.FSets.FSetProperties.WProperties_fun.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.037180185318	1
Coq.FSets.FSetProperties.WProperties_fun.not_in_union	40	3	search with cache (only 1: fsetdec).	0.0998101234436	29
Coq.FSets.FSetProperties.WProperties_fun.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0438220500946	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0533618927002	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0532341003418	1
Coq.FSets.FSetProperties.WProperties_fun.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0568389892578	1
Coq.FSets.FSetProperties.WProperties_fun.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0765039920807	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.106740951538	1
Coq.FSets.FSetProperties.WProperties_fun.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.119127988815	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.0970950126648	1
Coq.FSets.FSetProperties.WProperties_fun.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0783569812775	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0413191318512	1
Coq.FSets.FSetProperties.WProperties_fun.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0279929637909	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0185759067535	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0184950828552	1
Coq.FSets.FSetProperties.WProperties_fun.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0300090312958	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0352380275726	1
Coq.FSets.FSetProperties.WProperties_fun.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0402181148529	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0210931301117	1
Coq.FSets.FSetProperties.WProperties_fun.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0773301124573	1
Coq.FSets.FSetProperties.WProperties_fun.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.056746006012	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0981721878052	1
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.0872910022736	1
Coq.FSets.FSetProperties.WProperties_fun.Add_add	40	1.1	search with cache (only 1: intro H; only 1: fsetdec).	0.067549943924	12
Coq.FSets.FSetProperties.WProperties_fun.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.461008071899	3
Coq.FSets.FSetProperties.WProperties_fun.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.129379034042	3
Coq.FSets.FSetProperties.WProperties_fun.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.252701044083	2
Coq.FSets.FSetProperties.WProperties_fun.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.237854957581	3
Coq.FSets.FSetProperties.WProperties_fun.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.165731906891	2
Coq.FSets.FSetProperties.WProperties_fun.elements_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.elements_empty	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_1	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_2	40
Coq.FSets.FSetProperties.WProperties_fun.of_list_3	40
Coq.FSets.FSetProperties.WProperties_fun.fold_spec_right	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_nodep	40	2.0.0.4.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: eauto).	0.861262083054	537
Coq.FSets.FSetProperties.WProperties_fun.fold_rec_weak	40
Coq.FSets.FSetProperties.WProperties_fun.fold_rel	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction	40
Coq.FSets.FSetProperties.WProperties_fun.set_induction_bis	40
Coq.FSets.FSetProperties.WProperties_fun.fold_identity	40	4.1.1.0.0.3.2	search with cache (only 1: intros; only 1: apply fold_rec; only 1: intros; only 1: auto with set; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	6.81953120232	4974
Coq.FSets.FSetProperties.WProperties_fun.fold_0	40	12.1.1.3.8.3	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_3w, NoDupA_rev with *); only 1: eauto).	7.3775241375	9513
Coq.FSets.FSetProperties.WProperties_fun.fold_1	40	13.0.0.9.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intuition; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	11.8895769119	20382
Coq.FSets.FSetProperties.WProperties_fun.fold_2	40
Coq.FSets.FSetProperties.WProperties_fun.fold_1b	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	4.91224694252	3066
Coq.FSets.FSetProperties.WProperties_fun.fold_commutes	40
Coq.FSets.FSetProperties.WProperties_fun.fold_init	40
Coq.FSets.FSetProperties.WProperties_fun.fold_equal	40
Coq.FSets.FSetProperties.WProperties_fun.fold_empty	40
Coq.FSets.FSetProperties.WProperties_fun.fold_add	40	3.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.475273132324	197
Coq.FSets.FSetProperties.WProperties_fun.add_fold	40
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_1	40	0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0384788513184	9
Coq.FSets.FSetProperties.WProperties_fun.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0162341594696	3
Coq.FSets.FSetProperties.WProperties_fun.fold_union_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_diff_inter	40
Coq.FSets.FSetProperties.WProperties_fun.fold_union	40
Coq.FSets.FSetProperties.WProperties_fun.fold_plus	40	0.0.0.0.0.1.0.8.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	2.19187688828	2507
Coq.FSets.FSetProperties.WProperties_fun.cardinal_fold	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_0	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_1	40	0.0.0.7.3.0	search with cache (only 1: intros; only 1: rewrite cardinal_1; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.542275905609	388
Coq.FSets.FSetProperties.WProperties_fun.cardinal_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_Empty	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_1	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_inv_2b	40	0.0.4.4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite M.cardinal_1 in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: exists e; only 1: auto).	1.81073904037	1606
Coq.FSets.FSetProperties.WProperties_fun.Equal_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.cardinal_m_Proper	40
Coq.FSets.FSetProperties.WProperties_fun.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.00726103782654	2
Coq.FSets.FSetProperties.WProperties_fun.singleton_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.diff_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.subset_cardinal_lt	40
Coq.FSets.FSetProperties.WProperties_fun.union_inter_cardinal	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_inter	40
Coq.FSets.FSetProperties.WProperties_fun.union_cardinal_le	40	2.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0967757701874	28
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_1	40	0.3	search with cache (only 1: intro; only 1: intuition).	0.190569162369	84
Coq.FSets.FSetProperties.WProperties_fun.add_cardinal_2	40	0.0.0.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0155708789825	5
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_1	40	0.0.0.0.0.1.0.5.2.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: symmetry; only 1: change S with ((fun _ => S) x); only 1: apply fold_2; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set; only 1: auto with set).	1.45650005341	1313
Coq.FSets.FSetProperties.WProperties_fun.remove_cardinal_2	40	0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply fold_equal; only 1: auto with fset; only 1: auto with fset; only 1: auto with fset; only 1: auto with set).	0.103471040726	42
Coq.FSets.FSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.FSets.FSetProperties.OrdProperties.gtb_1	40
Coq.FSets.FSetProperties.OrdProperties.leb_1	40
Coq.FSets.FSetProperties.OrdProperties.gtb_compat	40
Coq.FSets.FSetProperties.OrdProperties.leb_compat	40
Coq.FSets.FSetProperties.OrdProperties.elements_split	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Above	40
Coq.FSets.FSetProperties.OrdProperties.elements_Add_Below	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_max	40
Coq.FSets.FSetProperties.OrdProperties.set_induction_min	40
Coq.FSets.FSetProperties.OrdProperties.fold_3	40
Coq.FSets.FSetProperties.OrdProperties.fold_4	40
Coq.FSets.FSetProperties.OrdProperties.fold_equal	40
Coq.FSets.FSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0185060501099	3
Coq.FSets.FSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0189940929413	3
Coq.FSets.FSetProperties.OrdProperties.choose_equal	40
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.0104041099548	1
Coq.FSets.FSetDecide.WDecide_fun.FSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.111107110977	3
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.eq_refl_iff	40	3.2.0	search with cache (only 1: split; only 1: eauto; only 1: eauto).	0.0100359916687	8
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_In	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideAuxiliary.dec_eq	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_1	40
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_trans_2	40	1	search with cache (only 1: fsetdec).	0.125000953674	14
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.035003900528	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.171736001968	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.0115070343018	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0293309688568	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_Subset_add_remove	40	1	search with cache (only 1: fsetdec).	0.0529689788818	21
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0685770511627	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0640780925751	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0804870128632	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_iff_conj	40	1	search with cache (only 1: fsetdec).	0.0537271499634	23
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.128565073013	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.170407056808	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_too_complex	40	0.1.1	search with cache (only 1: unfold Subset; only 1: intros x y H s s' H0 a; only 1: intuition).	0.0489110946655	5
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_1	40	11	search with cache (only 1: fsetdec).	0.291718006134	145
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0598978996277	1
Coq.FSets.FSetDecide.WDecide_fun.FSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0324239730835	1
Coq.FSets.FMapList.Raw.empty_1	40	6.0.27	search with cache (only 1: compute; only 1: firstorder; only 1: invlist InA).	10.2279810905	710
Coq.FSets.FMapList.Raw.empty_sorted	40	20	search with cache (only 1: constructor).	0.0386259555817	186
Coq.FSets.FMapList.Raw.is_empty_1	40
Coq.FSets.FMapList.Raw.is_empty_2	40	0.3.0.0.0.0.1	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: absurd (InA eqke (k, e) ((k, e) :: l)); only 1: intuition; only 1: auto with ordered_type).	0.942863941193	187
Coq.FSets.FMapList.Raw.mem_1	40
Coq.FSets.FMapList.Raw.mem_2	40
Coq.FSets.FMapList.Raw.find_2	40
Coq.FSets.FMapList.Raw.find_1	40
Coq.FSets.FMapList.Raw.add_1	40
Coq.FSets.FMapList.Raw.add_2	40
Coq.FSets.FMapList.Raw.add_3	40
Coq.FSets.FMapList.Raw.add_Inf	40
Coq.FSets.FMapList.Raw.add_sorted	40
Coq.FSets.FMapList.Raw.remove_1	40
Coq.FSets.FMapList.Raw.remove_2	40
Coq.FSets.FMapList.Raw.remove_3	40
Coq.FSets.FMapList.Raw.remove_Inf	40
Coq.FSets.FMapList.Raw.remove_sorted	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: simpl; only 1: case (X.compare x x'); only 1: intuition; only 1: intuition; only 1: inversion_clear Hm; only 1: auto; only 1: intuition; only 1: inversion_clear Hm; only 1: auto).	5.46858716011	2332
Coq.FSets.FMapList.Raw.elements_1	40	0.0.0.0.0.0	search with cache (only 1: intros m; only 1: case m; only 1: auto; only 1: intros (k, e) l inlist; only 1: intros sorted hyp; only 1: auto with ordered_type).	0.0279099941254	6
Coq.FSets.FMapList.Raw.elements_2	40	0	search with cache (only 1: auto).	0.00614500045776	1
Coq.FSets.FMapList.Raw.elements_3	40	1.0.0.1.0	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: destruct a as (x', e'); only 1: intuition).	0.0237350463867	7
Coq.FSets.FMapList.Raw.elements_3w	40
Coq.FSets.FMapList.Raw.fold_1	40	1.3.0.1.2	search with cache (only 1: induction m; only 1: intuition; only 1: intros; only 1: simpl; only 1: intuition).	0.4865629673	200
Coq.FSets.FMapList.Raw.equal_1	40
Coq.FSets.FMapList.Raw.equal_2	40
Coq.FSets.FMapList.Raw.equal_cons	40
Coq.FSets.FMapList.Raw.map_1	40
Coq.FSets.FMapList.Raw.map_2	40
Coq.FSets.FMapList.Raw.map_lelistA	40	0.0.1.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: intuition; only 1: intros; only 1: destruct a as (x'', e''); only 1: inversion_clear H; only 1: compute in H0; only 1: simpl; only 1: auto).	0.0571351051331	10
Coq.FSets.FMapList.Raw.map_sorted	40
Coq.FSets.FMapList.Raw.mapi_1	40
Coq.FSets.FMapList.Raw.mapi_2	40
Coq.FSets.FMapList.Raw.mapi_lelistA	40	0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x0, e0); only 1: inversion_clear H; only 1: auto).	0.0547659397125	8
Coq.FSets.FMapList.Raw.mapi_sorted	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction m; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: destruct a as (x', e'); only 1: inversion_clear Hm; only 1: constructor; only 1: auto; only 1: auto).	0.51694393158	157
Coq.FSets.FMapList.Raw.map2_alt_equiv	40
Coq.FSets.FMapList.Raw.combine_lelistA	40
Coq.FSets.FMapList.Raw.combine_sorted	40
Coq.FSets.FMapList.Raw.map2_sorted	40
Coq.FSets.FMapList.Raw.combine_1	40
Coq.FSets.FMapList.Raw.map2_0	40
Coq.FSets.FMapList.Raw.map2_1	40
Coq.FSets.FMapList.Raw.map2_2	40
Coq.FSets.FMapList.Make.MapsTo_1	40
Coq.FSets.FMapList.Make.mem_1	40
Coq.FSets.FMapList.Make.mem_2	40
Coq.FSets.FMapList.Make.empty_1	40	27.19	search with cache (only 1: red; only 1: inversion 1).	0.344912052155	1748
Coq.FSets.FMapList.Make.is_empty_1	40
Coq.FSets.FMapList.Make.is_empty_2	40
Coq.FSets.FMapList.Make.add_1	40
Coq.FSets.FMapList.Make.add_2	40
Coq.FSets.FMapList.Make.add_3	40
Coq.FSets.FMapList.Make.remove_1	40
Coq.FSets.FMapList.Make.remove_2	40
Coq.FSets.FMapList.Make.remove_3	40
Coq.FSets.FMapList.Make.find_1	40
Coq.FSets.FMapList.Make.find_2	40
Coq.FSets.FMapList.Make.elements_1	40	0	search with cache (only 1: auto).	0.00695586204529	1
Coq.FSets.FMapList.Make.elements_2	40	0.0	search with cache (only 1: intros m; only 1: exact (Raw.elements_1 (m:=m))).	0.0106439590454	2
Coq.FSets.FMapList.Make.elements_3	40	1.21	search with cache (only 1: induction m; only 1: auto).	0.271587848663	686
Coq.FSets.FMapList.Make.elements_3w	40
Coq.FSets.FMapList.Make.cardinal_1	40	5	search with cache (only 1: auto).	0.0120658874512	15
Coq.FSets.FMapList.Make.fold_1	40
Coq.FSets.FMapList.Make.equal_1	40
Coq.FSets.FMapList.Make.equal_2	40
Coq.FSets.FMapList.Make.map_1	40
Coq.FSets.FMapList.Make.map_2	40
Coq.FSets.FMapList.Make.mapi_1	40
Coq.FSets.FMapList.Make.mapi_2	40
Coq.FSets.FMapList.Make.map2_1	40
Coq.FSets.FMapList.Make.map2_2	40
Coq.FSets.FMapList.Make_ord.eq_equal	40
Coq.FSets.FMapList.Make_ord.eq_1	40
Coq.FSets.FMapList.Make_ord.eq_2	40
Coq.FSets.FMapList.Make_ord.eq_refl	40
Coq.FSets.FMapList.Make_ord.eq_sym	40
Coq.FSets.FMapList.Make_ord.eq_trans	40
Coq.FSets.FMapList.Make_ord.lt_trans	40
Coq.FSets.FMapList.Make_ord.lt_not_eq	40
Coq.FSets.FMapList.Make_ord.compare	40
Coq.Wellfounded.Inclusion.Acc_incl	40
Coq.Wellfounded.Inclusion.wf_incl	40	0.28.5	search with cache (only 1: intro H; only 1: split; only 1: auto with sets).	0.2893409729	1426
Coq.Wellfounded.Well_Ordering.wf_WO	40
Coq.Wellfounded.Well_Ordering.wof	40
Coq.Wellfounded.Lexicographic_Exponentiation.left_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.right_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_prefix	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_tail	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_aux	40
Coq.Wellfounded.Lexicographic_Exponentiation.dist_Desc_concat	40
Coq.Wellfounded.Lexicographic_Exponentiation.desc_end	40
Coq.Wellfounded.Lexicographic_Exponentiation.ltl_unit	40
Coq.Wellfounded.Lexicographic_Exponentiation.acc_app	40	4.0.4.1.0.1.1.9	search with cache (only 1: simple induction x; only 1: split; only 1: intros; only 1: inversion_clear H1; only 1: intros a l HInd; only 1: intros; only 1: inversion_clear H; only 1: auto with sets).	8.6240940094	9870
Coq.Wellfounded.Lexicographic_Exponentiation.wf_lex_exp	40
Coq.Wellfounded.Inverse_Image.Acc_lemma	40
Coq.Wellfounded.Inverse_Image.Acc_inverse_image	40
Coq.Wellfounded.Inverse_Image.wf_inverse_image	40	0.0.0.4.5.5	search with cache (only 1: intros y0 H1; only 1: apply Acc_intro; only 1: intros x H; only 1: apply (Acc_lemma (f x)); only 1: trivial; only 1: trivial).	0.277390003204	708
Coq.Wellfounded.Inverse_Image.Acc_inverse_rel	40
Coq.Wellfounded.Inverse_Image.wf_inverse_rel	40
Coq.Wellfounded.Disjoint_Union.acc_A_sum	40
Coq.Wellfounded.Disjoint_Union.acc_B_sum	40
Coq.Wellfounded.Disjoint_Union.wf_disjoint_sum	40
Coq.Wellfounded.Union.strip_commut	40
Coq.Wellfounded.Union.Acc_union	40
Coq.Wellfounded.Union.wf_union	40
Coq.Wellfounded.Lexicographic_Product.acc_A_B_lexprod	40
Coq.Wellfounded.Lexicographic_Product.wf_lexprod	40
Coq.Wellfounded.Lexicographic_Product.Acc_symprod	40
Coq.Wellfounded.Lexicographic_Product.wf_symprod	40
Coq.Wellfounded.Lexicographic_Product.swap_Acc	40
Coq.Wellfounded.Lexicographic_Product.Acc_swapprod	40
Coq.Wellfounded.Lexicographic_Product.wf_swapprod	40
Coq.Wellfounded.Transitive_Closure.incl_clos_trans	40	0.4.11.22.10	search with cache (only 1: red; only 1: intros n m; only 1: intros; only 1: constructor; only 1: auto).	0.880259037018	6571
Coq.Wellfounded.Transitive_Closure.Acc_clos_trans	40
Coq.Wellfounded.Transitive_Closure.Acc_inv_trans	40	0.0.23.0.5.11	search with cache (only 1: intro x; only 1: intros y H2; only 1: induction H2; only 1: destruct 1; only 1: auto with sets; only 1: auto with sets).	10.0109519958	32053
Coq.Wellfounded.Transitive_Closure.wf_clos_trans	40	0.1	search with cache (only 1: red; only 1: auto with sets).	0.00746011734009	3
Coq.Numbers.DecimalFacts.uint_dec	40
Coq.Numbers.DecimalFacts.rev_revapp	40
Coq.Numbers.DecimalFacts.rev_rev	40
Coq.Numbers.DecimalFacts.nzhead_revapp_0	40
Coq.Numbers.DecimalFacts.nzhead_revapp	40
Coq.Numbers.DecimalFacts.nzhead_rev	40
Coq.Numbers.DecimalFacts.rev_nztail_rev	40
Coq.Numbers.DecimalFacts.revapp_nil_inv	40
Coq.Numbers.DecimalFacts.rev_nil_inv	40	8.3.1.9	search with cache (only 1: intros; only 1: rewrite <- (rev_rev d); only 1: rewrite H; only 1: now rewrite ?nzhead_revapp_0 || now rewrite IHd).	9.59087514877	12204
Coq.Numbers.DecimalFacts.rev_lnorm_rev	40
Coq.Numbers.DecimalFacts.nzhead_nonzero	40
Coq.Numbers.DecimalFacts.unorm_0	40	0.0.0.0.0.0.0.0.0.0.0.8	search with cache (only 1: induction d; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy; only 1: easy).	1.45683908463	2000
Coq.Numbers.DecimalFacts.unorm_nonnil	40	0.0.0.0.0.0.0.0.0.0.0.3.3.0	search with cache (only 1: unfold unorm, lnorm; only 1: generalize (nzhead_nonzero d); only 1: destruct nzhead; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]; only 1: intros H [=]).	8.11045002937	9283
Coq.Numbers.DecimalFacts.nzhead_invol	40
Coq.Numbers.DecimalFacts.unorm_invol	40	0.0	search with cache (only 1: unfold unorm, lnorm; only 1: now induction d).	0.0125730037689	2
Coq.Numbers.DecimalFacts.norm_invol	40	7.7.12	search with cache (only 1: induction d; only 1: now induction d; only 1: now induction d).	1.28778481483	1996
Coq.Numbers.DecimalPos.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_simpl	40	0.2.32.5	search with cache (only 1: simpl; only 1: induction n; only 1: trivial; only 1: trivial).	1.32385802269	3064
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_eqn	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_acc_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_rev	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double_gen	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_double	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_succ_double	40	1	search with cache (only 1: apply of_lu_double_gen).	0.018119096756	2
Coq.Numbers.DecimalPos.Unsigned.of_to	40
Coq.Numbers.DecimalPos.Unsigned.succ_double_alt	40
Coq.Numbers.DecimalPos.Unsigned.double_succ	40
Coq.Numbers.DecimalPos.Unsigned.to_lu_succ	40
Coq.Numbers.DecimalPos.Unsigned.nat_iter_S	40	3.1	search with cache (only 1: simpl in *; only 1: auto).	0.0204799175262	6
Coq.Numbers.DecimalPos.Unsigned.nat_iter_0	40	0	search with cache (only 1: reflexivity).	0.0163218975067	1
Coq.Numbers.DecimalPos.Unsigned.to_ldec_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.of_lu_0	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalPos.Unsigned.Nadd_alt	40
Coq.Numbers.DecimalPos.Unsigned.to_of_lu	40
Coq.Numbers.DecimalPos.Unsigned.to_of	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonzero	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_nonnil	40	0.0.0	search with cache (only 1: intro E; only 1: generalize (of_to p); only 1: now rewrite E).	0.0305290222168	3
Coq.Numbers.DecimalPos.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalPos.Unsigned.to_uint_pos_surj	40
Coq.Numbers.DecimalPos.Unsigned.of_uint_norm	40
Coq.Numbers.DecimalPos.Unsigned.of_inj	40
Coq.Numbers.DecimalPos.Unsigned.of_iff	40
Coq.Numbers.DecimalPos.Signed.of_to	40
Coq.Numbers.DecimalPos.Signed.to_of	40
Coq.Numbers.DecimalPos.Signed.to_int_inj	40
Coq.Numbers.DecimalPos.Signed.to_int_pos_surj	40	0.0.1.2.0.0.0.1.5.1	search with cache (only 1: simpl norm; only 1: destruct (Pos.of_uint d) eqn:E; only 1: rewrite <- Unsigned.to_of; only 1: intros; only 1: destruct H; only 1: now rewrite E; only 1: rewrite <- Unsigned.to_of; only 1: intros; only 1: exists p; only 1: now rewrite E).	22.3139579296	21715
Coq.Numbers.DecimalPos.Signed.of_int_norm	40
Coq.Numbers.DecimalPos.Signed.of_inj_pos	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_succ	40	0.0	search with cache (only 1: simpl; only 1: easy).	0.00731587409973	2
Coq.Numbers.DecimalNat.Unsigned.to_little_uint_succ	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_equiv	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_eqn	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_succ	40
Coq.Numbers.DecimalNat.Unsigned.of_to_lu	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_revapp	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_acc_spec	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_alt	40
Coq.Numbers.DecimalNat.Unsigned.of_to	40
Coq.Numbers.DecimalNat.Unsigned.to_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.of_lu_0	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu_tenfold	40
Coq.Numbers.DecimalNat.Unsigned.to_of_lu	40
Coq.Numbers.DecimalNat.Unsigned.to_of	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalNat.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalNat.Unsigned.of_uint_norm	40	1.1.1.1.1.1.1.1.1.2.3.5	search with cache (only 1: induction d; only 1: reflexivity; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial).	11.5889220238	10527
Coq.Numbers.DecimalNat.Unsigned.of_inj	40
Coq.Numbers.DecimalNat.Unsigned.of_iff	40
Coq.Numbers.DecimalNat.Signed.of_to	40
Coq.Numbers.DecimalNat.Signed.to_of	40
Coq.Numbers.DecimalNat.Signed.to_int_inj	40
Coq.Numbers.DecimalNat.Signed.to_int_pos_surj	40	1.0.0.0.0	search with cache (only 1: simpl; only 1: exists (Nat.of_uint d); only 1: unfold Nat.to_int; only 1: rewrite Unsigned.to_of; only 1: f_equal).	0.0147850513458	6
Coq.Numbers.DecimalNat.Signed.of_int_norm	40	2.5.0.0.1.0.2.6	search with cache (only 1: destruct d; only 1: unfold Nat.to_int, Nat.of_int, norm; only 1: f_equal; only 1: unfold Nat.of_uint; only 1: now induction d; only 1: unfold Nat.of_int; only 1: unfold Nat.of_uint; only 1: now induction d).	12.083165884	12616
Coq.Numbers.DecimalNat.Signed.of_inj_pos	40
Coq.Numbers.DecimalN.Unsigned.of_to	40	5.8.0.4.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite Unsigned.of_to).	2.06664299965	2836
Coq.Numbers.DecimalN.Unsigned.to_of	40	12.13.0	search with cache (only 1: unfold N.to_uint, Pos.to_uint; only 1: rewrite <- Unsigned.to_of; only 1: now destruct (nzhead d) eqn:H).	2.62140202522	2962
Coq.Numbers.DecimalN.Unsigned.to_uint_inj	40
Coq.Numbers.DecimalN.Unsigned.to_uint_surj	40
Coq.Numbers.DecimalN.Unsigned.of_uint_norm	40	2	search with cache (only 1: now induction d).	0.0111510753632	3
Coq.Numbers.DecimalN.Unsigned.of_inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- !DecimalPos.Unsigned.to_of; only 1: now f_equal).	0.015753030777	3
Coq.Numbers.DecimalN.Unsigned.of_iff	40	0.0.2.0.0.0.1	search with cache (only 1: split; only 1: intros; only 1: rewrite <- !to_of; only 1: now f_equal; only 1: intros E; only 1: rewrite <- DecimalPos.Unsigned.of_uint_norm, E; only 1: apply DecimalPos.Unsigned.of_uint_norm).	0.0338821411133	14
Coq.Numbers.DecimalN.Signed.of_to	40
Coq.Numbers.DecimalN.Signed.to_of	40
Coq.Numbers.DecimalN.Signed.to_int_inj	40
Coq.Numbers.DecimalN.Signed.to_int_pos_surj	40	0.2.0.2.0	search with cache (only 1: simpl; only 1: rewrite <- DecimalPos.Unsigned.to_of; only 1: exists (N.of_uint d); only 1: unfold N.to_int; only 1: now f_equal).	0.0368881225586	20
Coq.Numbers.DecimalN.Signed.of_int_norm	40	12.1.0.1.4	search with cache (only 1: unfold N.to_int, N.of_int, norm; only 1: destruct d; only 1: f_equal; only 1: now induction d; only 1: now induction d).	10.6458609104	10360
Coq.Numbers.DecimalN.Signed.of_inj_pos	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_add_opp	40	9.1	search with cache (only 1: intro n; only 1: auto).	0.0659358501434	98
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.eq_equiv	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pair_wd	40	0.0.0.0.4.7	search with cache (only 1: unfold Reflexive, Z.eq; only 1: intros x x' Hx y y' Hy; only 1: simpl in *; only 1: setoid_rewrite Hx; only 1: setoid_rewrite Hy; only 1: auto with *).	1.67653894424	375
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_wd	40	1.1.0.1.1.0.17.41	search with cache (only 1: intro H; only 1: destruct H as [p H]; only 1: unfold Z.eq; only 1: intros n IH; only 1: simpl; only 1: rewrite add_succ_l; only 1: rewrite add_succ_l; only 1: now rewrite IH).	14.2597768307	43135
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_wd	40	0.7.14.2.1.0	search with cache (only 1: unfold Z.succ, Z.eq; only 1: intros n m H; only 1: simpl; only 1: rewrite add_succ_r; only 1: nzsimpl; only 1: now rewrite H).	2.80891394615	4824
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_comm	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_wd	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.bi_induction	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.pred_succ	40	3.6.1.0.3.17	search with cache (only 1: intro n; only 1: destruct n as [n m]; only 1: unfold Z.eq; only 1: simpl in *; only 1: rewrite add_succ_l, <- add_succ_r; only 1: auto with *).	6.83158993721	9977
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.succ_pred	40	0.0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: intro n; only 1: simpl; only 1: now nzsimpl).	0.16382598877	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.one_succ	40	2.6.0.1	search with cache (only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: nzsimpl; only 1: now rewrite <- one_succ).	0.309679985046	163
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.two_succ	40	0.0.0	search with cache (only 1: unfold Z.eq; only 1: simpl; only 1: now nzsimpl').	0.064019203186	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_0	40	20	search with cache (only 1: reflexivity).	0.044065952301	207
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.opp_succ	40	0.0.0	search with cache (only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: reflexivity).	0.0118801593781	3
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_0_l	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.succ, Z.pred, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.13050699234	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.add_succ_l	40	0.0.0.2	search with cache (only 1: intros; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.51181602478	63
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_0_r	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.add, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.12499499321	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.sub_succ_r	40	0.0.1.2	search with cache (only 1: intros n m; only 1: unfold Z.pred, Z.succ, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.3500020504	38
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_0_l	40	0.0.0.0	search with cache (only 1: intro n; only 1: unfold Z.sub, Z.eq; only 1: simpl; only 1: now nzsimpl).	0.0954999923706	4
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.mul_succ_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_eq_cases	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_irrefl	40	0.2.1	search with cache (only 1: intro n; only 1: apply le_ngt; only 1: now nzsimpl).	0.0557868480682	14
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_succ_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.min_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_l	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.max_r	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_nge	40
Coq.Numbers.Integer.NatPairs.ZNatPairs.ZPairsAxiomsMod.lt_wd	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_neg	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_mono).	0.415072917938	91
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_neg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_lt_le_mono).	0.024435043335	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_neg	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_lt_mono).	0.0244228839874	3
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.add_nonpos_nonpos	40	0.0.1	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (add_0_l 0); only 1: now apply add_le_mono).	0.387849092484	35
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_0_sub	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_0	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_pos_neg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_neg_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonneg_nonpos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.opp_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_m1_0	40	0.38.16	search with cache (only 1: rewrite succ_lt_mono, <- one_succ; only 1: apply le_succ_l; only 1: now rewrite one_succ, opp_succ, opp_0, succ_pred).	5.34128689766	3760
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_le_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_lt_mono	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_lt_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_le_sub_lt	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_add_lt_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_add_le_sub_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_r	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add_l	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_lt_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_le_add	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.lt_sub_pos	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.le_sub_nonneg	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_lt_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_le_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_neg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_pos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonpos_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.sub_nonneg_cases	40
Coq.Numbers.Integer.Abstract.ZAddOrder.ZAddOrderProp.zero_pos_neg	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_pred	40	0.9.0.0.0	search with cache (only 1: intros; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite <- even_spec, even_succ, odd_spec).	2.5955529213	1022
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_pred	40	0.0.2.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.0237951278687	14
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_opp	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.even_sub	40
Coq.Numbers.Integer.Abstract.ZParity.ZParityProp.odd_sub	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_r	40	1.9.13.0.0	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m)  at 2; only 1: apply add_move_l; only 1: nzsimpl; only 1: now rewrite add_comm).	35.2827191353	21699
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_pred_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_r	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_opp	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_opp_comm	40	0.24.0	search with cache (only 1: intros n m; only 1: apply opp_inj; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	1.99672102928	2146
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_l	40
Coq.Numbers.Integer.Abstract.ZMul.ZMulProp.mul_sub_distr_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonneg_nonpos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_le_mono_nonpos_r).	0.0151431560516	3
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.mul_nonpos_nonneg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_0_mul	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.nlt_square_0	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_mono_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_lt_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.square_le_simpl_nonpos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_neg	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_neg	40	0.0.0.0.0.5.0.1.0	search with cache (only 1: intros n m H1 H2; only 1: apply (mul_lt_mono_neg_r m) in H1; only 1: rewrite mul_1_l in H1; only 1: apply lt_le_pred in H2; only 1: setoid_replace (P 0) with (-1) in H2; only 1: now apply lt_le_trans with m; only 1: apply eq_opp_r; only 1: now rewrite one_succ, opp_pred, opp_0; only 1: assumption).	3.98462510109	2215
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_m1_pos	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_1_mul_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_m1_mul_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.eq_mul_1	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_l	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.le_mul_diag_r	40
Coq.Numbers.Integer.Abstract.ZMulOrder.ZMulOrderProp.lt_mul_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_sub_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow_div_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.exists_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_succ_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n Hn; only 1: rewrite <- testbit_spec' by trivial; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	1.91741108894	815
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_b2z_double_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.b2z_bit0	40	0.0.0.0.15	search with cache (only 1: intros a0; only 1: apply b2z_inj; only 1: rewrite testbit_spec' by order; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; split; simpl; order')).	0.319233894348	258
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_opp	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit0_mod	40	0.12.0	search with cache (only 1: intros a; only 1: rewrite testbit_spec' by order; only 1: now nzsimpl).	1.72864294052	1000
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bit_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_above_log2_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_nonneg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_iff_neg_ex	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits_succ	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.double_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.eqf_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.testbit_eqf	40	0.3.1.7	search with cache (only 1: intros a n m Hn; only 1: apply b2z_inj; only 1: do 2 f_equiv; only 1: order').	2.76923012733	256
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.bits_inj_iff'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.are_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_opp_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_mul_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_mul_pow2	40	0.1.0.0.0.2.12.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite mul_pow2_bits by trivial; only 1: destruct (le_gt_cases n m); only 1: now apply shiftl_spec_high; only 1: rewrite shiftl_spec_low, testbit_neg_r; only 1: trivial; only 1: now apply lt_sub_0; only 1: trivial).	10.0953722	6333
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_spec_alt	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_eq_0	40	0.0.5.0.0.0.0.0.1.0.1.2	search with cache (only 1: intros a n; only 1: destruct (le_gt_cases 0 n) as [Hn| Hn]; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: left; only 1: split; only 1: order; only 1: apply log2_lt_cancel; only 1: now rewrite log2_pow2; only 1: rewrite shiftr_mul_pow2 by order; only 1: intros; only 1: generalize (log2_nonneg a); only 1: order).	15.0315458775	7710
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_div	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_wd	40	0.0.0.1.0.4.1.16	search with cache (only 1: intro Hn; only 1: intros a H; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: rewrite div2_spec, shiftr_div_pow2; only 1: f_equiv; only 1: trivial; only 1: order'; only 1: order').	1.45848298073	1530
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_odd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0377221107483	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.067507982254	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_wd	40	0.0.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0437281131744	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nilpotent	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0148010253906	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_l	40	2.9.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_eq; only 1: apply xorb_nilpotent).	0.425565958023	448
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0548260211945	4
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_eq_0_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_l	40	3.4.4	search with cache (only 1: intros m; only 1: bitwise; only 1: split).	0.403429031372	370
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_0_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_comm	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_assoc	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.0140459537506	3
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0144848823547	5
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_land_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lor_distr_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ldiff_and	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_spec'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_wd	40	0.7.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold setbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.440357208252	150
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_wd	40	0.7.1	search with cache (only 1: intros a a' Ha n n' Hn; only 1: unfold clearbit; only 1: now rewrite <- 2!shiftr_opp_r, Ha, Hn).	0.420392990112	129
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_true	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_false	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.pow2_bits_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.setbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eqb	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_eq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.clearbit_neq	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_spec	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_involutive	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_m1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_m1_l	40	29.0.16	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	3.22728896141	6821
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_m1_l	40	12.0.5	search with cache (only 1: intros n; only 1: bitwise; only 1: now rewrite bits_opp, one_succ, pred_succ, bits_0).	0.880959033966	1071
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_m1_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_lnot_diag	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_l	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_lxor_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_r	40	0.0.2.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0198860168457	8
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_m1_l	40	0.0.2.0.1.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite lnot_spec, bits_m1; only 1: trivial; only 1: trivial; only 1: trivial).	0.0281929969788	9
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_wd	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_add	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_div_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_mod_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_high	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ones_spec_iff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_ones_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftl_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.shiftr_neg	40	0.7.0	search with cache (only 1: intros a n; only 1: rewrite <- shiftl_opp_r; only 1: now rewrite 2!lt_nge, shiftl_nonneg).	0.0896661281586	13
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.div2_neg	40	0.3.1	search with cache (only 1: intros; only 1: rewrite div2_spec; only 1: now rewrite 2!lt_nge, shiftr_nonneg).	0.0180909633636	7
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lor_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_nonneg	40	10.31.10.0	search with cache (only 1: intros a; only 1: unfold lnot; only 1: rewrite <- lt_succ_r, succ_pred; only 1: now apply opp_pos_neg).	39.6051340103	42582
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lnot_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.land_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_neg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.lxor_nonneg	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_bits_unique	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftr	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_shiftl'	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_land	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.log2_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bit0	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add3_bits_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_div2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits_aux	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_carry_bits	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_bit1	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.nocarry_equiv	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lxor	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.ldiff_le	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBits.ZBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj	40
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.pred_inj_wd	40	6.4.0.0.4.1.1	search with cache (only 1: intros n m; only 1: split; only 1: intro H; only 1: apply succ_wd in H; only 1: now rewrite 2!succ_pred in H; only 1: intro H; only 1: now f_equiv).	3.69415211678	2871
Coq.Numbers.Integer.Abstract.ZBase.ZBaseProp.succ_m1	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_twice_r	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.even_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.odd_pow	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_even	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_opp_odd	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_abs	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_even_nonneg	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_abs_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.pow_odd_sgn	40
Coq.Numbers.Integer.Abstract.ZPow.ZPowProp.abs_pow	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_opp_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_abs_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_1_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym_abs	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_antisym	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_sub_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_add_cancel_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_opp_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: rewrite and_comm; only 1: rewrite and_comm; only 1: apply gcd_divide_iff).	0.0295879840851	12
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_l	40	1.0.0.4.0.0.1.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply gcd_unique_alt; only 1: apply gcd_nonneg; only 1: intros; only 1: rewrite divide_opp_r; only 1: apply gcd_divide_iff).	12.3823549747	7986
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_abs_r	40	0.0.0.0.6.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite gcd_comm, gcd_opp_l, gcd_comm).	0.302335977554	201
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_0_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_diag	40	0.0.0.1.11.1.0	search with cache (only 1: intros; only 1: rewrite <- gcd_abs_r; only 1: apply gcd_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	18.8471271992	16163
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_add_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.Bezout_wd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.bezout_1_gcd	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_bezout	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gcd_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), gcd_mul_mono_l, mul_comm; only 1: trivial).	0.0261478424072	6
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.gauss	40
Coq.Numbers.Integer.Abstract.ZGcd.ZGcdProp.divide_mul_split	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.mod_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_divide	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.rem_mod_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.quot_div_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_quot_mul_exact	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_factor	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_quot_gcd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_mod	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_rem	40	0.0.1.6.0	search with cache (only 1: intros a b Hb; only 1: rewrite rem_eq by order; only 1: rewrite <- add_opp_r, mul_comm, <- mul_opp_l; only 1: rewrite (gcd_comm _ b); only 1: apply gcd_add_mult_diag_r).	0.857301950455	272
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_wd	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv1	40	0.1.2.4.2	search with cache (only 1: intros a b Hb; only 1: symmetry; only 1: apply divide_div_mul_exact; only 1: order; only 1: apply gcd_divide_r).	4.48193097115	1476
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_equiv2	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_div_swap	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_div	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_least	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_nonneg	40	7.4	search with cache (only 1: intros n m; only 1: apply abs_nonneg).	0.720009088516	569
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_comm	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_divide_iff	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_unique_alt	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_assoc	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_l	40	0.0.1.0.1.4.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists n; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.624452829361	579
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.02077293396	10
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l_nonneg	40	0.1.0.4.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: exists n; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.23433804512	170
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r_nonneg	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl; only 1: trivial using divide_1_l, le_0_1, divide_refl).	0.0152440071106	7
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial using divide_refl).	0.014190196991	8
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_eq_0	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_eq_r	40	0.0.0.1.1.3	search with cache (only 1: intros; only 1: apply divide_antisym_nonneg; only 1: apply lcm_nonneg; only 1: trivial; only 1: now apply lcm_least; only 1: apply divide_lcm_r).	0.256354093552	158
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.divide_lcm_iff	40	1.2.3.0.0.0.0.0.1.0.0.3.0.0	search with cache (only 1: intros n m Hn; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	18.2666139603	12794
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_opp_r	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	0.0195641517639	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_l	40	0.0.0.3.2.0.0.0.1.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp n) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: apply lcm_unique_alt; only 1: apply lcm_nonneg; only 1: intros; only 1: rewrite divide_opp_l; only 1: apply lcm_divide_iff).	4.43767404556	3410
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_abs_r	40	1.0.0.0.5.0	search with cache (only 1: intros; only 1: destruct (abs_eq_or_opp m) as [H| H]; only 1: rewrite H; only 1: easy; only 1: rewrite H; only 1: now rewrite lcm_comm, lcm_opp_l, lcm_comm).	0.318127155304	168
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_l	40	0.4.0.4.0.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: trivial using divide_1_l, le_0_1; only 1: now apply divide_abs_l; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	0.643204927444	479
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_1_r	40	0.4.4.0.0.4.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: trivial using divide_1_l, le_0_1; only 1: intros p Hn Hm; only 1: now apply divide_abs_l).	5.15751290321	3458
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_diag	40	0.0.0.0.6.1.0	search with cache (only 1: intros; only 1: rewrite <- lcm_abs_r; only 1: apply lcm_unique; only 1: apply abs_nonneg; only 1: now apply divide_abs_l; only 1: now apply divide_abs_l, divide_abs_r; only 1: trivial using divide_refl).	0.390450954437	291
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_l_nonneg	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.lcm_mul_mono_r_nonneg	40	0.2.0.0	search with cache (only 1: intros; only 1: rewrite <- (abs_eq p)  at 3; only 1: now rewrite !(mul_comm _ p), lcm_mul_mono_l, mul_comm; only 1: trivial).	0.0295169353485	6
Coq.Numbers.Integer.Abstract.ZLcm.ZLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.succ_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.pred_min_distr	40	0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono; only 1: rewrite 2!min_r; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?pred_le_mono; only 1: now rewrite <- ?succ_le_mono).	0.766132831573	377
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_l	40	0.0.1.0.0.0.0.7.1.5.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now f_equiv; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: clear m H; only 1: now rewrite add_comm; only 1: now rewrite <- ?succ_le_mono; only 1: now apply add_le_mono).	13.3720719814	4820
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_max_distr_r	40	1.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply add_le_mono).	2.29916095734	1032
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_l	40	0.0.0.3.0.0.0.4.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	7.9698638916	3419
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.add_min_distr_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	2.05726885796	881
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_max_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.opp_min_distr	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_max_distr_r	40	1.0.1.5.1.0.1.6.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	12.114262104	9303
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.sub_min_distr_r	40	0.0.0.9.0.0.0.10.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply sub_le_mono_r).	17.9614338875	13446
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonneg_r	40	1.2.0.0.0.1.2.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!max_l; only 1: order; only 1: order; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: now apply mul_le_mono_nonneg_l).	10.8896811008	7395
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_l	40	0.0.0.3.0.0.0.4.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_l).	5.31493902206	3639
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonneg_r	40	1.0.0.0.1.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r; only 1: rewrite 2!min_r; only 1: order; only 1: order; only 1: now apply mul_le_mono_nonneg_r).	1.37781000137	794
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_max_distr_nonpos_r	40	0.0.3.0.0.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite min_l by trivial; only 1: rewrite max_l; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order; only 1: rewrite min_r by trivial; only 1: rewrite max_r; only 1: reflexivity; only 1: apply mul_le_mono_nonpos_r; only 1: order; only 1: order).	15.2074840069	8663
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_l	40
Coq.Numbers.Integer.Abstract.ZMaxMin.ZMaxMinProp.mul_min_distr_nonpos_r	40	3.0.0.0.3.0.0.1.0.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite max_r by trivial; only 1: rewrite min_r; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r; only 1: rewrite max_l by trivial; only 1: rewrite min_l; only 1: reflexivity; only 1: now apply mul_le_mono_nonpos_r).	3.40076184273	1705
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_pos_cases	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_pos_cases	40	0.0.0.37.6	search with cache (only 1: intro m; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	3.26579093933	6255
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neg_nonneg_cases	40	1.1.1.47.7	search with cache (only 1: intro m; only 1: destruct (lt_trichotomy m 0) as [H2| [H2| H2]]; only 1: intuition order; only 1: intuition order; only 1: intuition order).	7.38830494881	15020
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nonpos_nonneg_cases	40	1.0.1	search with cache (only 1: intro; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0230419635773	5
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_l	40	18.0.1	search with cache (only 1: intro n; only 1: rewrite <- (succ_pred n)  at 2; only 1: apply lt_succ_diag_r).	1.34374284744	1522
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_l	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_le_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.nle_pred_r	40	1.25.4	search with cache (only 1: intro LS'; only 1: rewrite nle_gt; only 1: apply lt_pred_l).	10.6190040112	14778
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_le	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_lt_pred	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_le_pred	40	0.0.0.4.0	search with cache (only 1: intros n m; only 1: intro H; only 1: apply lt_le_incl; only 1: apply lt_pred_le; only 1: order).	0.0731809139252	25
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt	40	2.0.1.8.0.1	search with cache (only 1: intros n m; only 1: rewrite <- (succ_pred m); only 1: intro H; only 1: apply lt_succ_r; only 1: rewrite <- (succ_pred m); only 1: order).	2.45064091682	2032
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt	40	3.7.4.2	search with cache (only 1: intro; only 1: intro LS'; only 1: rewrite <- lt_le_pred; only 1: intuition order).	6.80208802223	5182
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_lt_mono	40	0.1.0.3.5.2.1.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred m); only 1: rewrite lt_succ_r; only 1: symmetry; only 1: rewrite <- (succ_pred n)  at 2; only 1: rewrite pred_succ; only 1: symmetry; only 1: apply le_succ_l).	24.6248629093	8443
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.pred_le_mono	40
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_succ_lt_pred	40	2.1.0	search with cache (only 1: intros n m; only 1: rewrite lt_le_pred; only 1: apply le_succ_l).	0.0113871097565	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_succ_le_pred	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- lt_pred_le; only 1: rewrite <- (succ_pred m); only 1: rewrite pred_succ; only 1: rewrite pred_succ; only 1: apply lt_succ_r).	0.0278739929199	6
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_pred_lt_succ	40	0.1.0.7.0	search with cache (only 1: intros n m; only 1: rewrite lt_succ_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: symmetry; only 1: apply le_succ_l).	0.830312013626	409
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.le_pred_lt_succ	40	2.1.4.0	search with cache (only 1: intros n m; only 1: symmetry; only 1: rewrite <- lt_pred_le; only 1: apply lt_succ_r).	0.27622795105	131
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.neq_pred_l	40	16.7.0.0	search with cache (only 1: intro; only 1: apply lt_gt_cases; only 1: rewrite lt_pred_le; only 1: intuition order).	12.5151159763	15676
Coq.Numbers.Integer.Abstract.ZLt.ZOrderProp.lt_m1_r	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_eq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericAbs.abs_neq	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_null	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_pos	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.017040014267	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.GenericSgn.sgn_neg	40	0.0.0.0.0.0	search with cache (only 1: unfold sgn; only 1: intros; only 1: destruct (compare_spec 0 n); only 1: order; only 1: order; only 1: order).	0.0168130397797	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_max	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq'	40	0.0.0.1.1.3	search with cache (only 1: intros m; only 1: rewrite opp_nonneg_nonpos; only 1: intros; only 1: rewrite abs_neq; only 1: auto with relations; only 1: auto).	0.470982074738	294
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_nonneg	40	0.0.0.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: rewrite opp_nonneg_nonpos; only 1: auto).	0.0230839252472	7
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_neq_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0	40	0.0.3	search with cache (only 1: rewrite abs_eq; only 1: order; only 1: order).	0.00992488861084	6
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_0_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_pos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_or_opp	40	0.2.4.4.1	search with cache (only 1: intro n; only 1: destruct_max n; only 1: now left; only 1: right; only 1: reflexivity).	0.634064912796	381
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_or_opp_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_involutive	40	1.9.0	search with cache (only 1: intros; only 1: apply abs_eq; only 1: apply abs_nonneg).	0.407509088516	324
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case_strong	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_case	40	0.0.0.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto; only 1: auto).	0.0182831287384	4
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_eq_cases	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_lt	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_le	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sub_triangle	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_square	40	1.3.2.0	search with cache (only 1: intros; only 1: destruct_max n; only 1: auto with relations; only 1: now rewrite mul_opp_l, mul_opp_r, opp_involutive).	0.0206820964813	10
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_wd	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_spec	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_0	40	0.0.0	search with cache (only 1: rewrite sgn_null; only 1: auto using eq_refl, le_refl; only 1: auto using eq_refl, le_refl).	0.0118410587311	3
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_pos_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_null_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_neg_iff	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_opp	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonneg	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_nonpos	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_mul	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_abs	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.abs_sgn	40
Coq.Numbers.Integer.Abstract.ZSgnAbs.ZSgnAbsProp.sgn_sgn	40	0.0.0.0.0.2.6.0	search with cache (only 1: intro n; only 1: destruct_sgn n; only 1: apply sgn_pos; only 1: apply lt_0_1; only 1: apply sgn_0; only 1: apply sgn_neg; only 1: rewrite opp_neg_pos; only 1: apply lt_0_1).	0.550209999084	498
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_eq	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_unique	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_same	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_0_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_1_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_unique_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonneg	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_nonpos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_sign	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_pos	40	0.0.1.0	search with cache (only 1: intros; only 1: apply NZQuot.div_pos; only 1: auto; only 1: trivial).	0.204080820084	43
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_str_pos	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_le	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_quot_ge	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_pred_quot_gt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_succ_quot_lt	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_exact	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_lt_upper_bound	40	0.0.0.5.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply NZQuot.mul_div_le; only 1: auto; only 1: auto; only 1: auto).	0.276827096939	197
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_upper_bound	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_lower_bound	40	1.0.1.1.0	search with cache (only 1: intros; only 1: rewrite <- (quot_mul q b) by order; only 1: apply quot_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.0799188613892	43
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_le_compat_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_add_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_cancel_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_distr_l	40	0.0.0.0.5.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: assert (b * c ~= 0) by (rewrite <- neq_mul_0; tauto); only 1: rewrite !rem_eq by trivial; only 1: rewrite quot_mul_cancel_r by order; only 1: now rewrite mul_sub_distr_r, <- !mul_assoc, (mul_comm (a ÷ b) c)).	1.24178385735	367
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mul_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem_idemp_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.add_rem	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.mod_mul_r	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.rem_quot	40
Coq.Numbers.Integer.Abstract.ZDivTrunc.ZQuotProp.quot_mul_le	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_abs	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_pos	40	0.1.0.0.0.1.0.0.0.1.1	search with cache (only 1: intros a b q r Hr EQ; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: left; only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	1.396682024	891
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply div_unique with r; only 1: auto; only 1: auto).	0.0135040283203	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique	40	0.1.0.0.1.0.1.0.1.0.2.0.0	search with cache (only 1: intros a b q r Hr EQ; only 1: assert (Hb : b ~= 0) by (destruct Hr; intuition; order); only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: trivial; only 1: destruct Hr; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: right; only 1: apply mod_neg_bound; only 1: intuition order; only 1: now rewrite <- div_mod; only 1: trivial).	14.8501811028	7757
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_pos	40	0.3.1.0.0.1.0.0.2.1	search with cache (only 1: intros; only 1: destruct (Private_NZDiv.div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: left; only 1: apply mod_pos_bound; only 1: intuition order; only 1: rewrite <- div_mod; only 1: order; only 1: intuition order; only 1: auto).	2.7293639183	2037
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_unique_neg	40	0.0.0.0	search with cache (only 1: intros; only 1: apply mod_unique with q; only 1: auto; only 1: auto).	0.0144839286804	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_bound_or	40	0.0.1.0.1.0.7.6	search with cache (only 1: intros; only 1: destruct (abs_spec b) as [(LE, EQ)| (LE, EQ)]; only 1: left; only 1: apply mod_pos_bound; only 1: order; only 1: right; only 1: apply mod_neg_bound; only 1: order).	8.92167592049	8954
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.opp_mod_bound_or	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_opp	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_z	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_opp_r_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_nz	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_sign_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_same	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0288078784943	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto; only 1: intuition; only 1: now nzsimpl).	0.0287351608276	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_r	40	1.0.0.0.1.12.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	13.8984470367	10914
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: left; only 1: split; only 1: order; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0248830318451	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0127420425415	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.012314081192	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mul	40	0.0.0.1.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: intuition; only 1: right; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: apply mul_comm).	2.42095685005	1242
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_unique_exact	40	0.0.0.0.3.0.0.0.0.0.21	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: destruct (lt_ge_cases 0 b); only 1: left; only 1: now try split; only 1: right; only 1: split; only 1: intuition order; only 1: now try split; only 1: nzsimpl; only 1: now try split).	2.7141520977	1758
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_le	40	0.0.1.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: order; only 1: trivial).	0.230278015137	115
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_pos	40	0.0.2.0	search with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.387385845184	83
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_str_pos	40	1.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.339512109756	132
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_le	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: order).	0.0309569835663	7
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_div_ge	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_gt	40	0.0.3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: destruct (mod_pos_bound a b); only 1: trivial; only 1: auto).	0.0397839546204	15
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_succ_div_lt	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0211460590363	4
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_lt_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.019387960434	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_upper_bound	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: auto; only 1: auto).	0.0213479995728	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_lower_bound	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.2481508255	105
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	25.7494058609	8795
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_add	40	0.0.5.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_bound_or; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.778343915939	373
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0426678657532	8
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_add_l	40	0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0311670303345	14
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_cancel_l	40	0.0.3.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: tauto; only 1: tauto).	0.951038122177	167
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_l	40	0.0.0.0.0.0.1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: apply div_mod; only 1: tauto; only 1: tauto; only 1: tauto; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.92627501488	466
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.301265954971	55
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod_idemp_r	40	0.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.534365177155	96
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mul_mod	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: reflexivity; only 1: order; only 1: order).	0.0833611488342	9
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod_idemp_r	40	0.1.0.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0181469917297	5
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.add_mod	40	0.0.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0191612243652	6
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.rem_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.530521154404	111
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivFloor.ZDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: auto).	0.0373108386993	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_succ_l	40	9.6.6.3	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now nzsimpl).	33.9183728695	19811
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_l	40	0.0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- (succ_pred n)  at 2; only 1: now rewrite add_succ_l, pred_succ).	0.0301601886749	5
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_pred_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_pred	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_diag	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_diag_r	40	4.4.17.0.3	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: split; only 1: now rewrite add_comm, add_opp_r, sub_diag; only 1: now rewrite add_comm, add_opp_r, sub_diag).	9.54795217514	6167
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_opp_l	40	0.0.0.0.1.3.1.1	search with cache (only 1: intro n; only 1: intro m; only 1: rewrite add_comm; only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: rewrite opp_succ, sub_succ_r, add_pred_r; only 1: now rewrite pred_inj_wd).	1.989839077	938
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_assoc	40	0.11.3.6	search with cache (only 1: intros x y z; only 1: rewrite <- 2!add_opp_r; only 1: rewrite !add_assoc; only 1: now rewrite add_comm).	32.3797109127	13827
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_involutive	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_add_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_sub_distr	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.opp_inj_wd	40	0.0.0.0.1.0.1	search with cache (only 1: intros n1 n2; only 1: split; only 1: intros; only 1: apply opp_wd in H; only 1: now rewrite 2!opp_involutive in H; only 1: intros; only 1: now f_equiv).	0.0365281105042	9
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.eq_opp_r	40	0.0	search with cache (only 1: intros n m; only 1: now rewrite <- (opp_inj_wd (- n) m), opp_involutive).	0.0178711414337	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_distr	40	0.5.0.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr; only 1: now rewrite add_assoc).	0.190718889236	21
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_sub_distr	40	2.6.1.0	search with cache (only 1: intros n m p; only 1: rewrite <- 2!add_opp_r; only 1: rewrite <- add_opp_r, opp_add_distr, add_assoc; only 1: now rewrite opp_involutive).	1.13386297226	271
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_l	40	5.1.0.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: rewrite <- add_opp_r; only 1: now rewrite add_comm).	0.0976281166077	33
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_opp_r	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite <- add_opp_r; only 1: now rewrite opp_involutive).	0.0324108600616	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_sub_swap	40	0.0.2.3.5.14.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: rewrite add_pred_l; only 1: now rewrite pred_inj_wd).	16.1108970642	9024
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_cancel_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_l	40	3.1.14	search with cache (only 1: intros z n H; only 1: rewrite <- add_opp_r; only 1: now apply add_move_l).	3.19623780251	2373
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_move_0_r	40	0.1.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: now rewrite add_move_l, sub_0_l).	0.0636029243469	4
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_l	40	1.3.0	search with cache (only 1: intros n m; only 1: rewrite <- (add_opp_r n m); only 1: now rewrite add_move_l, sub_0_l).	0.156859874725	22
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_move_0_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_l	40	1.0	search with cache (only 1: intros n m; only 1: now rewrite add_comm, <- add_sub_assoc, sub_diag, add_0_r).	0.0315709114075	3
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_simpl_r	40	0.5.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: now rewrite add_sub_swap, sub_diag, add_0_l).	0.0449118614197	8
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_l	40	0.0.3.11.0	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: apply add_move_l; only 1: rewrite <- 2!add_opp_r; only 1: now rewrite add_comm).	13.6914610863	4538
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_simpl_r	40	2.0.0.2	search with cache (only 1: nzinduct m; only 1: now nzsimpl; only 1: intro m; only 1: now do 2 rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.133964776993	26
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add	40	0.0	search with cache (only 1: intros; only 1: now rewrite <- sub_sub_distr, sub_diag, sub_0_r).	0.0256447792053	2
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_l_r	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_l	40	2.18.0	search with cache (only 1: intros n m p; only 1: rewrite add_comm; only 1: apply add_add_simpl_l_l).	3.5761179924	1891
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.add_add_simpl_r_r	40	2.5.0.21	search with cache (only 1: intro z; only 1: intro m; only 1: intro n; only 1: now rewrite (add_comm n m), <- add_sub_assoc, sub_add_distr, sub_diag, sub_0_l, add_opp_r).	20.2769289017	11625
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_l	40
Coq.Numbers.Integer.Abstract.ZAdd.ZAddProp.sub_add_simpl_r_r	40	0.19.0	search with cache (only 1: intros n m p; only 1: rewrite (add_comm p m); only 1: now rewrite <- sub_sub_distr, sub_add_distr, sub_diag, sub_0_l, sub_opp_r).	1.10833001137	680
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_eq	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_unique	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_l_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_z	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_opp_opp_nz	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_same	40	1.2.0.0.11.0.9	search with cache (only 1: intuition; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: split; only 1: apply le_refl; only 1: now rewrite abs_pos; only 1: now nzsimpl).	3.19312691689	6314
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_same	40	0.1.6.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.222418785095	133
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small	40	0.4.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_small; only 1: intuition).	0.271659135818	89
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small	40	0.1.2.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: intuition; only 1: apply mod_small; only 1: intuition).	0.261937141418	85
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_0_l	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: now nzsimpl).	0.0254731178284	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_0_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_r	40	1.0.0.3.0.0.3.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique with 0; only 1: split; only 1: order; only 1: rewrite abs_eq; only 1: apply lt_0_1; only 1: apply le_0_1; only 1: now nzsimpl).	2.21413683891	1900
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_r	40	1.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: pose proof lt_0_1 as H; only 1: rewrite abs_pos; only 1: intuition; only 1: order; only 1: now nzsimpl).	0.0378842353821	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0131669044495	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_1_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.0127348899841	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: split; only 1: order; only 1: now rewrite abs_pos; only 1: nzsimpl; only 1: apply mul_comm).	0.0305640697479	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_unique_exact	40	0.0.0.5.0.16	search with cache (only 1: intuition; only 1: apply Private_NZDiv.div_unique with 0; only 1: rewrite abs_pos; only 1: intuition; only 1: nzsimpl; only 1: now try split).	4.30551505089	2788
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_le	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_pos	40	0.0.2.0	search with cache (only 1: intros; only 1: apply div_pos; only 1: order; only 1: trivial).	0.4720890522	85
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply Private_NZDiv.div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.365217924118	128
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_small_iff	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_mono	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_div_le	40	3.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (add_le_mono_r _ _ (a mod b)), <- div_mod by order; only 1: rewrite <- (add_0_r a)  at 1; only 1: rewrite <- add_le_mono_l; only 1: now apply mod_always_pos).	0.0762228965759	26
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_succ_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_pred_div_gt	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.0213921070099	4
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_lt_upper_bound	40	0.4.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_lt_mono_pos_l b) by order; only 1: apply le_lt_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: intuition; only 1: order; only 1: auto).	0.449908971786	209
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_upper_bound	40	0.0.1.0.0.0	search with cache (only 1: intros; only 1: rewrite (mul_le_mono_pos_l _ _ b) by order; only 1: apply le_trans with a; only 1: apply Private_NZDiv.mul_div_le; only 1: order; only 1: auto).	0.022598028183	7
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_lower_bound	40	1.0.0.1.0	search with cache (only 1: intros; only 1: rewrite <- (div_mul q b) by order; only 1: apply Private_NZDiv.div_le_mono; only 1: trivial; only 1: now rewrite mul_comm).	0.313396930695	105
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_le_compat_l	40	0.0.0.0.0.0.0.0.0.0.0.0.1.0.0.0	search with cache (only 1: intros p q r Hp (Hq, Hqr); only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite (div_mod p r)  at 2 by order; only 1: apply le_trans with (r * (p / r)); only 1: apply mul_le_mono_nonneg_r; only 1: apply Private_NZDiv.div_pos; only 1: order; only 1: order; only 1: order; only 1: rewrite <- (add_0_r (r * (p / r)))  at 1; only 1: rewrite <- add_le_mono_l; only 1: destruct (mod_bound_pos p r); only 1: order; only 1: order; only 1: order).	28.843914032	9214
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_add	40	0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: now apply mod_always_pos; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0302369594574	6
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add	40	0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.111804008484	8
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_add_l	40	0.0.3.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: trivial).	0.0292057991028	14
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_r	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_cancel_l	40	3.4.2	search with cache (only 1: intros a b c; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r).	3.69704413414	999
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_distr_r	40	1.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: now rewrite Private_NZDiv.mul_mod_distr_l).	0.347438097	57
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mod	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod_idemp_r	40	0.2.3.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.736578941345	150
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mul_mod	40	0.0.2.1.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: rewrite !(mul_comm a); only 1: now rewrite mul_comm; only 1: order; only 1: order).	0.0855569839478	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_l	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros a b n Hn; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0187118053436	5
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.add_mod	40	0.0.5.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0972239971161	26
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_mul_r	40	0.0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: apply div_mod; only 1: order).	0.965116024017	222
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_div	40
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.div_mul_le	40	0.1.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: auto; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.0406048297882	9
Coq.Numbers.Integer.Abstract.ZDivEucl.ZEuclidProp.mod_divides	40
Coq.Numbers.Integer.Binary.ZBinary.test	40	7.0	search with cache (only 1: intros a b Hb Hd; only 1: Z.order).	0.0112478733063	9
Coq.Numbers.Cyclic.Int31.Ring31.Int31_canonic	40
Coq.Numbers.Cyclic.Int31.Ring31.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.Int31Ring	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_eq	40
Coq.Numbers.Cyclic.Int31.Ring31.eqb31_correct	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold eqb31; only 1: intros x y; only 1: rewrite spec_compare; only 1: case Z.compare_spec; only 1: intuition; only 1: apply Int31_canonic; only 1: auto; only 1: easy; only 1: easy).	0.0504651069641	9
Coq.Numbers.Cyclic.Int31.Ring31.test	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iszero_not_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakl_shiftr	40	3.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0163609981537	6
Coq.Numbers.Cyclic.Int31.Cyclic31.sneakr_shiftl	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0163171291351	3
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_zero	40
Coq.Numbers.Cyclic.Int31.Cyclic31.twice_or_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S	40	0.0	search with cache (only 1: destruct x; only 1: auto).	0.0124671459198	2
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_S_tail	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_n_0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_size	40	0.4.1	search with cache (only 1: destruct x; only 1: simpl; only 1: reflexivity).	0.0172710418701	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S	40	0.0.0.0.0.0.0	search with cache (only 1: intros n; only 1: elim n; only 1: simpl; only 1: auto; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0226218700409	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_S_tail	40	0.0.0.0.1.1	search with cache (only 1: intros n; only 1: elim n; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: now f_equal).	0.0219299793243	8
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_n_0	40	0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: auto).	0.024523973465	6
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_size	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.0165159702301	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftl_above_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.firstr_firstl	40	0.2	search with cache (only 1: destruct x; only 1: auto).	1.02569890022	13
Coq.Numbers.Cyclic.Int31.Cyclic31.firstl_firstr	40	0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: auto).	0.103845834732	3
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_predsize_0_firstl	40	0.0.0.0.0.0.0	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: injection H; only 1: intros; only 1: subst; only 1: auto).	0.0311040878296	7
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_propagates	40
Coq.Numbers.Cyclic.Int31.Cyclic31.nshiftr_0_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_sneakl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.int31_ind_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_eqn	40	2.0.3.0.1	search with cache (only 1: destruct x; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	0.353950977325	146
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_aux_converges	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recr_eqn	40	1.1.0.18.0.5	search with cache (only 1: destruct x; only 1: simpl; only 1: compute; only 1: intros; only 1: rewrite H; only 1: auto).	2.50216317177	3040
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_aux_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.recrbis_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incrbis_aux_equiv	40	0.19.8	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	3.36646103859	1513
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_equiv	40	0.1.1	search with cache (only 1: intros; only 1: apply recrbis_aux_equiv; only 1: auto).	0.0423619747162	24
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn1	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_eqn2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_pos	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nonneg	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phibis_aux_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_lowerbound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_zero	40	5.2	search with cache (only 1: intros; only 1: now f_equal).	0.0181150436401	11
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_size	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_le	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_length	40	3.0	search with cache (only 1: intros; only 1: auto).	0.00862503051758	5
Coq.Numbers.Cyclic.Int31.Cyclic31.l2i_i2l	40	3.0.0	search with cache (only 1: intros; only 1: destruct x; only 1: auto).	0.0144989490509	6
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakr	40	1.1.0.0.1	search with cache (only 1: intros n; only 1: elim n; only 1: induction n; only 1: simpl; only 1: auto).	0.110015869141	16
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_sneakl	40	0.0.0	search with cache (only 1: destruct x; only 1: compute; only 1: auto).	0.0168190002441	3
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_l2i	40
Coq.Numbers.Cyclic.Int31.Cyclic31.i2l_nshiftl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_i2l	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_shiftr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incrbis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.EqShiftL_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_firstr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.incr_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_double	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi_aux	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2ibis_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_inv_positive_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.double_twice_plus_one_firstl	40
Coq.Numbers.Cyclic.Int31.Cyclic31.p2i_p2ibis	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_phi_inv_positive	40
Coq.Numbers.Cyclic.Int31.Cyclic31.positive_to_int31_spec	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_twice_plus_one	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_incr	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv_negative	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_phi_inv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.wB_pos	40	0	search with cache (only 1: auto with zarith).	0.00683903694153	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_zdigits	40	0	search with cache (only 1: auto).	0.00651383399963	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_more_than_1_digit	40	0	search with cache (only 1: reflexivity).	0.00749611854553	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_0	40	0	search with cache (only 1: auto).	0.00624513626099	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_1	40	0	search with cache (only 1: reflexivity).	0.00632882118225	1
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_m1	40	2	search with cache (only 1: auto).	0.108659029007	3
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_compare	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_succ	40	1.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.124599933624	54
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0105290412903	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sub_carry	40	0.0.5.0	search with cache (only 1: intros; only 1: unfold sub31carryc, sub31, interp_carry; only 1: repeat rewrite phi_phi_inv; only 1: apply Zplus_mod_idemp_l).	0.0547318458557	16
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp	40	0.1	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.372769117355	119
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_opp_carry	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred_c	40	0.0	search with cache (only 1: intros; only 1: apply spec_sub_c).	0.0124080181122	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pred	40	0.1.1.0.0.0	search with cache (only 1: unfold sub31; only 1: intros; only 1: repeat rewrite phi_phi_inv; only 1: change [|1|] with 1; only 1: generalize (phi_bounded x); only 1: lia).	0.0331377983093	8
Coq.Numbers.Cyclic.Int31.Cyclic31.phi2_phi_inv2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul_c	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mul	40	0.0	search with cache (only 1: intros; only 1: apply phi_phi_inv).	0.0116851329803	2
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_square_c	40	0.1.5.0.0.0.0	search with cache (only 1: unfold mul31c; only 1: intros; only 1: rewrite phi2_phi_inv2; only 1: apply Zmod_small; only 1: generalize (phi_bounded x); only 1: intros; only 1: nia).	1.71471691132	713
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div21	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_gcd	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter_int31_iter_nat	40
Coq.Numbers.Cyclic.Int31.Cyclic31.addmuldiv31_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_add_mul_div	40
Coq.Numbers.Cyclic.Int31.Cyclic31.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_pos_mod	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head00	40
Coq.Numbers.Cyclic.Int31.Cyclic31.head031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.phi_nz	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_head0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail00	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (phi_inv_phi x); only 1: rewrite H; only 1: simpl phi_inv; only 1: intros H'; only 1: rewrite <- H'; only 1: auto).	0.0273549556732	7
Coq.Numbers.Cyclic.Int31.Cyclic31.tail031_equiv	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_tail0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.quotient_by_2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_main	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_init	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_true	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt_test_false	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div31_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt31_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter31_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_def	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_lower_bound	40
Coq.Numbers.Cyclic.Int31.Cyclic31.div312_phi	40
Coq.Numbers.Cyclic.Int31.Cyclic31.sqrt312_step_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.iter312_sqrt_correct	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_sqrt2	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_eq0	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_is_even	40
Coq.Numbers.Cyclic.Int31.Cyclic31.log2_phi_bounded	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lor	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_land	40
Coq.Numbers.Cyclic.Int31.Cyclic31.spec_lxor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_more_than_1_digit	40	5	search with cache (only 1: lia).	0.0233340263367	6
Coq.Numbers.Cyclic.ZModulo.ZModulo.wB_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_1	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z_2	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0180130004883	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_to_Z	40	0.0.0.0	search with cache (only 1: unfold to_Z; only 1: intros; only 1: destruct (Z_mod_lt x wB wB_pos); only 1: auto).	0.0194389820099	4
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_of_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_zdigits	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_0	40	0.3.0.0.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: auto with zarith).	0.0264179706573	9
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_1	40	0.0.3.0.0.1.3.0.0	search with cache (only 1: unfold to_Z, zdigits; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: unfold wB, base; only 1: split; only 1: auto with zarith; only 1: apply Z.pow_gt_1; only 1: auto with zarith; only 1: auto with zarith).	2.88910508156	2197
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_Bm1	40	0.6.0.0	search with cache (only 1: unfold to_Z, one; only 1: apply Zmod_small; only 1: generalize wB_pos; only 1: lia).	0.0819089412689	36
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_compare	40	0	search with cache (only 1: auto).	0.00884795188904	1
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_eq0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_opp_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zmod_equal	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_succ	40	10.2.1.0	search with cache (only 1: intros; only 1: unfold eq0, to_Z in *; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	1.41819310188	777
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pred	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub	40	3.4.5.0.0	search with cache (only 1: intros; only 1: unfold add_carry, to_Z; only 1: rewrite Zminus_mod_idemp_r; only 1: symmetry; only 1: apply Zplus_mod_idemp_l).	1.67311501503	1242
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sub_carry	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_mul	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_square_c	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_modulo_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Zgcd_bound	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_gcd_gt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_div21	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_add_mul_div	40	1.3.0.0.1	search with cache (only 1: intros; only 1: unfold add, to_Z; only 1: rewrite <- Zplus_mod_idemp_l; only 1: rewrite Zplus_mod_idemp_l; only 1: auto).	0.152464866638	17
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_pos_mod	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_is_even	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_sqrt2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.two_p_power2	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head00	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_head0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_pos	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.Ptail_bounded	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail00	40	0.1.27	search with cache (only 1: compute; only 1: intros x ->; only 1: apply spec_zdigits).	24.3276808262	9284
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_tail0	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lor	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_land	40
Coq.Numbers.Cyclic.ZModulo.ZModulo.spec_lxor	40
Coq.Numbers.Cyclic.Int63.Cyclic63.is_zero_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.positive_to_int_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.mulc_WW_spec	40
Coq.Numbers.Cyclic.Int63.Cyclic63.diveucl_spec_aux	40
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_2	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_le_0	40
Coq.Numbers.Cyclic.Int63.Cyclic63.div_lt	40
Coq.Numbers.Cyclic.Int63.Cyclic63.P	40	27.1	search with cache (only 1: intros n; only 1: auto with zarith).	1.70808291435	5922
Coq.Numbers.Cyclic.Int63.Cyclic63.shift_unshift_mod_3	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros n p a H; only 1: rewrite Zmod_eq by auto with zarith; only 1: unfold Z.sub at 1; only 1: rewrite Z_div_plus_full_l by auto with zarith; only 1: replace (2 ^ n) with (2 ^ (n - p) * 2 ^ p) by (rewrite <- Zpower_exp; [ f_equal |  |  ]; lia); only 1: rewrite <- Zdiv_Zdiv, Z_div_mult by auto with zarith; only 1: rewrite (Z.mul_comm (2 ^ (n - p))), Z.mul_assoc; only 1: rewrite Zopp_mult_distr_l; only 1: rewrite Z_div_mult by auto with zarith; only 1: symmetry; only 1: apply Zmod_eq; only 1: auto with zarith).	2.2933011055	545
Coq.Numbers.Cyclic.Int63.Cyclic63.pos_mod_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_rec_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_bounded	40
Coq.Numbers.Cyclic.Int63.Int63.Z_lt_div2	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_le_first	40
Coq.Numbers.Cyclic.Int63.Int63.Zmod_distr	40
Coq.Numbers.Cyclic.Int63.Int63.pow2_pos	40	4.1.3	search with cache (only 1: intros; only 1: apply Z.lt_gt; only 1: auto with zarith).	0.0356431007385	35
Coq.Numbers.Cyclic.Int63.Int63.pow2_nz	40
Coq.Numbers.Cyclic.Int63.Int63.wB_diff_0	40	11.4	search with cache (only 1: intros h; only 1: now subst).	0.163066864014	213
Coq.Numbers.Cyclic.Int63.Int63.wB_pos	40	0.13	search with cache (only 1: compute; only 1: auto).	0.286087989807	75
Coq.Numbers.Cyclic.Int63.Int63.to_Z_0	40	0	search with cache (only 1: now subst).	0.0092511177063	1
Coq.Numbers.Cyclic.Int63.Int63.to_Z_1	40	0	search with cache (only 1: trivial).	0.00759601593018	1
Coq.Numbers.Cyclic.Int63.Int63.can_inj	40	165	search with cache (only 1: congruence).	4.65945291519	18040
Coq.Numbers.Cyclic.Int63.Int63.to_Z_inj	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_complete	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_spec	40
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_complete	40	3.1.0	search with cache (only 1: intros; only 1: rewrite <- not_true_iff_false, eqb_spec; only 1: trivial).	0.0478858947754	7
Coq.Numbers.Cyclic.Int63.Int63.eqb_false_correct	40	0.0.0	search with cache (only 1: intros x y; only 1: rewrite eqb_false_spec; only 1: trivial).	0.01402592659	3
Coq.Numbers.Cyclic.Int63.Int63.eq_dec	40
Coq.Numbers.Cyclic.Int63.Int63.cast_refl	40
Coq.Numbers.Cyclic.Int63.Int63.cast_diff	40
Coq.Numbers.Cyclic.Int63.Int63.eqo_refl	40	0.0.0.0.0.5.0.2.1.2.2	search with cache (only 1: intros; only 1: generalize (eqb_correct i i); only 1: generalize (eqb_correct i i); only 1: generalize (eqb_correct i i); only 1: intros; only 1: compute; only 1: generalize (eqb_correct i i); only 1: rewrite eqb_refl; only 1: intros; only 1: rewrite (Eqdep_dec.eq_proofs_unicity eq_dec (e eq_refl) eq_refl); only 1: trivial).	3.38278412819	3976
Coq.Numbers.Cyclic.Int63.Int63.eqo_diff	40	0.0.1.0.0	search with cache (only 1: unfold eqo; only 1: intros; only 1: generalize (eqb_correct i j); only 1: rewrite H; only 1: trivial).	0.0175859928131	6
Coq.Numbers.Cyclic.Int63.Int63.eqbP	40
Coq.Numbers.Cyclic.Int63.Int63.ltbP	40
Coq.Numbers.Cyclic.Int63.Int63.lebP	40
Coq.Numbers.Cyclic.Int63.Int63.compare_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_zero_spec	40	0.7.8.0.0	search with cache (only 1: split; only 1: auto using eqb_correct, eqb_complete; only 1: intros; only 1: subst; only 1: reflexivity).	2.29212808609	746
Coq.Numbers.Cyclic.Int63.Int63.diveucl_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succ_spec	40
Coq.Numbers.Cyclic.Int63.Int63.succc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.addcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.pred_spec	40
Coq.Numbers.Cyclic.Int63.Int63.predc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.oppc_spec	40	0	search with cache (only 1: apply subc_spec).	0.00717711448669	1
Coq.Numbers.Cyclic.Int63.Int63.opp_spec	40	1	search with cache (only 1: apply sub_spec).	0.01211810112	2
Coq.Numbers.Cyclic.Int63.Int63.oppcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarry_spec	40
Coq.Numbers.Cyclic.Int63.Int63.subcarryc_spec	40
Coq.Numbers.Cyclic.Int63.Int63.to_Z_gcd	40
Coq.Numbers.Cyclic.Int63.Int63.gcd_spec	40
Coq.Numbers.Cyclic.Int63.Int63.head00_spec	40
Coq.Numbers.Cyclic.Int63.Int63.tail00_spec	40	0	search with cache (only 1: now intros h; rewrite (to_Z_inj _ 0 h)).	0.00943088531494	1
Coq.Numbers.Cyclic.Int63.Int63.eqm_mod	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_sub	40
Coq.Numbers.Cyclic.Int63.Int63.eqmE	40
Coq.Numbers.Cyclic.Int63.Int63.eqm_subE	40
Coq.Numbers.Cyclic.Int63.Int63.int_eqm	40	0.4.18	search with cache (only 1: symmetry; only 1: subst; only 1: trivial).	0.122494935989	295
Coq.Numbers.Cyclic.Int63.Int63.eqmI	40
Coq.Numbers.Cyclic.Int63.Int63.add_assoc	40
Coq.Numbers.Cyclic.Int63.Int63.add_comm	40
Coq.Numbers.Cyclic.Int63.Int63.add_le_r	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_l	40
Coq.Numbers.Cyclic.Int63.Int63.add_cancel_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros h; only 1: apply int_eqm in h; only 1: rewrite !add_spec in h; only 1: apply eqm_mod, eqm_sub in h; only 1: replace (_ + _ - _) with (φ (y) - φ (z)) in h by lia; only 1: rewrite <- eqm_subE in h; only 1: apply eqmI, h).	0.025444984436	7
Coq.Numbers.Cyclic.Int63.Int63.lsr0	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_0_r	40	22.0.0	search with cache (only 1: apply to_Z_inj; only 1: rewrite lsr_spec; only 1: auto with zarith).	1.49105787277	2979
Coq.Numbers.Cyclic.Int63.Int63.lsr_1	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_add	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0	40
Coq.Numbers.Cyclic.Int63.Int63.lsl0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lsl_add_distr	40
Coq.Numbers.Cyclic.Int63.Int63.lsr_M_r	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0_spec	40
Coq.Numbers.Cyclic.Int63.Int63.bit_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.bit_b2i	40
Coq.Numbers.Cyclic.Int63.Int63.bit_1	40	6.0.0	search with cache (only 1: unfold bit; only 1: rewrite lsr_1; only 1: now case eqbP).	0.0156970024109	9
Coq.Numbers.Cyclic.Int63.Int63.to_Z_split	40
Coq.Numbers.Cyclic.Int63.Int63.bit_M	40
Coq.Numbers.Cyclic.Int63.Int63.bit_half	40
Coq.Numbers.Cyclic.Int63.Int63.bit_ext	40
Coq.Numbers.Cyclic.Int63.Int63.bit_lsl	40
Coq.Numbers.Cyclic.Int63.Int63.lor_lsr	40
Coq.Numbers.Cyclic.Int63.Int63.lor_le	40
Coq.Numbers.Cyclic.Int63.Int63.bit_0	40
Coq.Numbers.Cyclic.Int63.Int63.bit_add_or	40
Coq.Numbers.Cyclic.Int63.Int63.addmuldiv_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_bit	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_even_0	40	0	search with cache (only 1: auto).	0.00773906707764	1
Coq.Numbers.Cyclic.Int63.Int63.is_even_lsl_1	40
Coq.Numbers.Cyclic.Int63.Int63.quotient_by_2	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main_trick	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_main	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_false	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_test_true	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_init	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt_spec	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_def	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_lower_bound	40
Coq.Numbers.Cyclic.Int63.Int63.diveucl_21_spec_aux	40
Coq.Numbers.Cyclic.Int63.Int63.div2_phi	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_step_correct	40
Coq.Numbers.Cyclic.Int63.Int63.iter2_sqrt_correct	40
Coq.Numbers.Cyclic.Int63.Int63.sqrt2_spec	40
Coq.Numbers.Cyclic.Int63.Int63.of_pos_rec_spec	40
Coq.Numbers.Cyclic.Int63.Int63.is_int	40
Coq.Numbers.Cyclic.Int63.Int63.of_Z_spec	40
Coq.Numbers.Cyclic.Int63.Int63.negbE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_oddE	40
Coq.Numbers.Cyclic.Int63.Int63.Z_evenE	40
Coq.Numbers.Cyclic.Int63.Int63.is_zeroE	40
Coq.Numbers.Cyclic.Int63.Int63.bitE	40
Coq.Numbers.Cyclic.Int63.Int63.lt_pow_lt_log	40
Coq.Numbers.Cyclic.Int63.Int63.land_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.lxor_spec'	40
Coq.Numbers.Cyclic.Int63.Int63.landC	40
Coq.Numbers.Cyclic.Int63.Int63.landA	40	17.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !land_spec, andb_comm; only 1: ring).	0.676137924194	1021
Coq.Numbers.Cyclic.Int63.Int63.land0	40
Coq.Numbers.Cyclic.Int63.Int63.land0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lorC	40
Coq.Numbers.Cyclic.Int63.Int63.lorA	40
Coq.Numbers.Cyclic.Int63.Int63.lor0	40
Coq.Numbers.Cyclic.Int63.Int63.lor0_r	40
Coq.Numbers.Cyclic.Int63.Int63.lxorC	40
Coq.Numbers.Cyclic.Int63.Int63.lxorA	40	20.0.0.0	search with cache (only 1: apply bit_ext; only 1: intros n; only 1: rewrite !lxor_spec, xorb_comm; only 1: ring).	0.628356933594	1067
Coq.Numbers.Cyclic.Int63.Int63.lxor0	40
Coq.Numbers.Cyclic.Int63.Int63.lxor0_r	40
Coq.Numbers.Cyclic.Int63.Ring63.ring_theory_switch_eq	40
Coq.Numbers.Cyclic.Int63.Ring63.Int63Ring	40
Coq.Numbers.Cyclic.Int63.Ring63.eq31_correct	40
Coq.Numbers.Cyclic.Int63.Ring63.test	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WO	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_OW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.spec_WW	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_pos_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.ZnZ.of_Z_correct	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_0_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_comm	40	11.22.0.0	search with cache (only 1: intros; only 1: zify; only 1: f_equal; only 1: ring).	15.8559498787	20395
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_1_l	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_comm	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_assoc	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.mul_add_distr_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.add_opp_diag_r	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.CyclicRing	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_eq	40
Coq.Numbers.Cyclic.Abstract.CyclicAxioms.CyclicRing.eqb_correct	40	2.2.13.0.0.0.2	search with cache (only 1: intros f w; only 1: unfold eqb, eq; only 1: rewrite ZnZ.spec_compare; only 1: case Z.compare_spec; only 1: easy || lia; only 1: easy || lia; only 1: easy || lia).	4.31180596352	6005
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.eq_equiv	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_1	40	12	search with cache (only 1: now apply Z.pow_gt_1).	0.052304983139	46
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.gt_wB_0	40	1.0	search with cache (only 1: unfold base; only 1: auto with zarith).	0.0103671550751	3
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.succ_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_mod_wB	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.NZ_to_Z_mod	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.pred_succ	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.one_succ	40	0.0.0.5.0.1	search with cache (only 1: zify; only 1: rewrite Zmod_small; only 1: auto with zarith; only 1: split; only 1: auto with zarith; only 1: apply gt_wB_1).	0.126672029495	73
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.two_succ	40	5.1.0	search with cache (only 1: zify; only 1: rewrite <- one_mod_wB  at 2; only 1: now rewrite one_mod_wB).	0.28168296814	23
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B0	40	0	search with cache (only 1: assumption).	0.00728988647461	1
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.BS	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.Zbounded_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.B_holds	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.bi_induction	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_0_l	40	4.1.0	search with cache (only 1: intro n; only 1: zify; only 1: apply NZ_to_Z_mod).	0.0546979904175	26
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.add_succ_l	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_0_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.sub_succ_r	40
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_0_l	40	0.8.3.0.0	search with cache (only 1: intro n; only 1: zify; only 1: apply Zmod_small; only 1: pose proof gt_wB_1; only 1: lia).	1.50796508789	1244
Coq.Numbers.Cyclic.Abstract.NZCyclic.NZCyclicAxiomsMod.mul_succ_l	40
Coq.Numbers.DecimalString.uint_of_char_spec	40
Coq.Numbers.DecimalString.NilEmpty.usu	40
Coq.Numbers.DecimalString.NilEmpty.sus	40
Coq.Numbers.DecimalString.NilEmpty.isi	40
Coq.Numbers.DecimalString.NilEmpty.sis	40
Coq.Numbers.DecimalString.NilZero.uint_of_string_nonnil	40
Coq.Numbers.DecimalString.NilZero.sus	40
Coq.Numbers.DecimalString.NilZero.usu	40
Coq.Numbers.DecimalString.NilZero.usu_nil	40	0.1	search with cache (only 1: simpl; only 1: auto).	0.0206530094147	3
Coq.Numbers.DecimalString.NilZero.usu_gen	40
Coq.Numbers.DecimalString.NilZero.isi	40
Coq.Numbers.DecimalString.NilZero.isi_posnil	40	3.0	search with cache (only 1: simpl; only 1: auto).	0.0201101303101	5
Coq.Numbers.DecimalString.NilZero.isi_negnil	40	2.0	search with cache (only 1: simpl; only 1: auto).	0.019966840744	4
Coq.Numbers.DecimalString.NilZero.sis	40
Coq.Numbers.Natural.Peano.NPeano.Even_equiv	40
Coq.Numbers.Natural.Peano.NPeano.Odd_equiv	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_wf_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nlt_0_r	40	0.16.0	search with cache (only 1: intro n; only 1: rewrite nlt_ge; only 1: apply le_0_l).	0.753256797791	1044
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.nle_succ_0	40	0.2.30.0	search with cache (only 1: intro n; only 1: rewrite nle_gt; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	36.7342801094	27725
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_0_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_0_succ	40	0.4.2	search with cache (only 1: intro n; only 1: rewrite lt_succ_r; only 1: apply le_0_l).	0.0215051174164	13
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.neq_0_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.eq_0_gt_0_cases	40	0.2.4.0	search with cache (only 1: cases ltac:(n); only 1: intuition order; only 1: right; only 1: apply lt_0_succ).	0.0306968688965	15
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.zero_one	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_r	40	0.0.0.0.0.0.0.10.0.2	search with cache (only 1: setoid_rewrite one_succ; only 1: intros n; only 1: rewrite lt_succ_r; only 1: split; only 1: intro H; only 1: le_elim H; only 1: false_hyp H nlt_0_r; only 1: assumption; only 1: intro H; only 1: now apply eq_le_incl).	3.77677702904	6611
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_1_r	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_0	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_1_l'	40	0.0.2.1.2.0.1.10.1	search with cache (only 1: intros n m; only 1: induct n; only 1: intros; only 1: now apply lt_1_l with m; only 1: intros n IH; only 1: intros; only 1: apply IH; only 1: now apply lt_succ_l; only 1: assumption).	11.664757967	9288
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_ind_rel	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.succ_pred_pos	40	0.0.2.0.1.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: false_hyp H nlt_0_r; only 1: intros; only 1: now rewrite pred_succ).	0.0263230800629	23
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_l	40	0.1.3.2.0.10.3	search with cache (only 1: cases ltac:(n); only 1: rewrite pred_0; only 1: order; only 1: intro n; only 1: rewrite pred_succ; only 1: apply le_le_succ_r; only 1: now apply eq_le_incl).	0.836902856827	1904
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_l	40	1.0.6.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros n _; only 1: rewrite pred_succ; only 1: apply lt_succ_diag_r).	2.20558214188	1351
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_le_pred	40	2.1.8.0.0.0.1.0	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: rewrite pred_0; only 1: assumption; only 1: intros; only 1: apply le_succ_l in H; only 1: rewrite pred_succ; only 1: now apply lt_le_incl).	6.92661094666	6237
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_lt_pred	40	0.0.0.0.5.1.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: rewrite pred_0; only 1: trivial; only 1: intros; only 1: rewrite pred_succ; only 1: now apply lt_succ_l).	0.777586936951	608
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_le_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_le	40	0.0.2.7.1.1	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: apply le_0_l; only 1: intros m IH; only 1: rewrite pred_succ; only 1: now apply le_succ_l).	3.40154719353	4009
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le	40	6.1.0.0.0.2.0.1	search with cache (only 1: intro n; only 1: cases ltac:(m); only 1: rewrite pred_0; only 1: intro H; only 1: assumption; only 1: intros m IH; only 1: rewrite pred_succ in IH; only 1: now apply le_le_succ_r).	3.03871107101	3260
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_le_mono	40	2.0.0.0.1.0.5.0.3.1	search with cache (only 1: intros n m H; only 1: apply le_ind with (4 := H); only 1: solve_proper; only 1: order; only 1: clear m H; only 1: intros; only 1: rewrite pred_succ; only 1: apply le_trans with n; only 1: apply le_pred_l; only 1: assumption).	18.9616289139	21684
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.pred_lt_mono	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_succ_lt_pred	40
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_succ_le_pred	40	0.0.0.2.0.0.0.0.2.0	search with cache (only 1: intros n m H; only 1: elim H using le_ind; only 1: solve_proper; only 1: rewrite pred_succ; only 1: now apply eq_le_incl; only 1: intros k H1 H2; only 1: apply le_succ_l in H1; only 1: rewrite pred_succ; only 1: apply lt_le_incl in H1; only 1: auto).	1.0131919384	764
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.lt_pred_lt_succ	40	0.4.2.0.0.3	search with cache (only 1: cases ltac:(n); only 1: intros m IH; only 1: apply lt_0_succ; only 1: intros n IH; only 1: rewrite <- succ_lt_mono; only 1: now rewrite pred_succ).	2.72858905792	2453
Coq.Numbers.Natural.Abstract.NOrder.NOrderProp.le_pred_le_succ	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_eq	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_unique	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_unique_exact	40	0.0.0.0.1	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_unique with 0; only 1: auto'; only 1: nzsimpl; only 1: now try split).	0.0456478595734	17
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_same	40	9.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: auto'; only 1: now nzsimpl).	0.751158952713	741
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_same	40	1.0.2.2.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 1; only 1: auto'; only 1: now nzsimpl).	0.0625848770142	11
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small	40	1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with a; only 1: auto; only 1: now nzsimpl).	0.0583341121674	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small	40	1.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with 0; only 1: auto'; only 1: now nzsimpl).	0.0582909584045	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_0_l	40	0.2.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto').	0.0173389911652	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_0_l	40	0.3.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto').	0.017520904541	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_r	40	1.1.11.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique with 0; only 1: apply lt_0_1; only 1: now nzsimpl).	1.19502711296	1669
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_r	40	1.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: apply lt_0_1; only 1: now nzsimpl).	0.0567529201508	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_small; only 1: auto).	0.0161011219025	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_1_l	40	0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.mod_small; only 1: auto).	0.0158061981201	3
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul	40	0.1.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.div_unique_exact; only 1: order; only 1: apply mul_comm).	0.0274930000305	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul	40	1.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with a; only 1: auto'; only 1: nzsimpl; only 1: apply mul_comm).	0.0424530506134	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_le	40	0.0.8.0	search with cache (only 1: intros; only 1: apply mod_le; only 1: auto'; only 1: auto').	0.0884301662445	76
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos	40	0.4.0.0	search with cache (only 1: intros a b (Hb, Hab); only 1: assert (LE : 0 <= a / b) by (apply div_pos; order); only 1: apply div_str_pos; only 1: auto).	0.518671989441	135
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_small_iff	40	0.3.1.2.0.0.0.0.0.1.0.1	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: symmetry in Hab; only 1: contradict Hab; only 1: apply lt_neq, Private_NZDiv.div_str_pos; only 1: auto'; only 1: intros Hab; only 1: apply Private_NZDiv.div_small; only 1: auto').	14.4428389072	9809
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_small_iff	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_str_pos_iff	40	3.9.0.0.1.0.1.0.0.0.1	search with cache (only 1: intros; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b) as [LT| LE]; only 1: rewrite <- Private_NZDiv.div_small_iff in LT; only 1: order; only 1: order; only 1: auto; only 1: intros Hab; only 1: apply Private_NZDiv.div_str_pos; only 1: auto').	8.88187289238	9436
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_mono	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_div_le	40	0.0.4.0	search with cache (only 1: intros; only 1: apply mul_div_le; only 1: auto'; only 1: auto').	0.0615971088409	21
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_succ_div_gt	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite mul_succ_r; only 1: rewrite <- add_lt_mono_l; only 1: apply mod_bound_pos; only 1: auto'; only 1: auto').	0.0482430458069	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_exact	40	0.0.0.0	search with cache (only 1: intros; only 1: rewrite (div_mod a b)  at 1 by order; only 1: rewrite <- (add_0_r (b * (a / b)))  at 2; only 1: apply add_cancel_l).	0.031327009201	4
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_lt_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_upper_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_lower_bound	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_le_compat_l	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_add	40	0.0.0.0.2.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply Private_NZDiv.mod_unique with (a / c + b); only 1: apply mod_bound_pos; only 1: auto'; only 1: auto'; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0535669326782	10
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (mul_cancel_l _ _ c); only 1: order; only 1: apply (add_cancel_r _ _ ((a + b * c) mod c)); only 1: rewrite <- div_mod, Private_NZDiv.mod_add by order; only 1: rewrite mul_add_distr_l, add_shuffle0, <- div_mod by order; only 1: now rewrite mul_comm).	0.0660238265991	7
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_add_l	40	0.0.2.0	search with cache (only 1: intros; only 1: rewrite (add_comm _ c), (add_comm a); only 1: apply Private_NZDiv.div_add; only 1: order).	0.0279250144958	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_r	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply div_mul_cancel_r; only 1: auto'; only 1: auto'; only 1: auto').	0.252974033356	74
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_cancel_l	40	0.0.0.2.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm c); only 1: apply Private_NZDiv.div_mul_cancel_r; only 1: auto'; only 1: auto').	0.106681108475	31
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_r	40	0.0.0.2.0.1.1.0.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm _ c); only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto').	1.17475199699	399
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_distr_l	40	0.0.0.0.0.2.0.0.2.0	search with cache (only 1: intros; only 1: rewrite <- (add_cancel_l _ _ (c * b * (c * a / (c * b)))); only 1: rewrite <- div_mod; only 1: rewrite Private_NZDiv.div_mul_cancel_l; only 1: rewrite <- mul_assoc, <- mul_add_distr_l, mul_cancel_l by order; only 1: now apply div_mod; only 1: auto'; only 1: auto'; only 1: rewrite <- neq_mul_0; only 1: intuition).	1.06977891922	391
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mod	40	1.0.0.0.0	search with cache (only 1: intros; only 1: destruct (mod_bound_pos a n); only 1: auto'; only 1: auto'; only 1: now rewrite Private_NZDiv.mod_small_iff).	0.0258882045746	6
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_l	40	0.0.0.4.1	search with cache (only 1: intros; only 1: apply mul_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	0.521574020386	82
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(mul_comm a); only 1: apply Private_NZDiv.mul_mod_idemp_l; only 1: order).	0.0291287899017	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mul_mod	40	0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.mul_mod_idemp_l, Private_NZDiv.mul_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0306179523468	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_l	40	0.0.0.5.1	search with cache (only 1: intros; only 1: apply add_mod_idemp_l; only 1: auto'; only 1: auto'; only 1: auto').	1.36568593979	95
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod_idemp_r	40	0.0.1.0	search with cache (only 1: intros; only 1: rewrite !(add_comm a); only 1: apply Private_NZDiv.add_mod_idemp_l; only 1: order).	0.0290040969849	5
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.add_mod	40	0.0.3.0.0	search with cache (only 1: intros; only 1: rewrite Private_NZDiv.add_mod_idemp_l, Private_NZDiv.add_mod_idemp_r; only 1: reflexivity; only 1: order; only 1: order).	0.0304770469666	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_div	40
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_mul_r	40	0.0.2.0.0.0.2	search with cache (only 1: intros; only 1: apply add_cancel_l with (b * c * (a / (b * c))); only 1: rewrite <- div_mod by (apply neq_mul_0; split; order); only 1: rewrite <- Private_NZDiv.div_div by trivial; only 1: rewrite add_assoc, add_shuffle0, <- mul_assoc, <- mul_add_distr_l; only 1: rewrite <- div_mod by order; only 1: now apply div_mod).	0.365169048309	62
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.div_mul_le	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply Private_NZDiv.div_le_lower_bound; only 1: order; only 1: rewrite mul_assoc, (mul_comm b c), <- mul_assoc; only 1: apply mul_le_mono_nonneg_l; only 1: auto'; only 1: apply Private_NZDiv.mul_div_le; only 1: order).	0.112525939941	8
Coq.Numbers.Natural.Abstract.NDiv.NDivProp.mod_divides	40	0.0.0.0.1.0.0.0.0.0	search with cache (only 1: split; only 1: intros; only 1: exists (a / b); only 1: rewrite Private_NZDiv.div_exact; only 1: auto; only 1: order; only 1: intros (c, Hc); only 1: rewrite Hc, mul_comm; only 1: apply Private_NZDiv.mod_mul; only 1: auto').	0.59071803093	144
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_succ_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_succ	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.le_0_l	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.case_analysis	40	0.0.0.0.0.0.0	search with cache (only 1: intros A A_wd A0 AS n; only 1: apply right_induction with 0; only 1: assumption; only 1: assumption; only 1: intros; only 1: auto; only 1: apply le_0_l).	0.020024061203	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0	40	19.0	search with cache (only 1: intro n; only 1: now apply (neq_succ_diag_l 0)).	0.116960048676	556
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.neq_0_r	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.zero_or_succ	40	0.26.0.32.0	search with cache (only 1: cases ltac:(n); only 1: now left; only 1: intro n; only 1: right; only 1: now exists n).	7.04144692421	22823
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.eq_pred_0	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.succ_pred	40	1.0.0.0.0.0	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: now elim H; only 1: intro n; only 1: intro H; only 1: now rewrite pred_succ).	0.0213108062744	7
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pred_inj	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.pair_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.two_dim_induction	40
Coq.Numbers.Natural.Abstract.NBase.NBaseProp.double_induction	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_0	40	0.0.4.0	search with cache (only 1: intros n m H1; only 1: unfold if_zero; only 1: rewrite recursion_0; only 1: auto).	0.0142920017242	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.if_zero_succ	40	0.0.0.2.0.0	search with cache (only 1: unfold if_zero; only 1: intros; only 1: rewrite recursion_succ; only 1: auto; only 1: auto; only 1: f_equiv').	0.0243849754333	8
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_0_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_succ_l	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_add_add	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_0_r	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_succ_r	40	0.0.0.0.5.0	search with cache (only 1: intros x y; only 1: unfold def_mul; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: reflexivity; only 1: f_equiv').	9.32280421257	186
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.def_mul_mul	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_base	40	0.1.2.1	search with cache (only 1: intros; only 1: unfold ltb; only 1: rewrite recursion_0; only 1: f_equiv').	3.02463984489	14
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_0_succ	40	3.3.6.0	search with cache (only 1: intro n; only 1: rewrite ltb_base; only 1: unfold if_zero; only 1: now rewrite recursion_succ).	0.545189142227	680
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.succ_ltb_mono	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_lt	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.ltb_ge	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_0	40	0.24	search with cache (only 1: unfold even; only 1: now rewrite recursion_0).	0.124345064163	306
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.even_succ	40	3.5.1	search with cache (only 1: intro n; only 1: unfold even; only 1: now rewrite recursion_succ).	0.119995117188	77
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_succ	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_aux_spec2	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_1	40	0.0.0.2.2.1.5	search with cache (only 1: setoid_rewrite one_succ; only 1: unfold half; only 1: rewrite half_aux_succ; only 1: simpl; only 1: rewrite half_aux_0; only 1: simpl; only 1: auto with *).	1.37642788887	1092
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_double	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_upper_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_lower_bound	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_nz	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.half_decrease	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_0	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow_succ	40	0.0.0.0.1.3.4	search with cache (only 1: intro n; only 1: unfold pow; only 1: intro x; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: auto with *; only 1: f_equiv').	19.781234026	1922
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_prewd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_wd	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_good_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_init	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.log_step	40
Coq.Numbers.Natural.Abstract.NDefOps.NdefOpsProp.pow2_log	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.square_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_l	40	0.3.7.6	search with cache (only 1: intros a b Ha Hb; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: order).	4.24349999428	2384
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono_r	40	0.0.0.4.0	search with cache (only 1: intros; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: assumption).	0.0474801063538	15
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_lt_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.mul_le_mono	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.lt_0_mul'	40
Coq.Numbers.Natural.Abstract.NMulOrder.NMulOrderProp.eq_mul_1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_sub_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow_div_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_proper	40	1.4	search with cache (only 1: intros a a' Ha; only 1: now rewrite ?Ha).	0.152594089508	106
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.exists_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_succ_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_spec	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_false	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite <- testbit_spec'; only 1: destruct a.[n]; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order'; only 1: split; only 1: simpl; only 1: now try order'; only 1: simpl; only 1: now try order').	1.38696193695	752
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_b2n_double_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.b2n_bit0	40	0.0.0.0.15	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: now rewrite mod_small by (destruct a0; order')).	0.46880698204	294
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_0	40	0.0.0.1.1.0.3.0	search with cache (only 1: intros a0; only 1: apply b2n_inj; only 1: rewrite testbit_spec'; only 1: nzsimpl; only 1: simpl; only 1: order; only 1: order'; only 1: order_nz).	0.484714984894	200
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit0_mod	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros a; only 1: destruct (exists_div2 a) as (a', (b, H)); only 1: rewrite H  at 1; only 1: rewrite testbit_0_r; only 1: apply mod_unique with a'; only 1: destruct b; only 1: order'; only 1: order'; only 1: trivial).	0.0306220054626	10
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bit_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_above_log2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_bits	40	0.2.3.18.0	search with cache (only 1: intros a n; only 1: rewrite testbit_eqb; only 1: rewrite testbit_eqb; only 1: rewrite pow_succ_r', <- div_div by order_nz; only 1: now nzsimpl).	5.35369300842	4745
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div_pow2_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.double_bits_succ	40	0.0	search with cache (only 1: intros; only 1: apply testbit_even_succ, le_0_l).	0.0076208114624	2
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mul_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.mod_pow2_bits_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.eqf_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.testbit_eqf	40	0.1.0.2.1.0.1.2	search with cache (only 1: repeat red; only 1: intros; only 1: apply eq_true_iff_eq; only 1: rewrite 2!testbit_true; only 1: f_equiv; only 1: f_equiv; only 1: f_equiv; only 1: trivial).	2.7482278347	1084
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.bits_inj_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.are_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_high'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_mul_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_spec_alt	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_shiftl_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_1_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_r	40	0.0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: rewrite shiftr_spec'; only 1: now nzsimpl).	0.0285248756409	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_0_l	40	0.0.0	search with cache (only 1: intros; only 1: rewrite shiftl_mul_pow2; only 1: now nzsimpl).	0.0186450481415	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_0_l	40	0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite shiftr_div_pow2; only 1: nzsimpl; only 1: order_nz; only 1: order_nz).	0.0213441848755	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_eq_0	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros a n; only 1: rewrite shiftr_div_pow2, div_small_iff by order_nz; only 1: destruct (eq_0_gt_0_cases a) as [EQ| LT]; only 1: rewrite EQ; only 1: intros _; only 1: assert (H : 2 ~= 0) by order'; only 1: generalize (pow_nonzero 2 n H), (le_0_l (2 ^ n)); only 1: order; only 1: rewrite log2_lt_pow2; only 1: trivial; only 1: trivial).	0.524974107742	195
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_div	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.div2_odd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0346641540527	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0360128879547	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_wd	40	0.2.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: bitwise; only 1: now rewrite Ha, Hb).	0.0406789779663	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_nilpotent	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_0_r	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_l).	0.0131099224091	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_l	40	4.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: now nzsimpl).	0.0196850299835	9
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_0_r	40	1.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0132458209991	4
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_l	40	0.6.2.0	search with cache (only 1: intros; only 1: bitwise; only 1: simpl; only 1: trivial using lt_succ_diag_r).	0.268940925598	125
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_0_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_comm	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_assoc	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_l	40	0.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: trivial).	0.013081073761	3
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_0_r	40	2.0.0	search with cache (only 1: intros; only 1: bitwise; only 1: apply xorb_false_r).	0.0135068893433	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_land_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lor_distr_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ldiff_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ldiff_and	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_spec'	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_wd	40	0.0.23.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold setbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	13.962982893	8791
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_wd	40	0.0.23.0	search with cache (only 1: intros a a' Ha b b' Hb; only 1: unfold clearbit; only 1: bitwise; only 1: now rewrite Ha, Hb).	11.3346641064	6961
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_true	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_false	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.pow2_bits_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.setbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eqb	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_eq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.clearbit_neq	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftl_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.shiftr_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_wd	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_add	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_div_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_mod_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_high	40	0.0.0.1.0.0.0.0.0.0.1.1.2	search with cache (only 1: intros a n H; only 1: rewrite testbit_false; only 1: rewrite div_small; only 1: nzsimpl; only 1: order'; only 1: order'; only 1: rewrite ones_equiv; only 1: apply le_succ_l; only 1: rewrite succ_pred; only 1: apply pow_le_mono_r; only 1: order'; only 1: trivial; only 1: order_nz).	4.42288589478	2378
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ones_spec_iff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_spec_high	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_involutive	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_0_l	40	0.0.3.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_false_r).	0.105890989304	41
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ones	40	0.1.0.0	search with cache (only 1: intros; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_nilpotent).	0.0129690170288	5
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_ones_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_r_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_ones_l_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lor_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag	40	0.0.2.0.0.0.4.1.1.0.0	search with cache (only 1: intros a n; only 1: bitwise; only 1: destruct (le_gt_cases n m); only 1: rewrite lnot_spec_high, ones_spec_high; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial; only 1: rewrite lnot_spec_low, ones_spec_low; only 1: now destruct a.[m]; only 1: trivial; only 1: trivial).	3.75663399696	3696
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.land_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lor_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_land_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_ldiff_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lnot_lnot	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_l	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_lxor_r	40	0.0.15.0	search with cache (only 1: intros a b n; only 1: unfold lnot; only 1: bitwise; only 1: apply xorb_assoc_reverse).	7.46417999268	7486
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lxor_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_bits_unique	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftr	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_shiftl	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_land	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.log2_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bit0	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add3_bits_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_div2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_carry_bits	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_bit1	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.nocarry_equiv	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lxor	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.ldiff_le	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.sub_nocarry_ldiff	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_lnot_diag_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.lnot_sub_low	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_lt_pow2	40
Coq.Numbers.Natural.Abstract.NBits.NBitsProp.add_nocarry_mod_lt_pow2	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_add_cancel_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_sub_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_mult_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_add_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_sub_diag_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.Bezout_wd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.bezout_1_gcd	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout_pos	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_bezout	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gcd_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.gauss	40
Coq.Numbers.Natural.Abstract.NGcd.NGcdProp.divide_mul_split	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_wd	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_0	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.natural_isomorphism_succ	40
Coq.Numbers.Natural.Abstract.NIso.Homomorphism.hom_nat_iso	40	0.0.1.0.0.0.0.0.0.15	search with cache (only 1: firstorder; only 1: unfold natural_isomorphism; only 1: now rewrite N1.recursion_0; only 1: unfold natural_isomorphism; only 1: rewrite N1.recursion_succ; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: now f_equiv).	0.244876146317	529
Coq.Numbers.Natural.Abstract.NIso.Inverse.inverse_nat_iso	40
Coq.Numbers.Natural.Abstract.NIso.Isomorphism.iso_nat_iso	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_spec'	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_square	40	2.1.9	search with cache (only 1: intros EQ; only 1: apply sqrt_square; only 1: apply le_0_l).	0.112991809845	109
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_square	40	0.3.1.5.1.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: rewrite <- (Private_NZSqrt.sqrt_square b); only 1: now apply Private_NZSqrt.sqrt_le_mono; only 1: rewrite <- (Private_NZSqrt.sqrt_square b); only 1: apply sqrt_le_square; only 1: apply le_0_l; only 1: apply sqrt_nonneg).	5.75395917892	5026
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_lt_square	40	2.3.8.6	search with cache (only 1: intros a Ha; only 1: apply sqrt_lt_square; only 1: apply le_0_l; only 1: apply le_0_l).	11.4221489429	14233
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_le_lin	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_mul_above	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_le	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.sqrt_succ_or	40
Coq.Numbers.Natural.Abstract.NSqrt.NSqrtProp.add_sqrt_le	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_0	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_succ	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.eq_add_1	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.succ_add_discr	40
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_l	40	10.7.0.0.0.1.2	search with cache (only 1: cases ltac:(n); only 1: intros; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: nzsimpl; only 1: now f_equiv).	37.4328768253	25512
Coq.Numbers.Natural.Abstract.NAdd.NAddProp.add_pred_r	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_pred	40	0.0.0.0.2.1.1	search with cache (only 1: cases ltac:(n); only 1: intro H; only 1: exfalso; only 1: now apply H; only 1: intros; only 1: rewrite pred_succ; only 1: now rewrite <- negb_odd, odd_succ, negb_even).	0.767346858978	408
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_pred	40	2.0.3.1.0.0	search with cache (only 1: intros; only 1: rewrite <- (succ_pred n)  at 2 by trivial; only 1: symmetry; only 1: apply eq_iff_eq_true; only 1: rewrite even_spec, odd_spec; only 1: apply Odd_succ).	0.83717083931	457
Coq.Numbers.Natural.Abstract.NParity.NParityProp.even_sub	40
Coq.Numbers.Natural.Abstract.NParity.NParityProp.odd_sub	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.le_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_r	40
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.lt_lt_add_l	40	0.0.0.0.2.0	search with cache (only 1: intros n m p H; only 1: rewrite add_comm; only 1: rewrite <- (add_0_r n); only 1: apply add_lt_le_mono; only 1: assumption; only 1: apply le_0_l).	0.169408082962	82
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_l	40	2.1.1.2	search with cache (only 1: intros n m; only 1: rewrite add_comm; only 1: rewrite add_comm; only 1: apply lt_lt_add_r).	0.356009960175	82
Coq.Numbers.Natural.Abstract.NAddOrder.NAddOrderProp.add_pos_r	40	1.1.0.2.0	search with cache (only 1: intros; only 1: rewrite add_comm; only 1: apply add_pos_nonneg; only 1: assumption; only 1: apply le_0_l).	0.0748109817505	29
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_succ_r'	40	1.7.2.0	search with cache (only 1: intros n m; only 1: nzsimpl; only 1: solve_proper; only 1: apply le_0_l).	1.0670311451	293
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_0_l	40	0.0.1.0.0	search with cache (only 1: intros a Ha; only 1: destruct (lt_trichotomy a 0) as [LT| [EQ| GT]]; only 1: now rewrite pow_neg_r; only 1: order; only 1: now apply pow_0_l).	0.0312359333038	6
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_1_l	40	0.0.12.1	search with cache (only 1: intros; only 1: nzsimpl; only 1: now nzsimpl; only 1: apply le_0_l).	0.723379135132	246
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_l	40	0.0.0.1.1.0.0.0.0.0.0.0.0.2.0	search with cache (only 1: intros a b c; only 1: destruct (lt_ge_cases c 0) as [Hc| Hc]; only 1: rewrite !(pow_neg_r _ _ Hc); only 1: now nzsimpl; only 1: apply le_ind with (4 := Hc); only 1: solve_proper; only 1: now nzsimpl; only 1: clear c Hc; only 1: intros c Hc IH; only 1: nzsimpl; only 1: rewrite IH; only 1: apply mul_shuffle1; only 1: trivial; only 1: trivial; only 1: trivial).	3.26965093613	1143
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_mul_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_nonzero	40	0.5.10.4.9.1.0.5	search with cache (only 1: intros a b Ha; only 1: contradict Ha; only 1: apply Private_NZPow.pow_eq_0 with b; only 1: contradict Ha; only 1: rewrite Ha; only 1: rewrite pow_0_r; only 1: order'; only 1: order).	39.388666153	60876
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_eq_0_iff	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l	40	4.5.1.16.0.2	search with cache (only 1: intros; only 1: apply pow_lt_mono_l; only 1: auto'; only 1: split; only 1: auto'; only 1: trivial).	33.7728071213	25530
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l	40	0.9.0.7.5	search with cache (only 1: intros; only 1: apply pow_le_mono_l; only 1: split; only 1: apply le_0_l; only 1: trivial).	21.3735470772	12725
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_1	40	3.1.0.0.0.0	search with cache (only 1: intros a b Ha; only 1: intros Hb; only 1: rewrite <- (Private_NZPow.pow_1_l b) by order; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: order; only 1: trivial).	0.0478229522705	18
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono	40	1.0.0.1.0.0.1	search with cache (only 1: intros; only 1: transitivity (a ^ d); only 1: apply Private_NZPow.pow_le_mono_r; only 1: order; only 1: intuition order; only 1: apply Private_NZPow.pow_le_mono_l; only 1: intuition order).	0.0359721183777	10
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_l	40	0.3.0.0.2.3.4	search with cache (only 1: intros; only 1: destruct (lt_trichotomy a b) as [LT| [EQ'| GT]]; only 1: assert (a ^ c < b ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order; only 1: trivial; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	0.981821060181	1185
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_inj_r	40	0.2.0.0.3.0.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy b c) as [LT| [EQ'| GT]]; only 1: assert (a ^ b < a ^ c) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; try split; trivial); only 1: order).	0.54681801796	285
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_l_iff	40	2.0.5.5.0.1.1.1.0.0.4	search with cache (only 1: intros; only 1: split; only 1: intro LT; only 1: apply Private_NZPow.pow_lt_mono_l; only 1: auto'; only 1: auto'; only 1: intro LT; only 1: destruct (le_gt_cases b a) as [LE| GT]; only 1: assert (b ^ c <= a ^ c) by (apply Private_NZPow.pow_le_mono_l; try split; order); only 1: order; only 1: trivial).	10.3753399849	11959
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_l_iff	40	0.4.1.5.0.0.8.0.0.6	search with cache (only 1: intros; only 1: split; only 1: intro LE; only 1: apply Private_NZPow.pow_le_mono_l; only 1: auto'; only 1: intro LE; only 1: destruct (le_gt_cases a b) as [LE'| GT]; only 1: auto'; only 1: assert (b ^ c < a ^ c) by (apply Private_NZPow.pow_lt_mono_l; try split; trivial); only 1: order).	15.7463510036	13281
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_lt_mono_r_iff	40	0.0.2.0.0.0.0.0.5	search with cache (only 1: intros a b c Hc; only 1: split; only 1: intro LT; only 1: now apply Private_NZPow.pow_lt_mono_r; only 1: intro LT; only 1: destruct (le_gt_cases c b) as [LE| GT]; only 1: assert (a ^ c <= a ^ b) by (apply Private_NZPow.pow_le_mono_r; order'); only 1: order; only 1: trivial).	0.933308124542	509
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_le_mono_r_iff	40	0.2.1.0.0.6.2.4.0.6	search with cache (only 1: intros; only 1: split; only 1: apply Private_NZPow.pow_le_mono_r; only 1: generalize (le_0_l b); only 1: order'; only 1: intro LE; only 1: destruct (le_gt_cases b c) as [LE'| GT]; only 1: trivial; only 1: assert (a ^ c < a ^ b) by (apply Private_NZPow.pow_lt_mono_r; order'); only 1: order).	28.1769697666	14304
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_gt_lin_r	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_lower	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.pow_add_upper	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.even_pow	40
Coq.Numbers.Natural.Abstract.NPow.NPowProp.odd_pow	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.max_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.min_0_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_max_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.succ_min_distr	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_l	40	2.0.0.0.2.0.1.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l; only 1: rewrite 2!max_l; only 1: now apply add_cancel_l; only 1: assumption; only 1: now apply add_le_mono_l).	9.90635991096	3164
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_max_distr_r	40	0.1.0.0.0.0.1.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite <- add_le_mono_r; only 1: now rewrite <- ?add_le_mono_l).	8.43341183662	2750
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_l	40	0.0.0.4.0.0.0.3.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l).	12.3769500256	4160
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.add_min_distr_r	40	1.0.0.1.1.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r; only 1: rewrite 2!min_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_r).	6.05355000496	1947
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_l	40	0.0.1.0.2.0.0.0.1.0.2.1.1.0	search with cache (only 1: intros n m p; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: now rewrite <- ?add_le_mono_l; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_l; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	23.7328779697	14872
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_max_distr_r	40	0.0.0.0.0.0.0.0.0.0.0.1.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!max_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l; only 1: rewrite 2!max_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: apply mul_le_mono_nonneg_r; only 1: apply le_0_l; only 1: now rewrite <- ?add_le_mono_l).	3.9434709549	2330
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_l	40	2.0.0.3.2.0.0.2.1.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_l).	8.87248301506	5118
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.mul_min_distr_r	40	0.0.0.1.0.0.0.0.2.0	search with cache (only 1: intros; only 1: destruct (le_ge_cases n m); only 1: rewrite 2!min_l; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r; only 1: rewrite 2!min_r; only 1: order; only 1: now rewrite <- ?add_le_mono_l; only 1: now apply mul_le_mono_r).	0.870131015778	599
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_max_distr_r	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_l	40
Coq.Numbers.Natural.Abstract.NMaxMin.NMaxMinProp.sub_min_distr_r	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_alt	40	4.0.1	search with cache (only 1: intros n IH; only 1: intros; only 1: auto).	0.0100030899048	8
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_wd	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_0	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_succ	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0	40	0.0.0.0.0.0.0.0.6.0	search with cache (only 1: intros; only 1: rewrite !strong_rec_alt; only 1: unfold strong_rec0; only 1: f_equiv; only 1: rewrite recursion_succ; only 1: f_equiv'; only 1: rewrite recursion_0; only 1: f_equiv'; only 1: f_equiv'; only 1: f_equiv').	25.5834658146	332
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_more_steps	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec0_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_fixpoint	40
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_0_any	40	1.1.1.1.0	search with cache (only 1: intros; only 1: rewrite strong_rec_alt, strong_rec0_succ; only 1: apply step_good; only 1: intros m Hm; only 1: destruct (nlt_0_r _ Hm)).	2.05023097992	29
Coq.Numbers.Natural.Abstract.NStrongRec.NStrongRecProp.strong_rec_any_fst_arg	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.mod_divide	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div_mul_exact	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_factor	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_gcd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_mod	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_wd	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv1	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_equiv2	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_div_swap	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_l	40	5.0	search with cache (only 1: intros; only 1: apply divide_mul_l, divide_refl).	0.0160670280457	11
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_div	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_least	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_comm	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_divide_iff	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_unique_alt	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_assoc	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_l	40	0.0.1.0.1.3.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists 0; only 1: now nzsimpl; only 1: exists 0; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1).	0.222219944	209
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_0_r	40	0.1.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: apply divide_refl; only 1: trivial).	0.0187330245972	10
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_l	40	0.1.0.0.3.1.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: auto'; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_refl; only 1: trivial).	0.090870141983	99
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_1_r	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_l, divide_refl).	0.0197768211365	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_diag	40	0.1.1.1.0.0	search with cache (only 1: intros; only 1: apply lcm_unique; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_1_l, le_0_l, divide_refl; only 1: trivial using divide_refl).	0.0106151103973	9
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_eq_0	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_eq_r	40	0.0.7.2	search with cache (only 1: intros; only 1: apply divide_antisym; only 1: now apply lcm_least; only 1: trivial using divide_lcm_r).	0.421095132828	297
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.divide_lcm_iff	40	1.2.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros EQ; only 1: apply lcm_unique_alt; only 1: trivial using le_0_l; only 1: intros q; only 1: split; only 1: split; only 1: now transitivity m; only 1: trivial; only 1: now destruct 1; only 1: intros EQ; only 1: rewrite <- EQ; only 1: trivial using divide_lcm_l).	2.71532702446	2109
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_l	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.lcm_mul_mono_r	40
Coq.Numbers.Natural.Abstract.NLcm.NLcmProp.gcd_1_lcm_mul	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_diag	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_gt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_assoc	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_succ_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub	40	0.8.2.0.0.3.1.3	search with cache (only 1: intro n; only 1: induct ltac:(m); only 1: rewrite sub_0_r; only 1: nzsimpl; only 1: order; only 1: intros m IH; only 1: rewrite add_succ_r; only 1: now rewrite sub_succ).	3.5972340107	5022
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_eq_nz	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_distr	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_sub_swap	40	0.6.1.6.1.1	search with cache (only 1: intros n m H; only 1: intro; only 1: rewrite add_comm; only 1: symmetry; only 1: rewrite add_comm; only 1: now apply add_sub_assoc).	14.585670948	12115
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_0_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_add_le	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_sub_le_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_sub_lt_add_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_r	40	0.13.3.0.0	search with cache (only 1: intros n m p; only 1: intros LE; only 1: rewrite (add_le_mono_r _ _ p); only 1: rewrite LE; only 1: auto using sub_add_le).	25.5344078541	13555
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_add_le_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_add_lt_sub_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_lt	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_r	40	0.4.10.0	search with cache (only 1: intros n m p LE; only 1: apply le_sub_le_add_r; only 1: rewrite LE; only 1: auto using sub_add_le).	1.69743919373	1491
Coq.Numbers.Natural.Abstract.NSub.NSubProp.sub_le_mono_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_pred_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_r	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.mul_sub_distr_l	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_equiv	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.lt_alt_wd	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.le_alt_dichotomy	40
Coq.Numbers.Natural.Abstract.NSub.NSubProp.add_dichotomy	40
Coq.Numbers.DecimalZ.of_to	40
Coq.Numbers.DecimalZ.to_of	40
Coq.Numbers.DecimalZ.to_int_inj	40
Coq.Numbers.DecimalZ.to_int_surj	40
Coq.Numbers.DecimalZ.of_int_norm	40
Coq.Numbers.DecimalZ.of_inj	40
Coq.Numbers.DecimalZ.of_iff	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_nonneg	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_spec_alt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_unique'	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pred_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_0	40	1.0.0.0.0.0.11	search with cache (only 1: apply sqrt_unique' with 0; only 1: split; only 1: order; only 1: apply mul_nonneg_nonneg; only 1: apply lt_le_incl, lt_0_2; only 1: order; only 1: now nzsimpl).	0.33456492424	282
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_1	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.sqrt_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtProp.add_sqrt_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn0	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eqn	40	0.3.1.0.0.2.0	search with cache (only 1: intros a Ha; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros EQ; only 1: f_equiv; only 1: order).	0.170634031296	196
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_nonneg	40	0.3.3.0.0.0.0	search with cache (only 1: intros; only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: intros Ha; only 1: apply le_le_succ_r, sqrt_nonneg; only 1: order).	0.186049938202	209
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_wd	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_unique	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_0	40	0.0.0.0.0	search with cache (only 1: unfold sqrt_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0101790428162	5
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_1	40	0.0.0.1.0.15.2	search with cache (only 1: rewrite sqrt_up_eqn; only 1: rewrite <- (mul_1_l 1)  at 1; only 1: rewrite sqrt_pred_square; only 1: apply (lt_succ_pred 0); only 1: order'; only 1: order'; only 1: order').	1.65104198456	2634
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_2	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_sqrt_up	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.le_sqrt_up_succ_sqrt	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_spec	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_sqrt_up_exact	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_mono	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_cancel	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_pos	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_lt_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_le_lin	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_above	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_mul_below	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_succ_or	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_eq_succ_iff_square	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.sqrt_up_add_le	40
Coq.Numbers.NatInt.NZSqrt.NZSqrtUpProp.add_sqrt_up_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mod_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_unique	40	0.0.0.1.0.0.1.0.2.0	search with cache (only 1: intros a b q r Ha (Hb, Hr) EQ; only 1: destruct (div_mod_unique b q (a / b) r (a mod b)); only 1: auto; only 1: apply mod_bound_pos; only 1: order; only 1: order; only 1: rewrite <- div_mod; only 1: order; only 1: order; only 1: auto).	0.579800844193	351
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_unique_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_same	40	0.0.0.0.0.10.10	search with cache (only 1: intros n m; only 1: symmetry; only 1: apply div_unique with 0; only 1: order; only 1: now try split; only 1: nzsimpl; only 1: order).	0.311756134033	489
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_same	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_0_l	40	0.0.0.0.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: intuition; only 1: order; only 1: nzsimpl; only 1: order).	0.121718168259	43
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_0_l	40	1.0.0.2.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply mod_unique with 0; only 1: order; only 1: intuition; only 1: now nzsimpl).	0.333827018738	96
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_r	40	0.0.0.8.0.0.1.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply div_unique_exact; only 1: order; only 1: rewrite one_succ; only 1: apply lt_succ_diag_r; only 1: nzsimpl; only 1: order).	2.12203598022	1968
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_1_l	40	4.0.1.0	search with cache (only 1: intros; only 1: apply div_small; only 1: intuition; only 1: order').	0.151506900787	63
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_1_l	40	0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: symmetry; only 1: apply mod_small; only 1: split; only 1: apply le_0_1; only 1: auto).	0.150755882263	64
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_small_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_small_iff	40	0.0.0.0.3.5.1.0.1.0.0.0	search with cache (only 1: intros a b Ha Hb; only 1: split; only 1: intros Hab; only 1: destruct (lt_ge_cases a b); only 1: auto; only 1: symmetry in Hab; only 1: assert (MOD : a mod b < b) by (destruct (mod_bound_pos a b); order); only 1: revert Hab; only 1: order; only 1: intros Hab; only 1: apply mod_small; only 1: auto).	22.9335401058	22164
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_str_pos_iff	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_mono	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_div_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_succ_div_gt	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_exact	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_lt_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_upper_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_lower_bound	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_le_compat_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_add_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_cancel_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_distr_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mod	40	0.0.1.16.0	search with cache (only 1: intros; only 1: apply mod_small; only 1: apply mod_bound_pos; only 1: order; only 1: trivial).	3.91258406639	3531
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mul_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_l	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod_idemp_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.add_mod	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_div	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_mul_r	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.div_mul_le	40
Coq.Numbers.NatInt.NZDiv.NZDivProp.mod_divides	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_0_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_r	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_succ_comm	40	0.1.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.061509847641	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_comm	40	2.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: nzsimpl; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0620329380035	9
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0177021026611	2
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_assoc	40	0.0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: intro; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.050745010376	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_l	40
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_cancel_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.054300069809	6
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle0	40	0.0.0.0.3.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.145118951797	23
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle1	40	0.0.0.0.5.1.2.0	search with cache (only 1: intros n m p; only 1: intro; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	4.68884301186	1379
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle2	40	0.0.0.0.0.3.10.0	search with cache (only 1: intros n m p q; only 1: nzinduct p; only 1: nzsimpl; only 1: rewrite <- 2!add_assoc, add_cancel_l; only 1: apply add_comm; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	5.42568302155	2302
Coq.Numbers.NatInt.NZAdd.NZAddProp.add_shuffle3	40	0.0.0.0.1.0	search with cache (only 1: intros n m p; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0601348876953	7
Coq.Numbers.NatInt.NZAdd.NZAddProp.sub_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0178310871124	2
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_incl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_refl	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.neq_succ_diag_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_diag_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_succ_diag_l	40	7.0.0.2	search with cache (only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: tauto).	0.866745948792	279
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_gt_cases	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trichotomy	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_asymm	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_trans	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_strorder	40	0.1.7.0.1.0.0.0.3.1.1	search with cache (only 1: split; only 1: compute; only 1: intros n H; only 1: apply (lt_irrefl (S n)); only 1: rewrite lt_succ_r; only 1: false_hyp H lt_irrefl; only 1: compute; only 1: intros n m p; only 1: generalize (lt_trans n m p); only 1: intros H H1 H2; only 1: now apply H).	7.44520401955	7518
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_preorder	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.5.0.0.5.2	search with cache (only 1: split; only 1: simpl_relation; only 1: apply lt_eq_cases; only 1: now right; only 1: compute; only 1: intros n m p; only 1: rewrite 3!lt_eq_cases; only 1: intros [LT| EQ] [LT'| EQ']; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: generalize (lt_trans n m p); only 1: auto with relations; only 1: rewrite EQ; only 1: rewrite <- EQ'; only 1: generalize (lt_trans n m p); only 1: auto with relations).	14.0325081348	9605
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_partialorder	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_neq	40	0.0.0.5	search with cache (only 1: intros n m; only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: false_hyp LT lt_irrefl).	0.043231010437	48
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_neq	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_le_incl	40	4.0.2	search with cache (only 1: intros; only 1: apply lt_eq_cases; only 1: auto with relations).	0.0138418674469	17
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.011381149292	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0123291015625	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepl	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0113739967346	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_stepr	40	1.0	search with cache (only 1: intros x y z; only 1: intuition auto; Private_OrderTac.Tac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0126390457153	3
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_lt_trans	40	1	search with cache (only 1: order).	0.0167169570923	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_le_trans	40	1	search with cache (only 1: order).	0.0186700820923	22
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_antisymm	40	0.0.0.0.0.2.0	search with cache (only 1: intros x y; only 1: rewrite 2!lt_eq_cases; only 1: intuition; only 1: elim (StrictOrder_Irreflexive x); only 1: transitivity y; only 1: auto; only 1: auto).	0.0282168388367	17
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_succ_r	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_l	40	0.1.2.0.2	search with cache (only 1: intro m; only 1: intro n; only 1: intro H; only 1: apply le_succ_l; only 1: now apply lt_le_incl).	0.0441708564758	54
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_le_succ_r	40	2.1.5.2	search with cache (only 1: intros n m H; only 1: apply lt_le_incl; only 1: rewrite lt_succ_r; only 1: order).	1.73810005188	1453
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_lt_succ_r	40	0.0.3.0	search with cache (only 1: intros n m H; only 1: rewrite lt_succ_r; only 1: apply lt_eq_cases; only 1: now left).	0.0104238986969	7
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_lt_mono	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.succ_le_mono	40	0.0.4.7.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: generalize (le_gt_cases n m); only 1: rewrite lt_succ_r, le_succ_l, !lt_eq_cases; only 1: now rewrite succ_inj_wd).	29.3871519566	14914
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_1	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_1	40	0.3.0	search with cache (only 1: rewrite one_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0114758014679	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_2	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_0_2	40	0.3.0	search with cache (only 1: rewrite two_succ; only 1: rewrite lt_succ_r; only 1: apply lt_le_incl, lt_0_1).	0.0208261013031	13
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_0_2	40	0.3.1.0.1	search with cache (only 1: transitivity 1; only 1: apply lt_le_incl, lt_0_1; only 1: rewrite two_succ; only 1: apply lt_le_incl; only 1: apply lt_succ_diag_r).	0.0141961574554	10
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_1_l	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ge_cases	40	1.0.0.4.0	search with cache (only 1: intros n m; only 1: rewrite lt_eq_cases; only 1: generalize (le_gt_cases n m); only 1: rewrite lt_eq_cases; only 1: intuition).	0.0489358901978	39
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ge_cases	40	0.0.3.0	search with cache (only 1: intros n m; only 1: destruct (le_gt_cases m n); only 1: intuition order; only 1: intuition order).	0.0354199409485	35
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_gt_cases	40	4.0.0	search with cache (only 1: intros n m; only 1: generalize (le_gt_cases n m); only 1: intuition order).	0.253777980804	26
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_decidable	40	0.1.4.0.9	search with cache (only 1: unfold decidable; only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	19.6584031582	1658
Coq.Numbers.NatInt.NZOrder.NZOrderProp.eq_dne	40	0.0.1.1	search with cache (only 1: intros; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.0716140270233	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ngt	40	0.1.1.1.1	search with cache (only 1: intro n; only 1: split; only 1: intros LT EQ; only 1: order; only 1: intuition order).	0.187825918198	48
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_ge	40	0	search with cache (only 1: intuition order).	0.00697207450867	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_decidable	40	0.0.0.1.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.0144181251526	6
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_dne	40	0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m); only 1: intuition order; only 1: intuition order).	0.090646982193	99
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nle_gt	40	0	search with cache (only 1: intuition order).	0.00782513618469	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_nge	40	0	search with cache (only 1: intuition order).	0.0077850818634	1
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_decidable	40	1.0.1.4.0	search with cache (only 1: intros n m; only 1: destruct (lt_trichotomy n m) as [| [| ]]; only 1: (right; order) || (left; order); only 1: (right; order) || (left; order); only 1: (right; order) || (left; order)).	0.405872821808	175
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_dne	40	0.0.0.0.2.0.0	search with cache (only 1: intros n m; only 1: split; only 1: destruct (le_gt_cases n m); only 1: intuition order; only 1: intuition order; only 1: intro H; only 1: order).	0.0350050926208	24
Coq.Numbers.NatInt.NZOrder.NZOrderProp.nlt_succ_r	40	0.4.1	search with cache (only 1: intros n H; only 1: rewrite lt_succ_r; only 1: intuition order).	0.317555904388	201
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred_strong	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_exists_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_succ_pred	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs_rs'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rs'_rs''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.rbase	40	49.1	search with cache (only 1: intros RS' n; only 1: order).	22.9980301857	8273
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_right	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_right_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls_ls'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.ls'_ls''	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lbase	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.A'A_left	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.strong_left_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.order_induction'	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.le_ind	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rlt_wd	40	0.11.0.9.25	search with cache (only 1: intro; only 1: compute; only 1: intros m H1 H2; only 1: intro n; only 1: intuition order).	32.2830460072	34761
Coq.Numbers.NatInt.NZOrder.NZOrderProp.Rgt_wd	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.lt_wf	40
Coq.Numbers.NatInt.NZOrder.NZOrderProp.gt_wf	40
Coq.Numbers.NatInt.NZDomain.nat_rect_wd	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_itersucc	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_swap_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc_or_iterpred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.itersucc0_or_iterpred0	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_alt2	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_unique	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.initial_ancestor	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_pred_approx	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_gives_succ_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.succ_onto_pred_injective	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.bi_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZDomainProp.central_induction_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_zero	40	13	search with cache (only 1: solve_proper).	0.015095949173	60
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_succ	40	1	search with cache (only 1: reflexivity).	0.00564908981323	2
Coq.Numbers.NatInt.NZDomain.NZOfNat.ofnat_pred	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_gt_0	40	0.0.1.12.8.14	search with cache (only 1: PeanoNat.Nat.induct ltac:(n); only 1: apply lt_succ_diag_r; only 1: simpl; only 1: intros m Le; only 1: rewrite lt_succ_r; only 1: order).	33.1484808922	68781
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_S_neq_0	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_injective	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_eq	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_lt	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOrd.ofnat_le	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add_l	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_add	40	0.0.0.0.0.12.0.0	search with cache (only 1: induction n; only 1: intros; only 1: symmetry; only 1: apply add_0_l; only 1: intros; only 1: rewrite ofnat_succ, add_succ_l; only 1: simpl; only 1: now f_equiv).	1.1580851078	1593
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_mul	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub_r	40
Coq.Numbers.NatInt.NZDomain.NZOfNatOps.ofnat_sub	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_0_l'	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_r	40	0.66.17	search with cache (only 1: intro LS'; only 1: rewrite one_succ; only 1: now nzsimpl).	20.4575250149	24784
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_1_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_2_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonzero	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_eq_0_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_mul_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_nonneg	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_pos_nonneg	40	0.3.0.2.0.0.0.1.1	search with cache (only 1: intros a b Ha Hb; only 1: apply le_ind with (4 := Hb); only 1: solve_proper; only 1: nzsimpl; only 1: order'; only 1: intros; only 1: nzsimpl; only 1: now apply mul_pos_pos; only 1: trivial).	11.7921979427	1876
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_1	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_l	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_inj_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_l_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_lt_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_le_mono_r_iff	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_gt_lin_r	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_lower	40
Coq.Numbers.NatInt.NZPow.NZPowProp.pow_add_upper	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_r	40	0.84	search with cache (only 1: exists 0; only 1: now nzsimpl).	11.3264541626	42362
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.eq_mul_1_nonneg'	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_1_r_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_refl	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_trans	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_antisym_nonneg	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_mono_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.mul_divide_cancel_r	40	0.0.0.0.0.2.1	search with cache (only 1: intros n m p; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: split; only 1: intros (q, Hq); only 1: exists q; only 1: now rewrite mul_shuffle3, mul_cancel_l in Hq; only 1: apply mul_divide_mono_l).	0.167151927948	78
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_add_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_mul_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_l	40	0.0.13.2	search with cache (only 1: intros n m; only 1: apply divide_mul_l; only 1: exists 1; only 1: now nzsimpl).	0.482199907303	531
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_factor_r	40	0.15.0	search with cache (only 1: intros; only 1: rewrite mul_comm; only 1: apply divide_mul_l, divide_refl).	0.304426193237	389
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_pos_le	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_wd	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_divide_iff	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_unique_alt	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_comm	40	0.3.4.4.0.0.2	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply gcd_nonneg; only 1: trivial using gcd_divide_r; only 1: trivial using gcd_divide_l; only 1: intros; only 1: now apply gcd_greatest).	1.21803998947	1470
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_assoc	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_l_nonneg	40	0.0.0.0.0.0.0.6	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: order; only 1: exists 0; only 1: now nzsimpl; only 1: exists 1; only 1: now nzsimpl; only 1: trivial).	0.22750377655	166
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_0_r_nonneg	40	0.1.1.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_0_r; only 1: trivial).	0.0133101940155	8
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_l	40	0.0.0.2.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: apply lt_le_incl, lt_0_1; only 1: apply divide_refl; only 1: exists n; only 1: now nzsimpl; only 1: trivial).	0.0424709320068	14
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_1_r	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial using divide_1_l, le_0_1; only 1: exists n; only 1: now nzsimpl; only 1: trivial using divide_1_l, le_0_1; only 1: trivial using divide_1_l, le_0_1).	0.0187261104584	7
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_diag_nonneg	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: apply divide_refl; only 1: apply divide_refl; only 1: trivial).	0.0136950016022	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_l	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0_r	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_eq_0	40
Coq.Numbers.NatInt.NZGcd.NZGcdProp.gcd_mul_diag_l	40	0.1.1.0.1.0	search with cache (only 1: intros; only 1: apply gcd_unique; only 1: trivial; only 1: trivial using divide_refl; only 1: apply divide_mul_l, divide_refl; only 1: trivial).	0.0178768634796	9
Coq.Numbers.NatInt.NZGcd.NZGcdProp.divide_gcd_iff	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_wd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_or_Odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.double_below	40	6.0.13.0.1.0	search with cache (only 1: intros n m; only 1: rewrite two_succ; only 1: nzsimpl; only 1: rewrite lt_succ_r; only 1: intro p; only 1: now apply add_le_mono).	17.3728251457	4139
Coq.Numbers.NatInt.NZParity.NZParityProp.double_above	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: rewrite <- le_succ_l, (mul_le_mono_pos_l (S n) m 2); only 1: rewrite two_succ; only 1: nzsimpl; only 1: now rewrite le_succ_l; only 1: order').	0.11487197876	6
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_Odd_False	40
Coq.Numbers.NatInt.NZParity.NZParityProp.orb_even_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_odd	40
Coq.Numbers.NatInt.NZParity.NZParityProp.negb_even	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite <- even_spec, <- odd_spec; only 1: destruct (odd n), (even n); only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	1.14101195335	387
Coq.Numbers.NatInt.NZParity.NZParityProp.even_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_0	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_1	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Even_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.Odd_succ_succ	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_succ_succ	40	0.6.2.0	search with cache (only 1: intros; only 1: generalize (Even_or_Odd n), (Even_Odd_False n); only 1: rewrite eq_iff_eq_true, 2!even_spec; only 1: now rewrite Even_succ, Odd_succ).	0.687944889069	246
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_succ_succ	40	0.15.0	search with cache (only 1: intros; only 1: rewrite eq_iff_eq_true, 2!odd_spec; only 1: now rewrite Odd_succ, Even_succ).	1.12289500237	872
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_mul	40
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_even	40	4.5.2.0	search with cache (only 1: intros; only 1: rewrite even_add; only 1: rewrite <- even_spec in H; only 1: now destruct (even n), (even m)).	27.6814551353	7154
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_even	40	0.0.4.0.1	search with cache (only 1: intros n m Hm; only 1: apply even_spec in Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add, Hm; only 1: now destruct (even n)).	0.14137005806	52
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_even	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_even	40	0.2.0.0.4.2.3.1	search with cache (only 1: intros n m p Hm; only 1: rewrite <- !negb_even; only 1: rewrite even_add; only 1: case_eq (even n); only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm; only 1: apply even_spec in Hm; only 1: now rewrite even_mul, Hm).	5.73980808258	3107
Coq.Numbers.NatInt.NZParity.NZParityProp.even_add_mul_2	40
Coq.Numbers.NatInt.NZParity.NZParityProp.odd_add_mul_2	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	0.110534906387	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_l	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono_r	40	0.0.0.0.0.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro p; only 1: nzsimpl; only 1: now rewrite <- succ_le_mono).	0.0632011890411	6
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_le_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_lt_mono	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_pos	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_nonneg	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_l	40	1.0.0.1.17.2.9	search with cache (only 1: intro p; only 1: intro n; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: now rewrite <- succ_lt_mono).	20.7539520264	12499
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_add_pos_r	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_lt_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.lt_le_add_lt	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_le_add_le	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_lt_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_le_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_neg_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_pos_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_lt_cases; only 1: now nzsimpl).	0.0177130699158	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonpos_cases	40
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.add_nonneg_cases	40	0.0.0	search with cache (only 1: intros n m H; only 1: apply add_le_cases; only 1: now nzsimpl).	0.0176470279694	3
Coq.Numbers.NatInt.NZAddOrder.NZAddOrderProp.le_exists_sub	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_0_r	40	1.0.0.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intro; only 1: now nzsimpl').	0.034206867218	5
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_succ_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_comm	40	1.0.0.0.0.0	search with cache (only 1: intros n m; only 1: nzinduct n; only 1: now nzsimpl; only 1: intro n; only 1: nzsimpl; only 1: now rewrite add_cancel_r).	0.0497989654541	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_r	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_add_distr_l	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_assoc	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_l	40	0.0.0.2.0	search with cache (only 1: nzinduct n; only 1: now nzsimpl; only 1: intros; only 1: nzsimpl; only 1: now rewrite succ_inj_wd).	0.0368769168854	7
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_1_r	40	0.0	search with cache (only 1: intro n; only 1: now nzsimpl').	0.0202629566193	2
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle0	40	0.0.0.2.0.9.0	search with cache (only 1: intros n m p; only 1: nzinduct p; only 1: now nzsimpl; only 1: intro; only 1: nzsimpl; only 1: rewrite mul_add_distr_r; only 1: now rewrite add_cancel_r).	13.8370649815	4474
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle1	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle2	40
Coq.Numbers.NatInt.NZMul.NZMulProp.mul_shuffle3	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_spec_alt	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_unique'	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pred_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_1	40	0.0.2.0.2.4.0.6	search with cache (only 1: apply log2_unique; only 1: order_pos; only 1: split; only 1: nzsimpl; only 1: order; only 1: nzsimpl; only 1: order'; only 1: order_pos).	1.33975505829	998
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_2	40	2.0.0.1.0.10	search with cache (only 1: apply log2_unique' with 0; only 1: order'; only 1: split; only 1: order_pos; only 1: order_pos; only 1: now nzsimpl).	0.900712013245	707
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_null	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_same	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.log2_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2Prop.add_log2_lt	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn0	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eqn	40	0.0.0.0.2.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order; only 1: order).	0.0202560424805	8
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonpos	40	0.12.0.0.0.0	search with cache (only 1: intros a Ha; only 1: unfold log2_up; only 1: case compare_spec; only 1: order; only 1: order'; only 1: order).	3.19700098038	3032
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_wd	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_nonneg	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_unique	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_1	40	0.0	search with cache (only 1: apply log2_up_eqn0; only 1: order).	0.00692987442017	2
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_2	40	1.0.0.10.2.0.0.0.1.0.0.1	search with cache (only 1: rewrite <- (pow_1_r 2); only 1: apply log2_up_unique; only 1: order'; only 1: split; only 1: apply pow_lt_mono_r_iff; only 1: order_pos; only 1: order'; only 1: apply succ_lt_mono; only 1: rewrite lt_succ_pred with 0; only 1: apply lt_succ_diag_r; only 1: order'; only 1: order).	8.43411803246	11742
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_log2_up	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.le_log2_up_succ_log2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_spec	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_log2_up_exact	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_pos	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_null	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_mono	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_cancel	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_lt_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_le_lin	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_above	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_below	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_mul_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_same	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_or	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_is_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_eq_succ_iff_pow2	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_succ_double	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.log2_up_add_le	40
Coq.Numbers.NatInt.NZLog.NZLog2UpProp.add_log2_up_lt	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_sym_iff	40	11	search with cache (only 1: now symmetry).	0.223151922226	362
Coq.Numbers.NatInt.NZBase.NZBaseProp.neq_sym	40	7.0	search with cache (only 1: intros; only 1: intuition).	0.00995492935181	9
Coq.Numbers.NatInt.NZBase.NZBaseProp.eq_stepl	40	0.1.12.0.0	search with cache (only 1: intros x y H; only 1: symmetry; only 1: transitivity x; only 1: intuition; only 1: auto).	0.571448087692	1195
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.succ_inj_wd_neg	40
Coq.Numbers.NatInt.NZBase.NZBaseProp.central_induction	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_pred	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_pos_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_neg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonpos_r	40	0.1.0.0.0.0.0.0.1.0.0	search with cache (only 1: intros n m p H1 H2; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: le_elim H1; only 1: le_elim H2; only 1: apply lt_le_incl; only 1: now apply mul_lt_mono_neg_l; only 1: apply eq_le_incl; only 1: now rewrite H2; only 1: apply eq_le_incl; only 1: rewrite H1; only 1: now do 2 rewrite mul_0_l).	2.92068314552	719
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_id_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_pos_r	40	0.0.0.9.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_pos_l p n m) by assumption; only 1: now rewrite (mul_cancel_l n m p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl)).	1.82595300674	799
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_neg_r	40	0.0.0.1.0.1.0	search with cache (only 1: intros n m p H; only 1: rewrite (mul_comm n p), (mul_comm m p); only 1: do 2 rewrite lt_eq_cases; only 1: rewrite (mul_lt_mono_neg_l p n m); only 1: rewrite (mul_cancel_l m n p) by (intro H1; rewrite H1 in H; false_hyp H lt_irrefl); only 1: now setoid_replace (n == m) with (m == n) by split; now intro; only 1: assumption).	0.128504037857	23
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_lt_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_le_mono_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_neg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_neg	40	1.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_neg_r).	0.0700619220734	4
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_neg_pos	40	0.0.0	search with cache (only 1: intros n m H1 H2; only 1: rewrite <- (mul_0_l m); only 1: now apply mul_lt_mono_pos_r).	0.0158500671387	3
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_pos_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_l	40	0.6.0.0.0	search with cache (only 1: intros; only 1: rewrite <- (mul_0_r n)  at 1; only 1: symmetry; only 1: apply mul_le_mono_pos_l; only 1: assumption).	0.32045507431	221
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_nonneg_cancel_r	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_1_mul_pos	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.neq_mul_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_square_0	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_l	40	0.6.7	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: tauto).	5.08221817017	3273
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.eq_mul_0_r	40	0.0.0.0.0	search with cache (only 1: intros n m H1 H2; only 1: apply eq_mul_0 in H1; only 1: destruct H1 as [H1| H1]; only 1: false_hyp H1 H2; only 1: assumption).	0.0140340328217	5
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.lt_0_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_mono_nonneg	40	13.6	search with cache (only 1: intros n m H1 H2; only 1: now apply mul_lt_mono_nonneg).	0.820728063583	1252
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_mono_nonneg	40	1.0.1.0.0.1	search with cache (only 1: intros n m p H; only 1: apply mul_le_mono_nonneg; only 1: order; only 1: assumption; only 1: order; only 1: assumption).	0.0155050754547	9
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_lt_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_le_simpl_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.mul_2_mono_l	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_le_mul	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_nonneg	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.crossmul_le_addsquare	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.add_square_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.square_add_le	40
Coq.Numbers.NatInt.NZMulOrder.NZMulOrderProp.quadmul_le_squareadd	40
Coq.Structures.OrdersTac.OrderFacts.eq_refl	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00619912147522	2
Coq.Structures.OrdersTac.OrderFacts.le_refl	40
Coq.Structures.OrdersTac.OrderFacts.lt_irrefl	40
Coq.Structures.OrdersTac.OrderFacts.eq_sym	40	3.0.0.0.0.0.0	search with cache (only 1: intros; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: auto).	0.0234389305115	16
Coq.Structures.OrdersTac.OrderFacts.le_antisym	40
Coq.Structures.OrdersTac.OrderFacts.neq_sym	40	0	search with cache (only 1: auto with *).	0.00658488273621	1
Coq.Structures.OrdersTac.OrderFacts.trans	40
Coq.Structures.OrdersTac.OrderFacts.eq_neq	40
Coq.Structures.OrdersTac.OrderFacts.neq_eq	40	0	search with cache (only 1: eauto using eq_trans, eq_sym).	0.00686597824097	1
Coq.Structures.OrdersTac.OrderFacts.not_neq_eq	40
Coq.Structures.OrdersTac.OrderFacts.not_ge_lt	40
Coq.Structures.OrdersTac.OrderFacts.not_gt_le	40	0.0.4.0.0	search with cache (only 1: intros x y H; only 1: rewrite P.le_lteq; only 1: destruct (P.lt_total x y); only 1: intuition; only 1: intuition).	0.0412340164185	30
Coq.Structures.OrdersTac.OrderFacts.le_neq_lt	40	0.4.1.1	search with cache (only 1: intros x y; only 1: generalize (P.lt_total x y); only 1: rewrite P.le_lteq; only 1: intuition).	0.183218955994	109
Coq.Structures.OrdersEx.PairOrderedType.lt_strorder	40
Coq.Structures.OrdersEx.PairOrderedType.lt_compat	40
Coq.Structures.OrdersEx.PairOrderedType.compare_spec	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_antirefl	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_compat	40	1	search with cache (only 1: solve_proper).	0.0866479873657	2
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.lt_strorder	40
Coq.Structures.OrdersEx.PositiveOrderedTypeBits.compare_spec	40
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_trans	40	0.6.4	search with cache (only 1: intros; only 1: rewrite H; only 1: trivial).	0.0630619525909	82
Coq.Structures.OrderedTypeEx.Nat_as_OT.lt_not_eq	40	10.10.3.0	search with cache (only 1: intros; only 1: contradict H; only 1: rewrite <- H; only 1: auto with arith).	12.895720005	6462
Coq.Structures.OrderedTypeEx.Nat_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_trans	40	4.7	search with cache (only 1: intros ? ? LT ->; only 1: now f_equal).	0.0501489639282	98
Coq.Structures.OrderedTypeEx.Z_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Z_as_OT.compare	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.Positive_as_OT.compare	40
Coq.Structures.OrderedTypeEx.N_as_OT.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_refl	40	15.5.3	search with cache (only 1: intro H; only 1: destruct H; only 1: now subst).	0.296730995178	1057
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_sym	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_trans	40
Coq.Structures.OrderedTypeEx.PairOrderedType.lt_not_eq	40	0.0.3.2.0	search with cache (only 1: intros (x1, x2) (y1, y2); only 1: unfold eq, lt; only 1: intuition; only 1: MO1.order; only 1: MO2.order).	0.297135829926	101
Coq.Structures.OrderedTypeEx.PairOrderedType.compare	40
Coq.Structures.OrderedTypeEx.PairOrderedType.eq_dec	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_trans	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.bits_lt_antirefl	40	0.1.1.1.63	search with cache (only 1: compute; only 1: induction x; only 1: eauto; only 1: eauto; only 1: eauto).	9.20401191711	43679
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.lt_not_eq	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.compare	40
Coq.Structures.OrderedTypeEx.PositiveOrderedTypeBits.eq_dec	40
Coq.Structures.OrderedTypeEx.String_as_OT.nat_of_ascii_inverse	40
Coq.Structures.OrderedTypeEx.String_as_OT.lts_tail_unique	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_trans	40
Coq.Structures.OrderedTypeEx.String_as_OT.lt_not_eq	40
Coq.Structures.OrderedTypeEx.String_as_OT.compare	40
Coq.Structures.Orders.Compare2EqBool.eqb_eq	40
Coq.Structures.Orders.OT_to_Full.le_lteq	40	0.4.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: intuition).	0.0193967819214	13
Coq.Structures.Orders.OTF_LtIsTotal.lt_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_le	40
Coq.Structures.Orders.OTF_to_TTLB.leb_total	40
Coq.Structures.Orders.OTF_to_TTLB.leb_trans	40
Coq.Structures.Orders.TTLB_to_OTF.compare_spec	40
Coq.Structures.Orders.TTLB_to_OTF.eqb_eq	40	0.0.1.5.0	search with cache (only 1: Bool.destr_bool; only 1: compute; only 1: case_eq (x <=? y); only 1: intuition; only 1: intuition).	0.340000152588	241
Coq.Structures.Orders.TTLB_to_OTF.eq_equiv	40
Coq.Structures.Orders.TTLB_to_OTF.lt_strorder	40
Coq.Structures.Orders.TTLB_to_OTF.lt_compat	40
Coq.Structures.Orders.TTLB_to_OTF.le_lteq	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_refl	40	2.2.0.6.3	search with cache (only 1: intros; only 1: red; only 1: split; only 1: auto; only 1: auto).	0.157113075256	487
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_sym	40	0.0.6.0.4	search with cache (only 1: induction y; only 1: red; only 1: intros (x1, x2); only 1: simpl; only 1: auto).	0.322134017944	365
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_trans	40
Coq.Structures.DecidableTypeEx.PairDecidableType.eq_dec	40
Coq.Structures.DecidableTypeEx.PairUsualDecidableType.eq_dec	40
Coq.Structures.Equalities.UpdateEq.eq_equiv	40	29.0.0.0.1.2	search with cache (only 1: split; only 1: simpl_relation; only 1: auto with *; only 1: compute; only 1: intros; only 1: eauto).	9.51622700691	28461
Coq.Structures.Equalities.HasEqDec2Bool.eqb_eq	40
Coq.Structures.Equalities.HasEqBool2Dec.eq_dec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_compat	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_spec	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_neq	40
Coq.Structures.Equalities.BoolEqualityFacts.eqb_refl	40	0.0	search with cache (only 1: apply eqb_eq; only 1: reflexivity).	0.00688195228577	2
Coq.Structures.Equalities.BoolEqualityFacts.eqb_sym	40
Coq.Structures.OrderedType.MOT_to_OT.eq_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_equiv	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_antirefl	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_strorder	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_lt	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_compat	40
Coq.Structures.OrderedType.OrderedTypeFacts.lt_total	40
Coq.Structures.OrderedType.OrderedTypeFacts.IsTO.le_lteq	40	0.0.20	search with cache (only 1: split; only 1: auto; only 1: auto).	1.69456982613	2161
Coq.Structures.OrderedType.OrderedTypeFacts.le_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.eq_le	40	0	search with cache (only 1: order).	0.00784301757812	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_eq	40	0	search with cache (only 1: order).	0.00796294212341	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_neq	40	0	search with cache (only 1: order).	0.00807118415833	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_lt_trans	40	0	search with cache (only 1: order).	0.00816416740417	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le_trans	40	0	search with cache (only 1: order).	0.00650000572205	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_neq	40	0.2.2.1	search with cache (only 1: destruct (compare x y); only 1: order; only 1: order; only 1: auto).	0.173216104507	30
Coq.Structures.OrderedType.OrderedTypeFacts.le_trans	40	0	search with cache (only 1: order).	0.00731492042542	1
Coq.Structures.OrderedType.OrderedTypeFacts.le_antisym	40	0	search with cache (only 1: order).	0.00663995742798	1
Coq.Structures.OrderedType.OrderedTypeFacts.neq_sym	40	0	search with cache (only 1: order).	0.122029066086	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_le	40	0	search with cache (only 1: order).	0.00683522224426	1
Coq.Structures.OrderedType.OrderedTypeFacts.gt_not_eq	40	0	search with cache (only 1: order).	0.00686883926392	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_lt	40	0	search with cache (only 1: order).	0.00649213790894	1
Coq.Structures.OrderedType.OrderedTypeFacts.eq_not_gt	40	0	search with cache (only 1: order).	0.0071759223938	1
Coq.Structures.OrderedType.OrderedTypeFacts.lt_not_gt	40	0	search with cache (only 1: order).	0.00688004493713	1
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_lt	40	0.0.0.0.0.0.0.1.0.2.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exists H'; only 1: auto; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order).	0.814638137817	639
Coq.Structures.OrderedType.OrderedTypeFacts.elim_compare_gt	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: case (compare x y); only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exfalso; only 1: order; only 1: intros H'; only 1: exists H'; only 1: auto).	0.667692899704	438
Coq.Structures.OrderedType.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrderedType.OrderedTypeFacts.eqb_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.In_eq	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_In	40	0.5.0.6.0.15.0.0.1	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: intuition; only 1: simpl; only 1: intuition; only 1: constructor; only 1: subst; only 1: auto with ordered_type).	7.28863096237	17350
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_lt	40	14.0.0.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	37.8462371826	22673
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_eq	40	10.0.0.0.2	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: order).	2.4769320488	1684
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_Inf_In	40
Coq.Structures.OrderedType.OrderedTypeFacts.ListIn_Inf	40	0.0.0.0.0.0.0.3	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.106587171555	58
Coq.Structures.OrderedType.OrderedTypeFacts.In_Inf	40	4.0.0.0.1.4	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intros; only 1: constructor; only 1: auto with ordered_type).	0.289733886719	244
Coq.Structures.OrderedType.OrderedTypeFacts.Inf_alt	40
Coq.Structures.OrderedType.OrderedTypeFacts.Sort_NoDup	40
Coq.Structures.OrderedType.KeyOrderedType.eqke_eqk	40	0.0	search with cache (only 1: induction 1; only 1: assumption).	0.00939202308655	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_r	40	1.6	search with cache (only 1: intros; only 1: auto).	0.00904107093811	9
Coq.Structures.OrderedType.KeyOrderedType.ltk_right_l	40	0	search with cache (only 1: auto).	0.0056779384613	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_refl	40	3.2.1	search with cache (only 1: unfold eqk, eqke; only 1: intros H'; only 1: reflexivity).	0.0110020637512	9
Coq.Structures.OrderedType.KeyOrderedType.eqke_refl	40	0	search with cache (only 1: auto with ordered_type).	0.00570201873779	1
Coq.Structures.OrderedType.KeyOrderedType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0113139152527	2
Coq.Structures.OrderedType.KeyOrderedType.eqke_sym	40	0.1	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0170459747314	3
Coq.Structures.OrderedType.KeyOrderedType.eqk_trans	40	7.4	search with cache (only 1: unfold eqk, eqke; only 1: order).	0.121513128281	153
Coq.Structures.OrderedType.KeyOrderedType.eqke_trans	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_trans	40	1	search with cache (only 1: eauto with ordered_type).	0.0093400478363	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqk	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: eauto with ordered_type).	0.0126700401306	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_not_eqke	40	3.0.1.0	search with cache (only 1: unfold eqk, ltk; only 1: unfold eqk, eqke; only 1: intuition; only 1: order).	0.0253388881683	8
Coq.Structures.OrderedType.KeyOrderedType.eqk_equiv	40	0.46.0.0.2	search with cache (only 1: split; only 1: auto with ordered_type; only 1: auto with ordered_type; only 1: repeat red; only 1: eauto with ordered_type).	13.7105588913	34152
Coq.Structures.OrderedType.KeyOrderedType.eqke_equiv	40	0.0.0.0	search with cache (only 1: constructor; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	0.0229251384735	4
Coq.Structures.OrderedType.KeyOrderedType.ltk_strorder	40	0.7.0.5.48.0	search with cache (only 1: constructor; only 1: repeat red; only 1: unfold eqk, ltk; only 1: intuition; only 1: order; only 1: eauto with ordered_type).	1.22230100632	6872
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat	40
Coq.Structures.OrderedType.KeyOrderedType.ltk_compat'	40
Coq.Structures.OrderedType.KeyOrderedType.eqk_not_ltk	40	0.0	search with cache (only 1: unfold eqk, ltk; only 1: auto with ordered_type).	0.00872588157654	2
Coq.Structures.OrderedType.KeyOrderedType.ltk_eqk	40	1	search with cache (only 1: eauto with ordered_type).	0.0076310634613	2
Coq.Structures.OrderedType.KeyOrderedType.eqk_ltk	40	0	search with cache (only 1: eauto with ordered_type).	0.00708293914795	1
Coq.Structures.OrderedType.KeyOrderedType.InA_eqke_eqk	40	6.6.5.23	search with cache (only 1: induction 1; only 1: destruct H; only 1: auto; only 1: auto).	6.47136712074	11601
Coq.Structures.OrderedType.KeyOrderedType.In_alt	40
Coq.Structures.OrderedType.KeyOrderedType.MapsTo_eq	40
Coq.Structures.OrderedType.KeyOrderedType.In_eq	40
Coq.Structures.OrderedType.KeyOrderedType.Inf_eq	40	7.0.3.0.7	search with cache (only 1: destruct l; only 1: auto with ordered_type; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	2.86873888969	1178
Coq.Structures.OrderedType.KeyOrderedType.Inf_lt	40	7.0.4.0.1.8	search with cache (only 1: destruct l; only 1: unfold eqk, ltk; only 1: intuition; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: eauto with *).	20.1993970871	2487
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_NoDupA	40	0.0.0.0.3.0.2.1.0.0.0.9	search with cache (only 1: simple induction l; only 1: eauto with ordered_type; only 1: intros x l' H H0; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: intro; only 1: apply (StrictOrder_Irreflexive x); only 1: eapply Sort_Inf_In; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type; only 1: eauto with ordered_type).	10.6673569679	7402
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrderedType.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv	40
Coq.Structures.OrderedType.KeyOrderedType.In_inv_2	40	0.5.0	search with cache (only 1: inversion_clear 1; only 1: intuition; only 1: eauto with *).	0.0222661495209	8
Coq.Structures.OrderedType.KeyOrderedType.In_inv_3	40	0.0.2.1	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: eauto with *).	0.07479596138	24
Coq.Structures.OrdersFacts.CompareFacts.compare_eq_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_eq	40	0.0.0.0.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: easy).	0.0189518928528	7
Coq.Structures.OrdersFacts.CompareFacts.compare_lt_iff	40	0.0.0.0.0.0.0.2.0.0.0.0.1.0.0.4.0	search with cache (only 1: case compare_spec; only 1: intro EQ; only 1: split; only 1: easy; only 1: intro H; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: easy; only 1: intro EQ; only 1: contradict ltac:(H); only 1: rewrite EQ; only 1: apply irreflexivity).	25.7333769798	21340
Coq.Structures.OrdersFacts.CompareFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareFacts.compare_nlt_iff	40	0.0.0.1.0.0.1.0.0.0.1.1.0.0.0	search with cache (only 1: case compare_spec; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy).	19.9787859917	5647
Coq.Structures.OrdersFacts.CompareFacts.compare_ngt_iff	40	2.1.0.0.2.1.1.0.0.1.1.2.1	search with cache (only 1: case compare_spec; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intro H; only 1: split; only 1: intro LT; only 1: rewrite H; only 1: apply irreflexivity; only 1: easy; only 1: intuition).	29.9685378075	13012
Coq.Structures.OrdersFacts.CompareFacts.compare_compat	40
Coq.Structures.OrdersFacts.CompareFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.00734806060791	2
Coq.Structures.OrdersFacts.CompareFacts.compare_antisym	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_compat	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_preorder	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_order	40	0.0.1	search with cache (only 1: red; only 1: compute; only 1: iorder).	0.0115699768066	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_antisym	40	12.0	search with cache (only 1: compute; only 1: order).	0.509734153748	943
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_not_gt_iff	40	3	search with cache (only 1: iorder).	0.0160269737244	16
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_not_ge_iff	40	0	search with cache (only 1: iorder).	0.00782299041748	1
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.le_or_gt	40
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.lt_or_ge	40	0.0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite le_lteq; only 1: destruct (OrderTac.TO.compare_spec x y); only 1: intuition; only 1: auto; only 1: auto).	0.332962036133	39
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.eq_is_le_ge	40	1.1.1.1.0	search with cache (only 1: intros x y; only 1: destruct (compare_spec x y); only 1: iorder; only 1: iorder; only 1: iorder).	0.0255608558655	9
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_le_iff	40	2.0	search with cache (only 1: rewrite compare_gt_iff; only 1: iorder).	0.0107700824738	4
Coq.Structures.OrdersFacts.OrderedTypeFullFacts.compare_ge_iff	40	0.0.0	search with cache (only 1: rewrite le_not_gt_iff; only 1: rewrite compare_lt_iff; only 1: intuition).	0.0117440223694	3
Coq.Structures.OrdersFacts.OrderedTypeFacts.lt_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.if_eq_dec	40
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_alt	40	0.0.0.0.1.0.1.0.0.0.0.23.0	search with cache (only 1: intros; only 1: compute; only 1: destruct eq_dec; only 1: elim_compare x y; only 1: auto; only 1: contradict ltac:(H); only 1: order; only 1: contradict ltac:(H); only 1: order; only 1: elim_compare x y; only 1: order; only 1: auto; only 1: auto).	30.7816150188	21521
Coq.Structures.OrdersFacts.OrderedTypeFacts.eqb_compat	40
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_eq	40	1.0	search with cache (only 1: intro H; only 1: order).	0.00853896141052	3
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_eq	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.0122721195221	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_lt	40	0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *).	0.01060795784	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_eq	40	1	search with cache (only 1: order).	0.875977039337	24
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_le	40	0	search with cache (only 1: order).	0.00643801689148	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_eq	40	4.3.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: eapply OrderTac.lt_irrefl; only 1: order).	0.870208978653	10
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_neq	40	0	search with cache (only 1: order).	0.00686287879944	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_lt_trans	40	4.0	search with cache (only 1: intuition auto; OrderTac.subst_eqns; eauto using (StrictOrder_Transitive x y z) with *; only 1: order).	0.0236051082611	18
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le_trans	40	0	search with cache (only 1: order).	0.00610899925232	1
Coq.Structures.OrdersFacts.OrderedTypeTest.le_trans	40	1	search with cache (only 1: order).	0.86772108078	20
Coq.Structures.OrdersFacts.OrderedTypeTest.le_antisym	40	1.1.0.1	search with cache (only 1: destruct (OrderTac.TO.compare_spec x y); only 1: auto; only 1: intuition; only 1: intuition).	0.140462875366	84
Coq.Structures.OrdersFacts.OrderedTypeTest.le_neq	40	0	search with cache (only 1: order).	0.00635194778442	1
Coq.Structures.OrdersFacts.OrderedTypeTest.neq_sym	40	0	search with cache (only 1: order).	0.00594592094421	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_le	40	3	search with cache (only 1: order).	0.0213339328766	17
Coq.Structures.OrdersFacts.OrderedTypeTest.gt_not_eq	40	0	search with cache (only 1: order).	0.00544404983521	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_lt	40	0	search with cache (only 1: order).	0.00552701950073	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_not_gt	40	0	search with cache (only 1: order).	0.0054349899292	1
Coq.Structures.OrdersFacts.OrderedTypeTest.lt_not_gt	40	0	search with cache (only 1: order).	0.00532388687134	1
Coq.Structures.OrdersFacts.OrderedTypeTest.eq_is_nlt_ngt	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_strorder	40
Coq.Structures.OrdersFacts.OrderedTypeRev.lt_compat	40
Coq.Structures.OrdersFacts.OrderedTypeRev.le_lteq	40
Coq.Structures.OrdersFacts.OrderedTypeRev.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_spec	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_eq	40	0.0	search with cache (only 1: intros H; only 1: now apply compare_eq_iff).	0.00720500946045	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_refl	40	0.0	search with cache (only 1: apply compare_eq_iff; only 1: reflexivity).	0.00722312927246	2
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_gt_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_ngt_iff	40	0	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.00827598571777	1
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nlt_iff	40	2	search with cache (only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.0104629993439	3
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nle_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.compare_nge_iff	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_irrefl	40
Coq.Structures.OrdersFacts.CompareBasedOrderFacts.lt_eq_cases	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec0	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_spec	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_nle	40	3.2.7	search with cache (only 1: case leb_spec0; only 1: intuition; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	2.3122549057	1372
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_gt	40	1.2.6.1.6	search with cache (only 1: case leb_spec0; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	3.33498096466	1764
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_nlt	40	0.1.8.1	search with cache (only 1: symmetry; only 1: case ltb_spec0; only 1: intuition; only 1: intuition).	0.340170860291	226
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_ge	40	0.1.10	search with cache (only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- not_true_iff_false, ltb_lt).	0.493487119675	192
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_refl	40	0.0.30.0	search with cache (only 1: apply leb_le; only 1: rewrite <- compare_le_iff; only 1: rewrite compare_gt_iff; only 1: now rewrite <- compare_lt_iff, compare_refl).	2.08589601517	5047
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_antisym	40	1.0.8.4.0.8	search with cache (only 1: case ltb_spec0; only 1: now rewrite leb_nle, <- compare_lt_iff, compare_nge_iff; only 1: symmetry; only 1: case leb_spec0; only 1: trivial; only 1: now rewrite <- compare_le_iff, compare_ngt_iff).	3.75173592567	4208
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_irrefl	40	0.9.35	search with cache (only 1: case ltb_spec0; only 1: now rewrite <- compare_lt_iff, compare_refl; only 1: now rewrite <- compare_lt_iff, compare_refl).	7.5777990818	11876
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_antisym	40	1.4.5.4.0.11	search with cache (only 1: case leb_spec0; only 1: now rewrite ltb_nlt, <- compare_le_iff, compare_ngt_iff; only 1: symmetry; only 1: symmetry; only 1: apply ltb_lt; only 1: now rewrite <- compare_lt_iff, compare_nge_iff).	10.8289270401	10894
Coq.Structures.OrdersFacts.BoolOrderFacts.eqb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.ltb_compare	40
Coq.Structures.OrdersFacts.BoolOrderFacts.leb_compare	40	0.0.0.2.2.0.5.23	search with cache (only 1: case leb_spec0; only 1: rewrite <- compare_le_iff; only 1: now destruct compare; only 1: rewrite <- compare_le_iff; only 1: destruct compare; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1).	10.3939549923	14000
Coq.Structures.OrdersLists.OrderedTypeLists.In_eq	40	0.12.0	search with cache (only 1: intuition; only 1: destruct H; only 1: eauto).	1.16215610504	907
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_In	40
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_lt	40	1.1.2.0.0.0.1	search with cache (only 1: destruct l; only 1: constructor; only 1: constructor; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: transitivity y; only 1: auto; only 1: auto).	0.804537057877	405
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_eq	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_Inf_In	40	0.0.13.0.0.0.0.0.0.0.2	search with cache (only 1: simple induction l; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: intros; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: setoid_replace x with a; only 1: auto; only 1: auto; only 1: transitivity a; only 1: eauto; only 1: eauto).	32.8871769905	15728
Coq.Structures.OrdersLists.OrderedTypeLists.ListIn_Inf	40	0.0.0.0.0.0.0.4	search with cache (only 1: simple induction l; only 1: simpl; only 1: intros; only 1: constructor; only 1: simpl; only 1: intros; only 1: constructor; only 1: auto).	0.274137020111	103
Coq.Structures.OrdersLists.OrderedTypeLists.In_Inf	40	6.0.1.5	search with cache (only 1: simple induction l; only 1: intros; only 1: constructor; only 1: intuition).	0.419819116592	308
Coq.Structures.OrdersLists.OrderedTypeLists.Inf_alt	40
Coq.Structures.OrdersLists.OrderedTypeLists.Sort_NoDup	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat	40	2.2.3.1	search with cache (only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	0.299614906311	108
Coq.Structures.OrdersLists.KeyOrderedType.ltk_compat'	40	0.0.0.4.0	search with cache (only 1: unfold eqk, ltk; only 1: intros x x' Hx l l' Hl; only 1: setoid_rewrite Hl; only 1: setoid_rewrite Hx; only 1: intuition).	0.779818058014	14
Coq.Structures.OrdersLists.KeyOrderedType.pair_compat	40	1.1	search with cache (only 1: intros x x' Hx l l' Hl; only 1: intuition).	0.0209860801697	4
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqk	40
Coq.Structures.OrdersLists.KeyOrderedType.ltk_not_eqke	40	0.0.0	search with cache (only 1: intros LT EQ; only 1: rewrite EQ in LT; only 1: elim (StrictOrder_Irreflexive _ LT)).	0.0236611366272	3
Coq.Structures.OrdersLists.KeyOrderedType.Inf_eq	40	1	search with cache (only 1: now intros <-).	0.0218889713287	2
Coq.Structures.OrdersLists.KeyOrderedType.Inf_lt	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_In	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_Inf_NotIn	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_NoDupA	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_1	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_2	40
Coq.Structures.OrdersLists.KeyOrderedType.Sort_In_cons_3	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_eqk	40	0	search with cache (only 1: firstorder).	0.00809192657471	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def	40	0	search with cache (only 1: firstorder).	0.00675010681152	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_def'	40	0	search with cache (only 1: reflexivity).	0.0066499710083	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_1	40	1	search with cache (only 1: firstorder).	0.0100510120392	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqke_2	40	1	search with cache (only 1: now destruct 1).	0.00777292251587	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def	40	1	search with cache (only 1: reflexivity).	0.00693106651306	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_def'	40	0	search with cache (only 1: reflexivity).	0.0063099861145	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.eqk_1	40	2	search with cache (only 1: firstorder).	0.0102119445801	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqke_eqk	40	5.1	search with cache (only 1: do 2 rewrite InA_alt; only 1: firstorder).	0.209187030792	44
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk_eqke	40	0.0.0	search with cache (only 1: induction 1; only 1: firstorder; only 1: firstorder).	0.0267779827118	3
Coq.Structures.EqualitiesFacts.KeyDecidableType.InA_eqk	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt'	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_alt2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_nil	40	2.4.0	search with cache (only 1: unfold In, MapsTo; only 1: setoid_rewrite InA_alt; only 1: firstorder).	0.0343039035797	9
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_cons	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_compat	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.MapsTo_eq	40	12.3	search with cache (only 1: unfold In, MapsTo; only 1: now intros <-).	1.32766318321	879
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_eq	40	0	search with cache (only 1: now intros <-).	0.0157608985901	1
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv	40	0.0	search with cache (only 1: rewrite !In_alt2, Exists_cons; only 1: intuition).	0.0342280864716	2
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_2	40
Coq.Structures.EqualitiesFacts.KeyDecidableType.In_inv_3	40	4.1.20.1	search with cache (only 1: firstorder; only 1: invlist InA; only 1: firstorder; only 1: eauto).	2.0651447773	1869
Coq.Structures.EqualitiesFacts.PairDecidableType.eq_dec	40
Coq.Structures.EqualitiesFacts.PairUsualDecidableType.eq_dec	40
Coq.Structures.DecidableType.KeyDecidableType.eqke_eqk	40	0.1	search with cache (only 1: induction 1; only 1: assumption).	0.0163011550903	3
Coq.Structures.DecidableType.KeyDecidableType.eqk_refl	40	4.0	search with cache (only 1: unfold eqk, eqke; only 1: auto).	0.0144951343536	6
Coq.Structures.DecidableType.KeyDecidableType.eqke_refl	40	0	search with cache (only 1: auto).	0.0120050907135	1
Coq.Structures.DecidableType.KeyDecidableType.eqk_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0187768936157	2
Coq.Structures.DecidableType.KeyDecidableType.eqke_sym	40	0.0	search with cache (only 1: unfold eqk, eqke; only 1: intuition).	0.0255258083344	2
Coq.Structures.DecidableType.KeyDecidableType.eqk_trans	40	3.0.8	search with cache (only 1: intros x l' H H0; only 1: intros; only 1: eauto).	0.454918861389	273
Coq.Structures.DecidableType.KeyDecidableType.eqke_trans	40	1.8.23.2.2	search with cache (only 1: unfold eqke; only 1: intuition; only 1: eauto; only 1: simpl in *; only 1: congruence).	35.0010430813	41396
Coq.Structures.DecidableType.KeyDecidableType.eqk_equiv	40	3.0.29.0.0.88	search with cache (only 1: repeat constructor; only 1: auto; only 1: auto; only 1: intros x l' H H0; only 1: intros; only 1: eauto).	7.34038805962	21850
Coq.Structures.DecidableType.KeyDecidableType.eqke_equiv	40	0.0.0.0	search with cache (only 1: split; only 1: eauto; only 1: eauto; only 1: eauto).	0.039500951767	4
Coq.Structures.DecidableType.KeyDecidableType.InA_eqke_eqk	40	6.2.2.5.17	search with cache (only 1: induction 1; only 1: destruct H; only 1: left; only 1: auto; only 1: auto).	9.38131690025	5856
Coq.Structures.DecidableType.KeyDecidableType.InA_eqk	40	0.4.0.14	search with cache (only 1: intros x l' H H0; only 1: intuition; only 1: rewrite <- H0; only 1: intuition).	1.13567709923	1161
Coq.Structures.DecidableType.KeyDecidableType.In_alt	40
Coq.Structures.DecidableType.KeyDecidableType.MapsTo_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_eq	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv	40
Coq.Structures.DecidableType.KeyDecidableType.In_inv_2	40	1.7.0	search with cache (only 1: inversion 1; only 1: intuition; only 1: eauto).	0.213105916977	51
Coq.Structures.DecidableType.KeyDecidableType.In_inv_3	40	0.0.2.0	search with cache (only 1: inversion_clear 1; only 1: compute in H0; only 1: intuition; only 1: auto using eqk_equiv).	0.0405611991882	6
Coq.Structures.OrdersAlt.Update_OT.lt_strorder	40
Coq.Structures.OrdersAlt.Update_OT.lt_compat	40
Coq.Structures.OrdersAlt.Update_OT.compare_spec	40
Coq.Structures.OrdersAlt.Backport_OT.lt_not_eq	40
Coq.Structures.OrdersAlt.Backport_OT.lt_trans	40	0.0.3.1.16	search with cache (only 1: repeat red; only 1: intros; only 1: transitivity y; only 1: auto; only 1: auto).	0.259459018707	331
Coq.Structures.OrdersAlt.Backport_OT.compare	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_equiv	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_strorder	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_eq	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_lt	40
Coq.Structures.OrdersAlt.OT_from_Alt.lt_compat	40
Coq.Structures.OrdersAlt.OT_from_Alt.compare_spec	40
Coq.Structures.OrdersAlt.OT_from_Alt.eq_dec	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_sym	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Eq	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Lt	40
Coq.Structures.OrdersAlt.OT_to_Alt.compare_Gt	40	0.0.1.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold compare; only 1: intros x y; only 1: destruct (compare_spec x y); only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition; only 1: discriminate; only 1: rewrite H in H0; only 1: elim (StrictOrder_Irreflexive x); only 1: elim (StrictOrder_Irreflexive y); only 1: auto; only 1: intuition).	18.8923070431	7626
Coq.Structures.OrdersAlt.OT_to_Alt.compare_trans	40
Coq.Structures.GenericMinMax.GenericMinMax.ge_not_lt	40
Coq.Structures.GenericMinMax.GenericMinMax.max_l	40
Coq.Structures.GenericMinMax.GenericMinMax.max_r	40
Coq.Structures.GenericMinMax.GenericMinMax.min_l	40	0.0.1.0.0.0.0.1.17	search with cache (only 1: compute; only 1: intros; only 1: case compare_spec; only 1: auto with relations; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt y x); only 1: auto; only 1: auto).	16.965471983	29432
Coq.Structures.GenericMinMax.GenericMinMax.min_r	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: unfold min, gmin; only 1: case compare_spec; only 1: auto with relations; only 1: intros; only 1: elim (ge_not_lt x y); only 1: auto; only 1: auto; only 1: auto with relations).	0.01811003685	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_spec_le	40	0.0.0.0.0.0.0.0.0.0.0.0.2	search with cache (only 1: destruct (lt_total n m); only 1: left; only 1: split; only 1: rewrite le_lteq; only 1: auto; only 1: apply max_r; only 1: rewrite le_lteq; only 1: auto; only 1: right; only 1: assert (m <= n) by (rewrite le_lteq; intuition); only 1: split; only 1: auto; only 1: now apply max_l).	1.54217600822	1437
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.Proper_instance_0	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity	40	1.3.0.3.1.0.6	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	2.22921395302	1580
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_id	40	15.2	search with cache (only 1: apply max_r; only 1: order).	0.104011058807	244
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_l	40	2.1.1.9	search with cache (only 1: pose proof (max_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.351369142532	315
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_max_r	40	0	search with cache (only 1: solve_max).	0.0091609954834	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_l_iff	40	10	search with cache (only 1: solve_max).	0.334702968597	187
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_r_iff	40	0	search with cache (only 1: solve_max).	0.0152461528778	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_iff	40	0.0.0.2.2.0.0.0.2.2.2	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: right; only 1: order; only 1: order; only 1: order; only 1: intuition; only 1: left; only 1: order; only 1: order; only 1: order).	9.59763097763	5984
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lt_iff	40	3.0.0.0.0.0.0.3.0	search with cache (only 1: split; only 1: destruct (max_spec n m); only 1: right; only 1: intuition; only 1: order; only 1: left; only 1: intuition; only 1: order; only 1: solve_max).	2.28940010071	1560
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_l	40	3	search with cache (only 1: solve_max).	0.0102281570435	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_r	40	0	search with cache (only 1: solve_max).	0.010143995285	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub	40	3	search with cache (only 1: solve_max).	0.0552270412445	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_iff	40	3.3.0	search with cache (only 1: split; only 1: solve_max; only 1: solve_max).	0.022656917572	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt	40	0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0311639308929	18
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_lub_lt_iff	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct (max_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	0.0470080375671	25
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0166440010071	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_le_compat	40	0.0.0	search with cache (only 1: intros; only 1: apply max_lub_iff; only 1: solve_max).	0.0189270973206	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_spec_le	40	0.0.0.0.2.0.0.0.3	search with cache (only 1: destruct (max_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: apply min_l; only 1: order; only 1: right; only 1: intuition; only 1: now apply min_r).	3.53595995903	2185
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_compat	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity	40	1.1.0.1.1.1.9	search with cache (only 1: destruct (min_spec n m); only 1: intuition; only 1: order; only 1: order; only 1: intuition; only 1: order; only 1: order).	20.3687570095	9792
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_unicity_ext	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_mono	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_id	40	0.1	search with cache (only 1: apply min_l; only 1: order).	0.0059700012207	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_assoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_comm	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_r	40	2.2.1.11	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order; only 1: order).	0.32936501503	344
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.le_min_l	40	0	search with cache (only 1: solve_min).	0.00876593589783	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_l_iff	40	11	search with cache (only 1: solve_min).	0.534322023392	317
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_r_iff	40	0	search with cache (only 1: solve_min).	0.0113370418549	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le	40	2.2.1.8	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order || (right; order) || (left; order)).	2.05769205093	1565
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_iff	40	7.0.0.0.0.0.0.2.3	search with cache (only 1: split; only 1: destruct (min_spec n m); only 1: left; only 1: intuition; only 1: order; only 1: right; only 1: intuition; only 1: order; only 1: solve_min).	13.7465810776	9219
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_lt_iff	40	0.0.0.0.0.0.1.5	search with cache (only 1: pose proof (min_spec n m) as Hm; only 1: intuition; only 1: order || (right; order) || (left; order); only 1: order; only 1: order; only 1: order || (right; order) || (left; order); only 1: order; only 1: order).	2.71935796738	1226
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_l	40	0	search with cache (only 1: solve_min).	0.0102341175079	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_r	40	0	search with cache (only 1: solve_min).	0.00981402397156	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb	40	0	search with cache (only 1: solve_min).	0.0100548267365	1
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_iff	40	0.0.1	search with cache (only 1: split; only 1: solve_min; only 1: solve_min).	0.0222928524017	4
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt	40	0.0.0.0.4.0	search with cache (only 1: intuition; only 1: destruct (min_spec n m); only 1: intuition; only 1: order || (right; order) || (left; order); only 1: intuition; only 1: order || (right; order) || (left; order)).	0.0238349437714	10
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_glb_lt_iff	40	3	search with cache (only 1: solve_min).	0.162943124771	63
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_l	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat_r	40	0.0.0	search with cache (only 1: intros; only 1: apply min_glb_iff; only 1: solve_min).	0.017863035202	3
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_le_compat	40	1.3.0.0.0	search with cache (only 1: intros Hnm Hpq; only 1: pose proof (max_le_compat_l _ _ m Hpq) as LE; only 1: pose proof (max_le_compat_r _ _ p Hnm) as LE'; only 1: apply min_glb_iff; only 1: solve_min).	0.026762008667	9
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_absorption	40	0.4	search with cache (only 1: apply max_r || apply max_l; only 1: solve_min).	0.017110824585	6
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_absorption	40	0.6	search with cache (only 1: apply min_l; only 1: solve_max).	0.0655908584595	19
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_distr	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_modular	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_disassoc	40
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.max_min_antimono	40	0.0.0.1.0.0.0.0.1.0.1.0	search with cache (only 1: intros Eqf Lef x y; only 1: destruct (min_spec x y) as [(H, E)| (H, E)]; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: assert (f y <= f x) by (apply Lef; order); only 1: order; only 1: auto; only 1: rewrite E; only 1: destruct (max_spec (f x) (f y)) as [(H', E')| (H', E')]; only 1: auto; only 1: assert (f x <= f y) by (apply Lef; order); only 1: order).	1.73531293869	996
Coq.Structures.GenericMinMax.MinMaxLogicalProperties.min_max_antimono	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_case	40	0.0.0.0.0.0.0.0.1.1.0.0.0.0.0.1.0	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply max_r; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply max_l; only 1: auto).	14.7123930454	18274
Coq.Structures.GenericMinMax.MinMaxDecProperties.max_dec	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case_strong	40
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_case	40	0.0.0.1.0.0.0.0.0.1.0.0.0.0.0.1.0	search with cache (only 1: intros Compat Hl Hr; only 1: destruct (CompSpec2Type (compare_spec n m)) as [EQ| LT| GT]; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (n <= m) by (rewrite le_lteq; auto); only 1: apply (Compat n), Hl; only 1: symmetry; only 1: apply min_l; only 1: auto; only 1: assert (m <= n) by (rewrite le_lteq; auto); only 1: apply (Compat m), Hr; only 1: symmetry; only 1: apply min_r; only 1: auto).	11.8844041824	15304
Coq.Structures.GenericMinMax.MinMaxDecProperties.min_dec	40	0.0.0.0.0.0.0.0.0.18	search with cache (only 1: apply min_case_strong; only 1: intros x y H [E| E]; only 1: left; only 1: rewrite <- H; only 1: auto; only 1: right; only 1: rewrite <- H; only 1: auto; only 1: auto with relations; only 1: auto with relations).	10.9343008995	21564
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_monotone	40	0.24	search with cache (only 1: apply max_mono; only 1: eauto with *).	0.263516902924	472
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_monotone	40	0.26	search with cache (only 1: apply min_mono; only 1: congruence).	0.628251791	1257
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.min_max_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxLogicalProperties.max_min_antimonotone	40
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case_strong	40	0.0.1.4.1	search with cache (only 1: intros Compat Hl Hr; only 1: apply max_case_strong; only 1: intros; only 1: subst; only 1: auto).	0.107123851776	92
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.max_case_strong; only 1: auto; only 1: auto).	0.00909900665283	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.max_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.max_case; only 1: auto with relations; only 1: auto with relations).	0.00910305976868	6
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case_strong	40	0.0.0.7.0	search with cache (only 1: intros; only 1: apply min_case_strong; only 1: congruence; only 1: auto; only 1: auto).	0.273352861404	281
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_case	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Private_Dec.min_case_strong; only 1: auto; only 1: auto).	0.0093469619751	4
Coq.Structures.GenericMinMax.UsualMinMaxDecProperties.min_dec	40	0.0.0.2	search with cache (only 1: intros; only 1: apply Private_Dec.min_case; only 1: auto with relations; only 1: auto with relations).	0.00933003425598	6
Coq.Structures.GenericMinMax.TOMaxEqDec_to_Compare.compare_spec	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_refl	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.lt_not_eq	40	2.1.6.1	search with cache (only 1: unfold eq; only 1: intros; only 1: rewrite H; only 1: discriminate).	1.02385187149	595
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.compare	40
Coq.Structures.OrderedTypeAlt.OrderedType_from_Alt.eq_dec	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_sym	40
Coq.Structures.OrderedTypeAlt.OrderedType_to_Alt.compare_trans	40
Coq.ZArith.Znat.nat_N_Z	40	0.0.0.0.3	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: trivial).	0.0579571723938	8
Coq.ZArith.Znat.N_nat_Z	40	0.0.0.0.0.0.3.0.0.1.7	search with cache (only 1: induction n; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.814531087875	1064
Coq.ZArith.Znat.positive_nat_Z	40	0.0.0.0.0	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (m, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	0.0164458751678	5
Coq.ZArith.Znat.positive_N_Z	40	0	search with cache (only 1: trivial).	0.00564908981323	1
Coq.ZArith.Znat.positive_N_nat	40	0	search with cache (only 1: trivial).	0.00554704666138	1
Coq.ZArith.Znat.positive_nat_N	40	0.0.0.0.0.0.1	search with cache (only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: apply SuccNat2Pos.id_succ).	0.0200021266937	8
Coq.ZArith.Znat.Z_N_nat	40	0.0.0.4	search with cache (only 1: induction n; only 1: reflexivity; only 1: trivial; only 1: trivial).	0.0134561061859	8
Coq.ZArith.Znat.Z_nat_N	40	0.3.0.11	search with cache (only 1: destruct n; only 1: trivial; only 1: Nat2N.nat2N; only 1: trivial).	0.211087942123	166
Coq.ZArith.Znat.Zabs_N_nat	40	0	search with cache (only 1: now destruct n).	0.00741291046143	1
Coq.ZArith.Znat.Zabs_nat_N	40	1.0.1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply positive_nat_N; only 1: simpl; only 1: apply positive_nat_N).	0.0179469585419	10
Coq.ZArith.Znat.N2Z.id	40	1.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: f_equal).	0.0120871067047	7
Coq.ZArith.Znat.N2Z.inj	40
Coq.ZArith.Znat.N2Z.inj_iff	40	1.1.2.1	search with cache (only 1: split; only 1: apply Nat2N.inj; only 1: intros; only 1: now subst).	0.208160161972	173
Coq.ZArith.Znat.N2Z.is_nonneg	40	0.2.1.1	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: easy).	0.0233521461487	8
Coq.ZArith.Znat.N2Z.inj_0	40	0	search with cache (only 1: trivial).	0.00542688369751	1
Coq.ZArith.Znat.N2Z.inj_pos	40	0	search with cache (only 1: reflexivity).	0.00562787055969	1
Coq.ZArith.Znat.N2Z.inj_compare	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0196001529694	10
Coq.ZArith.Znat.N2Z.inj_le	40	3.3.0	search with cache (only 1: split; only 1: now destruct n, m; only 1: now destruct n, m).	0.163544893265	104
Coq.ZArith.Znat.N2Z.inj_lt	40	6	search with cache (only 1: now destruct n, m).	0.0746259689331	60
Coq.ZArith.Znat.N2Z.inj_ge	40	7	search with cache (only 1: now destruct n, m).	0.0454621315002	37
Coq.ZArith.Znat.N2Z.inj_gt	40	8	search with cache (only 1: now destruct n, m).	0.0272541046143	24
Coq.ZArith.Znat.N2Z.inj_abs_N	40
Coq.ZArith.Znat.N2Z.inj_add	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: simpl; only 1: Z.order; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: congruence).	0.0228679180145	10
Coq.ZArith.Znat.N2Z.inj_mul	40	0	search with cache (only 1: now destruct n, m).	0.00755715370178	1
Coq.ZArith.Znat.N2Z.inj_sub_max	40
Coq.ZArith.Znat.N2Z.inj_sub	40
Coq.ZArith.Znat.N2Z.inj_succ	40	0.0.0.0.1	search with cache (only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0131618976593	6
Coq.ZArith.Znat.N2Z.inj_pred_max	40	0.0.1.1.16.0.0.2	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: simpl; only 1: trivial).	0.778359174728	2111
Coq.ZArith.Znat.N2Z.inj_pred	40	0.0.0.0.0.0.5.0.0.2	search with cache (only 1: destruct n; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: destruct p; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max; only 1: unfold Z.pred; only 1: now rewrite N.pred_sub, inj_sub_max).	1.91262984276	1726
Coq.ZArith.Znat.N2Z.inj_min	40
Coq.ZArith.Znat.N2Z.inj_max	40
Coq.ZArith.Znat.N2Z.inj_div	40
Coq.ZArith.Znat.N2Z.inj_mod	40
Coq.ZArith.Znat.N2Z.inj_quot	40
Coq.ZArith.Znat.N2Z.inj_rem	40
Coq.ZArith.Znat.N2Z.inj_div2	40	0.0.0.21.0.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	3.28514003754	8874
Coq.ZArith.Znat.N2Z.inj_quot2	40	1.0.0	search with cache (only 1: destruct n as [| p]; only 1: trivial; only 1: now destruct p).	0.011458158493	4
Coq.ZArith.Znat.N2Z.inj_pow	40
Coq.ZArith.Znat.N2Z.inj_testbit	40
Coq.ZArith.Znat.Z2N.id	40	4	search with cache (only 1: now destruct n).	0.00913906097412	5
Coq.ZArith.Znat.Z2N.inj	40	1.0.0.0.0.1.0.0.0.1.0.1.0.1.0.2	search with cache (only 1: destruct n, m; only 1: easy; only 1: simpl; only 1: congruence; only 1: simpl; only 1: easy; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: simpl; only 1: congruence; only 1: now destruct 1 || trivial; only 1: now destruct 1 || trivial; only 1: simpl; only 1: easy).	26.0118629932	16847
Coq.ZArith.Znat.Z2N.inj_iff	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now f_equal).	0.0233108997345	7
Coq.ZArith.Znat.Z2N.inj_0	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0072820186615	2
Coq.ZArith.Znat.Z2N.inj_pos	40	1.0	search with cache (only 1: simpl; only 1: f_equal).	0.00793790817261	3
Coq.ZArith.Znat.Z2N.inj_neg	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0072078704834	2
Coq.ZArith.Znat.Z2N.inj_add	40	5.6.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now destruct n, m).	0.203423976898	117
Coq.ZArith.Znat.Z2N.inj_mul	40	1.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	0.467576026917	176
Coq.ZArith.Znat.Z2N.inj_succ	40	0.0.1.0.0	search with cache (only 1: destruct n; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1 || trivial).	0.0174310207367	6
Coq.ZArith.Znat.Z2N.inj_sub	40
Coq.ZArith.Znat.Z2N.inj_pred	40	0.0.0.1.0.0.0.2.0.5	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: Nat2N.nat2N; only 1: simpl; only 1: trivial).	1.62092781067	891
Coq.ZArith.Znat.Z2N.inj_compare	40	4.1	search with cache (only 1: intros; only 1: now destruct n, m).	0.317811012268	168
Coq.ZArith.Znat.Z2N.inj_le	40	12.1.4	search with cache (only 1: unfold Z.le, Z.ge; only 1: intros; only 1: now destruct n, m).	9.42255592346	8207
Coq.ZArith.Znat.Z2N.inj_lt	40	7.0.15.0	search with cache (only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: unfold Z.lt; only 1: now destruct n, m).	15.0610740185	16848
Coq.ZArith.Znat.Z2N.inj_min	40
Coq.ZArith.Znat.Z2N.inj_max	40
Coq.ZArith.Znat.Z2N.inj_div	40
Coq.ZArith.Znat.Z2N.inj_mod	40
Coq.ZArith.Znat.Z2N.inj_quot	40
Coq.ZArith.Znat.Z2N.inj_rem	40
Coq.ZArith.Znat.Z2N.inj_div2	40	0.0.4.0.10	search with cache (only 1: destruct n; only 1: Nat2N.nat2N; only 1: now destruct p; only 1: simpl; only 1: trivial).	0.441156864166	252
Coq.ZArith.Znat.Z2N.inj_quot2	40	1.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0135929584503	6
Coq.ZArith.Znat.Z2N.inj_pow	40
Coq.ZArith.Znat.Z2N.inj_testbit	40
Coq.ZArith.Znat.Zabs2N.abs_N_spec	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0154268741608	7
Coq.ZArith.Znat.Zabs2N.abs_N_nonneg	40	0.0	search with cache (only 1: intros; only 1: now destruct n).	0.0121760368347	2
Coq.ZArith.Znat.Zabs2N.id_abs	40	1	search with cache (only 1: now destruct n).	0.00670385360718	2
Coq.ZArith.Znat.Zabs2N.id	40	0	search with cache (only 1: now destruct n).	0.00589609146118	1
Coq.ZArith.Znat.Zabs2N.inj_0	40	0	search with cache (only 1: trivial).	0.00513982772827	1
Coq.ZArith.Znat.Zabs2N.inj_pos	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00671601295471	2
Coq.ZArith.Znat.Zabs2N.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00539398193359	1
Coq.ZArith.Znat.Zabs2N.inj_opp	40	0.0.0.0.0.0.0	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.0149691104889	7
Coq.ZArith.Znat.Zabs2N.inj_succ	40	1.0.1.0.2	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: now destruct 1).	0.166626214981	49
Coq.ZArith.Znat.Zabs2N.inj_add	40	0.1.0.1.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	1.09133911133	501
Coq.ZArith.Znat.Zabs2N.inj_mul	40	4	search with cache (only 1: now destruct n, m).	0.444457054138	229
Coq.ZArith.Znat.Zabs2N.inj_sub	40
Coq.ZArith.Znat.Zabs2N.inj_pred	40	2.0.0.0.5.2.1	search with cache (only 1: destruct n; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: easy).	4.80541920662	5164
Coq.ZArith.Znat.Zabs2N.inj_compare	40	5.0	search with cache (only 1: intros Hn Hm; only 1: now destruct n, m).	0.045608997345	22
Coq.ZArith.Znat.Zabs2N.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le, N.le; only 1: now rewrite Z2N.inj_compare).	0.0101990699768	3
Coq.ZArith.Znat.Zabs2N.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt, N.lt; only 1: now rewrite Z2N.inj_compare).	0.0108070373535	3
Coq.ZArith.Znat.Zabs2N.inj_min	40
Coq.ZArith.Znat.Zabs2N.inj_max	40
Coq.ZArith.Znat.Zabs2N.inj_quot	40
Coq.ZArith.Znat.Zabs2N.inj_rem	40
Coq.ZArith.Znat.Zabs2N.inj_pow	40
Coq.ZArith.Znat.Zabs2N.inj_succ_abs	40	0.2.0.2.2.7	search with cache (only 1: destruct n; only 1: trivial; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: now rewrite Pos.add_1_r).	1.55449390411	1337
Coq.ZArith.Znat.Zabs2N.inj_add_abs	40	4	search with cache (only 1: now destruct n, m).	0.178832054138	101
Coq.ZArith.Znat.Zabs2N.inj_mul_abs	40	0	search with cache (only 1: now destruct n, m).	0.00915503501892	1
Coq.ZArith.Znat.Nat2Z.inj_0	40	0	search with cache (only 1: reflexivity).	0.00528383255005	1
Coq.ZArith.Znat.Nat2Z.inj_succ	40	0.0.0.0.2.0	search with cache (only 1: simpl; only 1: destruct n; only 1: simpl; only 1: reflexivity; only 1: simpl; only 1: now rewrite Pos.add_1_r).	0.0144209861755	8
Coq.ZArith.Znat.Nat2Z.is_nonneg	40	4.1	search with cache (only 1: apply Z.lt_succ_r; only 1: now destruct n).	0.0246109962463	21
Coq.ZArith.Znat.Nat2Z.id	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0119819641113	6
Coq.ZArith.Znat.Nat2Z.inj	40	0.1.4	search with cache (only 1: intros H; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0308210849762	45
Coq.ZArith.Znat.Nat2Z.inj_iff	40	1.0.0.0.1	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id n), <- (id m), H; only 1: intros H; only 1: now f_equal).	0.0136709213257	7
Coq.ZArith.Znat.Nat2Z.inj_compare	40
Coq.ZArith.Znat.Nat2Z.inj_le	40
Coq.ZArith.Znat.Nat2Z.inj_lt	40
Coq.ZArith.Znat.Nat2Z.inj_ge	40
Coq.ZArith.Znat.Nat2Z.inj_gt	40
Coq.ZArith.Znat.Nat2Z.inj_abs_nat	40
Coq.ZArith.Znat.Nat2Z.inj_add	40
Coq.ZArith.Znat.Nat2Z.inj_mul	40
Coq.ZArith.Znat.Nat2Z.inj_sub_max	40
Coq.ZArith.Znat.Nat2Z.inj_sub	40
Coq.ZArith.Znat.Nat2Z.inj_pred_max	40
Coq.ZArith.Znat.Nat2Z.inj_pred	40
Coq.ZArith.Znat.Nat2Z.inj_min	40
Coq.ZArith.Znat.Nat2Z.inj_max	40
Coq.ZArith.Znat.Z2Nat.id	40	0.1.0.0.0.1.0.0.9.0.0	search with cache (only 1: destruct n; only 1: now destruct 1 || trivial; only 1: intros; only 1: now destruct Hn || now destruct Hm || clear; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: now destruct 1 || trivial).	4.44185709953	5461
Coq.ZArith.Znat.Z2Nat.inj	40	0.0.0	search with cache (only 1: intros; only 1: rewrite <- (Z2N.id n), <- (Z2N.id m) by trivial; only 1: now f_equal).	0.0140509605408	3
Coq.ZArith.Znat.Z2Nat.inj_iff	40	0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: split; only 1: intros; only 1: rewrite <- (id n), <- (id m) by trivial; only 1: now f_equal; only 1: intros; only 1: now subst).	0.0206379890442	7
Coq.ZArith.Znat.Z2Nat.inj_0	40	0	search with cache (only 1: reflexivity).	0.0052502155304	1
Coq.ZArith.Znat.Z2Nat.inj_pos	40	0	search with cache (only 1: now destruct n).	0.00615477561951	1
Coq.ZArith.Znat.Z2Nat.inj_neg	40	1	search with cache (only 1: reflexivity).	0.00563311576843	2
Coq.ZArith.Znat.Z2Nat.inj_add	40	0.1.0.1.1.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: trivial).	9.71037101746	5853
Coq.ZArith.Znat.Z2Nat.inj_mul	40	1.0.0.0.0.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: trivial; only 1: trivial; only 1: now destruct 1 || now destruct 2).	4.08407282829	2465
Coq.ZArith.Znat.Z2Nat.inj_succ	40
Coq.ZArith.Znat.Z2Nat.inj_sub	40
Coq.ZArith.Znat.Z2Nat.inj_pred	40
Coq.ZArith.Znat.Z2Nat.inj_compare	40
Coq.ZArith.Znat.Z2Nat.inj_le	40
Coq.ZArith.Znat.Z2Nat.inj_lt	40
Coq.ZArith.Znat.Z2Nat.inj_min	40
Coq.ZArith.Znat.Z2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.abs_nat_spec	40	0	search with cache (only 1: now destruct n).	0.00670313835144	1
Coq.ZArith.Znat.Zabs2Nat.abs_nat_nonneg	40	0	search with cache (only 1: now destruct n).	0.00847291946411	1
Coq.ZArith.Znat.Zabs2Nat.id_abs	40	1.0.0.0.1.0.1.0.0.0.1.0.0.0.4	search with cache (only 1: destruct n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv; only 1: simpl; only 1: destruct (Pos2Nat.is_succ p) as (n, H); only 1: rewrite H; only 1: simpl; only 1: f_equal; only 1: now apply SuccNat2Pos.inv).	2.65359091759	3516
Coq.ZArith.Znat.Zabs2Nat.id	40	1.0.0.0.1	search with cache (only 1: induction n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply SuccNat2Pos.id_succ).	0.0121431350708	7
Coq.ZArith.Znat.Zabs2Nat.inj_0	40	0	search with cache (only 1: trivial).	0.00519514083862	1
Coq.ZArith.Znat.Zabs2Nat.inj_pos	40	0	search with cache (only 1: trivial).	0.00564694404602	1
Coq.ZArith.Znat.Zabs2Nat.inj_neg	40	0	search with cache (only 1: reflexivity).	0.00536513328552	1
Coq.ZArith.Znat.Zabs2Nat.inj_succ	40
Coq.ZArith.Znat.Zabs2Nat.inj_add	40	1.1.0.1.1.0.1.0.0.0.0.1	search with cache (only 1: destruct n, m; only 1: trivial; only 1: trivial; only 1: trivial; only 1: trivial; only 1: intros Hn Hm; only 1: now destruct Hn || now destruct Hm || clear; only 1: apply Pos2Nat.inj_add; only 1: now destruct 1 || now destruct 2; only 1: trivial; only 1: now destruct 1 || now destruct 2; only 1: now destruct 1 || now destruct 2).	12.370265007	7897
Coq.ZArith.Znat.Zabs2Nat.inj_mul	40	0.3.0.3.1.0.2.1.1.0.0.3.5	search with cache (only 1: destruct n, m; only 1: trivial; only 1: reflexivity; only 1: reflexivity; only 1: trivial; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	17.4400200844	26737
Coq.ZArith.Znat.Zabs2Nat.inj_sub	40
Coq.ZArith.Znat.Zabs2Nat.inj_pred	40
Coq.ZArith.Znat.Zabs2Nat.inj_compare	40
Coq.ZArith.Znat.Zabs2Nat.inj_le	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.le; only 1: now rewrite nat_compare_le, Z2Nat.inj_compare).	0.0114550590515	3
Coq.ZArith.Znat.Zabs2Nat.inj_lt	40	0.0.0	search with cache (only 1: intros Hn Hm; only 1: unfold Z.lt; only 1: now rewrite nat_compare_lt, Z2Nat.inj_compare).	0.0118889808655	3
Coq.ZArith.Znat.Zabs2Nat.inj_min	40
Coq.ZArith.Znat.Zabs2Nat.inj_max	40
Coq.ZArith.Znat.Zabs2Nat.inj_succ_abs	40	0.0.0.2	search with cache (only 1: destruct n; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_succ, N2Nat.inj_succ).	0.0275831222534	6
Coq.ZArith.Znat.Zabs2Nat.inj_add_abs	40	0.1.0.1.0.0.0.0.0.5	search with cache (only 1: destruct n, m; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add; only 1: now rewrite <- !Zabs_N_nat, Zabs2N.inj_add, N2Nat.inj_add).	1.91070389748	718
Coq.ZArith.Znat.Zabs2Nat.inj_mul_abs	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: trivial; only 1: simpl; only 1: apply Pos2Nat.inj_mul; only 1: simpl; only 1: apply Pos2Nat.inj_mul).	6.744535923	7111
Coq.ZArith.Znat.inj_neq	40
Coq.ZArith.Znat.inj_minus2	40
Coq.ZArith.Wf_Z.Z_of_nat_complete	40
Coq.ZArith.Wf_Z.Z_of_nat_complete_inf	40	0.0.0.0	search with cache (only 1: intros H; only 1: exists (Z.to_nat x); only 1: symmetry; only 1: now apply Z2Nat.id).	0.011176109314	4
Coq.ZArith.Wf_Z.Z_of_nat_prop	40
Coq.ZArith.Wf_Z.Z_of_nat_set	40
Coq.ZArith.Wf_Z.natlike_ind	40
Coq.ZArith.Wf_Z.natlike_rec	40
Coq.ZArith.Wf_Z.R_wf	40
Coq.ZArith.Wf_Z.natlike_rec2	40
Coq.ZArith.Wf_Z.natlike_rec3	40	0.1.0.1.2.2.1.0.0.0.0.0.1.0.0	search with cache (only 1: intros P Ho Hrec; only 1: induction z as [z IH] using (well_founded_induction_type R_wf); only 1: intros Hz; only 1: destruct z; only 1: apply Ho; only 1: set (y := Z.pred (Z.pos p)); only 1: assert (LE : 0 <= y) by (unfold y; now apply Z.lt_le_pred); only 1: assert (EQ : Z.pos p = Z.succ y) by (unfold y; now rewrite Z.succ_pred); only 1: apply Hrec, IH; only 1: split; only 1: split; only 1: trivial; only 1: apply Z.lt_pred_l; only 1: trivial; only 1: now destruct Hz).	10.0125579834	14425
Coq.ZArith.Wf_Z.Zlt_0_rec	40
Coq.ZArith.Wf_Z.Zlt_0_ind	40	0.1.0.0.4.0.0	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	0.553651094437	505
Coq.ZArith.Wf_Z.Z_lt_rec	40	0.1.1.0.3.1.0.1	search with cache (only 1: intros P Hrec; only 1: induction x as [x IH] using (well_founded_induction_type R_wf); only 1: intros Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: apply IH; only 1: now split; only 1: trivial).	1.69046020508	1592
Coq.ZArith.Wf_Z.Z_lt_induction	40	0.0.0	search with cache (only 1: intros P Hrec; only 1: apply Zlt_0_rec; only 1: auto).	0.0102829933167	3
Coq.ZArith.Wf_Z.Zlt_lower_bound_rec	40
Coq.ZArith.Wf_Z.Zlt_lower_bound_ind	40	0.0.0.0.0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: intros P z Hrec x Hx; only 1: rewrite <- (Z.sub_simpl_r x z); only 1: apply Z.le_0_sub in Hx; only 1: pattern (x - z); only 1: apply Zlt_0_rec; only 1: clear x Hx; only 1: intros x IH Hx; only 1: apply Hrec; only 1: intros y (Hy, Hy'); only 1: rewrite <- (Z.sub_simpl_r y z); only 1: apply IH; only 1: split; only 1: now rewrite Z.le_0_sub; only 1: now apply Z.lt_sub_lt_add_r; only 1: now rewrite <- (Z.add_le_mono_r 0 x z); only 1: trivial).	10.3941609859	8670
Coq.ZArith.Zpow_facts.Zpower_pos_1_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_0_l	40
Coq.ZArith.Zpow_facts.Zpower_pos_pos	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone	40
Coq.ZArith.Zpow_facts.Zpower_lt_monotone	40
Coq.ZArith.Zpow_facts.Zpower_gt_1	40
Coq.ZArith.Zpow_facts.Zmult_power	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone3	40
Coq.ZArith.Zpow_facts.Zpower_le_monotone_inv	40
Coq.ZArith.Zpow_facts.Zpower2_lt_lin	40
Coq.ZArith.Zpow_facts.Zpower2_le_lin	40	0.59.0	search with cache (only 1: intros; only 1: apply Z.lt_le_incl; only 1: now apply Z.pow_gt_lin_r).	5.10104298592	17278
Coq.ZArith.Zpow_facts.Zpower2_Psize	40
Coq.ZArith.Zpow_facts.Zpower_mod	40
Coq.ZArith.Zpow_facts.Zpow_mod_pos_correct	40
Coq.ZArith.Zpow_facts.Zpow_mod_correct	40
Coq.ZArith.Zpow_facts.Zpower_divide	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower_r	40
Coq.ZArith.Zpow_facts.rel_prime_Zpower	40
Coq.ZArith.Zpow_facts.prime_power_prime	40
Coq.ZArith.Zpow_facts.Zdivide_power_2	40
Coq.ZArith.Zpow_def.Zpower_theory	40
Coq.ZArith.Zcompare.Zcompare_Gt_trans	40
Coq.ZArith.Zcompare.Zcompare_opp	40	1.0.0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n, m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	15.8633239269	19630
Coq.ZArith.Zcompare.Zcompare_Gt_spec	40
Coq.ZArith.Zcompare.Zcompare_plus_compat	40
Coq.ZArith.Zcompare.Zplus_compare_compat	40
Coq.ZArith.Zcompare.Zcompare_succ_Gt	40
Coq.ZArith.Zcompare.Zcompare_Gt_not_Lt	40
Coq.ZArith.Zcompare.Zcompare_succ_compat	40
Coq.ZArith.Zcompare.Zcompare_mult_compat	40
Coq.ZArith.Zcompare.Zmult_compare_compat_l	40
Coq.ZArith.Zcompare.Zmult_compare_compat_r	40
Coq.ZArith.Zcompare.Zcompare_elim	40
Coq.ZArith.Zcompare.Zcompare_eq_case	40	8.8.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: Z.order; only 1: Z.order).	1.35980010033	1485
Coq.ZArith.Zcompare.Zle_compare	40	7.0.0.1.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: now Z.swap_greater; only 1: Z.order_pos).	0.501464128494	304
Coq.ZArith.Zcompare.Zlt_compare	40	1.0.1.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: Z.order; only 1: trivial; only 1: Z.order).	0.0152249336243	7
Coq.ZArith.Zcompare.Zge_compare	40	0.0.0.0.0	search with cache (only 1: intros; only 1: case Z.compare_spec; only 1: trivial; only 1: trivial; only 1: trivial).	0.0124881267548	5
Coq.ZArith.Zcompare.Zgt_compare	40	0.0	search with cache (only 1: intros x y H; only 1: now rewrite H).	0.0133099555969	2
Coq.ZArith.Zquot.Zquot_0_r	40
Coq.ZArith.Zquot.Zrem_0_r	40	0	search with cache (only 1: now destruct a).	0.00907206535339	1
Coq.ZArith.Zquot.Zrem_0_l	40	0	search with cache (only 1: now destruct a).	0.00892305374146	1
Coq.ZArith.Zquot.Zquot_0_l	40	0	search with cache (only 1: now destruct a).	0.00898599624634	1
Coq.ZArith.Zquot.Z_rem_same	40
Coq.ZArith.Zquot.Z_rem_mult	40
Coq.ZArith.Zquot.Zquot_opp_l	40
Coq.ZArith.Zquot.Zquot_opp_r	40
Coq.ZArith.Zquot.Zrem_opp_l	40
Coq.ZArith.Zquot.Zrem_opp_r	40
Coq.ZArith.Zquot.Zquot_opp_opp	40
Coq.ZArith.Zquot.Zrem_opp_opp	40
Coq.ZArith.Zquot.Zrem_sgn	40
Coq.ZArith.Zquot.Zrem_sgn2	40
Coq.ZArith.Zquot.Zrem_lt_pos	40
Coq.ZArith.Zquot.Zrem_lt_neg	40
Coq.ZArith.Zquot.Zrem_lt_pos_pos	40	0.1.0.0	search with cache (only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: generalize (Z.rem_nonneg a b), (Z.rem_bound_abs a b); only 1: lia).	0.0327789783478	5
Coq.ZArith.Zquot.Zrem_lt_pos_neg	40	0.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: lia).	0.0206480026245	3
Coq.ZArith.Zquot.Zrem_lt_neg_pos	40	0.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Z.rem_nonpos a b), (Z.rem_bound_abs a b); only 1: lia).	0.035471200943	6
Coq.ZArith.Zquot.Zrem_lt_neg_neg	40	0.1.1.0.1.0.0	search with cache (only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Zrem_lt_pos a b); only 1: intros; only 1: generalize (Zrem_lt_neg a b); only 1: lia).	0.12283706665	12
Coq.ZArith.Zquot.Remainder_equiv	40
Coq.ZArith.Zquot.Zquot_mod_unique_full	40
Coq.ZArith.Zquot.Zquot_unique_full	40
Coq.ZArith.Zquot.Zrem_unique_full	40	0.0.0.0.1	search with cache (only 1: intros; only 1: destruct (Zquot_mod_unique_full a b q r); only 1: auto; only 1: auto; only 1: auto).	0.0646059513092	32
Coq.ZArith.Zquot.Z_quot_pos	40
Coq.ZArith.Zquot.Z_quot_lt	40
Coq.ZArith.Zquot.Z_quot_monotone	40
Coq.ZArith.Zquot.Z_mult_quot_le	40
Coq.ZArith.Zquot.Z_mult_quot_ge	40
Coq.ZArith.Zquot.Z_quot_exact_full	40
Coq.ZArith.Zquot.Zrem_le	40
Coq.ZArith.Zquot.Zquot_le_upper_bound	40
Coq.ZArith.Zquot.Zquot_lt_upper_bound	40
Coq.ZArith.Zquot.Zquot_le_lower_bound	40
Coq.ZArith.Zquot.Zquot_sgn	40
Coq.ZArith.Zquot.Z_rem_plus	40
Coq.ZArith.Zquot.Z_quot_plus	40
Coq.ZArith.Zquot.Z_quot_plus_l	40
Coq.ZArith.Zquot.Zquot_mult_cancel_r	40
Coq.ZArith.Zquot.Zquot_mult_cancel_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_l	40
Coq.ZArith.Zquot.Zmult_rem_distr_r	40
Coq.ZArith.Zquot.Zrem_rem	40
Coq.ZArith.Zquot.Zmult_rem	40
Coq.ZArith.Zquot.Zplus_rem	40
Coq.ZArith.Zquot.Zplus_rem_idemp_l	40
Coq.ZArith.Zquot.Zplus_rem_idemp_r	40
Coq.ZArith.Zquot.Zmult_rem_idemp_l	40
Coq.ZArith.Zquot.Zmult_rem_idemp_r	40
Coq.ZArith.Zquot.Zquot_Zquot	40
Coq.ZArith.Zquot.Zquot_mult_le	40
Coq.ZArith.Zquot.Zrem_divides	40
Coq.ZArith.Zquot.Zquot2_odd_remainder	40
Coq.ZArith.Zquot.Zrem_odd	40
Coq.ZArith.Zquot.Zrem_even	40
Coq.ZArith.Zquot.Zeven_rem	40	2.0.2.0.1.1.0.5	search with cache (only 1: intros [| p| p]; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: simpl; only 1: constructor; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even; only 1: rewrite Zrem_odd, Zodd_even_bool; only 1: now destruct Z.even).	2.4508471489	2933
Coq.ZArith.Zquot.Zodd_rem	40	2.1.0.0.0.0	search with cache (only 1: intros a; only 1: rewrite Zrem_even; only 1: destruct a as [| p| p]; only 1: trivial; only 1: now destruct p; only 1: now destruct p).	0.0245690345764	9
Coq.ZArith.Zquot.Zquotrem_Zdiv_eucl_pos	40
Coq.ZArith.Zquot.Zquot_Zdiv_pos	40
Coq.ZArith.Zquot.Zrem_Zmod_pos	40	1.3.2	search with cache (only 1: intros a b Ha Hb; only 1: generalize (Zquotrem_Zdiv_eucl_pos a b Ha Hb); only 1: intuition).	0.0798780918121	39
Coq.ZArith.Zquot.Zrem_Zmod_zero	40
Coq.ZArith.Zdigits.binary_value	40	14.0	search with cache (only 1: intros; only 1: constructor).	0.0688278675079	191
Coq.ZArith.Zdigits.two_compl_value	40	0.0.0.2.0.0	search with cache (only 1: refine (nat_rect _ _ _); only 1: intros; only 1: exact 0%Z; only 1: intros; only 1: inversion H0; only 1: exact (bit_value h + 2 * H H2)%Z).	0.0192720890045	8
Coq.ZArith.Zdigits.Zmod2_twice	40
Coq.ZArith.Zdigits.Z_to_binary	40
Coq.ZArith.Zdigits.Z_to_two_compl	40
Coq.ZArith.Zdigits.binary_value_Sn	40	3.1	search with cache (only 1: simpl; only 1: trivial).	0.0481550693512	22
Coq.ZArith.Zdigits.Z_to_binary_Sn	40
Coq.ZArith.Zdigits.binary_value_pos	40
Coq.ZArith.Zdigits.two_compl_value_Sn	40	0.0.0	search with cache (only 1: destruct b; only 1: auto; only 1: auto).	0.100066184998	3
Coq.ZArith.Zdigits.Z_to_two_compl_Sn	40
Coq.ZArith.Zdigits.Z_to_binary_Sn_z	40	0.1.2	search with cache (only 1: simpl; only 1: intro H; only 1: auto).	0.0557248592377	45
Coq.ZArith.Zdigits.Z_div2_value	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct z; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct p; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: intro H; only 1: elim H; only 1: trivial).	5.09728980064	3053
Coq.ZArith.Zdigits.Pdiv2	40	1.0.9.0.0.0.0.0	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: compute; only 1: congruence; only 1: auto).	13.8018360138	11095
Coq.ZArith.Zdigits.Zdiv2_two_power_nat	40
Coq.ZArith.Zdigits.Z_to_two_compl_Sn_z	40	0.1.0.0.0.0.1	search with cache (only 1: destruct z as [| p| p]; only 1: auto; only 1: auto; only 1: destruct p as [p| p| ]; only 1: auto; only 1: auto; only 1: auto).	0.0578188896179	16
Coq.ZArith.Zdigits.Zeven_bit_value	40
Coq.ZArith.Zdigits.Zodd_bit_value	40	0.0.0.0.0.0.0.0.0.0.2.0.0	search with cache (only 1: destruct z; only 1: unfold bit_value; only 1: tauto || (intro H; elim H); only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: auto; only 1: unfold bit_value; only 1: destruct p; only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H); only 1: tauto || (intro H; elim H)).	3.34679985046	2047
Coq.ZArith.Zdigits.Zge_minus_two_power_nat_S	40
Coq.ZArith.Zdigits.Zlt_two_power_nat_S	40	0.0.0.0.0.0.1.0.0.1	search with cache (only 1: intros n z; only 1: rewrite (two_power_nat_S n); only 1: generalize (Zmod2_twice z); only 1: destruct (Zeven_odd_dec z) as [H| H]; only 1: rewrite (Zeven_bit_value z H); only 1: intros; only 1: lia; only 1: rewrite (Zodd_bit_value z H); only 1: intros; only 1: lia).	0.463202953339	284
Coq.ZArith.Zdigits.binary_to_Z_to_binary	40
Coq.ZArith.Zdigits.two_compl_to_Z_to_two_compl	40
Coq.ZArith.Zdigits.Z_to_binary_to_Z	40
Coq.ZArith.Zdigits.Z_to_two_compl_to_Z	40
Coq.ZArith.BinInt.Z.eq_dec	40
Coq.ZArith.BinInt.Z.pos_sub_spec	40
Coq.ZArith.BinInt.Z.pos_sub_discr	40
Coq.ZArith.BinInt.Z.pos_sub_diag	40	0.0.0.0.1.0.0.0.1.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite ?Pos.compare_xI_xI, ?Pos.compare_xO_xI, ?Pos.compare_xI_xO, ?Pos.compare_xO_xO, IHp; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.284074068069	199
Coq.ZArith.BinInt.Z.pos_sub_lt	40
Coq.ZArith.BinInt.Z.pos_sub_gt	40
Coq.ZArith.BinInt.Z.pos_sub_opp	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_0_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_0_r	40	0	search with cache (only 1: now destruct n).	0.00649309158325	1
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_1_l	40	0	search with cache (only 1: now destruct n).	0.0066089630127	1
Coq.ZArith.BinInt.Z.Private_BootStrap.add_comm	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_add_distr	40
Coq.ZArith.BinInt.Z.Private_BootStrap.opp_inj	40
Coq.ZArith.BinInt.Z.Private_BootStrap.pos_sub_add	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_assoc	40
Coq.ZArith.BinInt.Z.Private_BootStrap.add_opp_diag_r	40	0.0.0.0.0.2.13	search with cache (only 1: destruct n; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl; only 1: simpl; only 1: now rewrite pos_sub_spec, Pos.compare_refl).	0.484336137772	578
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_opp_r	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_pos	40
Coq.ZArith.BinInt.Z.Private_BootStrap.mul_add_distr_r	40
Coq.ZArith.BinInt.Z.one_succ	40	2	search with cache (only 1: trivial).	0.00651907920837	3
Coq.ZArith.BinInt.Z.two_succ	40	0	search with cache (only 1: reflexivity).	0.00594091415405	1
Coq.ZArith.BinInt.Z.add_0_l	40	0	search with cache (only 1: now destruct n).	0.00671315193176	1
Coq.ZArith.BinInt.Z.add_succ_l	40
Coq.ZArith.BinInt.Z.opp_0	40	0.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00781583786011	2
Coq.ZArith.BinInt.Z.opp_succ	40	0.0.0.4.0.0.1.0	search with cache (only 1: destruct n; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct p; only 1: trivial; only 1: trivial; only 1: reflexivity).	1.78551101685	1058
Coq.ZArith.BinInt.Z.succ_pred	40
Coq.ZArith.BinInt.Z.pred_succ	40	0.0	search with cache (only 1: unfold succ, pred; only 1: now rewrite <- add_assoc, add_opp_diag_r, add_0_r).	0.00891208648682	2
Coq.ZArith.BinInt.Z.sub_0_r	40	0	search with cache (only 1: now destruct n).	0.00714802742004	1
Coq.ZArith.BinInt.Z.sub_succ_r	40
Coq.ZArith.BinInt.Z.mul_0_l	40	0	search with cache (only 1: now destruct n).	0.00714707374573	1
Coq.ZArith.BinInt.Z.mul_succ_l	40
Coq.ZArith.BinInt.Z.eqb_eq	40
Coq.ZArith.BinInt.Z.ltb_lt	40
Coq.ZArith.BinInt.Z.leb_le	40
Coq.ZArith.BinInt.Z.compare_eq_iff	40
Coq.ZArith.BinInt.Z.compare_sub	40
Coq.ZArith.BinInt.Z.compare_antisym	40
Coq.ZArith.BinInt.Z.compare_lt_iff	40	0.0	search with cache (only 1: unfold ltb, lt; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.0115919113159	2
Coq.ZArith.BinInt.Z.compare_le_iff	40	0.1	search with cache (only 1: unfold leb, le; only 1: now rewrite N.compare_antisym, CompOpp_iff).	0.175109863281	50
Coq.ZArith.BinInt.Z.lt_succ_r	40
Coq.ZArith.BinInt.Z.max_l	40
Coq.ZArith.BinInt.Z.max_r	40
Coq.ZArith.BinInt.Z.min_l	40
Coq.ZArith.BinInt.Z.min_r	40	0.0.0.1.1.0	search with cache (only 1: unfold le, min; only 1: rewrite (compare_antisym n m); only 1: case compare_spec; only 1: intuition; only 1: intuition; only 1: intuition).	0.365839004517	128
Coq.ZArith.BinInt.Z.peano_ind	40
Coq.ZArith.BinInt.Z.bi_induction	40
Coq.ZArith.BinInt.Z.abs_eq	40
Coq.ZArith.BinInt.Z.abs_neq	40	0.1.0.0	search with cache (only 1: destruct n; only 1: trivial; only 1: now destruct 1; only 1: trivial).	0.0130579471588	5
Coq.ZArith.BinInt.Z.sgn_null	40	7.5.5.1.1.3	search with cache (only 1: destruct n; only 1: auto with *; only 1: intros; only 1: now f_equiv; only 1: intros; only 1: now f_equiv).	2.0104238987	2439
Coq.ZArith.BinInt.Z.sgn_pos	40	2.0.4.2	search with cache (only 1: destruct n; only 1: now subst; only 1: trivial; only 1: now subst).	0.0873730182648	88
Coq.ZArith.BinInt.Z.sgn_neg	40	0	search with cache (only 1: now destruct n).	0.0107700824738	1
Coq.ZArith.BinInt.Z.pow_0_r	40	0	search with cache (only 1: now destruct n).	0.00707387924194	1
Coq.ZArith.BinInt.Z.pow_succ_r	40
Coq.ZArith.BinInt.Z.pow_neg_r	40	0.4.0.0.2.1	search with cache (only 1: destruct m as [| m| m]; only 1: simpl; only 1: now destruct n; only 1: simpl; only 1: now destruct n; only 1: now destruct 1 || intros _).	0.463566064835	306
Coq.ZArith.BinInt.Z.pow_pos_fold	40	0	search with cache (only 1: trivial).	0.00600790977478	1
Coq.ZArith.BinInt.Z.square_spec	40
Coq.ZArith.BinInt.Z.sqrtrem_spec	40
Coq.ZArith.BinInt.Z.sqrt_spec	40
Coq.ZArith.BinInt.Z.sqrt_neg	40	1	search with cache (only 1: now destruct n).	0.0635340213776	66
Coq.ZArith.BinInt.Z.sqrtrem_sqrt	40
Coq.ZArith.BinInt.Z.log2_spec	40
Coq.ZArith.BinInt.Z.log2_nonpos	40	0	search with cache (only 1: now destruct n).	0.00822997093201	1
Coq.ZArith.BinInt.Z.even_spec	40
Coq.ZArith.BinInt.Z.odd_spec	40
Coq.ZArith.BinInt.Z.double_spec	40	0	search with cache (only 1: now destruct n as [| [| | ]| [| | ]]).	0.0085871219635	1
Coq.ZArith.BinInt.Z.succ_double_spec	40	7.0	search with cache (only 1: simpl; only 1: now destruct n).	0.0450508594513	48
Coq.ZArith.BinInt.Z.pred_double_spec	40	0	search with cache (only 1: now destruct n).	0.00745511054993	1
Coq.ZArith.BinInt.Z.pos_div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_eucl_eq	40
Coq.ZArith.BinInt.Z.div_mod	40
Coq.ZArith.BinInt.Z.pos_div_eucl_bound	40
Coq.ZArith.BinInt.Z.mod_pos_bound	40
Coq.ZArith.BinInt.Z.mod_neg_bound	40
Coq.ZArith.BinInt.Z.quotrem_eq	40
Coq.ZArith.BinInt.Z.quot_rem'	40
Coq.ZArith.BinInt.Z.quot_rem	40	0.0.1.0.0.0.0.0	search with cache (only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: rewrite mul_comm; only 1: generalize (quotrem_eq a b); only 1: unfold quot, rem; only 1: now destruct quotrem).	0.127631187439	24
Coq.ZArith.BinInt.Z.rem_bound_pos	40
Coq.ZArith.BinInt.Z.rem_opp_l'	40
Coq.ZArith.BinInt.Z.rem_opp_r'	40
Coq.ZArith.BinInt.Z.rem_opp_l	40
Coq.ZArith.BinInt.Z.rem_opp_r	40
Coq.ZArith.BinInt.Z.divide_Zpos	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_r	40
Coq.ZArith.BinInt.Z.divide_Zpos_Zneg_l	40
Coq.ZArith.BinInt.Z.ggcd_gcd	40
Coq.ZArith.BinInt.Z.ggcd_correct_divisors	40
Coq.ZArith.BinInt.Z.gcd_divide_l	40
Coq.ZArith.BinInt.Z.gcd_divide_r	40
Coq.ZArith.BinInt.Z.gcd_greatest	40
Coq.ZArith.BinInt.Z.gcd_nonneg	40
Coq.ZArith.BinInt.Z.ggcd_opp	40
Coq.ZArith.BinInt.Z.testbit_of_N	40
Coq.ZArith.BinInt.Z.testbit_of_N'	40	1.0.0.0.1.0.0.0.0.0.0.0.0	search with cache (only 1: destruct a as [| a], n; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a; only 1: simpl; only 1: trivial; only 1: simpl; only 1: now destruct a).	3.30245399475	2659
Coq.ZArith.BinInt.Z.testbit_Zpos	40	1.0.0.0.0.0.0	search with cache (only 1: intro Hn; only 1: rewrite <- testbit_of_N; only 1: f_equal; only 1: destruct n; only 1: trivial; only 1: trivial; only 1: now destruct Hn).	0.0222251415253	8
Coq.ZArith.BinInt.Z.testbit_Zneg	40
Coq.ZArith.BinInt.Z.div2_spec	40	1	search with cache (only 1: reflexivity).	0.00718188285828	2
Coq.ZArith.BinInt.Z.testbit_0_l	40	0.0.0.2.3.0.7	search with cache (only 1: destruct n as [| n| n]; only 1: unfold testbit; only 1: split; only 1: unfold testbit; only 1: trivial; only 1: unfold testbit; only 1: trivial).	0.158347845078	387
Coq.ZArith.BinInt.Z.testbit_neg_r	40	0	search with cache (only 1: now destruct n).	0.0123519897461	1
Coq.ZArith.BinInt.Z.testbit_odd_0	40
Coq.ZArith.BinInt.Z.testbit_even_0	40	0	search with cache (only 1: now destruct a as [| a| [a| a| ]]).	0.0078489780426	1
Coq.ZArith.BinInt.Z.testbit_odd_succ	40
Coq.ZArith.BinInt.Z.testbit_even_succ	40
Coq.ZArith.BinInt.Z.shiftr_spec_aux	40
Coq.ZArith.BinInt.Z.shiftl_spec_low	40
Coq.ZArith.BinInt.Z.shiftl_spec_high	40
Coq.ZArith.BinInt.Z.shiftr_spec	40
Coq.ZArith.BinInt.Z.lor_spec	40
Coq.ZArith.BinInt.Z.land_spec	40
Coq.ZArith.BinInt.Z.ldiff_spec	40
Coq.ZArith.BinInt.Z.lxor_spec	40
Coq.ZArith.BinInt.Z.gt_lt_iff	40
Coq.ZArith.BinInt.Z.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0106182098389	2
Coq.ZArith.BinInt.Z.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00527501106262	1
Coq.ZArith.BinInt.Z.ge_le_iff	40	18.7.5.1.3	search with cache (only 1: split; only 1: intros Hb; only 1: apply le_ngt; only 1: trivial; only 1: apply le_ngt).	29.0669038296	40196
Coq.ZArith.BinInt.Z.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0112800598145	2
Coq.ZArith.BinInt.Z.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.00544619560242	1
Coq.ZArith.BinInt.Z.gtb_ltb	40
Coq.ZArith.BinInt.Z.geb_leb	40
Coq.ZArith.BinInt.Z.gtb_lt	40	0.2.1.0	search with cache (only 1: unfold gtb, ltb; only 1: unfold lt, gt; only 1: rewrite compare_antisym; only 1: now case compare).	0.12845492363	38
Coq.ZArith.BinInt.Z.geb_le	40	0.5.0.4	search with cache (only 1: unfold le, ge; only 1: unfold geb, leb; only 1: rewrite compare_antisym; only 1: now case compare).	0.500744819641	371
Coq.ZArith.BinInt.Z.gtb_spec	40
Coq.ZArith.BinInt.Z.geb_spec	40
Coq.ZArith.BinInt.Z.add_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_l	40
Coq.ZArith.BinInt.Z.mul_reg_r	40
Coq.ZArith.BinInt.Z.opp_eq_mul_m1	40
Coq.ZArith.BinInt.Z.add_diag	40
Coq.ZArith.BinInt.Z.compare_opp	40
Coq.ZArith.BinInt.Z.add_compare_mono_l	40
Coq.ZArith.BinInt.Z.testbit_mod_pow2	40
Coq.ZArith.BinInt.Z.testbit_ones	40
Coq.ZArith.BinInt.Z.testbit_ones_nonneg	40	0.0.0.0.12	search with cache (only 1: destruct (ltb_spec i n); only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial; only 1: rewrite ?testbit_neg_r, ?ones_spec_low, ?ones_spec_high by auto; only 1: trivial).	10.3983640671	4060
Coq.ZArith.BinInt.Pos2Z.id	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.0076048374176	2
Coq.ZArith.BinInt.Pos2Z.inj	40
Coq.ZArith.BinInt.Pos2Z.inj_iff	40	6.11.6.0.5	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: rewrite H; only 1: trivial).	0.463958978653	1621
Coq.ZArith.BinInt.Pos2Z.is_pos	40	2	search with cache (only 1: reflexivity).	0.00830101966858	3
Coq.ZArith.BinInt.Pos2Z.is_nonneg	40	9	search with cache (only 1: now f_equal).	0.0892090797424	10
Coq.ZArith.BinInt.Pos2Z.inj_1	40	0	search with cache (only 1: now f_equal).	0.00571703910828	1
Coq.ZArith.BinInt.Pos2Z.inj_xO	40	8.0	search with cache (only 1: change 2 with (1 + 1); only 1: reflexivity).	0.010596036911	12
Coq.ZArith.BinInt.Pos2Z.inj_xI	40	0	search with cache (only 1: reflexivity).	0.00583004951477	1
Coq.ZArith.BinInt.Pos2Z.inj_succ	40
Coq.ZArith.BinInt.Pos2Z.inj_add	40	4	search with cache (only 1: split).	0.0068199634552	5
Coq.ZArith.BinInt.Pos2Z.inj_sub	40
Coq.ZArith.BinInt.Pos2Z.inj_sub_max	40
Coq.ZArith.BinInt.Pos2Z.inj_pred	40
Coq.ZArith.BinInt.Pos2Z.inj_mul	40	0	search with cache (only 1: reflexivity).	0.00618982315063	1
Coq.ZArith.BinInt.Pos2Z.inj_pow_pos	40
Coq.ZArith.BinInt.Pos2Z.inj_pow	40	0	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00619506835938	1
Coq.ZArith.BinInt.Pos2Z.inj_square	40	2.0	search with cache (only 1: simpl; only 1: reflexivity).	0.00664806365967	4
Coq.ZArith.BinInt.Pos2Z.inj_compare	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00650215148926	2
Coq.ZArith.BinInt.Pos2Z.inj_leb	40	0	search with cache (only 1: reflexivity).	0.00526309013367	1
Coq.ZArith.BinInt.Pos2Z.inj_ltb	40	0	search with cache (only 1: reflexivity).	0.00529909133911	1
Coq.ZArith.BinInt.Pos2Z.inj_eqb	40	0	search with cache (only 1: reflexivity).	0.00531482696533	1
Coq.ZArith.BinInt.Pos2Z.inj_max	40
Coq.ZArith.BinInt.Pos2Z.inj_min	40
Coq.ZArith.BinInt.Pos2Z.inj_sqrt	40	0	search with cache (only 1: reflexivity).	0.00561785697937	1
Coq.ZArith.BinInt.Pos2Z.inj_gcd	40	1	search with cache (only 1: reflexivity).	0.0053071975708	2
Coq.ZArith.BinInt.Pos2Z.inj_divide	40
Coq.ZArith.BinInt.Pos2Z.inj_testbit	40
Coq.ZArith.BinInt.Pos2Z.inj_neg	40	0	search with cache (only 1: now injection 1).	0.00592088699341	1
Coq.ZArith.BinInt.Pos2Z.inj_neg_iff	40	0.1.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0110509395599	5
Coq.ZArith.BinInt.Pos2Z.inj_pos	40	0	search with cache (only 1: now injection 1).	0.00635504722595	1
Coq.ZArith.BinInt.Pos2Z.inj_pos_iff	40	0.0.0.0	search with cache (only 1: split; only 1: now injection 1; only 1: intros; only 1: now f_equal).	0.0111680030823	4
Coq.ZArith.BinInt.Pos2Z.neg_is_neg	40	0	search with cache (only 1: reflexivity).	0.00569796562195	1
Coq.ZArith.BinInt.Pos2Z.neg_is_nonpos	40	1	search with cache (only 1: easy).	0.00803685188293	2
Coq.ZArith.BinInt.Pos2Z.pos_is_pos	40	0	search with cache (only 1: reflexivity).	0.005854845047	1
Coq.ZArith.BinInt.Pos2Z.pos_is_nonneg	40	0	search with cache (only 1: easy).	0.00774002075195	1
Coq.ZArith.BinInt.Pos2Z.neg_le_pos	40	0	search with cache (only 1: easy).	0.00897097587585	1
Coq.ZArith.BinInt.Pos2Z.neg_lt_pos	40	0	search with cache (only 1: easy).	0.00664091110229	1
Coq.ZArith.BinInt.Pos2Z.neg_le_neg	40	1.0.35	search with cache (only 1: unfold Z.le, Z.ge; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	1.20692491531	1460
Coq.ZArith.BinInt.Pos2Z.neg_lt_neg	40	0.0.37	search with cache (only 1: unfold Z.lt, Z.gt; only 1: simpl; only 1: now rewrite <- Pos.compare_antisym).	1.15749692917	1575
Coq.ZArith.BinInt.Pos2Z.pos_le_pos	40	5.0.0.0	search with cache (only 1: intros; only 1: unfold Z.le; only 1: simpl; only 1: now f_equal).	0.0116040706635	9
Coq.ZArith.BinInt.Pos2Z.pos_lt_pos	40	6.0.0.0	search with cache (only 1: intros; only 1: unfold Z.lt; only 1: simpl; only 1: now destruct (p - q)%positive).	0.0117800235748	10
Coq.ZArith.BinInt.Pos2Z.neg_xO	40	0	search with cache (only 1: reflexivity).	0.00543999671936	1
Coq.ZArith.BinInt.Pos2Z.neg_xI	40	0	search with cache (only 1: reflexivity).	0.00552892684937	1
Coq.ZArith.BinInt.Pos2Z.pos_xO	40	0	search with cache (only 1: reflexivity).	0.00527310371399	1
Coq.ZArith.BinInt.Pos2Z.pos_xI	40	0	search with cache (only 1: reflexivity).	0.00558710098267	1
Coq.ZArith.BinInt.Pos2Z.opp_neg	40	1.0	search with cache (only 1: simpl; only 1: now f_equal).	0.00727105140686	3
Coq.ZArith.BinInt.Pos2Z.opp_pos	40	0	search with cache (only 1: reflexivity).	0.00517702102661	1
Coq.ZArith.BinInt.Pos2Z.add_neg_neg	40	0	search with cache (only 1: reflexivity).	0.00524687767029	1
Coq.ZArith.BinInt.Pos2Z.add_pos_neg	40	2	search with cache (only 1: reflexivity).	0.045422077179	36
Coq.ZArith.BinInt.Pos2Z.add_neg_pos	40	0	search with cache (only 1: reflexivity).	0.00540900230408	1
Coq.ZArith.BinInt.Pos2Z.add_pos_pos	40	0	search with cache (only 1: reflexivity).	0.00531697273254	1
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_r	40
Coq.ZArith.BinInt.Pos2Z.divide_pos_neg_l	40
Coq.ZArith.BinInt.Pos2Z.testbit_neg	40
Coq.ZArith.BinInt.Pos2Z.testbit_pos	40	0	search with cache (only 1: apply Z.testbit_Zpos).	0.00612092018127	1
Coq.ZArith.BinInt.Z2Pos.id	40
Coq.ZArith.BinInt.Z2Pos.inj	40
Coq.ZArith.BinInt.Z2Pos.inj_iff	40	2.5.0.0.7.4	search with cache (only 1: split; only 1: apply Pos2Z.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: now f_equal).	17.8725099564	12161
Coq.ZArith.BinInt.Z2Pos.to_pos_nonpos	40	0	search with cache (only 1: now destruct x).	0.00822710990906	1
Coq.ZArith.BinInt.Z2Pos.inj_1	40	0	search with cache (only 1: reflexivity).	0.00528597831726	1
Coq.ZArith.BinInt.Z2Pos.inj_double	40	0	search with cache (only 1: now destruct x).	0.00993299484253	1
Coq.ZArith.BinInt.Z2Pos.inj_succ_double	40	0	search with cache (only 1: now destruct x).	0.0103769302368	1
Coq.ZArith.BinInt.Z2Pos.inj_succ	40	1.0.0.0.0.2.1	search with cache (only 1: destruct x; only 1: simpl; only 1: easy; only 1: simpl; only 1: now rewrite Pos.add_1_r; only 1: simpl; only 1: easy).	0.0801420211792	53
Coq.ZArith.BinInt.Z2Pos.inj_add	40
Coq.ZArith.BinInt.Z2Pos.inj_sub	40
Coq.ZArith.BinInt.Z2Pos.inj_pred	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct x; only 1: easy; only 1: simpl; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: trivial; only 1: easy).	0.166015863419	54
Coq.ZArith.BinInt.Z2Pos.inj_mul	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0961101055145	4
Coq.ZArith.BinInt.Z2Pos.inj_pow	40
Coq.ZArith.BinInt.Z2Pos.inj_pow_pos	40
Coq.ZArith.BinInt.Z2Pos.inj_compare	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0372960567474	14
Coq.ZArith.BinInt.Z2Pos.inj_leb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.030946969986	4
Coq.ZArith.BinInt.Z2Pos.inj_ltb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0310480594635	4
Coq.ZArith.BinInt.Z2Pos.inj_eqb	40	0.0.0.0	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0578570365906	4
Coq.ZArith.BinInt.Z2Pos.inj_max	40
Coq.ZArith.BinInt.Z2Pos.inj_min	40
Coq.ZArith.BinInt.Z2Pos.inj_sqrt	40	0.0.0.1	search with cache (only 1: destruct x; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.0112788677216	5
Coq.ZArith.BinInt.Z2Pos.inj_gcd	40	0.0.0.1	search with cache (only 1: destruct x; only 1: easy || now destruct y; only 1: easy || now destruct y; only 1: easy || now destruct y).	0.0604331493378	29
Coq.ZArith.BinInt.Zplus_minus_eq	40
Coq.ZArith.BinInt.Zpos_eq	40	0.2	search with cache (only 1: intros; only 1: now f_equal).	0.00830602645874	4
Coq.ZArith.BinInt.ZL0	40	1	search with cache (only 1: reflexivity).	0.00539088249207	2
Coq.ZArith.BinInt.Zplus_diag_eq_mult_2	40	9.0	search with cache (only 1: change 2 with (1 + 1); only 1: now Z.nzsimpl').	0.134523868561	33
Coq.ZArith.BinInt.Z_eq_mult	40	15.0.2	search with cache (only 1: intros EQ; only 1: rewrite EQ in *; only 1: now destruct n).	0.262140989304	567
Coq.ZArith.Zcomplements.floor_gt0	40	0.3.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: easy).	0.0189719200134	6
Coq.ZArith.Zcomplements.floor_ok	40
Coq.ZArith.Zcomplements.Z_lt_abs_rec	40
Coq.ZArith.Zcomplements.Z_lt_abs_induction	40
Coq.ZArith.Zcomplements.Zcase_sign	40
Coq.ZArith.Zcomplements.sqr_pos	40	30.3	search with cache (only 1: Z.swap_greater; only 1: now induction n).	3.84342098236	5613
Coq.ZArith.Zcomplements.Zlength_correct	40
Coq.ZArith.Zcomplements.Zlength_nil	40	0.0	search with cache (only 1: unfold Zlength; only 1: auto with zarith).	0.0147950649261	2
Coq.ZArith.Zcomplements.Zlength_cons	40
Coq.ZArith.Zcomplements.Zlength_nil_inv	40	2.0.8.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: assert (H : forall (l : list A) acc, Zlength_aux acc A l = acc + Z.of_nat (length l)); only 1: clear l; only 1: induction l; only 1: auto with zarith; only 1: intros; only 1: simpl length; only 1: simpl Zlength_aux; only 1: rewrite IHl, Nat2Z.inj_succ, Z.add_succ_comm; only 1: auto; only 1: unfold Zlength; only 1: induction l; only 1: now rewrite H; only 1: now rewrite H).	27.1500229836	30560
Coq.ZArith.Zeven.Zeven_equiv	40
Coq.ZArith.Zeven.Zodd_equiv	40
Coq.ZArith.Zeven.Zeven_bool_iff	40
Coq.ZArith.Zeven.Zodd_bool_iff	40
Coq.ZArith.Zeven.Zodd_even_bool	40
Coq.ZArith.Zeven.Zeven_odd_bool	40
Coq.ZArith.Zeven.Zeven_odd_dec	40
Coq.ZArith.Zeven.Zeven_dec	40	0.0.0.0.1.0.0.0.0.1.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right; only 1: simpl; only 1: destruct p; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.14870715141	1306
Coq.ZArith.Zeven.Zodd_dec	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: destruct p; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right; only 1: simpl; only 1: now left || now right).	8.25595998764	6464
Coq.ZArith.Zeven.Zeven_not_Zodd	40	1.0.1.0.1.0.0.1.0.1.0.1.0.0.1.0.0	search with cache (only 1: destruct n as [| p| p]; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: destruct p; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	20.257267952	25478
Coq.ZArith.Zeven.Zodd_not_Zeven	40	0.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd; only 1: destruct Z.odd; only 1: intuition; only 1: intuition).	0.0227909088135	5
Coq.ZArith.Zeven.Zeven_Sn	40
Coq.ZArith.Zeven.Zodd_Sn	40
Coq.ZArith.Zeven.Zeven_pred	40
Coq.ZArith.Zeven.Zodd_pred	40
Coq.ZArith.Zeven.Zeven_div2	40
Coq.ZArith.Zeven.Zodd_div2	40
Coq.ZArith.Zeven.Zquot2_odd_eqn	40
Coq.ZArith.Zeven.Zeven_quot2	40	3.0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Hn; only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.10772895813	11
Coq.ZArith.Zeven.Zodd_quot2	40	0	search with cache (only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.0165960788727	1
Coq.ZArith.Zeven.Zodd_quot2_neg	40	5.1.0	search with cache (only 1: intros Hn Hn'; only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.761496067047	118
Coq.ZArith.Zeven.Zquot2_opp	40	0.7	search with cache (only 1: rewrite (Zquot2_odd_eqn n)  at 1; only 1: now destruct n as [| [p| p| ]| [p| p| ]]).	0.029256105423	9
Coq.ZArith.Zeven.Zquot2_quot	40
Coq.ZArith.Zeven.Z_modulo_2	40
Coq.ZArith.Zeven.Zsplit2	40
Coq.ZArith.Zeven.Zeven_ex	40	0.0.1	search with cache (only 1: intros Hn; only 1: exists (Z.div2 n); only 1: exact (Zeven_div2 n Hn)).	0.0274949073792	20
Coq.ZArith.Zeven.Zodd_ex	40	0.0.1.0.2	search with cache (only 1: boolify_even_odd; only 1: intros Hn; only 1: exists (Z.div2 n); only 1: rewrite (Zdiv2_odd_eqn n)  at 1; only 1: now rewrite Hn).	0.104032993317	29
Coq.ZArith.Zeven.Zeven_2p	40	0.0.0.0.0.0.4.1.4.2	search with cache (only 1: boolify_even_odd; only 1: change 2 with (1 + 1); only 1: simpl; only 1: destruct p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	1.03660488129	1492
Coq.ZArith.Zeven.Zodd_2p_plus_1	40	4.0.0.5.2.3.6.27.2	search with cache (only 1: boolify_even_odd; only 1: change 2 with (1 + 1); only 1: destruct p; only 1: now Z.nzsimpl'; only 1: Morphisms.f_equiv; only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: now Z.nzsimpl').	8.912774086	9330
Coq.ZArith.Zeven.Zeven_plus_Zodd	40
Coq.ZArith.Zeven.Zeven_plus_Zeven	40	0.0.0.1.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0538580417633	16
Coq.ZArith.Zeven.Zodd_plus_Zeven	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0323941707611	4
Coq.ZArith.Zeven.Zodd_plus_Zodd	40	0.0.0.0	search with cache (only 1: boolify_even_odd; only 1: rewrite <- Z.negb_odd, Bool.negb_true_iff; only 1: intros Ha Hb; only 1: now rewrite Z.odd_add, Ha, Hb).	0.0340189933777	4
Coq.ZArith.Zeven.Zeven_mult_Zeven_l	40
Coq.ZArith.Zeven.Zeven_mult_Zeven_r	40
Coq.ZArith.Zeven.Zodd_mult_Zodd	40
Coq.ZArith.Zmisc.iter_nat_of_Z	40
Coq.ZArith.Znumtheory.Zdivide_opp_r	40
Coq.ZArith.Znumtheory.Zdivide_opp_r_rev	40	0	search with cache (only 1: apply Z.divide_opp_r).	0.00735211372375	1
Coq.ZArith.Znumtheory.Zdivide_opp_l	40
Coq.ZArith.Znumtheory.Zdivide_opp_l_rev	40	0	search with cache (only 1: apply Z.divide_opp_l).	0.00657391548157	1
Coq.ZArith.Znumtheory.Zdivide_Zabs_l	40	0.6.0.3.0.17	search with cache (only 1: case a; only 1: apply Z.divide_opp_l; only 1: auto; only 1: simpl; only 1: intros p; only 1: apply Z.divide_opp_l).	9.0387570858	16557
Coq.ZArith.Znumtheory.Zdivide_Zabs_inv_l	40	0	search with cache (only 1: apply Z.divide_abs_l).	0.00613903999329	1
Coq.ZArith.Znumtheory.Zmult_one	40
Coq.ZArith.Znumtheory.Zdivide_bounds	40
Coq.ZArith.Znumtheory.Zmod_divide	40	0.0.2.0.1.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: easy; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	0.060357093811	30
Coq.ZArith.Znumtheory.Zdivide_mod	40	0.1.0.7.1	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.mod_divide; only 1: trivial; only 1: trivial).	1.14725708961	875
Coq.ZArith.Znumtheory.Zdivide_dec	40
Coq.ZArith.Znumtheory.Z_lt_neq	40	12	search with cache (only 1: Z.order).	0.409912824631	138
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq	40
Coq.ZArith.Znumtheory.Zdivide_Zdiv_eq_2	40
Coq.ZArith.Znumtheory.Zdivide_le	40	15.0	search with cache (only 1: intros; only 1: now apply Z.divide_pos_le).	1.20993304253	790
Coq.ZArith.Znumtheory.Zdivide_Zdiv_lt_pos	40
Coq.ZArith.Znumtheory.Zmod_div_mod	40
Coq.ZArith.Znumtheory.Zmod_divide_minus	40
Coq.ZArith.Znumtheory.Zdivide_mod_minus	40
Coq.ZArith.Znumtheory.Zis_gcd_sym	40
Coq.ZArith.Znumtheory.Zis_gcd_0	40	0.3.4.1.1	search with cache (only 1: intros; only 1: constructor; only 1: auto with zarith; only 1: intuition; only 1: intuition).	0.234102010727	301
Coq.ZArith.Znumtheory.Zis_gcd_1	40	0.0.5.1	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0189669132233	15
Coq.ZArith.Znumtheory.Zis_gcd_refl	40	0.0.0.0	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0085620880127	4
Coq.ZArith.Znumtheory.Zis_gcd_minus	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0276379585266	5
Coq.ZArith.Znumtheory.Zis_gcd_opp	40	0.0.0.0.0	search with cache (only 1: induction 1; only 1: constructor; only 1: intuition; only 1: intuition; only 1: intuition).	0.0487561225891	5
Coq.ZArith.Znumtheory.Zis_gcd_0_abs	40
Coq.ZArith.Znumtheory.Zis_gcd_unique	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_for_euclid2	40
Coq.ZArith.Znumtheory.euclid_rec	40
Coq.ZArith.Znumtheory.euclid	40
Coq.ZArith.Znumtheory.Zis_gcd_uniqueness_apart_sign	40	0.0.0.0.0.0	search with cache (only 1: intros a b c d [Hc1 Hc2 Hc3] [Hd1 Hd2 Hd3]; only 1: assert (c | d) by auto; only 1: assert (d | c) by auto; only 1: apply Z.divide_antisym; only 1: auto; only 1: auto).	0.0595490932465	6
Coq.ZArith.Znumtheory.Zis_gcd_bezout	40
Coq.ZArith.Znumtheory.Zis_gcd_mult	40
Coq.ZArith.Znumtheory.rel_prime_bezout	40
Coq.ZArith.Znumtheory.bezout_rel_prime	40
Coq.ZArith.Znumtheory.Gauss	40
Coq.ZArith.Znumtheory.rel_prime_mult	40
Coq.ZArith.Znumtheory.rel_prime_cross_prod	40
Coq.ZArith.Znumtheory.Zis_gcd_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_sym	40	0.2	search with cache (only 1: intros; only 1: now apply Zis_gcd_sym).	0.0174641609192	15
Coq.ZArith.Znumtheory.rel_prime_div	40
Coq.ZArith.Znumtheory.rel_prime_1	40	0.0.0.3	search with cache (only 1: constructor; only 1: auto with zarith; only 1: auto with zarith; only 1: auto with zarith).	0.0241949558258	16
Coq.ZArith.Znumtheory.not_rel_prime_0	40
Coq.ZArith.Znumtheory.rel_prime_mod	40
Coq.ZArith.Znumtheory.rel_prime_mod_rev	40
Coq.ZArith.Znumtheory.Zrel_prime_neq_mod_0	40
Coq.ZArith.Znumtheory.prime_divisors	40
Coq.ZArith.Znumtheory.prime_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_le_prime	40	1.2.5	search with cache (only 1: intros a b; only 1: intros (H1, H2) H3; only 1: intuition).	1.49617195129	287
Coq.ZArith.Znumtheory.prime_mult	40
Coq.ZArith.Znumtheory.not_prime_0	40	0.8.3	search with cache (only 1: destruct 1; only 1: contradict H; only 1: discriminate).	0.321474075317	332
Coq.ZArith.Znumtheory.not_prime_1	40	0.23.2	search with cache (only 1: destruct 1; only 1: contradict H; only 1: apply Z.lt_irrefl).	1.31924891472	1175
Coq.ZArith.Znumtheory.prime_2	40
Coq.ZArith.Znumtheory.prime_3	40
Coq.ZArith.Znumtheory.prime_ge_2	40	22.0.17	search with cache (only 1: simple induction 1; only 1: intros; only 1: now apply (Zlt_le_succ 1)).	1.8748061657	2762
Coq.ZArith.Znumtheory.Z_0_1_more	40
Coq.ZArith.Znumtheory.prime_alt	40
Coq.ZArith.Znumtheory.square_not_prime	40
Coq.ZArith.Znumtheory.prime_div_prime	40
Coq.ZArith.Znumtheory.Zgcd_is_gcd	40
Coq.ZArith.Znumtheory.Zgcd_spec	40
Coq.ZArith.Znumtheory.Zdivide_Zgcd	40	1.0.5.2	search with cache (only 1: intros a b c Hb Hc; only 1: apply Z.gcd_greatest; only 1: auto with zarith; only 1: auto with zarith).	0.715943098068	125
Coq.ZArith.Znumtheory.Zis_gcd_gcd	40
Coq.ZArith.Znumtheory.Zgcd_div_swap0	40
Coq.ZArith.Znumtheory.Zgcd_div_swap	40
Coq.ZArith.Znumtheory.Zgcd_ass	40
Coq.ZArith.Znumtheory.Zgcd_1_rel_prime	40
Coq.ZArith.Znumtheory.rel_prime_dec	40
Coq.ZArith.Znumtheory.prime_dec_aux	40
Coq.ZArith.Znumtheory.prime_dec	40
Coq.ZArith.Znumtheory.not_prime_divide	40
Coq.ZArith.Zdiv.Z_div_mod_POS	40
Coq.ZArith.Zdiv.Z_div_mod	40
Coq.ZArith.Zdiv.Remainder_equiv	40
Coq.ZArith.Zdiv.Z_div_mod_full	40
Coq.ZArith.Zdiv.Z_mod_remainder	40	0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros Hb; only 1: unfold Z.modulo; only 1: generalize (Z.div_eucl_eq a b Hb), (Z.mod_pos_bound a b), (Z.mod_neg_bound a b); only 1: unfold Z.modulo; only 1: destruct Z.div_eucl as (q, r); only 1: intros EQ POS NEG; only 1: red; only 1: destruct b; only 1: now destruct Hb; only 1: left; only 1: now apply POS; only 1: right; only 1: now apply NEG).	2.58376502991	1148
Coq.ZArith.Zdiv.Z_div_mod_eq	40
Coq.ZArith.Zdiv.Zmod_eq_full	40
Coq.ZArith.Zdiv.Zmod_eq	40	0.8.2.1	search with cache (only 1: rewrite Z.mul_comm; only 1: intros; only 1: assert (Hb' : b <> 0) by now destruct b; only 1: now apply Z.mod_eq).	2.35056495667	1300
Coq.ZArith.Zdiv.Zdiv_eucl_exist	40
Coq.ZArith.Zdiv.Zdiv_mod_unique	40
Coq.ZArith.Zdiv.Zdiv_unique	40
Coq.ZArith.Zdiv.Zmod_unique	40
Coq.ZArith.Zdiv.Zmod_0_l	40	8.4	search with cache (only 1: intros; only 1: trivial).	0.0944788455963	140
Coq.ZArith.Zdiv.Zmod_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0140628814697	4
Coq.ZArith.Zdiv.Zdiv_0_l	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0139801502228	4
Coq.ZArith.Zdiv.Zdiv_0_r	40	0.0.0.0	search with cache (only 1: destruct a; only 1: auto; only 1: auto; only 1: auto).	0.0146770477295	4
Coq.ZArith.Zdiv.Zmod_1_r	40
Coq.ZArith.Zdiv.Zdiv_1_r	40
Coq.ZArith.Zdiv.Z_mod_same_full	40
Coq.ZArith.Zdiv.Z_mod_mult	40
Coq.ZArith.Zdiv.Z_div_pos	40
Coq.ZArith.Zdiv.Z_div_ge0	40	0.0.0.7.0	search with cache (only 1: intros; only 1: Z.swap_greater; only 1: apply Z.div_pos; only 1: auto using Z.gt_lt; only 1: auto using Z.gt_lt).	0.324090003967	191
Coq.ZArith.Zdiv.Z_div_lt	40
Coq.ZArith.Zdiv.Z_div_ge	40
Coq.ZArith.Zdiv.Z_div_le	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Z.div_le_mono; only 1: auto using Z.gt_lt, Z.ge_le; only 1: auto using Z.gt_lt, Z.ge_le).	0.0142071247101	4
Coq.ZArith.Zdiv.Z_mult_div_ge	40
Coq.ZArith.Zdiv.Z_mult_div_ge_neg	40
Coq.ZArith.Zdiv.Z_div_exact_full_1	40
Coq.ZArith.Zdiv.Z_div_exact_full_2	40	0.4.0.0.0	search with cache (only 1: intros a b; only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: auto).	0.0189259052277	9
Coq.ZArith.Zdiv.Zmod_le	40
Coq.ZArith.Zdiv.Zdiv_lt_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_upper_bound	40
Coq.ZArith.Zdiv.Zdiv_le_lower_bound	40
Coq.ZArith.Zdiv.Zdiv_le_compat_l	40
Coq.ZArith.Zdiv.Zdiv_sgn	40
Coq.ZArith.Zdiv.Z_mod_plus_full	40
Coq.ZArith.Zdiv.Zdiv_opp_opp	40
Coq.ZArith.Zdiv.Zmod_opp_opp	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_full	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_full	40
Coq.ZArith.Zdiv.Z_mod_zero_opp_r	40
Coq.ZArith.Zdiv.Z_mod_nz_opp_r	40
Coq.ZArith.Zdiv.Z_div_zero_opp_full	40
Coq.ZArith.Zdiv.Z_div_nz_opp_full	40
Coq.ZArith.Zdiv.Z_div_zero_opp_r	40
Coq.ZArith.Zdiv.Z_div_nz_opp_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_r	40
Coq.ZArith.Zdiv.Zdiv_mult_cancel_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_l	40
Coq.ZArith.Zdiv.Zmult_mod_distr_r	40
Coq.ZArith.Zdiv.Zmod_mod	40
Coq.ZArith.Zdiv.Zmult_mod	40
Coq.ZArith.Zdiv.Zplus_mod	40
Coq.ZArith.Zdiv.Zminus_mod	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zplus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zplus_mod, Zmod_mod, <- Zplus_mod; only 1: auto).	0.0111789703369	3
Coq.ZArith.Zdiv.Zminus_mod_idemp_l	40
Coq.ZArith.Zdiv.Zminus_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zminus_mod, Zmod_mod, <- Zminus_mod; only 1: auto).	0.0114290714264	3
Coq.ZArith.Zdiv.Zmult_mod_idemp_l	40
Coq.ZArith.Zdiv.Zmult_mod_idemp_r	40	0.0.0	search with cache (only 1: intros; only 1: rewrite Zmult_mod, Zmod_mod, <- Zmult_mod; only 1: auto).	0.0117430686951	3
Coq.ZArith.Zdiv.eqm_refl	40	6.0	search with cache (only 1: intros; only 1: reflexivity).	0.00944399833679	8
Coq.ZArith.Zdiv.eqm_sym	40	5.0	search with cache (only 1: intros x y H; only 1: now subst).	0.138877868652	7
Coq.ZArith.Zdiv.eqm_trans	40	3.1.15.1.2	search with cache (only 1: unfold eqm; only 1: intros Hr1 Hr2 H; only 1: generalize 1; only 1: intros; only 1: Z.order).	8.33686900139	9144
Coq.ZArith.Zdiv.eqm_setoid	40	10.12.12.46	search with cache (only 1: split; only 1: easy; only 1: easy; only 1: now unfold eqm; intros a b c ->).	5.09339404106	8878
Coq.ZArith.Zdiv.Zplus_eqm	40
Coq.ZArith.Zdiv.Zminus_eqm	40
Coq.ZArith.Zdiv.Zmult_eqm	40
Coq.ZArith.Zdiv.Zopp_eqm	40
Coq.ZArith.Zdiv.Zmod_eqm	40	2.7.1.0	search with cache (only 1: unfold eqm; only 1: intros; only 1: repeat rewrite Zmod_mod; only 1: auto).	0.146792173386	292
Coq.ZArith.Zdiv.Zdiv_Zdiv	40
Coq.ZArith.Zdiv.Zmod_div	40
Coq.ZArith.Zdiv.Zdiv_mult_le	40
Coq.ZArith.Zdiv.Zmod_divides	40
Coq.ZArith.Zdiv.Zmod_odd	40
Coq.ZArith.Zdiv.Zmod_even	40
Coq.ZArith.Zdiv.Zodd_mod	40	0.1.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0136210918427	4
Coq.ZArith.Zdiv.Zeven_mod	40	0.2.0	search with cache (only 1: intros a; only 1: rewrite Zmod_odd, Zodd_even_bool; only 1: now destruct Z.even).	0.0216760635376	15
Coq.ZArith.Zdiv.Z_mod_same	40	2.0.1	search with cache (only 1: intros; only 1: apply Z.mod_same; only 1: now intros ->).	0.011706829071	6
Coq.ZArith.Zdiv.Z_div_same	40
Coq.ZArith.Zdiv.Z_div_plus	40
Coq.ZArith.Zdiv.Z_div_mult	40
Coq.ZArith.Zdiv.Z_mod_plus	40	2.0.0	search with cache (only 1: intros; only 1: apply Z.mod_add; only 1: now intros ->).	0.0169730186462	5
Coq.ZArith.Zdiv.Z_div_exact_1	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: zero_or_not b; only 1: rewrite Z.div_exact; only 1: auto; only 1: trivial).	0.0240199565887	5
Coq.ZArith.Zdiv.Z_div_exact_2	40	0.3.1.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.div_exact; only 1: auto; only 1: zero_or_not b; only 1: easy; only 1: auto).	0.0248968601227	10
Coq.ZArith.Zdiv.Z_mod_zero_opp	40	0.0.0.0.0	search with cache (only 1: intros; only 1: zero_or_not b; only 1: apply Z.mod_opp_l_z; only 1: auto; only 1: auto).	0.0195310115814	5
Coq.ZArith.Zdiv.Zmod_POS_correct	40
Coq.ZArith.Zdiv.Zmod'_correct	40
Coq.ZArith.Zdiv.Zdiv_eucl_extended	40
Coq.ZArith.Zdiv.div_Zdiv	40
Coq.ZArith.Zdiv.mod_Zmod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_wd	40	0	search with cache (only 1: solve_proper).	0.0280759334564	1
Coq.ZArith.Zeuclid.ZEuclid.div_wd	40	0	search with cache (only 1: congruence).	0.0063419342041	1
Coq.ZArith.Zeuclid.ZEuclid.div_mod	40
Coq.ZArith.Zeuclid.ZEuclid.mod_always_pos	40
Coq.ZArith.Zeuclid.ZEuclid.mod_bound_pos	40
Coq.ZArith.Zabs.Zabs_ind	40
Coq.ZArith.Zabs.Zabs_intro	40	8.0	search with cache (only 1: intros; only 1: now destruct n).	0.0149049758911	14
Coq.ZArith.Zabs.Zabs_dec	40
Coq.ZArith.Zabs.Zabs_spec	40
Coq.ZArith.Zabs.Zsgn_spec	40
Coq.ZArith.Zabs.Zabs_nat_le	40
Coq.ZArith.Zabs.Zabs_nat_lt	40
Coq.ZArith.Int.MoreInt.eqb_eq	40
Coq.ZArith.Int.MoreInt.eqb_neq	40
Coq.ZArith.Int.MoreInt.ltb_lt	40
Coq.ZArith.Int.MoreInt.ltb_nlt	40
Coq.ZArith.Int.MoreInt.leb_le	40
Coq.ZArith.Int.MoreInt.leb_nle	40
Coq.ZArith.Int.MoreInt.norm_ei_correct	40
Coq.ZArith.Int.MoreInt.norm_ez_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct	40
Coq.ZArith.Int.MoreInt.norm_ep_correct2	40
Coq.ZArith.Int.Z_as_Int.gt_le_dec	40
Coq.ZArith.Int.Z_as_Int.ge_lt_dec	40
Coq.ZArith.Int.Z_as_Int.i2z_eq	40	4.5	search with cache (only 1: intros; only 1: now f_equal).	0.0159070491791	25
Coq.ZArith.Int.Z_as_Int.i2z_0	40	12	search with cache (only 1: now subst).	0.0108408927917	46
Coq.ZArith.Int.Z_as_Int.i2z_1	40	0	search with cache (only 1: reflexivity).	0.00520205497742	1
Coq.ZArith.Int.Z_as_Int.i2z_2	40	1	search with cache (only 1: reflexivity).	0.00725078582764	2
Coq.ZArith.Int.Z_as_Int.i2z_3	40	0	search with cache (only 1: reflexivity).	0.00533294677734	1
Coq.ZArith.Int.Z_as_Int.i2z_add	40	0	search with cache (only 1: trivial).	0.00575399398804	1
Coq.ZArith.Int.Z_as_Int.i2z_opp	40	1	search with cache (only 1: now destruct n).	0.00737905502319	2
Coq.ZArith.Int.Z_as_Int.i2z_sub	40	0	search with cache (only 1: reflexivity).	0.00564002990723	1
Coq.ZArith.Int.Z_as_Int.i2z_mul	40	0	search with cache (only 1: reflexivity).	0.00551414489746	1
Coq.ZArith.Int.Z_as_Int.i2z_max	40	0	search with cache (only 1: reflexivity).	0.0056939125061	1
Coq.ZArith.Int.Z_as_Int.i2z_eqb	40	0	search with cache (only 1: reflexivity).	0.0056049823761	1
Coq.ZArith.Int.Z_as_Int.i2z_leb	40	0	search with cache (only 1: reflexivity).	0.00559496879578	1
Coq.ZArith.Int.Z_as_Int.i2z_ltb	40	0	search with cache (only 1: reflexivity).	0.00569891929626	1
Coq.ZArith.Zpower.Zpower_nat_0_r	40	0.0	search with cache (only 1: simpl; only 1: trivial).	0.00796580314636	2
Coq.ZArith.Zpower.Zpower_nat_succ_r	40	0	search with cache (only 1: reflexivity).	0.00664496421814	1
Coq.ZArith.Zpower.Zpower_nat_is_exp	40
Coq.ZArith.Zpower.Zpower_pos_nat	40
Coq.ZArith.Zpower.Zpower_nat_Z	40
Coq.ZArith.Zpower.Zpower_nat_Zpower	40	4.3.0.0.10	search with cache (only 1: intros; only 1: induction n; only 1: trivial; only 1: apply Pos2Nat.inj_iter; only 1: now f_equal).	2.44896316528	2942
Coq.ZArith.Zpower.Zpower_pos_is_exp	40
Coq.ZArith.Zpower.Zpower_exp	40
Coq.ZArith.Zpower.shift_nat_equiv	40	0	search with cache (only 1: trivial).	0.00774502754211	1
Coq.ZArith.Zpower.shift_pos_equiv	40	0	search with cache (only 1: reflexivity).	0.00691199302673	1
Coq.ZArith.Zpower.shift_equiv	40
Coq.ZArith.Zpower.two_power_nat_equiv	40
Coq.ZArith.Zpower.two_power_pos_equiv	40	6	search with cache (only 1: now apply Pos.iter_swap_gen).	0.00838303565979	7
Coq.ZArith.Zpower.two_p_equiv	40	2.0.1.41	search with cache (only 1: destruct x; only 1: trivial; only 1: now apply Pos.iter_swap_gen; only 1: trivial).	0.342164039612	1155
Coq.ZArith.Zpower.two_power_nat_S	40	2.1.1	search with cache (only 1: induction n; only 1: trivial; only 1: auto).	0.0138881206512	7
Coq.ZArith.Zpower.shift_nat_plus	40	9.0.1.10	search with cache (only 1: induction n; only 1: reflexivity; only 1: simpl; only 1: now f_equal).	0.371450185776	561
Coq.ZArith.Zpower.shift_nat_correct	40
Coq.ZArith.Zpower.two_power_nat_correct	40
Coq.ZArith.Zpower.shift_pos_nat	40	2	search with cache (only 1: apply Pos2Nat.inj_iter).	0.00732898712158	3
Coq.ZArith.Zpower.two_power_pos_nat	40
Coq.ZArith.Zpower.shift_pos_correct	40
Coq.ZArith.Zpower.two_power_pos_correct	40	3	search with cache (only 1: now apply Pos.iter_swap_gen).	0.0219020843506	22
Coq.ZArith.Zpower.two_power_pos_is_exp	40
Coq.ZArith.Zpower.two_p_is_exp	40
Coq.ZArith.Zpower.two_p_gt_ZERO	40	1.3.2.0	search with cache (only 1: destruct x; only 1: easy; only 1: easy; only 1: easy).	0.0188729763031	10
Coq.ZArith.Zpower.two_p_S	40
Coq.ZArith.Zpower.two_p_pred	40
Coq.ZArith.Zpower.Zdiv_rest_correct1	40
Coq.ZArith.Zpower.Zdiv_rest_correct2	40
Coq.ZArith.Zpower.Zdiv_rest_correct	40
Coq.ZArith.Zpower.Zdiv_rest_ok	40
Coq.ZArith.Zpower.Zdiv_rest_shiftr	40
Coq.ZArith.Zwf.Zwf_well_founded	40
Coq.ZArith.Zwf.Zwf_up_well_founded	40
Coq.ZArith.auxiliary.Zne_left	40
Coq.ZArith.auxiliary.Zegal_left	40	0	search with cache (only 1: now rewrite <- Z.sub_move_0_r).	0.0100500583649	1
Coq.ZArith.auxiliary.Zle_left	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00699186325073	1
Coq.ZArith.auxiliary.Zle_left_rev	40	0	search with cache (only 1: apply Z.le_0_sub).	0.0072979927063	1
Coq.ZArith.auxiliary.Zlt_left_rev	40	1	search with cache (only 1: apply Z.lt_0_sub).	0.00788712501526	2
Coq.ZArith.auxiliary.Zlt_left_lt	40	0	search with cache (only 1: apply Z.lt_0_sub).	0.00698399543762	1
Coq.ZArith.auxiliary.Zlt_left	40
Coq.ZArith.auxiliary.Zge_left	40	0.13	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_0_sub).	0.172266960144	164
Coq.ZArith.auxiliary.Zgt_left	40	0.3.0.0.0	search with cache (only 1: intros; only 1: rewrite Z.add_shuffle0; only 1: change (-1) with (- Z.succ 0); only 1: Z.swap_greater; only 1: now apply Z.le_0_sub, Z.le_succ_l, Z.lt_0_sub).	0.043958902359	13
Coq.ZArith.auxiliary.Zgt_left_gt	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0186350345612	3
Coq.ZArith.auxiliary.Zgt_left_rev	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_0_sub).	0.0179259777069	2
Coq.ZArith.auxiliary.Zle_mult_approx	40	21.0.1	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order_pos).	2.02851605415	1342
Coq.ZArith.auxiliary.Zmult_le_approx	40
Coq.ZArith.Zmax.Zmax_spec	40
Coq.ZArith.Zmax.Zmax_left	40
Coq.ZArith.Zmax.Zpos_max_1	40	1.0.0.0.105	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: apply Z.max_l; only 1: easy).	3.61998295784	13502
Coq.ZArith.Zmin.Zmin_spec	40
Coq.ZArith.Zmin.Zmin_irreducible	40
Coq.ZArith.Zmin.Zmin_le_prime_inf	40
Coq.ZArith.Zmin.Zpos_min_1	40	0.0.0.143	search with cache (only 1: destruct p; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	23.52718997	78446
Coq.ZArith.Zgcd_alt.Zgcdn_pos	40
Coq.ZArith.Zgcd_alt.Zgcd_alt_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_linear_bound	40
Coq.ZArith.Zgcd_alt.fibonacci_pos	40
Coq.ZArith.Zgcd_alt.fibonacci_incr	40
Coq.ZArith.Zgcd_alt.Zgcdn_worst_is_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcdn_ok_before_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_fibonacci	40
Coq.ZArith.Zgcd_alt.Zgcd_bound_opp	40	4.2.2.0.1.45	search with cache (only 1: destruct a; only 1: simpl; only 1: auto; only 1: simpl Zgcd_bound in *; only 1: auto; only 1: auto).	2.99964809418	4799
Coq.ZArith.Zgcd_alt.Zgcdn_opp	40	15.1.8	search with cache (only 1: destruct n; only 1: auto; only 1: now destruct a).	4.0928940773	4124
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd_pos	40
Coq.ZArith.Zgcd_alt.Zgcdn_is_gcd	40
Coq.ZArith.Zgcd_alt.Zgcd_is_gcd	40
Coq.ZArith.Zorder.Ztrichotomy_inf	40
Coq.ZArith.Zorder.Ztrichotomy	40	1.0.0.0.0.1.2.0.0.0	search with cache (only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: left; only 1: auto; only 1: left; only 1: auto; only 1: right; only 1: auto).	1.92527699471	1721
Coq.ZArith.Zorder.dec_Zne	40
Coq.ZArith.Zorder.dec_Zgt	40
Coq.ZArith.Zorder.dec_Zge	40
Coq.ZArith.Zorder.not_Zeq	40
Coq.ZArith.Zorder.Zle_not_lt	40	17	search with cache (only 1: Z.order).	0.201459884644	222
Coq.ZArith.Zorder.Zlt_not_le	40	18	search with cache (only 1: Z.order).	0.249283075333	253
Coq.ZArith.Zorder.Zle_not_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0120320320129	2
Coq.ZArith.Zorder.Zgt_not_le	40	2	search with cache (only 1: auto).	0.00612497329712	3
Coq.ZArith.Zorder.Znot_ge_lt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_nge).	0.0105810165405	2
Coq.ZArith.Zorder.Znot_lt_ge	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt).	0.0116951465607	2
Coq.ZArith.Zorder.Znot_gt_le	40	0	search with cache (only 1: trivial).	0.00512099266052	1
Coq.ZArith.Zorder.Znot_le_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.nle_gt).	0.0118079185486	2
Coq.ZArith.Zorder.not_Zne	40	5.0.0.3	search with cache (only 1: destruct (Z.eq_decidable n m); only 1: subst; only 1: auto; only 1: now subst).	0.0624768733978	76
Coq.ZArith.Zorder.Zgt_asym	40	7.0.8	search with cache (only 1: intros H; only 1: Z.swap_greater; only 1: Z.order).	0.358377933502	378
Coq.ZArith.Zorder.Zgt_irrefl	40	9.4.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_ngt; only 1: now destruct n).	0.192986011505	367
Coq.ZArith.Zorder.Zle_lt_or_eq	40	2.1.1.0.0.1.8.2	search with cache (only 1: intro; only 1: unfold Z.gt, Z.lt; only 1: case Z.compare_spec; only 1: right; only 1: assumption; only 1: left; only 1: auto; only 1: Z.order).	3.61624598503	3475
Coq.ZArith.Zorder.Zgt_trans	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.023209810257	3
Coq.ZArith.Zorder.Zle_gt_trans	40	8.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: Z.order).	0.0618200302124	45
Coq.ZArith.Zorder.Zgt_le_trans	40	0.0	search with cache (only 1: Z.swap_greater; only 1: Z.order).	0.0167529582977	2
Coq.ZArith.Zorder.Zge_trans	40	0.0.2	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now transitivity m).	0.0287129878998	14
Coq.ZArith.Zorder.Zsucc_le_compat	40
Coq.ZArith.Zorder.Zsucc_lt_compat	40
Coq.ZArith.Zorder.Zsucc_gt_compat	40	0.3	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0331699848175	16
Coq.ZArith.Zorder.Zsucc_gt_reg	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.succ_lt_mono).	0.0149080753326	2
Coq.ZArith.Zorder.Zsucc_le_reg	40	0	search with cache (only 1: apply Z.succ_le_mono).	0.00581502914429	1
Coq.ZArith.Zorder.Zsucc_lt_reg	40	0	search with cache (only 1: apply Z.succ_lt_mono).	0.00532913208008	1
Coq.ZArith.Zorder.Zgt_succ	40	0.1	search with cache (only 1: apply Z.lt_gt; only 1: apply Z.lt_succ_diag_r).	0.00650000572205	3
Coq.ZArith.Zorder.Znot_le_succ	40	0.0	search with cache (only 1: apply Z.nle_gt; only 1: apply Z.lt_succ_diag_r).	0.00628900527954	2
Coq.ZArith.Zorder.Zgt_le_succ	40	6.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0145170688629	9
Coq.ZArith.Zorder.Zle_gt_succ	40
Coq.ZArith.Zorder.Zle_lt_succ	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00539302825928	1
Coq.ZArith.Zorder.Zlt_le_succ	40	0	search with cache (only 1: apply Z.le_succ_l).	0.00533580780029	1
Coq.ZArith.Zorder.Zgt_succ_le	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_succ_r).	0.0757820606232	2
Coq.ZArith.Zorder.Zlt_succ_le	40	0	search with cache (only 1: apply Z.lt_succ_r).	0.00558400154114	1
Coq.ZArith.Zorder.Zle_succ_gt	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.le_succ_l).	0.0115261077881	2
Coq.ZArith.Zorder.Zle_succ_le	40
Coq.ZArith.Zorder.Zgt_succ_pred	40
Coq.ZArith.Zorder.Zlt_succ_pred	40	0	search with cache (only 1: apply Z.lt_succ_lt_pred).	0.00629711151123	1
Coq.ZArith.Zorder.Zlt_0_le_0_pred	40	0.0.0.0.0.0.12.21	search with cache (only 1: intros; only 1: induction n; only 1: easy; only 1: destruct p; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy || now destruct 1; only 1: easy).	1.11207389832	1045
Coq.ZArith.Zorder.Zgt_0_le_0_pred	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0117909908295	4
Coq.ZArith.Zorder.Zle_neg_pos	40	0	search with cache (only 1: easy).	0.0107369422913	1
Coq.ZArith.Zorder.Zgt_pos_0	40	0.3	search with cache (only 1: intros; only 1: easy).	0.00709199905396	5
Coq.ZArith.Zorder.Zle_0_pos	40	1	search with cache (only 1: easy).	0.00917196273804	2
Coq.ZArith.Zorder.Zlt_neg_0	40	0	search with cache (only 1: easy).	0.00558400154114	1
Coq.ZArith.Zorder.Zle_0_nat	40	1.0.0.18	search with cache (only 1: induction n; only 1: easy; only 1: simpl; only 1: easy).	0.158519029617	244
Coq.ZArith.Zorder.Zgt_succ_gt_or_eq	40	1.14.0.0.1	search with cache (only 1: intro; only 1: Z.swap_greater; only 1: apply Z.lt_eq_cases; only 1: apply Z.lt_succ_r; only 1: auto).	7.22763299942	5949
Coq.ZArith.Zorder.Zplus_gt_compat_l	40
Coq.ZArith.Zorder.Zplus_gt_compat_r	40
Coq.ZArith.Zorder.Zplus_le_compat_l	40
Coq.ZArith.Zorder.Zplus_le_compat_r	40
Coq.ZArith.Zorder.Zplus_lt_compat_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00562286376953	1
Coq.ZArith.Zorder.Zplus_lt_compat_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.00664210319519	2
Coq.ZArith.Zorder.Zplus_le_reg_l	40	1	search with cache (only 1: apply Z.add_le_mono_l).	0.00659608840942	2
Coq.ZArith.Zorder.Zplus_le_reg_r	40	1	search with cache (only 1: apply Z.add_le_mono_r).	0.0060338973999	2
Coq.ZArith.Zorder.Zplus_lt_reg_l	40	0	search with cache (only 1: apply Z.add_lt_mono_l).	0.00544190406799	1
Coq.ZArith.Zorder.Zplus_lt_reg_r	40	1	search with cache (only 1: apply Z.add_lt_mono_r).	0.00649905204773	2
Coq.ZArith.Zorder.Zplus_gt_reg_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_l).	0.014664888382	2
Coq.ZArith.Zorder.Zplus_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.add_lt_mono_r).	0.0162880420685	3
Coq.ZArith.Zorder.Zmult_le_compat_r	40
Coq.ZArith.Zorder.Zmult_le_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_r	40
Coq.ZArith.Zorder.Zmult_gt_compat_r	40	0.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0425009727478	25
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_r	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0133130550385	3
Coq.ZArith.Zorder.Zmult_gt_0_le_compat_r	40	0.3.1.4.0	search with cache (only 1: intros; only 1: destruct p; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: now apply Z.mul_le_mono_nonneg_r; only 1: discriminate).	0.418520927429	279
Coq.ZArith.Zorder.Zmult_lt_0_le_compat_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00651597976685	1
Coq.ZArith.Zorder.Zmult_gt_0_lt_compat_l	40
Coq.ZArith.Zorder.Zmult_lt_compat_l	40	0	search with cache (only 1: apply Z.mul_lt_mono_pos_l).	0.00627493858337	1
Coq.ZArith.Zorder.Zmult_gt_compat_l	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_l).	0.0209431648254	2
Coq.ZArith.Zorder.Zmult_ge_compat_r	40	1.0.3	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_r).	0.0352499485016	22
Coq.ZArith.Zorder.Zmult_ge_compat_l	40	0.0.0	search with cache (only 1: Z.swap_greater; only 1: intros; only 1: now apply Z.mul_le_mono_nonneg_l).	0.0223281383514	3
Coq.ZArith.Zorder.Zmult_ge_compat	40
Coq.ZArith.Zorder.Zmult_le_compat	40	0.0	search with cache (only 1: intros; only 1: now apply Z.mul_le_mono_nonneg).	0.00733685493469	2
Coq.ZArith.Zorder.Zmult_gt_0_lt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.0124759674072	3
Coq.ZArith.Zorder.Zmult_lt_reg_r	40	1	search with cache (only 1: apply Z.mul_lt_mono_pos_r).	0.00661993026733	2
Coq.ZArith.Zorder.Zmult_le_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0115098953247	2
Coq.ZArith.Zorder.Zmult_lt_0_le_reg_r	40	0	search with cache (only 1: apply Z.mul_le_mono_pos_r).	0.00574898719788	1
Coq.ZArith.Zorder.Zmult_ge_reg_r	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0210609436035	2
Coq.ZArith.Zorder.Zmult_gt_reg_r	40	1.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	0.021919965744	3
Coq.ZArith.Zorder.Zmult_lt_compat	40
Coq.ZArith.Zorder.Zmult_lt_compat2	40
Coq.ZArith.Zorder.Zmult_gt_0_compat	40	1.0.21	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_lt_mono_pos_r).	2.3224902153	1796
Coq.ZArith.Zorder.Zmult_gt_0_le_0_compat	40	0.0	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_le_mono_pos_r).	0.0121049880981	2
Coq.ZArith.Zorder.Zmult_le_0_reg_r	40
Coq.ZArith.Zorder.Zmult_lt_0_reg_r	40
Coq.ZArith.Zorder.Zmult_gt_0_lt_0_reg_r	40	1.2	search with cache (only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	0.0128009319305	5
Coq.ZArith.Zorder.Zmult_gt_0_reg_l	40	1.0.25	search with cache (only 1: rewrite Z.mul_comm; only 1: Z.swap_greater; only 1: apply Z.mul_pos_cancel_r).	3.77891397476	3446
Coq.ZArith.Zorder.Zlt_square_simpl	40
Coq.ZArith.Zorder.Zgt_square_simpl	40	0.1	search with cache (only 1: Z.swap_greater; only 1: apply Z.square_lt_simpl_nonneg).	0.0204639434814	3
Coq.ZArith.Zorder.Zeq_plus_swap	40
Coq.ZArith.Zorder.Zlt_0_minus_lt	40
Coq.ZArith.Zorder.Zle_0_minus_le	40
Coq.ZArith.Zorder.Zle_minus_le_0	40	0	search with cache (only 1: apply Z.le_0_sub).	0.00549602508545	1
Coq.ZArith.Zbool.Zle_cases	40
Coq.ZArith.Zbool.Zlt_cases	40
Coq.ZArith.Zbool.Zge_cases	40
Coq.ZArith.Zbool.Zgt_cases	40
Coq.ZArith.Zbool.Zle_bool_imp_le	40	0.0.1	search with cache (only 1: case Z.leb_spec; only 1: now Z.swap_greater; only 1: discriminate).	0.0108969211578	4
Coq.ZArith.Zbool.Zle_imp_le_bool	40	0	search with cache (only 1: apply Z.leb_le).	0.00674700737	1
Coq.ZArith.Zbool.Zle_bool_antisym	40
Coq.ZArith.Zbool.Zle_bool_trans	40	0.0	search with cache (only 1: rewrite !Z.leb_le; only 1: Z.order).	0.0221590995789	2
Coq.ZArith.Zbool.Zle_bool_total	40
Coq.ZArith.Zbool.Zle_bool_plus_mono	40
Coq.ZArith.Zbool.Zone_pos	40	14	search with cache (only 1: auto).	0.0374138355255	85
Coq.ZArith.Zbool.Zone_min_pos	40
Coq.ZArith.Zbool.Zle_is_le_bool	40	0.7	search with cache (only 1: symmetry; only 1: apply Z.leb_le).	0.0121021270752	9
Coq.ZArith.Zbool.Zge_is_le_bool	40	0.0.4.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.leb_le).	0.0314469337463	24
Coq.ZArith.Zbool.Zlt_is_lt_bool	40
Coq.ZArith.Zbool.Zgt_is_gt_bool	40	0.0.2.6	search with cache (only 1: rewrite Z.gtb_ltb; only 1: Z.swap_greater; only 1: symmetry; only 1: apply Z.ltb_lt).	0.297713041306	279
Coq.ZArith.Zbool.Zlt_is_le_bool	40
Coq.ZArith.Zbool.Zgt_is_le_bool	40	0.1.0	search with cache (only 1: rewrite Z.leb_le; only 1: Z.swap_greater; only 1: apply Z.lt_le_pred).	0.0130789279938	4
Coq.ZArith.Zbool.Zeq_is_eq_bool	40
Coq.ZArith.Zbool.Zeq_bool_eq	40	3.3.0.0.0.0	search with cache (only 1: unfold Zeq_bool; only 1: rewrite <- Z.compare_eq_iff; only 1: destruct Z.compare; only 1: now split; only 1: discriminate; only 1: discriminate).	0.580936908722	645
Coq.ZArith.Zbool.Zeq_bool_neq	40
Coq.ZArith.Zbool.Zeq_bool_if	40
Coq.ZArith.ZArith_dec.Dcompare_inf	40
Coq.ZArith.ZArith_dec.Zcompare_rect	40	0.0.0.0	search with cache (only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0128738880157	4
Coq.ZArith.ZArith_dec.Zcompare_rec	40	0.0.0.0.0	search with cache (only 1: intros H1 H2 H3; only 1: destruct (n ?= m); only 1: auto; only 1: auto; only 1: auto).	0.0141220092773	5
Coq.ZArith.ZArith_dec.Z_lt_dec	40
Coq.ZArith.ZArith_dec.Z_le_dec	40
Coq.ZArith.ZArith_dec.Z_gt_dec	40	0.0.0.0.23	search with cache (only 1: unfold Z.gt, Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	16.1133480072	21086
Coq.ZArith.ZArith_dec.Z_ge_dec	40
Coq.ZArith.ZArith_dec.Z_lt_ge_dec	40	0.0.0.0.3.0	search with cache (only 1: unfold Z.ge; only 1: unfold Z.lt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	0.138721942902	55
Coq.ZArith.ZArith_dec.Z_lt_le_dec	40
Coq.ZArith.ZArith_dec.Z_le_gt_dec	40	0.0.0.0.3.4	search with cache (only 1: unfold Z.le; only 1: unfold Z.gt; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	2.59313893318	1068
Coq.ZArith.ZArith_dec.Z_gt_le_dec	40	0.0.0.0.6.6	search with cache (only 1: unfold Z.gt; only 1: unfold Z.le; only 1: case Z.compare; only 1: now left || now right; only 1: now left || now right; only 1: now left || now right).	34.4739158154	14621
Coq.ZArith.ZArith_dec.Z_ge_lt_dec	40	3.1.1.2	search with cache (only 1: elim Z_lt_ge_dec; only 1: right; only 1: trivial; only 1: now left).	0.200228214264	107
Coq.ZArith.ZArith_dec.Z_le_lt_eq_dec	40
Coq.ZArith.ZArith_dec.Zlt_cotrans	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_pos	40
Coq.ZArith.ZArith_dec.Zlt_cotrans_neg	40
Coq.ZArith.ZArith_dec.not_Zeq_inf	40
Coq.ZArith.ZArith_dec.Z_dec	40	3.0.0.0.0.1.0.0.0.0	search with cache (only 1: intros; only 1: unfold Z.gt, Z.lt; only 1: generalize (Z.compare_eq n m); only 1: destruct (n ?= m); only 1: right; only 1: auto; only 1: left; only 1: left; only 1: auto; only 1: auto).	2.65245008469	1830
Coq.ZArith.ZArith_dec.Z_dec'	40
Coq.ZArith.ZArith_dec.Z_zerop	40
Coq.ZArith.Zpow_alt.Piter_mul_acc	40
Coq.ZArith.Zpow_alt.Piter_op_square	40
Coq.ZArith.Zpow_alt.Zpower_equiv	40
Coq.ZArith.Zpow_alt.Zpower_alt_0_r	40	0	search with cache (only 1: trivial).	0.00632309913635	1
Coq.ZArith.Zpow_alt.Zpower_alt_succ_r	40
Coq.ZArith.Zpow_alt.Zpower_alt_neg_r	40	0.7.1.1.2.0	search with cache (only 1: destruct b as [| p| p]; only 1: intros Hb; only 1: simpl; only 1: now Z.nzsimpl; only 1: easy || now destruct y; only 1: trivial).	1.76362299919	1390
Coq.ZArith.Zpow_alt.Zpower_alt_Ppow	40
Coq.Program.Wf.Fix_F_eq	40	0.0.10.4	search with cache (only 1: intro H'; only 1: intro p; only 1: destruct p; only 1: reflexivity).	0.331403017044	524
Coq.Program.Wf.Fix_F_inv	40	0.13.3.8.11.0	search with cache (only 1: destruct r using Acc_inv_dep; only 1: simpl in *; only 1: intro p; only 1: destruct p; only 1: simpl in *; only 1: auto).	4.21525597572	9224
Coq.Program.Wf.Fix_eq	40
Coq.Program.Wf.fix_sub_eq	40	0.0.0.0.0.0	search with cache (only 1: intro x; only 1: unfold Fix_sub; only 1: rewrite <- Fix_F_eq; only 1: apply F_ext; only 1: intros; only 1: apply Fix_F_inv).	0.0213811397552	6
Coq.Program.Wf.measure_wf	40
Coq.Program.Wf.F_unfold	40	0.1	search with cache (only 1: destruct r using Acc_inv_dep; only 1: auto).	0.0133800506592	3
Coq.Program.Wf.Fix_F_sub_rect	40	0.4.7.1	search with cache (only 1: intros; only 1: induction (Rwf x); only 1: rewrite <- Fix_F_eq; only 1: auto).	0.244595050812	287
Coq.Program.Wf.eq_Fix_F_sub	40	1.9.0	search with cache (only 1: induction (Rwf x); only 1: apply Fix_F_inv; only 1: auto).	0.213981151581	151
Coq.Program.Wf.Fix_sub_rect	40
Coq.Program.Wf.WfExtensionality.fix_sub_eq_ext	40
Coq.Program.Subset.subset_eq	40
Coq.Program.Subset.match_eq_rewrite	40	1.5.3.14.16.10	search with cache (only 1: intros A P; only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: subst; only 1: reflexivity).	4.58006620407	25489
Coq.Program.Equality.JMeq_eq_refl	40	1	search with cache (only 1: apply UIP).	0.00517892837524	2
Coq.Program.Equality.UIP_refl_refl	40	6	search with cache (only 1: apply UIP).	0.0713119506836	92
Coq.Program.Equality.inj_pairT2_refl	40	37	search with cache (only 1: apply UIP).	0.126922130585	696
Coq.Program.Equality.solution_left	40	2.2.6	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.0332360267639	67
Coq.Program.Equality.solution_right	40	1.0.0	search with cache (only 1: intros; only 1: subst; only 1: assumption).	0.00819396972656	4
Coq.Program.Equality.deletion	40	1.0	search with cache (only 1: intros; only 1: trivial).	0.0054829120636	3
Coq.Program.Equality.simplification_heq	40	0.3.8.20	search with cache (only 1: intros H H'; only 1: apply H; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.310266971588	1241
Coq.Program.Equality.simplification_existT2	40	0.0.0.10.18	search with cache (only 1: intros H J; only 1: apply H; only 1: apply eq_dep_eq; only 1: apply eq_sigT_eq_dep; only 1: assumption).	0.502846956253	1797
Coq.Program.Equality.simplification_existT1	40	0.14.3.6.17.44	search with cache (only 1: intro eq_dep_eq; only 1: intros; only 1: apply eq_dep_eq; only 1: dependent rewrite H; only 1: trivial; only 1: assumption).	8.34369802475	50937
Coq.Program.Equality.simplification_K	40	0.0.0	search with cache (only 1: intros; only 1: rewrite UIP_refl; only 1: assumption).	0.00997805595398	3
Coq.Program.Combinators.compose_id_left	40	3	search with cache (only 1: reflexivity).	0.0046980381012	4
Coq.Program.Combinators.compose_id_right	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.0059130191803	2
Coq.Program.Combinators.compose_assoc	40	0.1	search with cache (only 1: intros; only 1: reflexivity).	0.00690603256226	3
Coq.Program.Combinators.flip_flip	40	1.0	search with cache (only 1: intros; only 1: reflexivity).	0.00649404525757	3
Coq.Program.Combinators.prod_uncurry_curry	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00682687759399	2
Coq.Program.Combinators.prod_curry_uncurry	40	0.42.17.1.4.20.41	search with cache (only 1: intros n m; only 1: intro H; only 1: apply functional_extensionality_dep_good; only 1: intros; only 1: apply functional_extensionality_dep_good; only 1: intros [HypL HypR]; only 1: reflexivity).	8.42092299461	68265
Coq.Sorting.PermutEq.multiplicity_In	40
Coq.Sorting.PermutEq.multiplicity_In_O	40
Coq.Sorting.PermutEq.multiplicity_In_S	40	0.0.0.0.0.0	search with cache (only 1: intros l a; only 1: intro H; only 1: eapply In_InA, multiplicity_InA in H; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances; only 1: eauto with typeclass_instances).	0.0328998565674	6
Coq.Sorting.PermutEq.multiplicity_NoDup	40
Coq.Sorting.PermutEq.NoDup_permut	40
Coq.Sorting.PermutEq.permut_In_In	40
Coq.Sorting.PermutEq.permut_cons_In	40
Coq.Sorting.PermutEq.permut_nil	40
Coq.Sorting.PermutEq.permutation_Permutation	40
Coq.Sorting.PermutEq.permut_length_1	40
Coq.Sorting.PermutEq.permut_length_2	40
Coq.Sorting.PermutEq.permut_length	40
Coq.Sorting.PermutEq.permutation_map	40
Coq.Sorting.Mergesort.Sort.Sorted_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Permuted_merge_list_to_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_merge_stack	40	0.0.0.0.0.1.0.0.0.0.6.0	search with cache (only 1: induction stack as [| [| ]]; only 1: constructor; only 1: intros; only 1: simpl; only 1: apply Sorted_merge; only 1: destruct H; only 1: auto; only 1: destruct H; only 1: auto; only 1: intros; only 1: simpl; only 1: auto).	3.18786501884	3174
Coq.Sorting.Mergesort.Sort.Permuted_merge_stack	40
Coq.Sorting.Mergesort.Sort.Sorted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Permuted_iter_merge	40
Coq.Sorting.Mergesort.Sort.Sorted_sort	40
Coq.Sorting.Mergesort.Sort.LocallySorted_sort	40
Coq.Sorting.Mergesort.Sort.Permuted_sort	40
Coq.Sorting.Mergesort.Sort.StronglySorted_sort	40
Coq.Sorting.Mergesort.NatOrder.leb_total	40
Coq.Sorting.Permutation.Permutation_nil	40
Coq.Sorting.Permutation.Permutation_nil_cons	40
Coq.Sorting.Permutation.Permutation_refl	40
Coq.Sorting.Permutation.Permutation_sym	40	17.0.0.0.0.45	search with cache (only 1: induction 1; only 1: constructor; only 1: constructor; only 1: trivial; only 1: constructor; only 1: eauto with arith).	18.6084852219	81459
Coq.Sorting.Permutation.Permutation_trans	40	1.0	search with cache (only 1: intros l l' Hperm; only 1: apply perm_trans with (l' := l')).	0.00850319862366	3
Coq.Sorting.Permutation.Permutation_cons	40	2.0.4.3	search with cache (only 1: intros l l' Hperm; only 1: induction Hperm; only 1: constructor; only 1: auto).	0.105041027069	144
Coq.Sorting.Permutation.Permutation_in	40
Coq.Sorting.Permutation.Permutation_in'	40
Coq.Sorting.Permutation.Permutation_app_tail	40
Coq.Sorting.Permutation.Permutation_app_head	40	0.0.2.0.0.13	search with cache (only 1: induction l; only 1: simpl; only 1: intros l l' Hperm; only 1: tauto; only 1: simpl; only 1: auto).	2.06830811501	1389
Coq.Sorting.Permutation.Permutation_app	40
Coq.Sorting.Permutation.Permutation_app'	40
Coq.Sorting.Permutation.Permutation_add_inside	40
Coq.Sorting.Permutation.Permutation_cons_append	40
Coq.Sorting.Permutation.Permutation_app_comm	40
Coq.Sorting.Permutation.Permutation_cons_app	40
Coq.Sorting.Permutation.Permutation_Add	40
Coq.Sorting.Permutation.Permutation_middle	40	0.0.4.0	search with cache (only 1: intro l'; only 1: intros; only 1: rewrite app_comm_cons, Permutation_cons_append; only 1: now rewrite <- app_assoc).	0.0371720790863	8
Coq.Sorting.Permutation.Permutation_rev	40	2.4.4.1.3	search with cache (only 1: induction l; only 1: trivial; only 1: simpl; only 1: rewrite <- IHl; only 1: auto).	1.51248693466	805
Coq.Sorting.Permutation.Permutation_rev'	40
Coq.Sorting.Permutation.Permutation_length	40
Coq.Sorting.Permutation.Permutation_length'	40	0.0.0.0.0.0.0.0.0.0	search with cache (only 1: repeat red; only 1: intros l l' Hperm; only 1: induction Hperm; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto; only 1: now transitivity (length l')).	0.0268759727478	10
Coq.Sorting.Permutation.Permutation_ind_bis	40
Coq.Sorting.Permutation.Permutation_nil_app_cons	40
Coq.Sorting.Permutation.Permutation_Add_inv	40
Coq.Sorting.Permutation.Permutation_app_inv	40
Coq.Sorting.Permutation.Permutation_cons_inv	40
Coq.Sorting.Permutation.Permutation_cons_app_inv	40
Coq.Sorting.Permutation.Permutation_app_inv_l	40
Coq.Sorting.Permutation.Permutation_app_inv_r	40
Coq.Sorting.Permutation.Permutation_length_1_inv	40
Coq.Sorting.Permutation.Permutation_length_1	40
Coq.Sorting.Permutation.Permutation_length_2_inv	40
Coq.Sorting.Permutation.Permutation_length_2	40
Coq.Sorting.Permutation.NoDup_Permutation	40
Coq.Sorting.Permutation.NoDup_Permutation_bis	40
Coq.Sorting.Permutation.Permutation_NoDup	40
Coq.Sorting.Permutation.Permutation_NoDup'	40
Coq.Sorting.Permutation.Permutation_map	40
Coq.Sorting.Permutation.Permutation_map'	40	0.0.0.0.0.0.0.0.1	search with cache (only 1: repeat red; only 1: induction 1; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: eauto).	1.04263901711	19
Coq.Sorting.Permutation.nat_bijection_Permutation	40
Coq.Sorting.Permutation.adapt_injective	40
Coq.Sorting.Permutation.adapt_ok	40
Coq.Sorting.Permutation.Permutation_nth_error	40
Coq.Sorting.Permutation.Permutation_nth_error_bis	40
Coq.Sorting.Permutation.Permutation_nth	40
Coq.Sorting.PermutSetoid.list_contents_app	40
Coq.Sorting.PermutSetoid.permut_refl	40	15	search with cache (only 1: split).	0.342914104462	369
Coq.Sorting.PermutSetoid.permut_sym	40	1.2	search with cache (only 1: unfold permutation; only 1: auto with datatypes).	0.0145599842072	5
Coq.Sorting.PermutSetoid.permut_trans	40
Coq.Sorting.PermutSetoid.permut_cons_eq	40
Coq.Sorting.PermutSetoid.permut_cons	40	0.0.0.0	search with cache (only 1: unfold permutation; only 1: simpl; only 1: intros; only 1: auto with datatypes).	0.0221650600433	4
Coq.Sorting.PermutSetoid.permut_app	40
Coq.Sorting.PermutSetoid.permut_add_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_inside	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside_eq	40
Coq.Sorting.PermutSetoid.permut_add_cons_inside	40
Coq.Sorting.PermutSetoid.permut_middle	40
Coq.Sorting.PermutSetoid.permut_sym_app	40	1.0.3.4.6	search with cache (only 1: unfold permutation, meq; only 1: symmetry; only 1: repeat rewrite list_contents_app in *; only 1: simpl in *; only 1: auto with arith).	1.64494395256	882
Coq.Sorting.PermutSetoid.permut_rev	40
Coq.Sorting.PermutSetoid.permut_conv_inv	40	1.0.0.0.0.2.0.1.11	search with cache (only 1: intro a; only 1: unfold permutation, meq; only 1: intros; only 1: generalize (H a0); only 1: clear H; only 1: simpl; only 1: destruct (eqA_dec a a0); only 1: auto with arith; only 1: auto with arith).	16.6719679832	11466
Coq.Sorting.PermutSetoid.permut_app_inv1	40
Coq.Sorting.PermutSetoid.if_eqA_then	40	0.1.18.16.3	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: auto with arith; only 1: congruence).	4.37473106384	8155
Coq.Sorting.PermutSetoid.permut_app_inv2	40	0.1.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros l l1 l2; only 1: unfold permutation, meq; only 1: intros H a; only 1: generalize (H a); only 1: clear H; only 1: do 2 rewrite list_contents_app; only 1: simpl; only 1: intros; only 1: apply plus_reg_l with (multiplicity (list_contents l) a); only 1: rewrite H; only 1: trivial).	1.81382703781	482
Coq.Sorting.PermutSetoid.permut_remove_hd_eq	40
Coq.Sorting.PermutSetoid.permut_remove_hd	40	0.0.0.0.0.0.0.0.0.0.0.0.0.2.1	search with cache (only 1: unfold permutation, meq; only 1: intros; only 1: specialize H with a0; only 1: rewrite list_contents_app in *; only 1: simpl in *; only 1: apply plus_reg_l with (if eqA_dec a a0 then 1 else 0); only 1: rewrite H; only 1: clear H; only 1: symmetry; only 1: rewrite Nat.add_comm, <- !Nat.add_assoc; only 1: f_equal; only 1: rewrite Nat.add_comm; only 1: destruct (eqA_dec a a0) as [Ha| Ha]; only 1: reflexivity; only 1: reflexivity).	25.2282190323	5605
Coq.Sorting.PermutSetoid.if_eqA_else	40	1.2.13.18.0	search with cache (only 1: intros; only 1: intuition; only 1: destruct (eqA_dec a a') as [HeqA| ]; only 1: congruence; only 1: auto).	8.30794596672	13069
Coq.Sorting.PermutSetoid.if_eqA_refl	40	7.0.0.0.0	search with cache (only 1: intros; only 1: destruct eqA_dec as [_| NEQ]; only 1: auto; only 1: contradict NEQ; only 1: eauto using permut_remove_hd_eq, Equivalence_Reflexive).	0.192525863647	103
Coq.Sorting.PermutSetoid.if_eqA	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_l	40
Coq.Sorting.PermutSetoid.if_eqA_rewrite_r	40
Coq.Sorting.PermutSetoid.multiplicity_eqA	40
Coq.Sorting.PermutSetoid.multiplicity_InA	40
Coq.Sorting.PermutSetoid.multiplicity_InA_O	40
Coq.Sorting.PermutSetoid.multiplicity_InA_S	40	0.0.0.0.0	search with cache (only 1: intros l a; only 1: rewrite multiplicity_InA; only 1: destruct (multiplicity (list_contents l) a); only 1: auto with arith; only 1: auto with arith).	0.0390379428864	5
Coq.Sorting.PermutSetoid.multiplicity_NoDupA	40
Coq.Sorting.PermutSetoid.permut_InA_InA	40
Coq.Sorting.PermutSetoid.permut_cons_InA	40	1.0.1.1.1.2.1.0.2	search with cache (only 1: unfold permutation, meq; only 1: simpl; only 1: intros a'; only 1: intros l a; only 1: intros; only 1: rewrite multiplicity_InA; only 1: specialize (H a); only 1: rewrite if_eqA_refl in H; only 1: omega).	3.63769602776	1956
Coq.Sorting.PermutSetoid.permut_nil	40
Coq.Sorting.PermutSetoid.permut_length_1	40
Coq.Sorting.PermutSetoid.permut_length_2	40
Coq.Sorting.PermutSetoid.permut_length	40
Coq.Sorting.PermutSetoid.NoDupA_equivlistA_permut	40
Coq.Sorting.PermutSetoid.permut_map	40
Coq.Sorting.PermutSetoid.Permutation_impl_permutation	40
Coq.Sorting.PermutSetoid.permut_eqA	40	1.0.0.2.0.0	search with cache (only 1: induction 1; only 1: apply permut_refl; only 1: apply permut_cons_eq; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive; only 1: auto using Equivalence_Reflexive).	0.0282640457153	9
Coq.Sorting.PermutSetoid.permutation_Permutation	40
Coq.Sorting.Sorted.HdRel_inv	40	0.2	search with cache (only 1: inversion 1; only 1: auto).	0.132075071335	43
Coq.Sorting.Sorted.Sorted_inv	40	0.0	search with cache (only 1: inversion 1; only 1: auto).	0.0118930339813	2
Coq.Sorting.Sorted.Sorted_rect	40
Coq.Sorting.Sorted.Sorted_LocallySorted_iff	40
Coq.Sorting.Sorted.StronglySorted_inv	40	0.2.0	search with cache (only 1: intros a l H; only 1: inversion H; only 1: auto).	0.0183279514313	5
Coq.Sorting.Sorted.StronglySorted_rect	40
Coq.Sorting.Sorted.StronglySorted_rec	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder using StronglySorted_inv; only 1: firstorder using StronglySorted_inv).	0.013885974884	3
Coq.Sorting.Sorted.StronglySorted_Sorted	40	0.0.2.0.0.9	search with cache (only 1: induction 1 as [| a l [| ]]; only 1: auto using Sorted, LocallySorted, HdRel; only 1: auto using Sorted, LocallySorted, HdRel; only 1: inversion H1; only 1: subst; only 1: auto using Sorted, LocallySorted, HdRel).	8.20249700546	5066
Coq.Sorting.Sorted.Sorted_extends	40
Coq.Sorting.Sorted.Sorted_StronglySorted	40
Coq.Sorting.Heap.leA_Tree_Leaf	40	2.0	search with cache (only 1: intros; only 1: constructor).	0.0166230201721	4
Coq.Sorting.Heap.leA_Tree_Node	40	0.0	search with cache (only 1: simpl; only 1: auto with datatypes).	0.0160310268402	2
Coq.Sorting.Heap.invert_heap	40	0.8.8	search with cache (only 1: intros f; only 1: inversion_clear 1; only 1: auto with datatypes).	0.471296072006	474
Coq.Sorting.Heap.is_heap_rect	40
Coq.Sorting.Heap.is_heap_rec	40	0.3.0.0.0.0.1.0.1.0.0	search with cache (only 1: simple induction T; only 1: auto with datatypes; only 1: intros a G PG D PD PN; only 1: elim (invert_heap a G D); only 1: intros H1 H2; only 1: elim H2; only 1: intros H3 H4; only 1: elim H4; only 1: intros; only 1: auto with datatypes; only 1: auto with datatypes).	2.27039599419	1075
Coq.Sorting.Heap.low_trans	40
Coq.Sorting.Heap.Equivalence_instance_0	40
Coq.Sorting.Heap.Proper_instance_0	40	1.4.1.2.1.1	search with cache (only 1: red; only 1: red; only 1: red; only 1: red; only 1: simpl; only 1: auto with datatypes).	0.667104005814	350
Coq.Sorting.Heap.merge	40
Coq.Sorting.Heap.insert	40	2.7	search with cache (only 1: fix merge 1; only 1: auto with datatypes).	0.174484014511	77
Coq.Sorting.Heap.list_to_heap	40	0.1.8	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto with datatypes).	0.0814859867096	63
Coq.Sorting.Heap.heap_to_list	40	2.2.11	search with cache (only 1: fix merge 1; only 1: intros; only 1: auto using node_is_heap, nil_is_heap, leA_Tree_Leaf with datatypes).	0.567521095276	540
Coq.Sorting.Heap.treesort	40	4.1.2	search with cache (only 1: fix merge0 1; only 1: intros; only 1: auto with datatypes).	0.0555551052094	18
Coq.Init.Wf.Acc_inv	40	4.8.4	search with cache (only 1: intro; only 1: destruct 1; only 1: trivial).	0.102755069733	514
Coq.Init.Wf.well_founded_induction_type	40
Coq.Init.Wf.well_founded_induction	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00808596611023	4
Coq.Init.Wf.well_founded_ind	40	0.0.0.0	search with cache (only 1: intros; only 1: apply Acc_rect; only 1: auto; only 1: auto).	0.00989294052124	4
Coq.Init.Wf.Fix_F_eq	40	1.61	search with cache (only 1: intros f [x]; only 1: trivial).	0.714574098587	6124
Coq.Init.Wf.Fix_F_inv	40
Coq.Init.Wf.Fix_eq	40
Coq.Init.Wf.well_founded_induction_type_2	40
Coq.Init.Tactics.decide_left	40	3.6.4.14.7.6.4	search with cache (only 1: intro z; only 1: intro p; only 1: destruct p; only 1: trivial; only 1: intro H; only 1: apply False_rec; only 1: auto).	1.89712715149	19594
Coq.Init.Tactics.decide_right	40	1.1.0.0	search with cache (only 1: intros; only 1: destruct decide; only 1: contradiction; only 1: apply H0).	0.0106229782104	6
Coq.Init.Peano.pred_Sn	40	1	search with cache (only 1: reflexivity).	0.00521898269653	2
Coq.Init.Peano.not_eq_S	40	12.7	search with cache (only 1: intros; only 1: auto).	0.146703958511	737
Coq.Init.Peano.O_S	40	3	search with cache (only 1: discriminate).	0.00634098052979	4
Coq.Init.Peano.n_Sn	40
Coq.Init.Peano.plus_n_O	40	0.4.1.1	search with cache (only 1: induction n; only 1: auto; only 1: simpl; only 1: auto).	0.0116341114044	15
Coq.Init.Peano.plus_O_n	40	1.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00852799415588	6
Coq.Init.Peano.plus_n_Sm	40	0.0.1.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0100409984589	8
Coq.Init.Peano.plus_Sn_m	40	0.0.0.0.0.0	search with cache (only 1: intros n m; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.00980710983276	6
Coq.Init.Peano.mult_n_O	40	0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: auto; only 1: auto).	0.00757503509521	4
Coq.Init.Peano.mult_n_Sm	40
Coq.Init.Peano.le_pred	40
Coq.Init.Peano.le_S_n	40
Coq.Init.Peano.le_0_n	40	0.0.3	search with cache (only 1: induction n; only 1: left; only 1: auto).	0.00793600082397	6
Coq.Init.Peano.le_n_S	40	1.1.0.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.0162839889526	29
Coq.Init.Peano.nat_case	40	1.0.0.1	search with cache (only 1: induction n; only 1: intros; only 1: assumption; only 1: trivial).	0.0098569393158	6
Coq.Init.Peano.nat_double_ind	40	1.0.8.1.9	search with cache (only 1: induction n; only 1: auto; only 1: destruct m; only 1: auto; only 1: auto).	0.294349193573	1295
Coq.Init.Peano.max_l	40
Coq.Init.Peano.max_r	40	0.0.1.0.5.0.0.0.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	20.4690248966	39878
Coq.Init.Peano.min_l	40	0.0.1.0.1.0.0.3.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: trivial; only 1: destruct m; only 1: simpl; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	3.74660611153	5848
Coq.Init.Peano.min_r	40	0.0.1.0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: inversion 1; only 1: destruct m; only 1: simpl; only 1: trivial; only 1: simpl; only 1: intros; only 1: apply f_equal, IHn, le_S_n; only 1: trivial).	2.75370812416	4729
Coq.Init.Peano.nat_rect_succ_r	40	0.9.21.1.51	search with cache (only 1: induction n as [| p H]; only 1: reflexivity; only 1: simpl in *; only 1: destruct H; only 1: reflexivity).	4.38997817039	31025
Coq.Init.Peano.nat_rect_plus	40	0.1.1.0.2.0.2	search with cache (only 1: intros n m; only 1: induction n; only 1: auto; only 1: intros; only 1: simpl; only 1: rewrite <- ?IHn; only 1: trivial).	0.365046977997	449
Coq.Init.Datatypes.andb_prop	40
Coq.Init.Datatypes.andb_true_intro	40	0.1.4.25.30	search with cache (only 1: intro H; only 1: intro; only 1: destruct H, 1; only 1: assumption; only 1: assumption).	3.21922492981	41708
Coq.Init.Datatypes.eq_true_ind_r	40	0.9.19.56.9	search with cache (only 1: intros A P; only 1: intro H1; only 1: intro; only 1: destruct H; only 1: trivial).	1.22917222977	26910
Coq.Init.Datatypes.eq_true_rec_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00695514678955	3
Coq.Init.Datatypes.eq_true_rect_r	40	0.0.0	search with cache (only 1: intros P b H H0; only 1: destruct H0 in H; only 1: assumption).	0.00715303421021	3
Coq.Init.Datatypes.surjective_pairing	40	0.5	search with cache (only 1: intros A B [H1 H2]; only 1: trivial).	0.00988221168518	14
Coq.Init.Datatypes.injective_projections	40
Coq.Init.Datatypes.pair_equal_spec	40
Coq.Init.Datatypes.rew_pair	40	0.3	search with cache (only 1: destruct H; only 1: reflexivity).	0.00890803337097	5
Coq.Init.Datatypes.comparison_eq_stable	40
Coq.Init.Datatypes.CompOpp_involutive	40	0.0.0.1.57	search with cache (only 1: intro H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H; only 1: reflexivity || destruct H).	0.276814937592	3799
Coq.Init.Datatypes.CompOpp_inj	40	0.0.1.0.1.0.1.0.0.0.1.0.1.0.1.0.0.0.0	search with cache (only 1: destruct c, c'; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: discriminate; only 1: intro H; only 1: reflexivity || destruct H).	9.23848199844	39899
Coq.Init.Datatypes.CompOpp_iff	40	0.0.0.0.0.0.0.0.0.5.0.0.0.1.0.4.10	search with cache (only 1: split; only 1: intro H; only 1: reflexivity || destruct H; only 1: destruct c; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity; only 1: destruct c, c'; only 1: auto; only 1: discriminate; only 1: discriminate; only 1: discriminate; only 1: auto; only 1: auto; only 1: discriminate; only 1: auto; only 1: auto).	21.8575870991	89556
Coq.Init.Datatypes.CompareSpec2Type	40
Coq.Init.Datatypes.CompSpec2Type	40
Coq.Init.Logic.proj1	40
Coq.Init.Logic.proj2	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00441312789917	2
Coq.Init.Logic.iff_refl	40
Coq.Init.Logic.iff_trans	40	0.0.0.0.1	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00631999969482	6
Coq.Init.Logic.iff_sym	40	0.0.0.2	search with cache (only 1: destruct 1; only 1: split; only 1: auto; only 1: auto).	0.00556993484497	6
Coq.Init.Logic.and_iff_compat_l	40	1.0.0.2.1.0.0.2.0.4	search with cache (only 1: destruct 1; only 1: split; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto; only 1: destruct 1; only 1: split; only 1: trivial; only 1: auto).	0.0690469741821	857
Coq.Init.Logic.and_iff_compat_r	40	0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: apply Hl; only 1: assumption; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: apply Hr; only 1: assumption; only 1: assumption).	0.0314650535583	276
Coq.Init.Logic.or_iff_compat_l	40
Coq.Init.Logic.or_iff_compat_r	40	0.1.0.0.1.0.0.1.0.0.1.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros [?| ?]; only 1: left; only 1: apply Hl; only 1: assumption; only 1: right; only 1: assumption; only 1: intros [?| ?]; only 1: left; only 1: apply Hr; only 1: assumption; only 1: right; only 1: assumption).	0.153218984604	2137
Coq.Init.Logic.imp_iff_compat_l	40	0.0.1.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: auto; only 1: auto).	0.00684285163879	5
Coq.Init.Logic.imp_iff_compat_r	40	1.4.0.0.0	search with cache (only 1: intros ? ? ? [Hl Hr]; only 1: split; only 1: intros H ?; only 1: auto; only 1: auto).	0.00656604766846	18
Coq.Init.Logic.not_iff_compat	40	1.1.0.0	search with cache (only 1: intros A B [H1 H2]; only 1: split; only 1: auto; only 1: auto).	0.00584602355957	6
Coq.Init.Logic.neg_false	40	0.4.3.0.2.1	search with cache (only 1: split; only 1: split; only 1: auto; only 1: destruct 1; only 1: intros [? ?]; only 1: auto).	0.0739898681641	486
Coq.Init.Logic.and_cancel_l	40
Coq.Init.Logic.and_cancel_r	40	0.1.0.0.0.1.0.0.0.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A B C Hl Hr; only 1: split; only 1: intros [HypL HypR]; only 1: split; only 1: intros; only 1: apply HypL; only 1: split; only 1: assumption; only 1: apply Hl; only 1: assumption; only 1: intros; only 1: apply HypR; only 1: split; only 1: assumption; only 1: apply Hr; only 1: assumption; only 1: intros [HypL HypR]; only 1: split; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption; only 1: intros [? ?]; only 1: split; only 1: auto; only 1: assumption).	20.1026580334	122322
Coq.Init.Logic.and_comm	40	0.0.0.0.0.0.0.0.2	search with cache (only 1: split; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial; only 1: intros [? ?]; only 1: split; only 1: trivial; only 1: trivial).	0.021066904068	90
Coq.Init.Logic.and_assoc	40	2.0.5.0.1.2.0.0.5.1.1.0.16	search with cache (only 1: intro H1; only 1: intros; only 1: split; only 1: split; only 1: apply H; only 1: split; only 1: apply H; only 1: apply H; only 1: split; only 1: split; only 1: apply H; only 1: apply H; only 1: apply H).	5.62154507637	51892
Coq.Init.Logic.or_cancel_l	40
Coq.Init.Logic.or_cancel_r	40
Coq.Init.Logic.or_comm	40	0.0.0.1.1.0.0.0.1.1.0.0	search with cache (only 1: intros; only 1: split; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial; only 1: intros [?| ?]; only 1: right; only 1: trivial; only 1: left; only 1: trivial).	0.142179965973	948
Coq.Init.Logic.or_assoc	40
Coq.Init.Logic.iff_and	40	1.4	search with cache (only 1: intros; only 1: assumption).	0.00813388824463	14
Coq.Init.Logic.iff_to_and	40	3.3.0.3	search with cache (only 1: intro A; only 1: split; only 1: trivial; only 1: trivial).	0.054839849472	241
Coq.Init.Logic.inst	40	7.1	search with cache (only 1: intro H; only 1: auto).	0.00672316551208	14
Coq.Init.Logic.gen	40	0.0	search with cache (only 1: unfold all; only 1: auto).	0.00546789169312	2
Coq.Init.Logic.absurd	40	4.0.8.1.0.0	search with cache (only 1: intro A; only 1: unfold not; only 1: intro H; only 1: intros; only 1: elim H1; only 1: assumption).	0.100033998489	1080
Coq.Init.Logic.eq_sym	40	1.6.2	search with cache (only 1: intro H1; only 1: elim H1; only 1: split).	0.0128359794617	50
Coq.Init.Logic.eq_trans	40	0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.00618505477905	3
Coq.Init.Logic.eq_trans_r	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00588703155518	2
Coq.Init.Logic.f_equal	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00544404983521	2
Coq.Init.Logic.not_eq_sym	40	0.4.1.5	search with cache (only 1: intro H1; only 1: destruct 1; only 1: elim H1; only 1: trivial).	0.0317230224609	201
Coq.Init.Logic.eq_sind_r	40	2.5.39	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: auto).	0.592158079147	10260
Coq.Init.Logic.eq_ind_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00595998764038	3
Coq.Init.Logic.eq_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00597906112671	3
Coq.Init.Logic.eq_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: elim eq_sym with (1 := H0); only 1: assumption).	0.00665497779846	3
Coq.Init.Logic.f_equal_dep	40
Coq.Init.Logic.f_equal_dep2	40	0.4.0	search with cache (only 1: destruct H; only 1: destruct 1; only 1: reflexivity).	0.00901579856873	7
Coq.Init.Logic.rew_opp_r	40	0.0	search with cache (only 1: destruct H; only 1: reflexivity).	0.00682282447815	2
Coq.Init.Logic.rew_opp_l	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00740098953247	3
Coq.Init.Logic.f_equal2	40	0.0.1.6	search with cache (only 1: intros ? ? ? Fl Fr; only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0242030620575	64
Coq.Init.Logic.f_equal3	40	0.1.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00793385505676	5
Coq.Init.Logic.f_equal4	40	0.1.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.00914907455444	6
Coq.Init.Logic.f_equal5	40	0.1.0.0.0.0	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: destruct 1; only 1: reflexivity).	0.0108270645142	7
Coq.Init.Logic.f_equal_compose	40	5.5.10.4.15	search with cache (only 1: intro H; only 1: intros A B C Hl Hr; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	1.08157420158	9116
Coq.Init.Logic.eq_trans_refl_l	40	1.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.00630712509155	5
Coq.Init.Logic.eq_trans_refl_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00618290901184	2
Coq.Init.Logic.eq_sym_involutive	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.00636291503906	2
Coq.Init.Logic.eq_trans_sym_inv_l	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0064651966095	2
Coq.Init.Logic.eq_trans_sym_inv_r	40	0.0	search with cache (only 1: destruct e; only 1: reflexivity).	0.0064868927002	2
Coq.Init.Logic.eq_trans_assoc	40	0.1.3.0	search with cache (only 1: destruct e; only 1: intros h1 h2; only 1: destruct h2; only 1: trivial).	0.00901508331299	8
Coq.Init.Logic.rew_map	40	0.1.5	search with cache (only 1: intros A C h1 h2; only 1: destruct H; only 1: reflexivity).	0.0094108581543	9
Coq.Init.Logic.eq_trans_map	40	5.11.16.4.3.13.43	search with cache (only 1: intros A x P H y H0; only 1: intro H1; only 1: intros h1 h2; only 1: destruct h2; only 1: intro H; only 1: destruct H, 1; only 1: auto).	25.1789050102	240648
Coq.Init.Logic.map_subst	40	0.0.0	search with cache (only 1: intros; only 1: destruct H; only 1: reflexivity).	0.00773191452026	3
Coq.Init.Logic.map_subst_map	40	0.1	search with cache (only 1: destruct H; only 1: reflexivity).	0.00840306282043	3
Coq.Init.Logic.rew_swap	40	6.1.0	search with cache (only 1: intros; only 1: destruct H; only 1: assumption).	0.00861597061157	10
Coq.Init.Logic.rew_compose	40	3.0.0	search with cache (only 1: intros; only 1: destruct H2; only 1: reflexivity).	0.00795602798462	6
Coq.Init.Logic.eq_id_comm_l	40
Coq.Init.Logic.eq_id_comm_r	40
Coq.Init.Logic.eq_refl_map_distr	40	0.0	search with cache (only 1: intros; only 1: reflexivity).	0.00672602653503	2
Coq.Init.Logic.eq_trans_map_distr	40	0.2.2.25.1	search with cache (only 1: destruct e; only 1: intros; only 1: rewrite eq_trans_refl_l; only 1: rewrite eq_trans_refl_l; only 1: trivial).	0.833749055862	5818
Coq.Init.Logic.eq_sym_map_distr	40	0.0.3	search with cache (only 1: destruct e; only 1: simpl; only 1: reflexivity).	0.010360956192	16
Coq.Init.Logic.eq_trans_sym_distr	40	0.7.1	search with cache (only 1: destruct e'; only 1: rewrite eq_trans_refl_l; only 1: reflexivity).	0.110780000687	74
Coq.Init.Logic.eq_trans_rew_distr	40	0.11	search with cache (only 1: destruct e, e'; only 1: reflexivity).	0.0260238647461	116
Coq.Init.Logic.rew_const	40	0.2	search with cache (only 1: destruct e; only 1: reflexivity).	0.00590801239014	13
Coq.Init.Logic.unique_existence	40
Coq.Init.Logic.forall_exists_unique_domain_coincide	40
Coq.Init.Logic.forall_exists_coincide_unique_domain	40
Coq.Init.Logic.exists_inhabited	40	2.13.2	search with cache (only 1: intros; only 1: destruct H; only 1: auto).	0.0578260421753	544
Coq.Init.Logic.inhabited_covariant	40	0.0.11	search with cache (only 1: intro H; only 1: destruct 1; only 1: auto).	0.0224578380585	146
Coq.Init.Logic.eq_stepl	40	0.0.9	search with cache (only 1: destruct 1; only 1: destruct 1; only 1: trivial).	0.0370750427246	150
Coq.Init.Logic.iff_stepl	40	0.0.0.0	search with cache (only 1: intros A B C [H1 H2] [H3 H4]; only 1: split; only 1: auto; only 1: auto).	0.00658416748047	4
Coq.Init.Logic.eq_ex_uncurried	40
Coq.Init.Logic.rew_ex	40
Coq.Init.Logic.eq_ex2_uncurried	40	0.0.6.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct H; only 1: destruct p; only 1: reflexivity).	0.0289859771729	65
Coq.Init.Logic.rew_ex2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.00792193412781	2
Coq.Init.Logic_Type.identity_sym	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00695395469666	2
Coq.Init.Logic_Type.identity_trans	40	0.0	search with cache (only 1: destruct 2; only 1: trivial).	0.00750589370728	2
Coq.Init.Logic_Type.identity_congr	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00710105895996	2
Coq.Init.Logic_Type.not_identity_sym	40	0.0.0.1.1	search with cache (only 1: red; only 1: intros h1 h2; only 1: apply h1; only 1: destruct h2; only 1: trivial).	0.0113899707794	23
Coq.Init.Logic_Type.identity_ind_r	40	0.11.2	search with cache (only 1: intros A x y z H1 H2; only 1: destruct H2; only 1: auto).	0.046108007431	305
Coq.Init.Logic_Type.identity_rec_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00727200508118	3
Coq.Init.Logic_Type.identity_rect_r	40	0.0.0	search with cache (only 1: intros A x P H y H0; only 1: case identity_sym with (1 := H0); only 1: trivial).	0.00734400749207	3
Coq.Init.Specif.sigT_eta	40	0.2	search with cache (only 1: destruct p; only 1: reflexivity).	0.00912499427795	4
Coq.Init.Specif.sig_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.00753688812256	2
Coq.Init.Specif.sigT2_eta	40	0.1	search with cache (only 1: destruct p; only 1: reflexivity).	0.0081582069397	3
Coq.Init.Specif.sig2_eta	40	0.0	search with cache (only 1: destruct p; only 1: reflexivity).	0.0082859992981	2
Coq.Init.Specif.exists_to_inhabited_sig	40	0.0.2.11.9	search with cache (only 1: intro; only 1: destruct H; only 1: split; only 1: exists x; only 1: trivial).	0.104228973389	880
Coq.Init.Specif.inhabited_sig_to_exists	40	0.0.1.51.42	search with cache (only 1: intro H1; only 1: elim H1; only 1: intros [x y]; only 1: exists x; only 1: assumption).	0.982215881348	18743
Coq.Init.Specif.eq_existT_uncurried	40	0.0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0114078521729	4
Coq.Init.Specif.eq_sigT_uncurried	40
Coq.Init.Specif.eq_existT_curried	40	0.0.0	search with cache (only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0108690261841	3
Coq.Init.Specif.eq_existT_curried_map	40	0.0	search with cache (only 1: destruct p, q; only 1: reflexivity).	0.0134961605072	2
Coq.Init.Specif.eq_existT_curried_trans	40
Coq.Init.Specif.eq_existT_curried_congr	40	0.20.14.3.9	search with cache (only 1: destruct r, q, p; only 1: simpl in *; only 1: intro; only 1: destruct H; only 1: reflexivity).	6.17414402962	18325
Coq.Init.Specif.eq_sigT_uncurried_iff	40
Coq.Init.Specif.eq_sigT_rect	40
Coq.Init.Specif.rew_sigT	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0110430717468	2
Coq.Init.Specif.eq_exist_uncurried	40	0.0.0	search with cache (only 1: destruct pq as [p q]; only 1: destruct p, q; only 1: reflexivity).	0.0116438865662	3
Coq.Init.Specif.eq_sig_uncurried	40	0.0.0.0.0.0	search with cache (only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct pq as [p q]; only 1: destruct q; only 1: destruct p; only 1: reflexivity).	0.0186109542847	6
Coq.Init.Specif.eq_sig_rect	40
Coq.Init.Specif.eq_sig_uncurried_iff	40	4.5.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: apply eq_exist_uncurried).	0.463953018188	829
Coq.Init.Specif.rew_sig	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0084240436554	2
Coq.Init.Specif.eq_existT2_uncurried	40
Coq.Init.Specif.eq_sigT2_uncurried	40	0.0.0.2.1.1	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct u as [u1 u2], v as [v1 v2]; only 1: simpl in *; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0273730754852	15
Coq.Init.Specif.eq_sigT2_uncurried_iff	40	3.7.0.0.1.0.1.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_existT2_uncurried).	1.51002001762	1961
Coq.Init.Specif.eq_sigT2_rect	40
Coq.Init.Specif.rew_sigT2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0109460353851	2
Coq.Init.Specif.eq_exist2_uncurried	40	0.0.0.0	search with cache (only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl in *; only 1: reflexivity).	0.0126800537109	4
Coq.Init.Specif.eq_sig2_uncurried	40	0.0.0.0.0.0	search with cache (only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: simpl in *; only 1: destruct pqr as [p q r]; only 1: destruct r, q, p; only 1: simpl; only 1: reflexivity).	0.0217380523682	6
Coq.Init.Specif.eq_sig2_uncurried_iff	40	2.8.0.0.0.0.0.0	search with cache (only 1: split; only 1: intro; only 1: subst; only 1: exists eq_refl; only 1: reflexivity; only 1: reflexivity; only 1: destruct u as [u1 u2 u3], v as [v1 v2 v3]; only 1: apply eq_exist2_uncurried).	1.35786414146	1504
Coq.Init.Specif.eq_sig2_rect	40
Coq.Init.Specif.rew_sig2	40	0.0	search with cache (only 1: destruct H, u; only 1: reflexivity).	0.0109839439392	2
Coq.Init.Specif.Choice	40
Coq.Init.Specif.Choice2	40
Coq.Init.Specif.bool_choice	40
Coq.Init.Specif.dependent_choice	40
Coq.Init.Specif.absurd_set	40	0.0.0	search with cache (only 1: unfold not; only 1: intros A C h1 h2; only 1: destruct (h2 h1)).	0.00562906265259	3
Coq.QArith.QOrderedType.Q_as_OT.lt_strorder	40	0.0.0.0.0.0.3.2.0.0.1	search with cache (only 1: split; only 1: red; only 1: red; only 1: intros; only 1: apply Z.lt_irrefl; only 1: red; only 1: intros; only 1: apply Qle_lt_trans with y; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	0.58869099617	884
Coq.QArith.QOrderedType.Q_as_OT.lt_compat	40	0.0.0	search with cache (only 1: intros p q H r s H'; only 1: rewrite 2!Qlt_alt, H, H'; only 1: auto with *).	0.0178241729736	3
Coq.QArith.Qreduction.Qred_correct	40
Coq.QArith.Qreduction.Qred_complete	40
Coq.QArith.Qreduction.Qred_eq_iff	40
Coq.QArith.Qreduction.Qred_comp_Proper	40
Coq.QArith.Qreduction.Qplus'_correct	40
Coq.QArith.Qreduction.Qmult'_correct	40	1.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00807285308838	3
Coq.QArith.Qreduction.Qminus'_correct	40	2.0	search with cache (only 1: intros; only 1: apply Qred_correct).	0.00816988945007	4
Coq.QArith.Qreduction.Qplus'_comp_Proper	40
Coq.QArith.Qreduction.Qmult'_comp_Proper	40	0.0.8.0	search with cache (only 1: intros; only 1: unfold Qmult'; only 1: rewrite H, H0; only 1: auto with qarith).	0.393013000488	194
Coq.QArith.Qreduction.Qminus'_comp_Proper	40	0.0.9.0	search with cache (only 1: intros; only 1: unfold Qminus'; only 1: rewrite H, H0; only 1: auto with qarith).	0.621839046478	316
Coq.QArith.Qreduction.Qred_opp	40
Coq.QArith.Qreduction.Qred_compare	40	0.1	search with cache (only 1: intros; only 1: now rewrite !Qred_correct).	0.298009872437	108
Coq.QArith.Qreduction.Qred_le	40	4	search with cache (only 1: now rewrite !Qred_correct).	0.117040157318	34
Coq.QArith.Qreduction.Qred_lt	40	5	search with cache (only 1: now rewrite !Qred_correct).	0.100134134293	27
Coq.QArith.Qcabs.Qred_abs	40
Coq.QArith.Qcabs.Qcabs_canon	40	0.1.0.3.0.0.1.0.0.0.0.0	search with cache (only 1: destruct x as [[| a| a] d]; only 1: simpl; only 1: intros; only 1: auto; only 1: simpl; only 1: auto; only 1: simpl; only 1: destruct (Pos.ggcd a d) as [x [y z]]; only 1: intros H; only 1: simpl in *; only 1: injection H as [=<- <-]; only 1: auto).	15.0186350346	11056
Coq.QArith.Qcabs.Qcabs_case	40
Coq.QArith.Qcabs.Qcabs_pos	40
Coq.QArith.Qcabs.Qcabs_neg	40
Coq.QArith.Qcabs.Qcabs_nonneg	40	0.0.0.1.3	search with cache (only 1: unfold Qcle, Qcminus; only 1: simpl in *; only 1: apply Qabs_case; only 1: auto; only 1: apply (Qopp_le_compat x 0)).	0.0207009315491	26
Coq.QArith.Qcabs.Qcabs_opp	40
Coq.QArith.Qcabs.Qcabs_triangle	40	0.7.39	search with cache (only 1: Qc_unfolds; only 1: repeat rewrite Qred_correct; only 1: apply Qabs_triangle).	10.3428039551	8730
Coq.QArith.Qcabs.Qcabs_Qcmult	40
Coq.QArith.Qcabs.Qcabs_Qcminus	40
Coq.QArith.Qcabs.Qcle_Qcabs	40	2.5.0.4	search with cache (only 1: Qc_unfolds; only 1: fold (this x); only 1: set (a := x)  at 1; only 1: apply Qle_Qabs).	0.575600147247	607
Coq.QArith.Qcabs.Qcabs_triangle_reverse	40
Coq.QArith.Qcabs.Qcabs_Qcle_condition	40	1.2.5.9	search with cache (only 1: unfold Qcle, Qcabs, Qcminus, Qcplus, Qcopp, Q2Qc, this; only 1: repeat rewrite Qred_correct; only 1: rewrite Qabs_Qle_condition; only 1: intuition).	4.94021511078	3146
Coq.QArith.Qcabs.Qcabs_diff_Qcle_condition	40
Coq.QArith.Qcabs.Qcabs_null	40
Coq.QArith.Qpower.Qpower_positive_1	40
Coq.QArith.Qpower.Qpower_1	40
Coq.QArith.Qpower.Qpower_positive_0	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: rewrite IHn; only 1: reflexivity; only 1: simpl; only 1: reflexivity).	0.0358262062073	9
Coq.QArith.Qpower.Qpower_0	40
Coq.QArith.Qpower.Qpower_not_0_positive	40
Coq.QArith.Qpower.Qpower_pos_positive	40
Coq.QArith.Qpower.Qpower_pos	40
Coq.QArith.Qpower.Qmult_power_positive	40
Coq.QArith.Qpower.Qmult_power	40
Coq.QArith.Qpower.Qinv_power_positive	40	5.0.2.0.0.0.0.1.0.0.2	search with cache (only 1: induction n; only 1: simpl; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: rewrite Qinv_mult_distr; only 1: reflexivity; only 1: simpl; only 1: rewrite Qinv_mult_distr; only 1: repeat rewrite IHn; only 1: reflexivity; only 1: reflexivity).	8.91760802269	4358
Coq.QArith.Qpower.Qinv_power	40
Coq.QArith.Qpower.Qdiv_power	40
Coq.QArith.Qpower.Qinv_power_n	40
Coq.QArith.Qpower.Qpower_plus_positive	40
Coq.QArith.Qpower.Qpower_opp	40
Coq.QArith.Qpower.Qpower_minus_positive	40
Coq.QArith.Qpower.Qpower_plus	40
Coq.QArith.Qpower.Qpower_plus'	40
Coq.QArith.Qpower.Qpower_mult_positive	40
Coq.QArith.Qpower.Qpower_mult	40
Coq.QArith.Qpower.Zpower_Qpower	40
Coq.QArith.Qpower.Qsqr_nonneg	40
Coq.QArith.Qpower.Qpower_decomp	40
Coq.QArith.Qfield.Qsrt	40
Coq.QArith.Qfield.Qsft	40
Coq.QArith.Qfield.Qpower_theory	40	1.0.4.1.0.0.0.1	search with cache (only 1: constructor; only 1: intros; only 1: destruct n; only 1: simpl; only 1: auto with *; only 1: red; only 1: simpl; only 1: trivial).	1.09205102921	683
Coq.QArith.Qfield.ex1	40	0	search with cache (only 1: exact Qmult_plus_distr_l).	0.0141899585724	1
Coq.QArith.Qfield.ex2	40	0	search with cache (only 1: exact Qplus_comm).	0.0144739151001	1
Coq.QArith.Qfield.ex3	40	0.0	search with cache (only 1: intros; only 1: ring).	0.0323719978333	2
Coq.QArith.Qfield.ex4	40	1	search with cache (only 1: ring).	0.0222041606903	2
Coq.QArith.Qfield.ex5	40	0	search with cache (only 1: ring).	0.0236158370972	1
Coq.QArith.Qfield.ex6	40	0	search with cache (only 1: ring).	0.0238571166992	1
Coq.QArith.Qfield.ex7	40	0.1	search with cache (only 1: intros; only 1: ring).	0.0288360118866	3
Coq.QArith.Qfield.ex8	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0285699367523	2
Coq.QArith.Qfield.ex9	40	0.0	search with cache (only 1: intro; only 1: ring).	0.0292279720306	2
Coq.QArith.Qfield.ex10	40
Coq.QArith.Qfield.Qopp_plus	40	2.0.2.2	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: ring).	0.0539059638977	11
Coq.QArith.Qfield.Qopp_opp	40	0.0.0.0	search with cache (only 1: red; only 1: simpl; only 1: intros; only 1: ring).	0.0338189601898	4
Coq.QArith.Qcanon.Qred_identity	40
Coq.QArith.Qcanon.Qred_identity2	40
Coq.QArith.Qcanon.Qred_iff	40
Coq.QArith.Qcanon.Qc_is_canon	40
Coq.QArith.Qcanon.Qc_decomp	40	0.0.0.0.0.0.0	search with cache (only 1: intros (q, hq) (q', hq') H; only 1: simpl in *; only 1: subst q'; only 1: f_equal; only 1: apply eq_proofs_unicity; only 1: intros; only 1: repeat decide equality).	0.0494899749756	7
Coq.QArith.Qcanon.Qred_involutive	40	0.4.6	search with cache (only 1: intros E; only 1: apply Qred_complete; only 1: apply Qred_correct).	0.525072097778	633
Coq.QArith.Qcanon.Q2Qc_eq_iff	40
Coq.QArith.Qcanon.Qceq_alt	40
Coq.QArith.Qcanon.Qclt_alt	40	0.0.2.1	search with cache (only 1: intros; only 1: split; only 1: auto; only 1: auto).	0.0808279514313	61
Coq.QArith.Qcanon.Qcgt_alt	40
Coq.QArith.Qcanon.Qcle_alt	40	5.0	search with cache (only 1: intros; only 1: intuition).	0.0149760246277	11
Coq.QArith.Qcanon.Qcge_alt	40
Coq.QArith.Qcanon.Qc_eq_dec	40
Coq.QArith.Qcanon.Q_apart_0_1	40	6.1	search with cache (only 1: intro H; only 1: discriminate).	0.0227868556976	21
Coq.QArith.Qcanon.Qcplus_assoc	40
Coq.QArith.Qcanon.Qcplus_0_l	40	32.1.3	search with cache (only 1: intros; only 1: qc; only 1: ring).	13.1410701275	21561
Coq.QArith.Qcanon.Qcplus_0_r	40	33.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	7.39338803291	12022
Coq.QArith.Qcanon.Qcplus_comm	40
Coq.QArith.Qcanon.Qcopp_involutive	40	9.7.19	search with cache (only 1: intros (x, y); only 1: qc; only 1: ring).	4.69895601273	8340
Coq.QArith.Qcanon.Qcplus_opp_r	40	36.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	18.0881140232	14749
Coq.QArith.Qcanon.Qcmult_assoc	40
Coq.QArith.Qcanon.Qcmult_0_l	40	1.0.5.0	search with cache (only 1: intros; only 1: apply Qc_is_canon; only 1: unfold Q2Qc; only 1: auto with qarith).	0.113066911697	31
Coq.QArith.Qcanon.Qcmult_0_r	40
Coq.QArith.Qcanon.Qcmult_1_l	40	33.0.0	search with cache (only 1: intros; only 1: qc; only 1: ring).	38.1541080475	35553
Coq.QArith.Qcanon.Qcmult_1_r	40	0.1.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_1_l).	0.0204870700836	5
Coq.QArith.Qcanon.Qcmult_comm	40	16.15.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: split).	7.67580914497	12904
Coq.QArith.Qcanon.Qcmult_plus_distr_r	40
Coq.QArith.Qcanon.Qcmult_plus_distr_l	40
Coq.QArith.Qcanon.Qcmult_integral	40
Coq.QArith.Qcanon.Qcmult_integral_l	40
Coq.QArith.Qcanon.Qcmult_inv_r	40
Coq.QArith.Qcanon.Qcmult_inv_l	40	0.0.6.0.0	search with cache (only 1: intros; only 1: qc; only 1: rewrite Qmult_comm; only 1: apply Qmult_inv_r; only 1: auto).	0.144757986069	74
Coq.QArith.Qcanon.Qcinv_mult_distr	40
Coq.QArith.Qcanon.Qcdiv_mult_l	40
Coq.QArith.Qcanon.Qcmult_div_r	40
Coq.QArith.Qcanon.Qcle_refl	40	0.19.0	search with cache (only 1: intros; only 1: red; only 1: auto with qarith).	0.264278888702	787
Coq.QArith.Qcanon.Qcle_antisym	40	2.0.8	search with cache (only 1: intros a b Hg Hb; only 1: apply Qc_is_canon; only 1: auto with qarith).	0.361923933029	311
Coq.QArith.Qcanon.Qcle_trans	40
Coq.QArith.Qcanon.Qclt_not_eq	40
Coq.QArith.Qcanon.Qclt_le_weak	40	1.7.4.0	search with cache (only 1: unfold Qclt; only 1: unfold Qcle; only 1: intros a b H; only 1: auto with qarith).	1.72828793526	1844
Coq.QArith.Qcanon.Qcle_lt_trans	40
Coq.QArith.Qcanon.Qclt_le_trans	40
Coq.QArith.Qcanon.Qclt_trans	40	2.0.5.0.1	search with cache (only 1: intros; only 1: eapply Qle_lt_trans; only 1: apply Qlt_le_weak; only 1: eauto; only 1: eauto).	0.442737817764	500
Coq.QArith.Qcanon.Qcnot_lt_le	40	3.8.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros a b H; only 1: auto with qarith).	0.945271968842	1072
Coq.QArith.Qcanon.Qcnot_le_lt	40	18.0.0	search with cache (only 1: unfold Qcle, Qclt; only 1: intros; only 1: auto with qarith).	6.96309804916	8756
Coq.QArith.Qcanon.Qclt_not_le	40	0.1.1.1.0.3.2	search with cache (only 1: intros; only 1: intro; only 1: destruct (Qlt_not_eq _ _ H); only 1: apply Qle_antisym; only 1: apply Qlt_le_weak; only 1: auto; only 1: auto).	1.19897198677	1468
Coq.QArith.Qcanon.Qcle_not_lt	40	1.4.0.2	search with cache (only 1: intros; only 1: contradict H; only 1: apply Qlt_not_le; only 1: auto).	0.214230060577	216
Coq.QArith.Qcanon.Qcle_lt_or_eq	40
Coq.QArith.Qcanon.Qc_dec	40
Coq.QArith.Qcanon.Qclt_le_dec	40
Coq.QArith.Qcanon.Qcopp_le_compat	40
Coq.QArith.Qcanon.Qcle_minus_iff	40
Coq.QArith.Qcanon.Qclt_minus_iff	40
Coq.QArith.Qcanon.Qcplus_le_compat	40
Coq.QArith.Qcanon.Qcmult_le_compat_r	40
Coq.QArith.Qcanon.Qcmult_lt_0_le_reg_r	40
Coq.QArith.Qcanon.Qcmult_lt_compat_r	40
Coq.QArith.Qcanon.Qcpower_1	40
Coq.QArith.Qcanon.Qcpower_0	40	1.0.13.0.0	search with cache (only 1: induction n; only 1: simpl; only 1: tauto; only 1: simpl; only 1: auto with qarith).	1.60966110229	2188
Coq.QArith.Qcanon.Qcpower_pos	40
Coq.QArith.Qcanon.Qc_eq_bool_correct	40
Coq.QArith.Qcanon.Qcrt	40
Coq.QArith.Qcanon.Qcft	40
Coq.QArith.Qcanon.test_field	40	0.0.0.0.0.0.3.0.0	search with cache (only 1: unfold Qcdiv; only 1: intros; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_comm; only 1: rewrite Qcmult_assoc; only 1: rewrite Qcmult_inv_l; only 1: apply Qcmult_1_l; only 1: auto).	0.251713991165	178
Coq.QArith.Qreals.IZR_nz	40	1.2.1	search with cache (only 1: red; only 1: intros H0; only 1: now apply not_0_IZR).	0.0303370952606	7
Coq.QArith.Qreals.eqR_Qeq	40
Coq.QArith.Qreals.Qeq_eqR	40
Coq.QArith.Qreals.Rle_Qle	40
Coq.QArith.Qreals.Qle_Rle	40
Coq.QArith.Qreals.Rlt_Qlt	40
Coq.QArith.Qreals.Qlt_Rlt	40
Coq.QArith.Qreals.Q2R_plus	40
Coq.QArith.Qreals.Q2R_mult	40
Coq.QArith.Qreals.Q2R_opp	40
Coq.QArith.Qreals.Q2R_minus	40
Coq.QArith.Qreals.Q2R_inv	40
Coq.QArith.Qreals.Q2R_div	40
Coq.QArith.QArith_base.inject_Z_injective	40
Coq.QArith.QArith_base.Qeq_alt	40
Coq.QArith.QArith_base.Qlt_alt	40	4.0.1.0	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0695219039917	17
Coq.QArith.QArith_base.Qgt_alt	40
Coq.QArith.QArith_base.Qle_alt	40	3.1.1.1	search with cache (only 1: symmetry; only 1: symmetry; only 1: symmetry; only 1: reflexivity).	0.0646901130676	12
Coq.QArith.QArith_base.Qge_alt	40
Coq.QArith.QArith_base.Qcompare_antisym	40
Coq.QArith.QArith_base.Qcompare_spec	40
Coq.QArith.QArith_base.Qeq_refl	40	4	search with cache (only 1: reflexivity).	0.00758719444275	5
Coq.QArith.QArith_base.Qeq_sym	40	4.1	search with cache (only 1: symmetry; only 1: trivial).	0.0107078552246	7
Coq.QArith.QArith_base.Qeq_trans	40
Coq.QArith.QArith_base.Q_Setoid	40
Coq.QArith.QArith_base.Qeq_dec	40
Coq.QArith.QArith_base.Qeq_bool_iff	40
Coq.QArith.QArith_base.Qeq_bool_eq	40	1	search with cache (only 1: apply Zeq_is_eq_bool).	0.0334370136261	25
Coq.QArith.QArith_base.Qeq_eq_bool	40	0	search with cache (only 1: apply Qeq_bool_iff).	0.00728297233582	1
Coq.QArith.QArith_base.Qeq_bool_neq	40
Coq.QArith.QArith_base.Qle_bool_iff	40
Coq.QArith.QArith_base.Qle_bool_imp_le	40	0	search with cache (only 1: apply Zle_is_le_bool).	0.0073459148407	1
Coq.QArith.QArith_base.Qnot_eq_sym	40	1	search with cache (only 1: auto with qarith).	0.00765490531921	2
Coq.QArith.QArith_base.Qeq_bool_comm	40
Coq.QArith.QArith_base.Qeq_bool_refl	40	0.0	search with cache (only 1: apply Qeq_bool_iff; only 1: auto with qarith).	0.00923705101013	2
Coq.QArith.QArith_base.Qeq_bool_sym	40	0.0	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: auto with qarith).	0.0156359672546	2
Coq.QArith.QArith_base.Qeq_bool_trans	40	0.0.0.0.0.2	search with cache (only 1: rewrite !Qeq_bool_iff; only 1: unfold Qeq; only 1: intros XY YZ; only 1: apply Z.mul_reg_r with (QDen y); only 1: auto with qarith; only 1: now rewrite Z.mul_shuffle0, XY, Z.mul_shuffle0, YZ, Z.mul_shuffle0).	0.0367050170898	8
Coq.QArith.QArith_base.Qmake_Qdiv	40	5.0.1.0	search with cache (only 1: unfold Qeq; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: now constructor).	0.019152879715	12
Coq.QArith.QArith_base.Qplus_comp	40
Coq.QArith.QArith_base.Qopp_comp	40
Coq.QArith.QArith_base.Qminus_comp	40
Coq.QArith.QArith_base.Qmult_comp	40
Coq.QArith.QArith_base.Qinv_comp	40
Coq.QArith.QArith_base.Qdiv_comp	40
Coq.QArith.QArith_base.Qcompare_comp	40
Coq.QArith.QArith_base.Qle_comp	40
Coq.QArith.QArith_base.Qlt_compat	40
Coq.QArith.QArith_base.Qeqb_comp	40	6.2.3.8.3	search with cache (only 1: intros x x' Hx y y' Hy; only 1: apply eq_true_iff_eq; only 1: rewrite !Qeq_bool_iff; only 1: rewrite Hx, Hy; only 1: now symmetry).	13.7688920498	13936
Coq.QArith.QArith_base.Qleb_comp	40
Coq.QArith.QArith_base.Q_apart_0_1	40	3.2.0	search with cache (only 1: rewrite <- Qeq_bool_iff; only 1: rewrite Qeq_bool_iff; only 1: now subst).	0.0340089797974	16
Coq.QArith.QArith_base.Qplus_assoc	40	5.3.0.2.5.5.1	search with cache (only 1: destruct x; only 1: intros; only 1: apply Qeq_bool_iff; only 1: apply Zeq_is_eq_bool; only 1: simpl; only 1: simpl_mult; only 1: ring).	13.6108241081	6163
Coq.QArith.QArith_base.Qplus_0_l	40	0.9.0.2	search with cache (only 1: unfold Qeq; only 1: simpl in *; only 1: intros; only 1: ring).	0.979845046997	190
Coq.QArith.QArith_base.Qplus_0_r	40	0.3.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0312440395355	8
Coq.QArith.QArith_base.Qplus_comm	40	1.0.0.0.2.3.7	search with cache (only 1: intros; only 1: apply Qeq_bool_iff; only 1: apply Zeq_is_eq_bool; only 1: simpl; only 1: simpl_mult; only 1: ring_simplify; only 1: now constructor).	1.03339505196	585
Coq.QArith.QArith_base.Qopp_involutive	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.019859790802	4
Coq.QArith.QArith_base.Qplus_opp_r	40	0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl; only 1: ring).	0.0214529037476	4
Coq.QArith.QArith_base.Qplus_inj_r	40
Coq.QArith.QArith_base.Qplus_inj_l	40
Coq.QArith.QArith_base.Qmult_assoc	40	1.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: simpl_mult; only 1: ring).	0.0350859165192	6
Coq.QArith.QArith_base.Qmult_0_l	40	0.0.0	search with cache (only 1: red; only 1: simpl in *; only 1: reflexivity).	0.0106890201569	3
Coq.QArith.QArith_base.Qmult_0_r	40	0.0.5.0	search with cache (only 1: intros; only 1: red; only 1: simpl in *; only 1: ring).	0.0323569774628	17
Coq.QArith.QArith_base.Qmult_1_l	40
Coq.QArith.QArith_base.Qmult_1_r	40	1.1.0.0.0.0.0.0	search with cache (only 1: intro; only 1: red; only 1: simpl; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: simpl; only 1: ring).	0.0573859214783	17
Coq.QArith.QArith_base.Qmult_comm	40	1.0.0.0.0.0.0.0.0	search with cache (only 1: intros (x1, x2); only 1: unfold Qeq, Qplus; only 1: simpl in *; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: rewrite Pos.mul_comm; only 1: ring).	0.0410811901093	11
Coq.QArith.QArith_base.Qmult_plus_distr_r	40	1.3.0.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: rewrite Pos.mul_comm; only 1: simpl_mult; only 1: ring).	0.2043800354	26
Coq.QArith.QArith_base.Qmult_plus_distr_l	40	0.0.0.0.0	search with cache (only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: unfold Qeq, Qmult, Qplus; only 1: simpl; only 1: simpl_mult; only 1: ring).	0.0472769737244	5
Coq.QArith.QArith_base.Qmult_integral	40
Coq.QArith.QArith_base.Qmult_integral_l	40
Coq.QArith.QArith_base.inject_Z_plus	40	8.0.1.2.3.6.0	search with cache (only 1: generalize x, y; only 1: intros; only 1: clear x y; only 1: unfold Qeq, Qplus; only 1: simpl; only 1: rewrite !Z.mul_1_r; only 1: trivial).	5.4516119957	9308
Coq.QArith.QArith_base.inject_Z_mult	40	0.0.2.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: unfold Qeq, Qmult; only 1: simpl; only 1: f_equal).	0.013482093811	6
Coq.QArith.QArith_base.inject_Z_opp	40	0.1.0	search with cache (only 1: unfold Qplus, inject_Z; only 1: compute; only 1: f_equal).	0.0107650756836	4
Coq.QArith.QArith_base.Qinv_involutive	40
Coq.QArith.QArith_base.Qmult_inv_r	40
Coq.QArith.QArith_base.Qinv_mult_distr	40
Coq.QArith.QArith_base.Qdiv_mult_l	40
Coq.QArith.QArith_base.Qmult_div_r	40
Coq.QArith.QArith_base.Qinv_plus_distr	40	0.3.0.0.0	search with cache (only 1: unfold Qeq, Qplus; only 1: simpl; only 1: intros; only 1: simpl_mult; only 1: ring).	0.0888810157776	8
Coq.QArith.QArith_base.Qinv_minus_distr	40	0.0.0.0.0	search with cache (only 1: intros; only 1: unfold Qeq; only 1: simpl; only 1: rewrite Pos2Z.inj_mul; only 1: ring).	0.0257060527802	5
Coq.QArith.QArith_base.Qmult_inj_r	40
Coq.QArith.QArith_base.Qmult_inj_l	40
Coq.QArith.QArith_base.Qle_refl	40	18.7	search with cache (only 1: red; only 1: now reflexivity).	0.625192165375	777
Coq.QArith.QArith_base.Qle_antisym	40
Coq.QArith.QArith_base.Qle_trans	40
Coq.QArith.QArith_base.Qlt_irrefl	40	0.3.7	search with cache (only 1: compute; only 1: apply Z.ge_le_iff; only 1: auto with zarith).	0.0843091011047	61
Coq.QArith.QArith_base.Qlt_not_eq	40
Coq.QArith.QArith_base.Zle_Qle	40	1.1.2.0.7.4.19	search with cache (only 1: generalize x, y; only 1: intros; only 1: unfold Qle; only 1: simpl; only 1: f_equal; only 1: ring; only 1: ring).	12.0902309418	15207
Coq.QArith.QArith_base.Zlt_Qlt	40
Coq.QArith.QArith_base.Qle_lteq	40
Coq.QArith.QArith_base.Qlt_le_weak	40
Coq.QArith.QArith_base.Qle_lt_trans	40
Coq.QArith.QArith_base.Qlt_le_trans	40
Coq.QArith.QArith_base.Qlt_trans	40
Coq.QArith.QArith_base.Qnot_lt_le	40	10	search with cache (only 1: apply Z.ge_le_iff).	0.0149052143097	21
Coq.QArith.QArith_base.Qnot_le_lt	40
Coq.QArith.QArith_base.Qlt_not_le	40	0	search with cache (only 1: apply Z.nle_gt).	0.00586104393005	1
Coq.QArith.QArith_base.Qle_not_lt	40	0	search with cache (only 1: apply Z.nlt_ge).	0.00579190254211	1
Coq.QArith.QArith_base.Qle_lt_or_eq	40
Coq.QArith.QArith_base.Q_dec	40
Coq.QArith.QArith_base.Qlt_le_dec	40
Coq.QArith.QArith_base.Qarchimedean	40
Coq.QArith.QArith_base.Qopp_le_compat	40
Coq.QArith.QArith_base.Qle_minus_iff	40
Coq.QArith.QArith_base.Qlt_minus_iff	40
Coq.QArith.QArith_base.Qplus_le_compat	40
Coq.QArith.QArith_base.Qplus_lt_le_compat	40
Coq.QArith.QArith_base.Qplus_le_l	40
Coq.QArith.QArith_base.Qplus_le_r	40	0.0.0.0.0.0.0.0.0.0.0.5	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_le_compat; only 1: auto with *; only 1: auto with *).	15.6355521679	3265
Coq.QArith.QArith_base.Qplus_lt_l	40
Coq.QArith.QArith_base.Qplus_lt_r	40	0.0.0.0.0.0.0.0.0.0.0.6	search with cache (only 1: rewrite (Qplus_comm z x), (Qplus_comm z y); only 1: split; only 1: intros; only 1: rewrite <- (Qplus_0_r x), <- (Qplus_0_r y), <- (Qplus_opp_r z); only 1: do 2 rewrite Qplus_assoc; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *; only 1: intros; only 1: apply Qplus_lt_le_compat; only 1: auto with *; only 1: auto with *).	14.7819209099	4118
Coq.QArith.QArith_base.Qmult_le_compat_r	40
Coq.QArith.QArith_base.Qmult_lt_0_le_reg_r	40
Coq.QArith.QArith_base.Qmult_le_r	40
Coq.QArith.QArith_base.Qmult_le_l	40	0.0.0.0.0.0.0.3	search with cache (only 1: rewrite (Qmult_comm z x), (Qmult_comm z y); only 1: split; only 1: intro; only 1: now apply Qmult_lt_0_le_reg_r with z; only 1: intro; only 1: apply Qmult_le_compat_r; only 1: auto with qarith; only 1: auto with qarith).	0.463676929474	161
Coq.QArith.QArith_base.Qmult_lt_compat_r	40	0.1.0.2.0.0.2.5	search with cache (only 1: unfold Qle, Qlt; only 1: intros (x1, x2) (y1, y2) (z1, z2); only 1: simpl; only 1: simpl_mult; only 1: rewrite Z.mul_1_r; only 1: intros; only 1: match goal with | |- (?a < ?b)%Z => ring_simplify x1 y1 (Z.pos x2) (Z.pos y2) a b end; only 1: do 2 (apply Z.mul_lt_mono_pos_r; try easy)).	11.6452441216	10597
Coq.QArith.QArith_base.Qmult_lt_r	40
Coq.QArith.QArith_base.Qmult_lt_l	40
Coq.QArith.QArith_base.Qmult_le_0_compat	40
Coq.QArith.QArith_base.Qinv_le_0_compat	40	1.0.0.2.0.2.0.8	search with cache (only 1: intros [[| n| n] d]; only 1: red; only 1: auto with zarith; only 1: red; only 1: auto with zarith; only 1: red; only 1: simpl; only 1: auto with qarith).	10.2861468792	9117
Coq.QArith.QArith_base.Qle_shift_div_l	40
Coq.QArith.QArith_base.Qle_shift_inv_l	40
Coq.QArith.QArith_base.Qle_shift_div_r	40
Coq.QArith.QArith_base.Qle_shift_inv_r	40
Coq.QArith.QArith_base.Qinv_lt_0_compat	40	0.0.0.0	search with cache (only 1: intros [[| n| n] d] Ha; only 1: assumption; only 1: assumption; only 1: assumption).	0.0126829147339	4
Coq.QArith.QArith_base.Qlt_shift_div_l	40
Coq.QArith.QArith_base.Qlt_shift_inv_l	40	2.0.0.0.1.0.5.7.0.1	search with cache (only 1: intros a c Hc H; only 1: setoid_replace (/ c) with (1 * / c) by symmetry; apply Qmult_1_l; only 1: apply Qnot_le_lt; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ c); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (a * c / c) with a by apply Qdiv_mult_l; auto with *; only 1: assumption).	27.7436249256	22005
Coq.QArith.QArith_base.Qlt_shift_div_r	40
Coq.QArith.QArith_base.Qlt_shift_inv_r	40	3.0.0.0.1.0.7.0.8.1	search with cache (only 1: intros b c Hc H; only 1: apply Qnot_le_lt; only 1: setoid_replace (/ b) with (1 * / b) by symmetry; apply Qmult_1_l; only 1: intros H0; only 1: apply (Qlt_not_le _ _ H); only 1: apply Qmult_lt_0_le_reg_r with (/ b); only 1: apply Qinv_lt_0_compat; only 1: assumption; only 1: setoid_replace (c * b / b) with c by apply Qdiv_mult_l; auto with *; only 1: assumption).	39.4373269081	34151
Coq.QArith.QArith_base.Qinv_lt_contravar	40
Coq.QArith.QArith_base.Qpower_positive_comp	40
Coq.QArith.QArith_base.Qpower_comp	40
Coq.QArith.Qminmax.Q.plus_max_distr_l	40
Coq.QArith.Qminmax.Q.plus_max_distr_r	40
Coq.QArith.Qminmax.Q.plus_min_distr_l	40	0.0.0.0.1.3.0	search with cache (only 1: intros; only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.431163787842	82
Coq.QArith.Qminmax.Q.plus_min_distr_r	40	0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: rewrite (Qplus_comm n p), (Qplus_comm m p), (Qplus_comm _ p); only 1: apply min_monotone; only 1: eauto with *; only 1: intros x x' Hx; only 1: apply Qplus_le_compat; only 1: q_order; only 1: q_order).	0.208504915237	27
Coq.QArith.Qround.Qopp_lt_compat	40
Coq.QArith.Qround.Qfloor_Z	40
Coq.QArith.Qround.Qceiling_Z	40
Coq.QArith.Qround.Qfloor_le	40
Coq.QArith.Qround.Qle_ceiling	40
Coq.QArith.Qround.Qle_floor_ceiling	40	0.0.1.2.1.1	search with cache (only 1: intros x; only 1: apply Qle_trans with (- - x); only 1: rewrite Qopp_involutive; only 1: auto with *; only 1: change (Qceiling x : Q) with (- Qfloor (- x)); only 1: auto with *).	0.542069911957	207
Coq.QArith.Qround.Qlt_floor	40
Coq.QArith.Qround.Qceiling_lt	40
Coq.QArith.Qround.Qfloor_resp_le	40
Coq.QArith.Qround.Qceiling_resp_le	40
Coq.QArith.Qround.Qfloor_comp_Proper	40	0.0.1.12.1.1.0.1.0	search with cache (only 1: intros [xn xd] [yn yd] Hxy; only 1: simpl in *; only 1: rewrite <- (Zdiv_mult_cancel_r xn (Z.pos xd) (Z.pos yd)); only 1: rewrite <- (Zdiv_mult_cancel_r yn (Z.pos yd) (Z.pos xd)); only 1: rewrite (Z.mul_comm (Z.pos yd) (Z.pos xd)); only 1: f_equal; only 1: auto with *; only 1: auto with *; only 1: auto with *).	9.17644000053	15176
Coq.QArith.Qround.Qceiling_comp_Proper	40	1.2.1.0.0	search with cache (only 1: intros x y H; only 1: apply Z.le_antisymm; only 1: auto with *; only 1: symmetry in H; only 1: auto with *).	0.149080038071	48
Coq.QArith.Qround.Zdiv_Qdiv	40
Coq.QArith.Qabs.Qabs_case	40
Coq.QArith.Qabs.Qabs_wd_Proper	40
Coq.QArith.Qabs.Qabs_pos	40
Coq.QArith.Qabs.Qabs_neg	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x H; only 1: apply Qabs_case; only 1: intros H0; only 1: setoid_replace x with 0; only 1: reflexivity; only 1: apply Qle_antisym; only 1: assumption; only 1: assumption; only 1: reflexivity).	0.0267260074615	9
Coq.QArith.Qabs.Qabs_nonneg	40	5.7.4.5.0	search with cache (only 1: intros x H; only 1: destruct x as [[| xn| xn] xd]; only 1: discriminate; only 1: discriminate; only 1: discriminate).	1.79996323586	3323
Coq.QArith.Qabs.Zabs_Qabs	40	4.0.0	search with cache (only 1: intros; only 1: unfold Qred, Qeq in *; only 1: auto).	0.0872240066528	24
Coq.QArith.Qabs.Qabs_opp	40	1.1.0.6.7	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	4.11765193939	5188
Coq.QArith.Qabs.Qabs_triangle	40
Coq.QArith.Qabs.Qabs_Qmult	40	4.4.0.4.1.1	search with cache (only 1: intros [xn xd] [yn yd]; only 1: simpl in *; only 1: unfold Qeq in *; only 1: simpl in *; only 1: repeat rewrite <- Z.abs_mul; only 1: auto with *).	1.58423495293	1782
Coq.QArith.Qabs.Qabs_Qinv	40	0.0.0.5.0	search with cache (only 1: intros x; only 1: destruct x as [[| xn| xn] xd]; only 1: reflexivity; only 1: reflexivity; only 1: reflexivity).	0.608318090439	229
Coq.QArith.Qabs.Qabs_Qminus	40
Coq.QArith.Qabs.Qle_Qabs	40
Coq.QArith.Qabs.Qabs_triangle_reverse	40
Coq.QArith.Qabs.Qabs_Qle_condition	40
Coq.QArith.Qabs.Qabs_diff_Qle_condition	40
Coq.Classes.CMorphisms.eq_proper_proxy	40	0.2	search with cache (only 1: red; only 1: trivial).	0.00606393814087	4
Coq.Classes.CMorphisms.reflexive_proper_proxy	40	3	search with cache (only 1: firstorder).	0.00570487976074	4
Coq.Classes.CMorphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00387907028198	1
Coq.Classes.CMorphisms.pointwise_pointwise	40	0.4.0.2.3.4.9	search with cache (only 1: split; only 1: intros h1 h2; only 1: firstorder; only 1: destruct H; only 1: firstorder; only 1: intros h1 h2; only 1: auto).	0.525953054428	1226
Coq.Classes.CMorphisms.subrelation_id_proper	40	3	search with cache (only 1: firstorder).	0.00528192520142	4
Coq.Classes.CMorphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00711297988892	1
Coq.Classes.CMorphisms.subrelation_refl	40	1.0.0	search with cache (only 1: hnf; only 1: intros x y H'; only 1: assumption).	0.00866913795471	4
Coq.Classes.CMorphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00499510765076	1
Coq.Classes.CMorphisms.proper_subrelation_proper_arrow	40	1	search with cache (only 1: simpl_crelation).	0.00791192054749	2
Coq.Classes.CMorphisms.pointwise_subrelation	40	0	search with cache (only 1: simpl_crelation).	0.00963997840881	1
Coq.Classes.CMorphisms.forall_subrelation	40	3.6.4	search with cache (only 1: intro; only 1: reduce; only 1: firstorder).	0.0828218460083	149
Coq.Classes.CMorphisms.iff_impl_subrelation	40	3.0.0	search with cache (only 1: hnf; only 1: intros A B []; only 1: trivial).	0.00703692436218	6
Coq.Classes.CMorphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00456595420837	1
Coq.Classes.CMorphisms.iffT_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00511813163757	1
Coq.Classes.CMorphisms.iffT_flip_arrow_subrelation	40	0	search with cache (only 1: firstorder).	0.00477290153503	1
Coq.Classes.CMorphisms.respectful_per_obligation_2	40
Coq.Classes.CMorphisms.flip_proper_obligation_1	40	12	search with cache (only 1: firstorder).	0.0222678184509	46
Coq.Classes.CMorphisms.trans_contra_co_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	0.068342924118	9
Coq.Classes.CMorphisms.trans_contra_inv_impl_type_morphism_obligation_1	40	7	search with cache (only 1: firstorder).	0.316024065018	225
Coq.Classes.CMorphisms.trans_co_impl_type_morphism_obligation_1	40	8	search with cache (only 1: firstorder).	1.27493882179	712
Coq.Classes.CMorphisms.trans_sym_co_inv_impl_type_morphism_obligation_1	40	9	search with cache (only 1: firstorder).	1.21142482758	710
Coq.Classes.CMorphisms.trans_sym_contra_arrow_morphism_obligation_1	40	10	search with cache (only 1: firstorder).	5.26306796074	2857
Coq.Classes.CMorphisms.per_partial_app_type_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	0.179502010345	74
Coq.Classes.CMorphisms.trans_co_eq_inv_arrow_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	0.688528060913	684
Coq.Classes.CMorphisms.PER_type_morphism_obligation_1	40
Coq.Classes.CMorphisms.symmetric_equiv_flip	40	4.0	search with cache (only 1: hnf; only 1: firstorder).	0.00876498222351	6
Coq.Classes.CMorphisms.compose_proper_obligation_1	40	18	search with cache (only 1: firstorder).	0.0690200328827	145
Coq.Classes.CMorphisms.reflexive_eq_dom_reflexive	40	2.0	search with cache (only 1: intros; only 1: simpl_crelation).	0.0104100704193	4
Coq.Classes.CMorphisms.respectful_morphism	40
Coq.Classes.CMorphisms.Reflexive_partial_app_morphism	40	2.5	search with cache (only 1: reduce; only 1: auto).	0.00886487960815	9
Coq.Classes.CMorphisms.flip_respectful	40	0.0.1	search with cache (only 1: split; only 1: simpl_crelation; only 1: simpl_crelation).	0.0736610889435	4
Coq.Classes.CMorphisms.flip1	40	3	search with cache (only 1: auto).	0.00947999954224	13
Coq.Classes.CMorphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00465393066406	1
Coq.Classes.CMorphisms.eq_subrelation	40	2.2	search with cache (only 1: hnf; only 1: simpl_crelation).	0.0156760215759	17
Coq.Classes.CMorphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00544404983521	1
Coq.Classes.CMorphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00469398498535	1
Coq.Classes.CMorphisms.proper_proper	40	2.0.0	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0154151916504	5
Coq.Classes.CMorphisms.proper_normalizes_proper	40	4.2	search with cache (only 1: simpl_crelation; only 1: firstorder).	0.0155301094055	8
Coq.Classes.CMorphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0056300163269	1
Coq.Classes.CMorphisms.flip_arrow	40
Coq.Classes.CMorphisms.proper_sym_flip	40	0.1	search with cache (only 1: reduce; only 1: simpl_crelation).	0.0143630504608	3
Coq.Classes.CMorphisms.proper_sym_flip_2	40	5.3.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: simpl_crelation).	0.475828170776	129
Coq.Classes.CMorphisms.proper_sym_impl_iff	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT	40	0.0.0.0.0	search with cache (only 1: intros A R Sym f Hf x x' Hxx'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0142509937286	5
Coq.Classes.CMorphisms.proper_sym_impl_iff_2	40
Coq.Classes.CMorphisms.proper_sym_arrow_iffT_2	40	0.0.0.0.0	search with cache (only 1: intros A R Sym B R' Sym' f Hf x x' Hxx' y y' Hyy'; only 1: repeat red in Hf; only 1: split; only 1: eauto; only 1: eauto).	0.0179009437561	5
Coq.Classes.CMorphisms.PartialOrder_proper_type	40
Coq.Classes.CMorphisms.PartialOrder_StrictOrder	40
Coq.Classes.CMorphisms.StrictOrder_PreOrder	40
Coq.Classes.CMorphisms.StrictOrder_PartialOrder	40
Coq.Classes.Morphisms_Prop.Acc_pt_morphism	40
Coq.Classes.Morphisms_Prop.Acc_rel_morphism	40
Coq.Classes.Morphisms_Prop.well_founded_morphism	40
Coq.Classes.CEquivalence.equiv_transitive_obligation_1	40	2.2.2.5	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.276401996613	390
Coq.Classes.CEquivalence.respecting_equiv_obligation_3	40
Coq.Classes.CEquivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_crelation).	0.00905895233154	1
Coq.Classes.CEquivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00592303276062	1
Coq.Classes.CEquivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00807213783264	1
Coq.Classes.CEquivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.268099069595	1
Coq.Classes.CRelationClasses.complement_inverse	40	4	search with cache (only 1: split).	0.0048348903656	5
Coq.Classes.CRelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.CRelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.0046010017395	1
Coq.Classes.CRelationClasses.flip_Reflexive	40	3.0	search with cache (only 1: hnf; only 1: firstorder).	0.00690507888794	5
Coq.Classes.CRelationClasses.flip_Antisymmetric	40	2.1	search with cache (only 1: hnf; only 1: auto).	0.0149118900299	18
Coq.Classes.CRelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0137948989868	4
Coq.Classes.CRelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0146720409393	2
Coq.Classes.CRelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0215899944305	2
Coq.Classes.CRelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0240058898926	2
Coq.Classes.CRelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.00490093231201	2
Coq.Classes.CRelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00555610656738	1
Coq.Classes.CRelationClasses.iffT_Reflexive	40	2.2.0.14	search with cache (only 1: hnf; only 1: split; only 1: auto; only 1: auto).	0.117048978806	275
Coq.Classes.CRelationClasses.iffT_Symmetric	40	0	search with cache (only 1: firstorder).	0.00500583648682	1
Coq.Classes.CRelationClasses.iffT_Transitive	40	0	search with cache (only 1: firstorder).	0.00553798675537	1
Coq.Classes.CRelationClasses.relation_equivalence_equivalence	40
Coq.Classes.CRelationClasses.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.0207228660583	18
Coq.Classes.CRelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.010274887085	1
Coq.Classes.CRelationClasses.PartialOrder_inverse	40	2.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.0931680202484	4
Coq.Classes.Equivalence.equiv_transitive_obligation_1	40	2.2.3.5	search with cache (only 1: firstorder; only 1: transitivity y; only 1: auto; only 1: auto).	0.430818796158	564
Coq.Classes.Equivalence.respecting_equiv_obligation_3	40
Coq.Classes.Equivalence.pointwise_reflexive	40	0	search with cache (only 1: simpl_relation).	0.00888204574585	1
Coq.Classes.Equivalence.pointwise_symmetric	40	0	search with cache (only 1: firstorder).	0.00467610359192	1
Coq.Classes.Equivalence.pointwise_transitive	40	0	search with cache (only 1: firstorder).	0.00762796401978	1
Coq.Classes.Equivalence.pointwise_equivalence	40	0	search with cache (only 1: firstorder).	0.248133897781	1
Coq.Classes.EquivDec.unit_eqdec_obligation_1	40
Coq.Classes.EquivDec.bool_function_eqdec_obligation_1	40
Coq.Classes.EquivDec.list_eqdec_obligation_5	40
Coq.Classes.RelationClasses.complement_inverse	40	4	search with cache (only 1: split).	0.00455498695374	5
Coq.Classes.RelationClasses.StrictOrder_Asymmetric	40
Coq.Classes.RelationClasses.subrelation_symmetric	40	0	search with cache (only 1: firstorder).	0.00461602210999	1
Coq.Classes.RelationClasses.flip_Reflexive	40	5.0.0.0	search with cache (only 1: hnf; only 1: intros; only 1: hnf; only 1: firstorder).	0.00799703598022	9
Coq.Classes.RelationClasses.flip_Antisymmetric	40	2.1	search with cache (only 1: hnf; only 1: auto).	0.0259249210358	29
Coq.Classes.RelationClasses.flip_PreOrder	40	3	search with cache (only 1: firstorder).	0.0195209980011	4
Coq.Classes.RelationClasses.flip_StrictOrder	40	1	search with cache (only 1: firstorder).	0.0158989429474	2
Coq.Classes.RelationClasses.flip_PER	40	1	search with cache (only 1: firstorder).	0.0257771015167	2
Coq.Classes.RelationClasses.flip_Equivalence	40	1	search with cache (only 1: firstorder).	0.0237858295441	2
Coq.Classes.RelationClasses.complement_Irreflexive	40	1	search with cache (only 1: firstorder).	0.0056049823761	2
Coq.Classes.RelationClasses.complement_Symmetric	40	0	search with cache (only 1: firstorder).	0.00456714630127	1
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_1	40
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_2	40	0.2.0.0.0.0.0.0	search with cache (only 1: induction l; only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: apply (symmetry (x:=_)); only 1: assumption; only 1: firstorder).	0.0838749408722	16
Coq.Classes.RelationClasses.predicate_equivalence_equivalence_obligation_3	40
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_1	40	0.0.0	search with cache (only 1: induction l; only 1: firstorder; only 1: firstorder).	0.00914812088013	3
Coq.Classes.RelationClasses.predicate_implication_preorder_obligation_2	40	0.0.0.0.0.1	search with cache (only 1: induction l; only 1: firstorder; only 1: intros; only 1: simpl in *; only 1: pose (IHl (x x0) (y x0) (z x0)); only 1: firstorder).	0.0189530849457	7
Coq.Classes.RelationClasses.relation_equivalence_equivalence	40
Coq.Classes.RelationClasses.relation_implication_preorder	40	4	search with cache (only 1: firstorder).	0.00619006156921	5
Coq.Classes.RelationClasses.partial_order_antisym	40	0	search with cache (only 1: firstorder).	0.00861191749573	1
Coq.Classes.RelationClasses.PartialOrder_inverse	40	0.0	search with cache (only 1: reduce_goal; only 1: firstorder).	0.027813911438	2
Coq.Classes.RelationClasses.subrelation_partial_order_obligation_1	40	0	search with cache (only 1: firstorder).	0.00933289527893	1
Coq.Classes.Morphisms.eq_proper_proxy	40	0.2	search with cache (only 1: symmetry; only 1: trivial).	0.00882697105408	4
Coq.Classes.Morphisms.reflexive_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00666213035583	1
Coq.Classes.Morphisms.proper_proper_proxy	40	0	search with cache (only 1: firstorder).	0.00654411315918	1
Coq.Classes.Morphisms.pointwise_pointwise	40	1.1.0.2.0.18	search with cache (only 1: red; only 1: compute; only 1: intros h1 h2; only 1: firstorder; only 1: elim eq_sym with (1 := H0); only 1: trivial).	0.395847797394	631
Coq.Classes.Morphisms.subrelation_id_proper	40	4.3	search with cache (only 1: reduce; only 1: firstorder).	0.0114929676056	9
Coq.Classes.Morphisms.subrelation_respectful	40	0	search with cache (only 1: firstorder).	0.00961995124817	1
Coq.Classes.Morphisms.subrelation_refl	40	1.0.2	search with cache (only 1: unfold subrelation in *; only 1: intros; only 1: assumption).	0.0117859840393	6
Coq.Classes.Morphisms.subrelation_proper	40	0	search with cache (only 1: firstorder).	0.00789308547974	1
Coq.Classes.Morphisms.proper_subrelation_proper	40	3.4.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.310009002686	92
Coq.Classes.Morphisms.pointwise_subrelation	40	0.0	search with cache (only 1: unfold subrelation in *; only 1: firstorder).	0.0105938911438	2
Coq.Classes.Morphisms.forall_subrelation	40	0	search with cache (only 1: firstorder).	0.00906991958618	1
Coq.Classes.Morphisms.iff_impl_subrelation	40	2.0	search with cache (only 1: reduce; only 1: firstorder).	0.0102350711823	4
Coq.Classes.Morphisms.iff_flip_impl_subrelation	40	0	search with cache (only 1: firstorder).	0.00783514976501	1
Coq.Classes.Morphisms.respectful_per_obligation_2	40
Coq.Classes.Morphisms.complement_proper_obligation_1	40
Coq.Classes.Morphisms.flip_proper_obligation_1	40	8	search with cache (only 1: firstorder).	0.016205072403	9
Coq.Classes.Morphisms.trans_contra_co_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	0.122852087021	36
Coq.Classes.Morphisms.trans_contra_inv_impl_morphism_obligation_1	40	11	search with cache (only 1: firstorder).	0.884767055511	762
Coq.Classes.Morphisms.trans_co_impl_morphism_obligation_1	40	3.3.2	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	3.00306582451	2054
Coq.Classes.Morphisms.trans_sym_co_inv_impl_morphism_obligation_1	40	4.4.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	2.16462779045	1305
Coq.Classes.Morphisms.trans_sym_contra_impl_morphism_obligation_1	40	4.4.0	search with cache (only 1: transitivity x0; only 1: intuition; only 1: intuition).	3.21272301674	1862
Coq.Classes.Morphisms.per_partial_app_morphism_obligation_1	40	16	search with cache (only 1: firstorder).	34.5310649872	24139
Coq.Classes.Morphisms.trans_co_eq_inv_impl_morphism_obligation_1	40	4.4.0	search with cache (only 1: transitivity y; only 1: intuition; only 1: intuition).	0.408176898956	292
Coq.Classes.Morphisms.PER_morphism_obligation_1	40
Coq.Classes.Morphisms.symmetric_equiv_flip	40	0.0	search with cache (only 1: hnf; only 1: firstorder).	0.0139489173889	2
Coq.Classes.Morphisms.compose_proper_obligation_1	40	11	search with cache (only 1: firstorder).	0.0234000682831	33
Coq.Classes.Morphisms.reflexive_eq_dom_reflexive	40	1.2.2	search with cache (only 1: reduce; only 1: subst; only 1: firstorder).	0.0151629447937	8
Coq.Classes.Morphisms.respectful_morphism	40
Coq.Classes.Morphisms.Reflexive_partial_app_morphism	40	3	search with cache (only 1: firstorder).	0.0105471611023	4
Coq.Classes.Morphisms.flip_respectful	40	0.0.0.0.1	search with cache (only 1: split; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: simpl_relation).	0.0451080799103	6
Coq.Classes.Morphisms.flip1	40	2.0.0.0	search with cache (only 1: reduce; only 1: red in H0; only 1: red in H0; only 1: intuition).	0.0186471939087	6
Coq.Classes.Morphisms.flip2	40	0	search with cache (only 1: firstorder).	0.00884294509888	1
Coq.Classes.Morphisms.eq_subrelation	40	1	search with cache (only 1: simpl_relation).	0.0159649848938	2
Coq.Classes.Morphisms.reflexive_proper	40	0	search with cache (only 1: firstorder).	0.00904703140259	1
Coq.Classes.Morphisms.proper_eq	40	0	search with cache (only 1: firstorder).	0.00879096984863	1
Coq.Classes.Morphisms.proper_proper	40	2.0.1.0.0	search with cache (only 1: reduce; only 1: unfold respectful, relation_equivalence, predicate_equivalence in *; only 1: subst; only 1: simpl in *; only 1: firstorder).	0.122617006302	50
Coq.Classes.Morphisms.proper_normalizes_proper	40	6.2	search with cache (only 1: simpl_relation; only 1: firstorder).	0.0297319889069	11
Coq.Classes.Morphisms.flip_atom	40	0	search with cache (only 1: firstorder).	0.0101659297943	1
Coq.Classes.Morphisms.flip_arrow	40
Coq.Classes.Morphisms.proper_sym_flip	40	0	search with cache (only 1: simpl_relation).	0.0185339450836	1
Coq.Classes.Morphisms.proper_sym_flip_2	40	5.2.0	search with cache (only 1: intros A R1 Sym B R2 f Hf; only 1: unfold flip, respectful; only 1: simpl_relation).	0.0848069190979	21
Coq.Classes.Morphisms.proper_sym_impl_iff	40	15.3	search with cache (only 1: simpl_relation; only 1: firstorder).	2.03875184059	1331
Coq.Classes.Morphisms.proper_sym_impl_iff_2	40
Coq.Classes.Morphisms.PartialOrder_proper	40
Coq.Classes.Morphisms.PartialOrder_StrictOrder	40
Coq.Classes.Morphisms.StrictOrder_PreOrder	40
Coq.Classes.Morphisms.StrictOrder_PartialOrder	40
Coq.Classes.RelationPairs.RelCompFun_Reflexive	40	3.40	search with cache (only 1: repeat red; only 1: auto).	0.808140993118	1586
Coq.Classes.RelationPairs.RelCompFun_Symmetric	40	0	search with cache (only 1: firstorder).	0.00886297225952	1
Coq.Classes.RelationPairs.RelCompFun_Transitive	40	0	search with cache (only 1: firstorder).	0.034646987915	1
Coq.Classes.RelationPairs.RelCompFun_Irreflexive	40	0	search with cache (only 1: firstorder).	0.00861477851868	1
Coq.Classes.RelationPairs.RelProd_Reflexive	40	1	search with cache (only 1: firstorder).	0.00970697402954	2
Coq.Classes.RelationPairs.RelProd_Symmetric	40	0	search with cache (only 1: firstorder).	0.0196568965912	1
Coq.Classes.RelationPairs.RelProd_Transitive	40	0	search with cache (only 1: firstorder).	0.367870092392	1
Coq.Classes.RelationPairs.FstRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0117878913879	1
Coq.Classes.RelationPairs.SndRel_ProdRel	40	0	search with cache (only 1: firstorder).	0.0116128921509	1
Coq.Classes.RelationPairs.FstRel_sub	40	0	search with cache (only 1: firstorder).	0.00997519493103	1
Coq.Classes.RelationPairs.SndRel_sub	40	0	search with cache (only 1: firstorder).	0.0100901126862	1
Coq.Classes.RelationPairs.pair_compat	40	0	search with cache (only 1: firstorder).	0.0100989341736	1
Coq.Classes.RelationPairs.fst_compat	40	0	search with cache (only 1: firstorder).	0.0100109577179	1
Coq.Classes.RelationPairs.snd_compat	40	0.0.0	search with cache (only 1: intros (x, y) (x', y') (Hx, Hy); only 1: compute in *; only 1: auto).	0.017637014389	3
Coq.Classes.RelationPairs.RelCompFun_compat	40	0.4.0	search with cache (only 1: repeat red; only 1: compute in *; only 1: auto).	0.0616579055786	14
Coq.Classes.DecidableClass.Decidable_sound	40	0.48.8	search with cache (only 1: intros; only 1: apply H; only 1: assumption).	3.83639597893	33527
Coq.Classes.DecidableClass.Decidable_complete	40	0.66.3	search with cache (only 1: intro H; only 1: intros (x, (Hx, Huni)); only 1: assumption).	7.98680615425	60929
Coq.Classes.DecidableClass.Decidable_sound_alt	40
Coq.Classes.DecidableClass.Decidable_complete_alt	40
Coq.Classes.DecidableClass.Decidable_eq_bool_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_le_nat_obligation_1	40
Coq.Classes.DecidableClass.Decidable_eq_Z_obligation_1	40
Coq.Classes.SetoidDec.unit_eqdec_obligation_1	40
Coq.Classes.SetoidDec.bool_function_eqdec_obligation_1	40
Coq.Classes.SetoidClass.setoid_refl	40	11	search with cache (only 1: now f_equal).	0.0480790138245	33
Coq.Classes.SetoidClass.setoid_sym	40	0	search with cache (only 1: typeclasses eauto).	0.00671100616455	1
Coq.Classes.SetoidClass.setoid_trans	40	0	search with cache (only 1: typeclasses eauto).	0.00669407844543	1
Coq.Classes.SetoidClass.nequiv_equiv_trans	40	4.2.11.16.0	search with cache (only 1: intros A eq_dec x P H p; only 1: generalize dependent x; only 1: intros n' Hn'; only 1: intros <-; only 1: auto).	4.78929209709	5307
Coq.Classes.SetoidClass.equiv_nequiv_trans	40
Coq.Classes.Morphisms_Relations.relation_conjunction_morphism	40
Coq.Classes.Morphisms_Relations.relation_disjunction_morphism	40	0	search with cache (only 1: firstorder).	0.400484085083	1
Coq.Classes.Morphisms_Relations.predicate_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00733304023743	1
Coq.Classes.Morphisms_Relations.predicate_implication_pointwise	40	1.0	search with cache (only 1: do 2 red; only 1: auto).	0.00770688056946	3
Coq.Classes.Morphisms_Relations.relation_equivalence_pointwise	40	0	search with cache (only 1: firstorder).	0.00646710395813	1
Coq.Classes.Morphisms_Relations.subrelation_pointwise	40	4.1.0	search with cache (only 1: intro; only 1: intro; only 1: now simpl).	0.0239160060883	13
Coq.Classes.Morphisms_Relations.flip_pointwise_relation	40	5.1.1	search with cache (only 1: intro; only 1: do 2 red; only 1: now f_equal).	0.0181729793549	10
Coq.PArith.Pnat.Pos2Nat.inj_succ	40	0.7.15	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	0.2002389431	470
Coq.PArith.Pnat.Pos2Nat.inj_add	40
Coq.PArith.Pnat.Pos2Nat.inj_mul	40
Coq.PArith.Pnat.Pos2Nat.inj_1	40	1.1.0	search with cache (only 1: unfold to_nat; only 1: simpl; only 1: auto).	0.00884389877319	5
Coq.PArith.Pnat.Pos2Nat.inj_xO	40
Coq.PArith.Pnat.Pos2Nat.inj_xI	40
Coq.PArith.Pnat.Pos2Nat.is_succ	40	3.17	search with cache (only 1: fix sqrtrem_spec 1; only 1: trivial).	0.662009954453	1845
Coq.PArith.Pnat.Pos2Nat.is_pos	40	0.12.2.3.18.3	search with cache (only 1: induction p using peano_ind; only 1: auto; only 1: unfold to_nat; only 1: rewrite iter_op_succ; only 1: auto; only 1: apply Nat.add_assoc).	4.92390108109	7205
Coq.PArith.Pnat.Pos2Nat.id	40	3.2.15.33	search with cache (only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: intros q; only 1: trivial).	10.6570389271	36595
Coq.PArith.Pnat.Pos2Nat.inj	40
Coq.PArith.Pnat.Pos2Nat.inj_iff	40	1.0.0.0.14	search with cache (only 1: split; only 1: intros H; only 1: now rewrite <- (id p), <- (id q), H; only 1: intros H; only 1: now f_equal).	1.67263102531	2915
Coq.PArith.Pnat.Pos2Nat.inj_compare	40
Coq.PArith.Pnat.Pos2Nat.inj_lt	40
Coq.PArith.Pnat.Pos2Nat.inj_le	40
Coq.PArith.Pnat.Pos2Nat.inj_gt	40
Coq.PArith.Pnat.Pos2Nat.inj_ge	40
Coq.PArith.Pnat.Pos2Nat.inj_sub	40
Coq.PArith.Pnat.Pos2Nat.inj_sub_max	40
Coq.PArith.Pnat.Pos2Nat.inj_pred	40
Coq.PArith.Pnat.Pos2Nat.inj_pred_max	40
Coq.PArith.Pnat.Pos2Nat.inj_min	40
Coq.PArith.Pnat.Pos2Nat.inj_max	40
Coq.PArith.Pnat.Pos2Nat.inj_iter	40
Coq.PArith.Pnat.Nat2Pos.id	40
Coq.PArith.Pnat.Nat2Pos.id_max	40	9.0.0.0.0.8.7	search with cache (only 1: induction n as [| n H]; only 1: trivial; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite H).	1.08266806602	1824
Coq.PArith.Pnat.Nat2Pos.inj	40
Coq.PArith.Pnat.Nat2Pos.inj_iff	40	2.3.1.1.3.1	search with cache (only 1: split; only 1: apply Pos2Nat.inj; only 1: trivial; only 1: trivial; only 1: intros; only 1: now subst).	0.813290834427	796
Coq.PArith.Pnat.Nat2Pos.inj_succ	40	0.1.0	search with cache (only 1: destruct n; only 1: now destruct 1; only 1: trivial).	0.0107960700989	4
Coq.PArith.Pnat.Nat2Pos.inj_pred	40
Coq.PArith.Pnat.Nat2Pos.inj_add	40
Coq.PArith.Pnat.Nat2Pos.inj_mul	40
Coq.PArith.Pnat.Nat2Pos.inj_compare	40
Coq.PArith.Pnat.Nat2Pos.inj_sub	40
Coq.PArith.Pnat.Nat2Pos.inj_min	40
Coq.PArith.Pnat.Nat2Pos.inj_max	40
Coq.PArith.Pnat.Pos2SuccNat.id_succ	40	1.16.43.0.18	search with cache (only 1: apply Pos2Nat.inj; only 1: unfold Pos.to_nat; only 1: revert p; only 1: fix sqrtrem_spec 1; only 1: trivial).	21.6031820774	71801
Coq.PArith.Pnat.Pos2SuccNat.pred_id	40
Coq.PArith.Pnat.SuccNat2Pos.id_succ	40	5.1.1.0.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl; only 1: rewrite Pos2Nat.inj_succ; only 1: now rewrite IHn).	0.531149148941	617
Coq.PArith.Pnat.SuccNat2Pos.pred_id	40	0.0.2.0.1.0	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: simpl Pos.of_nat; only 1: destruct n; only 1: trivial; only 1: rewrite Pos2Nat.inj_succ; only 1: now apply Nat2Pos.id).	0.0189020633698	9
Coq.PArith.Pnat.SuccNat2Pos.inj	40
Coq.PArith.Pnat.SuccNat2Pos.inj_iff	40	1.0.0.0.0.0.1	search with cache (only 1: split; only 1: intro H; only 1: apply (f_equal Pos.to_nat) in H; only 1: rewrite !id_succ in H; only 1: now injection H; only 1: intro H; only 1: now subst).	0.0184118747711	9
Coq.PArith.Pnat.SuccNat2Pos.inv	40	4.20.5.6.0	search with cache (only 1: rewrite Pos.of_nat_succ; only 1: intros H; only 1: apply Pos2Nat.inj; only 1: rewrite H; only 1: now apply Nat2Pos.id).	19.0610349178	49764
Coq.PArith.Pnat.SuccNat2Pos.inj_succ	40	1.1	search with cache (only 1: simpl; only 1: trivial).	0.00738406181335	4
Coq.PArith.Pnat.SuccNat2Pos.inj_compare	40
Coq.PArith.Pnat.Pmult_nat_mult	40
Coq.PArith.Pnat.Pmult_nat_succ_morphism	40
Coq.PArith.Pnat.Pmult_nat_l_plus_morphism	40
Coq.PArith.Pnat.Pmult_nat_plus_carry_morphism	40
Coq.PArith.Pnat.Pmult_nat_r_plus_morphism	40
Coq.PArith.Pnat.ZL6	40
Coq.PArith.Pnat.le_Pmult_nat	40
Coq.PArith.BinPos.Pos.eq_dec	40
Coq.PArith.BinPos.Pos.xI_succ_xO	40	0	search with cache (only 1: trivial).	0.00656604766846	1
Coq.PArith.BinPos.Pos.succ_discr	40
Coq.PArith.BinPos.Pos.pred_double_spec	40	0	search with cache (only 1: reflexivity).	0.00645804405212	1
Coq.PArith.BinPos.Pos.succ_pred_double	40
Coq.PArith.BinPos.Pos.pred_double_succ	40	0.0.0.0.0.0.1	search with cache (only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	0.0181629657745	8
Coq.PArith.BinPos.Pos.double_succ	40	0.1	search with cache (only 1: simpl; only 1: now f_equal).	0.0101900100708	3
Coq.PArith.BinPos.Pos.pred_double_xO_discr	40	4	search with cache (only 1: now destruct p).	0.293315172195	104
Coq.PArith.BinPos.Pos.succ_not_1	40	0	search with cache (only 1: now destruct p).	0.0146079063416	1
Coq.PArith.BinPos.Pos.pred_succ	40	0.0.0.0.0.0.0.0.0.0.0.0.3	search with cache (only 1: induction p; only 1: simpl; only 1: induction p; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	1.34379291534	682
Coq.PArith.BinPos.Pos.succ_pred_or	40
Coq.PArith.BinPos.Pos.succ_pred	40
Coq.PArith.BinPos.Pos.succ_inj	40
Coq.PArith.BinPos.Pos.pred_N_succ	40	0.0.0.0.1.12.0.2	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: apply pred_double_succ; only 1: simpl; only 1: now f_equal; only 1: simpl; only 1: now f_equal).	2.02006196976	1644
Coq.PArith.BinPos.Pos.add_1_r	40	0	search with cache (only 1: now destruct p).	0.00719904899597	1
Coq.PArith.BinPos.Pos.add_1_l	40	0	search with cache (only 1: now destruct p).	0.00661897659302	1
Coq.PArith.BinPos.Pos.add_carry_spec	40
Coq.PArith.BinPos.Pos.add_comm	40
Coq.PArith.BinPos.Pos.add_succ_r	40
Coq.PArith.BinPos.Pos.add_succ_l	40
Coq.PArith.BinPos.Pos.add_no_neutral	40
Coq.PArith.BinPos.Pos.add_carry_add	40
Coq.PArith.BinPos.Pos.add_reg_r	40
Coq.PArith.BinPos.Pos.add_reg_l	40
Coq.PArith.BinPos.Pos.add_cancel_r	40	0.6.2.0.1.9	search with cache (only 1: split; only 1: now apply add_reg_r; only 1: revert p q; only 1: intros p q H; only 1: f_equal; only 1: auto).	38.4218020439	14681
Coq.PArith.BinPos.Pos.add_cancel_l	40
Coq.PArith.BinPos.Pos.add_carry_reg_r	40
Coq.PArith.BinPos.Pos.add_carry_reg_l	40
Coq.PArith.BinPos.Pos.add_assoc	40
Coq.PArith.BinPos.Pos.add_xO	40	0.1	search with cache (only 1: simpl; only 1: f_equal).	0.00867795944214	3
Coq.PArith.BinPos.Pos.add_xI_pred_double	40
Coq.PArith.BinPos.Pos.add_xO_pred_double	40
Coq.PArith.BinPos.Pos.add_diag	40	1.0.0.0.17.7.0.4	search with cache (only 1: induction p; only 1: simpl; only 1: rewrite ?add_carry_spec, ?pred_double_succ, ?add_xI_pred_double; only 1: rewrite IHp; only 1: now f_equal; only 1: simpl; only 1: now f_equal; only 1: trivial).	4.6064479351	5895
Coq.PArith.BinPos.Pos.peano_rect_succ	40
Coq.PArith.BinPos.Pos.peano_rect_base	40	0.0	search with cache (only 1: revert P a f; only 1: trivial).	0.00856995582581	2
Coq.PArith.BinPos.Pos.peano_case	40
Coq.PArith.BinPos.Pos.eq_dep_eq_positive	40
Coq.PArith.BinPos.Pos.PeanoViewUnique	40
Coq.PArith.BinPos.Pos.peano_equiv	40
Coq.PArith.BinPos.Pos.mul_1_l	40	0.0.1.0.1.0	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: trivial).	0.0935521125793	8
Coq.PArith.BinPos.Pos.mul_1_r	40	0.3.4.2.3.2.2.1	search with cache (only 1: induction p as [p IHp| p IHp| ]; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: simpl; only 1: f_equal; only 1: trivial; only 1: reflexivity).	2.44347596169	3794
Coq.PArith.BinPos.Pos.mul_xO_r	40	0.0.0.1.0.0.0.11	search with cache (only 1: induction p; only 1: simpl; only 1: f_equal; only 1: now f_equal; only 1: simpl; only 1: now rewrite ?add_carry_spec, ?IHp; only 1: simpl; only 1: trivial).	2.75456404686	1737
Coq.PArith.BinPos.Pos.mul_xI_r	40
Coq.PArith.BinPos.Pos.mul_comm	40
Coq.PArith.BinPos.Pos.mul_add_distr_l	40
Coq.PArith.BinPos.Pos.mul_add_distr_r	40
Coq.PArith.BinPos.Pos.mul_assoc	40
Coq.PArith.BinPos.Pos.mul_succ_l	40
Coq.PArith.BinPos.Pos.mul_succ_r	40
Coq.PArith.BinPos.Pos.mul_xI_mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_xO_discr	40
Coq.PArith.BinPos.Pos.mul_reg_r	40
Coq.PArith.BinPos.Pos.mul_reg_l	40
Coq.PArith.BinPos.Pos.mul_cancel_r	40	3.1.0	search with cache (only 1: split; only 1: apply mul_reg_r; only 1: congruence).	0.280344009399	149
Coq.PArith.BinPos.Pos.mul_cancel_l	40	0.1.2.0	search with cache (only 1: split; only 1: rewrite 2!(mul_comm r); only 1: apply mul_reg_r; only 1: congruence).	0.14479804039	104
Coq.PArith.BinPos.Pos.mul_eq_1_l	40
Coq.PArith.BinPos.Pos.mul_eq_1_r	40	0	search with cache (only 1: now destruct p, q).	0.0174338817596	1
Coq.PArith.BinPos.Pos.square_xO	40	3.0.0	search with cache (only 1: simpl; only 1: f_equal; only 1: auto using mul_xI_r, mul_xO_r, mul_1_r).	0.025328874588	16
Coq.PArith.BinPos.Pos.square_xI	40
Coq.PArith.BinPos.Pos.iter_swap_gen	40
Coq.PArith.BinPos.Pos.iter_swap	40	2.0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: simpl; only 1: intros; only 1: now rewrite ?H, ?IHp; only 1: trivial).	0.0267190933228	11
Coq.PArith.BinPos.Pos.iter_succ	40
Coq.PArith.BinPos.Pos.iter_add	40
Coq.PArith.BinPos.Pos.iter_invariant	40
Coq.PArith.BinPos.Pos.pow_1_r	40
Coq.PArith.BinPos.Pos.pow_succ_r	40
Coq.PArith.BinPos.Pos.square_spec	40
Coq.PArith.BinPos.Pos.sub_mask_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_carry_spec	40
Coq.PArith.BinPos.Pos.sub_mask_spec	40
Coq.PArith.BinPos.Pos.sub_mask_nul_iff	40
Coq.PArith.BinPos.Pos.sub_mask_diag	40	0.0.0.0.0.0.0	search with cache (only 1: induction p; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp; only 1: simpl; only 1: now rewrite ?IHp).	0.0179560184479	7
Coq.PArith.BinPos.Pos.sub_mask_add	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_l	40
Coq.PArith.BinPos.Pos.sub_mask_pos_iff	40
Coq.PArith.BinPos.Pos.sub_mask_add_diag_r	40	1.0.0.0.1.6.1.0.0	search with cache (only 1: case sub_mask_spec; only 1: intros H; only 1: rewrite add_comm in H; only 1: contradict H; only 1: auto using add_no_neutral; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: congruence).	2.16414499283	1936
Coq.PArith.BinPos.Pos.sub_mask_neg_iff	40
Coq.PArith.BinPos.Pos.eqb_eq	40
Coq.PArith.BinPos.Pos.ltb_lt	40
Coq.PArith.BinPos.Pos.leb_le	40
Coq.PArith.BinPos.Pos.compare_cont_spec	40
Coq.PArith.BinPos.Pos.compare_cont_Eq	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_Lt	40	0.0.0.0.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold leb, le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: now split).	0.0307328701019	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_Lt	40	0.0.0.0.3.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ltb, lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.166094064713	31
Coq.PArith.BinPos.Pos.compare_cont_Gt_Gt	40
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold gt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0300869941711	6
Coq.PArith.BinPos.Pos.compare_cont_Lt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0276420116425	7
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Lt	40	0.0.0.0.0.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold ge; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.0268828868866	6
Coq.PArith.BinPos.Pos.compare_cont_Gt_not_Gt	40	0.0.0.0.0.1	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold lt; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.0309948921204	7
Coq.PArith.BinPos.Pos.compare_xO_xO	40	0.0.1.0	search with cache (only 1: destruct compare; only 1: now destruct (p ?= q); only 1: easy'; only 1: easy').	0.011528968811	5
Coq.PArith.BinPos.Pos.compare_xI_xI	40	0	search with cache (only 1: reflexivity).	0.00558185577393	1
Coq.PArith.BinPos.Pos.compare_xI_xO	40	0.0.7.0.5	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	0.505559921265	441
Coq.PArith.BinPos.Pos.compare_xO_xI	40	0.0.7.0.6	search with cache (only 1: unfold compare; only 1: simpl; only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: now destruct (compare_cont Eq p q)).	0.51206111908	452
Coq.PArith.BinPos.Pos.compare_sub_mask	40
Coq.PArith.BinPos.Pos.lt_iff_add	40
Coq.PArith.BinPos.Pos.gt_iff_add	40
Coq.PArith.BinPos.Pos.compare_cont_refl	40	4.1.1.0.1.0.3.1.0	search with cache (only 1: rewrite compare_cont_spec; only 1: unfold compare; only 1: induction p; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial; only 1: simpl; only 1: trivial).	0.466948032379	874
Coq.PArith.BinPos.Pos.compare_cont_antisym	40
Coq.PArith.BinPos.Pos.compare_eq_iff	40
Coq.PArith.BinPos.Pos.compare_antisym	40
Coq.PArith.BinPos.Pos.compare_lt_iff	40	1.0.0.0.0	search with cache (only 1: unfold lt; only 1: destruct (p ?= q); only 1: now split; only 1: now split; only 1: now split).	0.114352941513	36
Coq.PArith.BinPos.Pos.compare_le_iff	40	0.0.1.0.2	search with cache (only 1: unfold le; only 1: destruct (p ?= q); only 1: now split; only 1: easy'; only 1: easy').	0.0362010002136	20
Coq.PArith.BinPos.Pos.gt_lt_iff	40	3.3	search with cache (only 1: unfold gt; only 1: now rewrite <- compare_lt_iff, compare_antisym, CompOpp_iff).	0.222613096237	97
Coq.PArith.BinPos.Pos.gt_lt	40	0.0	search with cache (only 1: unfold lt, gt; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0105979442596	2
Coq.PArith.BinPos.Pos.lt_gt	40	0	search with cache (only 1: apply gt_lt_iff).	0.00556492805481	1
Coq.PArith.BinPos.Pos.ge_le_iff	40	2.2	search with cache (only 1: unfold ge; only 1: now rewrite <- compare_le_iff, compare_antisym, CompOpp_iff).	0.0135772228241	6
Coq.PArith.BinPos.Pos.ge_le	40	0.0	search with cache (only 1: unfold le, ge; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0114049911499	2
Coq.PArith.BinPos.Pos.le_ge	40	0	search with cache (only 1: apply ge_le_iff).	0.0056140422821	1
Coq.PArith.BinPos.Pos.compare_succ_r	40
Coq.PArith.BinPos.Pos.compare_succ_l	40
Coq.PArith.BinPos.Pos.lt_succ_r	40
Coq.PArith.BinPos.Pos.lt_succ_diag_r	40
Coq.PArith.BinPos.Pos.compare_succ_succ	40
Coq.PArith.BinPos.Pos.le_1_l	40	8	search with cache (only 1: now destruct compare || now destruct p).	0.0458011627197	25
Coq.PArith.BinPos.Pos.nlt_1_r	40	2.4.3	search with cache (only 1: unfold ge, lt, compare; only 1: rewrite compare_cont_spec; only 1: now destruct compare || now destruct p).	0.0718901157379	77
Coq.PArith.BinPos.Pos.lt_1_succ	40	1	search with cache (only 1: now destruct p).	0.0402109622955	39
Coq.PArith.BinPos.Pos.le_nlt	40	0.0	search with cache (only 1: unfold lt, le; only 1: now rewrite compare_antisym, CompOpp_iff).	0.0091769695282	2
Coq.PArith.BinPos.Pos.lt_nle	40	4.2	search with cache (only 1: unfold ge, lt, compare; only 1: now rewrite <- compare_nle_iff, compare_antisym, CompOpp_iff).	0.314165115356	93
Coq.PArith.BinPos.Pos.lt_le_incl	40	0.0.0.3.2	search with cache (only 1: unfold lt, le; only 1: destruct (p ?= q); only 1: easy'; only 1: easy'; only 1: easy').	0.33273601532	110
Coq.PArith.BinPos.Pos.lt_lt_succ	40
Coq.PArith.BinPos.Pos.succ_lt_mono	40
Coq.PArith.BinPos.Pos.succ_le_mono	40	2.29	search with cache (only 1: unfold gt, le, compare; only 1: now rewrite compare_succ_succ).	2.13821101189	3000
Coq.PArith.BinPos.Pos.lt_trans	40
Coq.PArith.BinPos.Pos.lt_ind	40
Coq.PArith.BinPos.Pos.lt_strorder	40
Coq.PArith.BinPos.Pos.lt_compat	40
Coq.PArith.BinPos.Pos.lt_total	40
Coq.PArith.BinPos.Pos.le_refl	40	0.1	search with cache (only 1: apply lt_eq_cases; only 1: now right).	0.0112299919128	3
Coq.PArith.BinPos.Pos.le_lt_trans	40
Coq.PArith.BinPos.Pos.lt_le_trans	40
Coq.PArith.BinPos.Pos.le_trans	40
Coq.PArith.BinPos.Pos.le_succ_l	40
Coq.PArith.BinPos.Pos.le_antisym	40
Coq.PArith.BinPos.Pos.le_preorder	40
Coq.PArith.BinPos.Pos.le_partorder	40
Coq.PArith.BinPos.Pos.add_compare_mono_l	40
Coq.PArith.BinPos.Pos.add_compare_mono_r	40
Coq.PArith.BinPos.Pos.lt_add_diag_r	40	0.0.0.1.0.1.0.2.2.3.0	search with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: intros H; only 1: symmetry in H; only 1: rewrite add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H); only 1: trivial).	1.47217917442	1531
Coq.PArith.BinPos.Pos.add_lt_mono_l	40	0.0.0.0.0.0.2.2	search with cache (only 1: revert p q r; only 1: unfold lt; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.325348854065	271
Coq.PArith.BinPos.Pos.add_lt_mono_r	40	0.0.1.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(add_comm _ p); only 1: rewrite add_compare_mono_l; only 1: apply iff_refl).	0.0112240314484	5
Coq.PArith.BinPos.Pos.add_lt_mono	40
Coq.PArith.BinPos.Pos.add_le_mono_l	40	0.0.0.1.0.0.1.5	search with cache (only 1: revert p q r; only 1: unfold le; only 1: induction p using peano_ind; only 1: intros q r; only 1: rewrite 2!add_1_l; only 1: now rewrite compare_succ_succ; only 1: intros q r; only 1: now rewrite 2!add_succ_l, compare_succ_succ).	0.477511167526	393
Coq.PArith.BinPos.Pos.add_le_mono_r	40	0.1.0	search with cache (only 1: unfold le; only 1: rewrite add_compare_mono_r; only 1: apply iff_refl).	0.00932121276855	4
Coq.PArith.BinPos.Pos.add_le_mono	40
Coq.PArith.BinPos.Pos.mul_compare_mono_l	40
Coq.PArith.BinPos.Pos.mul_compare_mono_r	40
Coq.PArith.BinPos.Pos.mul_lt_mono_l	40
Coq.PArith.BinPos.Pos.mul_lt_mono_r	40	0.0.5.0	search with cache (only 1: unfold lt; only 1: rewrite 2!(mul_comm _ p); only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0205700397491	16
Coq.PArith.BinPos.Pos.mul_lt_mono	40
Coq.PArith.BinPos.Pos.mul_le_mono_l	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_l; only 1: apply iff_refl).	0.0100409984589	6
Coq.PArith.BinPos.Pos.mul_le_mono_r	40	0.3.0	search with cache (only 1: unfold le; only 1: rewrite mul_compare_mono_r; only 1: apply iff_refl).	0.00990295410156	6
Coq.PArith.BinPos.Pos.mul_le_mono	40
Coq.PArith.BinPos.Pos.lt_add_r	40	0.0	search with cache (only 1: rewrite lt_iff_add; only 1: now exists q).	0.00826621055603	2
Coq.PArith.BinPos.Pos.lt_not_add_l	40	0.0.0.0.0.0.0.0.10.10	search with cache (only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: case sub_mask_spec; only 1: discriminate; only 1: intros r H; only 1: apply add_cancel_l in H; only 1: now f_equal; only 1: intros r H; only 1: rewrite <- add_assoc, add_comm in H; only 1: elim (add_no_neutral _ _ H)).	7.90589022636	9426
Coq.PArith.BinPos.Pos.pow_gt_1	40
Coq.PArith.BinPos.Pos.sub_1_r	40	2.0.1.2.10	search with cache (only 1: induction p; only 1: reflexivity || apply f_equal || exfalso; only 1: simpl; only 1: trivial; only 1: trivial).	0.220718860626	283
Coq.PArith.BinPos.Pos.pred_sub	40	0	search with cache (only 1: now destruct p).	0.00599908828735	1
Coq.PArith.BinPos.Pos.sub_succ_r	40
Coq.PArith.BinPos.Pos.sub_mask_pos'	40
Coq.PArith.BinPos.Pos.sub_mask_pos	40	1.0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, Hr); only 1: exists r; only 1: now apply sub_mask_pos_iff).	0.0162451267242	5
Coq.PArith.BinPos.Pos.sub_add	40
Coq.PArith.BinPos.Pos.add_sub	40
Coq.PArith.BinPos.Pos.mul_sub_distr_l	40
Coq.PArith.BinPos.Pos.mul_sub_distr_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_l	40
Coq.PArith.BinPos.Pos.sub_compare_mono_r	40
Coq.PArith.BinPos.Pos.sub_lt_mono_r	40
Coq.PArith.BinPos.Pos.sub_decr	40
Coq.PArith.BinPos.Pos.add_sub_assoc	40
Coq.PArith.BinPos.Pos.sub_add_distr	40
Coq.PArith.BinPos.Pos.sub_sub_distr	40
Coq.PArith.BinPos.Pos.sub_xO_xO	40
Coq.PArith.BinPos.Pos.sub_xI_xI	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.0116240978241	4
Coq.PArith.BinPos.Pos.sub_xI_xO	40	0.0.0.0	search with cache (only 1: intros H; only 1: unfold sub; only 1: simpl; only 1: now destruct (sub_mask_pos n m H) as (p, ->)).	0.012246131897	4
Coq.PArith.BinPos.Pos.sub_xO_xI	40
Coq.PArith.BinPos.Pos.sub_mask_neg_iff'	40	0.0.0.0.0.0.0.0.8	search with cache (only 1: rewrite lt_iff_add; only 1: split; only 1: case sub_mask_spec; only 1: discriminate; only 1: discriminate; only 1: intros r Hr _; only 1: now exists r; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	8.62012195587	6666
Coq.PArith.BinPos.Pos.sub_mask_neg	40	0.0.0	search with cache (only 1: rewrite lt_iff_add; only 1: intros (r, <-); only 1: apply sub_mask_add_diag_r).	0.0123901367188	3
Coq.PArith.BinPos.Pos.sub_le	40
Coq.PArith.BinPos.Pos.sub_lt	40	0.0.0.0.0.7.0	search with cache (only 1: unfold le, sub; only 1: unfold lt; only 1: rewrite compare_sub_mask; only 1: destruct sub_mask; only 1: easy'; only 1: easy'; only 1: easy').	0.694558858871	727
Coq.PArith.BinPos.Pos.sub_diag	40
Coq.PArith.BinPos.Pos.size_nat_monotone	40
Coq.PArith.BinPos.Pos.size_gt	40
Coq.PArith.BinPos.Pos.size_le	40
Coq.PArith.BinPos.Pos.max_l	40
Coq.PArith.BinPos.Pos.max_r	40	0.0.1.0.0.0.0.0	search with cache (only 1: intros x y H; only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: auto; only 1: intros H'; only 1: apply le_nlt in H; only 1: now elim H).	0.0175859928131	9
Coq.PArith.BinPos.Pos.min_l	40
Coq.PArith.BinPos.Pos.min_r	40	2.6.0.4.4.0	search with cache (only 1: unfold le, min; only 1: intros x y H; only 1: case compare_spec; only 1: auto; only 1: now rewrite <- compare_lt_iff, compare_nge_iff; only 1: constructor).	11.326859951	13800
Coq.PArith.BinPos.Pos.max_1_l	40	1.0.2.0.0.0.23	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros; only 1: easy; only 1: intros H; only 1: elim (nlt_1_r _ H)).	10.5695521832	18648
Coq.PArith.BinPos.Pos.max_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold max; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0160150527954	8
Coq.PArith.BinPos.Pos.min_1_l	40	0.0	search with cache (only 1: apply min_l; only 1: apply le_1_l).	0.00547695159912	2
Coq.PArith.BinPos.Pos.min_1_r	40	0.0.0.0.0.0.0.0	search with cache (only 1: unfold min; only 1: case compare_spec; only 1: auto; only 1: intros H; only 1: apply lt_nle in H; only 1: elim H; only 1: apply le_1_l; only 1: auto).	0.0164949893951	8
Coq.PArith.BinPos.Pos.succ_max_distr	40
Coq.PArith.BinPos.Pos.succ_min_distr	40	0.0.0.4.0	search with cache (only 1: symmetry; only 1: apply min_mono; only 1: congruence; only 1: intros x x'; only 1: apply succ_le_mono).	0.0630168914795	38
Coq.PArith.BinPos.Pos.add_max_distr_l	40	3.2.0.0	search with cache (only 1: apply max_mono; only 1: eauto with *; only 1: intros x x'; only 1: now apply add_le_mono_l).	0.0353529453278	27
Coq.PArith.BinPos.Pos.add_max_distr_r	40
Coq.PArith.BinPos.Pos.add_min_distr_l	40	0.0.0.3	search with cache (only 1: apply min_mono; only 1: eauto with *; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0223960876465	7
Coq.PArith.BinPos.Pos.add_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(add_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply add_le_mono_l).	0.0122549533844	5
Coq.PArith.BinPos.Pos.mul_max_distr_l	40	3.0.1	search with cache (only 1: apply max_monotone; only 1: intros x x'; only 1: now apply mul_le_mono_l).	0.0178339481354	15
Coq.PArith.BinPos.Pos.mul_max_distr_r	40
Coq.PArith.BinPos.Pos.mul_min_distr_l	40	0.0.3	search with cache (only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.00984883308411	6
Coq.PArith.BinPos.Pos.mul_min_distr_r	40	0.0.0.1	search with cache (only 1: rewrite 3!(mul_comm _ p); only 1: apply min_monotone; only 1: intros x x'; only 1: apply mul_le_mono_l).	0.0121672153473	5
Coq.PArith.BinPos.Pos.iter_op_succ	40
Coq.PArith.BinPos.Pos.of_nat_succ	40
Coq.PArith.BinPos.Pos.pred_of_succ_nat	40
Coq.PArith.BinPos.Pos.succ_of_nat	40	2.3.4.0.1.5.2	search with cache (only 1: induction n; only 1: simpl; only 1: easy'; only 1: simpl; only 1: induction n; only 1: trivial; only 1: now rewrite IHn).	1.30991601944	2221
Coq.PArith.BinPos.Pos.sqrtrem_step_spec	40
Coq.PArith.BinPos.Pos.sqrtrem_spec	40
Coq.PArith.BinPos.Pos.sqrt_spec	40
Coq.PArith.BinPos.Pos.divide_add_cancel_l	40
Coq.PArith.BinPos.Pos.divide_xO_xI	40
Coq.PArith.BinPos.Pos.divide_xO_xO	40
Coq.PArith.BinPos.Pos.divide_mul_l	40
Coq.PArith.BinPos.Pos.divide_mul_r	40
Coq.PArith.BinPos.Pos.ggcdn_gcdn	40	0.17.1	search with cache (only 1: intros x y; only 1: fix sqrtrem_spec 1; only 1: intuition).	6.26266503334	624
Coq.PArith.BinPos.Pos.ggcd_gcd	40	2.29.27	search with cache (only 1: intros EQ; only 1: fix sqrtrem_spec 1; only 1: trivial).	8.04163599014	30866
Coq.PArith.BinPos.Pos.ggcdn_correct_divisors	40
Coq.PArith.BinPos.Pos.ggcd_correct_divisors	40
Coq.PArith.BinPos.Pos.gcd_divide_l	40	0.11.48.0	search with cache (only 1: unfold ggcd, gcd; only 1: intros EQ; only 1: fix sqrtrem_spec 1; only 1: now auto).	11.7762570381	41999
Coq.PArith.BinPos.Pos.gcd_divide_r	40
Coq.PArith.BinPos.Pos.gcdn_greatest	40
Coq.PArith.BinPos.Pos.gcd_greatest	40
Coq.PArith.BinPos.Pos.ggcd_greatest	40
Coq.PArith.BinPos.Peqb_true_eq	40	0.256	search with cache (only 1: fix sqrtrem_spec 1; only 1: auto with relations).	37.2775359154	307521
Coq.PArith.BinPos.Pcompare_eq_Gt	40	2.13	search with cache (only 1: symmetry; only 1: intuition).	0.131113052368	194
Coq.PArith.BinPos.Pminus_mask_Gt	40
Coq.PArith.BinPos.Pplus_minus	40
Coq.PArith.BinPos.Dcompare	40	8.8.9.87	search with cache (only 1: destruct r; only 1: intuition; only 1: intuition; only 1: intuition).	5.9844789505	27862
Coq.Arith.Le.le_n_0_eq	40	23.2.3.18	search with cache (only 1: induction n as [| n IH]; only 1: Nat.order'; only 1: intros; only 1: now Nat.nzsimpl).	3.8029999733	8388
Coq.Arith.Le.le_elim_rel	40
Coq.Arith.Even.even_equiv	40
Coq.Arith.Even.odd_equiv	40	12.0	search with cache (only 1: fix even_equiv 1; only 1: trivial).	0.354880094528	563
Coq.Arith.Even.even_or_odd	40	4.4.1.1.3.19	search with cache (only 1: Nat.induct n; only 1: constructor; only 1: constructor; only 1: inversion_clear 1; only 1: now do 2 constructor; only 1: now do 2 constructor).	1.07142496109	2036
Coq.Arith.Even.even_odd_dec	40	0.0.0.0.0	search with cache (only 1: induction n; only 1: auto with arith; only 1: elim IHn; only 1: auto with arith; only 1: auto with arith).	0.0156760215759	5
Coq.Arith.Even.not_even_and_odd	40	1.2.0.11.6.2.3.0	search with cache (only 1: induction n; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: inversion_clear 1; only 1: induction n; only 1: inversion_clear H0; only 1: inversion_clear 1; only 1: auto with arith).	6.27550792694	11815
Coq.Arith.Even.even_plus_split	40	0.19.5	search with cache (only 1: revert m; only 1: fix even_equiv 1; only 1: auto with arith).	10.2668168545	9293
Coq.Arith.Even.odd_plus_split	40	0	search with cache (only 1: parity_binop).	0.0718569755554	1
Coq.Arith.Even.even_even_plus	40	0	search with cache (only 1: parity_binop).	0.0614678859711	1
Coq.Arith.Even.odd_plus_l	40	0	search with cache (only 1: parity_binop).	0.0392091274261	1
Coq.Arith.Even.odd_plus_r	40	0	search with cache (only 1: parity_binop).	0.0384991168976	1
Coq.Arith.Even.odd_even_plus	40	0	search with cache (only 1: parity_binop).	0.0538249015808	1
Coq.Arith.Even.even_plus_aux	40	0	search with cache (only 1: parity_binop).	0.160236120224	1
Coq.Arith.Even.even_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0386538505554	1
Coq.Arith.Even.even_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0384559631348	1
Coq.Arith.Even.even_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.0391528606415	1
Coq.Arith.Even.even_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.0390861034393	1
Coq.Arith.Even.odd_plus_even_inv_l	40	0	search with cache (only 1: parity_binop).	0.0570061206818	1
Coq.Arith.Even.odd_plus_even_inv_r	40	0	search with cache (only 1: parity_binop).	0.0388691425323	1
Coq.Arith.Even.odd_plus_odd_inv_l	40	0	search with cache (only 1: parity_binop).	0.039265871048	1
Coq.Arith.Even.odd_plus_odd_inv_r	40	0	search with cache (only 1: parity_binop).	0.14571595192	1
Coq.Arith.Even.even_mult_aux	40	0	search with cache (only 1: parity_binop).	0.0874900817871	1
Coq.Arith.Even.even_mult_l	40	0	search with cache (only 1: parity_binop).	0.025319814682	1
Coq.Arith.Even.even_mult_r	40	0	search with cache (only 1: parity_binop).	0.0259780883789	1
Coq.Arith.Even.even_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0381860733032	1
Coq.Arith.Even.even_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0480780601501	1
Coq.Arith.Even.odd_mult	40	0	search with cache (only 1: parity_binop).	0.0380120277405	1
Coq.Arith.Even.odd_mult_inv_l	40	0	search with cache (only 1: parity_binop).	0.0259099006653	1
Coq.Arith.Even.odd_mult_inv_r	40	0	search with cache (only 1: parity_binop).	0.0263140201569	1
Coq.Arith.Minus.minus_n_O	40	1.0.7.1.19	search with cache (only 1: induction n as [| n IH]; only 1: symmetry; only 1: Nat.bitwise; only 1: trivial; only 1: trivial).	0.453529119492	1542
Coq.Arith.Minus.minus_Sn_m	40
Coq.Arith.Minus.pred_of_minus	40	30	search with cache (only 1: now Nat.nzsimpl).	1.39236497879	5600
Coq.Arith.Minus.minus_diag_reverse	40	1.0.0.20	search with cache (only 1: induction n as [| n IH]; only 1: symmetry; only 1: apply Nat.sub_0_r; only 1: trivial).	1.1113049984	2006
Coq.Arith.Minus.minus_plus_simpl_l_reverse	40
Coq.Arith.Minus.plus_minus	40
Coq.Arith.Minus.minus_plus	40	15	search with cache (only 1: now apply Nat.add_sub_eq_l).	0.252813100815	411
Coq.Arith.Minus.le_plus_minus_r	40
Coq.Arith.Minus.le_plus_minus	40	0.1.10.6.0	search with cache (only 1: rewrite Nat.add_comm; only 1: intros; only 1: symmetry; only 1: apply Nat.sub_add; only 1: trivial).	3.36933708191	5173
Coq.Arith.Minus.lt_O_minus_lt	40
Coq.Arith.Minus.not_le_minus_0	40
Coq.Arith.Between.bet_eq	40	12.6.0.8	search with cache (only 1: intros a b; only 1: intros EQ; only 1: rewrite EQ; only 1: now left).	0.71385884285	2627
Coq.Arith.Between.between_le	40
Coq.Arith.Between.between_Sk_l	40
Coq.Arith.Between.between_restr	40	0.0.0.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0148561000824	4
Coq.Arith.Between.exists_le_S	40	0.0.1.0	search with cache (only 1: induction 1 as [| * [| ]]; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0141229629517	5
Coq.Arith.Between.exists_S_le	40
Coq.Arith.Between.in_int_intro	40	0.0.24	search with cache (only 1: split; only 1: auto with arith; only 1: auto with arith).	3.83417892456	6178
Coq.Arith.Between.in_int_lt	40	3.1	search with cache (only 1: induction 1; only 1: PeanoNat.Nat.order').	0.0115900039673	6
Coq.Arith.Between.in_int_p_Sq	40
Coq.Arith.Between.in_int_S	40	0.0.0.2.0	search with cache (only 1: intros p q r []; only 1: destruct (le_lt_or_eq r q); only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.0153801441193	7
Coq.Arith.Between.in_int_Sp_q	40	0.0	search with cache (only 1: intros * []; only 1: auto with arith).	0.00788807868958	2
Coq.Arith.Between.between_in_int	40
Coq.Arith.Between.in_int_between	40	0.0.2.0.0	search with cache (only 1: induction 1; only 1: intros; only 1: auto with arith; only 1: intros; only 1: auto with arith).	0.0163490772247	7
Coq.Arith.Between.exists_in_int	40
Coq.Arith.Between.in_int_exists	40
Coq.Arith.Between.between_or_exists	40
Coq.Arith.Between.between_not_exists	40
Coq.Arith.Between.nth_le	40	13.0.1	search with cache (only 1: induction 1; only 1: auto with arith; only 1: eauto with arith).	1.19929599762	1410
Coq.Arith.Between.event_O	40
Coq.Arith.Peano_dec.O_or_S	40
Coq.Arith.Peano_dec.dec_eq_nat	40
Coq.Arith.Peano_dec.le_unique	40
Coq.Arith.Mult.mult_assoc_reverse	40
Coq.Arith.Mult.mult_is_O	40	0.3.2.19.10.0.4.0	search with cache (only 1: destruct n; only 1: intros H; only 1: now left; only 1: simpl; only 1: destruct m as [| m]; only 1: auto; only 1: intros H; only 1: now left).	15.374464035	26806
Coq.Arith.Mult.mult_is_one	40	0.1.7.0.0.4.7	search with cache (only 1: destruct m as [| m]; only 1: now Nat.nzsimpl; only 1: destruct n; only 1: now split; only 1: destruct m; only 1: now Nat.nzsimpl'; only 1: now split).	9.85888695717	7246
Coq.Arith.Mult.mult_O_le	40
Coq.Arith.Mult.mult_le_compat_l	40
Coq.Arith.Mult.mult_le_compat_r	40
Coq.Arith.Mult.mult_le_compat	40
Coq.Arith.Mult.mult_S_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_l	40
Coq.Arith.Mult.mult_lt_compat_r	40
Coq.Arith.Mult.mult_S_le_reg_l	40
Coq.Arith.Mult.odd_even_lem	40
Coq.Arith.Mult.mult_acc_aux	40
Coq.Arith.Mult.mult_tail_mult	40
Coq.Arith.Div2.ind_0_1_SS	40	9.29.3.1	search with cache (only 1: Nat.induct ltac:(n); only 1: trivial; only 1: fix even_equiv 1; only 1: trivial).	4.69919776917	16587
Coq.Arith.Div2.lt_div2	40
Coq.Arith.Div2.even_div2	40
Coq.Arith.Div2.odd_div2	40
Coq.Arith.Div2.div2_even	40
Coq.Arith.Div2.div2_odd	40	1.3.20.9.0.5	search with cache (only 1: destruct (even_or_odd n) as [Ev| Od]; only 1: rewrite odd_equiv; only 1: simpl; only 1: fix ind_0_1_SS 1; only 1: trivial; only 1: trivial).	12.2494409084	28966
Coq.Arith.Div2.even_odd_div2	40
Coq.Arith.Div2.double_S	40
Coq.Arith.Div2.double_plus	40
Coq.Arith.Div2.even_odd_double	40
Coq.Arith.Div2.even_2n	40	1.1	search with cache (only 1: fix even_odd_double 1; only 1: auto with arith).	0.027930021286	34
Coq.Arith.Div2.odd_S2n	40	0.0.0	search with cache (only 1: intros n H; only 1: exists (Nat.div2 n); only 1: auto with arith).	0.0103850364685	3
Coq.Arith.Div2.div2_double	40	0	search with cache (only 1: apply Nat.div2_double).	0.0063419342041	1
Coq.Arith.Div2.div2_double_plus_one	40	0.0.2	search with cache (only 1: rewrite Nat.div2_succ_double; only 1: revert n; only 1: trivial).	0.0217230319977	23
Coq.Arith.Plus.plus_assoc_reverse	40
Coq.Arith.Plus.plus_reg_l	40
Coq.Arith.Plus.plus_le_reg_l	40
Coq.Arith.Plus.plus_lt_reg_l	40
Coq.Arith.Plus.plus_le_compat_l	40	0	search with cache (only 1: apply Nat.add_le_mono_l).	0.00588297843933	1
Coq.Arith.Plus.plus_le_compat_r	40
Coq.Arith.Plus.plus_lt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.00599789619446	1
Coq.Arith.Plus.plus_lt_compat_r	40
Coq.Arith.Plus.plus_le_compat	40
Coq.Arith.Plus.plus_le_lt_compat	40
Coq.Arith.Plus.plus_lt_le_compat	40	1	search with cache (only 1: apply Nat.add_le_mono).	0.00590801239014	2
Coq.Arith.Plus.plus_lt_compat	40	0.0.0.9	search with cache (only 1: intros Ha Hb; only 1: apply Nat.add_le_lt_mono; only 1: Nat.order; only 1: trivial).	0.0485818386078	50
Coq.Arith.Plus.le_plus_l	40
Coq.Arith.Plus.le_plus_r	40
Coq.Arith.Plus.le_plus_trans	40
Coq.Arith.Plus.lt_plus_trans	40
Coq.Arith.Plus.plus_is_O	40	1.1.1.0.0.0.2.1.0.4	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: simpl; only 1: split; only 1: trivial; only 1: trivial; only 1: simpl; only 1: intros; only 1: clear IH; only 1: now repeat split).	1.94554710388	2333
Coq.Arith.Plus.plus_is_one	40
Coq.Arith.Plus.plus_tail_plus	40
Coq.Arith.Plus.succ_plus_discr	40	3.0.0.7.12.26	search with cache (only 1: rewrite Nat.add_comm; only 1: revert m; only 1: induction n as [| n IH]; only 1: trivial; only 1: simpl; only 1: auto).	21.4609870911	34246
Coq.Arith.Lt.lt_le_S	40	3.0	search with cache (only 1: intros H; only 1: Nat.order).	0.0126450061798	5
Coq.Arith.Lt.lt_n_Sm_le	40
Coq.Arith.Lt.le_lt_n_Sm	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00599694252014	1
Coq.Arith.Lt.le_not_lt	40	2.0	search with cache (only 1: intros LT; only 1: Nat.order_nz).	0.0129220485687	11
Coq.Arith.Lt.lt_not_le	40	4.1	search with cache (only 1: intro H'; only 1: Nat.order).	0.0130760669708	7
Coq.Arith.Lt.neq_0_lt	40
Coq.Arith.Lt.lt_0_neq	40	0.0	search with cache (only 1: intros; only 1: Nat.order).	0.0100359916687	2
Coq.Arith.Lt.lt_n_S	40	0	search with cache (only 1: apply Nat.lt_succ_r).	0.00643610954285	1
Coq.Arith.Lt.lt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.00633406639099	1
Coq.Arith.Lt.S_pred	40	1.1.0.9.106	search with cache (only 1: revert m; only 1: induction n as [| n IH]; only 1: intros m Hm; only 1: now Nat.nzsimpl'; only 1: Morphisms.solve_proper).	17.7704191208	56466
Coq.Arith.Lt.S_pred_pos	40	6.3.0.29	search with cache (only 1: induction n as [| n IH]; only 1: intros; only 1: Nat.order'; only 1: trivial).	8.09841918945	16957
Coq.Arith.Lt.lt_pred	40
Coq.Arith.Lt.lt_pred_n_n	40	4.7.1.5.1.8	search with cache (only 1: Nat.induct n; only 1: apply Nat.le_succ_l; only 1: intros; only 1: simpl; only 1: apply Nat.lt_succ_r; only 1: trivial).	1.13221406937	2386
Coq.Arith.Lt.le_lt_or_eq	40
Coq.Arith.Lt.nat_total_order	40
Coq.Arith.Wf_nat.well_founded_ltof	40
Coq.Arith.Wf_nat.well_founded_gtof	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: assert (H : forall (n : nat) (a : A), f a < n -> Acc ltof a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply Acc_intro; only 1: unfold ltof at 1; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	11.1472289562	10025
Coq.Arith.Wf_nat.induction_ltof1	40
Coq.Arith.Wf_nat.induction_gtof1	40	0.0.0.0.0.0.1.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros P F; only 1: assert (H : forall (n : nat) (a : A), f a < n -> P a); only 1: induction n; only 1: intros; only 1: absurd (f a < 0); only 1: auto with arith; only 1: auto with arith; only 1: intros a Ha; only 1: apply F; only 1: intros b Hb; only 1: apply IHn; only 1: apply Nat.lt_le_trans with (f a); only 1: auto with arith; only 1: auto with arith; only 1: intros a; only 1: apply (H (S (f a))); only 1: auto with arith).	13.3182981014	11474
Coq.Arith.Wf_nat.induction_ltof2	40	1	search with cache (only 1: exact induction_ltof1).	0.283004999161	166
Coq.Arith.Wf_nat.induction_gtof2	40	0	search with cache (only 1: exact induction_ltof1).	0.00547909736633	1
Coq.Arith.Wf_nat.well_founded_lt_compat	40
Coq.Arith.Wf_nat.lt_wf	40
Coq.Arith.Wf_nat.lt_wf_rec1	40
Coq.Arith.Wf_nat.lt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof1 nat (fun m : nat => m) P F p)).	0.00560307502747	1
Coq.Arith.Wf_nat.lt_wf_ind	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.0056529045105	1
Coq.Arith.Wf_nat.gt_wf_rec	40	0	search with cache (only 1: exact (fun (p : nat) P F => induction_ltof2 nat (fun m : nat => m) P F p)).	0.00617599487305	1
Coq.Arith.Wf_nat.lt_wf_double_rec	40
Coq.Arith.Wf_nat.lt_wf_double_ind	40	0.0.0.0.0.0.0	search with cache (only 1: intros P Hrec p; only 1: pattern p; only 1: apply lt_wf_rec; only 1: intros n H q; only 1: pattern q; only 1: apply lt_wf_rec; only 1: auto with arith).	0.0912010669708	7
Coq.Arith.Wf_nat.acc_lt_rel	40
Coq.Arith.Wf_nat.well_founded_inv_lt_rel_compat	40
Coq.Arith.Wf_nat.well_founded_inv_rel_inv_lt_rel	40
Coq.Arith.Wf_nat.dec_inh_nat_subset_has_unique_least_element	40
Coq.Arith.Factorial.lt_O_fact	40
Coq.Arith.Factorial.fact_neq_0	40
Coq.Arith.Factorial.fact_le	40
Coq.Arith.Compare_dec.zerop	40	0.34.3.2	search with cache (only 1: destruct n; only 1: auto; only 1: right; only 1: apply Nat.lt_0_succ).	20.2196350098	34278
Coq.Arith.Compare_dec.lt_eq_lt_dec	40
Coq.Arith.Compare_dec.gt_eq_gt_dec	40	0.0.0.0.1.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: destruct H; only 1: auto with arith; only 1: auto with arith; only 1: auto with arith).	0.632200956345	251
Coq.Arith.Compare_dec.le_lt_dec	40	0.0.1.0.0.0.2	search with cache (only 1: induction n in m |- *; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	0.0485978126526	10
Coq.Arith.Compare_dec.le_le_S_dec	40	0.1.0.0.0.0.0.1.0.1.3	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.38224196434	1203
Coq.Arith.Compare_dec.le_ge_dec	40	0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: elim (IHn m); only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	0.242630004883	165
Coq.Arith.Compare_dec.le_gt_dec	40	0.0.1	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.201966047287	98
Coq.Arith.Compare_dec.le_lt_eq_dec	40
Coq.Arith.Compare_dec.le_dec	40	0.0.4	search with cache (only 1: elim (le_lt_dec n m); only 1: auto with arith; only 1: auto with arith).	0.0736441612244	46
Coq.Arith.Compare_dec.lt_dec	40	0.0.1.0.0.0.0.0.0.0	search with cache (only 1: induction n in m |- *; only 1: destruct m; only 1: right; only 1: auto with arith; only 1: auto with arith; only 1: destruct m; only 1: auto with arith; only 1: destruct (IHn m) as [H| H]; only 1: auto with arith; only 1: auto with arith).	0.327924013138	191
Coq.Arith.Compare_dec.gt_dec	40	1	search with cache (only 1: apply le_dec).	0.005695104599	2
Coq.Arith.Compare_dec.ge_dec	40	1	search with cache (only 1: apply le_dec).	0.00564384460449	2
Coq.Arith.Compare_dec.dec_le	40	0.1.0.0.2.2.15	search with cache (only 1: elim (le_lt_dec n m); only 1: now left; only 1: induction n in m |- *; only 1: left; only 1: auto with arith; only 1: right; only 1: auto with arith).	1.39579296112	1372
Coq.Arith.Compare_dec.dec_lt	40	1	search with cache (only 1: apply Nat.le_decidable).	0.00511193275452	2
Coq.Arith.Compare_dec.dec_gt	40	0	search with cache (only 1: apply Nat.lt_decidable).	0.00538396835327	1
Coq.Arith.Compare_dec.dec_ge	40	1	search with cache (only 1: apply Nat.le_decidable).	0.0057110786438	2
Coq.Arith.Compare_dec.not_eq	40	0	search with cache (only 1: apply Nat.lt_gt_cases).	0.00629901885986	1
Coq.Arith.Compare_dec.not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.00594401359558	1
Coq.Arith.Compare_dec.not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.00655102729797	1
Coq.Arith.Compare_dec.not_ge	40	4	search with cache (only 1: apply Nat.nle_gt).	0.0539281368256	20
Coq.Arith.Compare_dec.not_lt	40	1	search with cache (only 1: apply Nat.le_ngt).	0.00693297386169	2
Coq.Arith.Compare_dec.nat_compare_lt	40
Coq.Arith.Compare_dec.nat_compare_gt	40
Coq.Arith.Compare_dec.nat_compare_le	40
Coq.Arith.Compare_dec.nat_compare_ge	40
Coq.Arith.Compare_dec.nat_compare_eq	40
Coq.Arith.Compare_dec.nat_compare_Lt_lt	40	0	search with cache (only 1: apply Nat.compare_lt_iff).	0.006028175354	1
Coq.Arith.Compare_dec.nat_compare_Gt_gt	40	0	search with cache (only 1: apply Nat.compare_gt_iff).	0.00685214996338	1
Coq.Arith.Compare_dec.nat_compare_equiv	40
Coq.Arith.Compare_dec.leb_iff_conv	40
Coq.Arith.Compare_dec.leb_correct	40
Coq.Arith.Compare_dec.leb_complete	40	0	search with cache (only 1: apply Nat.leb_le).	0.00616908073425	1
Coq.Arith.Compare_dec.leb_correct_conv	40	0.0	search with cache (only 1: rewrite Nat.leb_nle; only 1: apply Nat.lt_nge).	0.0140519142151	2
Coq.Arith.Compare_dec.leb_complete_conv	40	0	search with cache (only 1: apply leb_iff_conv).	0.00641012191772	1
Coq.Arith.Compare_dec.leb_compare	40
Coq.Arith.EqNat.eq_nat_refl	40	1.38.7	search with cache (only 1: induction n as [| n IH]; only 1: now Nat.nzsimpl; only 1: trivial).	0.998006820679	2562
Coq.Arith.EqNat.eq_nat_is_eq	40
Coq.Arith.EqNat.eq_eq_nat	40	0.0.0.0.0.0	search with cache (only 1: intros <-; only 1: induction n; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto).	0.0131690502167	6
Coq.Arith.EqNat.eq_nat_eq	40	2	search with cache (only 1: apply eq_nat_is_eq).	0.356869935989	126
Coq.Arith.EqNat.eq_nat_elim	40
Coq.Arith.EqNat.eq_nat_decide	40
Coq.Arith.EqNat.beq_nat_refl	40	1.2.14.6	search with cache (only 1: Nat.induct n; only 1: split; only 1: intros; only 1: now rewrite H).	0.198249816895	559
Coq.Arith.EqNat.beq_nat_true	40	0.0.5.7.0.14.1.1.3.2.11	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: trivial; only 1: symmetry; only 1: discriminate; only 1: destruct m; only 1: intros; only 1: discriminate; only 1: simpl; only 1: contradiction || auto).	20.3215689659	55160
Coq.Arith.EqNat.beq_nat_false	40	0.0.0.0.0.1.1.0.4.0.8.1.13	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: intros; only 1: intros EQ; only 1: discriminate; only 1: simpl; only 1: contradiction || auto; only 1: destruct m; only 1: simpl; only 1: contradiction || auto; only 1: simpl; only 1: contradiction || auto).	2.41541409492	5415
Coq.Arith.EqNat.beq_nat_eq	40	1.27.0	search with cache (only 1: intros; only 1: apply Nat.eqb_eq; only 1: now rewrite H).	1.48973989487	4072
Coq.Arith.Euclid.eucl_dev	40
Coq.Arith.Euclid.quotient	40
Coq.Arith.Euclid.modulo	40
Coq.Arith.PeanoNat.Nat.bi_induction	40
Coq.Arith.PeanoNat.Nat.recursion_wd	40
Coq.Arith.PeanoNat.Nat.recursion_0	40	0	search with cache (only 1: destr_bool).	0.00612497329712	1
Coq.Arith.PeanoNat.Nat.recursion_succ	40	1.0.2.2.3.11.0	search with cache (only 1: intros A A_wd A0 AS; only 1: unfold Basics.flip, respectful; only 1: intros; only 1: simpl; only 1: induction n; only 1: auto; only 1: auto).	4.33468914032	7203
Coq.Arith.PeanoNat.Nat.pred_succ	40	0	search with cache (only 1: auto).	0.00535488128662	1
Coq.Arith.PeanoNat.Nat.pred_0	40	0	search with cache (only 1: reflexivity).	0.00508403778076	1
Coq.Arith.PeanoNat.Nat.one_succ	40	0	search with cache (only 1: reflexivity).	0.00496602058411	1
Coq.Arith.PeanoNat.Nat.two_succ	40	0	search with cache (only 1: reflexivity).	0.00512886047363	1
Coq.Arith.PeanoNat.Nat.add_0_l	40	0	search with cache (only 1: reflexivity).	0.00526809692383	1
Coq.Arith.PeanoNat.Nat.add_succ_l	40	0	search with cache (only 1: reflexivity).	0.00544285774231	1
Coq.Arith.PeanoNat.Nat.sub_0_r	40	0.0.3	search with cache (only 1: induction n; only 1: reflexivity; only 1: auto).	0.00911998748779	6
Coq.Arith.PeanoNat.Nat.sub_succ_r	40
Coq.Arith.PeanoNat.Nat.mul_0_l	40	0	search with cache (only 1: reflexivity).	0.00523900985718	1
Coq.Arith.PeanoNat.Nat.mul_succ_l	40
Coq.Arith.PeanoNat.Nat.lt_succ_r	40
Coq.Arith.PeanoNat.Nat.eqb_eq	40
Coq.Arith.PeanoNat.Nat.leb_le	40
Coq.Arith.PeanoNat.Nat.ltb_lt	40
Coq.Arith.PeanoNat.Nat.eq_dec	40
Coq.Arith.PeanoNat.Nat.compare_eq_iff	40
Coq.Arith.PeanoNat.Nat.compare_lt_iff	40
Coq.Arith.PeanoNat.Nat.compare_le_iff	40	0.0.0.0.0.0.0.0.0.1.0.1.0.0.0.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: split; only 1: intros; only 1: apply le_0_n; only 1: intros; only 1: easy; only 1: destruct m; only 1: simpl; only 1: now split; only 1: simpl; only 1: rewrite ?IHn; only 1: split; only 1: apply le_n_S; only 1: apply le_S_n).	30.943554163	28537
Coq.Arith.PeanoNat.Nat.compare_antisym	40	5.0.0.0.0.0.2.1.0.0.0.1	search with cache (only 1: revert m; only 1: induction n; only 1: destruct m; only 1: simpl; only 1: auto; only 1: reflexivity; only 1: destruct m; only 1: simpl; only 1: easy; only 1: simpl; only 1: rewrite ?IHn; only 1: split).	11.6679601669	15788
Coq.Arith.PeanoNat.Nat.compare_succ	40	0.1	search with cache (only 1: simpl; only 1: trivial).	0.00695300102234	3
Coq.Arith.PeanoNat.Nat.max_l	40
Coq.Arith.PeanoNat.Nat.max_r	40
Coq.Arith.PeanoNat.Nat.min_l	40	0.1.1.4.0.2.0.0.0.0.0.6	search with cache (only 1: induction n; only 1: destruct m; only 1: reflexivity; only 1: simpl; only 1: trivial; only 1: destruct m; only 1: inversion 1; only 1: simpl; only 1: intros; only 1: rewrite ?IHn; only 1: auto; only 1: now apply le_S_n).	33.0576460361	33375
Coq.Arith.PeanoNat.Nat.min_r	40
Coq.Arith.PeanoNat.Nat.pow_neg_r	40	7.1.0.1.1.7.0	search with cache (only 1: intro; only 1: elim H using lt_ind_rel; only 1: solve_proper; only 1: intro; only 1: false_hyp ltac:(H) nle_succ_0; only 1: intros; only 1: now elim (nlt_0_r n)).	2.08881187439	2032
Coq.Arith.PeanoNat.Nat.pow_0_r	40	7	search with cache (only 1: split).	0.00615215301514	8
Coq.Arith.PeanoNat.Nat.pow_succ_r	40	1.1	search with cache (only 1: intro; only 1: reflexivity).	0.0162129402161	21
Coq.Arith.PeanoNat.Nat.square_spec	40	7	search with cache (only 1: reflexivity).	0.00793409347534	8
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_1	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Even_2	40
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_0	40	0.0.0.7	search with cache (only 1: intros ([| ], H); only 1: discriminate; only 1: simpl in H; only 1: now rewrite <- plus_n_Sm in H).	0.0226809978485	24
Coq.Arith.PeanoNat.Nat.Private_Parity.Odd_2	40
Coq.Arith.PeanoNat.Nat.even_spec	40
Coq.Arith.PeanoNat.Nat.odd_spec	40	7.0	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.0816798210144	50
Coq.Arith.PeanoNat.Nat.divmod_spec	40
Coq.Arith.PeanoNat.Nat.div_mod	40
Coq.Arith.PeanoNat.Nat.mod_bound_pos	40
Coq.Arith.PeanoNat.Nat.sqrt_iter_spec	40
Coq.Arith.PeanoNat.Nat.sqrt_specif	40
Coq.Arith.PeanoNat.Nat.sqrt_neg	40	3	search with cache (only 1: inversion 1).	0.00798082351685	4
Coq.Arith.PeanoNat.Nat.log2_iter_spec	40
Coq.Arith.PeanoNat.Nat.log2_spec	40
Coq.Arith.PeanoNat.Nat.log2_nonpos	40	13.0	search with cache (only 1: inversion 1; only 1: reflexivity).	0.161149978638	218
Coq.Arith.PeanoNat.Nat.gcd_divide	40
Coq.Arith.PeanoNat.Nat.gcd_divide_l	40	4.8	search with cache (only 1: fix gcd_divide 1; only 1: auto).	0.0522499084473	130
Coq.Arith.PeanoNat.Nat.gcd_divide_r	40	0.0	search with cache (only 1: intros; only 1: apply gcd_divide).	0.00635814666748	2
Coq.Arith.PeanoNat.Nat.gcd_greatest	40
Coq.Arith.PeanoNat.Nat.gcd_nonneg	40	1	search with cache (only 1: apply le_0_l).	0.0064389705658	2
Coq.Arith.PeanoNat.Nat.div2_double	40
Coq.Arith.PeanoNat.Nat.div2_succ_double	40	0.0.0.1.0.0	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: rewrite add_succ_r; only 1: simpl; only 1: now f_equal).	0.018942117691	7
Coq.Arith.PeanoNat.Nat.le_div2	40
Coq.Arith.PeanoNat.Nat.lt_div2	40	2.0.5.6.0.7	search with cache (only 1: destruct n; only 1: simpl; only 1: auto; only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	22.1102089882	23752
Coq.Arith.PeanoNat.Nat.div2_decr	40	1.0.3	search with cache (only 1: revert n; only 1: fix le_div2 1; only 1: trivial).	0.0116729736328	11
Coq.Arith.PeanoNat.Nat.double_twice	40	22.1.0.3	search with cache (only 1: induction n; only 1: trivial; only 1: simpl mul; only 1: now rewrite <- plus_n_O).	8.37515497208	7628
Coq.Arith.PeanoNat.Nat.testbit_0_l	40	7.7	search with cache (only 1: fix even_spec 1; only 1: trivial).	0.129390001297	341
Coq.Arith.PeanoNat.Nat.testbit_odd_0	40
Coq.Arith.PeanoNat.Nat.testbit_even_0	40
Coq.Arith.PeanoNat.Nat.testbit_odd_succ'	40
Coq.Arith.PeanoNat.Nat.testbit_even_succ'	40
Coq.Arith.PeanoNat.Nat.shiftr_specif	40
Coq.Arith.PeanoNat.Nat.shiftl_specif_high	40
Coq.Arith.PeanoNat.Nat.shiftl_spec_low	40	7.0.3	search with cache (only 1: unfold testbit, odd; only 1: fix odd_spec 1; only 1: trivial).	0.629603862762	537
Coq.Arith.PeanoNat.Nat.div2_bitwise	40	1.6.3.22.1	search with cache (only 1: intros; only 1: revert n; only 1: fix le_div2 1; only 1: simpl; only 1: now f_equal).	5.02191400528	8523
Coq.Arith.PeanoNat.Nat.odd_bitwise	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_1	40
Coq.Arith.PeanoNat.Nat.testbit_bitwise_2	40
Coq.Arith.PeanoNat.Nat.land_spec	40
Coq.Arith.PeanoNat.Nat.ldiff_spec	40	0.0.1	search with cache (only 1: apply testbit_bitwise_1; only 1: trivial; only 1: trivial).	0.0103948116302	4
Coq.Arith.PeanoNat.Nat.lor_spec	40	1.0.37.2	search with cache (only 1: apply testbit_bitwise_1; only 1: fix even_spec 1; only 1: trivial; only 1: solve_max).	4.25977516174	12367
Coq.Arith.PeanoNat.Nat.lxor_spec	40	7.7.0.4	search with cache (only 1: apply testbit_bitwise_2; only 1: trivial; only 1: solve_max; only 1: solve_max).	6.21845316887	4958
Coq.Arith.PeanoNat.Nat.div2_spec	40	1	search with cache (only 1: trivial).	0.00630903244019	2
Coq.Arith.PeanoNat.Nat.testbit_neg_r	40	0	search with cache (only 1: inversion H).	0.00706505775452	1
Coq.Arith.PeanoNat.Nat.tail_add_spec	40
Coq.Arith.PeanoNat.Nat.tail_addmul_spec	40
Coq.Arith.PeanoNat.Nat.tail_mul_spec	40
Coq.Arith.PeanoNat.test	40	0.3.2	search with cache (only 1: intros n m H; only 1: symmetry; only 1: Nat.order).	0.0400538444519	46
Coq.Arith.Compare.discrete_nat	40
Coq.Arith.Gt.gt_n_S	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.0117840766907	1
Coq.Arith.Gt.gt_S_n	40	0	search with cache (only 1: apply Nat.succ_lt_mono).	0.01118683815	1
Coq.Arith.Gt.gt_S	40	5.0.13	search with cache (only 1: intros; only 1: apply Nat.lt_eq_cases; only 1: auto with arith).	0.744620084763	773
Coq.Arith.Gt.gt_pred	40	2	search with cache (only 1: apply Nat.lt_succ_lt_pred).	0.0187089443207	12
Coq.Arith.Gt.le_not_gt	40	0	search with cache (only 1: apply Nat.le_ngt).	0.0113019943237	1
Coq.Arith.Gt.gt_not_le	40	0	search with cache (only 1: apply Nat.lt_nge).	0.0115950107574	1
Coq.Arith.Gt.le_S_gt	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.010941028595	1
Coq.Arith.Gt.gt_S_le	40	3	search with cache (only 1: apply Nat.lt_succ_r).	0.0152578353882	4
Coq.Arith.Gt.gt_le_S	40	0	search with cache (only 1: apply Nat.le_succ_l).	0.0110349655151	1
Coq.Arith.Gt.le_gt_S	40	0	search with cache (only 1: apply Nat.succ_le_mono).	0.0114889144897	1
Coq.Arith.Gt.le_gt_trans	40	0.1.12.12	search with cache (only 1: intros Ha Hb; only 1: apply Nat.lt_le_trans with m; only 1: trivial; only 1: Nat.order).	0.482441902161	539
Coq.Arith.Gt.gt_le_trans	40
Coq.Arith.Gt.gt_trans	40
Coq.Arith.Gt.gt_trans_S	40	36.1.5.0	search with cache (only 1: intros; only 1: apply Nat.lt_le_trans with m; only 1: now apply Nat.lt_le_trans with m; only 1: auto with arith).	9.55892300606	14949
Coq.Arith.Gt.gt_0_eq	40	2.0.38.6	search with cache (only 1: apply Nat.lt_eq_cases; only 1: Nat.induct n; only 1: Nat.order'; only 1: auto with arith).	8.79583597183	18039
Coq.Arith.Gt.plus_gt_reg_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0111680030823	1
Coq.Arith.Gt.plus_gt_compat_l	40	0	search with cache (only 1: apply Nat.add_lt_mono_l).	0.0118839740753	1
Coq.Logic.SetoidChoice.setoid_choice	40
Coq.Logic.SetoidChoice.representative_choice	40
Coq.Logic.PropFacts.injection_is_involution_in_Prop	40
Coq.Logic.JMeq.JMeq_sym	40	0.7.1.4	search with cache (only 1: intros A C h1 h2; only 1: intros H; only 1: inversion_clear H; only 1: auto).	0.0868110656738	313
Coq.Logic.JMeq.JMeq_trans	40	1.0.3	search with cache (only 1: intros; only 1: destruct H; only 1: trivial).	0.00795912742615	7
Coq.Logic.JMeq.JMeq_ind	40
Coq.Logic.JMeq.JMeq_rec	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00776195526123	3
Coq.Logic.JMeq.JMeq_rect	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00801086425781	3
Coq.Logic.JMeq.JMeq_ind_r	40
Coq.Logic.JMeq.JMeq_rec_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00832104682922	4
Coq.Logic.JMeq.JMeq_rect_r	40	0.1.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := JMeq_sym H'); only 1: trivial).	0.00855183601379	4
Coq.Logic.JMeq.JMeq_congr	40	0.0.0	search with cache (only 1: intros A x P H y H'; only 1: case JMeq_eq with (1 := H'); only 1: trivial).	0.00803112983704	3
Coq.Logic.JMeq.JMeq_eq_dep_id	40	0.0	search with cache (only 1: intros * []; only 1: auto).	0.0108749866486	2
Coq.Logic.JMeq.eq_dep_id_JMeq	40	0.0	search with cache (only 1: destruct 1; only 1: trivial).	0.00680899620056	2
Coq.Logic.JMeq.eq_dep_JMeq	40	3.2	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0351688861847	35
Coq.Logic.JMeq.eq_dep_strictly_stronger_JMeq	40
Coq.Logic.JMeq.JMeq_eq_dep	40	0.2.0.0	search with cache (only 1: destruct 1; only 1: intros; only 1: dependent rewrite H; only 1: trivial).	0.0209028720856	12
Coq.Logic.ExtensionalityFacts.diagonal_projs_same_behavior	40	0.12.15.0	search with cache (only 1: intro x; only 1: intro p; only 1: destruct p; only 1: trivial).	0.364587783813	1978
Coq.Logic.ExtensionalityFacts.diagonal_inverse1	40
Coq.Logic.ExtensionalityFacts.diagonal_inverse2	40	0.0.0.0	search with cache (only 1: split; only 1: trivial; only 1: destruct b as (a1, a2, []); only 1: reflexivity).	0.00936603546143	4
Coq.Logic.ExtensionalityFacts.FunctExt_iff_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_UniqInverse	40
Coq.Logic.ExtensionalityFacts.UniqInverse_EqDeltaProjs	40
Coq.Logic.ExtensionalityFacts.FunctExt_iff_UniqInverse	40
Coq.Logic.ExtensionalityFacts.FunctExt_BijComp	40
Coq.Logic.ExtensionalityFacts.BijComp_FunctExt	40
Coq.Logic.Classical_Prop.NNPP	40
Coq.Logic.Classical_Prop.Peirce	40	4.3	search with cache (only 1: intro A; only 1: tauto).	0.0120160579681	18
Coq.Logic.Classical_Prop.not_imply_elim	40	3.0	search with cache (only 1: intros P H; only 1: tauto).	0.0111291408539	5
Coq.Logic.Classical_Prop.not_imply_elim2	40	1.0.0.1.0	search with cache (only 1: intros; only 1: intro; only 1: apply H; only 1: intro; only 1: trivial).	0.0244979858398	15
Coq.Logic.Classical_Prop.imply_to_or	40	0.0.0.0.1.5.0	search with cache (only 1: intros A; only 1: pose (P := fun n : nat => n = 0 /\ A \/ n = 1); only 1: intuition; only 1: assert (h : P 1); only 1: unfold P; only 1: intuition; only 1: tauto).	0.533558130264	516
Coq.Logic.Classical_Prop.imply_to_and	40	0.9	search with cache (only 1: intros Ext A a; only 1: tauto).	0.226604938507	206
Coq.Logic.Classical_Prop.or_to_imply	40	2.1	search with cache (only 1: intros A; only 1: intuition).	0.028666973114	44
Coq.Logic.Classical_Prop.not_and_or	40	0.0.0.2	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.013514995575	6
Coq.Logic.Classical_Prop.or_not_and	40	4.0	search with cache (only 1: intros; only 1: tauto).	0.0202729701996	15
Coq.Logic.Classical_Prop.not_or_and	40	0.0.0.0	search with cache (only 1: intros; only 1: elim (classic P); only 1: auto; only 1: auto).	0.0106489658356	4
Coq.Logic.Classical_Prop.and_not_or	40	0	search with cache (only 1: tauto).	0.0072808265686	1
Coq.Logic.Classical_Prop.imply_and_or	40	1	search with cache (only 1: tauto).	0.0436928272247	53
Coq.Logic.Classical_Prop.imply_and_or2	40	0	search with cache (only 1: tauto).	0.00794005393982	1
Coq.Logic.Classical_Prop.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.Hurkens.Generic.Omega	40
Coq.Logic.Hurkens.Generic.lemma1	40
Coq.Logic.Hurkens.Generic.lemma2	40
Coq.Logic.Hurkens.Generic.paradox	40
Coq.Logic.Hurkens.NoRetractToImpredicativeUniverse.paradox	40
Coq.Logic.Hurkens.NoRetractToModalProposition.strength	40
Coq.Logic.Hurkens.NoRetractToModalProposition.modal	40	0.53	search with cache (only 1: intros [x y]; only 1: eauto).	0.61186003685	3775
Coq.Logic.Hurkens.NoRetractToModalProposition.Forall	40	1.42	search with cache (only 1: red; only 1: eauto).	0.175220966339	1030
Coq.Logic.Hurkens.NoRetractToModalProposition.paradox	40
Coq.Logic.Hurkens.NoRetractToNegativeProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.mparadox	40
Coq.Logic.Hurkens.NoRetractFromSmallPropositionToProp.paradox	40
Coq.Logic.Hurkens.NoRetractFromTypeToProp.paradox	40
Coq.Logic.Hurkens.TypeNeqSmallType.up_down	40
Coq.Logic.Hurkens.TypeNeqSmallType.paradox	40
Coq.Logic.Hurkens.PropNeqType.paradox	40
Coq.Logic.ClassicalChoice.singleton_choice	40
Coq.Logic.ClassicalChoice.choice	40
Coq.Logic.Eqdep_dec.trans_sym_eq	40	0.28.44.37	search with cache (only 1: intro; only 1: intros h1 h2; only 1: destruct h2; only 1: reflexivity).	3.02952814102	24182
Coq.Logic.Eqdep_dec.nu_constant	40
Coq.Logic.Eqdep_dec.nu_left_inv_on	40
Coq.Logic.Eqdep_dec.eq_proofs_unicity_on	40
Coq.Logic.Eqdep_dec.K_dec_on	40
Coq.Logic.Eqdep_dec.inj_right_pair_on	40
Coq.Logic.Eqdep_dec.K_dec_type	40
Coq.Logic.Eqdep_dec.eq_rect_eq_dec	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: intros A eq_dec x P H p; only 1: elim p using K_dec; only 1: intros; only 1: case (eq_dec x0 y); only 1: left; only 1: assumption; only 1: right; only 1: assumption; only 1: trivial).	0.0210881233215	9
Coq.Logic.Eqdep_dec.DecidableEqDep.inj_pairP2	40
Coq.Logic.Eqdep_dec.inj_pair2_eq_dec	40
Coq.Logic.Eqdep_dec.UIP_refl_unit	40
Coq.Logic.Eqdep_dec.UIP_refl_bool	40
Coq.Logic.Eqdep_dec.UIP_refl_nat	40
Coq.Logic.ConstructiveEpsilon.linear_search_smallest	40
Coq.Logic.ConstructiveEpsilon.epsilon_smallest	40
Coq.Logic.ConstructiveEpsilon.P_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc	40
Coq.Logic.ConstructiveEpsilon.P_eventually_implies_acc_ex	40
Coq.Logic.ConstructiveEpsilon.acc_implies_P_eventually	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description_nat_Acc	40
Coq.Logic.ConstructiveEpsilon.P'_decidable	40
Coq.Logic.ConstructiveEpsilon.constructive_indefinite_ground_description	40
Coq.Logic.ConstructiveEpsilon.constructive_definite_ground_description	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_rel_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.fun_choice_imp_functional_rel_reification	40
Coq.Logic.ChoiceFacts.fun_choice_iff_rel_choice_and_functional_rel_reification	40
Coq.Logic.ChoiceFacts.rel_choice_and_proof_irrel_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.rel_choice_indep_of_general_premises_imp_guarded_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_rel_choice_imp_rel_choice	40
Coq.Logic.ChoiceFacts.subset_types_imp_guarded_rel_choice_iff_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_rel_choice	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_indep_of_general_premises	40
Coq.Logic.ChoiceFacts.guarded_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_imp_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_indep_general_prem_iff_guarded_fun_choice	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_small_drinker	40
Coq.Logic.ChoiceFacts.omniscient_fun_choice_imp_fun_choice	40	0.0.0.9.4.5	search with cache (only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: firstorder; only 1: exists f; only 1: auto).	1.68084597588	1968
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_imp_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_small_drinker_iff_omniscient_fun_choice	40
Coq.Logic.ChoiceFacts.guarded_iff_omniscient_fun_choice	40	0.0.2.3.5.2.0.1.14.5.3.0	search with cache (only 1: split; only 1: intros GAC_rel A B R; only 1: firstorder; only 1: apply (GAC_rel A B (fun x => exists y, R x y) R); only 1: eauto; only 1: auto; only 1: intros OAC_rel A B P R H; only 1: firstorder; only 1: destruct (OAC_rel A B R) as (f, Hf); only 1: eauto; only 1: exists f; only 1: firstorder).	16.9428901672	35296
Coq.Logic.ChoiceFacts.iota_imp_constructive_definite_description	40
Coq.Logic.ChoiceFacts.epsilon_imp_constructive_indefinite_description	40	1.0.0.1.0.0.0	search with cache (only 1: intros D_iota A P H; only 1: destruct D_iota with (P := P) as (x, H1); only 1: destruct H; only 1: auto; only 1: exists x; only 1: apply H1; only 1: assumption).	0.0212528705597	12
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_imp_epsilon	40	7.9	search with cache (only 1: compute; only 1: firstorder).	0.0996608734131	318
Coq.Logic.ChoiceFacts.epsilon_imp_small_drinker	40	0.4.0.10.0	search with cache (only 1: intros D_epsilon A P H; only 1: destruct D_epsilon with (P := P) as (x, H1); only 1: auto; only 1: exists x; only 1: assumption).	0.188561916351	504
Coq.Logic.ChoiceFacts.constructive_indefinite_description_and_small_drinker_iff_epsilon	40
Coq.Logic.ChoiceFacts.classical_denumerable_description_imp_fun_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_choice	40
Coq.Logic.ChoiceFacts.non_dep_dep_functional_choice	40
Coq.Logic.ChoiceFacts.functional_choice_to_inhabited_forall_commute	40
Coq.Logic.ChoiceFacts.inhabited_forall_commute_to_functional_choice	40
Coq.Logic.ChoiceFacts.dep_non_dep_functional_rel_reification	40	0.0.0.0	search with cache (only 1: intros AC_depfun A B R H; only 1: destruct (AC_depfun A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	0.0118930339813	4
Coq.Logic.ChoiceFacts.non_dep_dep_functional_rel_reification	40
Coq.Logic.ChoiceFacts.dep_iff_non_dep_functional_rel_reification	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1.16	search with cache (only 1: Record.split; only 1: intros AC_fun A B R H; only 1: pose (B' := {x : A & B x}); only 1: pose (R' := fun (x : A) (y : B') => projT1 y = x /\ R (projT1 y) (projT2 y)); only 1: destruct (AC_fun A B' R') as (f, Hf); only 1: intros x; only 1: destruct (H x) as (y, (Hy, Huni)); only 1: exists (existT (fun x => B x) x y); only 1: repeat split; only 1: trivial; only 1: intros (x', y') (Heqx', Hy'); only 1: simpl in *; only 1: destruct Heqx'; only 1: rewrite (Huni y'); only 1: trivial; only 1: trivial; only 1: exists (fun x => eq_rect _ _ (projT2 (f x)) _ (proj1_inf (Hf x))); only 1: intro x; only 1: destruct (Hf x) as (Heq, HR) using and_indd; only 1: destruct (f x); only 1: simpl in *; only 1: destruct Heq using eq_indd; only 1: trivial; only 1: intros DepFunReify A B R H; only 1: destruct (DepFunReify A (fun _ => B) R H) as (f, Hf); only 1: exists f; only 1: trivial).	12.9676289558	19534
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_indefinite_descr	40
Coq.Logic.ChoiceFacts.constructive_indefinite_descr_fun_choice	40
Coq.Logic.ChoiceFacts.relative_non_contradiction_of_definite_descr	40
Coq.Logic.ChoiceFacts.constructive_definite_descr_fun_reification	40	0.0.2.1	search with cache (only 1: intros IndefDescr A B R H; only 1: exists (fun x => proj1_sig (IndefDescr B (R x) (H x))); only 1: intro x; only 1: apply (proj2_sig (IndefDescr B (R x) (H x)))).	0.0159430503845	23
Coq.Logic.ChoiceFacts.constructive_definite_descr_excluded_middle	40
Coq.Logic.ChoiceFacts.fun_reification_descr_computational_excluded_middle_in_prop_context	40
Coq.Logic.ChoiceFacts.functional_choice_imp_functional_dependent_choice	40
Coq.Logic.ChoiceFacts.functional_dependent_choice_imp_functional_countable_choice	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_prop_repr	40	10	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.79493689537	121
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_pred_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_ext_function_repr	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_excluded_middle	40
Coq.Logic.ChoiceFacts.repr_fun_choice_imp_relational_choice	40
Coq.Logic.ChoiceFacts.gen_setoid_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_gen_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.simple_setoid_fun_choice_imp_setoid_fun_choice	40	4.0.0.2	search with cache (only 1: intros A B GenSetoidFunChoice R T Hequiv Hcompat Hex; only 1: apply GenSetoidFunChoice; only 1: easy; only 1: firstorder).	0.687496900558	32
Coq.Logic.ChoiceFacts.setoid_fun_choice_iff_simple_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_functional_rel_reification	40	0.0.5.0.0.0.1	search with cache (only 1: intros A B SetoidFunChoice T Hexists; only 1: destruct SetoidFunChoice with (R := eq) (T := T) as (f, Hf); only 1: apply eq_equivalence; only 1: now intros * ->; only 1: firstorder; only 1: exists f; only 1: firstorder).	0.601748943329	263
Coq.Logic.ChoiceFacts.setoid_fun_choice_imp_repr_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.functional_rel_reification_and_repr_fun_choice_iff_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_functions_repr_and_excluded_middle_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_first_characterization	40
Coq.Logic.ChoiceFacts.fun_choice_and_ext_pred_ext_and_proof_irrel_imp_setoid_fun_choice	40
Coq.Logic.ChoiceFacts.setoid_functional_choice_second_characterization	40
Coq.Logic.PropExtensionality.proof_irrelevance	40
Coq.Logic.StrictProp.Spr1_inj	40	3.17.7.158	search with cache (only 1: destruct a, b; only 1: simpl in *; only 1: subst; only 1: reflexivity).	10.2900049686	153591
Coq.Logic.ClassicalFacts.prop_degen_ext	40
Coq.Logic.ClassicalFacts.prop_degen_em	40	19.1.1.9.1.19.0.38.4	search with cache (only 1: intros; only 1: red; only 1: intro A; only 1: destruct (H A); only 1: rewrite H0; only 1: constructor; only 1: exact I; only 1: rewrite H0; only 1: auto).	32.6751720905	298942
Coq.Logic.ClassicalFacts.prop_ext_em_degen	40
Coq.Logic.ClassicalFacts.provable_prop_ext	40	3.0.0.1.11	search with cache (only 1: intros Ext EM A; only 1: apply Ext; only 1: split; only 1: exact (fun _ => I); only 1: trivial).	0.217231988907	677
Coq.Logic.ClassicalFacts.prop_ext_A_eq_A_imp_A	40	75.6	search with cache (only 1: intros Ext EM A; only 1: now apply Ext).	2.19914698601	26307
Coq.Logic.ClassicalFacts.prop_ext_retract_A_A_imp_A	40
Coq.Logic.ClassicalFacts.ext_prop_fixpoint	40
Coq.Logic.ClassicalFacts.aux	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_gen	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cc	40
Coq.Logic.ClassicalFacts.ext_prop_dep_proof_irrel_cic	40
Coq.Logic.ClassicalFacts.p2p1	40
Coq.Logic.ClassicalFacts.p2p2	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.wp2p1	40
Coq.Logic.ClassicalFacts.wp2p2	40
Coq.Logic.ClassicalFacts.wproof_irrelevance_cc	40
Coq.Logic.ClassicalFacts.proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.wem_proof_irrelevance_cci	40
Coq.Logic.ClassicalFacts.excluded_middle_Godel_Dummett	40
Coq.Logic.ClassicalFacts.Godel_Dummett_iff_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.Godel_Dummett_weak_excluded_middle	40
Coq.Logic.ClassicalFacts.weak_excluded_middle_iff_classical_de_morgan_law	40
Coq.Logic.ClassicalFacts.independence_general_premises_right_distr_implication_over_disjunction	40
Coq.Logic.ClassicalFacts.independence_general_premises_Godel_Dummett	40
Coq.Logic.ClassicalFacts.independence_general_premises_drinker	40
Coq.Logic.ClassicalFacts.excluded_middle_independence_general_premises	40
Coq.Logic.ClassicalFacts.unrestricted_minimization_entails_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_entails_unrestricted_minimization	40
Coq.Logic.ClassicalFacts.undecidable_predicate_with_the_minimization_property	40
Coq.Logic.ClassicalFacts.representative_boolean_partition_imp_excluded_middle	40
Coq.Logic.ClassicalFacts.excluded_middle_imp_representative_boolean_partition	40
Coq.Logic.ClassicalFacts.excluded_middle_iff_representative_boolean_partition	40
Coq.Logic.Classical_Pred_Type.not_all_not_ex	40
Coq.Logic.Classical_Pred_Type.not_all_ex_not	40
Coq.Logic.Classical_Pred_Type.not_ex_all_not	40	0.0.3.0.0	search with cache (only 1: intros P notall; only 1: intros n H; only 1: apply notall; only 1: exists n; only 1: exact H).	0.0127520561218	8
Coq.Logic.Classical_Pred_Type.not_ex_not_all	40	0.0.4.5.4.5.1.0	search with cache (only 1: unfold not; only 1: intros P notall; only 1: intro n; only 1: apply NNPP; only 1: intro all; only 1: apply notall; only 1: exists n; only 1: trivial).	4.9570350647	13012
Coq.Logic.Classical_Pred_Type.ex_not_not_all	40	3.0.0.13	search with cache (only 1: destruct 1; only 1: intro all; only 1: apply H; only 1: trivial).	2.95888590813	5589
Coq.Logic.Classical_Pred_Type.all_not_not_ex	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.Eq_rect_eq.eq_rect_eq	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subset_eq_compat	40
Coq.Logic.ProofIrrelevanceFacts.ProofIrrelevanceTheory.subsetT_eq_compat	40	0.1.2.0	search with cache (only 1: intros; only 1: rewrite M.proof_irrelevance with (p1 := q) (p2 := (eq_rect x P p y H)); only 1: elim H using eq_indd; only 1: reflexivity).	0.018285036087	7
Coq.Logic.FinFun.Finite_alt	40
Coq.Logic.FinFun.Injective_map_NoDup	40
Coq.Logic.FinFun.Injective_list_carac	40
Coq.Logic.FinFun.Injective_carac	40
Coq.Logic.FinFun.Surjective_list_carac	40
Coq.Logic.FinFun.Surjective_carac	40
Coq.Logic.FinFun.Endo_Injective_Surjective	40
Coq.Logic.FinFun.Finite_Empty_or_not	40
Coq.Logic.FinFun.Surjective_inverse	40
Coq.Logic.FinFun.Injective_Surjective_Bijective	40
Coq.Logic.FinFun.Fin_Finite	40
Coq.Logic.FinFun.Fin2Restrict.extend_ok	40
Coq.Logic.FinFun.Fin2Restrict.extend_f2n	40
Coq.Logic.FinFun.Fin2Restrict.extend_n2f	40
Coq.Logic.FinFun.Fin2Restrict.restrict_f2n	40
Coq.Logic.FinFun.Fin2Restrict.restrict_n2f	40
Coq.Logic.FinFun.Fin2Restrict.extend_surjective	40
Coq.Logic.FinFun.Fin2Restrict.extend_injective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_surjective	40
Coq.Logic.FinFun.Fin2Restrict.restrict_injective	40
Coq.Logic.FinFun.bInjective_bSurjective	40
Coq.Logic.FinFun.bSurjective_bBijective	40
Coq.Logic.Diaconescu.prop_ext	40
Coq.Logic.Diaconescu.proof_irrel	40
Coq.Logic.Diaconescu.guarded_rel_choice	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: red; only 1: intros A B P R H; only 1: destruct (rel_choice _ _ (fun (x : {x : _ & P x}) (y : B) => R (projT1 x) y)) as (R', (HR'R, H0)); only 1: intros (x, HPx); only 1: destruct (H x HPx) as (y, HRxy); only 1: exists y; only 1: exact HRxy; only 1: set (R'' := fun (x : A) (y : B) => exists H : P x, R' (existT P x H) y); only 1: exists R''; only 1: Notations.split; only 1: intros x y (HPx, HR'xy); only 1: change x with (projT1 (existT P x HPx)); only 1: apply HR'R; only 1: exact HR'xy; only 1: intros x HPx; only 1: destruct (H0 (existT P x HPx)) as (y, (HR'xy, Huniq)); only 1: exists y; only 1: Notations.split; only 1: exists HPx; only 1: exact HR'xy; only 1: intros y' (H'Px, HR'xy'); only 1: apply Huniq; only 1: rewrite proof_irrel with (a1 := HPx) (a2 := H'Px); only 1: exact HR'xy').	10.489841938	9489
Coq.Logic.Diaconescu.AC_bool_subset_to_bool	40
Coq.Logic.Diaconescu.pred_ext_and_rel_choice_imp_EM	40
Coq.Logic.Diaconescu.a1'	40
Coq.Logic.Diaconescu.a2'	40	0.0	search with cache (only 1: exists a1; only 1: auto).	0.0101180076599	2
Coq.Logic.Diaconescu.projT1_injective	40
Coq.Logic.Diaconescu.decide	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec	40
Coq.Logic.Diaconescu.proof_irrel_rel_choice_imp_eq_dec'	40	0.0.0.0.0.0.0.0.0.1.0.0.0.0.0.0.1.0	search with cache (only 1: destruct (rel_choice A' bool (fun x y => projT1 x = a1 /\ y = true \/ projT1 x = a2 /\ y = false)) as (R, (HRsub, HR)); only 1: apply decide; only 1: destruct (HR a1') as (b1, (Ha1'b1, _Huni1)); only 1: destruct (HRsub a1' b1 Ha1'b1) as [(_, Hb1true)| (Ha1a2, _Hb1false)]; only 1: destruct (HR a2') as (b2, (Ha2'b2, Huni2)); only 1: destruct (HRsub a2' b2 Ha2'b2) as [(Ha2a1, _Hb2true)| (_, Hb2false)]; only 1: left; only 1: symmetry; only 1: assumption; only 1: right; only 1: intro H; only 1: subst b1; only 1: subst b2; only 1: rewrite (projT1_injective H) in Ha1'b1; only 1: assert (false = true) by auto using Huni2; only 1: discriminate; only 1: left; only 1: assumption).	34.4591019154	18576
Coq.Logic.Diaconescu.extensional_epsilon_imp_EM	40
Coq.Logic.FunctionalExtensionality.equal_f	40	0.7	search with cache (only 1: destruct 1; only 1: trivial).	0.012393951416	25
Coq.Logic.FunctionalExtensionality.equal_f_dep	40	0.0.0	search with cache (only 1: intros; only 1: rewrite H; only 1: auto).	0.00798606872559	3
Coq.Logic.FunctionalExtensionality.functional_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionality	40
Coq.Logic.FunctionalExtensionality.forall_extensionalityP	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00830698013306	3
Coq.Logic.FunctionalExtensionality.forall_extensionalityS	40	0.0.0	search with cache (only 1: apply functional_extensionality in H; only 1: destruct H; only 1: reflexivity).	0.00815176963806	3
Coq.Logic.FunctionalExtensionality.functional_extensionality_dep_good_refl	40
Coq.Logic.FunctionalExtensionality.forall_sig_eq_rect	40
Coq.Logic.FunctionalExtensionality.forall_eq_rect_comp	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good	40
Coq.Logic.FunctionalExtensionality.f_equal__functional_extensionality_dep_good__fun	40	4.8.0	search with cache (only 1: apply forall_eq_rect with (H := H); only 1: rewrite functional_extensionality_dep_good_refl; only 1: reflexivity).	0.224714994431	334
Coq.Logic.FunctionalExtensionality.eta_expansion_dep	40	0	search with cache (only 1: reflexivity).	0.00480699539185	1
Coq.Logic.FunctionalExtensionality.eta_expansion	40	1	search with cache (only 1: reflexivity).	0.00466918945312	2
Coq.Logic.HLevels.forall_hprop	40
Coq.Logic.HLevels.and_hprop	40
Coq.Logic.HLevels.impl_hprop	40	0.0.1.0.8	search with cache (only 1: intros; only 1: intros p q; only 1: apply functional_extensionality_dep; only 1: intro x; only 1: apply H).	0.0465438365936	127
Coq.Logic.HLevels.false_hprop	40	0.18	search with cache (only 1: intros p q; only 1: destruct p, q).	0.0221691131592	165
Coq.Logic.HLevels.true_hprop	40	1.1.0	search with cache (only 1: intros p q; only 1: destruct p, q; only 1: trivial).	0.00790095329285	5
Coq.Logic.HLevels.not_hprop	40	3.0.2.0	search with cache (only 1: intros p q; only 1: intro H1; only 1: apply functional_extensionality; only 1: contradiction).	0.0133030414581	16
Coq.Logic.HLevels.hset_hprop	40
Coq.Logic.HLevels.eq_trans_cancel	40
Coq.Logic.HLevels.hset_hOneType	40
Coq.Logic.HLevels.hprop_hprop	40
Coq.Logic.HLevels.hprop_hset	40
Coq.Logic.ClassicalUniqueChoice.unique_choice	40
Coq.Logic.ClassicalUniqueChoice.classic_set_in_prop_context	40
Coq.Logic.ClassicalUniqueChoice.not_not_classic_set	40
Coq.Logic.WKL.is_path_from_characterization	40
Coq.Logic.WKL.is_path_from_restrict	40
Coq.Logic.WKL.inductively_barred_at_monotone	40
Coq.Logic.WKL.inductively_barred_at_imp_is_path_from	40
Coq.Logic.WKL.is_path_from_imp_inductively_barred_at	40
Coq.Logic.WKL.find_left_path	40
Coq.Logic.WKL.Y_unique	40
Coq.Logic.WKL.Y_approx	40
Coq.Logic.WKL.PreWeakKonigsLemma	40
Coq.Logic.WKL.inductively_barred_at_decidable	40
Coq.Logic.WKL.inductively_barred_at_is_path_from_decidable	40
Coq.Logic.WKL.WeakKonigsLemma	40
Coq.Logic.Epsilon.constructive_indefinite_description	40
Coq.Logic.Epsilon.small_drinkers'_paradox	40
Coq.Logic.Epsilon.iota_statement	40
Coq.Logic.Epsilon.constructive_definite_description	40	10.0.0.0.34.0	search with cache (only 1: intros; only 1: destruct epsilon_statement with (P := P); only 1: destruct H; only 1: red in H; only 1: auto; only 1: firstorder).	1.98476886749	6279
Coq.Logic.ClassicalDescription.excluded_middle_informative	40
Coq.Logic.ClassicalDescription.classical_definite_description	40
Coq.Logic.ClassicalDescription.dependent_unique_choice	40
Coq.Logic.ClassicalDescription.unique_choice	40	0.0.11.0.35.4	search with cache (only 1: intros A B R H; only 1: assert (Hexuni : forall x, exists ! y, R x y); only 1: firstorder; only 1: exists (fun x => proj1_sig (constructive_definite_description (R x) (Hexuni x))); only 1: intro x; only 1: apply (proj2_sig (constructive_definite_description (R x) (Hexuni x)))).	3.63817095757	12603
Coq.Logic.EqdepFacts.eq_dep_sym	40	0.3.12	search with cache (only 1: intro; only 1: destruct 1; only 1: auto).	0.0534460544586	146
Coq.Logic.EqdepFacts.eq_dep_trans	40	0.0	search with cache (only 1: destruct 1; only 1: auto).	0.00839304924011	2
Coq.Logic.EqdepFacts.eq_dep1_dep	40
Coq.Logic.EqdepFacts.eq_dep_dep1	40	1.34.1	search with cache (only 1: destruct 1; only 1: exists eq_refl; only 1: reflexivity).	0.544263124466	2211
Coq.Logic.EqdepFacts.eq_sigT_eq_dep	40	3.69	search with cache (only 1: inversion 1; only 1: apply eq_dep_intro).	8.11633682251	49798
Coq.Logic.EqdepFacts.eq_dep_eq_sigT	40	3.19	search with cache (only 1: destruct 1; only 1: reflexivity).	0.317694187164	731
Coq.Logic.EqdepFacts.eq_sigT_iff_eq_dep	40	0.18.0.0.17.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.2310731411	8548
Coq.Logic.EqdepFacts.eq_sig_eq_dep	40	0.0.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro).	0.012482881546	3
Coq.Logic.EqdepFacts.eq_dep_eq_sig	40	1.1	search with cache (only 1: destruct 1; only 1: reflexivity).	0.014888048172	13
Coq.Logic.EqdepFacts.eq_sig_iff_eq_dep	40	0.17.0.0.16.2	search with cache (only 1: split; only 1: intros; only 1: dependent rewrite H; only 1: apply eq_dep_intro; only 1: destruct 1; only 1: reflexivity).	2.93407797813	8845
Coq.Logic.EqdepFacts.eq_sigT_sig_eq	40
Coq.Logic.EqdepFacts.eq_sigT_fst	40	1.1.1.0	search with cache (only 1: intros; only 1: change x2 with (projT1 (existT P x2 H2)); only 1: destruct H; only 1: split).	0.0363211631775	27
Coq.Logic.EqdepFacts.eq_sigT_snd	40
Coq.Logic.EqdepFacts.eq_sig_fst	40	1.2.4.0	search with cache (only 1: intros; only 1: dependent rewrite H; only 1: destruct H; only 1: reflexivity).	0.200001955032	198
Coq.Logic.EqdepFacts.eq_sig_snd	40
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep1_eq_on	40	32.1.22.38	search with cache (only 1: intro x; only 1: destruct 1; only 1: rewrite H; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	2.9070789814	15606
Coq.Logic.EqdepFacts.eq_rect_eq_on__eq_dep_eq_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__UIP_on	40
Coq.Logic.EqdepFacts.UIP_on__UIP_refl_on	40	8.0.1.0	search with cache (only 1: intro eq_dep_eq; only 1: red; only 1: intros; only 1: auto).	0.0852880477905	167
Coq.Logic.EqdepFacts.UIP_refl_on__Streicher_K_on	40	4.21.4.2.4.0	search with cache (only 1: red; only 1: intro; only 1: intro eq_dep_eq; only 1: intros; only 1: rewrite H; only 1: apply eq_dep_eq).	4.73703503609	25472
Coq.Logic.EqdepFacts.Streicher_K_on__eq_rect_eq_on	40	7.6.1	search with cache (only 1: intro; only 1: red; only 1: auto).	0.438640117645	565
Coq.Logic.EqdepFacts.UIP_shift_on	40
Coq.Logic.EqdepFacts.eq_dep_eq_on__inj_pair2_on	40	1.0.0	search with cache (only 1: intros eq_rect_eq; only 1: red; only 1: auto using eq_sigT_eq_dep, eq_dep_eq_sigT).	0.0156488418579	4
Coq.Logic.EqdepFacts.f_eq_dep	40	1.2	search with cache (only 1: destruct 1; only 1: reflexivity).	0.0238609313965	20
Coq.Logic.EqdepFacts.eq_dep_non_dep	40	0.12	search with cache (only 1: destruct 1; only 1: trivial).	0.19601893425	167
Coq.Logic.EqdepFacts.f_eq_dep_non_dep	40	0.3	search with cache (only 1: destruct 1; only 1: reflexivity).	0.103303909302	26
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropExt	40
Coq.Logic.PropExtensionalityFacts.PredExt_imp_PropFunExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_imp_PredExt	40	8.0	search with cache (only 1: intros Ext A P Q Eq; only 1: auto).	0.0086989402771	18
Coq.Logic.PropExtensionalityFacts.PropExt_and_PropFunExt_iff_PredExt	40
Coq.Logic.PropExtensionalityFacts.PropExt_imp_ProvPropExt	40	15	search with cache (only 1: firstorder using PredExt_imp_PropExt, PredExt_imp_PropFunExt, PropExt_and_PropFunExt_imp_PredExt).	0.511352062225	224
Coq.Logic.PropExtensionalityFacts.PropExt_imp_RefutPropExt	40	10.0	search with cache (only 1: intros Ext A Ha; only 1: now apply Ext).	0.0917730331421	252
Coq.Logic.IndefiniteDescription.constructive_definite_description	40
Coq.Logic.IndefiniteDescription.functional_choice	40
Coq.Logic.Berardi.AC_IF	40
Coq.Logic.Berardi.AC	40	6.18.11	search with cache (only 1: intros n m; only 1: induction n; only 1: auto).	6.49760293961	20330
Coq.Logic.Berardi.L1	40
Coq.Logic.Berardi.retract_pow_U_U	40
Coq.Logic.Berardi.not_has_fixpoint	40
Coq.Logic.Berardi.classical_proof_irrelevance	40
Coq.Logic.ClassicalEpsilon.constructive_definite_description	40
Coq.Logic.ClassicalEpsilon.excluded_middle_informative	40
Coq.Logic.ClassicalEpsilon.classical_indefinite_description	40
Coq.Logic.ClassicalEpsilon.epsilon_inh_irrelevance	40
Coq.Logic.ClassicalEpsilon.choice	40
Coq.Logic.Decidable.dec_not_not	40	3.5.15	search with cache (only 1: destruct 1; only 1: auto; only 1: contradiction).	1.50233387947	8314
Coq.Logic.Decidable.dec_True	40	1.17	search with cache (only 1: unfold decidable; only 1: tauto).	0.0195391178131	167
Coq.Logic.Decidable.dec_False	40	0.0	search with cache (only 1: unfold decidable; only 1: auto).	0.00489211082458	2
Coq.Logic.Decidable.dec_or	40	0.0.22	search with cache (only 1: intro H; only 1: unfold decidable; only 1: tauto).	1.72059893608	7461
Coq.Logic.Decidable.dec_and	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0153520107269	2
Coq.Logic.Decidable.dec_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00824904441833	2
Coq.Logic.Decidable.dec_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.011116027832	2
Coq.Logic.Decidable.dec_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0167090892792	2
Coq.Logic.Decidable.not_not	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00709295272827	2
Coq.Logic.Decidable.not_or	40	0	search with cache (only 1: tauto).	0.0066180229187	1
Coq.Logic.Decidable.not_and	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0131130218506	3
Coq.Logic.Decidable.not_imp	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0129578113556	2
Coq.Logic.Decidable.imp_simp	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.0116889476776	3
Coq.Logic.Decidable.not_iff	40	0.1	search with cache (only 1: unfold decidable; only 1: tauto).	0.083692073822	3
Coq.Logic.Decidable.not_true_iff	40	0.2.2	search with cache (only 1: split; only 1: tauto; only 1: auto).	0.0075352191925	7
Coq.Logic.Decidable.not_false_iff	40	0	search with cache (only 1: tauto).	0.005126953125	1
Coq.Logic.Decidable.not_not_iff	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.00901699066162	3
Coq.Logic.Decidable.contrapositive	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0564630031586	3
Coq.Logic.Decidable.or_not_l_iff_1	40	1.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0129888057709	3
Coq.Logic.Decidable.or_not_l_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0122139453888	2
Coq.Logic.Decidable.or_not_r_iff_1	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0121648311615	2
Coq.Logic.Decidable.or_not_r_iff_2	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.012374162674	2
Coq.Logic.Decidable.imp_not_l	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0132119655609	2
Coq.Logic.Decidable.not_or_iff	40	5	search with cache (only 1: tauto).	0.0313370227814	56
Coq.Logic.Decidable.not_and_iff	40	0	search with cache (only 1: tauto).	0.00732207298279	1
Coq.Logic.Decidable.not_imp_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0159749984741	2
Coq.Logic.Decidable.not_imp_rev_iff	40	0.0	search with cache (only 1: unfold decidable; only 1: tauto).	0.0159950256348	2
Coq.Logic.Decidable.dec_functional_relation	40
Coq.Logic.WeakFan.Y_unique	40
Coq.Logic.WeakFan.Y_approx	40
Coq.Logic.WeakFan.WeakFanTheorem	40
Coq.MSets.MSetRBT.MakeRaw.singleton_spec	40
Coq.MSets.MSetRBT.MakeRaw.singleton_ok	40	0.0.0.0.2.0	search with cache (only 1: unfold singleton; only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	0.016352891922	8
Coq.MSets.MSetRBT.MakeRaw.makeBlack_spec	40
Coq.MSets.MSetRBT.MakeRaw.makeRed_spec	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition_in; only 1: simpl; only 1: intuition_in).	0.0383970737457	5
Coq.MSets.MSetRBT.MakeRaw.makeBlack_ok	40	0.0.4.3.8	search with cache (only 1: destruct s; only 1: intuition_in; only 1: intuition_in; only 1: simpl; only 1: auto).	2.4962849617	355
Coq.MSets.MSetRBT.MakeRaw.makeRed_ok	40	0.0.0.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: ok; only 1: simpl; only 1: ok).	0.0196628570557	5
Coq.MSets.MSetRBT.MakeRaw.rmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch	40
Coq.MSets.MSetRBT.MakeRaw.rrmatch'	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: destruct t as [| [| ] l x r]; only 1: simpl; only 1: now constructor; only 1: simpl; only 1: destruct l as [| [| ] ll lx lr], r as [| [| ] rl rx rr]; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: now constructor; only 1: simpl; only 1: now constructor).	0.490750074387	701
Coq.MSets.MSetRBT.MakeRaw.lbal_match	40
Coq.MSets.MSetRBT.MakeRaw.rbal_match	40	0	search with cache (only 1: exact (rrmatch _ _ _)).	0.00663089752197	1
Coq.MSets.MSetRBT.MakeRaw.rbal'_match	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_match	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00682806968689	1
Coq.MSets.MSetRBT.MakeRaw.lbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbal'_ok	40
Coq.MSets.MSetRBT.MakeRaw.ins_spec	40
Coq.MSets.MSetRBT.MakeRaw.ins_ok	40
Coq.MSets.MSetRBT.MakeRaw.add_spec'	40
Coq.MSets.MSetRBT.MakeRaw.add_spec	40	0.0	search with cache (only 1: unfold add; only 1: now autorew).	0.0229551792145	2
Coq.MSets.MSetRBT.MakeRaw.add_ok	40	1.3.2	search with cache (only 1: destruct s; only 1: ok; only 1: ok).	0.139831066132	31
Coq.MSets.MSetRBT.MakeRaw.lbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.lbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_spec	40
Coq.MSets.MSetRBT.MakeRaw.rbalS_ok	40
Coq.MSets.MSetRBT.MakeRaw.append_rr_match	40	5	search with cache (only 1: exact (rmatch _ _ _)).	0.128939151764	52
Coq.MSets.MSetRBT.MakeRaw.append_bb_match	40	0	search with cache (only 1: exact (rmatch _ _ _)).	0.00780296325684	1
Coq.MSets.MSetRBT.MakeRaw.append_spec	40
Coq.MSets.MSetRBT.MakeRaw.append_ok	40
Coq.MSets.MSetRBT.MakeRaw.del_spec	40
Coq.MSets.MSetRBT.MakeRaw.del_ok	40
Coq.MSets.MSetRBT.MakeRaw.remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_ok	40	1.0	search with cache (only 1: unfold remove; only 1: auto_tc).	0.0136408805847	3
Coq.MSets.MSetRBT.MakeRaw.delmin_spec	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec1	40
Coq.MSets.MSetRBT.MakeRaw.remove_min_spec2	40	3.0.0.1.0.0	search with cache (only 1: unfold remove_min; only 1: destruct s as [| c l y r]; only 1: easy; only 1: generalize (delmin_spec l y r c); only 1: destruct delmin as (x0, s0); only 1: easy).	0.0377240180969	13
Coq.MSets.MSetRBT.MakeRaw.remove_min_ok	40
Coq.MSets.MSetRBT.MakeRaw.treeify_zero_spec	40	37	search with cache (only 1: firstorder).	0.114494085312	700
Coq.MSets.MSetRBT.MakeRaw.treeify_one_spec	40	0.0.3.2.7.0.2.1	search with cache (only 1: intros s Hs; only 1: induction s; only 1: simpl; only 1: split; only 1: auto with *; only 1: auto; only 1: simpl; only 1: auto).	1.70083498955	3247
Coq.MSets.MSetRBT.MakeRaw.treeify_cont_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.plength_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_elements	40
Coq.MSets.MSetRBT.MakeRaw.treeify_spec	40
Coq.MSets.MSetRBT.MakeRaw.treeify_ok	40
Coq.MSets.MSetRBT.MakeRaw.filter_aux_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_elements	40
Coq.MSets.MSetRBT.MakeRaw.filter_spec	40
Coq.MSets.MSetRBT.MakeRaw.filter_ok	40
Coq.MSets.MSetRBT.MakeRaw.partition_aux_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec	40
Coq.MSets.MSetRBT.MakeRaw.partition_spec1	40	2.2.0	search with cache (only 1: intros Hf; only 1: unfold partition, filter; only 1: now rewrite partition_aux_spec).	0.109137058258	7
Coq.MSets.MSetRBT.MakeRaw.partition_spec2	40	0	search with cache (only 1: now rewrite partition_spec).	0.0120949745178	1
Coq.MSets.MSetRBT.MakeRaw.partition_ok1	40
Coq.MSets.MSetRBT.MakeRaw.partition_ok2	40	0.0	search with cache (only 1: rewrite partition_spec; only 1: now apply filter_ok).	0.00980186462402	2
Coq.MSets.MSetRBT.MakeRaw.INV_init	40
Coq.MSets.MSetRBT.MakeRaw.INV_sym	40	0.0.0.0.0.2.2.2.17.23	search with cache (only 1: revert acc; only 1: inversion_clear 1; only 1: split; only 1: auto; only 1: auto; only 1: auto; only 1: intros; only 1: now inA; only 1: intros; only 1: now inA).	3.76015496254	4489
Coq.MSets.MSetRBT.MakeRaw.INV_drop	40
Coq.MSets.MSetRBT.MakeRaw.INV_eq	40
Coq.MSets.MSetRBT.MakeRaw.INV_lt	40
Coq.MSets.MSetRBT.MakeRaw.INV_rev	40
Coq.MSets.MSetRBT.MakeRaw.union_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_ok	40
Coq.MSets.MSetRBT.MakeRaw.union_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_union_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_add_spec	40
Coq.MSets.MSetRBT.MakeRaw.union_spec'	40
Coq.MSets.MSetRBT.MakeRaw.union_spec	40	0.1.0.1.1.0.0.2	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: apply linear_union_spec; only 1: rewrite fold_add_spec; only 1: tauto; only 1: rewrite fold_add_spec; only 1: tauto).	4.69112610817	1209
Coq.MSets.MSetRBT.MakeRaw.inter_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.inter_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.mem_proper	40
Coq.MSets.MSetRBT.MakeRaw.inter_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_inter_ok	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_ok	40	0.0.0.0.0.0.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.0303771495819	8
Coq.MSets.MSetRBT.MakeRaw.diff_ok	40
Coq.MSets.MSetRBT.MakeRaw.diff_list_spec	40
Coq.MSets.MSetRBT.MakeRaw.linear_diff_spec	40
Coq.MSets.MSetRBT.MakeRaw.fold_remove_spec	40
Coq.MSets.MSetRBT.MakeRaw.diff_spec	40
Coq.MSets.MSetRBT.BalanceProps.rr_nrr_rb	40
Coq.MSets.MSetRBT.BalanceProps.arb_nrr_rb	40	0.0.25.59	search with cache (only 1: intros acc inv; only 1: destruct acc; only 1: auto; only 1: auto).	29.0079751015	100754
Coq.MSets.MSetRBT.BalanceProps.arb_nr_rb	40	2.0.6.4.0.0	search with cache (only 1: destruct 1; only 1: auto; only 1: invrb; only 1: revert H; only 1: destruct 1 as [l x r Hl Hr]; only 1: invrb).	0.544001102448	768
Coq.MSets.MSetRBT.BalanceProps.rb_maxdepth	40
Coq.MSets.MSetRBT.BalanceProps.rb_mindepth	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_upperbound	40
Coq.MSets.MSetRBT.BalanceProps.maxdepth_lowerbound	40
Coq.MSets.MSetRBT.BalanceProps.singleton_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeBlack_rb	40
Coq.MSets.MSetRBT.BalanceProps.makeRed_rr	40	0.3.1.1.2	search with cache (only 1: destruct t; only 1: invrb; only 1: invrb; only 1: simpl; only 1: auto).	0.3311419487	214
Coq.MSets.MSetRBT.BalanceProps.lbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbal'_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.lbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_rb	40
Coq.MSets.MSetRBT.BalanceProps.rbalS_arb	40
Coq.MSets.MSetRBT.BalanceProps.ifred_notred	40
Coq.MSets.MSetRBT.BalanceProps.ifred_or	40	0.0.0.0.0.0.1.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intuition; only 1: descolor; only 1: simpl; only 1: intuition; only 1: simpl; only 1: intuition).	0.0207619667053	9
Coq.MSets.MSetRBT.BalanceProps.ins_rr_rb	40
Coq.MSets.MSetRBT.BalanceProps.ins_arb	40
Coq.MSets.MSetRBT.BalanceProps.add_rb	40
Coq.MSets.MSetRBT.BalanceProps.append_arb_rb	40
Coq.MSets.MSetRBT.BalanceProps.del_arb	40	1.0	search with cache (only 1: invrb; only 1: intuition).	0.133291006088	20
Coq.MSets.MSetRBT.BalanceProps.remove_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_zero_rb	40	7	search with cache (only 1: now split).	0.0127561092377	12
Coq.MSets.MSetRBT.BalanceProps.treeify_one_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_cont_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_aux_rb	40
Coq.MSets.MSetRBT.BalanceProps.treeify_rb	40
Coq.MSets.MSetRBT.BalanceProps.filter_rb	40	28.1	search with cache (only 1: unfold partition, filter; only 1: inA).	0.906903982162	2742
Coq.MSets.MSetRBT.BalanceProps.partition_rb1	40	0.3.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.0123500823975	8
Coq.MSets.MSetRBT.BalanceProps.partition_rb2	40	0.5.1.0	search with cache (only 1: rewrite partition_spec; only 1: unfold partition, filter; only 1: simpl; only 1: auto_tc).	0.022264957428	12
Coq.MSets.MSetRBT.BalanceProps.fold_add_rb	40	0.0.2.0.4.0.0	search with cache (only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: unfold flip in *; only 1: induction (rev (elements s1)); only 1: auto_tc; only 1: simpl; only 1: auto_tc).	0.981029987335	874
Coq.MSets.MSetRBT.BalanceProps.fold_remove_rb	40	0.0.0.1.0.0.0.0.0	search with cache (only 1: intros; only 1: rewrite fold_spec, <- fold_left_rev_right; only 1: unfold elt in *; only 1: induction (rev (elements s1)); only 1: simpl; only 1: auto_tc; only 1: simpl; only 1: unfold flip in *; only 1: auto_tc).	0.105218887329	10
Coq.MSets.MSetRBT.BalanceProps.union_rb	40	2.2.5.0.0.0.2	search with cache (only 1: intros; only 1: unfold union; only 1: destruct compare_height; only 1: unfold linear_union; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	2.1287419796	2632
Coq.MSets.MSetRBT.BalanceProps.inter_rb	40	0.0.2.1.0.0.0	search with cache (only 1: intros; only 1: unfold inter; only 1: destruct compare_height; only 1: unfold linear_inter; only 1: auto_tc; only 1: auto_tc; only 1: auto_tc).	0.0192430019379	10
Coq.MSets.MSetRBT.BalanceProps.diff_rb	40	0.0.2.2.1.0.1	search with cache (only 1: unfold diff; only 1: destruct compare_height; only 1: unfold linear_diff; only 1: auto_tc; only 1: auto_tc; only 1: intros; only 1: auto_tc).	0.585324048996	565
Coq.MSets.MSetRBT.Make.remove_min_spec1	40
Coq.MSets.MSetRBT.Make.remove_min_spec2	40
Coq.MSets.MSetPositive.PositiveSet.In_compat	40	0.0.0	search with cache (only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx, Hy; only 1: intuition).	0.0313639640808	3
Coq.MSets.MSetPositive.PositiveSet.eq_equiv	40
Coq.MSets.MSetPositive.PositiveSet.mem_spec	40	28	search with cache (only 1: intuition).	0.227305173874	1114
Coq.MSets.MSetPositive.PositiveSet.mem_Leaf	40	1	search with cache (only 1: solve_proper).	0.00631308555603	2
Coq.MSets.MSetPositive.PositiveSet.empty_spec	40	6.1	search with cache (only 1: intros a b; only 1: discriminate).	0.00739693641663	9
Coq.MSets.MSetPositive.PositiveSet.mem_node	40
Coq.MSets.MSetPositive.PositiveSet.is_empty_spec	40
Coq.MSets.MSetPositive.PositiveSet.subset_Leaf_s	40	29.4	search with cache (only 1: intuition; only 1: discriminate).	0.739691972733	3390
Coq.MSets.MSetPositive.PositiveSet.subset_spec	40
Coq.MSets.MSetPositive.PositiveSet.equal_subset	40
Coq.MSets.MSetPositive.PositiveSet.equal_spec	40
Coq.MSets.MSetPositive.PositiveSet.eq_dec	40
Coq.MSets.MSetPositive.PositiveSet.lex_Opp	40	0.0.0.12.34.1.2.15	search with cache (only 1: intros x l o r; only 1: intro EQ; only 1: intuition; only 1: subst; only 1: destruct o; only 1: trivial; only 1: trivial; only 1: trivial).	16.579996109	45648
Coq.MSets.MSetPositive.PositiveSet.compare_bool_inv	40	0.0.22.0.0.19.18.33	search with cache (only 1: intros x y; only 1: destruct x; only 1: destruct y; only 1: trivial; only 1: trivial; only 1: destruct y; only 1: trivial; only 1: trivial).	8.40390086174	44214
Coq.MSets.MSetPositive.PositiveSet.compare_inv	40
Coq.MSets.MSetPositive.PositiveSet.lex_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_bool_Eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_equal	40
Coq.MSets.MSetPositive.PositiveSet.compare_gt	40
Coq.MSets.MSetPositive.PositiveSet.compare_eq	40
Coq.MSets.MSetPositive.PositiveSet.compare_spec	40
Coq.MSets.MSetPositive.PositiveSet.ct_cxe	40
Coq.MSets.MSetPositive.PositiveSet.ct_xce	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00987815856934	4
Coq.MSets.MSetPositive.PositiveSet.ct_lxl	40	1.16.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.21706199646	722
Coq.MSets.MSetPositive.PositiveSet.ct_gxg	40	0.1.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00998783111572	5
Coq.MSets.MSetPositive.PositiveSet.ct_xll	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00969886779785	4
Coq.MSets.MSetPositive.PositiveSet.ct_xgg	40	0.0.0.0	search with cache (only 1: destruct x; only 1: constructor; only 1: constructor; only 1: constructor).	0.00943207740784	4
Coq.MSets.MSetPositive.PositiveSet.ct_lex	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare_bool	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_Leaf	40	1.0.0.0.0.0.4	search with cache (only 1: induction s as [| l IHl o r IHr]; only 1: simpl; only 1: trivial; only 1: unfold compare, equal; only 1: case is_empty; only 1: intuition discriminate; only 1: intuition discriminate).	0.212413072586	190
Coq.MSets.MSetPositive.PositiveSet.compare_empty_x	40
Coq.MSets.MSetPositive.PositiveSet.compare_x_empty	40
Coq.MSets.MSetPositive.PositiveSet.ct_compare	40
Coq.MSets.MSetPositive.PositiveSet.lt_strorder	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat_1	40
Coq.MSets.MSetPositive.PositiveSet.compare_compat	40
Coq.MSets.MSetPositive.PositiveSet.lt_compat	40	0.0.0.0.7	search with cache (only 1: unfold lt; only 1: intros x x' Hx y y' Hy; only 1: rewrite Hx; only 1: rewrite compare_inv, Hy, <- compare_inv; only 1: reflexivity).	1.19252705574	170
Coq.MSets.MSetPositive.PositiveSet.add_spec	40
Coq.MSets.MSetPositive.PositiveSet.remove_spec	40
Coq.MSets.MSetPositive.PositiveSet.singleton_spec	40
Coq.MSets.MSetPositive.PositiveSet.union_spec	40
Coq.MSets.MSetPositive.PositiveSet.inter_spec	40
Coq.MSets.MSetPositive.PositiveSet.diff_spec	40
Coq.MSets.MSetPositive.PositiveSet.fold_spec	40
Coq.MSets.MSetPositive.PositiveSet.cardinal_spec	40
Coq.MSets.MSetPositive.PositiveSet.xfilter_spec	40
Coq.MSets.MSetPositive.PositiveSet.filter_spec	40
Coq.MSets.MSetPositive.PositiveSet.xforall_spec	40
Coq.MSets.MSetPositive.PositiveSet.for_all_spec	40
Coq.MSets.MSetPositive.PositiveSet.xexists_spec	40
Coq.MSets.MSetPositive.PositiveSet.exists_spec	40
Coq.MSets.MSetPositive.PositiveSet.partition_filter	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec1	40
Coq.MSets.MSetPositive.PositiveSet.partition_spec2	40	0.0.0	search with cache (only 1: intros; only 1: rewrite partition_filter; only 1: reflexivity).	0.0124180316925	3
Coq.MSets.MSetPositive.PositiveSet.xelements_spec	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec1	40
Coq.MSets.MSetPositive.PositiveSet.lt_rev_append	40	2.1.7.1.7.6.0.4.0.4.0.4	search with cache (only 1: intros s x y; only 1: revert x y s; only 1: intros s x y; only 1: revert x y s; only 1: intros s x y; only 1: revert x y s; only 1: induction x; only 1: simpl; only 1: eauto; only 1: simpl; only 1: eauto; only 1: intuition).	17.5251851082	48957
Coq.MSets.MSetPositive.PositiveSet.elements_spec2	40
Coq.MSets.MSetPositive.PositiveSet.elements_spec2w	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec1	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec2	40
Coq.MSets.MSetPositive.PositiveSet.choose_empty	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3'	40
Coq.MSets.MSetPositive.PositiveSet.choose_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.min_elt_spec2	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec1	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec3	40
Coq.MSets.MSetPositive.PositiveSet.max_elt_spec2	40
Coq.MSets.MSetFacts.WFactsOn.In_1	40	0.3.30	search with cache (only 1: intros H; only 1: rewrite H; only 1: auto).	0.500173091888	2832
Coq.MSets.MSetFacts.WFactsOn.mem_1	40
Coq.MSets.MSetFacts.WFactsOn.mem_2	40
Coq.MSets.MSetFacts.WFactsOn.equal_1	40
Coq.MSets.MSetFacts.WFactsOn.equal_2	40
Coq.MSets.MSetFacts.WFactsOn.subset_1	40
Coq.MSets.MSetFacts.WFactsOn.subset_2	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_1	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_2	40
Coq.MSets.MSetFacts.WFactsOn.add_1	40
Coq.MSets.MSetFacts.WFactsOn.add_2	40	0.0.0	search with cache (only 1: intros; only 1: apply <- add_spec; only 1: auto with relations).	0.0120928287506	3
Coq.MSets.MSetFacts.WFactsOn.add_3	40
Coq.MSets.MSetFacts.WFactsOn.remove_1	40
Coq.MSets.MSetFacts.WFactsOn.remove_2	40	0.1.1	search with cache (only 1: intros; only 1: rewrite remove_spec; only 1: intuition).	0.0160980224609	5
Coq.MSets.MSetFacts.WFactsOn.remove_3	40	1.1	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0280089378357	18
Coq.MSets.MSetFacts.WFactsOn.singleton_1	40
Coq.MSets.MSetFacts.WFactsOn.singleton_2	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: auto with relations).	0.0138218402863	2
Coq.MSets.MSetFacts.WFactsOn.union_1	40
Coq.MSets.MSetFacts.WFactsOn.union_2	40	2.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0133328437805	4
Coq.MSets.MSetFacts.WFactsOn.union_3	40	0.0	search with cache (only 1: rewrite union_spec; only 1: auto).	0.0128579139709	2
Coq.MSets.MSetFacts.WFactsOn.inter_1	40
Coq.MSets.MSetFacts.WFactsOn.inter_2	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0124781131744	2
Coq.MSets.MSetFacts.WFactsOn.inter_3	40	0.0	search with cache (only 1: rewrite inter_spec; only 1: intuition).	0.0155460834503	2
Coq.MSets.MSetFacts.WFactsOn.diff_1	40
Coq.MSets.MSetFacts.WFactsOn.diff_2	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.088329076767	2
Coq.MSets.MSetFacts.WFactsOn.diff_3	40	0.0	search with cache (only 1: rewrite diff_spec; only 1: intuition).	0.0152938365936	2
Coq.MSets.MSetFacts.WFactsOn.filter_1	40
Coq.MSets.MSetFacts.WFactsOn.filter_2	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.0204930305481	4
Coq.MSets.MSetFacts.WFactsOn.filter_3	40	0.0.0.0	search with cache (only 1: intros P; only 1: rewrite filter_spec; only 1: intuition; only 1: intuition).	0.024111032486	4
Coq.MSets.MSetFacts.WFactsOn.for_all_1	40
Coq.MSets.MSetFacts.WFactsOn.for_all_2	40
Coq.MSets.MSetFacts.WFactsOn.exists_1	40
Coq.MSets.MSetFacts.WFactsOn.exists_2	40
Coq.MSets.MSetFacts.WFactsOn.elements_1	40
Coq.MSets.MSetFacts.WFactsOn.elements_2	40
Coq.MSets.MSetFacts.WFactsOn.In_eq_iff	40	2.0.0	search with cache (only 1: intros E; only 1: rewrite E; only 1: auto with relations).	0.013377904892	5
Coq.MSets.MSetFacts.WFactsOn.mem_iff	40	6	search with cache (only 1: intuition).	0.0169970989227	7
Coq.MSets.MSetFacts.WFactsOn.not_mem_iff	40	6.37	search with cache (only 1: Ndec.eqb2eq; only 1: intuition).	5.53188991547	6619
Coq.MSets.MSetFacts.WFactsOn.equal_iff	40	6	search with cache (only 1: intuition).	0.069638967514	12
Coq.MSets.MSetFacts.WFactsOn.subset_iff	40	7	search with cache (only 1: intuition).	0.0701830387115	12
Coq.MSets.MSetFacts.WFactsOn.empty_iff	40
Coq.MSets.MSetFacts.WFactsOn.is_empty_iff	40	6	search with cache (only 1: intuition).	0.0250329971313	12
Coq.MSets.MSetFacts.WFactsOn.singleton_iff	40	0.0	search with cache (only 1: rewrite singleton_spec; only 1: intuition).	0.0121228694916	2
Coq.MSets.MSetFacts.WFactsOn.add_iff	40	1.0	search with cache (only 1: rewrite add_spec; only 1: intuition).	0.0194399356842	3
Coq.MSets.MSetFacts.WFactsOn.add_neq_iff	40	0.0.2.0	search with cache (only 1: rewrite add_spec; only 1: intuition; only 1: elim H; only 1: auto with relations).	0.0289289951324	6
Coq.MSets.MSetFacts.WFactsOn.remove_iff	40	0.4	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0441091060638	14
Coq.MSets.MSetFacts.WFactsOn.remove_neq_iff	40	1.0	search with cache (only 1: rewrite remove_spec; only 1: intuition).	0.0189900398254	3
Coq.MSets.MSetFacts.WFactsOn.for_all_iff	40	3.0	search with cache (only 1: intros; only 1: intuition).	0.0271530151367	5
Coq.MSets.MSetFacts.WFactsOn.exists_iff	40	4.0	search with cache (only 1: intros; only 1: intuition).	0.0268981456757	6
Coq.MSets.MSetFacts.WFactsOn.elements_iff	40	4	search with cache (only 1: intuition).	0.0122570991516	5
Coq.MSets.MSetFacts.WFactsOn.mem_b	40
Coq.MSets.MSetFacts.WFactsOn.empty_b	40
Coq.MSets.MSetFacts.WFactsOn.add_b	40
Coq.MSets.MSetFacts.WFactsOn.add_neq_b	40	0.0.0.0.0.0.2.0	search with cache (only 1: generalize (mem_iff (add x s) y), (mem_iff s y), (add_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (add x s)); only 1: intuition; only 1: intuition).	0.516381978989	90
Coq.MSets.MSetFacts.WFactsOn.remove_b	40
Coq.MSets.MSetFacts.WFactsOn.remove_neq_b	40	0.0.0.0.0.0.0.1.0	search with cache (only 1: intros; only 1: generalize (mem_iff (remove x s) y), (mem_iff s y), (remove_iff s x y); only 1: destruct (mem y s); only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition; only 1: destruct (mem y (remove x s)); only 1: intuition; only 1: intuition).	1.21640205383	236
Coq.MSets.MSetFacts.WFactsOn.singleton_b	40
Coq.MSets.MSetFacts.WFactsOn.union_b	40
Coq.MSets.MSetFacts.WFactsOn.inter_b	40
Coq.MSets.MSetFacts.WFactsOn.diff_b	40
Coq.MSets.MSetFacts.WFactsOn.elements_b	40
Coq.MSets.MSetFacts.WFactsOn.filter_b	40
Coq.MSets.MSetFacts.WFactsOn.for_all_b	40
Coq.MSets.MSetFacts.WFactsOn.exists_b	40
Coq.MSets.MSetFacts.WFactsOn.In_m	40
Coq.MSets.MSetFacts.WFactsOn.Empty_m	40	8	search with cache (only 1: firstorder).	0.114275932312	34
Coq.MSets.MSetFacts.WFactsOn.is_empty_m	40
Coq.MSets.MSetFacts.WFactsOn.mem_m	40
Coq.MSets.MSetFacts.WFactsOn.singleton_m	40
Coq.MSets.MSetFacts.WFactsOn.add_m	40
Coq.MSets.MSetFacts.WFactsOn.remove_m	40
Coq.MSets.MSetFacts.WFactsOn.union_m	40	0.3.8.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite union_spec; only 1: rewrite Hs, Hx  at 1; only 1: intuition).	3.86639213562	648
Coq.MSets.MSetFacts.WFactsOn.inter_m	40	0.5.3.9.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite inter_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite inter_spec; only 1: intuition).	18.2384669781	5704
Coq.MSets.MSetFacts.WFactsOn.diff_m	40	0.2.2.10.1	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite diff_spec; only 1: rewrite Hs, Hx  at 1; only 1: rewrite diff_spec; only 1: intuition).	8.04045796394	2325
Coq.MSets.MSetFacts.WFactsOn.Subset_m	40	7.0	search with cache (only 1: unfold Equal; only 1: firstorder).	0.0378861427307	28
Coq.MSets.MSetFacts.WFactsOn.subset_m	40
Coq.MSets.MSetFacts.WFactsOn.equal_m	40
Coq.MSets.MSetFacts.WFactsOn.SubsetSetoid	40	1.1.19	search with cache (only 1: constructor; only 1: firstorder; only 1: firstorder).	0.127598047256	509
Coq.MSets.MSetFacts.WFactsOn.In_s_m	40	0.0.0.14	search with cache (only 1: repeat red; only 1: intros x y H s s' H0; only 1: rewrite (In_eq_iff s H); only 1: auto).	31.6422200203	4536
Coq.MSets.MSetFacts.WFactsOn.Empty_s_m	40	3.3	search with cache (only 1: intros x y H a; only 1: firstorder).	0.149533033371	95
Coq.MSets.MSetFacts.WFactsOn.add_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !add_iff, Hx, Hs; only 1: intuition).	0.0385229587555	3
Coq.MSets.MSetFacts.WFactsOn.remove_s_m	40	0.0.0	search with cache (only 1: intros x x' Hx s s' Hs a; only 1: rewrite !remove_iff, Hx, Hs; only 1: intuition).	0.0455958843231	3
Coq.MSets.MSetFacts.WFactsOn.union_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !union_spec, Hs1, Hs2; only 1: intuition).	0.0461640357971	3
Coq.MSets.MSetFacts.WFactsOn.inter_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !inter_spec, Hs1, Hs2; only 1: intuition).	0.0357902050018	3
Coq.MSets.MSetFacts.WFactsOn.diff_s_m	40	0.0.0	search with cache (only 1: intros s1 s1' Hs1 s2 s2' Hs2 a; only 1: rewrite !diff_spec, Hs1, Hs2; only 1: intuition).	0.0904221534729	3
Coq.MSets.MSetFacts.WFactsOn.filter_equal	40
Coq.MSets.MSetFacts.WFactsOn.filter_subset	40	0.0.0	search with cache (only 1: intros f Hf s s' Hs a; only 1: rewrite !filter_spec, Hs by auto; only 1: intuition).	0.0368418693542	3
Coq.MSets.MSetFacts.WFactsOn.filter_ext	40
Coq.MSets.MSetProperties.WPropertiesOn.In_dec	40	0.0.0.0.0	search with cache (only 1: intros; only 1: generalize (F.mem_iff s x); only 1: case (mem x s); only 1: intuition; only 1: intuition).	0.0561850070953	5
Coq.MSets.MSetProperties.WPropertiesOn.Add_Equal	40
Coq.MSets.MSetProperties.WPropertiesOn.equal_refl	40	6.0.0	search with cache (only 1: apply -> equal_spec; only 1: apply <- equal_spec; only 1: auto with relations).	0.0610840320587	37
Coq.MSets.MSetProperties.WPropertiesOn.equal_sym	40	0	search with cache (only 1: fsetdec).	0.0238418579102	1
Coq.MSets.MSetProperties.WPropertiesOn.equal_trans	40	0	search with cache (only 1: fsetdec).	0.0334777832031	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_refl	40	0	search with cache (only 1: fsetdec).	0.0122470855713	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_trans	40	0	search with cache (only 1: fsetdec).	0.0470271110535	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_antisym	40	0	search with cache (only 1: fsetdec).	0.0251519680023	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_equal	40	0	search with cache (only 1: fsetdec).	0.0201399326324	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_empty	40	0	search with cache (only 1: fsetdec).	0.0142538547516	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_remove_3	40	0	search with cache (only 1: fsetdec).	0.0277628898621	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_diff	40	0	search with cache (only 1: fsetdec).	0.0269849300385	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_3	40	0	search with cache (only 1: fsetdec).	0.0498459339142	1
Coq.MSets.MSetProperties.WPropertiesOn.subset_add_2	40	0	search with cache (only 1: fsetdec).	0.022392988205	1
Coq.MSets.MSetProperties.WPropertiesOn.in_subset	40	0	search with cache (only 1: fsetdec).	0.0208010673523	1
Coq.MSets.MSetProperties.WPropertiesOn.double_inclusion	40	0.0.0.16	search with cache (only 1: intuition; only 1: fsetdec; only 1: fsetdec; only 1: fsetdec).	35.3084321022	2203
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_1	40	0	search with cache (only 1: fsetdec).	0.0306570529938	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_is_empty_2	40	0	search with cache (only 1: fsetdec).	0.0232889652252	1
Coq.MSets.MSetProperties.WPropertiesOn.add_equal	40	1.3.0.0.0	search with cache (only 1: intros; only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: fsetdec).	0.123071193695	19
Coq.MSets.MSetProperties.WPropertiesOn.add_add	40	0	search with cache (only 1: fsetdec).	0.0904049873352	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_equal	40	0	search with cache (only 1: fsetdec).	0.0675239562988	1
Coq.MSets.MSetProperties.WPropertiesOn.Equal_remove	40	0	search with cache (only 1: fsetdec).	0.0648698806763	1
Coq.MSets.MSetProperties.WPropertiesOn.add_remove	40	0	search with cache (only 1: fsetdec).	0.071231842041	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_add	40	0	search with cache (only 1: fsetdec).	0.0851929187775	1
Coq.MSets.MSetProperties.WPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: fsetdec).	0.0464019775391	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_singleton_empty	40	0	search with cache (only 1: fsetdec).	0.166958093643	1
Coq.MSets.MSetProperties.WPropertiesOn.union_sym	40	0	search with cache (only 1: fsetdec).	0.0446009635925	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0425450801849	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_1	40	0	search with cache (only 1: fsetdec).	0.0566508769989	1
Coq.MSets.MSetProperties.WPropertiesOn.union_equal_2	40	0	search with cache (only 1: fsetdec).	0.0678400993347	1
Coq.MSets.MSetProperties.WPropertiesOn.union_assoc	40	0	search with cache (only 1: fsetdec).	0.0862209796906	1
Coq.MSets.MSetProperties.WPropertiesOn.add_union_singleton	40	0	search with cache (only 1: fsetdec).	0.0487010478973	1
Coq.MSets.MSetProperties.WPropertiesOn.union_add	40	0	search with cache (only 1: fsetdec).	0.0983638763428	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_1	40	0	search with cache (only 1: fsetdec).	0.174587011337	1
Coq.MSets.MSetProperties.WPropertiesOn.union_remove_add_2	40	0	search with cache (only 1: fsetdec).	0.162415981293	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_1	40	0	search with cache (only 1: fsetdec).	0.0172190666199	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_2	40	0	search with cache (only 1: fsetdec).	0.017233133316	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_3	40	0	search with cache (only 1: fsetdec).	0.0314168930054	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_4	40	0	search with cache (only 1: fsetdec).	0.0307009220123	1
Coq.MSets.MSetProperties.WPropertiesOn.union_subset_5	40	0	search with cache (only 1: fsetdec).	0.0316789150238	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_1	40	0	search with cache (only 1: fsetdec).	0.0379519462585	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_union_2	40	0	search with cache (only 1: fsetdec).	0.0361049175262	1
Coq.MSets.MSetProperties.WPropertiesOn.not_in_union	40	2.0	search with cache (only 1: rewrite union_spec; only 1: fsetdec).	0.0554909706116	4
Coq.MSets.MSetProperties.WPropertiesOn.inter_sym	40	0	search with cache (only 1: fsetdec).	0.0588970184326	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0377089977264	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_1	40	0	search with cache (only 1: fsetdec).	0.0561718940735	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_equal_2	40	0	search with cache (only 1: fsetdec).	0.0510168075562	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_assoc	40	0	search with cache (only 1: fsetdec).	0.0826570987701	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_1	40	0	search with cache (only 1: fsetdec).	0.102793931961	1
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_2	40	0	search with cache (only 1: fsetdec).	0.113284111023	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_1	40	0	search with cache (only 1: fsetdec).	0.0949580669403	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_add_2	40	0	search with cache (only 1: fsetdec).	0.0850698947906	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_1	40	0	search with cache (only 1: fsetdec).	0.0274200439453	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_inter_2	40	0	search with cache (only 1: fsetdec).	0.0251898765564	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_1	40	0	search with cache (only 1: fsetdec).	0.0172350406647	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_2	40	0	search with cache (only 1: fsetdec).	0.0195729732513	1
Coq.MSets.MSetProperties.WPropertiesOn.inter_subset_3	40	0	search with cache (only 1: fsetdec).	0.0297191143036	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_1	40	0	search with cache (only 1: fsetdec).	0.0316891670227	1
Coq.MSets.MSetProperties.WPropertiesOn.empty_diff_2	40	0	search with cache (only 1: fsetdec).	0.0382518768311	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset	40	0	search with cache (only 1: fsetdec).	0.0380969047546	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: fsetdec).	0.0591180324554	1
Coq.MSets.MSetProperties.WPropertiesOn.remove_diff_singleton	40	0	search with cache (only 1: fsetdec).	0.0580701828003	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_empty	40	0	search with cache (only 1: fsetdec).	0.0999610424042	1
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_all	40	0	search with cache (only 1: fsetdec).	0.072643995285	1
Coq.MSets.MSetProperties.WPropertiesOn.Add_add	40	0.0.0.9	search with cache (only 1: red; only 1: intros; only 1: rewrite add_spec; only 1: intuition).	0.448128938675	50
Coq.MSets.MSetProperties.WPropertiesOn.Add_remove	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.0917088985443	3
Coq.MSets.MSetProperties.WPropertiesOn.union_Add	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.133090019226	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.247317075729	2
Coq.MSets.MSetProperties.WPropertiesOn.union_Equal	40	0.1	search with cache (only 1: expAdd; only 1: fsetdec).	0.23091006279	3
Coq.MSets.MSetProperties.WPropertiesOn.inter_Add_2	40	0.0	search with cache (only 1: expAdd; only 1: fsetdec).	0.155355930328	2
Coq.MSets.MSetProperties.WPropertiesOn.elements_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.elements_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_1	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_2	40
Coq.MSets.MSetProperties.WPropertiesOn.of_list_3	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_spec_right	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_nodep	40	2.0.0.4.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intros; only 1: intuition; only 1: intros; only 1: eauto).	0.91717004776	519
Coq.MSets.MSetProperties.WPropertiesOn.fold_rec_weak	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_rel	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction	40
Coq.MSets.MSetProperties.WPropertiesOn.set_induction_bis	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_identity	40	4.0.2.1.2	search with cache (only 1: intros; only 1: apply fold_rec_bis; only 1: fsetdec; only 1: intuition; only 1: fsetdec).	4.73305392265	1015
Coq.MSets.MSetProperties.WPropertiesOn.fold_0	40	12.1.1.3.7.4	search with cache (only 1: intros; only 1: rewrite fold_spec_right; only 1: set (l := rev (elements s)); only 1: assert (Hsame : forall x, In x s <-> InA x l) by (unfold l; intros; rewrite elements_iff, InA_rev; intuition); only 1: assert (Hdup : NoDup l) by (unfold l; eauto using elements_spec2w, NoDupA_rev with *); only 1: eauto).	12.0700571537	13269
Coq.MSets.MSetProperties.WPropertiesOn.fold_1	40	10.0.0.8.1.0	search with cache (only 1: intros A P f i s Pempty Pstep; only 1: apply fold_rec; only 1: intuition; only 1: intros; only 1: rewrite Add_Equal in H1; only 1: fsetdec).	9.31560993195	11481
Coq.MSets.MSetProperties.WPropertiesOn.fold_2	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_1b	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1	search with cache (only 1: unfold Empty; only 1: intros; only 1: destruct (fold_0 s i f) as (l, (H1, (H2, H3))); only 1: rewrite H3; only 1: clear H3; only 1: generalize H, H2; only 1: clear H H2; only 1: case l; only 1: simpl; only 1: intros; only 1: reflexivity; only 1: simpl; only 1: intros; only 1: elim (H e); only 1: elim (H2 e); only 1: intuition).	5.37413907051	3346
Coq.MSets.MSetProperties.WPropertiesOn.fold_commutes	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_init	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_equal	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_empty	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_add	40	3.0.0.0.0.1.0	search with cache (only 1: intros; only 1: apply fold_2 with (eqA := eqA); only 1: auto; only 1: auto; only 1: auto; only 1: auto; only 1: intuition).	0.399667978287	170
Coq.MSets.MSetProperties.WPropertiesOn.add_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_1	40
Coq.MSets.MSetProperties.WPropertiesOn.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set).	0.0176601409912	3
Coq.MSets.MSetProperties.WPropertiesOn.fold_union_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_diff_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_union	40
Coq.MSets.MSetProperties.WPropertiesOn.fold_plus	40	0.0.0.0.0.1.0.6.0	search with cache (only 1: intros; only 1: rewrite 2!fold_spec_right; only 1: set (l := rev (elements s)); only 1: clearbody l; only 1: induction l; only 1: simpl; only 1: auto; only 1: simpl; only 1: auto with relations).	1.05114889145	1166
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_fold	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_0	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_1	40	0.0.0.7.3.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec; only 1: rewrite elements_Empty in H; only 1: rewrite H; only 1: simpl; only 1: auto).	0.492208957672	388
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_Empty	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_1	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_inv_2b	40	0.0.4.4.0.0.0.0	search with cache (only 1: intros; only 1: rewrite cardinal_spec in H; only 1: generalize (elements_2 (s:=s)); only 1: destruct (elements s); only 1: generalize (elements_2 (s:=s)); only 1: intuition; only 1: exists e; only 1: auto with relations).	1.81811022758	1596
Coq.MSets.MSetProperties.WPropertiesOn.Equal_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.cardinal_m	40
Coq.MSets.MSetProperties.WPropertiesOn.empty_cardinal	40	0.0	search with cache (only 1: apply cardinal_1; only 1: auto with set).	0.00875806808472	2
Coq.MSets.MSetProperties.WPropertiesOn.singleton_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.diff_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.subset_cardinal_lt	40
Coq.MSets.MSetProperties.WPropertiesOn.union_inter_cardinal	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_inter	40
Coq.MSets.MSetProperties.WPropertiesOn.union_cardinal_le	40	2.1.0	search with cache (only 1: intros; only 1: rewrite <- union_inter_cardinal; only 1: auto with arith).	0.0263907909393	33
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_1	40	0.0.0.2.0.0.0.0	search with cache (only 1: intros; only 1: replace 0 with (cardinal empty); only 1: replace 0 with (cardinal empty); only 1: replace 0 with (cardinal empty); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	0.0701160430908	30
Coq.MSets.MSetProperties.WPropertiesOn.add_cardinal_2	40	0.0.0.1	search with cache (only 1: intros; only 1: apply cardinal_2 with x; only 1: auto with set; only 1: auto with set).	0.0146842002869	5
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_1	40	0.0.3.12.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply cardinal_2 with x; only 1: auto with set relations; only 1: auto with set relations).	2.37918305397	2321
Coq.MSets.MSetProperties.WPropertiesOn.remove_cardinal_2	40	0.0.0.0.2.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: apply fold_equal; only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto with set).	0.148268938065	47
Coq.MSets.MSetProperties.OrdProperties.sort_equivlistA_eqlistA	40
Coq.MSets.MSetProperties.OrdProperties.gtb_1	40
Coq.MSets.MSetProperties.OrdProperties.leb_1	40
Coq.MSets.MSetProperties.OrdProperties.gtb_compat	40
Coq.MSets.MSetProperties.OrdProperties.leb_compat	40	0.1.9.0.1.1	search with cache (only 1: red; only 1: red; only 1: intros; only 1: unfold leb, gtb; only 1: rewrite H; only 1: auto).	3.70238900185	724
Coq.MSets.MSetProperties.OrdProperties.elements_split	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Above	40
Coq.MSets.MSetProperties.OrdProperties.elements_Add_Below	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_max	40
Coq.MSets.MSetProperties.OrdProperties.set_induction_min	40
Coq.MSets.MSetProperties.OrdProperties.fold_3	40
Coq.MSets.MSetProperties.OrdProperties.fold_4	40
Coq.MSets.MSetProperties.OrdProperties.fold_equal	40
Coq.MSets.MSetProperties.OrdProperties.add_fold	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.020574092865	3
Coq.MSets.MSetProperties.OrdProperties.remove_fold_2	40	0.0.0	search with cache (only 1: intros; only 1: apply P.fold_equal; only 1: auto with set).	0.0207989215851	3
Coq.MSets.MSetProperties.OrdProperties.choose_equal	40
Coq.MSets.MSetAVL.MakeRaw.singleton_spec	40
Coq.MSets.MSetAVL.MakeRaw.singleton_ok	40	0.0.0.0.6	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	0.0329930782318	28
Coq.MSets.MSetAVL.MakeRaw.create_spec	40
Coq.MSets.MSetAVL.MakeRaw.create_ok	40	0.0.0.0.5	search with cache (only 1: constructor; only 1: ok; only 1: ok; only 1: ok; only 1: ok).	0.284912109375	10
Coq.MSets.MSetAVL.MakeRaw.bal_spec	40
Coq.MSets.MSetAVL.MakeRaw.bal_ok	40
Coq.MSets.MSetAVL.MakeRaw.add_spec'	40
Coq.MSets.MSetAVL.MakeRaw.add_spec	40	0.0.0.0.0.0.1.0.0.0	search with cache (only 1: induct ltac:(s) ltac:(x); only 1: intuition_in; only 1: intuition_in; only 1: eauto; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in; only 1: rewrite ?bal_spec, ?IHl, ?IHr; only 1: intuition_in; only 1: intuition_in).	1.86171603203	215
Coq.MSets.MSetAVL.MakeRaw.add_ok	40
Coq.MSets.MSetAVL.MakeRaw.join_spec	40
Coq.MSets.MSetAVL.MakeRaw.join_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_min_gt_tree	40
Coq.MSets.MSetAVL.MakeRaw.merge_spec	40
Coq.MSets.MSetAVL.MakeRaw.merge_ok	40
Coq.MSets.MSetAVL.MakeRaw.remove_spec	40
Coq.MSets.MSetAVL.MakeRaw.remove_ok	40
Coq.MSets.MSetAVL.MakeRaw.concat_spec	40
Coq.MSets.MSetAVL.MakeRaw.concat_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_spec1	40
Coq.MSets.MSetAVL.MakeRaw.split_spec2	40
Coq.MSets.MSetAVL.MakeRaw.split_spec3	40
Coq.MSets.MSetAVL.MakeRaw.split_ok	40
Coq.MSets.MSetAVL.MakeRaw.split_ok1	40
Coq.MSets.MSetAVL.MakeRaw.split_ok2	40	0.0.1	search with cache (only 1: destruct (@split_ok s x); only 1: auto; only 1: auto).	0.0109169483185	4
Coq.MSets.MSetAVL.MakeRaw.inter_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.inter_spec	40
Coq.MSets.MSetAVL.MakeRaw.inter_ok	40	0.0.0.0	search with cache (only 1: destruct (@inter_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.0705368518829	4
Coq.MSets.MSetAVL.MakeRaw.diff_spec_ok	40
Coq.MSets.MSetAVL.MakeRaw.diff_spec	40
Coq.MSets.MSetAVL.MakeRaw.diff_ok	40	0.0.0.2	search with cache (only 1: destruct (@diff_spec_ok s1 s2); only 1: auto; only 1: auto; only 1: auto).	0.142775058746	71
Coq.MSets.MSetAVL.MakeRaw.union_spec	40
Coq.MSets.MSetAVL.MakeRaw.union_ok	40
Coq.MSets.MSetAVL.MakeRaw.filter_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_weak_spec	40
Coq.MSets.MSetAVL.MakeRaw.filter_ok	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec1'	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2'	40	0.0.0.0.0.0	search with cache (only 1: induction s as [| h l Hl x r Hr]; only 1: simpl; only 1: trivial; only 1: simpl; only 1: rewrite <- Hl, <- Hr; only 1: now destruct (partition f l), (partition f r), (f x)).	0.031455039978	6
Coq.MSets.MSetAVL.MakeRaw.partition_spec1	40
Coq.MSets.MSetAVL.MakeRaw.partition_spec2	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok1	40
Coq.MSets.MSetAVL.MakeRaw.partition_ok2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_eq	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.empty_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_equal_empty	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_1	40	3.3	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: intuition).	1.24739694595	388
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_2	40	0	search with cache (only 1: auto with set).	0.0121269226074	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_1	40	3.6	search with cache (only 1: generalize (FM.mem_iff (diff s s') x), (FM.mem_iff s x), (FM.mem_iff s' x), (diff_spec s s' x); only 1: intuition).	2.26318788528	432
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_1	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set relations).	0.0124711990356	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_equal_add	40	0	search with cache (only 1: auto with set).	0.00740098953247	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_3	40	0.3	search with cache (only 1: rewrite <- not_mem_iff; only 1: tauto).	0.311702013016	132
Coq.MSets.MSetEqProperties.WEqPropertiesOn.mem_4	40	0.1	search with cache (only 1: rewrite <- not_mem_iff; only 1: tauto).	0.0282437801361	12
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_refl	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0167989730835	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_sym	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_trans	40	5.2.0.0.0.1.0.2.0	search with cache (only 1: do 2 rewrite <- equal_iff; only 1: intros; only 1: apply equal_1; only 1: unfold Equal; only 1: intros; only 1: do 2 rewrite mem_iff; only 1: rewrite H; only 1: do 2 rewrite <- mem_iff; only 1: auto).	8.07840490341	4099
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_equal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0156779289246	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.equal_cardinal	40	0.0.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto).	0.0136840343475	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_refl	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.015722990036	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_antisym	40	4.0	search with cache (only 1: intros; only 1: auto with set).	0.0259928703308	13
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_trans	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_equal	40	3.1.0	search with cache (only 1: intros; only 1: rewrite (equal_2 H); only 1: auto with set).	0.0175230503082	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.choose_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_mem_3	40	1.1	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: Dec.fsetdec).	0.0323519706726	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_equal	40	0	search with cache (only 1: auto with set).	0.00841903686523	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_mem_3	40	4.2	search with cache (only 1: do 2 rewrite <- mem_iff; only 1: eauto with set relations).	0.0386481285095	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_equal	40	0.1.0.2	search with cache (only 1: rewrite <- not_mem_iff; only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.0963129997253	20
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_remove	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_add	40	3.6	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.318603992462	63
Coq.MSets.MSetEqProperties.WEqPropertiesOn.is_empty_cardinal	40	0.0.0.0.0.0.7.0	search with cache (only 1: apply eq_true_iff_eq; only 1: rewrite <- is_empty_iff; only 1: rewrite elements_Empty, cardinal_spec; only 1: destruct (elements s); only 1: intuition; only 1: intuition; only 1: discriminate; only 1: discriminate).	0.967215061188	709
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_1	40	0	search with cache (only 1: auto with set relations).	0.0102999210358	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_2	40	3.2.3	search with cache (only 1: intros; only 1: rewrite <- not_mem_iff; only 1: eauto with set).	0.29433298111	39
Coq.MSets.MSetEqProperties.WEqPropertiesOn.singleton_mem_3	40	3.0.0.2.3.0.0.1	search with cache (only 1: rewrite singleton_b; only 1: unfold eqb; only 1: destruct (FM.eq_dec x y); only 1: auto; only 1: destruct (FM.eq_dec x y); only 1: intuition; only 1: intuition; only 1: discriminate).	0.905034065247	1301
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_sym	40	0	search with cache (only 1: auto with set).	0.00826501846313	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_equal	40	0	search with cache (only 1: auto with set).	0.0146210193634	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_1	40	0	search with cache (only 1: auto with set).	0.00871109962463	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_equal_2	40	0	search with cache (only 1: auto with set).	0.00856304168701	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_assoc	40	0	search with cache (only 1: auto with set).	0.0077018737793	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_union_singleton	40	0.1	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.103258132935	3
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_add	40	0	search with cache (only 1: auto with set).	0.00764894485474	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_1	40	0.0	search with cache (only 1: apply subset_1; only 1: Dec.fsetdec).	0.0219349861145	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_2	40	0	search with cache (only 1: auto with set).	0.00730299949646	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_subset_3	40	0.0	search with cache (only 1: do 3 rewrite <- subset_iff; only 1: Dec.fsetdec).	0.10227394104	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_sym	40	0	search with cache (only 1: auto with set).	0.00821399688721	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_equal	40	0	search with cache (only 1: auto with set).	0.00979614257812	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_1	40	0	search with cache (only 1: auto with set).	0.0086510181427	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_equal_2	40	0	search with cache (only 1: auto with set).	0.00924587249756	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_assoc	40	0	search with cache (only 1: auto with set).	0.00827217102051	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_1	40	1	search with cache (only 1: auto with set).	0.0782880783081	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_inter_2	40	0	search with cache (only 1: auto with set).	0.00872302055359	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_1	40	4.0.0	search with cache (only 1: intros; only 1: apply equal_1; only 1: auto with set).	0.137217998505	7
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_add_2	40	1.5	search with cache (only 1: rewrite <- not_mem_iff; only 1: auto with set).	0.186317920685	23
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_1	40	0	search with cache (only 1: auto with set).	0.00770211219788	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_2	40	0	search with cache (only 1: auto with set).	0.00734615325928	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.inter_subset_3	40	1.0.0	search with cache (only 1: intros; only 1: apply subset_1; only 1: auto with set).	0.0260140895844	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset	40	0	search with cache (only 1: auto with set).	0.00761294364929	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_subset_equal	40	0	search with cache (only 1: auto with set).	0.00963711738586	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_inter_singleton	40	0.0	search with cache (only 1: apply equal_1; only 1: Dec.fsetdec).	0.0577540397644	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_empty	40	3	search with cache (only 1: auto with set).	0.019052028656	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.diff_inter_all	40	0	search with cache (only 1: auto with set).	0.0076539516449	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.set_rec	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exclusive_set	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_empty	40	0.0	search with cache (only 1: apply fold_1b; only 1: auto with set).	0.0169579982758	2
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_equal	40	2.0.0.0.3.6	search with cache (only 1: intros; only 1: apply fold_equal; only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set).	32.2753689289	11377
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_add	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_fold	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_1	40	2.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: symmetry; only 1: apply fold_2 with (eqA := eqA); only 1: auto with set; only 1: auto with set; only 1: auto with set; only 1: auto with set relations; only 1: auto with set relations).	0.0541470050812	10
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_fold_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_union	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_1	40	0	search with cache (only 1: auto with set).	0.00768399238586	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_cardinal_2	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.fold_add with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0282709598541	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_1	40	0.0.0.0.0.0.0.0	search with cache (only 1: intros; only 1: do 2 rewrite cardinal_fold; only 1: change S with ((fun _ => S) x); only 1: apply MP.remove_fold_1 with (eqA := Logic.eq); only 1: auto with *; only 1: congruence; only 1: auto with *; only 1: auto).	0.0283010005951	8
Coq.MSets.MSetEqProperties.WEqPropertiesOn.remove_cardinal_2	40	0.5.22	search with cache (only 1: intros H a; only 1: rewrite <- not_mem_iff; only 1: auto with set).	6.78403615952	10254
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_cardinal	40	0.0.1.4.1.1.4.0.0.0.0	search with cache (only 1: intros; only 1: do 3 rewrite cardinal_fold; only 1: rewrite <- fold_plus; only 1: apply MP.fold_union; only 1: split; only 1: auto; only 1: auto; only 1: congruence; only 1: congruence; only 1: auto; only 1: auto).	1.4026799202	1649
Coq.MSets.MSetEqProperties.WEqPropertiesOn.subset_cardinal	40	7.0	search with cache (only 1: intros; only 1: auto with set).	0.0384349822998	30
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.8.0.0.0	search with cache (only 1: red; only 1: red; only 1: intros; only 1: rewrite H; only 1: intuition).	0.278928041458	148
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_mem	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_1	40	14.1.0.0.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: auto with set).	18.0746548176	10819
Coq.MSets.MSetEqProperties.WEqPropertiesOn.partition_filter_2	40	0	search with cache (only 1: auto with set).	0.0114760398865	1
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_add_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.add_filter_2	40	0.0.0.0.0.0.0.0.0.0.0.1.0	search with cache (only 1: red; only 1: unfold Add, MP.Add; only 1: intros; only 1: repeat rewrite filter_spec; only 1: rewrite H0; only 1: clear H0; only 1: intuition; only 1: assert (f x = f a) by (apply Comp; auto); only 1: rewrite H in H1; only 1: rewrite H2 in H1; only 1: discriminate; only 1: auto; only 1: auto).	9.74126195908	1800
Coq.MSets.MSetEqProperties.WEqPropertiesOn.union_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.filter_union	40	0.0.0.0.4.1.0.0.1	search with cache (only 1: red; only 1: intros; only 1: set_iff; only 1: repeat rewrite filter_spec; only 1: set_iff; only 1: intuition; only 1: auto; only 1: auto; only 1: auto).	16.275509119	1366
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_1	40	0.0.0.0.0.0.0.1.0.1.0	search with cache (only 1: intros; only 1: apply eq_true_iff_eq; only 1: split; only 1: split; only 1: intros; only 1: apply for_all_1; only 1: auto; only 1: red; only 1: intros; only 1: generalize (H x); only 1: auto with set).	1.12693214417	758
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_2	40	0.1.9.1.0	search with cache (only 1: intros; only 1: rewrite <- (for_all_iff s (f:=f)) in H; only 1: revert H; only 1: intuition; only 1: auto).	0.246003866196	236
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.for_all_exists	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.Comp'	40	0.0.0.0	search with cache (only 1: repeat red; only 1: intros; only 1: f_equal; only 1: auto).	0.020082950592	4
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_1	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_2	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_3	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.exists_mem_4	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_plus	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_filter	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.fold_compat	40
Coq.MSets.MSetEqProperties.WEqPropertiesOn.sum_compat	40
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_push	40	0	search with cache (only 1: auto).	0.00996494293213	1
Coq.MSets.MSetDecide.WDecideOn.MSetLogicalFacts.test_pull	40	0.0.0	search with cache (only 1: intros; only 1: push not in *; only 1: tauto).	0.11136007309	3
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.eq_refl_iff	40	0	search with cache (only 1: intuition).	0.00860810279846	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_In	40	0.0.0.2.14.9	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite <- mem_spec; only 1: destruct (mem x s); only 1: intuition; only 1: intuition).	1.68582606316	1520
Coq.MSets.MSetDecide.WDecideOn.MSetDecideAuxiliary.dec_eq	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_1	40
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_trans_2	40	3.0	search with cache (only 1: intros s s' E; only 1: fsetdec).	0.0790581703186	14
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_1	40	0	search with cache (only 1: fsetdec).	0.0958449840546	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_neq_trans_2	40	0	search with cache (only 1: fsetdec).	0.135018825531	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_In_singleton	40	0	search with cache (only 1: fsetdec).	0.011990070343	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_add_In	40	0	search with cache (only 1: fsetdec).	0.0311181545258	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_Subset_add_remove	40	1	search with cache (only 1: fsetdec).	0.100860118866	27
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_eq_disjunction	40	0	search with cache (only 1: fsetdec).	0.0722839832306	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_disj	40	0	search with cache (only 1: fsetdec).	0.0759789943695	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_not_In_conj	40	0	search with cache (only 1: fsetdec).	0.0712568759918	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_iff_conj	40	1	search with cache (only 1: fsetdec).	0.0595750808716	2
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_set_ops_1	40	0	search with cache (only 1: fsetdec).	0.122183084488	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.eq_chain_test	40	0	search with cache (only 1: fsetdec).	0.164613962173	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_too_complex	40	0.0.6.9	search with cache (only 1: intros y z H1 H2; only 1: intros E; only 1: rewrite singleton_spec; only 1: intuition).	1.12431001663	860
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_1	40	8	search with cache (only 1: fsetdec).	0.115992069244	36
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.function_test_2	40	0	search with cache (only 1: fsetdec).	0.0451560020447	1
Coq.MSets.MSetDecide.WDecideOn.MSetDecideTestCases.test_baydemir	40	0	search with cache (only 1: fsetdec).	0.0330410003662	1
Coq.MSets.MSetGenTree.Props.ltb_tree_iff	40
Coq.MSets.MSetGenTree.Props.gtb_tree_iff	40
Coq.MSets.MSetGenTree.Props.isok_iff	40
Coq.MSets.MSetGenTree.Props.isok_Ok	40
Coq.MSets.MSetGenTree.Props.In_1	40
Coq.MSets.MSetGenTree.Props.In_compat	40
Coq.MSets.MSetGenTree.Props.In_node_iff	40	0.0	search with cache (only 1: intros; only 1: intuition_in).	0.0364220142365	2
Coq.MSets.MSetGenTree.Props.In_leaf_iff	40	0	search with cache (only 1: intuition_in).	0.0154721736908	1
Coq.MSets.MSetGenTree.Props.lt_leaf	40	0.0	search with cache (only 1: unfold lt_tree; only 1: intuition_in).	0.0111358165741	2
Coq.MSets.MSetGenTree.Props.gt_leaf	40	0.0	search with cache (only 1: red; only 1: inversion 1).	0.0101938247681	2
Coq.MSets.MSetGenTree.Props.lt_tree_node	40	0.0.4.0	search with cache (only 1: intuition_in; only 1: unfold lt_tree; only 1: intuition_in; only 1: order).	0.0421028137207	8
Coq.MSets.MSetGenTree.Props.gt_tree_node	40	0.0.4.1	search with cache (only 1: intuition_in; only 1: unfold gt_tree; only 1: intuition_in; only 1: order).	0.0913469791412	9
Coq.MSets.MSetGenTree.Props.lt_tree_not_in	40	1.3.1	search with cache (only 1: intuition_in; only 1: eapply OrderTac.lt_irrefl; only 1: auto).	0.0256519317627	8
Coq.MSets.MSetGenTree.Props.lt_tree_trans	40	0.0.0.0.2	search with cache (only 1: intros x y H; only 1: intros; only 1: intro; only 1: intro; only 1: order).	0.0171940326691	7
Coq.MSets.MSetGenTree.Props.gt_tree_not_in	40	0.0.0	search with cache (only 1: intros; only 1: intro; only 1: order).	0.0113208293915	3
Coq.MSets.MSetGenTree.Props.gt_tree_trans	40	0	search with cache (only 1: eauto).	0.00860905647278	1
Coq.MSets.MSetGenTree.Props.lt_tree_compat	40	2.0.0.1.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: repeat red; only 1: intros; only 1: subst; only 1: order).	0.0296399593353	10
Coq.MSets.MSetGenTree.Props.gt_tree_compat	40	0.0.0.2.0.0.0	search with cache (only 1: apply proper_sym_impl_iff_2; only 1: auto with *; only 1: auto with *; only 1: intros x x' Hx s s' Hs H y Hy; only 1: subst; only 1: setoid_rewrite  <- Hx; only 1: auto).	0.0507328510284	24
Coq.MSets.MSetGenTree.Props.empty_spec	40	1.0	search with cache (only 1: repeat red; only 1: inversion 1).	0.0286648273468	14
Coq.MSets.MSetGenTree.Props.empty_ok	40	0.1	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.0107200145721	3
Coq.MSets.MSetGenTree.Props.is_empty_spec	40
Coq.MSets.MSetGenTree.Props.mem_spec	40
Coq.MSets.MSetGenTree.Props.min_elt_spec1	40
Coq.MSets.MSetGenTree.Props.min_elt_spec2	40
Coq.MSets.MSetGenTree.Props.min_elt_spec3	40
Coq.MSets.MSetGenTree.Props.max_elt_spec1	40
Coq.MSets.MSetGenTree.Props.max_elt_spec2	40
Coq.MSets.MSetGenTree.Props.max_elt_spec3	40	0.0.0.0.0.0.0.1	search with cache (only 1: functional induction (max_elt s); only 1: red; only 1: red; only 1: inversion 2; only 1: inversion 1; only 1: intro H0; only 1: destruct (IHo H0 _x3); only 1: auto).	0.0865988731384	60
Coq.MSets.MSetGenTree.Props.choose_spec1	40
Coq.MSets.MSetGenTree.Props.choose_spec2	40
Coq.MSets.MSetGenTree.Props.choose_spec3	40
Coq.MSets.MSetGenTree.Props.elements_spec1'	40
Coq.MSets.MSetGenTree.Props.elements_spec1	40
Coq.MSets.MSetGenTree.Props.elements_spec2'	40
Coq.MSets.MSetGenTree.Props.elements_spec2	40
Coq.MSets.MSetGenTree.Props.elements_spec2w	40
Coq.MSets.MSetGenTree.Props.elements_aux_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_cardinal	40
Coq.MSets.MSetGenTree.Props.elements_app	40
Coq.MSets.MSetGenTree.Props.elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_app	40
Coq.MSets.MSetGenTree.Props.rev_elements_node	40
Coq.MSets.MSetGenTree.Props.rev_elements_rev	40
Coq.MSets.MSetGenTree.Props.sorted_app_inv	40
Coq.MSets.MSetGenTree.Props.elements_sort_ok	40
Coq.MSets.MSetGenTree.Props.for_all_spec	40
Coq.MSets.MSetGenTree.Props.exists_spec	40
Coq.MSets.MSetGenTree.Props.fold_spec'	40
Coq.MSets.MSetGenTree.Props.fold_spec	40
Coq.MSets.MSetGenTree.Props.subsetl_spec	40
Coq.MSets.MSetGenTree.Props.subsetr_spec	40
Coq.MSets.MSetGenTree.Props.subset_spec	40
Coq.MSets.MSetGenTree.Props.eq_equiv	40
Coq.MSets.MSetGenTree.Props.eq_Leq	40
Coq.MSets.MSetGenTree.Props.lt_strorder	40
Coq.MSets.MSetGenTree.Props.lt_compat	40
Coq.MSets.MSetGenTree.Props.flatten_e_elements	40	1.10.5	search with cache (only 1: intuition_in; only 1: rewrite elements_node; only 1: now rewrite !app_assoc_reverse).	2.24259495735	1788
Coq.MSets.MSetGenTree.Props.cons_1	40
Coq.MSets.MSetGenTree.Props.compare_end_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_more_Cmp	40	0.0.0.0.1.17.0.1	search with cache (only 1: intros; only 1: simpl; only 1: elim_compare x1 x2; only 1: auto; only 1: constructor; only 1: auto; only 1: constructor; only 1: auto).	4.53631305695	4162
Coq.MSets.MSetGenTree.Props.compare_cont_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_Cmp	40
Coq.MSets.MSetGenTree.Props.compare_spec	40
Coq.MSets.MSetGenTree.Props.equal_spec	40
Coq.MSets.MSetGenTree.Props.mindepth_maxdepth	40
Coq.MSets.MSetGenTree.Props.maxdepth_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_cardinal	40
Coq.MSets.MSetGenTree.Props.maxdepth_log_cardinal	40
Coq.MSets.MSetGenTree.Props.mindepth_log_cardinal	40
Coq.MSets.MSetInterface.WRaw2SetsOn.In_compat	40
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_equiv	40	1.3.1.51	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.340209960938	1854
Coq.MSets.MSetInterface.WRaw2SetsOn.eq_dec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.mem_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.equal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.subset_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.is_empty_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.add_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.remove_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.singleton_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.union_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.inter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.diff_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.fold_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.cardinal_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.filter_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.for_all_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.exists_spec	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.partition_spec2	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.elements_spec2w	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec1	40
Coq.MSets.MSetInterface.WRaw2SetsOn.choose_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_strorder	40
Coq.MSets.MSetInterface.Raw2SetsOn.lt_compat	40
Coq.MSets.MSetInterface.Raw2SetsOn.compare_spec	40
Coq.MSets.MSetInterface.Raw2SetsOn.elements_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.min_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec1	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec2	40
Coq.MSets.MSetInterface.Raw2SetsOn.max_elt_spec3	40
Coq.MSets.MSetInterface.Raw2SetsOn.choose_spec3	40
Coq.MSets.MSetInterface.MakeSetOrdering.eq_equiv	40	0.2.0.49	search with cache (only 1: split; only 1: firstorder; only 1: firstorder; only 1: firstorder).	0.164405107498	1520
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_0	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_1	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_2	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_3	40
Coq.MSets.MSetInterface.MakeSetOrdering.Proper_instance_4	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_compat	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_r	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_empty_l	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_lt	40
Coq.MSets.MSetInterface.MakeSetOrdering.lt_add_eq	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_strorder	40
Coq.MSets.MSetInterface.MakeListOrdering.lt_compat'	40
Coq.MSets.MSetInterface.MakeListOrdering.eq_cons	40	0.0.13	search with cache (only 1: intros l1 l1' l2 l2' H H'; only 1: rewrite H, H'; only 1: reflexivity).	0.652855873108	636
Coq.MSets.MSetInterface.MakeListOrdering.cons_CompSpec	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.In_In	40	0.3.2.1	search with cache (only 1: intros s Hsame; only 1: symmetry; only 1: rewrite elements_iff; only 1: apply elements_iff).	0.0207312107086	12
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Subset_Included	40	0.0.0	search with cache (only 1: compute; only 1: intros; only 1: auto).	0.0103139877319	3
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Equal_Same_set	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.empty_Empty_Set	40	4.0.6.0.2	search with cache (only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition; only 1: unfold Subset, Included, In, mkEns; only 1: intro x; only 1: Dec.fsetdec).	0.255922079086	399
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Empty_Empty_set	40	2.0.0.1.0.1.1.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: rewrite elements_Empty in H; only 1: intros; only 1: rewrite elements_iff in H0; only 1: destruct H0; only 1: discriminate; only 1: discriminate; only 1: intuition).	2.09730410576	1915
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.singleton_Singleton	40	0.6.1	search with cache (only 1: intros; only 1: unfold Subset, Included, Same_set, In, mkEns; only 1: intuition).	0.186949968338	78
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.union_Union	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.inter_Intersection	40	0.0.0.0.0.0.1.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto).	3.9238049984	1110
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Add_Add	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.remove_Subtract	40	2.0.0.0.3.0.2.0.0.0.0.0	search with cache (only 1: unfold Same_set, Included, mkEns, In; only 1: split; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: constructor 1; only 1: auto; only 1: auto with sets; only 1: intro; only 1: set_iff; only 1: inversion 1; only 1: auto with sets).	34.3430809975	4389
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_Finite	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.mkEns_cardinal	40
Coq.MSets.MSetToFiniteSet.WS_to_Finite_set.Ens_to_MSet	40
Coq.MSets.MSetWeakList.MakeRaw.In_compat	40	0.0.6.11.1.1	search with cache (only 1: repeat red; only 1: intros; only 1: rewrite <- H0; only 1: constructor; only 1: now rewrite H; only 1: now rewrite H).	5.54839587212	5440
Coq.MSets.MSetWeakList.MakeRaw.mem_spec	40
Coq.MSets.MSetWeakList.MakeRaw.isok_iff	40
Coq.MSets.MSetWeakList.MakeRaw.isok_Ok	40	0.0.0.0.0.0.2.0.0.0.0.5	search with cache (only 1: induction l; only 1: intuition; only 1: simpl; only 1: rewrite andb_true_iff; only 1: rewrite negb_true_iff; only 1: intros H; only 1: destruct H; only 1: constructors; only 1: rewrite <- mem_spec; only 1: congruence; only 1: auto; only 1: auto).	1.79457497597	1091
Coq.MSets.MSetWeakList.MakeRaw.add_spec	40
Coq.MSets.MSetWeakList.MakeRaw.add_ok	40
Coq.MSets.MSetWeakList.MakeRaw.remove_spec	40
Coq.MSets.MSetWeakList.MakeRaw.remove_ok	40
Coq.MSets.MSetWeakList.MakeRaw.singleton_ok	40	2.0	search with cache (only 1: intros; only 1: intuition).	0.0159959793091	4
Coq.MSets.MSetWeakList.MakeRaw.singleton_spec	40	0.0.0.0.9	search with cache (only 1: unfold singleton; only 1: intros; only 1: intuition; only 1: inv; only 1: auto).	0.55468583107	341
Coq.MSets.MSetWeakList.MakeRaw.empty_ok	40	0.0	search with cache (only 1: apply <- isok_iff; only 1: auto).	0.014740228653	2
Coq.MSets.MSetWeakList.MakeRaw.empty_spec	40	0.1.7.0	search with cache (only 1: unfold empty; only 1: intro; only 1: intro; only 1: inv).	0.0774838924408	63
Coq.MSets.MSetWeakList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetWeakList.MakeRaw.elements_spec1	40	2.1	search with cache (only 1: intros; only 1: intuition).	0.188859939575	83
Coq.MSets.MSetWeakList.MakeRaw.elements_spec2w	40	0.1.1.0.0.0.0	search with cache (only 1: induction s; only 1: intuition; only 1: intros; only 1: inv; only 1: right; only 1: auto; only 1: auto).	0.0451059341431	9
Coq.MSets.MSetWeakList.MakeRaw.fold_spec	40	2.0.1.0.1.0	search with cache (only 1: unfold elements; only 1: destruct s; only 1: simpl; only 1: intros; only 1: auto; only 1: split).	0.357837915421	96
Coq.MSets.MSetWeakList.MakeRaw.union_ok	40
Coq.MSets.MSetWeakList.MakeRaw.union_spec	40
Coq.MSets.MSetWeakList.MakeRaw.inter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.inter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.diff_ok	40
Coq.MSets.MSetWeakList.MakeRaw.diff_spec	40
Coq.MSets.MSetWeakList.MakeRaw.subset_spec	40
Coq.MSets.MSetWeakList.MakeRaw.equal_spec	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.choose_spec2	40	0.0.0.0.1.0.0.0.3	search with cache (only 1: unfold Empty; only 1: destruct s; only 1: simpl; only 1: intros; only 1: intro; only 1: inv; only 1: simpl; only 1: intros; only 1: inversion H).	2.88523411751	1031
Coq.MSets.MSetWeakList.MakeRaw.cardinal_spec	40	1.0	search with cache (only 1: unfold elements; only 1: auto).	0.0157628059387	3
Coq.MSets.MSetWeakList.MakeRaw.filter_spec'	40
Coq.MSets.MSetWeakList.MakeRaw.filter_spec	40
Coq.MSets.MSetWeakList.MakeRaw.filter_ok	40
Coq.MSets.MSetWeakList.MakeRaw.for_all_spec	40
Coq.MSets.MSetWeakList.MakeRaw.exists_spec	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_spec2	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2'	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok1	40
Coq.MSets.MSetWeakList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.inf_iff	40
Coq.MSets.MSetList.MakeRaw.isok_iff	40
Coq.MSets.MSetList.MakeRaw.isok_Ok	40	0	search with cache (only 1: tauto).	0.011146068573	1
Coq.MSets.MSetList.MakeRaw.mem_spec	40
Coq.MSets.MSetList.MakeRaw.add_inf	40	0.1.0.3.3.3.0.0.0.2.2.6	search with cache (only 1: induction s; only 1: constructor; only 1: intuition; only 1: simpl; only 1: intros x Hs; only 1: elim_compare x a; only 1: intuition; only 1: intuition; only 1: intuition; only 1: let rec inv := invlist InA; invlist Sorted; invlist HdRel; invlist NoDupA in inv; only 1: constructor; only 1: order).	17.8832490444	11956
Coq.MSets.MSetList.MakeRaw.add_ok	40
Coq.MSets.MSetList.MakeRaw.add_spec	40
Coq.MSets.MSetList.MakeRaw.remove_inf	40
Coq.MSets.MSetList.MakeRaw.remove_ok	40	0.0.0.1.0.0.0.1.0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s x; only 1: simple induction s; only 1: intuition; only 1: simpl; only 1: intros; only 1: inv; only 1: elim_compare x a; only 1: auto; only 1: auto; only 1: auto).	2.95209097862	839
Coq.MSets.MSetList.MakeRaw.remove_spec	40
Coq.MSets.MSetList.MakeRaw.singleton_ok	40	0	search with cache (only 1: auto).	0.0133199691772	1
Coq.MSets.MSetList.MakeRaw.singleton_spec	40	0.0.0.20.0	search with cache (only 1: intros x Hs; only 1: unfold singleton; only 1: intuition; only 1: inv; only 1: auto).	1.44161701202	1735
Coq.MSets.MSetList.MakeRaw.union_inf	40
Coq.MSets.MSetList.MakeRaw.union_ok	40
Coq.MSets.MSetList.MakeRaw.union_spec	40
Coq.MSets.MSetList.MakeRaw.inter_inf	40
Coq.MSets.MSetList.MakeRaw.inter_ok	40
Coq.MSets.MSetList.MakeRaw.inter_spec	40
Coq.MSets.MSetList.MakeRaw.diff_inf	40	1.0.2.16.0	search with cache (only 1: induction2; only 1: eauto; only 1: apply Inf_lt with x'; only 1: auto; only 1: auto).	22.8238139153	10452
Coq.MSets.MSetList.MakeRaw.diff_ok	40	0.0.0	search with cache (only 1: repeat rewrite <- isok_iff; only 1: revert s s'; only 1: induction2).	0.114185094833	3
Coq.MSets.MSetList.MakeRaw.diff_spec	40
Coq.MSets.MSetList.MakeRaw.equal_spec	40
Coq.MSets.MSetList.MakeRaw.subset_spec	40
Coq.MSets.MSetList.MakeRaw.empty_ok	40	1	search with cache (only 1: intuition).	0.0141310691833	2
Coq.MSets.MSetList.MakeRaw.empty_spec	40	34	search with cache (only 1: easy).	1.31707787514	1404
Coq.MSets.MSetList.MakeRaw.is_empty_spec	40
Coq.MSets.MSetList.MakeRaw.elements_spec1	40	0	search with cache (only 1: intuition).	0.0131180286407	1
Coq.MSets.MSetList.MakeRaw.elements_spec2	40	0.0.0.0.0.0.0.0.1.0.0	search with cache (only 1: intro l; only 1: intro H; only 1: induction l as [| x xs]; only 1: inv; only 1: constructors; only 1: change (inf x xs && isok xs = true) in H; only 1: rewrite andb_true_iff, <- inf_iff in H; only 1: destruct H; only 1: constructor; only 1: tauto; only 1: tauto).	0.412606954575	190
Coq.MSets.MSetList.MakeRaw.elements_spec2w	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0222418308258	3
Coq.MSets.MSetList.MakeRaw.min_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.min_elt_spec3	40	0.0.0.3.0.0	search with cache (only 1: destruct s; only 1: simpl; only 1: intros _ x H; only 1: inv; only 1: simpl; only 1: inversion 1).	0.0354950428009	16
Coq.MSets.MSetList.MakeRaw.max_elt_spec1	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec2	40
Coq.MSets.MSetList.MakeRaw.max_elt_spec3	40
Coq.MSets.MSetList.MakeRaw.choose_spec3	40
Coq.MSets.MSetList.MakeRaw.fold_spec	40	0	search with cache (only 1: intuition).	0.0134201049805	1
Coq.MSets.MSetList.MakeRaw.cardinal_spec	40	0.0.0	search with cache (only 1: intro s; only 1: repeat rewrite <- isok_iff; only 1: auto).	0.0229980945587	3
Coq.MSets.MSetList.MakeRaw.filter_inf	40
Coq.MSets.MSetList.MakeRaw.filter_ok	40
Coq.MSets.MSetList.MakeRaw.filter_spec	40
Coq.MSets.MSetList.MakeRaw.for_all_spec	40
Coq.MSets.MSetList.MakeRaw.exists_spec	40
Coq.MSets.MSetList.MakeRaw.partition_inf1	40
Coq.MSets.MSetList.MakeRaw.partition_inf2	40
Coq.MSets.MSetList.MakeRaw.partition_ok1	40
Coq.MSets.MSetList.MakeRaw.partition_ok2	40
Coq.MSets.MSetList.MakeRaw.partition_spec1	40
Coq.MSets.MSetList.MakeRaw.partition_spec2	40
Coq.MSets.MSetList.MakeRaw.In_compat	40	3.0	search with cache (only 1: intros x x' Hxx' y y' Hyy'; only 1: now rewrite Hxx', Hyy').	0.0213491916656	5
Coq.MSets.MSetList.MakeRaw.lt_strorder	40
Coq.MSets.MSetList.MakeRaw.lt_compat	40
Coq.MSets.MSetList.MakeRaw.compare_spec_aux	40
Coq.MSets.MSetList.MakeRaw.compare_spec	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz_list	40
Coq.MSets.MSetList.MakeWithLeibniz.eq_leibniz	40
Coq.Floats.FloatAxioms.Prim2SF_inj	40
Coq.Floats.FloatAxioms.SF2Prim_inj	40
Coq.Floats.FloatLemmas.shift_value	40	3.5	search with cache (only 1: simpl; only 1: trivial).	0.00987815856934	10
Coq.Floats.FloatLemmas.frexp_spec	40
Coq.Floats.FloatLemmas.ldexp_spec	40
Coq.Relations.Operators_Properties.clos_rt_is_preorder	40
Coq.Relations.Operators_Properties.clos_rt_idempotent	40
Coq.Relations.Operators_Properties.clos_rt_clos_rst	40
Coq.Relations.Operators_Properties.clos_r_clos_rt	40	0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets).	0.0101399421692	4
Coq.Relations.Operators_Properties.clos_rt_t	40
Coq.Relations.Operators_Properties.clos_rst_is_equiv	40	0.0.0.1.12.5.1.7	search with cache (only 1: constructor; only 1: auto with sets; only 1: red; only 1: intros; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	15.0057520866	15370
Coq.Relations.Operators_Properties.clos_rst_idempotent	40	0.0.3.0.0.0.0.0	search with cache (only 1: red; only 1: induction 1; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply rst_trans with y; only 1: auto with sets; only 1: auto with sets).	0.177627086639	187
Coq.Relations.Operators_Properties.clos_t1n_trans	40
Coq.Relations.Operators_Properties.clos_trans_t1n	40
Coq.Relations.Operators_Properties.clos_trans_t1n_iff	40
Coq.Relations.Operators_Properties.clos_tn1_trans	40	0.2.1.0.0.0.0	search with cache (only 1: induction 1; only 1: left; only 1: auto; only 1: right with y; only 1: auto; only 1: left; only 1: auto).	0.02406001091	18
Coq.Relations.Operators_Properties.clos_trans_tn1	40
Coq.Relations.Operators_Properties.clos_trans_tn1_iff	40
Coq.Relations.Operators_Properties.clos_rt1n_step	40	1.0.5.0	search with cache (only 1: intros; only 1: right with y; only 1: auto; only 1: left).	0.0105319023132	10
Coq.Relations.Operators_Properties.clos_rtn1_step	40	2.0.8.16.7	search with cache (only 1: intro y0; only 1: intros; only 1: right with y0; only 1: auto; only 1: left).	0.968495130539	5116
Coq.Relations.Operators_Properties.clos_rt1n_rt	40	0.0.5.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto).	0.0136702060699	10
Coq.Relations.Operators_Properties.clos_rt_rt1n	40
Coq.Relations.Operators_Properties.clos_rt_rt1n_iff	40
Coq.Relations.Operators_Properties.clos_rtn1_rt	40	0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 3 with y; only 1: auto; only 1: constructor 1; only 1: assumption).	0.0241038799286	20
Coq.Relations.Operators_Properties.clos_rt_rtn1	40
Coq.Relations.Operators_Properties.clos_rt_rtn1_iff	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_left	40
Coq.Relations.Operators_Properties.rt1n_ind_right	40
Coq.Relations.Operators_Properties.clos_refl_trans_ind_right	40	0.0.1.0.0.1.0.1.2.0.0.0.0.2.1	search with cache (only 1: induction 3; only 1: apply H0 with y; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: apply IHclos_refl_trans1; only 1: auto with sets; only 1: intros; only 1: apply H0 with y0; only 1: auto with sets; only 1: auto with sets; only 1: apply rt_trans with y; only 1: auto with sets; only 1: auto with sets).	9.02265310287	14258
Coq.Relations.Operators_Properties.clos_rst1n_rst	40
Coq.Relations.Operators_Properties.clos_rst1n_trans	40	0.4.5.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: right with y; only 1: auto; only 1: auto).	0.439698934555	650
Coq.Relations.Operators_Properties.clos_rst1n_sym	40
Coq.Relations.Operators_Properties.clos_rst_rst1n	40
Coq.Relations.Operators_Properties.clos_rst_rst1n_iff	40
Coq.Relations.Operators_Properties.clos_rstn1_rst	40	0.0.1.0.0.2.1.0.0.0	search with cache (only 1: induction 1; only 1: auto with sets; only 1: constructor 4 with y; only 1: auto; only 1: case H; only 1: constructor 1; only 1: auto; only 1: constructor 3; only 1: constructor 1; only 1: auto).	2.94331598282	2584
Coq.Relations.Operators_Properties.clos_rstn1_trans	40
Coq.Relations.Operators_Properties.clos_rstn1_sym	40
Coq.Relations.Operators_Properties.clos_rst_rstn1	40
Coq.Relations.Operators_Properties.clos_rst_rstn1_iff	40
Coq.Relations.Operators_Properties.clos_trans_transp_permute	40
Coq.Relations.Relations.inverse_image_of_equivalence	40
Coq.Relations.Relations.inverse_image_of_eq	40	0.2.1.5.1.0.0	search with cache (only 1: intros; only 1: split; only 1: split; only 1: destruct 1; only 1: trivial; only 1: red; only 1: auto).	0.377377033234	736
Coq.Sets.Uniset.leb_refl	40	17	search with cache (only 1: destr_bool).	0.0349349975586	216
Coq.Sets.Uniset.incl_left	40	2.64.3.21.3	search with cache (only 1: intros; only 1: red; only 1: intro z; only 1: destruct (H z); only 1: auto).	10.172041893	72533
Coq.Sets.Uniset.incl_right	40	0.0.0.0	search with cache (only 1: unfold incl; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.0095911026001	4
Coq.Sets.Uniset.seq_refl	40	4	search with cache (only 1: auto).	0.0048041343689	5
Coq.Sets.Uniset.seq_trans	40	1.0.3.35	search with cache (only 1: intros H x0; only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	8.30952191353	31569
Coq.Sets.Uniset.seq_sym	40	0.0.1	search with cache (only 1: intros s1 s2 E a; only 1: elim (E a); only 1: auto).	0.00954484939575	4
Coq.Sets.Uniset.union_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold seq; only 1: auto).	0.00948214530945	3
Coq.Sets.Uniset.union_empty_right	40	18.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: simpl; only 1: intuition).	2.13692998886	5499
Coq.Sets.Uniset.union_comm	40
Coq.Sets.Uniset.union_ass	40	1.0.0.1.1.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: auto with bool).	0.0719518661499	47
Coq.Sets.Uniset.seq_left	40	0.1.1.1.0.0.1.0.0	search with cache (only 1: unfold seq; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: simpl; only 1: intros; only 1: rewrite H; only 1: auto).	1.2661049366	1124
Coq.Sets.Uniset.seq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold seq; only 1: unfold union; only 1: unfold charac; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto).	0.0232410430908	9
Coq.Sets.Uniset.union_rotate	40
Coq.Sets.Uniset.seq_congr	40
Coq.Sets.Uniset.union_perm_left	40
Coq.Sets.Uniset.uniset_twist1	40
Coq.Sets.Uniset.uniset_twist2	40
Coq.Sets.Uniset.treesort_twist1	40
Coq.Sets.Uniset.treesort_twist2	40	0.1.1.1.2.0.0.0.1.0.4	search with cache (only 1: unfold seq; only 1: intros; only 1: apply seq_trans with (union x (union (union y z) t)); only 1: apply seq_right; only 1: apply seq_left; only 1: trivial; only 1: apply seq_trans with (union (union x (union y z)) t); only 1: apply seq_sym; only 1: apply union_ass; only 1: apply seq_left; only 1: apply union_perm_left).	21.7394871712	22151
Coq.Sets.Multiset.meq_refl	40	2.1.1	search with cache (only 1: intros m Le; only 1: revert m; only 1: trivial).	0.0103721618652	7
Coq.Sets.Multiset.meq_trans	40
Coq.Sets.Multiset.meq_sym	40	3.0.0	search with cache (only 1: destruct y; only 1: unfold meq; only 1: auto).	0.0108759403229	6
Coq.Sets.Multiset.munion_empty_left	40	0.0.0	search with cache (only 1: destruct x; only 1: unfold meq; only 1: reflexivity).	0.0105152130127	3
Coq.Sets.Multiset.munion_empty_right	40	0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: simpl; only 1: auto).	0.0124640464783	4
Coq.Sets.Multiset.munion_comm	40	21.0.0.3.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	23.5354130268	41518
Coq.Sets.Multiset.munion_ass	40	1.0.0.5.0	search with cache (only 1: unfold meq; only 1: simpl; only 1: destruct x; only 1: destruct y; only 1: auto with arith).	0.596009016037	396
Coq.Sets.Multiset.meq_left	40	0.1.0.0.1.0.0	search with cache (only 1: unfold meq; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: unfold munion; only 1: auto with arith).	0.0472159385681	24
Coq.Sets.Multiset.meq_right	40	0.0.0.0.0.0.0.0.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: intros; only 1: elim H; only 1: auto with arith).	0.0262360572815	9
Coq.Sets.Multiset.munion_rotate	40
Coq.Sets.Multiset.meq_congr	40	2.0.0.0.1.2.0	search with cache (only 1: unfold meq; only 1: unfold munion; only 1: unfold multiplicity; only 1: destruct x; only 1: destruct y; only 1: destruct z; only 1: auto with arith).	1.04703187943	723
Coq.Sets.Multiset.munion_perm_left	40
Coq.Sets.Multiset.multiset_twist1	40
Coq.Sets.Multiset.multiset_twist2	40
Coq.Sets.Multiset.treesort_twist1	40
Coq.Sets.Multiset.treesort_twist2	40	0.1.1.1.2.0.0.0.1.0.4	search with cache (only 1: unfold meq; only 1: intros; only 1: apply meq_trans with (munion x (munion (munion y z) t)); only 1: apply meq_right; only 1: apply meq_left; only 1: trivial; only 1: apply meq_trans with (munion (munion x (munion y z)) t); only 1: apply meq_sym; only 1: apply munion_ass; only 1: apply meq_left; only 1: apply munion_perm_left).	19.6803660393	15942
Coq.Sets.Multiset.meq_singleton	40
Coq.Sets.Integers.le_reflexive	40	2	search with cache (only 1: auto with sets arith).	0.00566601753235	3
Coq.Sets.Integers.le_antisym	40	2.4.0	search with cache (only 1: red; only 1: intros Y c2 H'0; only 1: auto with sets arith).	0.0588600635529	48
Coq.Sets.Integers.le_trans	40	0.0.12.0.4.0	search with cache (only 1: red; only 1: intro H'0; only 1: intros x y H H'; only 1: elim H'; only 1: auto; only 1: auto).	2.84418296814	2864
Coq.Sets.Integers.le_Order	40
Coq.Sets.Integers.triv_nat	40	49.5	search with cache (only 1: intros; only 1: split).	1.0590569973	4654
Coq.Sets.Integers.nat_po	40
Coq.Sets.Integers.le_total_order	40
Coq.Sets.Integers.Finite_subset_has_lub	40
Coq.Sets.Integers.Integers_has_no_ub	40
Coq.Sets.Integers.Integers_infinite	40
Coq.Sets.Relations_1_facts.Rsym_imp_notRsym	40	3.1.1.2	search with cache (only 1: intros; only 1: red; only 1: red; only 1: auto).	0.0280220508575	81
Coq.Sets.Relations_1_facts.Equiv_from_preorder	40
Coq.Sets.Relations_1_facts.Equiv_from_order	40	2.1.0.0.0	search with cache (only 1: intros U R H'; only 1: elim H'; only 1: intros H'0 H'1; only 1: red in H'1; only 1: auto  10 with sets).	0.121057987213	67
Coq.Sets.Relations_1_facts.contains_is_preorder	40	0.6.6.3.10	search with cache (only 1: intros; only 1: constructor; only 1: auto  10 with sets; only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.152083158493	809
Coq.Sets.Relations_1_facts.same_relation_is_equivalence	40
Coq.Sets.Relations_1_facts.cong_reflexive_same_relation	40	4.2.2.11.3	search with cache (only 1: unfold same_relation at 1; only 1: intros x y z h; only 1: elim h; only 1: intros H'3 H'4; only 1: auto  10 with sets).	5.53424596786	17546
Coq.Sets.Relations_1_facts.cong_symmetric_same_relation	40	0.0	search with cache (only 1: unfold same_relation; only 1: intuition).	0.00700306892395	2
Coq.Sets.Relations_1_facts.cong_antisymmetric_same_relation	40	3.1.1.0.0	search with cache (only 1: compute; only 1: intros; only 1: elim H; only 1: elim H; only 1: auto with sets).	0.0404391288757	29
Coq.Sets.Relations_1_facts.cong_transitive_same_relation	40
Coq.Sets.Relations_2_facts.Rstar_reflexive	40	2.0	search with cache (only 1: intros H'0 H'1; only 1: auto  10 with sets).	0.00608706474304	4
Coq.Sets.Relations_2_facts.Rplus_contains_R	40	0	search with cache (only 1: auto  10 with sets).	0.0044949054718	1
Coq.Sets.Relations_2_facts.Rstar_contains_R	40
Coq.Sets.Relations_2_facts.Rstar_contains_Rplus	40	1.0.0.0.0.0.23.0.1	search with cache (only 1: intros U R; only 1: red; only 1: induction 1; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets; only 1: apply Rstar_n with y; only 1: auto with sets; only 1: auto with sets).	21.511744976	52384
Coq.Sets.Relations_2_facts.Rstar_transitive	40
Coq.Sets.Relations_2_facts.Rstar_cases	40
Coq.Sets.Relations_2_facts.Rstar_equiv_Rstar1	40
Coq.Sets.Relations_2_facts.Rsym_imp_Rstarsym	40
Coq.Sets.Relations_2_facts.Sstar_contains_Rstar	40	0.0.0.0.0.2.1.0.0.1.0.0	search with cache (only 1: intuition; only 1: red; only 1: intros x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: generalize Rstar_transitive; only 1: intro T1; only 1: red in T1; only 1: apply T1 with y0; only 1: auto with sets; only 1: auto with sets).	0.967499017715	1621
Coq.Sets.Relations_2_facts.star_monotone	40	0.0.7.3.0.0.0.1	search with cache (only 1: unfold contains; only 1: intros U R S H' x y H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x0 y0 z H'1 H'2 H'3; only 1: apply Rstar_n with y0; only 1: auto with sets; only 1: auto with sets).	16.8652830124	18385
Coq.Sets.Relations_2_facts.RstarRplus_RRstar	40
Coq.Sets.Relations_2_facts.Lemma1	40
Coq.Sets.Permut.cong_congr	40
Coq.Sets.Permut.comm_right	40	4.1.0	search with cache (only 1: intros; only 1: apply cong_right; only 1: trivial).	0.0202269554138	18
Coq.Sets.Permut.comm_left	40	0.3.0	search with cache (only 1: intros; only 1: apply cong_left; only 1: apply op_comm).	0.00819206237793	6
Coq.Sets.Permut.perm_right	40
Coq.Sets.Permut.perm_left	40
Coq.Sets.Permut.op_rotate	40	8.0.0.2.0	search with cache (only 1: intros; only 1: apply cong_trans with (op (op x y) z); only 1: apply cong_sym; only 1: apply op_ass; only 1: apply op_comm).	2.28397107124	2218
Coq.Sets.Permut.twist	40
Coq.Sets.Image.Im_def	40
Coq.Sets.Image.Im_add	40
Coq.Sets.Image.image_empty	40	1.1.0.0.0.0.0.10	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: destruct 1; only 1: destruct 1).	0.370904922485	310
Coq.Sets.Image.finite_image	40
Coq.Sets.Image.Im_inv	40	1.14.1.3	search with cache (only 1: intros X f H'; only 1: destruct 1; only 1: exists x; only 1: auto using Im_def with sets).	3.76088094711	5278
Coq.Sets.Image.not_injective_elim	40
Coq.Sets.Image.cardinal_Im_intro	40
Coq.Sets.Image.In_Image_elim	40
Coq.Sets.Image.injective_preserves_cardinal	40
Coq.Sets.Image.cardinal_decreases	40
Coq.Sets.Image.Pigeonhole	40
Coq.Sets.Image.Pigeonhole_principle	40
Coq.Sets.Infinite_sets.make_new_approximant	40
Coq.Sets.Infinite_sets.approximants_grow	40
Coq.Sets.Infinite_sets.approximants_grow'	40
Coq.Sets.Infinite_sets.approximant_can_be_any_size	40
Coq.Sets.Infinite_sets.Image_set_continuous	40
Coq.Sets.Infinite_sets.Image_set_continuous'	40
Coq.Sets.Infinite_sets.Pigeonhole_bis	40
Coq.Sets.Infinite_sets.Pigeonhole_ter	40
Coq.Sets.Powerset.Empty_set_minimal	40	12.7	search with cache (only 1: red; only 1: destruct 1).	0.125936031342	558
Coq.Sets.Powerset.Power_set_Inhabited	40	12.38.51	search with cache (only 1: intro x; only 1: exists x; only 1: auto with sets).	2.02823281288	21505
Coq.Sets.Powerset.Inclusion_is_an_order	40	1.0.3.3.8	search with cache (only 1: constructor; only 1: auto with sets; only 1: auto with sets; only 1: intro X; only 1: auto with sets).	0.594874858856	864
Coq.Sets.Powerset.Inclusion_is_transitive	40	0	search with cache (only 1: auto  6 with sets).	0.00542902946472	1
Coq.Sets.Powerset.Power_set_PO	40
Coq.Sets.Powerset.Strict_Rel_is_Strict_Included	40	0.2	search with cache (only 1: red; only 1: auto with sets).	0.0067880153656	4
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive_with_inclusion_left	40
Coq.Sets.Powerset.Strict_inclusion_is_transitive	40	0.3.0.0.0.3.6	search with cache (only 1: elim Strict_Rel_is_Strict_Included; only 1: intros H'1 H'2 x y z H'3 H'4; only 1: apply H'1; only 1: apply Strict_Rel_Transitive_with_Rel with (y := y); only 1: auto with sets; only 1: apply H'1; only 1: auto with sets).	39.498857975	5304
Coq.Sets.Powerset.Empty_set_is_Bottom	40	0.4.2.0.15.17	search with cache (only 1: split; only 1: simpl; only 1: auto with sets; only 1: red; only 1: simpl; only 1: auto with sets).	36.892884016	45863
Coq.Sets.Powerset.Union_minimal	40
Coq.Sets.Powerset.Intersection_maximal	40	2.0.0.0	search with cache (only 1: intros a b X H' H'0; only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.0128140449524	11
Coq.Sets.Powerset.Union_increases_l	40	2.0.1	search with cache (only 1: red; only 1: intros x H'1; only 1: auto with sets).	0.00814580917358	6
Coq.Sets.Powerset.Union_increases_r	40	0	search with cache (only 1: auto with sets).	0.00496506690979	1
Coq.Sets.Powerset.Intersection_decreases_l	40	0.0.0.0.1.2	search with cache (only 1: intro A; only 1: intro X; only 1: red; only 1: intros x H'1; only 1: elim H'1; only 1: auto with sets).	0.0311548709869	33
Coq.Sets.Powerset.Intersection_decreases_r	40	0.0.0.0.0	search with cache (only 1: intros a b; only 1: red; only 1: intros x H'; only 1: elim H'; only 1: auto with sets).	0.0114879608154	5
Coq.Sets.Powerset.Union_is_Lub	40
Coq.Sets.Powerset.Intersection_is_Glb	40
Coq.Sets.Classical_sets.not_included_empty_Inhabited	40
Coq.Sets.Classical_sets.not_empty_Inhabited	40
Coq.Sets.Classical_sets.Inhabited_Setminus	40
Coq.Sets.Classical_sets.Strict_super_set_contains_new_element	40
Coq.Sets.Classical_sets.Subtract_intro	40	0.0.0.2.5	search with cache (only 1: intros; only 1: apply Setminus_intro; only 1: apply NNPP; only 1: auto with sets; only 1: auto with sets).	0.986621856689	371
Coq.Sets.Classical_sets.Subtract_inv	40	0.13.4	search with cache (only 1: intros A NI; only 1: simple destruct 1; only 1: auto with sets).	4.50972795486	4989
Coq.Sets.Classical_sets.Included_Strict_Included	40
Coq.Sets.Classical_sets.Strict_Included_inv	40
Coq.Sets.Classical_sets.not_SIncl_empty	40	1.0.11.3	search with cache (only 1: intros x H'; only 1: elim H'; only 1: intros; only 1: auto with sets).	2.00878405571	2167
Coq.Sets.Classical_sets.Complement_Complement	40
Coq.Sets.Relations_3_facts.Rstar_imp_coherent	40	1.1.3.0.3.2.1.5	search with cache (only 1: generalize Rstar_transitive; only 1: intro T; only 1: generalize Rstar_transitive; only 1: intros U R; only 1: intro T1; only 1: intros x1 y0 H'1; only 1: exists y0; only 1: auto with sets).	11.9627521038	18887
Coq.Sets.Relations_3_facts.coherent_symmetric	40
Coq.Sets.Relations_3_facts.Strong_confluence	40
Coq.Sets.Relations_3_facts.Strong_confluence_direct	40
Coq.Sets.Relations_3_facts.Noetherian_contains_Noetherian	40
Coq.Sets.Relations_3_facts.Newman	40
Coq.Sets.Powerset_Classical_facts.sincl_add_x	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_in	40	0.6.1.0	search with cache (only 1: intros A x y H'; only 1: intro H'3; only 1: elim H'3; only 1: auto with sets).	0.19929599762	126
Coq.Sets.Powerset_Classical_facts.incl_soustr	40	0.0.0.4.0	search with cache (only 1: intros X Y I NI; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets).	0.26164317131	30
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_l	40
Coq.Sets.Powerset_Classical_facts.incl_soustr_add_r	40
Coq.Sets.Powerset_Classical_facts.add_soustr_2	40
Coq.Sets.Powerset_Classical_facts.add_soustr_1	40	1.0.3.0.0.3.0.0.0.0	search with cache (only 1: intros X x H'; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets; only 1: intros H'1 H'2; only 1: elim H'2; only 1: auto with sets).	5.3206179142	5577
Coq.Sets.Powerset_Classical_facts.add_soustr_xy	40
Coq.Sets.Powerset_Classical_facts.incl_st_add_soustr	40
Coq.Sets.Powerset_Classical_facts.Sub_Add_new	40
Coq.Sets.Powerset_Classical_facts.Simplify_add	40
Coq.Sets.Powerset_Classical_facts.Included_Add	40
Coq.Sets.Powerset_Classical_facts.setcover_inv	40
Coq.Sets.Powerset_Classical_facts.Add_covers	40
Coq.Sets.Powerset_Classical_facts.covers_Add	40
Coq.Sets.Powerset_Classical_facts.covers_is_Add	40
Coq.Sets.Powerset_Classical_facts.Singleton_atomic	40
Coq.Sets.Powerset_Classical_facts.less_than_singleton	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive_with_Rel_left	40
Coq.Sets.Partial_Order.Strict_Rel_Transitive	40
Coq.Sets.Powerset_facts.Empty_set_zero	40	60	search with cache (only 1: auto  10 with sets).	3.01800394058	9884
Coq.Sets.Powerset_facts.Empty_set_zero_right	40	0	search with cache (only 1: auto  6 with sets).	0.00854802131653	1
Coq.Sets.Powerset_facts.Empty_set_zero'	40	0.11	search with cache (only 1: unfold Add at 1; only 1: auto  6 with sets).	0.145516872406	136
Coq.Sets.Powerset_facts.less_than_empty	40	0	search with cache (only 1: auto with sets).	0.00858688354492	1
Coq.Sets.Powerset_facts.Union_commutative	40	0	search with cache (only 1: auto with sets).	0.00908589363098	1
Coq.Sets.Powerset_facts.Union_associative	40	47.4	search with cache (only 1: intro H; only 1: auto  10 with sets).	27.3533530235	38445
Coq.Sets.Powerset_facts.Union_idempotent	40	0	search with cache (only 1: auto  6 with sets).	0.00958299636841	1
Coq.Sets.Powerset_facts.Union_absorbs	40	1	search with cache (only 1: auto  7 with sets).	0.0131981372833	2
Coq.Sets.Powerset_facts.Couple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_union	40
Coq.Sets.Powerset_facts.Triple_as_Couple	40	0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets).	0.609409809113	709
Coq.Sets.Powerset_facts.Triple_as_Couple_Singleton	40	0.0.0.1.1.0.0.0.0.0.0.0.0.0.0.0.0.0.0	search with cache (only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets; only 1: auto with sets; only 1: red; only 1: intros x0 H'; only 1: elim H'; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	21.8583419323	17710
Coq.Sets.Powerset_facts.Intersection_commutative	40	0.2.1.0.0.2.1.0.5.4.3	search with cache (only 1: intros x y; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets).	1.7955698967	2829
Coq.Sets.Powerset_facts.Distributivity	40
Coq.Sets.Powerset_facts.Distributivity_l	40
Coq.Sets.Powerset_facts.Distributivity'	40
Coq.Sets.Powerset_facts.Union_add	40	0.3.4	search with cache (only 1: unfold Add at 1; only 1: unfold Add at 1; only 1: auto  9 with sets).	0.140215873718	78
Coq.Sets.Powerset_facts.Non_disjoint_union	40	0.0.0.1.2.0.0.2.0.5.1.2	search with cache (only 1: unfold Add at 1; only 1: intros x y z; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x1 H'0; only 1: elim H'0; only 1: auto with sets; only 1: intros x2 H'1; only 1: elim H'1; only 1: auto with sets; only 1: auto with sets).	3.43613004684	4418
Coq.Sets.Powerset_facts.Non_disjoint_union'	40
Coq.Sets.Powerset_facts.singlx	40	0.0.0.0.0.1.1.0	search with cache (only 1: unfold Add at 1; only 1: intros x y H'; only 1: elim H'; only 1: intros t H'1; only 1: elim H'1; only 1: intros t H'1; only 1: elim H'1; only 1: auto with sets).	0.0187578201294	10
Coq.Sets.Powerset_facts.incl_add	40	1.0	search with cache (only 1: unfold Add; only 1: auto using Union_associative with sets).	0.00795602798462	3
Coq.Sets.Powerset_facts.incl_add_x	40
Coq.Sets.Powerset_facts.Add_commutative	40	3.0.0	search with cache (only 1: intros X x H'; only 1: unfold Add; only 1: auto  9 with sets).	0.0361559391022	6
Coq.Sets.Powerset_facts.Add_commutative'	40
Coq.Sets.Powerset_facts.Add_distributes	40
Coq.Sets.Powerset_facts.setcover_intro	40	2.0	search with cache (only 1: intros H'1 H'2; only 1: auto with sets).	0.00701212882996	4
Coq.Sets.Powerset_facts.Disjoint_Intersection	40
Coq.Sets.Powerset_facts.Intersection_Empty_set_l	40	1.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intuition; only 1: intuition).	0.0116219520569	7
Coq.Sets.Powerset_facts.Intersection_Empty_set_r	40	0.0	search with cache (only 1: intros; only 1: auto with sets).	0.0106699466705	2
Coq.Sets.Powerset_facts.Seminus_Empty_set_l	40	2.0.0.1.0.0.1.4	search with cache (only 1: intros X H'; only 1: apply Extensionality_Ensembles; only 1: split; only 1: red; only 1: intros x0 H'0; only 1: elim H'0; only 1: auto with sets; only 1: auto with sets).	1.04119205475	1223
Coq.Sets.Powerset_facts.Seminus_Empty_set_r	40	0.0.0.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: destruct H1; only 1: unfold In in *; only 1: assumption; only 1: intuition).	0.022716999054	9
Coq.Sets.Powerset_facts.Setminus_Union_l	40
Coq.Sets.Powerset_facts.Setminus_Union_r	40
Coq.Sets.Powerset_facts.Setminus_Disjoint_noop	40
Coq.Sets.Powerset_facts.Setminus_Included_empty	40	0.0.4.0.1.0.0.0	search with cache (only 1: intros; only 1: apply Extensionality_Ensembles; only 1: split; only 1: intros x H1; only 1: inversion_clear H1; only 1: contradict H; only 1: intuition; only 1: intuition).	0.515611886978	468
Coq.Sets.Constructive_sets.Extension	40	0.9.0.9.0.1.16.1.1	search with cache (only 1: red; only 1: intro x; only 1: intros; only 1: destruct H; only 1: split; only 1: red; only 1: auto; only 1: red; only 1: auto).	2.2797100544	16645
Coq.Sets.Constructive_sets.Noone_in_empty	40	26.1.2	search with cache (only 1: unfold not; only 1: intro H; only 1: contradiction).	0.374398946762	2419
Coq.Sets.Constructive_sets.Included_Empty	40	1.0.0	search with cache (only 1: red; only 1: red; only 1: destruct 1).	0.00636219978333	4
Coq.Sets.Constructive_sets.Add_intro1	40	1.18.2.11.2	search with cache (only 1: intros B C H'; only 1: intro; only 1: red; only 1: constructor; only 1: auto with sets).	5.58361983299	34937
Coq.Sets.Constructive_sets.Add_intro2	40	0.0	search with cache (only 1: unfold Add at 1; only 1: auto with sets).	0.00556302070618	2
Coq.Sets.Constructive_sets.Inhabited_add	40	0.10.9.2.0	search with cache (only 1: unfold Add at 1; only 1: intro; only 1: intro; only 1: exists x; only 1: auto with sets).	0.557694911957	2669
Coq.Sets.Constructive_sets.Inhabited_not_empty	40
Coq.Sets.Constructive_sets.Add_not_Empty	40	0.25.4.4.2.2	search with cache (only 1: red; only 1: intro H'1; only 1: intros x H; only 1: elim (Noone_in_empty x); only 1: destruct H; only 1: auto using Add_intro2 with sets).	26.398206234	137202
Coq.Sets.Constructive_sets.not_Empty_Add	40	0.2.4.1.1.0	search with cache (only 1: intros A x; only 1: red; only 1: intro H'1; only 1: elim (Noone_in_empty x); only 1: rewrite H'1; only 1: auto using Add_intro2 with sets).	0.307179927826	544
Coq.Sets.Constructive_sets.Singleton_inv	40	0.8	search with cache (only 1: destruct 1; only 1: auto with sets).	0.0147311687469	19
Coq.Sets.Constructive_sets.Singleton_intro	40	1.5.0	search with cache (only 1: intros x y H'; only 1: elim H'; only 1: auto using Noone_in_empty with sets).	0.00856304168701	9
Coq.Sets.Constructive_sets.Union_inv	40	0.0.9	search with cache (only 1: destruct 1; only 1: auto using Noone_in_empty with sets; only 1: auto using Noone_in_empty with sets).	0.0932228565216	145
Coq.Sets.Constructive_sets.Add_inv	40
Coq.Sets.Constructive_sets.Intersection_inv	40	0.0.0	search with cache (only 1: intros B C x H'; only 1: elim H'; only 1: auto with sets).	0.00950002670288	3
Coq.Sets.Constructive_sets.Couple_inv	40	0.2.0.1.1.0	search with cache (only 1: intros x y H'; only 1: destruct 1; only 1: left; only 1: trivial with sets; only 1: right; only 1: trivial with sets).	0.0161249637604	12
Coq.Sets.Constructive_sets.Setminus_intro	40	1.0	search with cache (only 1: intros B C x H'; only 1: auto with sets).	0.00725507736206	3
Coq.Sets.Constructive_sets.Strict_Included_intro	40	1.0	search with cache (only 1: intros B C H'; only 1: auto with sets).	0.00706601142883	3
Coq.Sets.Constructive_sets.Strict_Included_strict	40	2.11.1	search with cache (only 1: red; only 1: destruct 1; only 1: auto with sets).	0.304830789566	862
Coq.Sets.Finite_sets_facts.finite_cardinal	40
Coq.Sets.Finite_sets_facts.cardinal_finite	40	0.0.15.2	search with cache (only 1: intros X x H'; only 1: elim H'; only 1: auto with sets; only 1: auto with sets).	0.237412929535	452
Coq.Sets.Finite_sets_facts.Add_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Singleton_is_finite	40	1.8.27	search with cache (only 1: intro; only 1: rewrite <- (Empty_set_zero' U x); only 1: auto with sets).	0.26984000206	1482
Coq.Sets.Finite_sets_facts.Union_preserves_Finite	40
Coq.Sets.Finite_sets_facts.Finite_downward_closed	40
Coq.Sets.Finite_sets_facts.Intersection_preserves_finite	40
Coq.Sets.Finite_sets_facts.cardinalO_empty	40
Coq.Sets.Finite_sets_facts.inh_card_gt_O	40
Coq.Sets.Finite_sets_facts.card_soustr_1	40
Coq.Sets.Finite_sets_facts.cardinal_is_functional	40
Coq.Sets.Finite_sets_facts.cardinal_Empty	40
Coq.Sets.Finite_sets_facts.cardinal_unicity	40
Coq.Sets.Finite_sets_facts.card_Add_gen	40
Coq.Sets.Finite_sets_facts.incl_st_card_lt	40
Coq.Sets.Finite_sets_facts.incl_card_le	40
Coq.Sets.Finite_sets_facts.G_aux	40
Coq.Sets.Finite_sets_facts.Generalized_induction_on_finite_sets	40
Coq.Sets.Finite_sets.cardinal_invert	40
Coq.Sets.Finite_sets.cardinal_elim	40	4.0.1	search with cache (only 1: induction 1; only 1: auto; only 1: auto using Noone_in_empty with sets).	0.0519909858704	62